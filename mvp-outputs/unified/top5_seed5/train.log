Random seed set as 5

 ============================== NEW EXP: unified on seed5 ============================== 

Here is an example (from the dev set):
Total examples = 8078
Ori sent size: 8078
Input size: 40390 40390
Examples:
[['asqp', ':', 'rest15', ':', '$', '20', 'for', 'all', 'you', 'can', 'eat', 'sushi', 'can', 'not', 'be', 'beaten', '.', '[A]', '[O]', '[S]', '[C]'], ['asqp', ':', 'rest15', ':', '$', '20', 'for', 'all', 'you', 'can', 'eat', 'sushi', 'can', 'not', 'be', 'beaten', '.', '[O]', '[A]', '[C]', '[S]'], ['asqp', ':', 'rest15', ':', '$', '20', 'for', 'all', 'you', 'can', 'eat', 'sushi', 'can', 'not', 'be', 'beaten', '.', '[A]', '[O]', '[C]', '[S]'], ['asqp', ':', 'rest15', ':', '$', '20', 'for', 'all', 'you', 'can', 'eat', 'sushi', 'can', 'not', 'be', 'beaten', '.', '[O]', '[A]', '[S]', '[C]'], ['asqp', ':', 'rest15', ':', '$', '20', 'for', 'all', 'you', 'can', 'eat', 'sushi', 'can', 'not', 'be', 'beaten', '.', '[O]', '[S]', '[C]', '[A]'], ['aste', ':', 'rest14', ':', '$', '20', 'for', 'all', 'you', 'can', 'eat', 'sushi', 'can', 'not', 'be', 'beaten', '.', '[O]', '[A]', '[S]'], ['aste', ':', 'rest14', ':', '$', '20', 'for', 'all', 'you', 'can', 'eat', 'sushi', 'can', 'not', 'be', 'beaten', '.', '[O]', '[S]', '[A]'], ['aste', ':', 'rest14', ':', '$', '20', 'for', 'all', 'you', 'can', 'eat', 'sushi', 'can', 'not', 'be', 'beaten', '.', '[A]', '[O]', '[S]'], ['aste', ':', 'rest14', ':', '$', '20', 'for', 'all', 'you', 'can', 'eat', 'sushi', 'can', 'not', 'be', 'beaten', '.', '[A]', '[S]', '[O]'], ['aste', ':', 'rest14', ':', '$', '20', 'for', 'all', 'you', 'can', 'eat', 'sushi', 'can', 'not', 'be', 'beaten', '.', '[S]', '[O]', '[A]']]
['[A] all you can eat sushi [O] beaten [S] great [C] food prices', '[O] beaten [A] all you can eat sushi [C] food prices [S] great', '[A] all you can eat sushi [O] beaten [C] food prices [S] great', '[O] beaten [A] all you can eat sushi [S] great [C] food prices', '[O] beaten [S] great [C] food prices [A] all you can eat sushi', '[O] can not be beaten [A] sushi [S] ok', '[O] can not be beaten [S] ok [A] sushi', '[A] sushi [O] can not be beaten [S] ok', '[A] sushi [S] ok [O] can not be beaten', '[S] ok [O] can not be beaten [A] sushi']
Input : asqp : rest15 : $ 20 for all you can eat sushi can not be beaten. [A] [O] [S] [C]
Input : ['▁as', 'q', 'p', '▁', ':', '▁rest', '15', '▁', ':', '▁$', '▁20', '▁for', '▁all', '▁you', '▁can', '▁', 'eat', '▁sushi', '▁can', '▁not', '▁be', '▁', 'beaten', '▁', '.', '▁[', 'A', ']', '▁[', 'O', ']', '▁[', 'S', ']', '▁[', 'C', ']', '</s>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>']
Output: [A] all you can eat sushi [O] beaten [S] great [C] food prices

Input : asqp : rest15 : $ 20 for all you can eat sushi can not be beaten. [O] [A] [C] [S]
Input : ['▁as', 'q', 'p', '▁', ':', '▁rest', '15', '▁', ':', '▁$', '▁20', '▁for', '▁all', '▁you', '▁can', '▁', 'eat', '▁sushi', '▁can', '▁not', '▁be', '▁', 'beaten', '▁', '.', '▁[', 'O', ']', '▁[', 'A', ']', '▁[', 'C', ']', '▁[', 'S', ']', '</s>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>']
Output: [O] beaten [A] all you can eat sushi [C] food prices [S] great

Input : asqp : rest15 : $ 20 for all you can eat sushi can not be beaten. [A] [O] [C] [S]
Input : ['▁as', 'q', 'p', '▁', ':', '▁rest', '15', '▁', ':', '▁$', '▁20', '▁for', '▁all', '▁you', '▁can', '▁', 'eat', '▁sushi', '▁can', '▁not', '▁be', '▁', 'beaten', '▁', '.', '▁[', 'A', ']', '▁[', 'O', ']', '▁[', 'C', ']', '▁[', 'S', ']', '</s>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>']
Output: [A] all you can eat sushi [O] beaten [C] food prices [S] great

Input : asqp : rest15 : $ 20 for all you can eat sushi can not be beaten. [O] [A] [S] [C]
Input : ['▁as', 'q', 'p', '▁', ':', '▁rest', '15', '▁', ':', '▁$', '▁20', '▁for', '▁all', '▁you', '▁can', '▁', 'eat', '▁sushi', '▁can', '▁not', '▁be', '▁', 'beaten', '▁', '.', '▁[', 'O', ']', '▁[', 'A', ']', '▁[', 'S', ']', '▁[', 'C', ']', '</s>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>']
Output: [O] beaten [A] all you can eat sushi [S] great [C] food prices

Input : asqp : rest15 : $ 20 for all you can eat sushi can not be beaten. [O] [S] [C] [A]
Input : ['▁as', 'q', 'p', '▁', ':', '▁rest', '15', '▁', ':', '▁$', '▁20', '▁for', '▁all', '▁you', '▁can', '▁', 'eat', '▁sushi', '▁can', '▁not', '▁be', '▁', 'beaten', '▁', '.', '▁[', 'O', ']', '▁[', 'S', ']', '▁[', 'C', ']', '▁[', 'A', ']', '</s>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>']
Output: [O] beaten [S] great [C] food prices [A] all you can eat sushi

Input : aste : rest14 : $ 20 for all you can eat sushi can not be beaten. [O] [A] [S]
Input : ['▁', 'aste', '▁', ':', '▁rest', '14', '▁', ':', '▁$', '▁20', '▁for', '▁all', '▁you', '▁can', '▁', 'eat', '▁sushi', '▁can', '▁not', '▁be', '▁', 'beaten', '▁', '.', '▁[', 'O', ']', '▁[', 'A', ']', '▁[', 'S', ']', '</s>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>']
Output: [O] can not be beaten [A] sushi [S] ok

Input : aste : rest14 : $ 20 for all you can eat sushi can not be beaten. [O] [S] [A]
Input : ['▁', 'aste', '▁', ':', '▁rest', '14', '▁', ':', '▁$', '▁20', '▁for', '▁all', '▁you', '▁can', '▁', 'eat', '▁sushi', '▁can', '▁not', '▁be', '▁', 'beaten', '▁', '.', '▁[', 'O', ']', '▁[', 'S', ']', '▁[', 'A', ']', '</s>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>']
Output: [O] can not be beaten [S] ok [A] sushi

Input : aste : rest14 : $ 20 for all you can eat sushi can not be beaten. [A] [O] [S]
Input : ['▁', 'aste', '▁', ':', '▁rest', '14', '▁', ':', '▁$', '▁20', '▁for', '▁all', '▁you', '▁can', '▁', 'eat', '▁sushi', '▁can', '▁not', '▁be', '▁', 'beaten', '▁', '.', '▁[', 'A', ']', '▁[', 'O', ']', '▁[', 'S', ']', '</s>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>']
Output: [A] sushi [O] can not be beaten [S] ok

Input : aste : rest14 : $ 20 for all you can eat sushi can not be beaten. [A] [S] [O]
Input : ['▁', 'aste', '▁', ':', '▁rest', '14', '▁', ':', '▁$', '▁20', '▁for', '▁all', '▁you', '▁can', '▁', 'eat', '▁sushi', '▁can', '▁not', '▁be', '▁', 'beaten', '▁', '.', '▁[', 'A', ']', '▁[', 'S', ']', '▁[', 'O', ']', '</s>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>']
Output: [A] sushi [S] ok [O] can not be beaten

Input : aste : rest14 : $ 20 for all you can eat sushi can not be beaten. [S] [O] [A]
Input : ['▁', 'aste', '▁', ':', '▁rest', '14', '▁', ':', '▁$', '▁20', '▁for', '▁all', '▁you', '▁can', '▁', 'eat', '▁sushi', '▁can', '▁not', '▁be', '▁', 'beaten', '▁', '.', '▁[', 'S', ']', '▁[', 'O', ']', '▁[', 'A', ']', '</s>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>', '<pad>']
Output: [S] ok [O] can not be beaten [A] sushi


****** Conduct Training ******
load training data.
Total examples = 8078
Ori sent size: 8078
Input size: 40390 40390
Examples:
[['asqp', ':', 'rest15', ':', '$', '20', 'for', 'all', 'you', 'can', 'eat', 'sushi', 'can', 'not', 'be', 'beaten', '.', '[A]', '[O]', '[S]', '[C]'], ['asqp', ':', 'rest15', ':', '$', '20', 'for', 'all', 'you', 'can', 'eat', 'sushi', 'can', 'not', 'be', 'beaten', '.', '[O]', '[A]', '[C]', '[S]'], ['asqp', ':', 'rest15', ':', '$', '20', 'for', 'all', 'you', 'can', 'eat', 'sushi', 'can', 'not', 'be', 'beaten', '.', '[A]', '[O]', '[C]', '[S]'], ['asqp', ':', 'rest15', ':', '$', '20', 'for', 'all', 'you', 'can', 'eat', 'sushi', 'can', 'not', 'be', 'beaten', '.', '[O]', '[A]', '[S]', '[C]'], ['asqp', ':', 'rest15', ':', '$', '20', 'for', 'all', 'you', 'can', 'eat', 'sushi', 'can', 'not', 'be', 'beaten', '.', '[O]', '[S]', '[C]', '[A]'], ['aste', ':', 'rest14', ':', '$', '20', 'for', 'all', 'you', 'can', 'eat', 'sushi', 'can', 'not', 'be', 'beaten', '.', '[O]', '[A]', '[S]'], ['aste', ':', 'rest14', ':', '$', '20', 'for', 'all', 'you', 'can', 'eat', 'sushi', 'can', 'not', 'be', 'beaten', '.', '[O]', '[S]', '[A]'], ['aste', ':', 'rest14', ':', '$', '20', 'for', 'all', 'you', 'can', 'eat', 'sushi', 'can', 'not', 'be', 'beaten', '.', '[A]', '[O]', '[S]'], ['aste', ':', 'rest14', ':', '$', '20', 'for', 'all', 'you', 'can', 'eat', 'sushi', 'can', 'not', 'be', 'beaten', '.', '[A]', '[S]', '[O]'], ['aste', ':', 'rest14', ':', '$', '20', 'for', 'all', 'you', 'can', 'eat', 'sushi', 'can', 'not', 'be', 'beaten', '.', '[S]', '[O]', '[A]']]
['[A] all you can eat sushi [O] beaten [S] great [C] food prices', '[O] beaten [A] all you can eat sushi [C] food prices [S] great', '[A] all you can eat sushi [O] beaten [C] food prices [S] great', '[O] beaten [A] all you can eat sushi [S] great [C] food prices', '[O] beaten [S] great [C] food prices [A] all you can eat sushi', '[O] can not be beaten [A] sushi [S] ok', '[O] can not be beaten [S] ok [A] sushi', '[A] sushi [O] can not be beaten [S] ok', '[A] sushi [S] ok [O] can not be beaten', '[S] ok [O] can not be beaten [A] sushi']
Sanity Checking: 0it [00:00, ?it/s]Total examples = 898
Ori sent size: 898
Input size: 898 898
Examples:
[['acos', ':', 'rest16', ':', 'by', 'far', ',', 'the', 'best', 'pizza', 'in', 'manhattan', '.', '[A]', '[O]', '[S]', '[C]'], ['aste', ':', 'rest14', ':', 'despite', 'the', 'fact', 'that', 'the', 'space', 'is', 'large', ',', 'they', "'ve", 'overcrowded', 'the', 'floor', 'with', 'tables', '.', '[O]', '[A]', '[S]'], ['tasd', ':', 'rest15', ':', 'i', 'know', ',', 'you', 'were', 'too', 'busy', 'showing', 'off', 'your', 'vintage', 'tee', 'shirt', 'and', 'looking', 'bored', ',', 'but', 'my', 'agenda', 'is', 'i', "'m", 'here', 'to', 'eat', 'and', 'enjoy', 'the', 'company', 'of', 'friends', ',', 'seeking', 'a', 'pleasant', 'experience', '.', '[A]', '[C]', '[S]'], ['aste', ':', 'laptop14', ':', 'it', 'discharges', 'too', 'quickly', '.', '[O]', '[A]', '[S]'], ['acos', ':', 'laptop16', ':', 'do', 'your', 'research', ',', 'learn', 'how', 'to', 'optimize', 'your', 'experience', ',', 'and', 'you', "'", 'll', 'love', 'it', '!', '[A]', '[O]', '[S]', '[C]'], ['aste', ':', 'rest14', ':', 'this', 'place', 'is', 'worth', 'going', 'even', 'if', 'only', 'for', 'their', 'beer', '.', '[O]', '[A]', '[S]'], ['tasd', ':', 'rest15', ':', 'not', 'impressed', 'with', 'the', 'food', '.', '[A]', '[C]', '[S]'], ['asqp', ':', 'rest15', ':', 'the', 'waitress', 'moved', 'our', 'table', 'practically', 'into', 'the', 'bathroom', 'and', 'when', 'we', 'asked', 'to', 'cancel', 'our', 'dinner', 'orders', 'because', 'we', 'did', 'not', 'want', 'to', 'eat', 'sitting', 'on', 'the', 'toilet', ',', 'we', 'were', 'told', 'no', '...', '[A]', '[O]', '[S]', '[C]'], ['acos', ':', 'laptop16', ':', 'i', 'really', 'like', 'my', 'chromebook', '.', '[A]', '[O]', '[S]', '[C]'], ['acos', ':', 'laptop16', ':', 'i', 'was', 'extremely', 'hesitant', 'to', 'buy', 'a', 'used', 'macbook', 'pro', '(', 'it', "'", 's', 'still', 'a', 'lot', 'of', 'money', ')', 'but', 'so', 'far', 'am', 'surprisingly', 'pleased', 'with', 'it', '.', '[A]', '[O]', '[S]', '[C]']]
['[A] pizza [O] best [S] great [C] food quality', '[O] large [A] space [S] great [SSEP] [O] overcrowded [A] tables [S] bad', '[A] it [C] service general [S] bad', '[O] quickly [A] discharges [S] bad', '[A] it [O] love [S] great [C] laptop general', '[O] worth going [A] beer [S] great', '[A] food [C] food quality [S] bad', '[A] waitress [O] sitting on the toilet [S] bad [C] service general', '[A] chromebook [O] like [S] great [C] laptop general', '[A] macbook pro [O] hesitant [S] ok [C] laptop general [SSEP] [A] macbook pro [O] pleased [S] great [C] laptop general']
Sanity Checking:   0%|          | 0/2 [00:00<?, ?it/s]Sanity Checking DataLoader 0:   0%|          | 0/2 [00:00<?, ?it/s]number of gold spans: 106, predicted spans: 64, hit: 0
number of gold spans: 102, predicted spans: 64, hit: 0
Sanity Checking DataLoader 0: 100%|██████████| 2/2 [00:16<00:00,  8.24s/it]                                                                           load training data.
Total examples = 8078
Ori sent size: 8078
Input size: 40390 40390
Examples:
[['asqp', ':', 'rest15', ':', '$', '20', 'for', 'all', 'you', 'can', 'eat', 'sushi', 'can', 'not', 'be', 'beaten', '.', '[A]', '[O]', '[S]', '[C]'], ['asqp', ':', 'rest15', ':', '$', '20', 'for', 'all', 'you', 'can', 'eat', 'sushi', 'can', 'not', 'be', 'beaten', '.', '[O]', '[A]', '[C]', '[S]'], ['asqp', ':', 'rest15', ':', '$', '20', 'for', 'all', 'you', 'can', 'eat', 'sushi', 'can', 'not', 'be', 'beaten', '.', '[A]', '[O]', '[C]', '[S]'], ['asqp', ':', 'rest15', ':', '$', '20', 'for', 'all', 'you', 'can', 'eat', 'sushi', 'can', 'not', 'be', 'beaten', '.', '[O]', '[A]', '[S]', '[C]'], ['asqp', ':', 'rest15', ':', '$', '20', 'for', 'all', 'you', 'can', 'eat', 'sushi', 'can', 'not', 'be', 'beaten', '.', '[O]', '[S]', '[C]', '[A]'], ['aste', ':', 'rest14', ':', '$', '20', 'for', 'all', 'you', 'can', 'eat', 'sushi', 'can', 'not', 'be', 'beaten', '.', '[O]', '[A]', '[S]'], ['aste', ':', 'rest14', ':', '$', '20', 'for', 'all', 'you', 'can', 'eat', 'sushi', 'can', 'not', 'be', 'beaten', '.', '[O]', '[S]', '[A]'], ['aste', ':', 'rest14', ':', '$', '20', 'for', 'all', 'you', 'can', 'eat', 'sushi', 'can', 'not', 'be', 'beaten', '.', '[A]', '[O]', '[S]'], ['aste', ':', 'rest14', ':', '$', '20', 'for', 'all', 'you', 'can', 'eat', 'sushi', 'can', 'not', 'be', 'beaten', '.', '[A]', '[S]', '[O]'], ['aste', ':', 'rest14', ':', '$', '20', 'for', 'all', 'you', 'can', 'eat', 'sushi', 'can', 'not', 'be', 'beaten', '.', '[S]', '[O]', '[A]']]
['[A] all you can eat sushi [O] beaten [S] great [C] food prices', '[O] beaten [A] all you can eat sushi [C] food prices [S] great', '[A] all you can eat sushi [O] beaten [C] food prices [S] great', '[O] beaten [A] all you can eat sushi [S] great [C] food prices', '[O] beaten [S] great [C] food prices [A] all you can eat sushi', '[O] can not be beaten [A] sushi [S] ok', '[O] can not be beaten [S] ok [A] sushi', '[A] sushi [O] can not be beaten [S] ok', '[A] sushi [S] ok [O] can not be beaten', '[S] ok [O] can not be beaten [A] sushi']
Training: 0it [00:00, ?it/s]Training:   0%|          | 0/2524 [00:00<?, ?it/s]Epoch 0:   0%|          | 0/2524 [00:00<?, ?it/s] Epoch 0:   0%|          | 10/2524 [00:04<18:15,  2.30it/s]Epoch 0:   0%|          | 10/2524 [00:04<18:17,  2.29it/s, loss=2.46, v_num=3]Epoch 0:   1%|          | 20/2524 [00:08<17:30,  2.38it/s, loss=2.46, v_num=3]Epoch 0:   1%|          | 20/2524 [00:08<17:31,  2.38it/s, loss=1.94, v_num=3]Epoch 0:   1%|          | 30/2524 [00:12<17:11,  2.42it/s, loss=1.94, v_num=3]Epoch 0:   1%|          | 30/2524 [00:12<17:12,  2.42it/s, loss=1.21, v_num=3]Epoch 0:   2%|▏         | 40/2524 [00:16<17:00,  2.43it/s, loss=1.21, v_num=3]Epoch 0:   2%|▏         | 40/2524 [00:16<17:01,  2.43it/s, loss=0.934, v_num=3]Epoch 0:   2%|▏         | 50/2524 [00:20<16:53,  2.44it/s, loss=0.934, v_num=3]Epoch 0:   2%|▏         | 50/2524 [00:20<16:53,  2.44it/s, loss=0.777, v_num=3]Epoch 0:   2%|▏         | 60/2524 [00:24<16:48,  2.44it/s, loss=0.777, v_num=3]Epoch 0:   2%|▏         | 60/2524 [00:24<16:49,  2.44it/s, loss=0.623, v_num=3]Epoch 0:   3%|▎         | 70/2524 [00:28<16:42,  2.45it/s, loss=0.623, v_num=3]Epoch 0:   3%|▎         | 70/2524 [00:28<16:42,  2.45it/s, loss=0.558, v_num=3]Epoch 0:   3%|▎         | 80/2524 [00:32<16:37,  2.45it/s, loss=0.558, v_num=3]Epoch 0:   3%|▎         | 80/2524 [00:32<16:37,  2.45it/s, loss=0.527, v_num=3]Epoch 0:   4%|▎         | 90/2524 [00:36<16:32,  2.45it/s, loss=0.527, v_num=3]Epoch 0:   4%|▎         | 90/2524 [00:36<16:32,  2.45it/s, loss=0.455, v_num=3]Epoch 0:   4%|▍         | 100/2524 [00:40<16:28,  2.45it/s, loss=0.455, v_num=3]Epoch 0:   4%|▍         | 100/2524 [00:40<16:28,  2.45it/s, loss=0.398, v_num=3]Epoch 0:   4%|▍         | 110/2524 [00:44<16:25,  2.45it/s, loss=0.398, v_num=3]Epoch 0:   4%|▍         | 110/2524 [00:44<16:25,  2.45it/s, loss=0.379, v_num=3]Epoch 0:   5%|▍         | 120/2524 [00:48<16:20,  2.45it/s, loss=0.379, v_num=3]Epoch 0:   5%|▍         | 120/2524 [00:48<16:20,  2.45it/s, loss=0.358, v_num=3]Epoch 0:   5%|▌         | 130/2524 [00:52<16:15,  2.45it/s, loss=0.358, v_num=3]Epoch 0:   5%|▌         | 130/2524 [00:53<16:16,  2.45it/s, loss=0.343, v_num=3]Epoch 0:   6%|▌         | 140/2524 [00:57<16:11,  2.45it/s, loss=0.343, v_num=3]Epoch 0:   6%|▌         | 140/2524 [00:57<16:11,  2.45it/s, loss=0.355, v_num=3]Epoch 0:   6%|▌         | 150/2524 [01:01<16:06,  2.46it/s, loss=0.355, v_num=3]Epoch 0:   6%|▌         | 150/2524 [01:01<16:07,  2.45it/s, loss=0.34, v_num=3] Epoch 0:   6%|▋         | 160/2524 [01:05<16:03,  2.45it/s, loss=0.34, v_num=3]Epoch 0:   6%|▋         | 160/2524 [01:05<16:03,  2.45it/s, loss=0.31, v_num=3]Epoch 0:   7%|▋         | 170/2524 [01:09<15:58,  2.45it/s, loss=0.31, v_num=3]Epoch 0:   7%|▋         | 170/2524 [01:09<15:59,  2.45it/s, loss=0.317, v_num=3]Epoch 0:   7%|▋         | 180/2524 [01:13<15:54,  2.46it/s, loss=0.317, v_num=3]Epoch 0:   7%|▋         | 180/2524 [01:13<15:54,  2.46it/s, loss=0.307, v_num=3]Epoch 0:   8%|▊         | 190/2524 [01:17<15:50,  2.46it/s, loss=0.307, v_num=3]Epoch 0:   8%|▊         | 190/2524 [01:17<15:50,  2.46it/s, loss=0.295, v_num=3]Epoch 0:   8%|▊         | 200/2524 [01:21<15:46,  2.45it/s, loss=0.295, v_num=3]Epoch 0:   8%|▊         | 200/2524 [01:21<15:46,  2.45it/s, loss=0.292, v_num=3]Epoch 0:   8%|▊         | 210/2524 [01:25<15:43,  2.45it/s, loss=0.292, v_num=3]Epoch 0:   8%|▊         | 210/2524 [01:25<15:43,  2.45it/s, loss=0.265, v_num=3]Epoch 0:   9%|▊         | 220/2524 [01:29<15:39,  2.45it/s, loss=0.265, v_num=3]Epoch 0:   9%|▊         | 220/2524 [01:29<15:39,  2.45it/s, loss=0.262, v_num=3]Epoch 0:   9%|▉         | 230/2524 [01:33<15:35,  2.45it/s, loss=0.262, v_num=3]Epoch 0:   9%|▉         | 230/2524 [01:33<15:35,  2.45it/s, loss=0.276, v_num=3]Epoch 0:  10%|▉         | 240/2524 [01:37<15:30,  2.45it/s, loss=0.276, v_num=3]Epoch 0:  10%|▉         | 240/2524 [01:37<15:30,  2.45it/s, loss=0.261, v_num=3]Epoch 0:  10%|▉         | 250/2524 [01:41<15:26,  2.45it/s, loss=0.261, v_num=3]Epoch 0:  10%|▉         | 250/2524 [01:41<15:26,  2.45it/s, loss=0.249, v_num=3]Epoch 0:  10%|█         | 260/2524 [01:46<15:23,  2.45it/s, loss=0.249, v_num=3]Epoch 0:  10%|█         | 260/2524 [01:46<15:23,  2.45it/s, loss=0.24, v_num=3] Epoch 0:  11%|█         | 270/2524 [01:50<15:19,  2.45it/s, loss=0.24, v_num=3]Epoch 0:  11%|█         | 270/2524 [01:50<15:19,  2.45it/s, loss=0.239, v_num=3]Epoch 0:  11%|█         | 280/2524 [01:54<15:15,  2.45it/s, loss=0.239, v_num=3]Epoch 0:  11%|█         | 280/2524 [01:54<15:15,  2.45it/s, loss=0.249, v_num=3]Epoch 0:  11%|█▏        | 290/2524 [01:58<15:10,  2.45it/s, loss=0.249, v_num=3]Epoch 0:  11%|█▏        | 290/2524 [01:58<15:11,  2.45it/s, loss=0.256, v_num=3]Epoch 0:  12%|█▏        | 300/2524 [02:02<15:07,  2.45it/s, loss=0.256, v_num=3]Epoch 0:  12%|█▏        | 300/2524 [02:02<15:07,  2.45it/s, loss=0.266, v_num=3]Epoch 0:  12%|█▏        | 310/2524 [02:06<15:03,  2.45it/s, loss=0.266, v_num=3]Epoch 0:  12%|█▏        | 310/2524 [02:06<15:03,  2.45it/s, loss=0.26, v_num=3] Epoch 0:  13%|█▎        | 320/2524 [02:10<14:59,  2.45it/s, loss=0.26, v_num=3]Epoch 0:  13%|█▎        | 320/2524 [02:10<14:59,  2.45it/s, loss=0.243, v_num=3]Epoch 0:  13%|█▎        | 330/2524 [02:14<14:55,  2.45it/s, loss=0.243, v_num=3]Epoch 0:  13%|█▎        | 330/2524 [02:14<14:55,  2.45it/s, loss=0.222, v_num=3]Epoch 0:  13%|█▎        | 340/2524 [02:18<14:51,  2.45it/s, loss=0.222, v_num=3]Epoch 0:  13%|█▎        | 340/2524 [02:18<14:51,  2.45it/s, loss=0.219, v_num=3]Epoch 0:  14%|█▍        | 350/2524 [02:22<14:47,  2.45it/s, loss=0.219, v_num=3]Epoch 0:  14%|█▍        | 350/2524 [02:22<14:47,  2.45it/s, loss=0.238, v_num=3]Epoch 0:  14%|█▍        | 360/2524 [02:27<14:43,  2.45it/s, loss=0.238, v_num=3]Epoch 0:  14%|█▍        | 360/2524 [02:27<14:43,  2.45it/s, loss=0.236, v_num=3]Epoch 0:  15%|█▍        | 370/2524 [02:31<14:39,  2.45it/s, loss=0.236, v_num=3]Epoch 0:  15%|█▍        | 370/2524 [02:31<14:39,  2.45it/s, loss=0.214, v_num=3]Epoch 0:  15%|█▌        | 380/2524 [02:35<14:35,  2.45it/s, loss=0.214, v_num=3]Epoch 0:  15%|█▌        | 380/2524 [02:35<14:35,  2.45it/s, loss=0.225, v_num=3]Epoch 0:  15%|█▌        | 390/2524 [02:39<14:31,  2.45it/s, loss=0.225, v_num=3]Epoch 0:  15%|█▌        | 390/2524 [02:39<14:31,  2.45it/s, loss=0.239, v_num=3]Epoch 0:  16%|█▌        | 400/2524 [02:43<14:27,  2.45it/s, loss=0.239, v_num=3]Epoch 0:  16%|█▌        | 400/2524 [02:43<14:27,  2.45it/s, loss=0.22, v_num=3] Epoch 0:  16%|█▌        | 410/2524 [02:47<14:24,  2.45it/s, loss=0.22, v_num=3]Epoch 0:  16%|█▌        | 410/2524 [02:47<14:24,  2.45it/s, loss=0.207, v_num=3]Epoch 0:  17%|█▋        | 420/2524 [02:51<14:19,  2.45it/s, loss=0.207, v_num=3]Epoch 0:  17%|█▋        | 420/2524 [02:51<14:19,  2.45it/s, loss=0.204, v_num=3]Epoch 0:  17%|█▋        | 430/2524 [02:55<14:15,  2.45it/s, loss=0.204, v_num=3]Epoch 0:  17%|█▋        | 430/2524 [02:55<14:15,  2.45it/s, loss=0.209, v_num=3]Epoch 0:  17%|█▋        | 440/2524 [02:59<14:11,  2.45it/s, loss=0.209, v_num=3]Epoch 0:  17%|█▋        | 440/2524 [02:59<14:11,  2.45it/s, loss=0.192, v_num=3]Epoch 0:  18%|█▊        | 450/2524 [03:03<14:07,  2.45it/s, loss=0.192, v_num=3]Epoch 0:  18%|█▊        | 450/2524 [03:03<14:07,  2.45it/s, loss=0.191, v_num=3]Epoch 0:  18%|█▊        | 460/2524 [03:08<14:03,  2.45it/s, loss=0.191, v_num=3]Epoch 0:  18%|█▊        | 460/2524 [03:08<14:03,  2.45it/s, loss=0.205, v_num=3]Epoch 0:  19%|█▊        | 470/2524 [03:12<13:59,  2.45it/s, loss=0.205, v_num=3]Epoch 0:  19%|█▊        | 470/2524 [03:12<13:59,  2.45it/s, loss=0.205, v_num=3]Epoch 0:  19%|█▉        | 480/2524 [03:16<13:55,  2.45it/s, loss=0.205, v_num=3]Epoch 0:  19%|█▉        | 480/2524 [03:16<13:55,  2.45it/s, loss=0.202, v_num=3]Epoch 0:  19%|█▉        | 490/2524 [03:20<13:51,  2.45it/s, loss=0.202, v_num=3]Epoch 0:  19%|█▉        | 490/2524 [03:20<13:51,  2.45it/s, loss=0.198, v_num=3]Epoch 0:  20%|█▉        | 500/2524 [03:24<13:47,  2.45it/s, loss=0.198, v_num=3]Epoch 0:  20%|█▉        | 500/2524 [03:24<13:47,  2.45it/s, loss=0.198, v_num=3]Epoch 0:  20%|██        | 510/2524 [03:28<13:44,  2.44it/s, loss=0.198, v_num=3]Epoch 0:  20%|██        | 510/2524 [03:28<13:44,  2.44it/s, loss=0.197, v_num=3]Epoch 0:  21%|██        | 520/2524 [03:32<13:39,  2.44it/s, loss=0.197, v_num=3]Epoch 0:  21%|██        | 520/2524 [03:32<13:40,  2.44it/s, loss=0.18, v_num=3] Epoch 0:  21%|██        | 530/2524 [03:36<13:35,  2.44it/s, loss=0.18, v_num=3]Epoch 0:  21%|██        | 530/2524 [03:36<13:35,  2.44it/s, loss=0.173, v_num=3]Epoch 0:  21%|██▏       | 540/2524 [03:40<13:31,  2.44it/s, loss=0.173, v_num=3]Epoch 0:  21%|██▏       | 540/2524 [03:40<13:31,  2.44it/s, loss=0.201, v_num=3]Epoch 0:  22%|██▏       | 550/2524 [03:45<13:27,  2.44it/s, loss=0.201, v_num=3]Epoch 0:  22%|██▏       | 550/2524 [03:45<13:27,  2.44it/s, loss=0.204, v_num=3]Epoch 0:  22%|██▏       | 560/2524 [03:49<13:23,  2.44it/s, loss=0.204, v_num=3]Epoch 0:  22%|██▏       | 560/2524 [03:49<13:23,  2.44it/s, loss=0.2, v_num=3]  Epoch 0:  23%|██▎       | 570/2524 [03:53<13:19,  2.44it/s, loss=0.2, v_num=3]Epoch 0:  23%|██▎       | 570/2524 [03:53<13:19,  2.44it/s, loss=0.193, v_num=3]Epoch 0:  23%|██▎       | 580/2524 [03:57<13:15,  2.44it/s, loss=0.193, v_num=3]Epoch 0:  23%|██▎       | 580/2524 [03:57<13:15,  2.44it/s, loss=0.176, v_num=3]Epoch 0:  23%|██▎       | 590/2524 [04:01<13:11,  2.44it/s, loss=0.176, v_num=3]Epoch 0:  23%|██▎       | 590/2524 [04:01<13:11,  2.44it/s, loss=0.176, v_num=3]Epoch 0:  24%|██▍       | 600/2524 [04:05<13:07,  2.44it/s, loss=0.176, v_num=3]Epoch 0:  24%|██▍       | 600/2524 [04:05<13:07,  2.44it/s, loss=0.187, v_num=3]Epoch 0:  24%|██▍       | 610/2524 [04:09<13:03,  2.44it/s, loss=0.187, v_num=3]Epoch 0:  24%|██▍       | 610/2524 [04:09<13:03,  2.44it/s, loss=0.193, v_num=3]Epoch 0:  25%|██▍       | 620/2524 [04:13<12:59,  2.44it/s, loss=0.193, v_num=3]Epoch 0:  25%|██▍       | 620/2524 [04:13<12:59,  2.44it/s, loss=0.185, v_num=3]Epoch 0:  25%|██▍       | 630/2524 [04:17<12:55,  2.44it/s, loss=0.185, v_num=3]Epoch 0:  25%|██▍       | 630/2524 [04:18<12:55,  2.44it/s, loss=0.175, v_num=3]Epoch 0:  25%|██▌       | 640/2524 [04:22<12:51,  2.44it/s, loss=0.175, v_num=3]Epoch 0:  25%|██▌       | 640/2524 [04:22<12:51,  2.44it/s, loss=0.176, v_num=3]Epoch 0:  26%|██▌       | 650/2524 [04:26<12:47,  2.44it/s, loss=0.176, v_num=3]Epoch 0:  26%|██▌       | 650/2524 [04:26<12:47,  2.44it/s, loss=0.174, v_num=3]Epoch 0:  26%|██▌       | 660/2524 [04:30<12:43,  2.44it/s, loss=0.174, v_num=3]Epoch 0:  26%|██▌       | 660/2524 [04:30<12:43,  2.44it/s, loss=0.168, v_num=3]Epoch 0:  27%|██▋       | 670/2524 [04:34<12:39,  2.44it/s, loss=0.168, v_num=3]Epoch 0:  27%|██▋       | 670/2524 [04:34<12:39,  2.44it/s, loss=0.161, v_num=3]Epoch 0:  27%|██▋       | 680/2524 [04:38<12:35,  2.44it/s, loss=0.161, v_num=3]Epoch 0:  27%|██▋       | 680/2524 [04:38<12:35,  2.44it/s, loss=0.165, v_num=3]Epoch 0:  27%|██▋       | 690/2524 [04:42<12:31,  2.44it/s, loss=0.165, v_num=3]Epoch 0:  27%|██▋       | 690/2524 [04:42<12:31,  2.44it/s, loss=0.186, v_num=3]Epoch 0:  28%|██▊       | 700/2524 [04:46<12:27,  2.44it/s, loss=0.186, v_num=3]Epoch 0:  28%|██▊       | 700/2524 [04:46<12:27,  2.44it/s, loss=0.174, v_num=3]Epoch 0:  28%|██▊       | 710/2524 [04:50<12:23,  2.44it/s, loss=0.174, v_num=3]Epoch 0:  28%|██▊       | 710/2524 [04:50<12:23,  2.44it/s, loss=0.154, v_num=3]Epoch 0:  29%|██▊       | 720/2524 [04:55<12:19,  2.44it/s, loss=0.154, v_num=3]Epoch 0:  29%|██▊       | 720/2524 [04:55<12:19,  2.44it/s, loss=0.154, v_num=3]Epoch 0:  29%|██▉       | 730/2524 [04:59<12:15,  2.44it/s, loss=0.154, v_num=3]Epoch 0:  29%|██▉       | 730/2524 [04:59<12:15,  2.44it/s, loss=0.164, v_num=3]Epoch 0:  29%|██▉       | 740/2524 [05:03<12:11,  2.44it/s, loss=0.164, v_num=3]Epoch 0:  29%|██▉       | 740/2524 [05:03<12:11,  2.44it/s, loss=0.168, v_num=3]Epoch 0:  30%|██▉       | 750/2524 [05:07<12:06,  2.44it/s, loss=0.168, v_num=3]Epoch 0:  30%|██▉       | 750/2524 [05:07<12:06,  2.44it/s, loss=0.158, v_num=3]Epoch 0:  30%|███       | 760/2524 [05:11<12:02,  2.44it/s, loss=0.158, v_num=3]Epoch 0:  30%|███       | 760/2524 [05:11<12:02,  2.44it/s, loss=0.15, v_num=3] Epoch 0:  31%|███       | 770/2524 [05:15<11:58,  2.44it/s, loss=0.15, v_num=3]Epoch 0:  31%|███       | 770/2524 [05:15<11:58,  2.44it/s, loss=0.159, v_num=3]Epoch 0:  31%|███       | 780/2524 [05:19<11:54,  2.44it/s, loss=0.159, v_num=3]Epoch 0:  31%|███       | 780/2524 [05:19<11:54,  2.44it/s, loss=0.166, v_num=3]Epoch 0:  31%|███▏      | 790/2524 [05:23<11:50,  2.44it/s, loss=0.166, v_num=3]Epoch 0:  31%|███▏      | 790/2524 [05:23<11:50,  2.44it/s, loss=0.154, v_num=3]Epoch 0:  32%|███▏      | 800/2524 [05:27<11:46,  2.44it/s, loss=0.154, v_num=3]Epoch 0:  32%|███▏      | 800/2524 [05:27<11:46,  2.44it/s, loss=0.16, v_num=3] Epoch 0:  32%|███▏      | 810/2524 [05:32<11:42,  2.44it/s, loss=0.16, v_num=3]Epoch 0:  32%|███▏      | 810/2524 [05:32<11:42,  2.44it/s, loss=0.163, v_num=3]Epoch 0:  32%|███▏      | 820/2524 [05:36<11:38,  2.44it/s, loss=0.163, v_num=3]Epoch 0:  32%|███▏      | 820/2524 [05:36<11:38,  2.44it/s, loss=0.161, v_num=3]Epoch 0:  33%|███▎      | 830/2524 [05:40<11:34,  2.44it/s, loss=0.161, v_num=3]Epoch 0:  33%|███▎      | 830/2524 [05:40<11:34,  2.44it/s, loss=0.172, v_num=3]Epoch 0:  33%|███▎      | 840/2524 [05:44<11:30,  2.44it/s, loss=0.172, v_num=3]Epoch 0:  33%|███▎      | 840/2524 [05:44<11:30,  2.44it/s, loss=0.167, v_num=3]Epoch 0:  34%|███▎      | 850/2524 [05:48<11:26,  2.44it/s, loss=0.167, v_num=3]Epoch 0:  34%|███▎      | 850/2524 [05:48<11:26,  2.44it/s, loss=0.159, v_num=3]Epoch 0:  34%|███▍      | 860/2524 [05:52<11:22,  2.44it/s, loss=0.159, v_num=3]Epoch 0:  34%|███▍      | 860/2524 [05:52<11:22,  2.44it/s, loss=0.157, v_num=3]Epoch 0:  34%|███▍      | 870/2524 [05:56<11:18,  2.44it/s, loss=0.157, v_num=3]Epoch 0:  34%|███▍      | 870/2524 [05:56<11:18,  2.44it/s, loss=0.149, v_num=3]Epoch 0:  35%|███▍      | 880/2524 [06:00<11:13,  2.44it/s, loss=0.149, v_num=3]Epoch 0:  35%|███▍      | 880/2524 [06:00<11:14,  2.44it/s, loss=0.143, v_num=3]Epoch 0:  35%|███▌      | 890/2524 [06:04<11:09,  2.44it/s, loss=0.143, v_num=3]Epoch 0:  35%|███▌      | 890/2524 [06:04<11:09,  2.44it/s, loss=0.141, v_num=3]Epoch 0:  36%|███▌      | 900/2524 [06:08<11:05,  2.44it/s, loss=0.141, v_num=3]Epoch 0:  36%|███▌      | 900/2524 [06:09<11:05,  2.44it/s, loss=0.141, v_num=3]Epoch 0:  36%|███▌      | 910/2524 [06:13<11:01,  2.44it/s, loss=0.141, v_num=3]Epoch 0:  36%|███▌      | 910/2524 [06:13<11:01,  2.44it/s, loss=0.149, v_num=3]Epoch 0:  36%|███▋      | 920/2524 [06:17<10:57,  2.44it/s, loss=0.149, v_num=3]Epoch 0:  36%|███▋      | 920/2524 [06:17<10:57,  2.44it/s, loss=0.159, v_num=3]Epoch 0:  37%|███▋      | 930/2524 [06:21<10:53,  2.44it/s, loss=0.159, v_num=3]Epoch 0:  37%|███▋      | 930/2524 [06:21<10:53,  2.44it/s, loss=0.156, v_num=3]Epoch 0:  37%|███▋      | 940/2524 [06:25<10:49,  2.44it/s, loss=0.156, v_num=3]Epoch 0:  37%|███▋      | 940/2524 [06:25<10:49,  2.44it/s, loss=0.147, v_num=3]Epoch 0:  38%|███▊      | 950/2524 [06:29<10:45,  2.44it/s, loss=0.147, v_num=3]Epoch 0:  38%|███▊      | 950/2524 [06:29<10:45,  2.44it/s, loss=0.153, v_num=3]Epoch 0:  38%|███▊      | 960/2524 [06:33<10:41,  2.44it/s, loss=0.153, v_num=3]Epoch 0:  38%|███▊      | 960/2524 [06:33<10:41,  2.44it/s, loss=0.15, v_num=3] Epoch 0:  38%|███▊      | 970/2524 [06:37<10:37,  2.44it/s, loss=0.15, v_num=3]Epoch 0:  38%|███▊      | 970/2524 [06:37<10:37,  2.44it/s, loss=0.139, v_num=3]Epoch 0:  39%|███▉      | 980/2524 [06:41<10:33,  2.44it/s, loss=0.139, v_num=3]Epoch 0:  39%|███▉      | 980/2524 [06:41<10:33,  2.44it/s, loss=0.141, v_num=3]Epoch 0:  39%|███▉      | 990/2524 [06:45<10:29,  2.44it/s, loss=0.141, v_num=3]Epoch 0:  39%|███▉      | 990/2524 [06:45<10:29,  2.44it/s, loss=0.139, v_num=3]Epoch 0:  40%|███▉      | 1000/2524 [06:50<10:25,  2.44it/s, loss=0.139, v_num=3]Epoch 0:  40%|███▉      | 1000/2524 [06:50<10:25,  2.44it/s, loss=0.149, v_num=3]Epoch 0:  40%|████      | 1010/2524 [06:54<10:21,  2.44it/s, loss=0.149, v_num=3]Epoch 0:  40%|████      | 1010/2524 [06:54<10:21,  2.44it/s, loss=0.149, v_num=3]Epoch 0:  40%|████      | 1020/2524 [06:58<10:16,  2.44it/s, loss=0.149, v_num=3]Epoch 0:  40%|████      | 1020/2524 [06:58<10:16,  2.44it/s, loss=0.142, v_num=3]Epoch 0:  41%|████      | 1030/2524 [07:02<10:12,  2.44it/s, loss=0.142, v_num=3]Epoch 0:  41%|████      | 1030/2524 [07:02<10:12,  2.44it/s, loss=0.145, v_num=3]Epoch 0:  41%|████      | 1040/2524 [07:06<10:08,  2.44it/s, loss=0.145, v_num=3]Epoch 0:  41%|████      | 1040/2524 [07:06<10:08,  2.44it/s, loss=0.144, v_num=3]Epoch 0:  42%|████▏     | 1050/2524 [07:10<10:04,  2.44it/s, loss=0.144, v_num=3]Epoch 0:  42%|████▏     | 1050/2524 [07:10<10:04,  2.44it/s, loss=0.135, v_num=3]Epoch 0:  42%|████▏     | 1060/2524 [07:14<10:00,  2.44it/s, loss=0.135, v_num=3]Epoch 0:  42%|████▏     | 1060/2524 [07:14<10:00,  2.44it/s, loss=0.137, v_num=3]Epoch 0:  42%|████▏     | 1070/2524 [07:18<09:56,  2.44it/s, loss=0.137, v_num=3]Epoch 0:  42%|████▏     | 1070/2524 [07:18<09:56,  2.44it/s, loss=0.141, v_num=3]Epoch 0:  43%|████▎     | 1080/2524 [07:22<09:52,  2.44it/s, loss=0.141, v_num=3]Epoch 0:  43%|████▎     | 1080/2524 [07:22<09:52,  2.44it/s, loss=0.133, v_num=3]Epoch 0:  43%|████▎     | 1090/2524 [07:27<09:48,  2.44it/s, loss=0.133, v_num=3]Epoch 0:  43%|████▎     | 1090/2524 [07:27<09:48,  2.44it/s, loss=0.138, v_num=3]Epoch 0:  44%|████▎     | 1100/2524 [07:31<09:44,  2.44it/s, loss=0.138, v_num=3]Epoch 0:  44%|████▎     | 1100/2524 [07:31<09:44,  2.44it/s, loss=0.135, v_num=3]Epoch 0:  44%|████▍     | 1110/2524 [07:35<09:40,  2.44it/s, loss=0.135, v_num=3]Epoch 0:  44%|████▍     | 1110/2524 [07:35<09:40,  2.44it/s, loss=0.131, v_num=3]Epoch 0:  44%|████▍     | 1120/2524 [07:39<09:35,  2.44it/s, loss=0.131, v_num=3]Epoch 0:  44%|████▍     | 1120/2524 [07:39<09:35,  2.44it/s, loss=0.136, v_num=3]Epoch 0:  45%|████▍     | 1130/2524 [07:43<09:31,  2.44it/s, loss=0.136, v_num=3]Epoch 0:  45%|████▍     | 1130/2524 [07:43<09:31,  2.44it/s, loss=0.137, v_num=3]Epoch 0:  45%|████▌     | 1140/2524 [07:47<09:27,  2.44it/s, loss=0.137, v_num=3]Epoch 0:  45%|████▌     | 1140/2524 [07:47<09:27,  2.44it/s, loss=0.144, v_num=3]Epoch 0:  46%|████▌     | 1150/2524 [07:51<09:23,  2.44it/s, loss=0.144, v_num=3]Epoch 0:  46%|████▌     | 1150/2524 [07:51<09:23,  2.44it/s, loss=0.142, v_num=3]Epoch 0:  46%|████▌     | 1160/2524 [07:55<09:19,  2.44it/s, loss=0.142, v_num=3]Epoch 0:  46%|████▌     | 1160/2524 [07:55<09:19,  2.44it/s, loss=0.134, v_num=3]Epoch 0:  46%|████▋     | 1170/2524 [07:59<09:15,  2.44it/s, loss=0.134, v_num=3]Epoch 0:  46%|████▋     | 1170/2524 [07:59<09:15,  2.44it/s, loss=0.128, v_num=3]Epoch 0:  47%|████▋     | 1180/2524 [08:04<09:11,  2.44it/s, loss=0.128, v_num=3]Epoch 0:  47%|████▋     | 1180/2524 [08:04<09:11,  2.44it/s, loss=0.122, v_num=3]Epoch 0:  47%|████▋     | 1190/2524 [08:08<09:07,  2.44it/s, loss=0.122, v_num=3]Epoch 0:  47%|████▋     | 1190/2524 [08:08<09:07,  2.44it/s, loss=0.135, v_num=3]Epoch 0:  48%|████▊     | 1200/2524 [08:12<09:03,  2.44it/s, loss=0.135, v_num=3]Epoch 0:  48%|████▊     | 1200/2524 [08:12<09:03,  2.44it/s, loss=0.134, v_num=3]Epoch 0:  48%|████▊     | 1210/2524 [08:16<08:59,  2.44it/s, loss=0.134, v_num=3]Epoch 0:  48%|████▊     | 1210/2524 [08:16<08:59,  2.44it/s, loss=0.132, v_num=3]Epoch 0:  48%|████▊     | 1220/2524 [08:20<08:54,  2.44it/s, loss=0.132, v_num=3]Epoch 0:  48%|████▊     | 1220/2524 [08:20<08:54,  2.44it/s, loss=0.134, v_num=3]Epoch 0:  49%|████▊     | 1230/2524 [08:24<08:50,  2.44it/s, loss=0.134, v_num=3]Epoch 0:  49%|████▊     | 1230/2524 [08:24<08:50,  2.44it/s, loss=0.131, v_num=3]Epoch 0:  49%|████▉     | 1240/2524 [08:28<08:46,  2.44it/s, loss=0.131, v_num=3]Epoch 0:  49%|████▉     | 1240/2524 [08:28<08:46,  2.44it/s, loss=0.13, v_num=3] Epoch 0:  50%|████▉     | 1250/2524 [08:32<08:42,  2.44it/s, loss=0.13, v_num=3]Epoch 0:  50%|████▉     | 1250/2524 [08:32<08:42,  2.44it/s, loss=0.128, v_num=3]Epoch 0:  50%|████▉     | 1260/2524 [08:36<08:38,  2.44it/s, loss=0.128, v_num=3]Epoch 0:  50%|████▉     | 1260/2524 [08:36<08:38,  2.44it/s, loss=0.122, v_num=3]Epoch 0:  50%|█████     | 1270/2524 [08:40<08:34,  2.44it/s, loss=0.122, v_num=3]Epoch 0:  50%|█████     | 1270/2524 [08:40<08:34,  2.44it/s, loss=0.118, v_num=3]Epoch 0:  51%|█████     | 1280/2524 [08:45<08:30,  2.44it/s, loss=0.118, v_num=3]Epoch 0:  51%|█████     | 1280/2524 [08:45<08:30,  2.44it/s, loss=0.13, v_num=3] Epoch 0:  51%|█████     | 1290/2524 [08:49<08:26,  2.44it/s, loss=0.13, v_num=3]Epoch 0:  51%|█████     | 1290/2524 [08:49<08:26,  2.44it/s, loss=0.14, v_num=3]Epoch 0:  52%|█████▏    | 1300/2524 [08:53<08:22,  2.44it/s, loss=0.14, v_num=3]Epoch 0:  52%|█████▏    | 1300/2524 [08:53<08:22,  2.44it/s, loss=0.133, v_num=3]Epoch 0:  52%|█████▏    | 1310/2524 [08:57<08:18,  2.44it/s, loss=0.133, v_num=3]Epoch 0:  52%|█████▏    | 1310/2524 [08:57<08:18,  2.44it/s, loss=0.136, v_num=3]Epoch 0:  52%|█████▏    | 1320/2524 [09:01<08:13,  2.44it/s, loss=0.136, v_num=3]Epoch 0:  52%|█████▏    | 1320/2524 [09:01<08:13,  2.44it/s, loss=0.138, v_num=3]Epoch 0:  53%|█████▎    | 1330/2524 [09:05<08:09,  2.44it/s, loss=0.138, v_num=3]Epoch 0:  53%|█████▎    | 1330/2524 [09:05<08:09,  2.44it/s, loss=0.126, v_num=3]Epoch 0:  53%|█████▎    | 1340/2524 [09:09<08:05,  2.44it/s, loss=0.126, v_num=3]Epoch 0:  53%|█████▎    | 1340/2524 [09:09<08:05,  2.44it/s, loss=0.122, v_num=3]Epoch 0:  53%|█████▎    | 1350/2524 [09:13<08:01,  2.44it/s, loss=0.122, v_num=3]Epoch 0:  53%|█████▎    | 1350/2524 [09:13<08:01,  2.44it/s, loss=0.128, v_num=3]Epoch 0:  54%|█████▍    | 1360/2524 [09:17<07:57,  2.44it/s, loss=0.128, v_num=3]Epoch 0:  54%|█████▍    | 1360/2524 [09:17<07:57,  2.44it/s, loss=0.137, v_num=3]Epoch 0:  54%|█████▍    | 1370/2524 [09:22<07:53,  2.44it/s, loss=0.137, v_num=3]Epoch 0:  54%|█████▍    | 1370/2524 [09:22<07:53,  2.44it/s, loss=0.137, v_num=3]Epoch 0:  55%|█████▍    | 1380/2524 [09:26<07:49,  2.44it/s, loss=0.137, v_num=3]Epoch 0:  55%|█████▍    | 1380/2524 [09:26<07:49,  2.44it/s, loss=0.133, v_num=3]Epoch 0:  55%|█████▌    | 1390/2524 [09:30<07:45,  2.44it/s, loss=0.133, v_num=3]Epoch 0:  55%|█████▌    | 1390/2524 [09:30<07:45,  2.44it/s, loss=0.122, v_num=3]Epoch 0:  55%|█████▌    | 1400/2524 [09:34<07:41,  2.44it/s, loss=0.122, v_num=3]Epoch 0:  55%|█████▌    | 1400/2524 [09:34<07:41,  2.44it/s, loss=0.117, v_num=3]Epoch 0:  56%|█████▌    | 1410/2524 [09:38<07:37,  2.44it/s, loss=0.117, v_num=3]Epoch 0:  56%|█████▌    | 1410/2524 [09:38<07:37,  2.44it/s, loss=0.126, v_num=3]Epoch 0:  56%|█████▋    | 1420/2524 [09:42<07:33,  2.44it/s, loss=0.126, v_num=3]Epoch 0:  56%|█████▋    | 1420/2524 [09:42<07:33,  2.44it/s, loss=0.133, v_num=3]Epoch 0:  57%|█████▋    | 1430/2524 [09:46<07:28,  2.44it/s, loss=0.133, v_num=3]Epoch 0:  57%|█████▋    | 1430/2524 [09:46<07:28,  2.44it/s, loss=0.124, v_num=3]Epoch 0:  57%|█████▋    | 1440/2524 [09:50<07:24,  2.44it/s, loss=0.124, v_num=3]Epoch 0:  57%|█████▋    | 1440/2524 [09:50<07:24,  2.44it/s, loss=0.113, v_num=3]Epoch 0:  57%|█████▋    | 1450/2524 [09:54<07:20,  2.44it/s, loss=0.113, v_num=3]Epoch 0:  57%|█████▋    | 1450/2524 [09:54<07:20,  2.44it/s, loss=0.116, v_num=3]Epoch 0:  58%|█████▊    | 1460/2524 [09:59<07:16,  2.44it/s, loss=0.116, v_num=3]Epoch 0:  58%|█████▊    | 1460/2524 [09:59<07:16,  2.44it/s, loss=0.115, v_num=3]Epoch 0:  58%|█████▊    | 1470/2524 [10:03<07:12,  2.44it/s, loss=0.115, v_num=3]Epoch 0:  58%|█████▊    | 1470/2524 [10:03<07:12,  2.44it/s, loss=0.112, v_num=3]Epoch 0:  59%|█████▊    | 1480/2524 [10:07<07:08,  2.44it/s, loss=0.112, v_num=3]Epoch 0:  59%|█████▊    | 1480/2524 [10:07<07:08,  2.44it/s, loss=0.109, v_num=3]Epoch 0:  59%|█████▉    | 1490/2524 [10:11<07:04,  2.44it/s, loss=0.109, v_num=3]Epoch 0:  59%|█████▉    | 1490/2524 [10:11<07:04,  2.44it/s, loss=0.121, v_num=3]Epoch 0:  59%|█████▉    | 1500/2524 [10:15<07:00,  2.44it/s, loss=0.121, v_num=3]Epoch 0:  59%|█████▉    | 1500/2524 [10:15<07:00,  2.44it/s, loss=0.126, v_num=3]Epoch 0:  60%|█████▉    | 1510/2524 [10:19<06:56,  2.44it/s, loss=0.126, v_num=3]Epoch 0:  60%|█████▉    | 1510/2524 [10:19<06:56,  2.44it/s, loss=0.117, v_num=3]Epoch 0:  60%|██████    | 1520/2524 [10:23<06:52,  2.44it/s, loss=0.117, v_num=3]Epoch 0:  60%|██████    | 1520/2524 [10:23<06:52,  2.44it/s, loss=0.117, v_num=3]Epoch 0:  61%|██████    | 1530/2524 [10:27<06:47,  2.44it/s, loss=0.117, v_num=3]Epoch 0:  61%|██████    | 1530/2524 [10:27<06:47,  2.44it/s, loss=0.115, v_num=3]Epoch 0:  61%|██████    | 1540/2524 [10:31<06:43,  2.44it/s, loss=0.115, v_num=3]Epoch 0:  61%|██████    | 1540/2524 [10:31<06:43,  2.44it/s, loss=0.107, v_num=3]Epoch 0:  61%|██████▏   | 1550/2524 [10:36<06:39,  2.44it/s, loss=0.107, v_num=3]Epoch 0:  61%|██████▏   | 1550/2524 [10:36<06:39,  2.44it/s, loss=0.0973, v_num=3]Epoch 0:  62%|██████▏   | 1560/2524 [10:40<06:35,  2.44it/s, loss=0.0973, v_num=3]Epoch 0:  62%|██████▏   | 1560/2524 [10:40<06:35,  2.44it/s, loss=0.104, v_num=3] Epoch 0:  62%|██████▏   | 1570/2524 [10:44<06:31,  2.44it/s, loss=0.104, v_num=3]Epoch 0:  62%|██████▏   | 1570/2524 [10:44<06:31,  2.44it/s, loss=0.113, v_num=3]Epoch 0:  63%|██████▎   | 1580/2524 [10:48<06:27,  2.44it/s, loss=0.113, v_num=3]Epoch 0:  63%|██████▎   | 1580/2524 [10:48<06:27,  2.44it/s, loss=0.113, v_num=3]Epoch 0:  63%|██████▎   | 1590/2524 [10:52<06:23,  2.44it/s, loss=0.113, v_num=3]Epoch 0:  63%|██████▎   | 1590/2524 [10:52<06:23,  2.44it/s, loss=0.115, v_num=3]Epoch 0:  63%|██████▎   | 1600/2524 [10:56<06:19,  2.44it/s, loss=0.115, v_num=3]Epoch 0:  63%|██████▎   | 1600/2524 [10:56<06:19,  2.44it/s, loss=0.115, v_num=3]Epoch 0:  64%|██████▍   | 1610/2524 [11:00<06:15,  2.44it/s, loss=0.115, v_num=3]Epoch 0:  64%|██████▍   | 1610/2524 [11:00<06:15,  2.44it/s, loss=0.112, v_num=3]Epoch 0:  64%|██████▍   | 1620/2524 [11:04<06:11,  2.44it/s, loss=0.112, v_num=3]Epoch 0:  64%|██████▍   | 1620/2524 [11:04<06:11,  2.44it/s, loss=0.104, v_num=3]Epoch 0:  65%|██████▍   | 1630/2524 [11:08<06:06,  2.44it/s, loss=0.104, v_num=3]Epoch 0:  65%|██████▍   | 1630/2524 [11:09<06:06,  2.44it/s, loss=0.118, v_num=3]Epoch 0:  65%|██████▍   | 1640/2524 [11:13<06:02,  2.44it/s, loss=0.118, v_num=3]Epoch 0:  65%|██████▍   | 1640/2524 [11:13<06:02,  2.44it/s, loss=0.123, v_num=3]Epoch 0:  65%|██████▌   | 1650/2524 [11:17<05:58,  2.44it/s, loss=0.123, v_num=3]Epoch 0:  65%|██████▌   | 1650/2524 [11:17<05:58,  2.44it/s, loss=0.109, v_num=3]Epoch 0:  66%|██████▌   | 1660/2524 [11:21<05:54,  2.44it/s, loss=0.109, v_num=3]Epoch 0:  66%|██████▌   | 1660/2524 [11:21<05:54,  2.44it/s, loss=0.104, v_num=3]Epoch 0:  66%|██████▌   | 1670/2524 [11:25<05:50,  2.44it/s, loss=0.104, v_num=3]Epoch 0:  66%|██████▌   | 1670/2524 [11:25<05:50,  2.44it/s, loss=0.108, v_num=3]Epoch 0:  67%|██████▋   | 1680/2524 [11:29<05:46,  2.44it/s, loss=0.108, v_num=3]Epoch 0:  67%|██████▋   | 1680/2524 [11:29<05:46,  2.44it/s, loss=0.106, v_num=3]Epoch 0:  67%|██████▋   | 1690/2524 [11:33<05:42,  2.44it/s, loss=0.106, v_num=3]Epoch 0:  67%|██████▋   | 1690/2524 [11:33<05:42,  2.44it/s, loss=0.104, v_num=3]Epoch 0:  67%|██████▋   | 1700/2524 [11:37<05:38,  2.44it/s, loss=0.104, v_num=3]Epoch 0:  67%|██████▋   | 1700/2524 [11:37<05:38,  2.44it/s, loss=0.112, v_num=3]Epoch 0:  68%|██████▊   | 1710/2524 [11:41<05:34,  2.44it/s, loss=0.112, v_num=3]Epoch 0:  68%|██████▊   | 1710/2524 [11:41<05:34,  2.44it/s, loss=0.117, v_num=3]Epoch 0:  68%|██████▊   | 1720/2524 [11:46<05:30,  2.44it/s, loss=0.117, v_num=3]Epoch 0:  68%|██████▊   | 1720/2524 [11:46<05:30,  2.44it/s, loss=0.107, v_num=3]Epoch 0:  69%|██████▊   | 1730/2524 [11:50<05:25,  2.44it/s, loss=0.107, v_num=3]Epoch 0:  69%|██████▊   | 1730/2524 [11:50<05:25,  2.44it/s, loss=0.0919, v_num=3]Epoch 0:  69%|██████▉   | 1740/2524 [11:54<05:21,  2.44it/s, loss=0.0919, v_num=3]Epoch 0:  69%|██████▉   | 1740/2524 [11:54<05:21,  2.44it/s, loss=0.108, v_num=3] Epoch 0:  69%|██████▉   | 1750/2524 [11:58<05:17,  2.44it/s, loss=0.108, v_num=3]Epoch 0:  69%|██████▉   | 1750/2524 [11:58<05:17,  2.44it/s, loss=0.109, v_num=3]Epoch 0:  70%|██████▉   | 1760/2524 [12:02<05:13,  2.44it/s, loss=0.109, v_num=3]Epoch 0:  70%|██████▉   | 1760/2524 [12:02<05:13,  2.44it/s, loss=0.0977, v_num=3]Epoch 0:  70%|███████   | 1770/2524 [12:06<05:09,  2.44it/s, loss=0.0977, v_num=3]Epoch 0:  70%|███████   | 1770/2524 [12:06<05:09,  2.44it/s, loss=0.103, v_num=3] Epoch 0:  71%|███████   | 1780/2524 [12:10<05:05,  2.44it/s, loss=0.103, v_num=3]Epoch 0:  71%|███████   | 1780/2524 [12:10<05:05,  2.44it/s, loss=0.0955, v_num=3]Epoch 0:  71%|███████   | 1790/2524 [12:14<05:01,  2.44it/s, loss=0.0955, v_num=3]Epoch 0:  71%|███████   | 1790/2524 [12:14<05:01,  2.44it/s, loss=0.104, v_num=3] Epoch 0:  71%|███████▏  | 1800/2524 [12:18<04:57,  2.44it/s, loss=0.104, v_num=3]Epoch 0:  71%|███████▏  | 1800/2524 [12:18<04:57,  2.44it/s, loss=0.117, v_num=3]Epoch 0:  72%|███████▏  | 1810/2524 [12:23<04:53,  2.44it/s, loss=0.117, v_num=3]Epoch 0:  72%|███████▏  | 1810/2524 [12:23<04:53,  2.44it/s, loss=0.11, v_num=3] Epoch 0:  72%|███████▏  | 1820/2524 [12:27<04:48,  2.44it/s, loss=0.11, v_num=3]Epoch 0:  72%|███████▏  | 1820/2524 [12:27<04:49,  2.44it/s, loss=0.108, v_num=3]Epoch 0:  73%|███████▎  | 1830/2524 [12:31<04:44,  2.44it/s, loss=0.108, v_num=3]Epoch 0:  73%|███████▎  | 1830/2524 [12:31<04:44,  2.44it/s, loss=0.107, v_num=3]Epoch 0:  73%|███████▎  | 1840/2524 [12:35<04:40,  2.44it/s, loss=0.107, v_num=3]Epoch 0:  73%|███████▎  | 1840/2524 [12:35<04:40,  2.44it/s, loss=0.11, v_num=3] Epoch 0:  73%|███████▎  | 1850/2524 [12:39<04:36,  2.44it/s, loss=0.11, v_num=3]Epoch 0:  73%|███████▎  | 1850/2524 [12:39<04:36,  2.44it/s, loss=0.116, v_num=3]Epoch 0:  74%|███████▎  | 1860/2524 [12:43<04:32,  2.44it/s, loss=0.116, v_num=3]Epoch 0:  74%|███████▎  | 1860/2524 [12:43<04:32,  2.44it/s, loss=0.111, v_num=3]Epoch 0:  74%|███████▍  | 1870/2524 [12:47<04:28,  2.44it/s, loss=0.111, v_num=3]Epoch 0:  74%|███████▍  | 1870/2524 [12:47<04:28,  2.44it/s, loss=0.11, v_num=3] Epoch 0:  74%|███████▍  | 1880/2524 [12:51<04:24,  2.44it/s, loss=0.11, v_num=3]Epoch 0:  74%|███████▍  | 1880/2524 [12:51<04:24,  2.44it/s, loss=0.112, v_num=3]Epoch 0:  75%|███████▍  | 1890/2524 [12:55<04:20,  2.44it/s, loss=0.112, v_num=3]Epoch 0:  75%|███████▍  | 1890/2524 [12:55<04:20,  2.44it/s, loss=0.111, v_num=3]Epoch 0:  75%|███████▌  | 1900/2524 [12:59<04:16,  2.44it/s, loss=0.111, v_num=3]Epoch 0:  75%|███████▌  | 1900/2524 [12:59<04:16,  2.44it/s, loss=0.103, v_num=3]Epoch 0:  76%|███████▌  | 1910/2524 [13:04<04:12,  2.44it/s, loss=0.103, v_num=3]Epoch 0:  76%|███████▌  | 1910/2524 [13:04<04:12,  2.44it/s, loss=0.104, v_num=3]Epoch 0:  76%|███████▌  | 1920/2524 [13:08<04:07,  2.44it/s, loss=0.104, v_num=3]Epoch 0:  76%|███████▌  | 1920/2524 [13:08<04:07,  2.44it/s, loss=0.106, v_num=3]Epoch 0:  76%|███████▋  | 1930/2524 [13:12<04:03,  2.44it/s, loss=0.106, v_num=3]Epoch 0:  76%|███████▋  | 1930/2524 [13:12<04:03,  2.44it/s, loss=0.103, v_num=3]Epoch 0:  77%|███████▋  | 1940/2524 [13:16<03:59,  2.44it/s, loss=0.103, v_num=3]Epoch 0:  77%|███████▋  | 1940/2524 [13:16<03:59,  2.44it/s, loss=0.109, v_num=3]Epoch 0:  77%|███████▋  | 1950/2524 [13:20<03:55,  2.44it/s, loss=0.109, v_num=3]Epoch 0:  77%|███████▋  | 1950/2524 [13:20<03:55,  2.44it/s, loss=0.106, v_num=3]Epoch 0:  78%|███████▊  | 1960/2524 [13:24<03:51,  2.44it/s, loss=0.106, v_num=3]Epoch 0:  78%|███████▊  | 1960/2524 [13:24<03:51,  2.44it/s, loss=0.0998, v_num=3]Epoch 0:  78%|███████▊  | 1970/2524 [13:28<03:47,  2.44it/s, loss=0.0998, v_num=3]Epoch 0:  78%|███████▊  | 1970/2524 [13:28<03:47,  2.44it/s, loss=0.0949, v_num=3]Epoch 0:  78%|███████▊  | 1980/2524 [13:32<03:43,  2.44it/s, loss=0.0949, v_num=3]Epoch 0:  78%|███████▊  | 1980/2524 [13:32<03:43,  2.44it/s, loss=0.096, v_num=3] Epoch 0:  79%|███████▉  | 1990/2524 [13:36<03:39,  2.44it/s, loss=0.096, v_num=3]Epoch 0:  79%|███████▉  | 1990/2524 [13:36<03:39,  2.44it/s, loss=0.1, v_num=3]  Epoch 0:  79%|███████▉  | 2000/2524 [13:41<03:35,  2.44it/s, loss=0.1, v_num=3]Epoch 0:  79%|███████▉  | 2000/2524 [13:41<03:35,  2.44it/s, loss=0.102, v_num=3]Epoch 0:  80%|███████▉  | 2010/2524 [13:45<03:31,  2.44it/s, loss=0.102, v_num=3]Epoch 0:  80%|███████▉  | 2010/2524 [13:45<03:31,  2.44it/s, loss=0.1, v_num=3]  Epoch 0:  80%|████████  | 2020/2524 [13:49<03:26,  2.44it/s, loss=0.1, v_num=3]Epoch 0:  80%|████████  | 2020/2524 [13:49<03:26,  2.44it/s, loss=0.0952, v_num=3]Epoch 0:  80%|████████  | 2030/2524 [13:53<03:22,  2.44it/s, loss=0.0952, v_num=3]Epoch 0:  80%|████████  | 2030/2524 [13:53<03:22,  2.44it/s, loss=0.0949, v_num=3]Epoch 0:  81%|████████  | 2040/2524 [13:57<03:18,  2.44it/s, loss=0.0949, v_num=3]Epoch 0:  81%|████████  | 2040/2524 [13:57<03:18,  2.44it/s, loss=0.103, v_num=3] Epoch 0:  81%|████████  | 2050/2524 [14:01<03:14,  2.44it/s, loss=0.103, v_num=3]Epoch 0:  81%|████████  | 2050/2524 [14:01<03:14,  2.44it/s, loss=0.102, v_num=3]Epoch 0:  82%|████████▏ | 2060/2524 [14:05<03:10,  2.44it/s, loss=0.102, v_num=3]Epoch 0:  82%|████████▏ | 2060/2524 [14:05<03:10,  2.44it/s, loss=0.0911, v_num=3]Epoch 0:  82%|████████▏ | 2070/2524 [14:09<03:06,  2.44it/s, loss=0.0911, v_num=3]Epoch 0:  82%|████████▏ | 2070/2524 [14:09<03:06,  2.44it/s, loss=0.0889, v_num=3]Epoch 0:  82%|████████▏ | 2080/2524 [14:13<03:02,  2.44it/s, loss=0.0889, v_num=3]Epoch 0:  82%|████████▏ | 2080/2524 [14:13<03:02,  2.44it/s, loss=0.0936, v_num=3]Epoch 0:  83%|████████▎ | 2090/2524 [14:18<02:58,  2.44it/s, loss=0.0936, v_num=3]Epoch 0:  83%|████████▎ | 2090/2524 [14:18<02:58,  2.44it/s, loss=0.0964, v_num=3]Epoch 0:  83%|████████▎ | 2100/2524 [14:22<02:54,  2.44it/s, loss=0.0964, v_num=3]Epoch 0:  83%|████████▎ | 2100/2524 [14:22<02:54,  2.44it/s, loss=0.0906, v_num=3]Epoch 0:  84%|████████▎ | 2110/2524 [14:26<02:49,  2.44it/s, loss=0.0906, v_num=3]Epoch 0:  84%|████████▎ | 2110/2524 [14:26<02:49,  2.44it/s, loss=0.0914, v_num=3]Epoch 0:  84%|████████▍ | 2120/2524 [14:30<02:45,  2.44it/s, loss=0.0914, v_num=3]Epoch 0:  84%|████████▍ | 2120/2524 [14:30<02:45,  2.44it/s, loss=0.101, v_num=3] Epoch 0:  84%|████████▍ | 2130/2524 [14:34<02:41,  2.44it/s, loss=0.101, v_num=3]Epoch 0:  84%|████████▍ | 2130/2524 [14:34<02:41,  2.44it/s, loss=0.104, v_num=3]Epoch 0:  85%|████████▍ | 2140/2524 [14:38<02:37,  2.44it/s, loss=0.104, v_num=3]Epoch 0:  85%|████████▍ | 2140/2524 [14:38<02:37,  2.44it/s, loss=0.0928, v_num=3]Epoch 0:  85%|████████▌ | 2150/2524 [14:42<02:33,  2.44it/s, loss=0.0928, v_num=3]Epoch 0:  85%|████████▌ | 2150/2524 [14:42<02:33,  2.44it/s, loss=0.0958, v_num=3]Epoch 0:  86%|████████▌ | 2160/2524 [14:46<02:29,  2.44it/s, loss=0.0958, v_num=3]Epoch 0:  86%|████████▌ | 2160/2524 [14:46<02:29,  2.44it/s, loss=0.0958, v_num=3]Epoch 0:  86%|████████▌ | 2170/2524 [14:50<02:25,  2.44it/s, loss=0.0958, v_num=3]Epoch 0:  86%|████████▌ | 2170/2524 [14:50<02:25,  2.44it/s, loss=0.093, v_num=3] Epoch 0:  86%|████████▋ | 2180/2524 [14:55<02:21,  2.44it/s, loss=0.093, v_num=3]Epoch 0:  86%|████████▋ | 2180/2524 [14:55<02:21,  2.44it/s, loss=0.0877, v_num=3]Epoch 0:  87%|████████▋ | 2190/2524 [14:59<02:17,  2.44it/s, loss=0.0877, v_num=3]Epoch 0:  87%|████████▋ | 2190/2524 [14:59<02:17,  2.44it/s, loss=0.0788, v_num=3]Epoch 0:  87%|████████▋ | 2200/2524 [15:03<02:13,  2.44it/s, loss=0.0788, v_num=3]Epoch 0:  87%|████████▋ | 2200/2524 [15:03<02:13,  2.44it/s, loss=0.0861, v_num=3]Epoch 0:  88%|████████▊ | 2210/2524 [15:07<02:08,  2.44it/s, loss=0.0861, v_num=3]Epoch 0:  88%|████████▊ | 2210/2524 [15:07<02:08,  2.44it/s, loss=0.104, v_num=3] Epoch 0:  88%|████████▊ | 2220/2524 [15:11<02:04,  2.44it/s, loss=0.104, v_num=3]Epoch 0:  88%|████████▊ | 2220/2524 [15:11<02:04,  2.44it/s, loss=0.111, v_num=3]Epoch 0:  88%|████████▊ | 2230/2524 [15:15<02:00,  2.44it/s, loss=0.111, v_num=3]Epoch 0:  88%|████████▊ | 2230/2524 [15:15<02:00,  2.44it/s, loss=0.103, v_num=3]Epoch 0:  89%|████████▊ | 2240/2524 [15:19<01:56,  2.44it/s, loss=0.103, v_num=3]Epoch 0:  89%|████████▊ | 2240/2524 [15:19<01:56,  2.44it/s, loss=0.0947, v_num=3]Epoch 0:  89%|████████▉ | 2250/2524 [15:23<01:52,  2.44it/s, loss=0.0947, v_num=3]Epoch 0:  89%|████████▉ | 2250/2524 [15:23<01:52,  2.44it/s, loss=0.0983, v_num=3]Epoch 0:  90%|████████▉ | 2260/2524 [15:27<01:48,  2.44it/s, loss=0.0983, v_num=3]Epoch 0:  90%|████████▉ | 2260/2524 [15:27<01:48,  2.44it/s, loss=0.0947, v_num=3]Epoch 0:  90%|████████▉ | 2270/2524 [15:32<01:44,  2.44it/s, loss=0.0947, v_num=3]Epoch 0:  90%|████████▉ | 2270/2524 [15:32<01:44,  2.44it/s, loss=0.0923, v_num=3]Epoch 0:  90%|█████████ | 2280/2524 [15:36<01:40,  2.44it/s, loss=0.0923, v_num=3]Epoch 0:  90%|█████████ | 2280/2524 [15:36<01:40,  2.44it/s, loss=0.106, v_num=3] Epoch 0:  91%|█████████ | 2290/2524 [15:40<01:36,  2.44it/s, loss=0.106, v_num=3]Epoch 0:  91%|█████████ | 2290/2524 [15:40<01:36,  2.44it/s, loss=0.1, v_num=3]  Epoch 0:  91%|█████████ | 2300/2524 [15:44<01:31,  2.44it/s, loss=0.1, v_num=3]Epoch 0:  91%|█████████ | 2300/2524 [15:44<01:31,  2.44it/s, loss=0.0953, v_num=3]Epoch 0:  92%|█████████▏| 2310/2524 [15:48<01:27,  2.44it/s, loss=0.0953, v_num=3]Epoch 0:  92%|█████████▏| 2310/2524 [15:48<01:27,  2.44it/s, loss=0.0956, v_num=3]Epoch 0:  92%|█████████▏| 2320/2524 [15:52<01:23,  2.44it/s, loss=0.0956, v_num=3]Epoch 0:  92%|█████████▏| 2320/2524 [15:52<01:23,  2.44it/s, loss=0.0935, v_num=3]Epoch 0:  92%|█████████▏| 2330/2524 [15:56<01:19,  2.44it/s, loss=0.0935, v_num=3]Epoch 0:  92%|█████████▏| 2330/2524 [15:56<01:19,  2.44it/s, loss=0.0861, v_num=3]Epoch 0:  93%|█████████▎| 2340/2524 [16:00<01:15,  2.44it/s, loss=0.0861, v_num=3]Epoch 0:  93%|█████████▎| 2340/2524 [16:00<01:15,  2.44it/s, loss=0.0874, v_num=3]Epoch 0:  93%|█████████▎| 2350/2524 [16:04<01:11,  2.44it/s, loss=0.0874, v_num=3]Epoch 0:  93%|█████████▎| 2350/2524 [16:04<01:11,  2.44it/s, loss=0.101, v_num=3] Epoch 0:  94%|█████████▎| 2360/2524 [16:09<01:07,  2.44it/s, loss=0.101, v_num=3]Epoch 0:  94%|█████████▎| 2360/2524 [16:09<01:07,  2.44it/s, loss=0.0947, v_num=3]Epoch 0:  94%|█████████▍| 2370/2524 [16:13<01:03,  2.44it/s, loss=0.0947, v_num=3]Epoch 0:  94%|█████████▍| 2370/2524 [16:13<01:03,  2.44it/s, loss=0.0828, v_num=3]Epoch 0:  94%|█████████▍| 2380/2524 [16:17<00:59,  2.44it/s, loss=0.0828, v_num=3]Epoch 0:  94%|█████████▍| 2380/2524 [16:17<00:59,  2.44it/s, loss=0.0832, v_num=3]Epoch 0:  95%|█████████▍| 2390/2524 [16:21<00:55,  2.44it/s, loss=0.0832, v_num=3]Epoch 0:  95%|█████████▍| 2390/2524 [16:21<00:55,  2.44it/s, loss=0.0962, v_num=3]Epoch 0:  95%|█████████▌| 2400/2524 [16:25<00:50,  2.44it/s, loss=0.0962, v_num=3]Epoch 0:  95%|█████████▌| 2400/2524 [16:25<00:50,  2.44it/s, loss=0.0987, v_num=3]Epoch 0:  95%|█████████▌| 2410/2524 [16:29<00:46,  2.44it/s, loss=0.0987, v_num=3]Epoch 0:  95%|█████████▌| 2410/2524 [16:29<00:46,  2.44it/s, loss=0.0913, v_num=3]Epoch 0:  96%|█████████▌| 2420/2524 [16:33<00:42,  2.44it/s, loss=0.0913, v_num=3]Epoch 0:  96%|█████████▌| 2420/2524 [16:33<00:42,  2.44it/s, loss=0.0873, v_num=3]Epoch 0:  96%|█████████▋| 2430/2524 [16:37<00:38,  2.44it/s, loss=0.0873, v_num=3]Epoch 0:  96%|█████████▋| 2430/2524 [16:37<00:38,  2.44it/s, loss=0.0868, v_num=3]Epoch 0:  97%|█████████▋| 2440/2524 [16:41<00:34,  2.44it/s, loss=0.0868, v_num=3]Epoch 0:  97%|█████████▋| 2440/2524 [16:41<00:34,  2.44it/s, loss=0.0845, v_num=3]Epoch 0:  97%|█████████▋| 2450/2524 [16:46<00:30,  2.44it/s, loss=0.0845, v_num=3]Epoch 0:  97%|█████████▋| 2450/2524 [16:46<00:30,  2.44it/s, loss=0.0847, v_num=3]Epoch 0:  97%|█████████▋| 2460/2524 [16:50<00:26,  2.44it/s, loss=0.0847, v_num=3]Epoch 0:  97%|█████████▋| 2460/2524 [16:50<00:26,  2.44it/s, loss=0.0883, v_num=3]Epoch 0:  98%|█████████▊| 2470/2524 [16:54<00:22,  2.44it/s, loss=0.0883, v_num=3]Epoch 0:  98%|█████████▊| 2470/2524 [16:54<00:22,  2.44it/s, loss=0.0925, v_num=3]Epoch 0:  98%|█████████▊| 2480/2524 [16:58<00:18,  2.44it/s, loss=0.0925, v_num=3]Epoch 0:  98%|█████████▊| 2480/2524 [16:58<00:18,  2.44it/s, loss=0.0962, v_num=3]Epoch 0:  99%|█████████▊| 2490/2524 [17:02<00:13,  2.44it/s, loss=0.0962, v_num=3]Epoch 0:  99%|█████████▊| 2490/2524 [17:02<00:13,  2.44it/s, loss=0.093, v_num=3] Epoch 0:  99%|█████████▉| 2500/2524 [17:06<00:09,  2.44it/s, loss=0.093, v_num=3]Epoch 0:  99%|█████████▉| 2500/2524 [17:06<00:09,  2.44it/s, loss=0.089, v_num=3]Epoch 0:  99%|█████████▉| 2510/2524 [17:10<00:05,  2.44it/s, loss=0.089, v_num=3]Epoch 0:  99%|█████████▉| 2510/2524 [17:10<00:05,  2.44it/s, loss=0.0855, v_num=3]Epoch 0: 100%|█████████▉| 2520/2524 [17:14<00:01,  2.44it/s, loss=0.0855, v_num=3]Epoch 0: 100%|█████████▉| 2520/2524 [17:14<00:01,  2.44it/s, loss=0.0846, v_num=3]Epoch 0: 100%|██████████| 2524/2524 [17:16<00:00,  2.44it/s, loss=0.0846, v_num=3]Epoch 0: 100%|██████████| 2524/2524 [17:16<00:00,  2.44it/s, loss=0.0904, v_num=3]Epoch 0: 100%|██████████| 2524/2524 [17:16<00:00,  2.44it/s, loss=0.0904, v_num=3]Epoch 0:   0%|          | 0/2524 [00:00<?, ?it/s, loss=0.0904, v_num=3]           Epoch 1:   0%|          | 0/2524 [00:00<?, ?it/s, loss=0.0904, v_num=3]Epoch 1:   0%|          | 10/2524 [00:04<18:45,  2.23it/s, loss=0.0904, v_num=3]Epoch 1:   0%|          | 10/2524 [00:04<18:48,  2.23it/s, loss=0.0857, v_num=3]Epoch 1:   1%|          | 20/2524 [00:08<17:52,  2.33it/s, loss=0.0857, v_num=3]Epoch 1:   1%|          | 20/2524 [00:08<17:54,  2.33it/s, loss=0.0839, v_num=3]Epoch 1:   1%|          | 30/2524 [00:12<17:36,  2.36it/s, loss=0.0839, v_num=3]Epoch 1:   1%|          | 30/2524 [00:12<17:37,  2.36it/s, loss=0.0769, v_num=3]Epoch 1:   2%|▏         | 40/2524 [00:16<17:23,  2.38it/s, loss=0.0769, v_num=3]Epoch 1:   2%|▏         | 40/2524 [00:16<17:24,  2.38it/s, loss=0.0729, v_num=3]Epoch 1:   2%|▏         | 50/2524 [00:20<17:13,  2.39it/s, loss=0.0729, v_num=3]Epoch 1:   2%|▏         | 50/2524 [00:20<17:14,  2.39it/s, loss=0.0741, v_num=3]Epoch 1:   2%|▏         | 60/2524 [00:24<17:06,  2.40it/s, loss=0.0741, v_num=3]Epoch 1:   2%|▏         | 60/2524 [00:25<17:06,  2.40it/s, loss=0.0784, v_num=3]Epoch 1:   3%|▎         | 70/2524 [00:29<16:59,  2.41it/s, loss=0.0784, v_num=3]Epoch 1:   3%|▎         | 70/2524 [00:29<16:59,  2.41it/s, loss=0.0766, v_num=3]Epoch 1:   3%|▎         | 80/2524 [00:33<16:57,  2.40it/s, loss=0.0766, v_num=3]Epoch 1:   3%|▎         | 80/2524 [00:33<16:58,  2.40it/s, loss=0.0705, v_num=3]Epoch 1:   4%|▎         | 90/2524 [00:37<16:51,  2.41it/s, loss=0.0705, v_num=3]Epoch 1:   4%|▎         | 90/2524 [00:37<16:52,  2.41it/s, loss=0.0739, v_num=3]Epoch 1:   4%|▍         | 100/2524 [00:41<16:45,  2.41it/s, loss=0.0739, v_num=3]Epoch 1:   4%|▍         | 100/2524 [00:41<16:46,  2.41it/s, loss=0.0706, v_num=3]Epoch 1:   4%|▍         | 110/2524 [00:45<16:40,  2.41it/s, loss=0.0706, v_num=3]Epoch 1:   4%|▍         | 110/2524 [00:45<16:40,  2.41it/s, loss=0.0721, v_num=3]Epoch 1:   5%|▍         | 120/2524 [00:49<16:35,  2.42it/s, loss=0.0721, v_num=3]Epoch 1:   5%|▍         | 120/2524 [00:49<16:35,  2.41it/s, loss=0.0769, v_num=3]Epoch 1:   5%|▌         | 130/2524 [00:53<16:31,  2.42it/s, loss=0.0769, v_num=3]Epoch 1:   5%|▌         | 130/2524 [00:53<16:31,  2.41it/s, loss=0.0754, v_num=3]Epoch 1:   6%|▌         | 140/2524 [00:57<16:26,  2.42it/s, loss=0.0754, v_num=3]Epoch 1:   6%|▌         | 140/2524 [00:57<16:26,  2.42it/s, loss=0.0781, v_num=3]Epoch 1:   6%|▌         | 150/2524 [01:02<16:21,  2.42it/s, loss=0.0781, v_num=3]Epoch 1:   6%|▌         | 150/2524 [01:02<16:21,  2.42it/s, loss=0.0826, v_num=3]Epoch 1:   6%|▋         | 160/2524 [01:06<16:16,  2.42it/s, loss=0.0826, v_num=3]Epoch 1:   6%|▋         | 160/2524 [01:06<16:16,  2.42it/s, loss=0.0761, v_num=3]Epoch 1:   7%|▋         | 170/2524 [01:10<16:12,  2.42it/s, loss=0.0761, v_num=3]Epoch 1:   7%|▋         | 170/2524 [01:10<16:12,  2.42it/s, loss=0.075, v_num=3] Epoch 1:   7%|▋         | 180/2524 [01:14<16:10,  2.42it/s, loss=0.075, v_num=3]Epoch 1:   7%|▋         | 180/2524 [01:14<16:10,  2.42it/s, loss=0.0763, v_num=3]Epoch 1:   8%|▊         | 190/2524 [01:18<16:05,  2.42it/s, loss=0.0763, v_num=3]Epoch 1:   8%|▊         | 190/2524 [01:18<16:05,  2.42it/s, loss=0.084, v_num=3] Epoch 1:   8%|▊         | 200/2524 [01:22<16:00,  2.42it/s, loss=0.084, v_num=3]Epoch 1:   8%|▊         | 200/2524 [01:22<16:00,  2.42it/s, loss=0.0922, v_num=3]Epoch 1:   8%|▊         | 210/2524 [01:26<15:56,  2.42it/s, loss=0.0922, v_num=3]Epoch 1:   8%|▊         | 210/2524 [01:26<15:56,  2.42it/s, loss=0.0832, v_num=3]Epoch 1:   9%|▊         | 220/2524 [01:30<15:51,  2.42it/s, loss=0.0832, v_num=3]Epoch 1:   9%|▊         | 220/2524 [01:30<15:51,  2.42it/s, loss=0.066, v_num=3] Epoch 1:   9%|▉         | 230/2524 [01:35<15:47,  2.42it/s, loss=0.066, v_num=3]Epoch 1:   9%|▉         | 230/2524 [01:35<15:47,  2.42it/s, loss=0.0611, v_num=3]Epoch 1:  10%|▉         | 240/2524 [01:39<15:43,  2.42it/s, loss=0.0611, v_num=3]Epoch 1:  10%|▉         | 240/2524 [01:39<15:43,  2.42it/s, loss=0.0703, v_num=3]Epoch 1:  10%|▉         | 250/2524 [01:43<15:38,  2.42it/s, loss=0.0703, v_num=3]Epoch 1:  10%|▉         | 250/2524 [01:43<15:38,  2.42it/s, loss=0.074, v_num=3] Epoch 1:  10%|█         | 260/2524 [01:47<15:34,  2.42it/s, loss=0.074, v_num=3]Epoch 1:  10%|█         | 260/2524 [01:47<15:34,  2.42it/s, loss=0.0723, v_num=3]Epoch 1:  11%|█         | 270/2524 [01:51<15:29,  2.42it/s, loss=0.0723, v_num=3]Epoch 1:  11%|█         | 270/2524 [01:51<15:29,  2.42it/s, loss=0.0753, v_num=3]Epoch 1:  11%|█         | 280/2524 [01:55<15:26,  2.42it/s, loss=0.0753, v_num=3]Epoch 1:  11%|█         | 280/2524 [01:55<15:26,  2.42it/s, loss=0.0757, v_num=3]Epoch 1:  11%|█▏        | 290/2524 [01:59<15:21,  2.42it/s, loss=0.0757, v_num=3]Epoch 1:  11%|█▏        | 290/2524 [01:59<15:22,  2.42it/s, loss=0.071, v_num=3] Epoch 1:  12%|█▏        | 300/2524 [02:03<15:17,  2.42it/s, loss=0.071, v_num=3]Epoch 1:  12%|█▏        | 300/2524 [02:03<15:17,  2.42it/s, loss=0.0718, v_num=3]Epoch 1:  12%|█▏        | 310/2524 [02:07<15:13,  2.42it/s, loss=0.0718, v_num=3]Epoch 1:  12%|█▏        | 310/2524 [02:07<15:13,  2.42it/s, loss=0.0801, v_num=3]Epoch 1:  13%|█▎        | 320/2524 [02:11<15:08,  2.42it/s, loss=0.0801, v_num=3]Epoch 1:  13%|█▎        | 320/2524 [02:11<15:08,  2.42it/s, loss=0.0852, v_num=3]Epoch 1:  13%|█▎        | 330/2524 [02:16<15:04,  2.42it/s, loss=0.0852, v_num=3]Epoch 1:  13%|█▎        | 330/2524 [02:16<15:04,  2.42it/s, loss=0.0754, v_num=3]Epoch 1:  13%|█▎        | 340/2524 [02:20<15:00,  2.43it/s, loss=0.0754, v_num=3]Epoch 1:  13%|█▎        | 340/2524 [02:20<15:00,  2.43it/s, loss=0.0756, v_num=3]Epoch 1:  14%|█▍        | 350/2524 [02:24<14:56,  2.43it/s, loss=0.0756, v_num=3]Epoch 1:  14%|█▍        | 350/2524 [02:24<14:56,  2.43it/s, loss=0.0742, v_num=3]Epoch 1:  14%|█▍        | 360/2524 [02:28<14:51,  2.43it/s, loss=0.0742, v_num=3]Epoch 1:  14%|█▍        | 360/2524 [02:28<14:51,  2.43it/s, loss=0.0661, v_num=3]Epoch 1:  15%|█▍        | 370/2524 [02:32<14:47,  2.43it/s, loss=0.0661, v_num=3]Epoch 1:  15%|█▍        | 370/2524 [02:32<14:47,  2.43it/s, loss=0.0706, v_num=3]Epoch 1:  15%|█▌        | 380/2524 [02:36<14:44,  2.43it/s, loss=0.0706, v_num=3]Epoch 1:  15%|█▌        | 380/2524 [02:36<14:44,  2.42it/s, loss=0.0809, v_num=3]Epoch 1:  15%|█▌        | 390/2524 [02:40<14:39,  2.43it/s, loss=0.0809, v_num=3]Epoch 1:  15%|█▌        | 390/2524 [02:40<14:39,  2.43it/s, loss=0.0794, v_num=3]Epoch 1:  16%|█▌        | 400/2524 [02:44<14:35,  2.43it/s, loss=0.0794, v_num=3]Epoch 1:  16%|█▌        | 400/2524 [02:44<14:35,  2.43it/s, loss=0.0711, v_num=3]Epoch 1:  16%|█▌        | 410/2524 [02:48<14:31,  2.43it/s, loss=0.0711, v_num=3]Epoch 1:  16%|█▌        | 410/2524 [02:48<14:31,  2.43it/s, loss=0.0739, v_num=3]Epoch 1:  17%|█▋        | 420/2524 [02:53<14:26,  2.43it/s, loss=0.0739, v_num=3]Epoch 1:  17%|█▋        | 420/2524 [02:53<14:27,  2.43it/s, loss=0.0723, v_num=3]Epoch 1:  17%|█▋        | 430/2524 [02:57<14:22,  2.43it/s, loss=0.0723, v_num=3]Epoch 1:  17%|█▋        | 430/2524 [02:57<14:23,  2.43it/s, loss=0.0622, v_num=3]Epoch 1:  17%|█▋        | 440/2524 [03:01<14:18,  2.43it/s, loss=0.0622, v_num=3]Epoch 1:  17%|█▋        | 440/2524 [03:01<14:18,  2.43it/s, loss=0.0652, v_num=3]Epoch 1:  18%|█▊        | 450/2524 [03:05<14:14,  2.43it/s, loss=0.0652, v_num=3]Epoch 1:  18%|█▊        | 450/2524 [03:05<14:14,  2.43it/s, loss=0.0694, v_num=3]Epoch 1:  18%|█▊        | 460/2524 [03:09<14:10,  2.43it/s, loss=0.0694, v_num=3]Epoch 1:  18%|█▊        | 460/2524 [03:09<14:10,  2.43it/s, loss=0.0656, v_num=3]Epoch 1:  19%|█▊        | 470/2524 [03:13<14:06,  2.43it/s, loss=0.0656, v_num=3]Epoch 1:  19%|█▊        | 470/2524 [03:13<14:06,  2.43it/s, loss=0.066, v_num=3] Epoch 1:  19%|█▉        | 480/2524 [03:17<14:02,  2.43it/s, loss=0.066, v_num=3]Epoch 1:  19%|█▉        | 480/2524 [03:17<14:02,  2.43it/s, loss=0.0701, v_num=3]Epoch 1:  19%|█▉        | 490/2524 [03:21<13:58,  2.43it/s, loss=0.0701, v_num=3]Epoch 1:  19%|█▉        | 490/2524 [03:21<13:58,  2.43it/s, loss=0.0738, v_num=3]Epoch 1:  20%|█▉        | 500/2524 [03:26<13:53,  2.43it/s, loss=0.0738, v_num=3]Epoch 1:  20%|█▉        | 500/2524 [03:26<13:53,  2.43it/s, loss=0.0687, v_num=3]Epoch 1:  20%|██        | 510/2524 [03:30<13:49,  2.43it/s, loss=0.0687, v_num=3]Epoch 1:  20%|██        | 510/2524 [03:30<13:49,  2.43it/s, loss=0.0669, v_num=3]Epoch 1:  21%|██        | 520/2524 [03:34<13:45,  2.43it/s, loss=0.0669, v_num=3]Epoch 1:  21%|██        | 520/2524 [03:34<13:45,  2.43it/s, loss=0.0678, v_num=3]Epoch 1:  21%|██        | 530/2524 [03:38<13:41,  2.43it/s, loss=0.0678, v_num=3]Epoch 1:  21%|██        | 530/2524 [03:38<13:41,  2.43it/s, loss=0.0684, v_num=3]Epoch 1:  21%|██▏       | 540/2524 [03:42<13:37,  2.43it/s, loss=0.0684, v_num=3]Epoch 1:  21%|██▏       | 540/2524 [03:42<13:37,  2.43it/s, loss=0.0678, v_num=3]Epoch 1:  22%|██▏       | 550/2524 [03:46<13:33,  2.43it/s, loss=0.0678, v_num=3]Epoch 1:  22%|██▏       | 550/2524 [03:46<13:33,  2.43it/s, loss=0.0693, v_num=3]Epoch 1:  22%|██▏       | 560/2524 [03:50<13:28,  2.43it/s, loss=0.0693, v_num=3]Epoch 1:  22%|██▏       | 560/2524 [03:50<13:28,  2.43it/s, loss=0.0711, v_num=3]Epoch 1:  23%|██▎       | 570/2524 [03:54<13:24,  2.43it/s, loss=0.0711, v_num=3]Epoch 1:  23%|██▎       | 570/2524 [03:54<13:24,  2.43it/s, loss=0.0708, v_num=3]Epoch 1:  23%|██▎       | 580/2524 [03:58<13:20,  2.43it/s, loss=0.0708, v_num=3]Epoch 1:  23%|██▎       | 580/2524 [03:58<13:20,  2.43it/s, loss=0.0686, v_num=3]Epoch 1:  23%|██▎       | 590/2524 [04:03<13:16,  2.43it/s, loss=0.0686, v_num=3]Epoch 1:  23%|██▎       | 590/2524 [04:03<13:16,  2.43it/s, loss=0.0651, v_num=3]Epoch 1:  24%|██▍       | 600/2524 [04:07<13:12,  2.43it/s, loss=0.0651, v_num=3]Epoch 1:  24%|██▍       | 600/2524 [04:07<13:12,  2.43it/s, loss=0.0677, v_num=3]Epoch 1:  24%|██▍       | 610/2524 [04:11<13:08,  2.43it/s, loss=0.0677, v_num=3]Epoch 1:  24%|██▍       | 610/2524 [04:11<13:08,  2.43it/s, loss=0.0687, v_num=3]Epoch 1:  25%|██▍       | 620/2524 [04:15<13:04,  2.43it/s, loss=0.0687, v_num=3]Epoch 1:  25%|██▍       | 620/2524 [04:15<13:04,  2.43it/s, loss=0.0668, v_num=3]Epoch 1:  25%|██▍       | 630/2524 [04:19<13:00,  2.43it/s, loss=0.0668, v_num=3]Epoch 1:  25%|██▍       | 630/2524 [04:19<13:00,  2.43it/s, loss=0.0681, v_num=3]Epoch 1:  25%|██▌       | 640/2524 [04:23<12:55,  2.43it/s, loss=0.0681, v_num=3]Epoch 1:  25%|██▌       | 640/2524 [04:23<12:55,  2.43it/s, loss=0.0729, v_num=3]Epoch 1:  26%|██▌       | 650/2524 [04:27<12:51,  2.43it/s, loss=0.0729, v_num=3]Epoch 1:  26%|██▌       | 650/2524 [04:27<12:51,  2.43it/s, loss=0.0683, v_num=3]Epoch 1:  26%|██▌       | 660/2524 [04:31<12:47,  2.43it/s, loss=0.0683, v_num=3]Epoch 1:  26%|██▌       | 660/2524 [04:31<12:47,  2.43it/s, loss=0.0717, v_num=3]Epoch 1:  27%|██▋       | 670/2524 [04:35<12:43,  2.43it/s, loss=0.0717, v_num=3]Epoch 1:  27%|██▋       | 670/2524 [04:35<12:43,  2.43it/s, loss=0.0751, v_num=3]Epoch 1:  27%|██▋       | 680/2524 [04:40<12:39,  2.43it/s, loss=0.0751, v_num=3]Epoch 1:  27%|██▋       | 680/2524 [04:40<12:39,  2.43it/s, loss=0.0689, v_num=3]Epoch 1:  27%|██▋       | 690/2524 [04:44<12:35,  2.43it/s, loss=0.0689, v_num=3]Epoch 1:  27%|██▋       | 690/2524 [04:44<12:35,  2.43it/s, loss=0.07, v_num=3]  Epoch 1:  28%|██▊       | 700/2524 [04:48<12:31,  2.43it/s, loss=0.07, v_num=3]Epoch 1:  28%|██▊       | 700/2524 [04:48<12:31,  2.43it/s, loss=0.0731, v_num=3]Epoch 1:  28%|██▊       | 710/2524 [04:52<12:26,  2.43it/s, loss=0.0731, v_num=3]Epoch 1:  28%|██▊       | 710/2524 [04:52<12:26,  2.43it/s, loss=0.0694, v_num=3]Epoch 1:  29%|██▊       | 720/2524 [04:56<12:22,  2.43it/s, loss=0.0694, v_num=3]Epoch 1:  29%|██▊       | 720/2524 [04:56<12:22,  2.43it/s, loss=0.0593, v_num=3]Epoch 1:  29%|██▉       | 730/2524 [05:00<12:18,  2.43it/s, loss=0.0593, v_num=3]Epoch 1:  29%|██▉       | 730/2524 [05:00<12:18,  2.43it/s, loss=0.0602, v_num=3]Epoch 1:  29%|██▉       | 740/2524 [05:04<12:14,  2.43it/s, loss=0.0602, v_num=3]Epoch 1:  29%|██▉       | 740/2524 [05:04<12:14,  2.43it/s, loss=0.0657, v_num=3]Epoch 1:  30%|██▉       | 750/2524 [05:08<12:10,  2.43it/s, loss=0.0657, v_num=3]Epoch 1:  30%|██▉       | 750/2524 [05:08<12:10,  2.43it/s, loss=0.0635, v_num=3]Epoch 1:  30%|███       | 760/2524 [05:12<12:06,  2.43it/s, loss=0.0635, v_num=3]Epoch 1:  30%|███       | 760/2524 [05:12<12:06,  2.43it/s, loss=0.0662, v_num=3]Epoch 1:  31%|███       | 770/2524 [05:16<12:01,  2.43it/s, loss=0.0662, v_num=3]Epoch 1:  31%|███       | 770/2524 [05:16<12:02,  2.43it/s, loss=0.0741, v_num=3]Epoch 1:  31%|███       | 780/2524 [05:21<11:58,  2.43it/s, loss=0.0741, v_num=3]Epoch 1:  31%|███       | 780/2524 [05:21<11:58,  2.43it/s, loss=0.0669, v_num=3]Epoch 1:  31%|███▏      | 790/2524 [05:25<11:53,  2.43it/s, loss=0.0669, v_num=3]Epoch 1:  31%|███▏      | 790/2524 [05:25<11:53,  2.43it/s, loss=0.0645, v_num=3]Epoch 1:  32%|███▏      | 800/2524 [05:29<11:49,  2.43it/s, loss=0.0645, v_num=3]Epoch 1:  32%|███▏      | 800/2524 [05:29<11:49,  2.43it/s, loss=0.0727, v_num=3]Epoch 1:  32%|███▏      | 810/2524 [05:33<11:45,  2.43it/s, loss=0.0727, v_num=3]Epoch 1:  32%|███▏      | 810/2524 [05:33<11:45,  2.43it/s, loss=0.0776, v_num=3]Epoch 1:  32%|███▏      | 820/2524 [05:37<11:41,  2.43it/s, loss=0.0776, v_num=3]Epoch 1:  32%|███▏      | 820/2524 [05:37<11:41,  2.43it/s, loss=0.0743, v_num=3]Epoch 1:  33%|███▎      | 830/2524 [05:41<11:37,  2.43it/s, loss=0.0743, v_num=3]Epoch 1:  33%|███▎      | 830/2524 [05:41<11:37,  2.43it/s, loss=0.0619, v_num=3]Epoch 1:  33%|███▎      | 840/2524 [05:45<11:33,  2.43it/s, loss=0.0619, v_num=3]Epoch 1:  33%|███▎      | 840/2524 [05:45<11:33,  2.43it/s, loss=0.0573, v_num=3]Epoch 1:  34%|███▎      | 850/2524 [05:49<11:29,  2.43it/s, loss=0.0573, v_num=3]Epoch 1:  34%|███▎      | 850/2524 [05:49<11:29,  2.43it/s, loss=0.066, v_num=3] Epoch 1:  34%|███▍      | 860/2524 [05:53<11:24,  2.43it/s, loss=0.066, v_num=3]Epoch 1:  34%|███▍      | 860/2524 [05:53<11:24,  2.43it/s, loss=0.0678, v_num=3]Epoch 1:  34%|███▍      | 870/2524 [05:58<11:20,  2.43it/s, loss=0.0678, v_num=3]Epoch 1:  34%|███▍      | 870/2524 [05:58<11:20,  2.43it/s, loss=0.0641, v_num=3]Epoch 1:  35%|███▍      | 880/2524 [06:02<11:16,  2.43it/s, loss=0.0641, v_num=3]Epoch 1:  35%|███▍      | 880/2524 [06:02<11:16,  2.43it/s, loss=0.0652, v_num=3]Epoch 1:  35%|███▌      | 890/2524 [06:06<11:12,  2.43it/s, loss=0.0652, v_num=3]Epoch 1:  35%|███▌      | 890/2524 [06:06<11:12,  2.43it/s, loss=0.0643, v_num=3]Epoch 1:  36%|███▌      | 900/2524 [06:10<11:08,  2.43it/s, loss=0.0643, v_num=3]Epoch 1:  36%|███▌      | 900/2524 [06:10<11:08,  2.43it/s, loss=0.0636, v_num=3]Epoch 1:  36%|███▌      | 910/2524 [06:14<11:04,  2.43it/s, loss=0.0636, v_num=3]Epoch 1:  36%|███▌      | 910/2524 [06:14<11:04,  2.43it/s, loss=0.0639, v_num=3]Epoch 1:  36%|███▋      | 920/2524 [06:18<11:00,  2.43it/s, loss=0.0639, v_num=3]Epoch 1:  36%|███▋      | 920/2524 [06:18<11:00,  2.43it/s, loss=0.0625, v_num=3]Epoch 1:  37%|███▋      | 930/2524 [06:22<10:56,  2.43it/s, loss=0.0625, v_num=3]Epoch 1:  37%|███▋      | 930/2524 [06:22<10:56,  2.43it/s, loss=0.0547, v_num=3]Epoch 1:  37%|███▋      | 940/2524 [06:26<10:51,  2.43it/s, loss=0.0547, v_num=3]Epoch 1:  37%|███▋      | 940/2524 [06:26<10:51,  2.43it/s, loss=0.0554, v_num=3]Epoch 1:  38%|███▊      | 950/2524 [06:30<10:47,  2.43it/s, loss=0.0554, v_num=3]Epoch 1:  38%|███▊      | 950/2524 [06:31<10:47,  2.43it/s, loss=0.0544, v_num=3]Epoch 1:  38%|███▊      | 960/2524 [06:35<10:43,  2.43it/s, loss=0.0544, v_num=3]Epoch 1:  38%|███▊      | 960/2524 [06:35<10:43,  2.43it/s, loss=0.05, v_num=3]  Epoch 1:  38%|███▊      | 970/2524 [06:39<10:39,  2.43it/s, loss=0.05, v_num=3]Epoch 1:  38%|███▊      | 970/2524 [06:39<10:39,  2.43it/s, loss=0.058, v_num=3]Epoch 1:  39%|███▉      | 980/2524 [06:43<10:35,  2.43it/s, loss=0.058, v_num=3]Epoch 1:  39%|███▉      | 980/2524 [06:43<10:35,  2.43it/s, loss=0.0637, v_num=3]Epoch 1:  39%|███▉      | 990/2524 [06:47<10:31,  2.43it/s, loss=0.0637, v_num=3]Epoch 1:  39%|███▉      | 990/2524 [06:47<10:31,  2.43it/s, loss=0.0648, v_num=3]Epoch 1:  40%|███▉      | 1000/2524 [06:51<10:27,  2.43it/s, loss=0.0648, v_num=3]Epoch 1:  40%|███▉      | 1000/2524 [06:51<10:27,  2.43it/s, loss=0.0615, v_num=3]Epoch 1:  40%|████      | 1010/2524 [06:55<10:23,  2.43it/s, loss=0.0615, v_num=3]Epoch 1:  40%|████      | 1010/2524 [06:55<10:23,  2.43it/s, loss=0.0643, v_num=3]Epoch 1:  40%|████      | 1020/2524 [06:59<10:18,  2.43it/s, loss=0.0643, v_num=3]Epoch 1:  40%|████      | 1020/2524 [06:59<10:18,  2.43it/s, loss=0.0641, v_num=3]Epoch 1:  41%|████      | 1030/2524 [07:03<10:14,  2.43it/s, loss=0.0641, v_num=3]Epoch 1:  41%|████      | 1030/2524 [07:03<10:14,  2.43it/s, loss=0.0603, v_num=3]Epoch 1:  41%|████      | 1040/2524 [07:08<10:10,  2.43it/s, loss=0.0603, v_num=3]Epoch 1:  41%|████      | 1040/2524 [07:08<10:10,  2.43it/s, loss=0.0614, v_num=3]Epoch 1:  42%|████▏     | 1050/2524 [07:12<10:06,  2.43it/s, loss=0.0614, v_num=3]Epoch 1:  42%|████▏     | 1050/2524 [07:12<10:06,  2.43it/s, loss=0.0589, v_num=3]Epoch 1:  42%|████▏     | 1060/2524 [07:16<10:02,  2.43it/s, loss=0.0589, v_num=3]Epoch 1:  42%|████▏     | 1060/2524 [07:16<10:02,  2.43it/s, loss=0.065, v_num=3] Epoch 1:  42%|████▏     | 1070/2524 [07:20<09:58,  2.43it/s, loss=0.065, v_num=3]Epoch 1:  42%|████▏     | 1070/2524 [07:20<09:58,  2.43it/s, loss=0.0674, v_num=3]Epoch 1:  43%|████▎     | 1080/2524 [07:24<09:54,  2.43it/s, loss=0.0674, v_num=3]Epoch 1:  43%|████▎     | 1080/2524 [07:24<09:54,  2.43it/s, loss=0.0634, v_num=3]Epoch 1:  43%|████▎     | 1090/2524 [07:28<09:50,  2.43it/s, loss=0.0634, v_num=3]Epoch 1:  43%|████▎     | 1090/2524 [07:28<09:50,  2.43it/s, loss=0.0567, v_num=3]Epoch 1:  44%|████▎     | 1100/2524 [07:32<09:46,  2.43it/s, loss=0.0567, v_num=3]Epoch 1:  44%|████▎     | 1100/2524 [07:32<09:46,  2.43it/s, loss=0.054, v_num=3] Epoch 1:  44%|████▍     | 1110/2524 [07:36<09:41,  2.43it/s, loss=0.054, v_num=3]Epoch 1:  44%|████▍     | 1110/2524 [07:36<09:41,  2.43it/s, loss=0.057, v_num=3]Epoch 1:  44%|████▍     | 1120/2524 [07:40<09:37,  2.43it/s, loss=0.057, v_num=3]Epoch 1:  44%|████▍     | 1120/2524 [07:40<09:37,  2.43it/s, loss=0.0632, v_num=3]Epoch 1:  45%|████▍     | 1130/2524 [07:45<09:33,  2.43it/s, loss=0.0632, v_num=3]Epoch 1:  45%|████▍     | 1130/2524 [07:45<09:33,  2.43it/s, loss=0.0622, v_num=3]Epoch 1:  45%|████▌     | 1140/2524 [07:49<09:29,  2.43it/s, loss=0.0622, v_num=3]Epoch 1:  45%|████▌     | 1140/2524 [07:49<09:29,  2.43it/s, loss=0.0571, v_num=3]Epoch 1:  46%|████▌     | 1150/2524 [07:53<09:25,  2.43it/s, loss=0.0571, v_num=3]Epoch 1:  46%|████▌     | 1150/2524 [07:53<09:25,  2.43it/s, loss=0.0543, v_num=3]Epoch 1:  46%|████▌     | 1160/2524 [07:57<09:21,  2.43it/s, loss=0.0543, v_num=3]Epoch 1:  46%|████▌     | 1160/2524 [07:57<09:21,  2.43it/s, loss=0.0544, v_num=3]Epoch 1:  46%|████▋     | 1170/2524 [08:01<09:17,  2.43it/s, loss=0.0544, v_num=3]Epoch 1:  46%|████▋     | 1170/2524 [08:01<09:17,  2.43it/s, loss=0.061, v_num=3] Epoch 1:  47%|████▋     | 1180/2524 [08:05<09:13,  2.43it/s, loss=0.061, v_num=3]Epoch 1:  47%|████▋     | 1180/2524 [08:05<09:13,  2.43it/s, loss=0.0647, v_num=3]Epoch 1:  47%|████▋     | 1190/2524 [08:09<09:09,  2.43it/s, loss=0.0647, v_num=3]Epoch 1:  47%|████▋     | 1190/2524 [08:09<09:09,  2.43it/s, loss=0.0703, v_num=3]Epoch 1:  48%|████▊     | 1200/2524 [08:13<09:04,  2.43it/s, loss=0.0703, v_num=3]Epoch 1:  48%|████▊     | 1200/2524 [08:13<09:04,  2.43it/s, loss=0.0666, v_num=3]Epoch 1:  48%|████▊     | 1210/2524 [08:17<09:00,  2.43it/s, loss=0.0666, v_num=3]Epoch 1:  48%|████▊     | 1210/2524 [08:17<09:00,  2.43it/s, loss=0.0583, v_num=3]Epoch 1:  48%|████▊     | 1220/2524 [08:22<08:56,  2.43it/s, loss=0.0583, v_num=3]Epoch 1:  48%|████▊     | 1220/2524 [08:22<08:56,  2.43it/s, loss=0.0503, v_num=3]Epoch 1:  49%|████▊     | 1230/2524 [08:26<08:52,  2.43it/s, loss=0.0503, v_num=3]Epoch 1:  49%|████▊     | 1230/2524 [08:26<08:52,  2.43it/s, loss=0.0518, v_num=3]Epoch 1:  49%|████▉     | 1240/2524 [08:30<08:48,  2.43it/s, loss=0.0518, v_num=3]Epoch 1:  49%|████▉     | 1240/2524 [08:30<08:48,  2.43it/s, loss=0.0558, v_num=3]Epoch 1:  50%|████▉     | 1250/2524 [08:34<08:44,  2.43it/s, loss=0.0558, v_num=3]Epoch 1:  50%|████▉     | 1250/2524 [08:34<08:44,  2.43it/s, loss=0.0572, v_num=3]Epoch 1:  50%|████▉     | 1260/2524 [08:38<08:40,  2.43it/s, loss=0.0572, v_num=3]Epoch 1:  50%|████▉     | 1260/2524 [08:38<08:40,  2.43it/s, loss=0.0576, v_num=3]Epoch 1:  50%|█████     | 1270/2524 [08:42<08:35,  2.43it/s, loss=0.0576, v_num=3]Epoch 1:  50%|█████     | 1270/2524 [08:42<08:35,  2.43it/s, loss=0.0554, v_num=3]Epoch 1:  51%|█████     | 1280/2524 [08:46<08:31,  2.43it/s, loss=0.0554, v_num=3]Epoch 1:  51%|█████     | 1280/2524 [08:46<08:31,  2.43it/s, loss=0.0536, v_num=3]Epoch 1:  51%|█████     | 1290/2524 [08:50<08:27,  2.43it/s, loss=0.0536, v_num=3]Epoch 1:  51%|█████     | 1290/2524 [08:50<08:27,  2.43it/s, loss=0.0535, v_num=3]Epoch 1:  52%|█████▏    | 1300/2524 [08:54<08:23,  2.43it/s, loss=0.0535, v_num=3]Epoch 1:  52%|█████▏    | 1300/2524 [08:54<08:23,  2.43it/s, loss=0.0626, v_num=3]Epoch 1:  52%|█████▏    | 1310/2524 [08:59<08:19,  2.43it/s, loss=0.0626, v_num=3]Epoch 1:  52%|█████▏    | 1310/2524 [08:59<08:19,  2.43it/s, loss=0.0602, v_num=3]Epoch 1:  52%|█████▏    | 1320/2524 [09:03<08:15,  2.43it/s, loss=0.0602, v_num=3]Epoch 1:  52%|█████▏    | 1320/2524 [09:03<08:15,  2.43it/s, loss=0.055, v_num=3] Epoch 1:  53%|█████▎    | 1330/2524 [09:07<08:11,  2.43it/s, loss=0.055, v_num=3]Epoch 1:  53%|█████▎    | 1330/2524 [09:07<08:11,  2.43it/s, loss=0.0571, v_num=3]Epoch 1:  53%|█████▎    | 1340/2524 [09:11<08:07,  2.43it/s, loss=0.0571, v_num=3]Epoch 1:  53%|█████▎    | 1340/2524 [09:11<08:07,  2.43it/s, loss=0.062, v_num=3] Epoch 1:  53%|█████▎    | 1350/2524 [09:15<08:03,  2.43it/s, loss=0.062, v_num=3]Epoch 1:  53%|█████▎    | 1350/2524 [09:15<08:03,  2.43it/s, loss=0.0683, v_num=3]Epoch 1:  54%|█████▍    | 1360/2524 [09:19<07:58,  2.43it/s, loss=0.0683, v_num=3]Epoch 1:  54%|█████▍    | 1360/2524 [09:19<07:58,  2.43it/s, loss=0.0593, v_num=3]Epoch 1:  54%|█████▍    | 1370/2524 [09:23<07:54,  2.43it/s, loss=0.0593, v_num=3]Epoch 1:  54%|█████▍    | 1370/2524 [09:23<07:54,  2.43it/s, loss=0.0565, v_num=3]Epoch 1:  55%|█████▍    | 1380/2524 [09:27<07:50,  2.43it/s, loss=0.0565, v_num=3]Epoch 1:  55%|█████▍    | 1380/2524 [09:27<07:50,  2.43it/s, loss=0.0644, v_num=3]Epoch 1:  55%|█████▌    | 1390/2524 [09:31<07:46,  2.43it/s, loss=0.0644, v_num=3]Epoch 1:  55%|█████▌    | 1390/2524 [09:31<07:46,  2.43it/s, loss=0.0612, v_num=3]Epoch 1:  55%|█████▌    | 1400/2524 [09:35<07:42,  2.43it/s, loss=0.0612, v_num=3]Epoch 1:  55%|█████▌    | 1400/2524 [09:36<07:42,  2.43it/s, loss=0.0636, v_num=3]Epoch 1:  56%|█████▌    | 1410/2524 [09:40<07:38,  2.43it/s, loss=0.0636, v_num=3]Epoch 1:  56%|█████▌    | 1410/2524 [09:40<07:38,  2.43it/s, loss=0.0655, v_num=3]Epoch 1:  56%|█████▋    | 1420/2524 [09:44<07:34,  2.43it/s, loss=0.0655, v_num=3]Epoch 1:  56%|█████▋    | 1420/2524 [09:44<07:34,  2.43it/s, loss=0.0591, v_num=3]Epoch 1:  57%|█████▋    | 1430/2524 [09:48<07:30,  2.43it/s, loss=0.0591, v_num=3]Epoch 1:  57%|█████▋    | 1430/2524 [09:48<07:30,  2.43it/s, loss=0.0625, v_num=3]Epoch 1:  57%|█████▋    | 1440/2524 [09:52<07:25,  2.43it/s, loss=0.0625, v_num=3]Epoch 1:  57%|█████▋    | 1440/2524 [09:52<07:25,  2.43it/s, loss=0.067, v_num=3] Epoch 1:  57%|█████▋    | 1450/2524 [09:56<07:21,  2.43it/s, loss=0.067, v_num=3]Epoch 1:  57%|█████▋    | 1450/2524 [09:56<07:21,  2.43it/s, loss=0.0611, v_num=3]Epoch 1:  58%|█████▊    | 1460/2524 [10:00<07:17,  2.43it/s, loss=0.0611, v_num=3]Epoch 1:  58%|█████▊    | 1460/2524 [10:00<07:17,  2.43it/s, loss=0.0511, v_num=3]Epoch 1:  58%|█████▊    | 1470/2524 [10:04<07:13,  2.43it/s, loss=0.0511, v_num=3]Epoch 1:  58%|█████▊    | 1470/2524 [10:04<07:13,  2.43it/s, loss=0.0499, v_num=3]Epoch 1:  59%|█████▊    | 1480/2524 [10:08<07:09,  2.43it/s, loss=0.0499, v_num=3]Epoch 1:  59%|█████▊    | 1480/2524 [10:08<07:09,  2.43it/s, loss=0.0587, v_num=3]Epoch 1:  59%|█████▉    | 1490/2524 [10:12<07:05,  2.43it/s, loss=0.0587, v_num=3]Epoch 1:  59%|█████▉    | 1490/2524 [10:12<07:05,  2.43it/s, loss=0.0608, v_num=3]Epoch 1:  59%|█████▉    | 1500/2524 [10:17<07:01,  2.43it/s, loss=0.0608, v_num=3]Epoch 1:  59%|█████▉    | 1500/2524 [10:17<07:01,  2.43it/s, loss=0.0654, v_num=3]Epoch 1:  60%|█████▉    | 1510/2524 [10:21<06:57,  2.43it/s, loss=0.0654, v_num=3]Epoch 1:  60%|█████▉    | 1510/2524 [10:21<06:57,  2.43it/s, loss=0.0694, v_num=3]Epoch 1:  60%|██████    | 1520/2524 [10:25<06:52,  2.43it/s, loss=0.0694, v_num=3]Epoch 1:  60%|██████    | 1520/2524 [10:25<06:53,  2.43it/s, loss=0.0645, v_num=3]Epoch 1:  61%|██████    | 1530/2524 [10:29<06:48,  2.43it/s, loss=0.0645, v_num=3]Epoch 1:  61%|██████    | 1530/2524 [10:29<06:48,  2.43it/s, loss=0.0598, v_num=3]Epoch 1:  61%|██████    | 1540/2524 [10:33<06:44,  2.43it/s, loss=0.0598, v_num=3]Epoch 1:  61%|██████    | 1540/2524 [10:33<06:44,  2.43it/s, loss=0.0596, v_num=3]Epoch 1:  61%|██████▏   | 1550/2524 [10:37<06:40,  2.43it/s, loss=0.0596, v_num=3]Epoch 1:  61%|██████▏   | 1550/2524 [10:37<06:40,  2.43it/s, loss=0.0581, v_num=3]Epoch 1:  62%|██████▏   | 1560/2524 [10:41<06:36,  2.43it/s, loss=0.0581, v_num=3]Epoch 1:  62%|██████▏   | 1560/2524 [10:41<06:36,  2.43it/s, loss=0.0549, v_num=3]Epoch 1:  62%|██████▏   | 1570/2524 [10:45<06:32,  2.43it/s, loss=0.0549, v_num=3]Epoch 1:  62%|██████▏   | 1570/2524 [10:45<06:32,  2.43it/s, loss=0.0558, v_num=3]Epoch 1:  63%|██████▎   | 1580/2524 [10:49<06:28,  2.43it/s, loss=0.0558, v_num=3]Epoch 1:  63%|██████▎   | 1580/2524 [10:49<06:28,  2.43it/s, loss=0.0578, v_num=3]Epoch 1:  63%|██████▎   | 1590/2524 [10:54<06:24,  2.43it/s, loss=0.0578, v_num=3]Epoch 1:  63%|██████▎   | 1590/2524 [10:54<06:24,  2.43it/s, loss=0.0557, v_num=3]Epoch 1:  63%|██████▎   | 1600/2524 [10:58<06:20,  2.43it/s, loss=0.0557, v_num=3]Epoch 1:  63%|██████▎   | 1600/2524 [10:58<06:20,  2.43it/s, loss=0.0513, v_num=3]Epoch 1:  64%|██████▍   | 1610/2524 [11:02<06:15,  2.43it/s, loss=0.0513, v_num=3]Epoch 1:  64%|██████▍   | 1610/2524 [11:02<06:15,  2.43it/s, loss=0.0549, v_num=3]Epoch 1:  64%|██████▍   | 1620/2524 [11:06<06:11,  2.43it/s, loss=0.0549, v_num=3]Epoch 1:  64%|██████▍   | 1620/2524 [11:06<06:11,  2.43it/s, loss=0.0514, v_num=3]Epoch 1:  65%|██████▍   | 1630/2524 [11:10<06:07,  2.43it/s, loss=0.0514, v_num=3]Epoch 1:  65%|██████▍   | 1630/2524 [11:10<06:07,  2.43it/s, loss=0.049, v_num=3] Epoch 1:  65%|██████▍   | 1640/2524 [11:14<06:03,  2.43it/s, loss=0.049, v_num=3]Epoch 1:  65%|██████▍   | 1640/2524 [11:14<06:03,  2.43it/s, loss=0.0517, v_num=3]Epoch 1:  65%|██████▌   | 1650/2524 [11:18<05:59,  2.43it/s, loss=0.0517, v_num=3]Epoch 1:  65%|██████▌   | 1650/2524 [11:18<05:59,  2.43it/s, loss=0.0534, v_num=3]Epoch 1:  66%|██████▌   | 1660/2524 [11:22<05:55,  2.43it/s, loss=0.0534, v_num=3]Epoch 1:  66%|██████▌   | 1660/2524 [11:22<05:55,  2.43it/s, loss=0.0564, v_num=3]Epoch 1:  66%|██████▌   | 1670/2524 [11:26<05:51,  2.43it/s, loss=0.0564, v_num=3]Epoch 1:  66%|██████▌   | 1670/2524 [11:26<05:51,  2.43it/s, loss=0.0567, v_num=3]Epoch 1:  67%|██████▋   | 1680/2524 [11:31<05:47,  2.43it/s, loss=0.0567, v_num=3]Epoch 1:  67%|██████▋   | 1680/2524 [11:31<05:47,  2.43it/s, loss=0.0485, v_num=3]Epoch 1:  67%|██████▋   | 1690/2524 [11:35<05:43,  2.43it/s, loss=0.0485, v_num=3]Epoch 1:  67%|██████▋   | 1690/2524 [11:35<05:43,  2.43it/s, loss=0.0451, v_num=3]Epoch 1:  67%|██████▋   | 1700/2524 [11:39<05:38,  2.43it/s, loss=0.0451, v_num=3]Epoch 1:  67%|██████▋   | 1700/2524 [11:39<05:38,  2.43it/s, loss=0.0553, v_num=3]Epoch 1:  68%|██████▊   | 1710/2524 [11:43<05:34,  2.43it/s, loss=0.0553, v_num=3]Epoch 1:  68%|██████▊   | 1710/2524 [11:43<05:34,  2.43it/s, loss=0.0576, v_num=3]Epoch 1:  68%|██████▊   | 1720/2524 [11:47<05:30,  2.43it/s, loss=0.0576, v_num=3]Epoch 1:  68%|██████▊   | 1720/2524 [11:47<05:30,  2.43it/s, loss=0.055, v_num=3] Epoch 1:  69%|██████▊   | 1730/2524 [11:51<05:26,  2.43it/s, loss=0.055, v_num=3]Epoch 1:  69%|██████▊   | 1730/2524 [11:51<05:26,  2.43it/s, loss=0.0589, v_num=3]Epoch 1:  69%|██████▉   | 1740/2524 [11:55<05:22,  2.43it/s, loss=0.0589, v_num=3]Epoch 1:  69%|██████▉   | 1740/2524 [11:55<05:22,  2.43it/s, loss=0.0595, v_num=3]Epoch 1:  69%|██████▉   | 1750/2524 [11:59<05:18,  2.43it/s, loss=0.0595, v_num=3]Epoch 1:  69%|██████▉   | 1750/2524 [11:59<05:18,  2.43it/s, loss=0.0577, v_num=3]Epoch 1:  70%|██████▉   | 1760/2524 [12:03<05:14,  2.43it/s, loss=0.0577, v_num=3]Epoch 1:  70%|██████▉   | 1760/2524 [12:03<05:14,  2.43it/s, loss=0.0557, v_num=3]Epoch 1:  70%|███████   | 1770/2524 [12:07<05:10,  2.43it/s, loss=0.0557, v_num=3]Epoch 1:  70%|███████   | 1770/2524 [12:07<05:10,  2.43it/s, loss=0.058, v_num=3] Epoch 1:  71%|███████   | 1780/2524 [12:12<05:06,  2.43it/s, loss=0.058, v_num=3]Epoch 1:  71%|███████   | 1780/2524 [12:12<05:06,  2.43it/s, loss=0.0637, v_num=3]Epoch 1:  71%|███████   | 1790/2524 [12:16<05:01,  2.43it/s, loss=0.0637, v_num=3]Epoch 1:  71%|███████   | 1790/2524 [12:16<05:01,  2.43it/s, loss=0.0555, v_num=3]Epoch 1:  71%|███████▏  | 1800/2524 [12:20<04:57,  2.43it/s, loss=0.0555, v_num=3]Epoch 1:  71%|███████▏  | 1800/2524 [12:20<04:57,  2.43it/s, loss=0.0552, v_num=3]Epoch 1:  72%|███████▏  | 1810/2524 [12:24<04:53,  2.43it/s, loss=0.0552, v_num=3]Epoch 1:  72%|███████▏  | 1810/2524 [12:24<04:53,  2.43it/s, loss=0.0631, v_num=3]Epoch 1:  72%|███████▏  | 1820/2524 [12:28<04:49,  2.43it/s, loss=0.0631, v_num=3]Epoch 1:  72%|███████▏  | 1820/2524 [12:28<04:49,  2.43it/s, loss=0.0553, v_num=3]Epoch 1:  73%|███████▎  | 1830/2524 [12:32<04:45,  2.43it/s, loss=0.0553, v_num=3]Epoch 1:  73%|███████▎  | 1830/2524 [12:32<04:45,  2.43it/s, loss=0.048, v_num=3] Epoch 1:  73%|███████▎  | 1840/2524 [12:36<04:41,  2.43it/s, loss=0.048, v_num=3]Epoch 1:  73%|███████▎  | 1840/2524 [12:36<04:41,  2.43it/s, loss=0.0546, v_num=3]Epoch 1:  73%|███████▎  | 1850/2524 [12:40<04:37,  2.43it/s, loss=0.0546, v_num=3]Epoch 1:  73%|███████▎  | 1850/2524 [12:40<04:37,  2.43it/s, loss=0.0574, v_num=3]Epoch 1:  74%|███████▎  | 1860/2524 [12:44<04:33,  2.43it/s, loss=0.0574, v_num=3]Epoch 1:  74%|███████▎  | 1860/2524 [12:44<04:33,  2.43it/s, loss=0.0491, v_num=3]Epoch 1:  74%|███████▍  | 1870/2524 [12:48<04:28,  2.43it/s, loss=0.0491, v_num=3]Epoch 1:  74%|███████▍  | 1870/2524 [12:48<04:28,  2.43it/s, loss=0.05, v_num=3]  Epoch 1:  74%|███████▍  | 1880/2524 [12:53<04:24,  2.43it/s, loss=0.05, v_num=3]Epoch 1:  74%|███████▍  | 1880/2524 [12:53<04:24,  2.43it/s, loss=0.0534, v_num=3]Epoch 1:  75%|███████▍  | 1890/2524 [12:57<04:20,  2.43it/s, loss=0.0534, v_num=3]Epoch 1:  75%|███████▍  | 1890/2524 [12:57<04:20,  2.43it/s, loss=0.0521, v_num=3]Epoch 1:  75%|███████▌  | 1900/2524 [13:01<04:16,  2.43it/s, loss=0.0521, v_num=3]Epoch 1:  75%|███████▌  | 1900/2524 [13:01<04:16,  2.43it/s, loss=0.0605, v_num=3]Epoch 1:  76%|███████▌  | 1910/2524 [13:05<04:12,  2.43it/s, loss=0.0605, v_num=3]Epoch 1:  76%|███████▌  | 1910/2524 [13:05<04:12,  2.43it/s, loss=0.0578, v_num=3]Epoch 1:  76%|███████▌  | 1920/2524 [13:09<04:08,  2.43it/s, loss=0.0578, v_num=3]Epoch 1:  76%|███████▌  | 1920/2524 [13:09<04:08,  2.43it/s, loss=0.0505, v_num=3]Epoch 1:  76%|███████▋  | 1930/2524 [13:13<04:04,  2.43it/s, loss=0.0505, v_num=3]Epoch 1:  76%|███████▋  | 1930/2524 [13:13<04:04,  2.43it/s, loss=0.0513, v_num=3]Epoch 1:  77%|███████▋  | 1940/2524 [13:17<04:00,  2.43it/s, loss=0.0513, v_num=3]Epoch 1:  77%|███████▋  | 1940/2524 [13:17<04:00,  2.43it/s, loss=0.0513, v_num=3]Epoch 1:  77%|███████▋  | 1950/2524 [13:21<03:56,  2.43it/s, loss=0.0513, v_num=3]Epoch 1:  77%|███████▋  | 1950/2524 [13:21<03:56,  2.43it/s, loss=0.0553, v_num=3]Epoch 1:  78%|███████▊  | 1960/2524 [13:25<03:51,  2.43it/s, loss=0.0553, v_num=3]Epoch 1:  78%|███████▊  | 1960/2524 [13:25<03:51,  2.43it/s, loss=0.0554, v_num=3]Epoch 1:  78%|███████▊  | 1970/2524 [13:30<03:47,  2.43it/s, loss=0.0554, v_num=3]Epoch 1:  78%|███████▊  | 1970/2524 [13:30<03:47,  2.43it/s, loss=0.048, v_num=3] Epoch 1:  78%|███████▊  | 1980/2524 [13:34<03:43,  2.43it/s, loss=0.048, v_num=3]Epoch 1:  78%|███████▊  | 1980/2524 [13:34<03:43,  2.43it/s, loss=0.0458, v_num=3]Epoch 1:  79%|███████▉  | 1990/2524 [13:38<03:39,  2.43it/s, loss=0.0458, v_num=3]Epoch 1:  79%|███████▉  | 1990/2524 [13:38<03:39,  2.43it/s, loss=0.053, v_num=3] Epoch 1:  79%|███████▉  | 2000/2524 [13:42<03:35,  2.43it/s, loss=0.053, v_num=3]Epoch 1:  79%|███████▉  | 2000/2524 [13:42<03:35,  2.43it/s, loss=0.0543, v_num=3]Epoch 1:  80%|███████▉  | 2010/2524 [13:46<03:31,  2.43it/s, loss=0.0543, v_num=3]Epoch 1:  80%|███████▉  | 2010/2524 [13:46<03:31,  2.43it/s, loss=0.0508, v_num=3]Epoch 1:  80%|████████  | 2020/2524 [13:50<03:27,  2.43it/s, loss=0.0508, v_num=3]Epoch 1:  80%|████████  | 2020/2524 [13:50<03:27,  2.43it/s, loss=0.0558, v_num=3]Epoch 1:  80%|████████  | 2030/2524 [13:54<03:23,  2.43it/s, loss=0.0558, v_num=3]Epoch 1:  80%|████████  | 2030/2524 [13:54<03:23,  2.43it/s, loss=0.0585, v_num=3]Epoch 1:  81%|████████  | 2040/2524 [13:58<03:19,  2.43it/s, loss=0.0585, v_num=3]Epoch 1:  81%|████████  | 2040/2524 [13:58<03:19,  2.43it/s, loss=0.0577, v_num=3]Epoch 1:  81%|████████  | 2050/2524 [14:02<03:14,  2.43it/s, loss=0.0577, v_num=3]Epoch 1:  81%|████████  | 2050/2524 [14:02<03:14,  2.43it/s, loss=0.0548, v_num=3]Epoch 1:  82%|████████▏ | 2060/2524 [14:07<03:10,  2.43it/s, loss=0.0548, v_num=3]Epoch 1:  82%|████████▏ | 2060/2524 [14:07<03:10,  2.43it/s, loss=0.0524, v_num=3]Epoch 1:  82%|████████▏ | 2070/2524 [14:11<03:06,  2.43it/s, loss=0.0524, v_num=3]Epoch 1:  82%|████████▏ | 2070/2524 [14:11<03:06,  2.43it/s, loss=0.0587, v_num=3]Epoch 1:  82%|████████▏ | 2080/2524 [14:15<03:02,  2.43it/s, loss=0.0587, v_num=3]Epoch 1:  82%|████████▏ | 2080/2524 [14:15<03:02,  2.43it/s, loss=0.0536, v_num=3]Epoch 1:  83%|████████▎ | 2090/2524 [14:19<02:58,  2.43it/s, loss=0.0536, v_num=3]Epoch 1:  83%|████████▎ | 2090/2524 [14:19<02:58,  2.43it/s, loss=0.0578, v_num=3]Epoch 1:  83%|████████▎ | 2100/2524 [14:23<02:54,  2.43it/s, loss=0.0578, v_num=3]Epoch 1:  83%|████████▎ | 2100/2524 [14:23<02:54,  2.43it/s, loss=0.0609, v_num=3]Epoch 1:  84%|████████▎ | 2110/2524 [14:27<02:50,  2.43it/s, loss=0.0609, v_num=3]Epoch 1:  84%|████████▎ | 2110/2524 [14:27<02:50,  2.43it/s, loss=0.0498, v_num=3]Epoch 1:  84%|████████▍ | 2120/2524 [14:31<02:46,  2.43it/s, loss=0.0498, v_num=3]Epoch 1:  84%|████████▍ | 2120/2524 [14:31<02:46,  2.43it/s, loss=0.0553, v_num=3]Epoch 1:  84%|████████▍ | 2130/2524 [14:35<02:42,  2.43it/s, loss=0.0553, v_num=3]Epoch 1:  84%|████████▍ | 2130/2524 [14:35<02:42,  2.43it/s, loss=0.0552, v_num=3]Epoch 1:  85%|████████▍ | 2140/2524 [14:40<02:37,  2.43it/s, loss=0.0552, v_num=3]Epoch 1:  85%|████████▍ | 2140/2524 [14:40<02:37,  2.43it/s, loss=0.048, v_num=3] Epoch 1:  85%|████████▌ | 2150/2524 [14:44<02:33,  2.43it/s, loss=0.048, v_num=3]Epoch 1:  85%|████████▌ | 2150/2524 [14:44<02:33,  2.43it/s, loss=0.0553, v_num=3]Epoch 1:  86%|████████▌ | 2160/2524 [14:48<02:29,  2.43it/s, loss=0.0553, v_num=3]Epoch 1:  86%|████████▌ | 2160/2524 [14:48<02:29,  2.43it/s, loss=0.0541, v_num=3]Epoch 1:  86%|████████▌ | 2170/2524 [14:52<02:25,  2.43it/s, loss=0.0541, v_num=3]Epoch 1:  86%|████████▌ | 2170/2524 [14:52<02:25,  2.43it/s, loss=0.0492, v_num=3]Epoch 1:  86%|████████▋ | 2180/2524 [14:56<02:21,  2.43it/s, loss=0.0492, v_num=3]Epoch 1:  86%|████████▋ | 2180/2524 [14:56<02:21,  2.43it/s, loss=0.0474, v_num=3]Epoch 1:  87%|████████▋ | 2190/2524 [15:00<02:17,  2.43it/s, loss=0.0474, v_num=3]Epoch 1:  87%|████████▋ | 2190/2524 [15:00<02:17,  2.43it/s, loss=0.0446, v_num=3]Epoch 1:  87%|████████▋ | 2200/2524 [15:04<02:13,  2.43it/s, loss=0.0446, v_num=3]Epoch 1:  87%|████████▋ | 2200/2524 [15:04<02:13,  2.43it/s, loss=0.0501, v_num=3]Epoch 1:  88%|████████▊ | 2210/2524 [15:08<02:09,  2.43it/s, loss=0.0501, v_num=3]Epoch 1:  88%|████████▊ | 2210/2524 [15:08<02:09,  2.43it/s, loss=0.0502, v_num=3]Epoch 1:  88%|████████▊ | 2220/2524 [15:12<02:05,  2.43it/s, loss=0.0502, v_num=3]Epoch 1:  88%|████████▊ | 2220/2524 [15:12<02:05,  2.43it/s, loss=0.0495, v_num=3]Epoch 1:  88%|████████▊ | 2230/2524 [15:17<02:00,  2.43it/s, loss=0.0495, v_num=3]Epoch 1:  88%|████████▊ | 2230/2524 [15:17<02:00,  2.43it/s, loss=0.0437, v_num=3]Epoch 1:  89%|████████▊ | 2240/2524 [15:21<01:56,  2.43it/s, loss=0.0437, v_num=3]Epoch 1:  89%|████████▊ | 2240/2524 [15:21<01:56,  2.43it/s, loss=0.042, v_num=3] Epoch 1:  89%|████████▉ | 2250/2524 [15:25<01:52,  2.43it/s, loss=0.042, v_num=3]Epoch 1:  89%|████████▉ | 2250/2524 [15:25<01:52,  2.43it/s, loss=0.0526, v_num=3]Epoch 1:  90%|████████▉ | 2260/2524 [15:29<01:48,  2.43it/s, loss=0.0526, v_num=3]Epoch 1:  90%|████████▉ | 2260/2524 [15:29<01:48,  2.43it/s, loss=0.0526, v_num=3]Epoch 1:  90%|████████▉ | 2270/2524 [15:33<01:44,  2.43it/s, loss=0.0526, v_num=3]Epoch 1:  90%|████████▉ | 2270/2524 [15:33<01:44,  2.43it/s, loss=0.0502, v_num=3]Epoch 1:  90%|█████████ | 2280/2524 [15:37<01:40,  2.43it/s, loss=0.0502, v_num=3]Epoch 1:  90%|█████████ | 2280/2524 [15:37<01:40,  2.43it/s, loss=0.0497, v_num=3]Epoch 1:  91%|█████████ | 2290/2524 [15:41<01:36,  2.43it/s, loss=0.0497, v_num=3]Epoch 1:  91%|█████████ | 2290/2524 [15:41<01:36,  2.43it/s, loss=0.0463, v_num=3]Epoch 1:  91%|█████████ | 2300/2524 [15:45<01:32,  2.43it/s, loss=0.0463, v_num=3]Epoch 1:  91%|█████████ | 2300/2524 [15:45<01:32,  2.43it/s, loss=0.0461, v_num=3]Epoch 1:  92%|█████████▏| 2310/2524 [15:49<01:28,  2.43it/s, loss=0.0461, v_num=3]Epoch 1:  92%|█████████▏| 2310/2524 [15:49<01:28,  2.43it/s, loss=0.0518, v_num=3]Epoch 1:  92%|█████████▏| 2320/2524 [15:54<01:23,  2.43it/s, loss=0.0518, v_num=3]Epoch 1:  92%|█████████▏| 2320/2524 [15:54<01:23,  2.43it/s, loss=0.0522, v_num=3]Epoch 1:  92%|█████████▏| 2330/2524 [15:58<01:19,  2.43it/s, loss=0.0522, v_num=3]Epoch 1:  92%|█████████▏| 2330/2524 [15:58<01:19,  2.43it/s, loss=0.0471, v_num=3]Epoch 1:  93%|█████████▎| 2340/2524 [16:02<01:15,  2.43it/s, loss=0.0471, v_num=3]Epoch 1:  93%|█████████▎| 2340/2524 [16:02<01:15,  2.43it/s, loss=0.0435, v_num=3]Epoch 1:  93%|█████████▎| 2350/2524 [16:06<01:11,  2.43it/s, loss=0.0435, v_num=3]Epoch 1:  93%|█████████▎| 2350/2524 [16:06<01:11,  2.43it/s, loss=0.0413, v_num=3]Epoch 1:  94%|█████████▎| 2360/2524 [16:10<01:07,  2.43it/s, loss=0.0413, v_num=3]Epoch 1:  94%|█████████▎| 2360/2524 [16:10<01:07,  2.43it/s, loss=0.0434, v_num=3]Epoch 1:  94%|█████████▍| 2370/2524 [16:14<01:03,  2.43it/s, loss=0.0434, v_num=3]Epoch 1:  94%|█████████▍| 2370/2524 [16:14<01:03,  2.43it/s, loss=0.043, v_num=3] Epoch 1:  94%|█████████▍| 2380/2524 [16:18<00:59,  2.43it/s, loss=0.043, v_num=3]Epoch 1:  94%|█████████▍| 2380/2524 [16:18<00:59,  2.43it/s, loss=0.0495, v_num=3]Epoch 1:  95%|█████████▍| 2390/2524 [16:22<00:55,  2.43it/s, loss=0.0495, v_num=3]Epoch 1:  95%|█████████▍| 2390/2524 [16:22<00:55,  2.43it/s, loss=0.0558, v_num=3]Epoch 1:  95%|█████████▌| 2400/2524 [16:26<00:50,  2.43it/s, loss=0.0558, v_num=3]Epoch 1:  95%|█████████▌| 2400/2524 [16:26<00:50,  2.43it/s, loss=0.0489, v_num=3]Epoch 1:  95%|█████████▌| 2410/2524 [16:31<00:46,  2.43it/s, loss=0.0489, v_num=3]Epoch 1:  95%|█████████▌| 2410/2524 [16:31<00:46,  2.43it/s, loss=0.0437, v_num=3]Epoch 1:  96%|█████████▌| 2420/2524 [16:35<00:42,  2.43it/s, loss=0.0437, v_num=3]Epoch 1:  96%|█████████▌| 2420/2524 [16:35<00:42,  2.43it/s, loss=0.0414, v_num=3]Epoch 1:  96%|█████████▋| 2430/2524 [16:39<00:38,  2.43it/s, loss=0.0414, v_num=3]Epoch 1:  96%|█████████▋| 2430/2524 [16:39<00:38,  2.43it/s, loss=0.0432, v_num=3]Epoch 1:  97%|█████████▋| 2440/2524 [16:43<00:34,  2.43it/s, loss=0.0432, v_num=3]Epoch 1:  97%|█████████▋| 2440/2524 [16:43<00:34,  2.43it/s, loss=0.0452, v_num=3]Epoch 1:  97%|█████████▋| 2450/2524 [16:47<00:30,  2.43it/s, loss=0.0452, v_num=3]Epoch 1:  97%|█████████▋| 2450/2524 [16:47<00:30,  2.43it/s, loss=0.046, v_num=3] Epoch 1:  97%|█████████▋| 2460/2524 [16:51<00:26,  2.43it/s, loss=0.046, v_num=3]Epoch 1:  97%|█████████▋| 2460/2524 [16:51<00:26,  2.43it/s, loss=0.0492, v_num=3]Epoch 1:  98%|█████████▊| 2470/2524 [16:55<00:22,  2.43it/s, loss=0.0492, v_num=3]Epoch 1:  98%|█████████▊| 2470/2524 [16:55<00:22,  2.43it/s, loss=0.0489, v_num=3]Epoch 1:  98%|█████████▊| 2480/2524 [16:59<00:18,  2.43it/s, loss=0.0489, v_num=3]Epoch 1:  98%|█████████▊| 2480/2524 [16:59<00:18,  2.43it/s, loss=0.045, v_num=3] Epoch 1:  99%|█████████▊| 2490/2524 [17:03<00:13,  2.43it/s, loss=0.045, v_num=3]Epoch 1:  99%|█████████▊| 2490/2524 [17:03<00:13,  2.43it/s, loss=0.0511, v_num=3]Epoch 1:  99%|█████████▉| 2500/2524 [17:08<00:09,  2.43it/s, loss=0.0511, v_num=3]Epoch 1:  99%|█████████▉| 2500/2524 [17:08<00:09,  2.43it/s, loss=0.0496, v_num=3]Epoch 1:  99%|█████████▉| 2510/2524 [17:12<00:05,  2.43it/s, loss=0.0496, v_num=3]Epoch 1:  99%|█████████▉| 2510/2524 [17:12<00:05,  2.43it/s, loss=0.0427, v_num=3]Epoch 1: 100%|█████████▉| 2520/2524 [17:16<00:01,  2.43it/s, loss=0.0427, v_num=3]Epoch 1: 100%|█████████▉| 2520/2524 [17:16<00:01,  2.43it/s, loss=0.0487, v_num=3]Epoch 1: 100%|██████████| 2524/2524 [17:17<00:00,  2.43it/s, loss=0.0487, v_num=3]Epoch 1: 100%|██████████| 2524/2524 [17:17<00:00,  2.43it/s, loss=0.0494, v_num=3]Epoch 1: 100%|██████████| 2524/2524 [17:17<00:00,  2.43it/s, loss=0.0494, v_num=3]Epoch 1:   0%|          | 0/2524 [00:00<?, ?it/s, loss=0.0494, v_num=3]           Epoch 2:   0%|          | 0/2524 [00:00<?, ?it/s, loss=0.0494, v_num=3]Epoch 2:   0%|          | 10/2524 [00:04<19:10,  2.19it/s, loss=0.0494, v_num=3]Epoch 2:   0%|          | 10/2524 [00:04<19:12,  2.18it/s, loss=0.0465, v_num=3]Epoch 2:   1%|          | 20/2524 [00:08<18:05,  2.31it/s, loss=0.0465, v_num=3]Epoch 2:   1%|          | 20/2524 [00:08<18:06,  2.30it/s, loss=0.0361, v_num=3]Epoch 2:   1%|          | 30/2524 [00:12<17:41,  2.35it/s, loss=0.0361, v_num=3]Epoch 2:   1%|          | 30/2524 [00:12<17:42,  2.35it/s, loss=0.0357, v_num=3]Epoch 2:   2%|▏         | 40/2524 [00:16<17:27,  2.37it/s, loss=0.0357, v_num=3]Epoch 2:   2%|▏         | 40/2524 [00:16<17:28,  2.37it/s, loss=0.0413, v_num=3]Epoch 2:   2%|▏         | 50/2524 [00:20<17:17,  2.39it/s, loss=0.0413, v_num=3]Epoch 2:   2%|▏         | 50/2524 [00:20<17:17,  2.38it/s, loss=0.0457, v_num=3]Epoch 2:   2%|▏         | 60/2524 [00:25<17:15,  2.38it/s, loss=0.0457, v_num=3]Epoch 2:   2%|▏         | 60/2524 [00:25<17:15,  2.38it/s, loss=0.0468, v_num=3]Epoch 2:   3%|▎         | 70/2524 [00:29<17:07,  2.39it/s, loss=0.0468, v_num=3]Epoch 2:   3%|▎         | 70/2524 [00:29<17:08,  2.39it/s, loss=0.0436, v_num=3]Epoch 2:   3%|▎         | 80/2524 [00:33<17:01,  2.39it/s, loss=0.0436, v_num=3]Epoch 2:   3%|▎         | 80/2524 [00:33<17:01,  2.39it/s, loss=0.0364, v_num=3]Epoch 2:   4%|▎         | 90/2524 [00:37<16:54,  2.40it/s, loss=0.0364, v_num=3]Epoch 2:   4%|▎         | 90/2524 [00:37<16:54,  2.40it/s, loss=0.0369, v_num=3]Epoch 2:   4%|▍         | 100/2524 [00:41<16:48,  2.40it/s, loss=0.0369, v_num=3]Epoch 2:   4%|▍         | 100/2524 [00:41<16:48,  2.40it/s, loss=0.0383, v_num=3]Epoch 2:   4%|▍         | 110/2524 [00:45<16:44,  2.40it/s, loss=0.0383, v_num=3]Epoch 2:   4%|▍         | 110/2524 [00:45<16:44,  2.40it/s, loss=0.038, v_num=3] Epoch 2:   5%|▍         | 120/2524 [00:49<16:38,  2.41it/s, loss=0.038, v_num=3]Epoch 2:   5%|▍         | 120/2524 [00:49<16:38,  2.41it/s, loss=0.0389, v_num=3]Epoch 2:   5%|▌         | 130/2524 [00:53<16:33,  2.41it/s, loss=0.0389, v_num=3]Epoch 2:   5%|▌         | 130/2524 [00:53<16:33,  2.41it/s, loss=0.0414, v_num=3]Epoch 2:   6%|▌         | 140/2524 [00:58<16:28,  2.41it/s, loss=0.0414, v_num=3]Epoch 2:   6%|▌         | 140/2524 [00:58<16:28,  2.41it/s, loss=0.0424, v_num=3]Epoch 2:   6%|▌         | 150/2524 [01:02<16:23,  2.41it/s, loss=0.0424, v_num=3]Epoch 2:   6%|▌         | 150/2524 [01:02<16:23,  2.41it/s, loss=0.0403, v_num=3]Epoch 2:   6%|▋         | 160/2524 [01:06<16:20,  2.41it/s, loss=0.0403, v_num=3]Epoch 2:   6%|▋         | 160/2524 [01:06<16:20,  2.41it/s, loss=0.0355, v_num=3]Epoch 2:   7%|▋         | 170/2524 [01:10<16:15,  2.41it/s, loss=0.0355, v_num=3]Epoch 2:   7%|▋         | 170/2524 [01:10<16:15,  2.41it/s, loss=0.0377, v_num=3]Epoch 2:   7%|▋         | 180/2524 [01:14<16:10,  2.41it/s, loss=0.0377, v_num=3]Epoch 2:   7%|▋         | 180/2524 [01:14<16:11,  2.41it/s, loss=0.0379, v_num=3]Epoch 2:   8%|▊         | 190/2524 [01:18<16:06,  2.42it/s, loss=0.0379, v_num=3]Epoch 2:   8%|▊         | 190/2524 [01:18<16:06,  2.42it/s, loss=0.0401, v_num=3]Epoch 2:   8%|▊         | 200/2524 [01:22<16:01,  2.42it/s, loss=0.0401, v_num=3]Epoch 2:   8%|▊         | 200/2524 [01:22<16:01,  2.42it/s, loss=0.0448, v_num=3]Epoch 2:   8%|▊         | 210/2524 [01:26<15:57,  2.42it/s, loss=0.0448, v_num=3]Epoch 2:   8%|▊         | 210/2524 [01:26<15:57,  2.42it/s, loss=0.0392, v_num=3]Epoch 2:   9%|▊         | 220/2524 [01:30<15:52,  2.42it/s, loss=0.0392, v_num=3]Epoch 2:   9%|▊         | 220/2524 [01:30<15:53,  2.42it/s, loss=0.0342, v_num=3]Epoch 2:   9%|▉         | 230/2524 [01:35<15:48,  2.42it/s, loss=0.0342, v_num=3]Epoch 2:   9%|▉         | 230/2524 [01:35<15:48,  2.42it/s, loss=0.0338, v_num=3]Epoch 2:  10%|▉         | 240/2524 [01:39<15:43,  2.42it/s, loss=0.0338, v_num=3]Epoch 2:  10%|▉         | 240/2524 [01:39<15:43,  2.42it/s, loss=0.039, v_num=3] Epoch 2:  10%|▉         | 250/2524 [01:43<15:39,  2.42it/s, loss=0.039, v_num=3]Epoch 2:  10%|▉         | 250/2524 [01:43<15:39,  2.42it/s, loss=0.033, v_num=3]Epoch 2:  10%|█         | 260/2524 [01:47<15:36,  2.42it/s, loss=0.033, v_num=3]Epoch 2:  10%|█         | 260/2524 [01:47<15:36,  2.42it/s, loss=0.0294, v_num=3]Epoch 2:  11%|█         | 270/2524 [01:51<15:31,  2.42it/s, loss=0.0294, v_num=3]Epoch 2:  11%|█         | 270/2524 [01:51<15:31,  2.42it/s, loss=0.0381, v_num=3]Epoch 2:  11%|█         | 280/2524 [01:55<15:27,  2.42it/s, loss=0.0381, v_num=3]Epoch 2:  11%|█         | 280/2524 [01:55<15:27,  2.42it/s, loss=0.0451, v_num=3]Epoch 2:  11%|█▏        | 290/2524 [01:59<15:22,  2.42it/s, loss=0.0451, v_num=3]Epoch 2:  11%|█▏        | 290/2524 [01:59<15:22,  2.42it/s, loss=0.0445, v_num=3]Epoch 2:  12%|█▏        | 300/2524 [02:03<15:18,  2.42it/s, loss=0.0445, v_num=3]Epoch 2:  12%|█▏        | 300/2524 [02:03<15:18,  2.42it/s, loss=0.0434, v_num=3]Epoch 2:  12%|█▏        | 310/2524 [02:08<15:14,  2.42it/s, loss=0.0434, v_num=3]Epoch 2:  12%|█▏        | 310/2524 [02:08<15:14,  2.42it/s, loss=0.0443, v_num=3]Epoch 2:  13%|█▎        | 320/2524 [02:12<15:09,  2.42it/s, loss=0.0443, v_num=3]Epoch 2:  13%|█▎        | 320/2524 [02:12<15:10,  2.42it/s, loss=0.0433, v_num=3]Epoch 2:  13%|█▎        | 330/2524 [02:16<15:05,  2.42it/s, loss=0.0433, v_num=3]Epoch 2:  13%|█▎        | 330/2524 [02:16<15:05,  2.42it/s, loss=0.0421, v_num=3]Epoch 2:  13%|█▎        | 340/2524 [02:20<15:01,  2.42it/s, loss=0.0421, v_num=3]Epoch 2:  13%|█▎        | 340/2524 [02:20<15:01,  2.42it/s, loss=0.044, v_num=3] Epoch 2:  14%|█▍        | 350/2524 [02:24<14:56,  2.42it/s, loss=0.044, v_num=3]Epoch 2:  14%|█▍        | 350/2524 [02:24<14:57,  2.42it/s, loss=0.0398, v_num=3]Epoch 2:  14%|█▍        | 360/2524 [02:28<14:53,  2.42it/s, loss=0.0398, v_num=3]Epoch 2:  14%|█▍        | 360/2524 [02:28<14:53,  2.42it/s, loss=0.0367, v_num=3]Epoch 2:  15%|█▍        | 370/2524 [02:32<14:49,  2.42it/s, loss=0.0367, v_num=3]Epoch 2:  15%|█▍        | 370/2524 [02:32<14:49,  2.42it/s, loss=0.0408, v_num=3]Epoch 2:  15%|█▌        | 380/2524 [02:36<14:44,  2.42it/s, loss=0.0408, v_num=3]Epoch 2:  15%|█▌        | 380/2524 [02:36<14:44,  2.42it/s, loss=0.0378, v_num=3]Epoch 2:  15%|█▌        | 390/2524 [02:40<14:40,  2.42it/s, loss=0.0378, v_num=3]Epoch 2:  15%|█▌        | 390/2524 [02:40<14:40,  2.42it/s, loss=0.0415, v_num=3]Epoch 2:  16%|█▌        | 400/2524 [02:45<14:36,  2.42it/s, loss=0.0415, v_num=3]Epoch 2:  16%|█▌        | 400/2524 [02:45<14:36,  2.42it/s, loss=0.0496, v_num=3]Epoch 2:  16%|█▌        | 410/2524 [02:49<14:32,  2.42it/s, loss=0.0496, v_num=3]Epoch 2:  16%|█▌        | 410/2524 [02:49<14:32,  2.42it/s, loss=0.0411, v_num=3]Epoch 2:  17%|█▋        | 420/2524 [02:53<14:27,  2.42it/s, loss=0.0411, v_num=3]Epoch 2:  17%|█▋        | 420/2524 [02:53<14:27,  2.42it/s, loss=0.0339, v_num=3]Epoch 2:  17%|█▋        | 430/2524 [02:57<14:23,  2.42it/s, loss=0.0339, v_num=3]Epoch 2:  17%|█▋        | 430/2524 [02:57<14:23,  2.42it/s, loss=0.0343, v_num=3]Epoch 2:  17%|█▋        | 440/2524 [03:01<14:19,  2.43it/s, loss=0.0343, v_num=3]Epoch 2:  17%|█▋        | 440/2524 [03:01<14:19,  2.43it/s, loss=0.0363, v_num=3]Epoch 2:  18%|█▊        | 450/2524 [03:05<14:15,  2.43it/s, loss=0.0363, v_num=3]Epoch 2:  18%|█▊        | 450/2524 [03:05<14:15,  2.43it/s, loss=0.0381, v_num=3]Epoch 2:  18%|█▊        | 460/2524 [03:09<14:11,  2.42it/s, loss=0.0381, v_num=3]Epoch 2:  18%|█▊        | 460/2524 [03:09<14:11,  2.42it/s, loss=0.0359, v_num=3]Epoch 2:  19%|█▊        | 470/2524 [03:13<14:07,  2.42it/s, loss=0.0359, v_num=3]Epoch 2:  19%|█▊        | 470/2524 [03:13<14:07,  2.42it/s, loss=0.0366, v_num=3]Epoch 2:  19%|█▉        | 480/2524 [03:17<14:02,  2.42it/s, loss=0.0366, v_num=3]Epoch 2:  19%|█▉        | 480/2524 [03:17<14:02,  2.42it/s, loss=0.0353, v_num=3]Epoch 2:  19%|█▉        | 490/2524 [03:22<13:58,  2.43it/s, loss=0.0353, v_num=3]Epoch 2:  19%|█▉        | 490/2524 [03:22<13:58,  2.43it/s, loss=0.037, v_num=3] Epoch 2:  20%|█▉        | 500/2524 [03:26<13:54,  2.43it/s, loss=0.037, v_num=3]Epoch 2:  20%|█▉        | 500/2524 [03:26<13:54,  2.43it/s, loss=0.0378, v_num=3]Epoch 2:  20%|██        | 510/2524 [03:30<13:50,  2.43it/s, loss=0.0378, v_num=3]Epoch 2:  20%|██        | 510/2524 [03:30<13:50,  2.43it/s, loss=0.0359, v_num=3]Epoch 2:  21%|██        | 520/2524 [03:34<13:46,  2.43it/s, loss=0.0359, v_num=3]Epoch 2:  21%|██        | 520/2524 [03:34<13:46,  2.43it/s, loss=0.0344, v_num=3]Epoch 2:  21%|██        | 530/2524 [03:38<13:41,  2.43it/s, loss=0.0344, v_num=3]Epoch 2:  21%|██        | 530/2524 [03:38<13:41,  2.43it/s, loss=0.0353, v_num=3]Epoch 2:  21%|██▏       | 540/2524 [03:42<13:37,  2.43it/s, loss=0.0353, v_num=3]Epoch 2:  21%|██▏       | 540/2524 [03:42<13:37,  2.43it/s, loss=0.0395, v_num=3]Epoch 2:  22%|██▏       | 550/2524 [03:46<13:33,  2.43it/s, loss=0.0395, v_num=3]Epoch 2:  22%|██▏       | 550/2524 [03:46<13:33,  2.43it/s, loss=0.0402, v_num=3]Epoch 2:  22%|██▏       | 560/2524 [03:50<13:29,  2.43it/s, loss=0.0402, v_num=3]Epoch 2:  22%|██▏       | 560/2524 [03:50<13:29,  2.43it/s, loss=0.0413, v_num=3]Epoch 2:  23%|██▎       | 570/2524 [03:54<13:25,  2.43it/s, loss=0.0413, v_num=3]Epoch 2:  23%|██▎       | 570/2524 [03:54<13:25,  2.43it/s, loss=0.0412, v_num=3]Epoch 2:  23%|██▎       | 580/2524 [03:59<13:21,  2.43it/s, loss=0.0412, v_num=3]Epoch 2:  23%|██▎       | 580/2524 [03:59<13:21,  2.43it/s, loss=0.0355, v_num=3]Epoch 2:  23%|██▎       | 590/2524 [04:03<13:17,  2.43it/s, loss=0.0355, v_num=3]Epoch 2:  23%|██▎       | 590/2524 [04:03<13:17,  2.43it/s, loss=0.0337, v_num=3]Epoch 2:  24%|██▍       | 600/2524 [04:07<13:12,  2.43it/s, loss=0.0337, v_num=3]Epoch 2:  24%|██▍       | 600/2524 [04:07<13:12,  2.43it/s, loss=0.0335, v_num=3]Epoch 2:  24%|██▍       | 610/2524 [04:11<13:08,  2.43it/s, loss=0.0335, v_num=3]Epoch 2:  24%|██▍       | 610/2524 [04:11<13:08,  2.43it/s, loss=0.0354, v_num=3]Epoch 2:  25%|██▍       | 620/2524 [04:15<13:04,  2.43it/s, loss=0.0354, v_num=3]Epoch 2:  25%|██▍       | 620/2524 [04:15<13:04,  2.43it/s, loss=0.0393, v_num=3]Epoch 2:  25%|██▍       | 630/2524 [04:19<13:00,  2.43it/s, loss=0.0393, v_num=3]Epoch 2:  25%|██▍       | 630/2524 [04:19<13:00,  2.43it/s, loss=0.0391, v_num=3]Epoch 2:  25%|██▌       | 640/2524 [04:23<12:56,  2.43it/s, loss=0.0391, v_num=3]Epoch 2:  25%|██▌       | 640/2524 [04:23<12:56,  2.43it/s, loss=0.0409, v_num=3]Epoch 2:  26%|██▌       | 650/2524 [04:27<12:51,  2.43it/s, loss=0.0409, v_num=3]Epoch 2:  26%|██▌       | 650/2524 [04:27<12:51,  2.43it/s, loss=0.0388, v_num=3]Epoch 2:  26%|██▌       | 660/2524 [04:31<12:48,  2.43it/s, loss=0.0388, v_num=3]Epoch 2:  26%|██▌       | 660/2524 [04:31<12:48,  2.43it/s, loss=0.0425, v_num=3]Epoch 2:  27%|██▋       | 670/2524 [04:36<12:43,  2.43it/s, loss=0.0425, v_num=3]Epoch 2:  27%|██▋       | 670/2524 [04:36<12:43,  2.43it/s, loss=0.0381, v_num=3]Epoch 2:  27%|██▋       | 680/2524 [04:40<12:39,  2.43it/s, loss=0.0381, v_num=3]Epoch 2:  27%|██▋       | 680/2524 [04:40<12:39,  2.43it/s, loss=0.031, v_num=3] Epoch 2:  27%|██▋       | 690/2524 [04:44<12:35,  2.43it/s, loss=0.031, v_num=3]Epoch 2:  27%|██▋       | 690/2524 [04:44<12:35,  2.43it/s, loss=0.0372, v_num=3]Epoch 2:  28%|██▊       | 700/2524 [04:48<12:31,  2.43it/s, loss=0.0372, v_num=3]Epoch 2:  28%|██▊       | 700/2524 [04:48<12:31,  2.43it/s, loss=0.0421, v_num=3]Epoch 2:  28%|██▊       | 710/2524 [04:52<12:27,  2.43it/s, loss=0.0421, v_num=3]Epoch 2:  28%|██▊       | 710/2524 [04:52<12:27,  2.43it/s, loss=0.0466, v_num=3]Epoch 2:  29%|██▊       | 720/2524 [04:56<12:23,  2.43it/s, loss=0.0466, v_num=3]Epoch 2:  29%|██▊       | 720/2524 [04:56<12:23,  2.43it/s, loss=0.0422, v_num=3]Epoch 2:  29%|██▉       | 730/2524 [05:00<12:18,  2.43it/s, loss=0.0422, v_num=3]Epoch 2:  29%|██▉       | 730/2524 [05:00<12:18,  2.43it/s, loss=0.0336, v_num=3]Epoch 2:  29%|██▉       | 740/2524 [05:04<12:14,  2.43it/s, loss=0.0336, v_num=3]Epoch 2:  29%|██▉       | 740/2524 [05:04<12:14,  2.43it/s, loss=0.0343, v_num=3]Epoch 2:  30%|██▉       | 750/2524 [05:08<12:10,  2.43it/s, loss=0.0343, v_num=3]Epoch 2:  30%|██▉       | 750/2524 [05:08<12:10,  2.43it/s, loss=0.0369, v_num=3]Epoch 2:  30%|███       | 760/2524 [05:13<12:06,  2.43it/s, loss=0.0369, v_num=3]Epoch 2:  30%|███       | 760/2524 [05:13<12:06,  2.43it/s, loss=0.0378, v_num=3]Epoch 2:  31%|███       | 770/2524 [05:17<12:02,  2.43it/s, loss=0.0378, v_num=3]Epoch 2:  31%|███       | 770/2524 [05:17<12:02,  2.43it/s, loss=0.0443, v_num=3]Epoch 2:  31%|███       | 780/2524 [05:21<11:58,  2.43it/s, loss=0.0443, v_num=3]Epoch 2:  31%|███       | 780/2524 [05:21<11:58,  2.43it/s, loss=0.0459, v_num=3]Epoch 2:  31%|███▏      | 790/2524 [05:25<11:54,  2.43it/s, loss=0.0459, v_num=3]Epoch 2:  31%|███▏      | 790/2524 [05:25<11:54,  2.43it/s, loss=0.0405, v_num=3]Epoch 2:  32%|███▏      | 800/2524 [05:29<11:49,  2.43it/s, loss=0.0405, v_num=3]Epoch 2:  32%|███▏      | 800/2524 [05:29<11:49,  2.43it/s, loss=0.0409, v_num=3]Epoch 2:  32%|███▏      | 810/2524 [05:33<11:45,  2.43it/s, loss=0.0409, v_num=3]Epoch 2:  32%|███▏      | 810/2524 [05:33<11:45,  2.43it/s, loss=0.0396, v_num=3]Epoch 2:  32%|███▏      | 820/2524 [05:37<11:41,  2.43it/s, loss=0.0396, v_num=3]Epoch 2:  32%|███▏      | 820/2524 [05:37<11:41,  2.43it/s, loss=0.0319, v_num=3]Epoch 2:  33%|███▎      | 830/2524 [05:41<11:37,  2.43it/s, loss=0.0319, v_num=3]Epoch 2:  33%|███▎      | 830/2524 [05:41<11:37,  2.43it/s, loss=0.0343, v_num=3]Epoch 2:  33%|███▎      | 840/2524 [05:45<11:33,  2.43it/s, loss=0.0343, v_num=3]Epoch 2:  33%|███▎      | 840/2524 [05:45<11:33,  2.43it/s, loss=0.0366, v_num=3]Epoch 2:  34%|███▎      | 850/2524 [05:49<11:29,  2.43it/s, loss=0.0366, v_num=3]Epoch 2:  34%|███▎      | 850/2524 [05:49<11:29,  2.43it/s, loss=0.0352, v_num=3]Epoch 2:  34%|███▍      | 860/2524 [05:54<11:25,  2.43it/s, loss=0.0352, v_num=3]Epoch 2:  34%|███▍      | 860/2524 [05:54<11:25,  2.43it/s, loss=0.0335, v_num=3]Epoch 2:  34%|███▍      | 870/2524 [05:58<11:21,  2.43it/s, loss=0.0335, v_num=3]Epoch 2:  34%|███▍      | 870/2524 [05:58<11:21,  2.43it/s, loss=0.0375, v_num=3]Epoch 2:  35%|███▍      | 880/2524 [06:02<11:16,  2.43it/s, loss=0.0375, v_num=3]Epoch 2:  35%|███▍      | 880/2524 [06:02<11:16,  2.43it/s, loss=0.0413, v_num=3]Epoch 2:  35%|███▌      | 890/2524 [06:06<11:12,  2.43it/s, loss=0.0413, v_num=3]Epoch 2:  35%|███▌      | 890/2524 [06:06<11:12,  2.43it/s, loss=0.0348, v_num=3]Epoch 2:  36%|███▌      | 900/2524 [06:10<11:08,  2.43it/s, loss=0.0348, v_num=3]Epoch 2:  36%|███▌      | 900/2524 [06:10<11:08,  2.43it/s, loss=0.0413, v_num=3]Epoch 2:  36%|███▌      | 910/2524 [06:14<11:04,  2.43it/s, loss=0.0413, v_num=3]Epoch 2:  36%|███▌      | 910/2524 [06:14<11:04,  2.43it/s, loss=0.0439, v_num=3]Epoch 2:  36%|███▋      | 920/2524 [06:18<11:00,  2.43it/s, loss=0.0439, v_num=3]Epoch 2:  36%|███▋      | 920/2524 [06:18<11:00,  2.43it/s, loss=0.0321, v_num=3]Epoch 2:  37%|███▋      | 930/2524 [06:22<10:56,  2.43it/s, loss=0.0321, v_num=3]Epoch 2:  37%|███▋      | 930/2524 [06:22<10:56,  2.43it/s, loss=0.0326, v_num=3]Epoch 2:  37%|███▋      | 940/2524 [06:26<10:51,  2.43it/s, loss=0.0326, v_num=3]Epoch 2:  37%|███▋      | 940/2524 [06:26<10:51,  2.43it/s, loss=0.0393, v_num=3]Epoch 2:  38%|███▊      | 950/2524 [06:30<10:47,  2.43it/s, loss=0.0393, v_num=3]Epoch 2:  38%|███▊      | 950/2524 [06:30<10:47,  2.43it/s, loss=0.0408, v_num=3]Epoch 2:  38%|███▊      | 960/2524 [06:35<10:43,  2.43it/s, loss=0.0408, v_num=3]Epoch 2:  38%|███▊      | 960/2524 [06:35<10:43,  2.43it/s, loss=0.0368, v_num=3]Epoch 2:  38%|███▊      | 970/2524 [06:39<10:39,  2.43it/s, loss=0.0368, v_num=3]Epoch 2:  38%|███▊      | 970/2524 [06:39<10:39,  2.43it/s, loss=0.0311, v_num=3]Epoch 2:  39%|███▉      | 980/2524 [06:43<10:35,  2.43it/s, loss=0.0311, v_num=3]Epoch 2:  39%|███▉      | 980/2524 [06:43<10:35,  2.43it/s, loss=0.0356, v_num=3]Epoch 2:  39%|███▉      | 990/2524 [06:47<10:31,  2.43it/s, loss=0.0356, v_num=3]Epoch 2:  39%|███▉      | 990/2524 [06:47<10:31,  2.43it/s, loss=0.0423, v_num=3]Epoch 2:  40%|███▉      | 1000/2524 [06:51<10:27,  2.43it/s, loss=0.0423, v_num=3]Epoch 2:  40%|███▉      | 1000/2524 [06:51<10:27,  2.43it/s, loss=0.0375, v_num=3]Epoch 2:  40%|████      | 1010/2524 [06:55<10:23,  2.43it/s, loss=0.0375, v_num=3]Epoch 2:  40%|████      | 1010/2524 [06:55<10:23,  2.43it/s, loss=0.0304, v_num=3]Epoch 2:  40%|████      | 1020/2524 [06:59<10:18,  2.43it/s, loss=0.0304, v_num=3]Epoch 2:  40%|████      | 1020/2524 [06:59<10:18,  2.43it/s, loss=0.0334, v_num=3]Epoch 2:  41%|████      | 1030/2524 [07:03<10:14,  2.43it/s, loss=0.0334, v_num=3]Epoch 2:  41%|████      | 1030/2524 [07:03<10:14,  2.43it/s, loss=0.038, v_num=3] Epoch 2:  41%|████      | 1040/2524 [07:07<10:10,  2.43it/s, loss=0.038, v_num=3]Epoch 2:  41%|████      | 1040/2524 [07:07<10:10,  2.43it/s, loss=0.041, v_num=3]Epoch 2:  42%|████▏     | 1050/2524 [07:12<10:06,  2.43it/s, loss=0.041, v_num=3]Epoch 2:  42%|████▏     | 1050/2524 [07:12<10:06,  2.43it/s, loss=0.0387, v_num=3]Epoch 2:  42%|████▏     | 1060/2524 [07:16<10:02,  2.43it/s, loss=0.0387, v_num=3]Epoch 2:  42%|████▏     | 1060/2524 [07:16<10:02,  2.43it/s, loss=0.0358, v_num=3]Epoch 2:  42%|████▏     | 1070/2524 [07:20<09:58,  2.43it/s, loss=0.0358, v_num=3]Epoch 2:  42%|████▏     | 1070/2524 [07:20<09:58,  2.43it/s, loss=0.0367, v_num=3]Epoch 2:  43%|████▎     | 1080/2524 [07:24<09:54,  2.43it/s, loss=0.0367, v_num=3]Epoch 2:  43%|████▎     | 1080/2524 [07:24<09:54,  2.43it/s, loss=0.0318, v_num=3]Epoch 2:  43%|████▎     | 1090/2524 [07:28<09:50,  2.43it/s, loss=0.0318, v_num=3]Epoch 2:  43%|████▎     | 1090/2524 [07:28<09:50,  2.43it/s, loss=0.0286, v_num=3]Epoch 2:  44%|████▎     | 1100/2524 [07:32<09:45,  2.43it/s, loss=0.0286, v_num=3]Epoch 2:  44%|████▎     | 1100/2524 [07:32<09:45,  2.43it/s, loss=0.0334, v_num=3]Epoch 2:  44%|████▍     | 1110/2524 [07:36<09:41,  2.43it/s, loss=0.0334, v_num=3]Epoch 2:  44%|████▍     | 1110/2524 [07:36<09:41,  2.43it/s, loss=0.0326, v_num=3]Epoch 2:  44%|████▍     | 1120/2524 [07:40<09:37,  2.43it/s, loss=0.0326, v_num=3]Epoch 2:  44%|████▍     | 1120/2524 [07:40<09:37,  2.43it/s, loss=0.0285, v_num=3]Epoch 2:  45%|████▍     | 1130/2524 [07:44<09:33,  2.43it/s, loss=0.0285, v_num=3]Epoch 2:  45%|████▍     | 1130/2524 [07:44<09:33,  2.43it/s, loss=0.0342, v_num=3]Epoch 2:  45%|████▌     | 1140/2524 [07:49<09:29,  2.43it/s, loss=0.0342, v_num=3]Epoch 2:  45%|████▌     | 1140/2524 [07:49<09:29,  2.43it/s, loss=0.0381, v_num=3]Epoch 2:  46%|████▌     | 1150/2524 [07:53<09:25,  2.43it/s, loss=0.0381, v_num=3]Epoch 2:  46%|████▌     | 1150/2524 [07:53<09:25,  2.43it/s, loss=0.0352, v_num=3]Epoch 2:  46%|████▌     | 1160/2524 [07:57<09:21,  2.43it/s, loss=0.0352, v_num=3]Epoch 2:  46%|████▌     | 1160/2524 [07:57<09:21,  2.43it/s, loss=0.0365, v_num=3]Epoch 2:  46%|████▋     | 1170/2524 [08:01<09:17,  2.43it/s, loss=0.0365, v_num=3]Epoch 2:  46%|████▋     | 1170/2524 [08:01<09:17,  2.43it/s, loss=0.0365, v_num=3]Epoch 2:  47%|████▋     | 1180/2524 [08:05<09:13,  2.43it/s, loss=0.0365, v_num=3]Epoch 2:  47%|████▋     | 1180/2524 [08:05<09:13,  2.43it/s, loss=0.0326, v_num=3]Epoch 2:  47%|████▋     | 1190/2524 [08:09<09:08,  2.43it/s, loss=0.0326, v_num=3]Epoch 2:  47%|████▋     | 1190/2524 [08:09<09:08,  2.43it/s, loss=0.0353, v_num=3]Epoch 2:  48%|████▊     | 1200/2524 [08:13<09:04,  2.43it/s, loss=0.0353, v_num=3]Epoch 2:  48%|████▊     | 1200/2524 [08:13<09:04,  2.43it/s, loss=0.0355, v_num=3]Epoch 2:  48%|████▊     | 1210/2524 [08:17<09:00,  2.43it/s, loss=0.0355, v_num=3]Epoch 2:  48%|████▊     | 1210/2524 [08:17<09:00,  2.43it/s, loss=0.0328, v_num=3]Epoch 2:  48%|████▊     | 1220/2524 [08:21<08:56,  2.43it/s, loss=0.0328, v_num=3]Epoch 2:  48%|████▊     | 1220/2524 [08:21<08:56,  2.43it/s, loss=0.0326, v_num=3]Epoch 2:  49%|████▊     | 1230/2524 [08:26<08:52,  2.43it/s, loss=0.0326, v_num=3]Epoch 2:  49%|████▊     | 1230/2524 [08:26<08:52,  2.43it/s, loss=0.0296, v_num=3]Epoch 2:  49%|████▉     | 1240/2524 [08:30<08:48,  2.43it/s, loss=0.0296, v_num=3]Epoch 2:  49%|████▉     | 1240/2524 [08:30<08:48,  2.43it/s, loss=0.0318, v_num=3]Epoch 2:  50%|████▉     | 1250/2524 [08:34<08:44,  2.43it/s, loss=0.0318, v_num=3]Epoch 2:  50%|████▉     | 1250/2524 [08:34<08:44,  2.43it/s, loss=0.0395, v_num=3]Epoch 2:  50%|████▉     | 1260/2524 [08:38<08:40,  2.43it/s, loss=0.0395, v_num=3]Epoch 2:  50%|████▉     | 1260/2524 [08:38<08:40,  2.43it/s, loss=0.0375, v_num=3]Epoch 2:  50%|█████     | 1270/2524 [08:42<08:35,  2.43it/s, loss=0.0375, v_num=3]Epoch 2:  50%|█████     | 1270/2524 [08:42<08:35,  2.43it/s, loss=0.0401, v_num=3]Epoch 2:  51%|█████     | 1280/2524 [08:46<08:31,  2.43it/s, loss=0.0401, v_num=3]Epoch 2:  51%|█████     | 1280/2524 [08:46<08:31,  2.43it/s, loss=0.0445, v_num=3]Epoch 2:  51%|█████     | 1290/2524 [08:50<08:27,  2.43it/s, loss=0.0445, v_num=3]Epoch 2:  51%|█████     | 1290/2524 [08:50<08:27,  2.43it/s, loss=0.0378, v_num=3]Epoch 2:  52%|█████▏    | 1300/2524 [08:54<08:23,  2.43it/s, loss=0.0378, v_num=3]Epoch 2:  52%|█████▏    | 1300/2524 [08:54<08:23,  2.43it/s, loss=0.0314, v_num=3]Epoch 2:  52%|█████▏    | 1310/2524 [08:58<08:19,  2.43it/s, loss=0.0314, v_num=3]Epoch 2:  52%|█████▏    | 1310/2524 [08:58<08:19,  2.43it/s, loss=0.0268, v_num=3]Epoch 2:  52%|█████▏    | 1320/2524 [09:03<08:15,  2.43it/s, loss=0.0268, v_num=3]Epoch 2:  52%|█████▏    | 1320/2524 [09:03<08:15,  2.43it/s, loss=0.0286, v_num=3]Epoch 2:  53%|█████▎    | 1330/2524 [09:07<08:11,  2.43it/s, loss=0.0286, v_num=3]Epoch 2:  53%|█████▎    | 1330/2524 [09:07<08:11,  2.43it/s, loss=0.0354, v_num=3]Epoch 2:  53%|█████▎    | 1340/2524 [09:11<08:07,  2.43it/s, loss=0.0354, v_num=3]Epoch 2:  53%|█████▎    | 1340/2524 [09:11<08:07,  2.43it/s, loss=0.0369, v_num=3]Epoch 2:  53%|█████▎    | 1350/2524 [09:15<08:02,  2.43it/s, loss=0.0369, v_num=3]Epoch 2:  53%|█████▎    | 1350/2524 [09:15<08:02,  2.43it/s, loss=0.0412, v_num=3]Epoch 2:  54%|█████▍    | 1360/2524 [09:20<07:59,  2.43it/s, loss=0.0412, v_num=3]Epoch 2:  54%|█████▍    | 1360/2524 [09:20<07:59,  2.43it/s, loss=0.0422, v_num=3]Epoch 2:  54%|█████▍    | 1370/2524 [09:24<07:55,  2.43it/s, loss=0.0422, v_num=3]Epoch 2:  54%|█████▍    | 1370/2524 [09:24<07:55,  2.43it/s, loss=0.0371, v_num=3]Epoch 2:  55%|█████▍    | 1380/2524 [09:28<07:51,  2.43it/s, loss=0.0371, v_num=3]Epoch 2:  55%|█████▍    | 1380/2524 [09:28<07:51,  2.43it/s, loss=0.0366, v_num=3]Epoch 2:  55%|█████▌    | 1390/2524 [09:32<07:46,  2.43it/s, loss=0.0366, v_num=3]Epoch 2:  55%|█████▌    | 1390/2524 [09:32<07:46,  2.43it/s, loss=0.0346, v_num=3]Epoch 2:  55%|█████▌    | 1400/2524 [09:36<07:42,  2.43it/s, loss=0.0346, v_num=3]Epoch 2:  55%|█████▌    | 1400/2524 [09:36<07:42,  2.43it/s, loss=0.0264, v_num=3]Epoch 2:  56%|█████▌    | 1410/2524 [09:40<07:38,  2.43it/s, loss=0.0264, v_num=3]Epoch 2:  56%|█████▌    | 1410/2524 [09:40<07:38,  2.43it/s, loss=0.0316, v_num=3]Epoch 2:  56%|█████▋    | 1420/2524 [09:44<07:34,  2.43it/s, loss=0.0316, v_num=3]Epoch 2:  56%|█████▋    | 1420/2524 [09:44<07:34,  2.43it/s, loss=0.0385, v_num=3]Epoch 2:  57%|█████▋    | 1430/2524 [09:48<07:30,  2.43it/s, loss=0.0385, v_num=3]Epoch 2:  57%|█████▋    | 1430/2524 [09:48<07:30,  2.43it/s, loss=0.0326, v_num=3]Epoch 2:  57%|█████▋    | 1440/2524 [09:52<07:26,  2.43it/s, loss=0.0326, v_num=3]Epoch 2:  57%|█████▋    | 1440/2524 [09:52<07:26,  2.43it/s, loss=0.0352, v_num=3]Epoch 2:  57%|█████▋    | 1450/2524 [09:56<07:22,  2.43it/s, loss=0.0352, v_num=3]Epoch 2:  57%|█████▋    | 1450/2524 [09:56<07:22,  2.43it/s, loss=0.0326, v_num=3]Epoch 2:  58%|█████▊    | 1460/2524 [10:01<07:18,  2.43it/s, loss=0.0326, v_num=3]Epoch 2:  58%|█████▊    | 1460/2524 [10:01<07:18,  2.43it/s, loss=0.0289, v_num=3]Epoch 2:  58%|█████▊    | 1470/2524 [10:05<07:13,  2.43it/s, loss=0.0289, v_num=3]Epoch 2:  58%|█████▊    | 1470/2524 [10:05<07:13,  2.43it/s, loss=0.0313, v_num=3]Epoch 2:  59%|█████▊    | 1480/2524 [10:09<07:09,  2.43it/s, loss=0.0313, v_num=3]Epoch 2:  59%|█████▊    | 1480/2524 [10:09<07:09,  2.43it/s, loss=0.0327, v_num=3]Epoch 2:  59%|█████▉    | 1490/2524 [10:13<07:05,  2.43it/s, loss=0.0327, v_num=3]Epoch 2:  59%|█████▉    | 1490/2524 [10:13<07:05,  2.43it/s, loss=0.0335, v_num=3]Epoch 2:  59%|█████▉    | 1500/2524 [10:17<07:01,  2.43it/s, loss=0.0335, v_num=3]Epoch 2:  59%|█████▉    | 1500/2524 [10:17<07:01,  2.43it/s, loss=0.0348, v_num=3]Epoch 2:  60%|█████▉    | 1510/2524 [10:21<06:57,  2.43it/s, loss=0.0348, v_num=3]Epoch 2:  60%|█████▉    | 1510/2524 [10:21<06:57,  2.43it/s, loss=0.0338, v_num=3]Epoch 2:  60%|██████    | 1520/2524 [10:25<06:53,  2.43it/s, loss=0.0338, v_num=3]Epoch 2:  60%|██████    | 1520/2524 [10:25<06:53,  2.43it/s, loss=0.0315, v_num=3]Epoch 2:  61%|██████    | 1530/2524 [10:29<06:49,  2.43it/s, loss=0.0315, v_num=3]Epoch 2:  61%|██████    | 1530/2524 [10:29<06:49,  2.43it/s, loss=0.0303, v_num=3]Epoch 2:  61%|██████    | 1540/2524 [10:33<06:45,  2.43it/s, loss=0.0303, v_num=3]Epoch 2:  61%|██████    | 1540/2524 [10:33<06:45,  2.43it/s, loss=0.0278, v_num=3]Epoch 2:  61%|██████▏   | 1550/2524 [10:38<06:40,  2.43it/s, loss=0.0278, v_num=3]Epoch 2:  61%|██████▏   | 1550/2524 [10:38<06:40,  2.43it/s, loss=0.0315, v_num=3]Epoch 2:  62%|██████▏   | 1560/2524 [10:42<06:36,  2.43it/s, loss=0.0315, v_num=3]Epoch 2:  62%|██████▏   | 1560/2524 [10:42<06:36,  2.43it/s, loss=0.0376, v_num=3]Epoch 2:  62%|██████▏   | 1570/2524 [10:46<06:32,  2.43it/s, loss=0.0376, v_num=3]Epoch 2:  62%|██████▏   | 1570/2524 [10:46<06:32,  2.43it/s, loss=0.0355, v_num=3]Epoch 2:  63%|██████▎   | 1580/2524 [10:50<06:28,  2.43it/s, loss=0.0355, v_num=3]Epoch 2:  63%|██████▎   | 1580/2524 [10:50<06:28,  2.43it/s, loss=0.0352, v_num=3]Epoch 2:  63%|██████▎   | 1590/2524 [10:54<06:24,  2.43it/s, loss=0.0352, v_num=3]Epoch 2:  63%|██████▎   | 1590/2524 [10:54<06:24,  2.43it/s, loss=0.0327, v_num=3]Epoch 2:  63%|██████▎   | 1600/2524 [10:58<06:20,  2.43it/s, loss=0.0327, v_num=3]Epoch 2:  63%|██████▎   | 1600/2524 [10:58<06:20,  2.43it/s, loss=0.0276, v_num=3]Epoch 2:  64%|██████▍   | 1610/2524 [11:02<06:16,  2.43it/s, loss=0.0276, v_num=3]Epoch 2:  64%|██████▍   | 1610/2524 [11:02<06:16,  2.43it/s, loss=0.0338, v_num=3]Epoch 2:  64%|██████▍   | 1620/2524 [11:06<06:12,  2.43it/s, loss=0.0338, v_num=3]Epoch 2:  64%|██████▍   | 1620/2524 [11:06<06:12,  2.43it/s, loss=0.0337, v_num=3]Epoch 2:  65%|██████▍   | 1630/2524 [11:10<06:08,  2.43it/s, loss=0.0337, v_num=3]Epoch 2:  65%|██████▍   | 1630/2524 [11:11<06:08,  2.43it/s, loss=0.028, v_num=3] Epoch 2:  65%|██████▍   | 1640/2524 [11:15<06:03,  2.43it/s, loss=0.028, v_num=3]Epoch 2:  65%|██████▍   | 1640/2524 [11:15<06:03,  2.43it/s, loss=0.0364, v_num=3]Epoch 2:  65%|██████▌   | 1650/2524 [11:19<05:59,  2.43it/s, loss=0.0364, v_num=3]Epoch 2:  65%|██████▌   | 1650/2524 [11:19<05:59,  2.43it/s, loss=0.0373, v_num=3]Epoch 2:  66%|██████▌   | 1660/2524 [11:23<05:55,  2.43it/s, loss=0.0373, v_num=3]Epoch 2:  66%|██████▌   | 1660/2524 [11:23<05:55,  2.43it/s, loss=0.0343, v_num=3]Epoch 2:  66%|██████▌   | 1670/2524 [11:27<05:51,  2.43it/s, loss=0.0343, v_num=3]Epoch 2:  66%|██████▌   | 1670/2524 [11:27<05:51,  2.43it/s, loss=0.0386, v_num=3]Epoch 2:  67%|██████▋   | 1680/2524 [11:31<05:47,  2.43it/s, loss=0.0386, v_num=3]Epoch 2:  67%|██████▋   | 1680/2524 [11:31<05:47,  2.43it/s, loss=0.0363, v_num=3]Epoch 2:  67%|██████▋   | 1690/2524 [11:35<05:43,  2.43it/s, loss=0.0363, v_num=3]Epoch 2:  67%|██████▋   | 1690/2524 [11:35<05:43,  2.43it/s, loss=0.0385, v_num=3]Epoch 2:  67%|██████▋   | 1700/2524 [11:39<05:39,  2.43it/s, loss=0.0385, v_num=3]Epoch 2:  67%|██████▋   | 1700/2524 [11:39<05:39,  2.43it/s, loss=0.0405, v_num=3]Epoch 2:  68%|██████▊   | 1710/2524 [11:43<05:35,  2.43it/s, loss=0.0405, v_num=3]Epoch 2:  68%|██████▊   | 1710/2524 [11:43<05:35,  2.43it/s, loss=0.0352, v_num=3]Epoch 2:  68%|██████▊   | 1720/2524 [11:48<05:30,  2.43it/s, loss=0.0352, v_num=3]Epoch 2:  68%|██████▊   | 1720/2524 [11:48<05:30,  2.43it/s, loss=0.0293, v_num=3]Epoch 2:  69%|██████▊   | 1730/2524 [11:52<05:26,  2.43it/s, loss=0.0293, v_num=3]Epoch 2:  69%|██████▊   | 1730/2524 [11:52<05:26,  2.43it/s, loss=0.0291, v_num=3]Epoch 2:  69%|██████▉   | 1740/2524 [11:56<05:22,  2.43it/s, loss=0.0291, v_num=3]Epoch 2:  69%|██████▉   | 1740/2524 [11:56<05:22,  2.43it/s, loss=0.0339, v_num=3]Epoch 2:  69%|██████▉   | 1750/2524 [12:00<05:18,  2.43it/s, loss=0.0339, v_num=3]Epoch 2:  69%|██████▉   | 1750/2524 [12:00<05:18,  2.43it/s, loss=0.039, v_num=3] Epoch 2:  70%|██████▉   | 1760/2524 [12:04<05:14,  2.43it/s, loss=0.039, v_num=3]Epoch 2:  70%|██████▉   | 1760/2524 [12:04<05:14,  2.43it/s, loss=0.0371, v_num=3]Epoch 2:  70%|███████   | 1770/2524 [12:08<05:10,  2.43it/s, loss=0.0371, v_num=3]Epoch 2:  70%|███████   | 1770/2524 [12:08<05:10,  2.43it/s, loss=0.0327, v_num=3]Epoch 2:  71%|███████   | 1780/2524 [12:12<05:06,  2.43it/s, loss=0.0327, v_num=3]Epoch 2:  71%|███████   | 1780/2524 [12:12<05:06,  2.43it/s, loss=0.0317, v_num=3]Epoch 2:  71%|███████   | 1790/2524 [12:16<05:02,  2.43it/s, loss=0.0317, v_num=3]Epoch 2:  71%|███████   | 1790/2524 [12:16<05:02,  2.43it/s, loss=0.0328, v_num=3]Epoch 2:  71%|███████▏  | 1800/2524 [12:20<04:58,  2.43it/s, loss=0.0328, v_num=3]Epoch 2:  71%|███████▏  | 1800/2524 [12:20<04:58,  2.43it/s, loss=0.033, v_num=3] Epoch 2:  72%|███████▏  | 1810/2524 [12:25<04:53,  2.43it/s, loss=0.033, v_num=3]Epoch 2:  72%|███████▏  | 1810/2524 [12:25<04:53,  2.43it/s, loss=0.0288, v_num=3]Epoch 2:  72%|███████▏  | 1820/2524 [12:29<04:49,  2.43it/s, loss=0.0288, v_num=3]Epoch 2:  72%|███████▏  | 1820/2524 [12:29<04:49,  2.43it/s, loss=0.0295, v_num=3]Epoch 2:  73%|███████▎  | 1830/2524 [12:33<04:45,  2.43it/s, loss=0.0295, v_num=3]Epoch 2:  73%|███████▎  | 1830/2524 [12:33<04:45,  2.43it/s, loss=0.0319, v_num=3]Epoch 2:  73%|███████▎  | 1840/2524 [12:37<04:41,  2.43it/s, loss=0.0319, v_num=3]Epoch 2:  73%|███████▎  | 1840/2524 [12:37<04:41,  2.43it/s, loss=0.031, v_num=3] Epoch 2:  73%|███████▎  | 1850/2524 [12:41<04:37,  2.43it/s, loss=0.031, v_num=3]Epoch 2:  73%|███████▎  | 1850/2524 [12:41<04:37,  2.43it/s, loss=0.0295, v_num=3]Epoch 2:  74%|███████▎  | 1860/2524 [12:45<04:33,  2.43it/s, loss=0.0295, v_num=3]Epoch 2:  74%|███████▎  | 1860/2524 [12:45<04:33,  2.43it/s, loss=0.0287, v_num=3]Epoch 2:  74%|███████▍  | 1870/2524 [12:49<04:29,  2.43it/s, loss=0.0287, v_num=3]Epoch 2:  74%|███████▍  | 1870/2524 [12:49<04:29,  2.43it/s, loss=0.0298, v_num=3]Epoch 2:  74%|███████▍  | 1880/2524 [12:53<04:25,  2.43it/s, loss=0.0298, v_num=3]Epoch 2:  74%|███████▍  | 1880/2524 [12:53<04:25,  2.43it/s, loss=0.0316, v_num=3]Epoch 2:  75%|███████▍  | 1890/2524 [12:57<04:20,  2.43it/s, loss=0.0316, v_num=3]Epoch 2:  75%|███████▍  | 1890/2524 [12:57<04:20,  2.43it/s, loss=0.0339, v_num=3]Epoch 2:  75%|███████▌  | 1900/2524 [13:02<04:16,  2.43it/s, loss=0.0339, v_num=3]Epoch 2:  75%|███████▌  | 1900/2524 [13:02<04:16,  2.43it/s, loss=0.0333, v_num=3]Epoch 2:  76%|███████▌  | 1910/2524 [13:06<04:12,  2.43it/s, loss=0.0333, v_num=3]Epoch 2:  76%|███████▌  | 1910/2524 [13:06<04:12,  2.43it/s, loss=0.0338, v_num=3]Epoch 2:  76%|███████▌  | 1920/2524 [13:10<04:08,  2.43it/s, loss=0.0338, v_num=3]Epoch 2:  76%|███████▌  | 1920/2524 [13:10<04:08,  2.43it/s, loss=0.0327, v_num=3]Epoch 2:  76%|███████▋  | 1930/2524 [13:14<04:04,  2.43it/s, loss=0.0327, v_num=3]Epoch 2:  76%|███████▋  | 1930/2524 [13:14<04:04,  2.43it/s, loss=0.0305, v_num=3]Epoch 2:  77%|███████▋  | 1940/2524 [13:18<04:00,  2.43it/s, loss=0.0305, v_num=3]Epoch 2:  77%|███████▋  | 1940/2524 [13:18<04:00,  2.43it/s, loss=0.0306, v_num=3]Epoch 2:  77%|███████▋  | 1950/2524 [13:22<03:56,  2.43it/s, loss=0.0306, v_num=3]Epoch 2:  77%|███████▋  | 1950/2524 [13:22<03:56,  2.43it/s, loss=0.0285, v_num=3]Epoch 2:  78%|███████▊  | 1960/2524 [13:26<03:52,  2.43it/s, loss=0.0285, v_num=3]Epoch 2:  78%|███████▊  | 1960/2524 [13:26<03:52,  2.43it/s, loss=0.0306, v_num=3]Epoch 2:  78%|███████▊  | 1970/2524 [13:30<03:48,  2.43it/s, loss=0.0306, v_num=3]Epoch 2:  78%|███████▊  | 1970/2524 [13:30<03:48,  2.43it/s, loss=0.0312, v_num=3]Epoch 2:  78%|███████▊  | 1980/2524 [13:34<03:43,  2.43it/s, loss=0.0312, v_num=3]Epoch 2:  78%|███████▊  | 1980/2524 [13:34<03:43,  2.43it/s, loss=0.0291, v_num=3]Epoch 2:  79%|███████▉  | 1990/2524 [13:39<03:39,  2.43it/s, loss=0.0291, v_num=3]Epoch 2:  79%|███████▉  | 1990/2524 [13:39<03:39,  2.43it/s, loss=0.0303, v_num=3]Epoch 2:  79%|███████▉  | 2000/2524 [13:43<03:35,  2.43it/s, loss=0.0303, v_num=3]Epoch 2:  79%|███████▉  | 2000/2524 [13:43<03:35,  2.43it/s, loss=0.0299, v_num=3]Epoch 2:  80%|███████▉  | 2010/2524 [13:47<03:31,  2.43it/s, loss=0.0299, v_num=3]Epoch 2:  80%|███████▉  | 2010/2524 [13:47<03:31,  2.43it/s, loss=0.0278, v_num=3]Epoch 2:  80%|████████  | 2020/2524 [13:51<03:27,  2.43it/s, loss=0.0278, v_num=3]Epoch 2:  80%|████████  | 2020/2524 [13:51<03:27,  2.43it/s, loss=0.0274, v_num=3]Epoch 2:  80%|████████  | 2030/2524 [13:55<03:23,  2.43it/s, loss=0.0274, v_num=3]Epoch 2:  80%|████████  | 2030/2524 [13:55<03:23,  2.43it/s, loss=0.0349, v_num=3]Epoch 2:  81%|████████  | 2040/2524 [13:59<03:19,  2.43it/s, loss=0.0349, v_num=3]Epoch 2:  81%|████████  | 2040/2524 [13:59<03:19,  2.43it/s, loss=0.038, v_num=3] Epoch 2:  81%|████████  | 2050/2524 [14:03<03:15,  2.43it/s, loss=0.038, v_num=3]Epoch 2:  81%|████████  | 2050/2524 [14:03<03:15,  2.43it/s, loss=0.0299, v_num=3]Epoch 2:  82%|████████▏ | 2060/2524 [14:07<03:10,  2.43it/s, loss=0.0299, v_num=3]Epoch 2:  82%|████████▏ | 2060/2524 [14:07<03:10,  2.43it/s, loss=0.0281, v_num=3]Epoch 2:  82%|████████▏ | 2070/2524 [14:11<03:06,  2.43it/s, loss=0.0281, v_num=3]Epoch 2:  82%|████████▏ | 2070/2524 [14:11<03:06,  2.43it/s, loss=0.0371, v_num=3]Epoch 2:  82%|████████▏ | 2080/2524 [14:16<03:02,  2.43it/s, loss=0.0371, v_num=3]Epoch 2:  82%|████████▏ | 2080/2524 [14:16<03:02,  2.43it/s, loss=0.0362, v_num=3]Epoch 2:  83%|████████▎ | 2090/2524 [14:20<02:58,  2.43it/s, loss=0.0362, v_num=3]Epoch 2:  83%|████████▎ | 2090/2524 [14:20<02:58,  2.43it/s, loss=0.0262, v_num=3]Epoch 2:  83%|████████▎ | 2100/2524 [14:24<02:54,  2.43it/s, loss=0.0262, v_num=3]Epoch 2:  83%|████████▎ | 2100/2524 [14:24<02:54,  2.43it/s, loss=0.0268, v_num=3]Epoch 2:  84%|████████▎ | 2110/2524 [14:28<02:50,  2.43it/s, loss=0.0268, v_num=3]Epoch 2:  84%|████████▎ | 2110/2524 [14:28<02:50,  2.43it/s, loss=0.0318, v_num=3]Epoch 2:  84%|████████▍ | 2120/2524 [14:32<02:46,  2.43it/s, loss=0.0318, v_num=3]Epoch 2:  84%|████████▍ | 2120/2524 [14:32<02:46,  2.43it/s, loss=0.0307, v_num=3]Epoch 2:  84%|████████▍ | 2130/2524 [14:36<02:42,  2.43it/s, loss=0.0307, v_num=3]Epoch 2:  84%|████████▍ | 2130/2524 [14:36<02:42,  2.43it/s, loss=0.0241, v_num=3]Epoch 2:  85%|████████▍ | 2140/2524 [14:40<02:38,  2.43it/s, loss=0.0241, v_num=3]Epoch 2:  85%|████████▍ | 2140/2524 [14:40<02:38,  2.43it/s, loss=0.0217, v_num=3]Epoch 2:  85%|████████▌ | 2150/2524 [14:44<02:33,  2.43it/s, loss=0.0217, v_num=3]Epoch 2:  85%|████████▌ | 2150/2524 [14:44<02:33,  2.43it/s, loss=0.0237, v_num=3]Epoch 2:  86%|████████▌ | 2160/2524 [14:48<02:29,  2.43it/s, loss=0.0237, v_num=3]Epoch 2:  86%|████████▌ | 2160/2524 [14:48<02:29,  2.43it/s, loss=0.03, v_num=3]  Epoch 2:  86%|████████▌ | 2170/2524 [14:53<02:25,  2.43it/s, loss=0.03, v_num=3]Epoch 2:  86%|████████▌ | 2170/2524 [14:53<02:25,  2.43it/s, loss=0.0322, v_num=3]Epoch 2:  86%|████████▋ | 2180/2524 [14:57<02:21,  2.43it/s, loss=0.0322, v_num=3]Epoch 2:  86%|████████▋ | 2180/2524 [14:57<02:21,  2.43it/s, loss=0.0344, v_num=3]Epoch 2:  87%|████████▋ | 2190/2524 [15:01<02:17,  2.43it/s, loss=0.0344, v_num=3]Epoch 2:  87%|████████▋ | 2190/2524 [15:01<02:17,  2.43it/s, loss=0.0332, v_num=3]Epoch 2:  87%|████████▋ | 2200/2524 [15:05<02:13,  2.43it/s, loss=0.0332, v_num=3]Epoch 2:  87%|████████▋ | 2200/2524 [15:05<02:13,  2.43it/s, loss=0.0271, v_num=3]Epoch 2:  88%|████████▊ | 2210/2524 [15:09<02:09,  2.43it/s, loss=0.0271, v_num=3]Epoch 2:  88%|████████▊ | 2210/2524 [15:09<02:09,  2.43it/s, loss=0.0282, v_num=3]Epoch 2:  88%|████████▊ | 2220/2524 [15:13<02:05,  2.43it/s, loss=0.0282, v_num=3]Epoch 2:  88%|████████▊ | 2220/2524 [15:13<02:05,  2.43it/s, loss=0.0278, v_num=3]Epoch 2:  88%|████████▊ | 2230/2524 [15:17<02:00,  2.43it/s, loss=0.0278, v_num=3]Epoch 2:  88%|████████▊ | 2230/2524 [15:17<02:00,  2.43it/s, loss=0.0247, v_num=3]Epoch 2:  89%|████████▊ | 2240/2524 [15:21<01:56,  2.43it/s, loss=0.0247, v_num=3]Epoch 2:  89%|████████▊ | 2240/2524 [15:21<01:56,  2.43it/s, loss=0.0218, v_num=3]Epoch 2:  89%|████████▉ | 2250/2524 [15:25<01:52,  2.43it/s, loss=0.0218, v_num=3]Epoch 2:  89%|████████▉ | 2250/2524 [15:25<01:52,  2.43it/s, loss=0.024, v_num=3] Epoch 2:  90%|████████▉ | 2260/2524 [15:30<01:48,  2.43it/s, loss=0.024, v_num=3]Epoch 2:  90%|████████▉ | 2260/2524 [15:30<01:48,  2.43it/s, loss=0.0236, v_num=3]Epoch 2:  90%|████████▉ | 2270/2524 [15:34<01:44,  2.43it/s, loss=0.0236, v_num=3]Epoch 2:  90%|████████▉ | 2270/2524 [15:34<01:44,  2.43it/s, loss=0.0234, v_num=3]Epoch 2:  90%|█████████ | 2280/2524 [15:38<01:40,  2.43it/s, loss=0.0234, v_num=3]Epoch 2:  90%|█████████ | 2280/2524 [15:38<01:40,  2.43it/s, loss=0.0312, v_num=3]Epoch 2:  91%|█████████ | 2290/2524 [15:42<01:36,  2.43it/s, loss=0.0312, v_num=3]Epoch 2:  91%|█████████ | 2290/2524 [15:42<01:36,  2.43it/s, loss=0.0296, v_num=3]Epoch 2:  91%|█████████ | 2300/2524 [15:46<01:32,  2.43it/s, loss=0.0296, v_num=3]Epoch 2:  91%|█████████ | 2300/2524 [15:46<01:32,  2.43it/s, loss=0.0225, v_num=3]Epoch 2:  92%|█████████▏| 2310/2524 [15:50<01:28,  2.43it/s, loss=0.0225, v_num=3]Epoch 2:  92%|█████████▏| 2310/2524 [15:50<01:28,  2.43it/s, loss=0.027, v_num=3] Epoch 2:  92%|█████████▏| 2320/2524 [15:54<01:23,  2.43it/s, loss=0.027, v_num=3]Epoch 2:  92%|█████████▏| 2320/2524 [15:54<01:23,  2.43it/s, loss=0.0337, v_num=3]Epoch 2:  92%|█████████▏| 2330/2524 [15:59<01:19,  2.43it/s, loss=0.0337, v_num=3]Epoch 2:  92%|█████████▏| 2330/2524 [15:59<01:19,  2.43it/s, loss=0.0304, v_num=3]Epoch 2:  93%|█████████▎| 2340/2524 [16:03<01:15,  2.43it/s, loss=0.0304, v_num=3]Epoch 2:  93%|█████████▎| 2340/2524 [16:03<01:15,  2.43it/s, loss=0.0301, v_num=3]Epoch 2:  93%|█████████▎| 2350/2524 [16:07<01:11,  2.43it/s, loss=0.0301, v_num=3]Epoch 2:  93%|█████████▎| 2350/2524 [16:07<01:11,  2.43it/s, loss=0.0358, v_num=3]Epoch 2:  94%|█████████▎| 2360/2524 [16:11<01:07,  2.43it/s, loss=0.0358, v_num=3]Epoch 2:  94%|█████████▎| 2360/2524 [16:11<01:07,  2.43it/s, loss=0.0369, v_num=3]Epoch 2:  94%|█████████▍| 2370/2524 [16:15<01:03,  2.43it/s, loss=0.0369, v_num=3]Epoch 2:  94%|█████████▍| 2370/2524 [16:15<01:03,  2.43it/s, loss=0.0318, v_num=3]Epoch 2:  94%|█████████▍| 2380/2524 [16:19<00:59,  2.43it/s, loss=0.0318, v_num=3]Epoch 2:  94%|█████████▍| 2380/2524 [16:19<00:59,  2.43it/s, loss=0.0292, v_num=3]Epoch 2:  95%|█████████▍| 2390/2524 [16:23<00:55,  2.43it/s, loss=0.0292, v_num=3]Epoch 2:  95%|█████████▍| 2390/2524 [16:23<00:55,  2.43it/s, loss=0.0286, v_num=3]Epoch 2:  95%|█████████▌| 2400/2524 [16:27<00:51,  2.43it/s, loss=0.0286, v_num=3]Epoch 2:  95%|█████████▌| 2400/2524 [16:27<00:51,  2.43it/s, loss=0.0302, v_num=3]Epoch 2:  95%|█████████▌| 2410/2524 [16:31<00:46,  2.43it/s, loss=0.0302, v_num=3]Epoch 2:  95%|█████████▌| 2410/2524 [16:32<00:46,  2.43it/s, loss=0.0284, v_num=3]Epoch 2:  96%|█████████▌| 2420/2524 [16:36<00:42,  2.43it/s, loss=0.0284, v_num=3]Epoch 2:  96%|█████████▌| 2420/2524 [16:36<00:42,  2.43it/s, loss=0.025, v_num=3] Epoch 2:  96%|█████████▋| 2430/2524 [16:40<00:38,  2.43it/s, loss=0.025, v_num=3]Epoch 2:  96%|█████████▋| 2430/2524 [16:40<00:38,  2.43it/s, loss=0.0289, v_num=3]Epoch 2:  97%|█████████▋| 2440/2524 [16:44<00:34,  2.43it/s, loss=0.0289, v_num=3]Epoch 2:  97%|█████████▋| 2440/2524 [16:44<00:34,  2.43it/s, loss=0.0247, v_num=3]Epoch 2:  97%|█████████▋| 2450/2524 [16:48<00:30,  2.43it/s, loss=0.0247, v_num=3]Epoch 2:  97%|█████████▋| 2450/2524 [16:48<00:30,  2.43it/s, loss=0.022, v_num=3] Epoch 2:  97%|█████████▋| 2460/2524 [16:52<00:26,  2.43it/s, loss=0.022, v_num=3]Epoch 2:  97%|█████████▋| 2460/2524 [16:52<00:26,  2.43it/s, loss=0.024, v_num=3]Epoch 2:  98%|█████████▊| 2470/2524 [16:56<00:22,  2.43it/s, loss=0.024, v_num=3]Epoch 2:  98%|█████████▊| 2470/2524 [16:56<00:22,  2.43it/s, loss=0.0288, v_num=3]Epoch 2:  98%|█████████▊| 2480/2524 [17:00<00:18,  2.43it/s, loss=0.0288, v_num=3]Epoch 2:  98%|█████████▊| 2480/2524 [17:00<00:18,  2.43it/s, loss=0.032, v_num=3] Epoch 2:  99%|█████████▊| 2490/2524 [17:04<00:13,  2.43it/s, loss=0.032, v_num=3]Epoch 2:  99%|█████████▊| 2490/2524 [17:04<00:13,  2.43it/s, loss=0.0298, v_num=3]Epoch 2:  99%|█████████▉| 2500/2524 [17:08<00:09,  2.43it/s, loss=0.0298, v_num=3]Epoch 2:  99%|█████████▉| 2500/2524 [17:08<00:09,  2.43it/s, loss=0.0295, v_num=3]Epoch 2:  99%|█████████▉| 2510/2524 [17:13<00:05,  2.43it/s, loss=0.0295, v_num=3]Epoch 2:  99%|█████████▉| 2510/2524 [17:13<00:05,  2.43it/s, loss=0.0282, v_num=3]Epoch 2: 100%|█████████▉| 2520/2524 [17:17<00:01,  2.43it/s, loss=0.0282, v_num=3]Epoch 2: 100%|█████████▉| 2520/2524 [17:17<00:01,  2.43it/s, loss=0.0297, v_num=3]Epoch 2: 100%|██████████| 2524/2524 [17:18<00:00,  2.43it/s, loss=0.0297, v_num=3]Epoch 2: 100%|██████████| 2524/2524 [17:18<00:00,  2.43it/s, loss=0.0298, v_num=3]Epoch 2: 100%|██████████| 2524/2524 [17:18<00:00,  2.43it/s, loss=0.0298, v_num=3]Epoch 2:   0%|          | 0/2524 [00:00<?, ?it/s, loss=0.0298, v_num=3]           Epoch 3:   0%|          | 0/2524 [00:00<?, ?it/s, loss=0.0298, v_num=3]Epoch 3:   0%|          | 10/2524 [00:04<18:52,  2.22it/s, loss=0.0298, v_num=3]Epoch 3:   0%|          | 10/2524 [00:04<18:55,  2.21it/s, loss=0.0282, v_num=3]Epoch 3:   1%|          | 20/2524 [00:08<17:56,  2.33it/s, loss=0.0282, v_num=3]Epoch 3:   1%|          | 20/2524 [00:08<17:57,  2.32it/s, loss=0.0271, v_num=3]Epoch 3:   1%|          | 30/2524 [00:12<17:47,  2.34it/s, loss=0.0271, v_num=3]Epoch 3:   1%|          | 30/2524 [00:12<17:48,  2.34it/s, loss=0.0285, v_num=3]Epoch 3:   2%|▏         | 40/2524 [00:16<17:31,  2.36it/s, loss=0.0285, v_num=3]Epoch 3:   2%|▏         | 40/2524 [00:16<17:32,  2.36it/s, loss=0.0242, v_num=3]Epoch 3:   2%|▏         | 50/2524 [00:21<17:20,  2.38it/s, loss=0.0242, v_num=3]Epoch 3:   2%|▏         | 50/2524 [00:21<17:21,  2.38it/s, loss=0.0212, v_num=3]Epoch 3:   2%|▏         | 60/2524 [00:25<17:11,  2.39it/s, loss=0.0212, v_num=3]Epoch 3:   2%|▏         | 60/2524 [00:25<17:12,  2.39it/s, loss=0.0222, v_num=3]Epoch 3:   3%|▎         | 70/2524 [00:29<17:04,  2.40it/s, loss=0.0222, v_num=3]Epoch 3:   3%|▎         | 70/2524 [00:29<17:04,  2.39it/s, loss=0.0245, v_num=3]Epoch 3:   3%|▎         | 80/2524 [00:33<16:59,  2.40it/s, loss=0.0245, v_num=3]Epoch 3:   3%|▎         | 80/2524 [00:33<16:59,  2.40it/s, loss=0.0285, v_num=3]Epoch 3:   4%|▎         | 90/2524 [00:37<16:53,  2.40it/s, loss=0.0285, v_num=3]Epoch 3:   4%|▎         | 90/2524 [00:37<16:53,  2.40it/s, loss=0.0278, v_num=3]Epoch 3:   4%|▍         | 100/2524 [00:41<16:47,  2.41it/s, loss=0.0278, v_num=3]Epoch 3:   4%|▍         | 100/2524 [00:41<16:47,  2.41it/s, loss=0.0243, v_num=3]Epoch 3:   4%|▍         | 110/2524 [00:45<16:42,  2.41it/s, loss=0.0243, v_num=3]Epoch 3:   4%|▍         | 110/2524 [00:45<16:42,  2.41it/s, loss=0.0229, v_num=3]Epoch 3:   5%|▍         | 120/2524 [00:49<16:36,  2.41it/s, loss=0.0229, v_num=3]Epoch 3:   5%|▍         | 120/2524 [00:49<16:37,  2.41it/s, loss=0.0211, v_num=3]Epoch 3:   5%|▌         | 130/2524 [00:53<16:34,  2.41it/s, loss=0.0211, v_num=3]Epoch 3:   5%|▌         | 130/2524 [00:54<16:34,  2.41it/s, loss=0.024, v_num=3] Epoch 3:   6%|▌         | 140/2524 [00:58<16:29,  2.41it/s, loss=0.024, v_num=3]Epoch 3:   6%|▌         | 140/2524 [00:58<16:29,  2.41it/s, loss=0.0236, v_num=3]Epoch 3:   6%|▌         | 150/2524 [01:02<16:24,  2.41it/s, loss=0.0236, v_num=3]Epoch 3:   6%|▌         | 150/2524 [01:02<16:24,  2.41it/s, loss=0.0264, v_num=3]Epoch 3:   6%|▋         | 160/2524 [01:06<16:19,  2.41it/s, loss=0.0264, v_num=3]Epoch 3:   6%|▋         | 160/2524 [01:06<16:19,  2.41it/s, loss=0.0281, v_num=3]Epoch 3:   7%|▋         | 170/2524 [01:10<16:14,  2.42it/s, loss=0.0281, v_num=3]Epoch 3:   7%|▋         | 170/2524 [01:10<16:14,  2.42it/s, loss=0.0215, v_num=3]Epoch 3:   7%|▋         | 180/2524 [01:14<16:10,  2.42it/s, loss=0.0215, v_num=3]Epoch 3:   7%|▋         | 180/2524 [01:14<16:10,  2.41it/s, loss=0.025, v_num=3] Epoch 3:   8%|▊         | 190/2524 [01:18<16:05,  2.42it/s, loss=0.025, v_num=3]Epoch 3:   8%|▊         | 190/2524 [01:18<16:05,  2.42it/s, loss=0.0269, v_num=3]Epoch 3:   8%|▊         | 200/2524 [01:22<16:01,  2.42it/s, loss=0.0269, v_num=3]Epoch 3:   8%|▊         | 200/2524 [01:22<16:01,  2.42it/s, loss=0.0236, v_num=3]Epoch 3:   8%|▊         | 210/2524 [01:26<15:56,  2.42it/s, loss=0.0236, v_num=3]Epoch 3:   8%|▊         | 210/2524 [01:26<15:56,  2.42it/s, loss=0.0276, v_num=3]Epoch 3:   9%|▊         | 220/2524 [01:30<15:51,  2.42it/s, loss=0.0276, v_num=3]Epoch 3:   9%|▊         | 220/2524 [01:30<15:52,  2.42it/s, loss=0.0248, v_num=3]Epoch 3:   9%|▉         | 230/2524 [01:35<15:48,  2.42it/s, loss=0.0248, v_num=3]Epoch 3:   9%|▉         | 230/2524 [01:35<15:49,  2.42it/s, loss=0.0232, v_num=3]Epoch 3:  10%|▉         | 240/2524 [01:39<15:44,  2.42it/s, loss=0.0232, v_num=3]Epoch 3:  10%|▉         | 240/2524 [01:39<15:44,  2.42it/s, loss=0.0241, v_num=3]Epoch 3:  10%|▉         | 250/2524 [01:43<15:39,  2.42it/s, loss=0.0241, v_num=3]Epoch 3:  10%|▉         | 250/2524 [01:43<15:39,  2.42it/s, loss=0.0224, v_num=3]Epoch 3:  10%|█         | 260/2524 [01:47<15:35,  2.42it/s, loss=0.0224, v_num=3]Epoch 3:  10%|█         | 260/2524 [01:47<15:35,  2.42it/s, loss=0.0222, v_num=3]Epoch 3:  11%|█         | 270/2524 [01:51<15:30,  2.42it/s, loss=0.0222, v_num=3]Epoch 3:  11%|█         | 270/2524 [01:51<15:30,  2.42it/s, loss=0.0222, v_num=3]Epoch 3:  11%|█         | 280/2524 [01:55<15:26,  2.42it/s, loss=0.0222, v_num=3]Epoch 3:  11%|█         | 280/2524 [01:55<15:26,  2.42it/s, loss=0.0251, v_num=3]Epoch 3:  11%|█▏        | 290/2524 [01:59<15:22,  2.42it/s, loss=0.0251, v_num=3]Epoch 3:  11%|█▏        | 290/2524 [01:59<15:22,  2.42it/s, loss=0.0264, v_num=3]Epoch 3:  12%|█▏        | 300/2524 [02:03<15:17,  2.42it/s, loss=0.0264, v_num=3]Epoch 3:  12%|█▏        | 300/2524 [02:03<15:18,  2.42it/s, loss=0.0221, v_num=3]Epoch 3:  12%|█▏        | 310/2524 [02:07<15:13,  2.42it/s, loss=0.0221, v_num=3]Epoch 3:  12%|█▏        | 310/2524 [02:07<15:13,  2.42it/s, loss=0.0183, v_num=3]Epoch 3:  13%|█▎        | 320/2524 [02:12<15:09,  2.42it/s, loss=0.0183, v_num=3]Epoch 3:  13%|█▎        | 320/2524 [02:12<15:09,  2.42it/s, loss=0.0192, v_num=3]Epoch 3:  13%|█▎        | 330/2524 [02:16<15:05,  2.42it/s, loss=0.0192, v_num=3]Epoch 3:  13%|█▎        | 330/2524 [02:16<15:05,  2.42it/s, loss=0.0201, v_num=3]Epoch 3:  13%|█▎        | 340/2524 [02:20<15:01,  2.42it/s, loss=0.0201, v_num=3]Epoch 3:  13%|█▎        | 340/2524 [02:20<15:01,  2.42it/s, loss=0.0218, v_num=3]Epoch 3:  14%|█▍        | 350/2524 [02:24<14:57,  2.42it/s, loss=0.0218, v_num=3]Epoch 3:  14%|█▍        | 350/2524 [02:24<14:57,  2.42it/s, loss=0.0207, v_num=3]Epoch 3:  14%|█▍        | 360/2524 [02:28<14:52,  2.42it/s, loss=0.0207, v_num=3]Epoch 3:  14%|█▍        | 360/2524 [02:28<14:52,  2.42it/s, loss=0.0183, v_num=3]Epoch 3:  15%|█▍        | 370/2524 [02:32<14:48,  2.42it/s, loss=0.0183, v_num=3]Epoch 3:  15%|█▍        | 370/2524 [02:32<14:48,  2.42it/s, loss=0.0265, v_num=3]Epoch 3:  15%|█▌        | 380/2524 [02:36<14:44,  2.42it/s, loss=0.0265, v_num=3]Epoch 3:  15%|█▌        | 380/2524 [02:36<14:44,  2.42it/s, loss=0.0307, v_num=3]Epoch 3:  15%|█▌        | 390/2524 [02:40<14:40,  2.42it/s, loss=0.0307, v_num=3]Epoch 3:  15%|█▌        | 390/2524 [02:40<14:40,  2.42it/s, loss=0.0246, v_num=3]Epoch 3:  16%|█▌        | 400/2524 [02:44<14:35,  2.43it/s, loss=0.0246, v_num=3]Epoch 3:  16%|█▌        | 400/2524 [02:44<14:35,  2.43it/s, loss=0.0206, v_num=3]Epoch 3:  16%|█▌        | 410/2524 [02:49<14:31,  2.43it/s, loss=0.0206, v_num=3]Epoch 3:  16%|█▌        | 410/2524 [02:49<14:31,  2.43it/s, loss=0.0229, v_num=3]Epoch 3:  17%|█▋        | 420/2524 [02:53<14:27,  2.43it/s, loss=0.0229, v_num=3]Epoch 3:  17%|█▋        | 420/2524 [02:53<14:27,  2.43it/s, loss=0.0307, v_num=3]Epoch 3:  17%|█▋        | 430/2524 [02:57<14:23,  2.42it/s, loss=0.0307, v_num=3]Epoch 3:  17%|█▋        | 430/2524 [02:57<14:23,  2.42it/s, loss=0.0272, v_num=3]Epoch 3:  17%|█▋        | 440/2524 [03:01<14:19,  2.43it/s, loss=0.0272, v_num=3]Epoch 3:  17%|█▋        | 440/2524 [03:01<14:19,  2.43it/s, loss=0.0206, v_num=3]Epoch 3:  18%|█▊        | 450/2524 [03:05<14:15,  2.43it/s, loss=0.0206, v_num=3]Epoch 3:  18%|█▊        | 450/2524 [03:05<14:15,  2.43it/s, loss=0.0213, v_num=3]Epoch 3:  18%|█▊        | 460/2524 [03:09<14:10,  2.43it/s, loss=0.0213, v_num=3]Epoch 3:  18%|█▊        | 460/2524 [03:09<14:10,  2.43it/s, loss=0.022, v_num=3] Epoch 3:  19%|█▊        | 470/2524 [03:13<14:06,  2.43it/s, loss=0.022, v_num=3]Epoch 3:  19%|█▊        | 470/2524 [03:13<14:06,  2.43it/s, loss=0.0235, v_num=3]Epoch 3:  19%|█▉        | 480/2524 [03:17<14:02,  2.43it/s, loss=0.0235, v_num=3]Epoch 3:  19%|█▉        | 480/2524 [03:17<14:02,  2.43it/s, loss=0.0261, v_num=3]Epoch 3:  19%|█▉        | 490/2524 [03:21<13:58,  2.43it/s, loss=0.0261, v_num=3]Epoch 3:  19%|█▉        | 490/2524 [03:21<13:58,  2.43it/s, loss=0.0293, v_num=3]Epoch 3:  20%|█▉        | 500/2524 [03:26<13:54,  2.43it/s, loss=0.0293, v_num=3]Epoch 3:  20%|█▉        | 500/2524 [03:26<13:54,  2.43it/s, loss=0.0257, v_num=3]Epoch 3:  20%|██        | 510/2524 [03:30<13:49,  2.43it/s, loss=0.0257, v_num=3]Epoch 3:  20%|██        | 510/2524 [03:30<13:49,  2.43it/s, loss=0.0233, v_num=3]Epoch 3:  21%|██        | 520/2524 [03:34<13:45,  2.43it/s, loss=0.0233, v_num=3]Epoch 3:  21%|██        | 520/2524 [03:34<13:45,  2.43it/s, loss=0.0276, v_num=3]Epoch 3:  21%|██        | 530/2524 [03:38<13:41,  2.43it/s, loss=0.0276, v_num=3]Epoch 3:  21%|██        | 530/2524 [03:38<13:41,  2.43it/s, loss=0.032, v_num=3] Epoch 3:  21%|██▏       | 540/2524 [03:42<13:37,  2.43it/s, loss=0.032, v_num=3]Epoch 3:  21%|██▏       | 540/2524 [03:42<13:37,  2.43it/s, loss=0.0267, v_num=3]Epoch 3:  22%|██▏       | 550/2524 [03:46<13:33,  2.43it/s, loss=0.0267, v_num=3]Epoch 3:  22%|██▏       | 550/2524 [03:46<13:33,  2.43it/s, loss=0.0222, v_num=3]Epoch 3:  22%|██▏       | 560/2524 [03:50<13:29,  2.43it/s, loss=0.0222, v_num=3]Epoch 3:  22%|██▏       | 560/2524 [03:50<13:29,  2.43it/s, loss=0.0256, v_num=3]Epoch 3:  23%|██▎       | 570/2524 [03:54<13:25,  2.43it/s, loss=0.0256, v_num=3]Epoch 3:  23%|██▎       | 570/2524 [03:54<13:25,  2.43it/s, loss=0.0259, v_num=3]Epoch 3:  23%|██▎       | 580/2524 [03:58<13:21,  2.43it/s, loss=0.0259, v_num=3]Epoch 3:  23%|██▎       | 580/2524 [03:59<13:21,  2.43it/s, loss=0.0231, v_num=3]Epoch 3:  23%|██▎       | 590/2524 [04:03<13:16,  2.43it/s, loss=0.0231, v_num=3]Epoch 3:  23%|██▎       | 590/2524 [04:03<13:16,  2.43it/s, loss=0.0217, v_num=3]Epoch 3:  24%|██▍       | 600/2524 [04:07<13:12,  2.43it/s, loss=0.0217, v_num=3]Epoch 3:  24%|██▍       | 600/2524 [04:07<13:12,  2.43it/s, loss=0.0233, v_num=3]Epoch 3:  24%|██▍       | 610/2524 [04:11<13:08,  2.43it/s, loss=0.0233, v_num=3]Epoch 3:  24%|██▍       | 610/2524 [04:11<13:08,  2.43it/s, loss=0.0226, v_num=3]Epoch 3:  25%|██▍       | 620/2524 [04:15<13:04,  2.43it/s, loss=0.0226, v_num=3]Epoch 3:  25%|██▍       | 620/2524 [04:15<13:04,  2.43it/s, loss=0.0225, v_num=3]Epoch 3:  25%|██▍       | 630/2524 [04:19<13:00,  2.43it/s, loss=0.0225, v_num=3]Epoch 3:  25%|██▍       | 630/2524 [04:19<13:00,  2.43it/s, loss=0.0205, v_num=3]Epoch 3:  25%|██▌       | 640/2524 [04:23<12:56,  2.43it/s, loss=0.0205, v_num=3]Epoch 3:  25%|██▌       | 640/2524 [04:23<12:56,  2.43it/s, loss=0.0197, v_num=3]Epoch 3:  26%|██▌       | 650/2524 [04:27<12:52,  2.43it/s, loss=0.0197, v_num=3]Epoch 3:  26%|██▌       | 650/2524 [04:27<12:52,  2.43it/s, loss=0.0233, v_num=3]Epoch 3:  26%|██▌       | 660/2524 [04:31<12:47,  2.43it/s, loss=0.0233, v_num=3]Epoch 3:  26%|██▌       | 660/2524 [04:31<12:47,  2.43it/s, loss=0.0233, v_num=3]Epoch 3:  27%|██▋       | 670/2524 [04:35<12:43,  2.43it/s, loss=0.0233, v_num=3]Epoch 3:  27%|██▋       | 670/2524 [04:36<12:43,  2.43it/s, loss=0.0227, v_num=3]Epoch 3:  27%|██▋       | 680/2524 [04:40<12:39,  2.43it/s, loss=0.0227, v_num=3]Epoch 3:  27%|██▋       | 680/2524 [04:40<12:39,  2.43it/s, loss=0.0213, v_num=3]Epoch 3:  27%|██▋       | 690/2524 [04:44<12:35,  2.43it/s, loss=0.0213, v_num=3]Epoch 3:  27%|██▋       | 690/2524 [04:44<12:35,  2.43it/s, loss=0.0225, v_num=3]Epoch 3:  28%|██▊       | 700/2524 [04:48<12:31,  2.43it/s, loss=0.0225, v_num=3]Epoch 3:  28%|██▊       | 700/2524 [04:48<12:31,  2.43it/s, loss=0.0255, v_num=3]Epoch 3:  28%|██▊       | 710/2524 [04:52<12:27,  2.43it/s, loss=0.0255, v_num=3]Epoch 3:  28%|██▊       | 710/2524 [04:52<12:27,  2.43it/s, loss=0.0226, v_num=3]Epoch 3:  29%|██▊       | 720/2524 [04:56<12:22,  2.43it/s, loss=0.0226, v_num=3]Epoch 3:  29%|██▊       | 720/2524 [04:56<12:22,  2.43it/s, loss=0.0167, v_num=3]Epoch 3:  29%|██▉       | 730/2524 [05:00<12:19,  2.43it/s, loss=0.0167, v_num=3]Epoch 3:  29%|██▉       | 730/2524 [05:00<12:19,  2.43it/s, loss=0.0189, v_num=3]Epoch 3:  29%|██▉       | 740/2524 [05:04<12:14,  2.43it/s, loss=0.0189, v_num=3]Epoch 3:  29%|██▉       | 740/2524 [05:04<12:14,  2.43it/s, loss=0.025, v_num=3] Epoch 3:  30%|██▉       | 750/2524 [05:08<12:10,  2.43it/s, loss=0.025, v_num=3]Epoch 3:  30%|██▉       | 750/2524 [05:08<12:10,  2.43it/s, loss=0.0215, v_num=3]Epoch 3:  30%|███       | 760/2524 [05:13<12:06,  2.43it/s, loss=0.0215, v_num=3]Epoch 3:  30%|███       | 760/2524 [05:13<12:06,  2.43it/s, loss=0.0218, v_num=3]Epoch 3:  31%|███       | 770/2524 [05:17<12:02,  2.43it/s, loss=0.0218, v_num=3]Epoch 3:  31%|███       | 770/2524 [05:17<12:02,  2.43it/s, loss=0.0221, v_num=3]Epoch 3:  31%|███       | 780/2524 [05:21<11:58,  2.43it/s, loss=0.0221, v_num=3]Epoch 3:  31%|███       | 780/2524 [05:21<11:58,  2.43it/s, loss=0.0183, v_num=3]Epoch 3:  31%|███▏      | 790/2524 [05:25<11:54,  2.43it/s, loss=0.0183, v_num=3]Epoch 3:  31%|███▏      | 790/2524 [05:25<11:54,  2.43it/s, loss=0.0181, v_num=3]Epoch 3:  32%|███▏      | 800/2524 [05:29<11:49,  2.43it/s, loss=0.0181, v_num=3]Epoch 3:  32%|███▏      | 800/2524 [05:29<11:49,  2.43it/s, loss=0.0183, v_num=3]Epoch 3:  32%|███▏      | 810/2524 [05:33<11:45,  2.43it/s, loss=0.0183, v_num=3]Epoch 3:  32%|███▏      | 810/2524 [05:33<11:45,  2.43it/s, loss=0.0193, v_num=3]Epoch 3:  32%|███▏      | 820/2524 [05:37<11:41,  2.43it/s, loss=0.0193, v_num=3]Epoch 3:  32%|███▏      | 820/2524 [05:37<11:41,  2.43it/s, loss=0.023, v_num=3] Epoch 3:  33%|███▎      | 830/2524 [05:41<11:37,  2.43it/s, loss=0.023, v_num=3]Epoch 3:  33%|███▎      | 830/2524 [05:41<11:37,  2.43it/s, loss=0.0223, v_num=3]Epoch 3:  33%|███▎      | 840/2524 [05:45<11:33,  2.43it/s, loss=0.0223, v_num=3]Epoch 3:  33%|███▎      | 840/2524 [05:45<11:33,  2.43it/s, loss=0.0195, v_num=3]Epoch 3:  34%|███▎      | 850/2524 [05:50<11:29,  2.43it/s, loss=0.0195, v_num=3]Epoch 3:  34%|███▎      | 850/2524 [05:50<11:29,  2.43it/s, loss=0.0242, v_num=3]Epoch 3:  34%|███▍      | 860/2524 [05:54<11:25,  2.43it/s, loss=0.0242, v_num=3]Epoch 3:  34%|███▍      | 860/2524 [05:54<11:25,  2.43it/s, loss=0.023, v_num=3] Epoch 3:  34%|███▍      | 870/2524 [05:58<11:20,  2.43it/s, loss=0.023, v_num=3]Epoch 3:  34%|███▍      | 870/2524 [05:58<11:20,  2.43it/s, loss=0.0176, v_num=3]Epoch 3:  35%|███▍      | 880/2524 [06:02<11:16,  2.43it/s, loss=0.0176, v_num=3]Epoch 3:  35%|███▍      | 880/2524 [06:02<11:16,  2.43it/s, loss=0.0169, v_num=3]Epoch 3:  35%|███▌      | 890/2524 [06:06<11:12,  2.43it/s, loss=0.0169, v_num=3]Epoch 3:  35%|███▌      | 890/2524 [06:06<11:12,  2.43it/s, loss=0.0194, v_num=3]Epoch 3:  36%|███▌      | 900/2524 [06:10<11:08,  2.43it/s, loss=0.0194, v_num=3]Epoch 3:  36%|███▌      | 900/2524 [06:10<11:08,  2.43it/s, loss=0.0206, v_num=3]Epoch 3:  36%|███▌      | 910/2524 [06:14<11:04,  2.43it/s, loss=0.0206, v_num=3]Epoch 3:  36%|███▌      | 910/2524 [06:14<11:04,  2.43it/s, loss=0.0234, v_num=3]Epoch 3:  36%|███▋      | 920/2524 [06:18<11:00,  2.43it/s, loss=0.0234, v_num=3]Epoch 3:  36%|███▋      | 920/2524 [06:18<11:00,  2.43it/s, loss=0.0272, v_num=3]Epoch 3:  37%|███▋      | 930/2524 [06:22<10:56,  2.43it/s, loss=0.0272, v_num=3]Epoch 3:  37%|███▋      | 930/2524 [06:22<10:56,  2.43it/s, loss=0.024, v_num=3] Epoch 3:  37%|███▋      | 940/2524 [06:27<10:52,  2.43it/s, loss=0.024, v_num=3]Epoch 3:  37%|███▋      | 940/2524 [06:27<10:52,  2.43it/s, loss=0.0239, v_num=3]Epoch 3:  38%|███▊      | 950/2524 [06:31<10:47,  2.43it/s, loss=0.0239, v_num=3]Epoch 3:  38%|███▊      | 950/2524 [06:31<10:48,  2.43it/s, loss=0.0228, v_num=3]Epoch 3:  38%|███▊      | 960/2524 [06:35<10:43,  2.43it/s, loss=0.0228, v_num=3]Epoch 3:  38%|███▊      | 960/2524 [06:35<10:43,  2.43it/s, loss=0.0228, v_num=3]Epoch 3:  38%|███▊      | 970/2524 [06:39<10:39,  2.43it/s, loss=0.0228, v_num=3]Epoch 3:  38%|███▊      | 970/2524 [06:39<10:39,  2.43it/s, loss=0.0215, v_num=3]Epoch 3:  39%|███▉      | 980/2524 [06:43<10:35,  2.43it/s, loss=0.0215, v_num=3]Epoch 3:  39%|███▉      | 980/2524 [06:43<10:35,  2.43it/s, loss=0.0196, v_num=3]Epoch 3:  39%|███▉      | 990/2524 [06:47<10:31,  2.43it/s, loss=0.0196, v_num=3]Epoch 3:  39%|███▉      | 990/2524 [06:47<10:31,  2.43it/s, loss=0.0254, v_num=3]Epoch 3:  40%|███▉      | 1000/2524 [06:51<10:27,  2.43it/s, loss=0.0254, v_num=3]Epoch 3:  40%|███▉      | 1000/2524 [06:51<10:27,  2.43it/s, loss=0.0286, v_num=3]Epoch 3:  40%|████      | 1010/2524 [06:55<10:23,  2.43it/s, loss=0.0286, v_num=3]Epoch 3:  40%|████      | 1010/2524 [06:55<10:23,  2.43it/s, loss=0.0254, v_num=3]Epoch 3:  40%|████      | 1020/2524 [06:59<10:18,  2.43it/s, loss=0.0254, v_num=3]Epoch 3:  40%|████      | 1020/2524 [06:59<10:18,  2.43it/s, loss=0.0257, v_num=3]Epoch 3:  41%|████      | 1030/2524 [07:03<10:15,  2.43it/s, loss=0.0257, v_num=3]Epoch 3:  41%|████      | 1030/2524 [07:04<10:15,  2.43it/s, loss=0.026, v_num=3] Epoch 3:  41%|████      | 1040/2524 [07:08<10:10,  2.43it/s, loss=0.026, v_num=3]Epoch 3:  41%|████      | 1040/2524 [07:08<10:10,  2.43it/s, loss=0.0256, v_num=3]Epoch 3:  42%|████▏     | 1050/2524 [07:12<10:06,  2.43it/s, loss=0.0256, v_num=3]Epoch 3:  42%|████▏     | 1050/2524 [07:12<10:06,  2.43it/s, loss=0.0228, v_num=3]Epoch 3:  42%|████▏     | 1060/2524 [07:16<10:02,  2.43it/s, loss=0.0228, v_num=3]Epoch 3:  42%|████▏     | 1060/2524 [07:16<10:02,  2.43it/s, loss=0.0206, v_num=3]Epoch 3:  42%|████▏     | 1070/2524 [07:20<09:58,  2.43it/s, loss=0.0206, v_num=3]Epoch 3:  42%|████▏     | 1070/2524 [07:20<09:58,  2.43it/s, loss=0.0232, v_num=3]Epoch 3:  43%|████▎     | 1080/2524 [07:24<09:54,  2.43it/s, loss=0.0232, v_num=3]Epoch 3:  43%|████▎     | 1080/2524 [07:24<09:54,  2.43it/s, loss=0.0205, v_num=3]Epoch 3:  43%|████▎     | 1090/2524 [07:28<09:50,  2.43it/s, loss=0.0205, v_num=3]Epoch 3:  43%|████▎     | 1090/2524 [07:28<09:50,  2.43it/s, loss=0.0181, v_num=3]Epoch 3:  44%|████▎     | 1100/2524 [07:32<09:46,  2.43it/s, loss=0.0181, v_num=3]Epoch 3:  44%|████▎     | 1100/2524 [07:32<09:46,  2.43it/s, loss=0.0237, v_num=3]Epoch 3:  44%|████▍     | 1110/2524 [07:36<09:41,  2.43it/s, loss=0.0237, v_num=3]Epoch 3:  44%|████▍     | 1110/2524 [07:36<09:41,  2.43it/s, loss=0.0262, v_num=3]Epoch 3:  44%|████▍     | 1120/2524 [07:40<09:37,  2.43it/s, loss=0.0262, v_num=3]Epoch 3:  44%|████▍     | 1120/2524 [07:40<09:37,  2.43it/s, loss=0.024, v_num=3] Epoch 3:  45%|████▍     | 1130/2524 [07:45<09:33,  2.43it/s, loss=0.024, v_num=3]Epoch 3:  45%|████▍     | 1130/2524 [07:45<09:33,  2.43it/s, loss=0.0225, v_num=3]Epoch 3:  45%|████▌     | 1140/2524 [07:49<09:29,  2.43it/s, loss=0.0225, v_num=3]Epoch 3:  45%|████▌     | 1140/2524 [07:49<09:29,  2.43it/s, loss=0.0214, v_num=3]Epoch 3:  46%|████▌     | 1150/2524 [07:53<09:25,  2.43it/s, loss=0.0214, v_num=3]Epoch 3:  46%|████▌     | 1150/2524 [07:53<09:25,  2.43it/s, loss=0.024, v_num=3] Epoch 3:  46%|████▌     | 1160/2524 [07:57<09:21,  2.43it/s, loss=0.024, v_num=3]Epoch 3:  46%|████▌     | 1160/2524 [07:57<09:21,  2.43it/s, loss=0.0272, v_num=3]Epoch 3:  46%|████▋     | 1170/2524 [08:01<09:17,  2.43it/s, loss=0.0272, v_num=3]Epoch 3:  46%|████▋     | 1170/2524 [08:01<09:17,  2.43it/s, loss=0.0298, v_num=3]Epoch 3:  47%|████▋     | 1180/2524 [08:05<09:13,  2.43it/s, loss=0.0298, v_num=3]Epoch 3:  47%|████▋     | 1180/2524 [08:05<09:13,  2.43it/s, loss=0.0276, v_num=3]Epoch 3:  47%|████▋     | 1190/2524 [08:09<09:08,  2.43it/s, loss=0.0276, v_num=3]Epoch 3:  47%|████▋     | 1190/2524 [08:09<09:08,  2.43it/s, loss=0.0248, v_num=3]Epoch 3:  48%|████▊     | 1200/2524 [08:13<09:04,  2.43it/s, loss=0.0248, v_num=3]Epoch 3:  48%|████▊     | 1200/2524 [08:13<09:04,  2.43it/s, loss=0.0241, v_num=3]Epoch 3:  48%|████▊     | 1210/2524 [08:17<09:00,  2.43it/s, loss=0.0241, v_num=3]Epoch 3:  48%|████▊     | 1210/2524 [08:17<09:00,  2.43it/s, loss=0.0222, v_num=3]Epoch 3:  48%|████▊     | 1220/2524 [08:21<08:56,  2.43it/s, loss=0.0222, v_num=3]Epoch 3:  48%|████▊     | 1220/2524 [08:21<08:56,  2.43it/s, loss=0.021, v_num=3] Epoch 3:  49%|████▊     | 1230/2524 [08:26<08:52,  2.43it/s, loss=0.021, v_num=3]Epoch 3:  49%|████▊     | 1230/2524 [08:26<08:52,  2.43it/s, loss=0.0231, v_num=3]Epoch 3:  49%|████▉     | 1240/2524 [08:30<08:48,  2.43it/s, loss=0.0231, v_num=3]Epoch 3:  49%|████▉     | 1240/2524 [08:30<08:48,  2.43it/s, loss=0.0252, v_num=3]Epoch 3:  50%|████▉     | 1250/2524 [08:34<08:44,  2.43it/s, loss=0.0252, v_num=3]Epoch 3:  50%|████▉     | 1250/2524 [08:34<08:44,  2.43it/s, loss=0.0234, v_num=3]Epoch 3:  50%|████▉     | 1260/2524 [08:38<08:40,  2.43it/s, loss=0.0234, v_num=3]Epoch 3:  50%|████▉     | 1260/2524 [08:38<08:40,  2.43it/s, loss=0.0226, v_num=3]Epoch 3:  50%|█████     | 1270/2524 [08:42<08:35,  2.43it/s, loss=0.0226, v_num=3]Epoch 3:  50%|█████     | 1270/2524 [08:42<08:35,  2.43it/s, loss=0.0228, v_num=3]Epoch 3:  51%|█████     | 1280/2524 [08:46<08:31,  2.43it/s, loss=0.0228, v_num=3]Epoch 3:  51%|█████     | 1280/2524 [08:46<08:31,  2.43it/s, loss=0.0215, v_num=3]Epoch 3:  51%|█████     | 1290/2524 [08:50<08:27,  2.43it/s, loss=0.0215, v_num=3]Epoch 3:  51%|█████     | 1290/2524 [08:50<08:27,  2.43it/s, loss=0.0212, v_num=3]Epoch 3:  52%|█████▏    | 1300/2524 [08:54<08:23,  2.43it/s, loss=0.0212, v_num=3]Epoch 3:  52%|█████▏    | 1300/2524 [08:54<08:23,  2.43it/s, loss=0.0216, v_num=3]Epoch 3:  52%|█████▏    | 1310/2524 [08:58<08:19,  2.43it/s, loss=0.0216, v_num=3]Epoch 3:  52%|█████▏    | 1310/2524 [08:58<08:19,  2.43it/s, loss=0.0196, v_num=3]Epoch 3:  52%|█████▏    | 1320/2524 [09:03<08:15,  2.43it/s, loss=0.0196, v_num=3]Epoch 3:  52%|█████▏    | 1320/2524 [09:03<08:15,  2.43it/s, loss=0.0215, v_num=3]Epoch 3:  53%|█████▎    | 1330/2524 [09:07<08:11,  2.43it/s, loss=0.0215, v_num=3]Epoch 3:  53%|█████▎    | 1330/2524 [09:07<08:11,  2.43it/s, loss=0.022, v_num=3] Epoch 3:  53%|█████▎    | 1340/2524 [09:11<08:07,  2.43it/s, loss=0.022, v_num=3]Epoch 3:  53%|█████▎    | 1340/2524 [09:11<08:07,  2.43it/s, loss=0.0204, v_num=3]Epoch 3:  53%|█████▎    | 1350/2524 [09:15<08:03,  2.43it/s, loss=0.0204, v_num=3]Epoch 3:  53%|█████▎    | 1350/2524 [09:15<08:03,  2.43it/s, loss=0.0203, v_num=3]Epoch 3:  54%|█████▍    | 1360/2524 [09:19<07:58,  2.43it/s, loss=0.0203, v_num=3]Epoch 3:  54%|█████▍    | 1360/2524 [09:19<07:58,  2.43it/s, loss=0.0195, v_num=3]Epoch 3:  54%|█████▍    | 1370/2524 [09:23<07:54,  2.43it/s, loss=0.0195, v_num=3]Epoch 3:  54%|█████▍    | 1370/2524 [09:23<07:54,  2.43it/s, loss=0.024, v_num=3] Epoch 3:  55%|█████▍    | 1380/2524 [09:27<07:50,  2.43it/s, loss=0.024, v_num=3]Epoch 3:  55%|█████▍    | 1380/2524 [09:27<07:50,  2.43it/s, loss=0.0219, v_num=3]Epoch 3:  55%|█████▌    | 1390/2524 [09:31<07:46,  2.43it/s, loss=0.0219, v_num=3]Epoch 3:  55%|█████▌    | 1390/2524 [09:31<07:46,  2.43it/s, loss=0.0201, v_num=3]Epoch 3:  55%|█████▌    | 1400/2524 [09:35<07:42,  2.43it/s, loss=0.0201, v_num=3]Epoch 3:  55%|█████▌    | 1400/2524 [09:35<07:42,  2.43it/s, loss=0.0224, v_num=3]Epoch 3:  56%|█████▌    | 1410/2524 [09:40<07:38,  2.43it/s, loss=0.0224, v_num=3]Epoch 3:  56%|█████▌    | 1410/2524 [09:40<07:38,  2.43it/s, loss=0.0199, v_num=3]Epoch 3:  56%|█████▋    | 1420/2524 [09:44<07:34,  2.43it/s, loss=0.0199, v_num=3]Epoch 3:  56%|█████▋    | 1420/2524 [09:44<07:34,  2.43it/s, loss=0.0218, v_num=3]Epoch 3:  57%|█████▋    | 1430/2524 [09:48<07:30,  2.43it/s, loss=0.0218, v_num=3]Epoch 3:  57%|█████▋    | 1430/2524 [09:48<07:30,  2.43it/s, loss=0.0244, v_num=3]Epoch 3:  57%|█████▋    | 1440/2524 [09:52<07:25,  2.43it/s, loss=0.0244, v_num=3]Epoch 3:  57%|█████▋    | 1440/2524 [09:52<07:25,  2.43it/s, loss=0.0234, v_num=3]Epoch 3:  57%|█████▋    | 1450/2524 [09:56<07:21,  2.43it/s, loss=0.0234, v_num=3]Epoch 3:  57%|█████▋    | 1450/2524 [09:56<07:21,  2.43it/s, loss=0.0215, v_num=3]Epoch 3:  58%|█████▊    | 1460/2524 [10:00<07:17,  2.43it/s, loss=0.0215, v_num=3]Epoch 3:  58%|█████▊    | 1460/2524 [10:00<07:17,  2.43it/s, loss=0.0218, v_num=3]Epoch 3:  58%|█████▊    | 1470/2524 [10:04<07:13,  2.43it/s, loss=0.0218, v_num=3]Epoch 3:  58%|█████▊    | 1470/2524 [10:04<07:13,  2.43it/s, loss=0.0205, v_num=3]Epoch 3:  59%|█████▊    | 1480/2524 [10:08<07:09,  2.43it/s, loss=0.0205, v_num=3]Epoch 3:  59%|█████▊    | 1480/2524 [10:08<07:09,  2.43it/s, loss=0.0197, v_num=3]Epoch 3:  59%|█████▉    | 1490/2524 [10:12<07:05,  2.43it/s, loss=0.0197, v_num=3]Epoch 3:  59%|█████▉    | 1490/2524 [10:12<07:05,  2.43it/s, loss=0.0196, v_num=3]Epoch 3:  59%|█████▉    | 1500/2524 [10:17<07:01,  2.43it/s, loss=0.0196, v_num=3]Epoch 3:  59%|█████▉    | 1500/2524 [10:17<07:01,  2.43it/s, loss=0.0175, v_num=3]Epoch 3:  60%|█████▉    | 1510/2524 [10:21<06:57,  2.43it/s, loss=0.0175, v_num=3]Epoch 3:  60%|█████▉    | 1510/2524 [10:21<06:57,  2.43it/s, loss=0.0181, v_num=3]Epoch 3:  60%|██████    | 1520/2524 [10:25<06:52,  2.43it/s, loss=0.0181, v_num=3]Epoch 3:  60%|██████    | 1520/2524 [10:25<06:52,  2.43it/s, loss=0.0192, v_num=3]Epoch 3:  61%|██████    | 1530/2524 [10:29<06:48,  2.43it/s, loss=0.0192, v_num=3]Epoch 3:  61%|██████    | 1530/2524 [10:29<06:48,  2.43it/s, loss=0.0211, v_num=3]Epoch 3:  61%|██████    | 1540/2524 [10:33<06:44,  2.43it/s, loss=0.0211, v_num=3]Epoch 3:  61%|██████    | 1540/2524 [10:33<06:44,  2.43it/s, loss=0.0211, v_num=3]Epoch 3:  61%|██████▏   | 1550/2524 [10:37<06:40,  2.43it/s, loss=0.0211, v_num=3]Epoch 3:  61%|██████▏   | 1550/2524 [10:37<06:40,  2.43it/s, loss=0.0191, v_num=3]Epoch 3:  62%|██████▏   | 1560/2524 [10:41<06:36,  2.43it/s, loss=0.0191, v_num=3]Epoch 3:  62%|██████▏   | 1560/2524 [10:41<06:36,  2.43it/s, loss=0.0208, v_num=3]Epoch 3:  62%|██████▏   | 1570/2524 [10:45<06:32,  2.43it/s, loss=0.0208, v_num=3]Epoch 3:  62%|██████▏   | 1570/2524 [10:45<06:32,  2.43it/s, loss=0.0208, v_num=3]Epoch 3:  63%|██████▎   | 1580/2524 [10:49<06:28,  2.43it/s, loss=0.0208, v_num=3]Epoch 3:  63%|██████▎   | 1580/2524 [10:49<06:28,  2.43it/s, loss=0.0202, v_num=3]Epoch 3:  63%|██████▎   | 1590/2524 [10:54<06:24,  2.43it/s, loss=0.0202, v_num=3]Epoch 3:  63%|██████▎   | 1590/2524 [10:54<06:24,  2.43it/s, loss=0.0211, v_num=3]Epoch 3:  63%|██████▎   | 1600/2524 [10:58<06:20,  2.43it/s, loss=0.0211, v_num=3]Epoch 3:  63%|██████▎   | 1600/2524 [10:58<06:20,  2.43it/s, loss=0.0202, v_num=3]Epoch 3:  64%|██████▍   | 1610/2524 [11:02<06:15,  2.43it/s, loss=0.0202, v_num=3]Epoch 3:  64%|██████▍   | 1610/2524 [11:02<06:15,  2.43it/s, loss=0.0189, v_num=3]Epoch 3:  64%|██████▍   | 1620/2524 [11:06<06:11,  2.43it/s, loss=0.0189, v_num=3]Epoch 3:  64%|██████▍   | 1620/2524 [11:06<06:11,  2.43it/s, loss=0.0181, v_num=3]Epoch 3:  65%|██████▍   | 1630/2524 [11:10<06:07,  2.43it/s, loss=0.0181, v_num=3]Epoch 3:  65%|██████▍   | 1630/2524 [11:10<06:07,  2.43it/s, loss=0.0166, v_num=3]Epoch 3:  65%|██████▍   | 1640/2524 [11:14<06:03,  2.43it/s, loss=0.0166, v_num=3]Epoch 3:  65%|██████▍   | 1640/2524 [11:14<06:03,  2.43it/s, loss=0.0178, v_num=3]Epoch 3:  65%|██████▌   | 1650/2524 [11:18<05:59,  2.43it/s, loss=0.0178, v_num=3]Epoch 3:  65%|██████▌   | 1650/2524 [11:18<05:59,  2.43it/s, loss=0.0182, v_num=3]Epoch 3:  66%|██████▌   | 1660/2524 [11:22<05:55,  2.43it/s, loss=0.0182, v_num=3]Epoch 3:  66%|██████▌   | 1660/2524 [11:22<05:55,  2.43it/s, loss=0.0206, v_num=3]Epoch 3:  66%|██████▌   | 1670/2524 [11:26<05:51,  2.43it/s, loss=0.0206, v_num=3]Epoch 3:  66%|██████▌   | 1670/2524 [11:26<05:51,  2.43it/s, loss=0.023, v_num=3] Epoch 3:  67%|██████▋   | 1680/2524 [11:31<05:47,  2.43it/s, loss=0.023, v_num=3]Epoch 3:  67%|██████▋   | 1680/2524 [11:31<05:47,  2.43it/s, loss=0.0224, v_num=3]Epoch 3:  67%|██████▋   | 1690/2524 [11:35<05:43,  2.43it/s, loss=0.0224, v_num=3]Epoch 3:  67%|██████▋   | 1690/2524 [11:35<05:43,  2.43it/s, loss=0.0226, v_num=3]Epoch 3:  67%|██████▋   | 1700/2524 [11:39<05:38,  2.43it/s, loss=0.0226, v_num=3]Epoch 3:  67%|██████▋   | 1700/2524 [11:39<05:38,  2.43it/s, loss=0.0196, v_num=3]Epoch 3:  68%|██████▊   | 1710/2524 [11:43<05:34,  2.43it/s, loss=0.0196, v_num=3]Epoch 3:  68%|██████▊   | 1710/2524 [11:43<05:34,  2.43it/s, loss=0.0171, v_num=3]Epoch 3:  68%|██████▊   | 1720/2524 [11:47<05:30,  2.43it/s, loss=0.0171, v_num=3]Epoch 3:  68%|██████▊   | 1720/2524 [11:47<05:30,  2.43it/s, loss=0.0184, v_num=3]Epoch 3:  69%|██████▊   | 1730/2524 [11:51<05:26,  2.43it/s, loss=0.0184, v_num=3]Epoch 3:  69%|██████▊   | 1730/2524 [11:51<05:26,  2.43it/s, loss=0.0212, v_num=3]Epoch 3:  69%|██████▉   | 1740/2524 [11:55<05:22,  2.43it/s, loss=0.0212, v_num=3]Epoch 3:  69%|██████▉   | 1740/2524 [11:55<05:22,  2.43it/s, loss=0.0227, v_num=3]Epoch 3:  69%|██████▉   | 1750/2524 [11:59<05:18,  2.43it/s, loss=0.0227, v_num=3]Epoch 3:  69%|██████▉   | 1750/2524 [11:59<05:18,  2.43it/s, loss=0.0219, v_num=3]Epoch 3:  70%|██████▉   | 1760/2524 [12:03<05:14,  2.43it/s, loss=0.0219, v_num=3]Epoch 3:  70%|██████▉   | 1760/2524 [12:03<05:14,  2.43it/s, loss=0.0196, v_num=3]Epoch 3:  70%|███████   | 1770/2524 [12:07<05:10,  2.43it/s, loss=0.0196, v_num=3]Epoch 3:  70%|███████   | 1770/2524 [12:07<05:10,  2.43it/s, loss=0.0212, v_num=3]Epoch 3:  71%|███████   | 1780/2524 [12:12<05:06,  2.43it/s, loss=0.0212, v_num=3]Epoch 3:  71%|███████   | 1780/2524 [12:12<05:06,  2.43it/s, loss=0.0224, v_num=3]Epoch 3:  71%|███████   | 1790/2524 [12:16<05:01,  2.43it/s, loss=0.0224, v_num=3]Epoch 3:  71%|███████   | 1790/2524 [12:16<05:01,  2.43it/s, loss=0.017, v_num=3] Epoch 3:  71%|███████▏  | 1800/2524 [12:20<04:57,  2.43it/s, loss=0.017, v_num=3]Epoch 3:  71%|███████▏  | 1800/2524 [12:20<04:57,  2.43it/s, loss=0.0157, v_num=3]Epoch 3:  72%|███████▏  | 1810/2524 [12:24<04:53,  2.43it/s, loss=0.0157, v_num=3]Epoch 3:  72%|███████▏  | 1810/2524 [12:24<04:53,  2.43it/s, loss=0.0242, v_num=3]Epoch 3:  72%|███████▏  | 1820/2524 [12:28<04:49,  2.43it/s, loss=0.0242, v_num=3]Epoch 3:  72%|███████▏  | 1820/2524 [12:28<04:49,  2.43it/s, loss=0.0249, v_num=3]Epoch 3:  73%|███████▎  | 1830/2524 [12:32<04:45,  2.43it/s, loss=0.0249, v_num=3]Epoch 3:  73%|███████▎  | 1830/2524 [12:32<04:45,  2.43it/s, loss=0.0178, v_num=3]Epoch 3:  73%|███████▎  | 1840/2524 [12:36<04:41,  2.43it/s, loss=0.0178, v_num=3]Epoch 3:  73%|███████▎  | 1840/2524 [12:36<04:41,  2.43it/s, loss=0.0205, v_num=3]Epoch 3:  73%|███████▎  | 1850/2524 [12:40<04:37,  2.43it/s, loss=0.0205, v_num=3]Epoch 3:  73%|███████▎  | 1850/2524 [12:40<04:37,  2.43it/s, loss=0.0217, v_num=3]Epoch 3:  74%|███████▎  | 1860/2524 [12:44<04:33,  2.43it/s, loss=0.0217, v_num=3]Epoch 3:  74%|███████▎  | 1860/2524 [12:44<04:33,  2.43it/s, loss=0.0203, v_num=3]Epoch 3:  74%|███████▍  | 1870/2524 [12:49<04:28,  2.43it/s, loss=0.0203, v_num=3]Epoch 3:  74%|███████▍  | 1870/2524 [12:49<04:28,  2.43it/s, loss=0.0206, v_num=3]Epoch 3:  74%|███████▍  | 1880/2524 [12:53<04:24,  2.43it/s, loss=0.0206, v_num=3]Epoch 3:  74%|███████▍  | 1880/2524 [12:53<04:24,  2.43it/s, loss=0.0243, v_num=3]Epoch 3:  75%|███████▍  | 1890/2524 [12:57<04:20,  2.43it/s, loss=0.0243, v_num=3]Epoch 3:  75%|███████▍  | 1890/2524 [12:57<04:20,  2.43it/s, loss=0.0228, v_num=3]Epoch 3:  75%|███████▌  | 1900/2524 [13:01<04:16,  2.43it/s, loss=0.0228, v_num=3]Epoch 3:  75%|███████▌  | 1900/2524 [13:01<04:16,  2.43it/s, loss=0.0181, v_num=3]Epoch 3:  76%|███████▌  | 1910/2524 [13:05<04:12,  2.43it/s, loss=0.0181, v_num=3]Epoch 3:  76%|███████▌  | 1910/2524 [13:05<04:12,  2.43it/s, loss=0.0204, v_num=3]Epoch 3:  76%|███████▌  | 1920/2524 [13:09<04:08,  2.43it/s, loss=0.0204, v_num=3]Epoch 3:  76%|███████▌  | 1920/2524 [13:09<04:08,  2.43it/s, loss=0.0197, v_num=3]Epoch 3:  76%|███████▋  | 1930/2524 [13:13<04:04,  2.43it/s, loss=0.0197, v_num=3]Epoch 3:  76%|███████▋  | 1930/2524 [13:13<04:04,  2.43it/s, loss=0.0233, v_num=3]Epoch 3:  77%|███████▋  | 1940/2524 [13:17<04:00,  2.43it/s, loss=0.0233, v_num=3]Epoch 3:  77%|███████▋  | 1940/2524 [13:17<04:00,  2.43it/s, loss=0.0224, v_num=3]Epoch 3:  77%|███████▋  | 1950/2524 [13:21<03:56,  2.43it/s, loss=0.0224, v_num=3]Epoch 3:  77%|███████▋  | 1950/2524 [13:21<03:56,  2.43it/s, loss=0.0183, v_num=3]Epoch 3:  78%|███████▊  | 1960/2524 [13:26<03:51,  2.43it/s, loss=0.0183, v_num=3]Epoch 3:  78%|███████▊  | 1960/2524 [13:26<03:51,  2.43it/s, loss=0.02, v_num=3]  Epoch 3:  78%|███████▊  | 1970/2524 [13:30<03:47,  2.43it/s, loss=0.02, v_num=3]Epoch 3:  78%|███████▊  | 1970/2524 [13:30<03:47,  2.43it/s, loss=0.0232, v_num=3]Epoch 3:  78%|███████▊  | 1980/2524 [13:34<03:43,  2.43it/s, loss=0.0232, v_num=3]Epoch 3:  78%|███████▊  | 1980/2524 [13:34<03:43,  2.43it/s, loss=0.021, v_num=3] Epoch 3:  79%|███████▉  | 1990/2524 [13:38<03:39,  2.43it/s, loss=0.021, v_num=3]Epoch 3:  79%|███████▉  | 1990/2524 [13:38<03:39,  2.43it/s, loss=0.0195, v_num=3]Epoch 3:  79%|███████▉  | 2000/2524 [13:42<03:35,  2.43it/s, loss=0.0195, v_num=3]Epoch 3:  79%|███████▉  | 2000/2524 [13:42<03:35,  2.43it/s, loss=0.0178, v_num=3]Epoch 3:  80%|███████▉  | 2010/2524 [13:46<03:31,  2.43it/s, loss=0.0178, v_num=3]Epoch 3:  80%|███████▉  | 2010/2524 [13:46<03:31,  2.43it/s, loss=0.018, v_num=3] Epoch 3:  80%|████████  | 2020/2524 [13:50<03:27,  2.43it/s, loss=0.018, v_num=3]Epoch 3:  80%|████████  | 2020/2524 [13:50<03:27,  2.43it/s, loss=0.0232, v_num=3]Epoch 3:  80%|████████  | 2030/2524 [13:54<03:23,  2.43it/s, loss=0.0232, v_num=3]Epoch 3:  80%|████████  | 2030/2524 [13:54<03:23,  2.43it/s, loss=0.0238, v_num=3]Epoch 3:  81%|████████  | 2040/2524 [13:58<03:19,  2.43it/s, loss=0.0238, v_num=3]Epoch 3:  81%|████████  | 2040/2524 [13:58<03:19,  2.43it/s, loss=0.0216, v_num=3]Epoch 3:  81%|████████  | 2050/2524 [14:03<03:14,  2.43it/s, loss=0.0216, v_num=3]Epoch 3:  81%|████████  | 2050/2524 [14:03<03:14,  2.43it/s, loss=0.019, v_num=3] Epoch 3:  82%|████████▏ | 2060/2524 [14:07<03:10,  2.43it/s, loss=0.019, v_num=3]Epoch 3:  82%|████████▏ | 2060/2524 [14:07<03:10,  2.43it/s, loss=0.0224, v_num=3]Epoch 3:  82%|████████▏ | 2070/2524 [14:11<03:06,  2.43it/s, loss=0.0224, v_num=3]Epoch 3:  82%|████████▏ | 2070/2524 [14:11<03:06,  2.43it/s, loss=0.0266, v_num=3]Epoch 3:  82%|████████▏ | 2080/2524 [14:15<03:02,  2.43it/s, loss=0.0266, v_num=3]Epoch 3:  82%|████████▏ | 2080/2524 [14:15<03:02,  2.43it/s, loss=0.026, v_num=3] Epoch 3:  83%|████████▎ | 2090/2524 [14:19<02:58,  2.43it/s, loss=0.026, v_num=3]Epoch 3:  83%|████████▎ | 2090/2524 [14:19<02:58,  2.43it/s, loss=0.025, v_num=3]Epoch 3:  83%|████████▎ | 2100/2524 [14:23<02:54,  2.43it/s, loss=0.025, v_num=3]Epoch 3:  83%|████████▎ | 2100/2524 [14:23<02:54,  2.43it/s, loss=0.0216, v_num=3]Epoch 3:  84%|████████▎ | 2110/2524 [14:27<02:50,  2.43it/s, loss=0.0216, v_num=3]Epoch 3:  84%|████████▎ | 2110/2524 [14:27<02:50,  2.43it/s, loss=0.0182, v_num=3]Epoch 3:  84%|████████▍ | 2120/2524 [14:31<02:46,  2.43it/s, loss=0.0182, v_num=3]Epoch 3:  84%|████████▍ | 2120/2524 [14:31<02:46,  2.43it/s, loss=0.018, v_num=3] Epoch 3:  84%|████████▍ | 2130/2524 [14:35<02:42,  2.43it/s, loss=0.018, v_num=3]Epoch 3:  84%|████████▍ | 2130/2524 [14:35<02:42,  2.43it/s, loss=0.0176, v_num=3]Epoch 3:  85%|████████▍ | 2140/2524 [14:40<02:37,  2.43it/s, loss=0.0176, v_num=3]Epoch 3:  85%|████████▍ | 2140/2524 [14:40<02:37,  2.43it/s, loss=0.0217, v_num=3]Epoch 3:  85%|████████▌ | 2150/2524 [14:44<02:33,  2.43it/s, loss=0.0217, v_num=3]Epoch 3:  85%|████████▌ | 2150/2524 [14:44<02:33,  2.43it/s, loss=0.023, v_num=3] Epoch 3:  86%|████████▌ | 2160/2524 [14:48<02:29,  2.43it/s, loss=0.023, v_num=3]Epoch 3:  86%|████████▌ | 2160/2524 [14:48<02:29,  2.43it/s, loss=0.0198, v_num=3]Epoch 3:  86%|████████▌ | 2170/2524 [14:52<02:25,  2.43it/s, loss=0.0198, v_num=3]Epoch 3:  86%|████████▌ | 2170/2524 [14:52<02:25,  2.43it/s, loss=0.0203, v_num=3]Epoch 3:  86%|████████▋ | 2180/2524 [14:56<02:21,  2.43it/s, loss=0.0203, v_num=3]Epoch 3:  86%|████████▋ | 2180/2524 [14:56<02:21,  2.43it/s, loss=0.0197, v_num=3]Epoch 3:  87%|████████▋ | 2190/2524 [15:00<02:17,  2.43it/s, loss=0.0197, v_num=3]Epoch 3:  87%|████████▋ | 2190/2524 [15:00<02:17,  2.43it/s, loss=0.0193, v_num=3]Epoch 3:  87%|████████▋ | 2200/2524 [15:04<02:13,  2.43it/s, loss=0.0193, v_num=3]Epoch 3:  87%|████████▋ | 2200/2524 [15:04<02:13,  2.43it/s, loss=0.018, v_num=3] Epoch 3:  88%|████████▊ | 2210/2524 [15:08<02:09,  2.43it/s, loss=0.018, v_num=3]Epoch 3:  88%|████████▊ | 2210/2524 [15:08<02:09,  2.43it/s, loss=0.0162, v_num=3]Epoch 3:  88%|████████▊ | 2220/2524 [15:12<02:04,  2.43it/s, loss=0.0162, v_num=3]Epoch 3:  88%|████████▊ | 2220/2524 [15:12<02:04,  2.43it/s, loss=0.0174, v_num=3]Epoch 3:  88%|████████▊ | 2230/2524 [15:16<02:00,  2.43it/s, loss=0.0174, v_num=3]Epoch 3:  88%|████████▊ | 2230/2524 [15:17<02:00,  2.43it/s, loss=0.021, v_num=3] Epoch 3:  89%|████████▊ | 2240/2524 [15:21<01:56,  2.43it/s, loss=0.021, v_num=3]Epoch 3:  89%|████████▊ | 2240/2524 [15:21<01:56,  2.43it/s, loss=0.0245, v_num=3]Epoch 3:  89%|████████▉ | 2250/2524 [15:25<01:52,  2.43it/s, loss=0.0245, v_num=3]Epoch 3:  89%|████████▉ | 2250/2524 [15:25<01:52,  2.43it/s, loss=0.0248, v_num=3]Epoch 3:  90%|████████▉ | 2260/2524 [15:29<01:48,  2.43it/s, loss=0.0248, v_num=3]Epoch 3:  90%|████████▉ | 2260/2524 [15:29<01:48,  2.43it/s, loss=0.0199, v_num=3]Epoch 3:  90%|████████▉ | 2270/2524 [15:33<01:44,  2.43it/s, loss=0.0199, v_num=3]Epoch 3:  90%|████████▉ | 2270/2524 [15:33<01:44,  2.43it/s, loss=0.0142, v_num=3]Epoch 3:  90%|█████████ | 2280/2524 [15:37<01:40,  2.43it/s, loss=0.0142, v_num=3]Epoch 3:  90%|█████████ | 2280/2524 [15:37<01:40,  2.43it/s, loss=0.0168, v_num=3]Epoch 3:  91%|█████████ | 2290/2524 [15:41<01:36,  2.43it/s, loss=0.0168, v_num=3]Epoch 3:  91%|█████████ | 2290/2524 [15:41<01:36,  2.43it/s, loss=0.0186, v_num=3]Epoch 3:  91%|█████████ | 2300/2524 [15:45<01:32,  2.43it/s, loss=0.0186, v_num=3]Epoch 3:  91%|█████████ | 2300/2524 [15:45<01:32,  2.43it/s, loss=0.0179, v_num=3]Epoch 3:  92%|█████████▏| 2310/2524 [15:49<01:27,  2.43it/s, loss=0.0179, v_num=3]Epoch 3:  92%|█████████▏| 2310/2524 [15:49<01:27,  2.43it/s, loss=0.0166, v_num=3]Epoch 3:  92%|█████████▏| 2320/2524 [15:53<01:23,  2.43it/s, loss=0.0166, v_num=3]Epoch 3:  92%|█████████▏| 2320/2524 [15:53<01:23,  2.43it/s, loss=0.017, v_num=3] Epoch 3:  92%|█████████▏| 2330/2524 [15:58<01:19,  2.43it/s, loss=0.017, v_num=3]Epoch 3:  92%|█████████▏| 2330/2524 [15:58<01:19,  2.43it/s, loss=0.0204, v_num=3]Epoch 3:  93%|█████████▎| 2340/2524 [16:02<01:15,  2.43it/s, loss=0.0204, v_num=3]Epoch 3:  93%|█████████▎| 2340/2524 [16:02<01:15,  2.43it/s, loss=0.0196, v_num=3]Epoch 3:  93%|█████████▎| 2350/2524 [16:06<01:11,  2.43it/s, loss=0.0196, v_num=3]Epoch 3:  93%|█████████▎| 2350/2524 [16:06<01:11,  2.43it/s, loss=0.016, v_num=3] Epoch 3:  94%|█████████▎| 2360/2524 [16:10<01:07,  2.43it/s, loss=0.016, v_num=3]Epoch 3:  94%|█████████▎| 2360/2524 [16:10<01:07,  2.43it/s, loss=0.0154, v_num=3]Epoch 3:  94%|█████████▍| 2370/2524 [16:14<01:03,  2.43it/s, loss=0.0154, v_num=3]Epoch 3:  94%|█████████▍| 2370/2524 [16:14<01:03,  2.43it/s, loss=0.0176, v_num=3]Epoch 3:  94%|█████████▍| 2380/2524 [16:18<00:59,  2.43it/s, loss=0.0176, v_num=3]Epoch 3:  94%|█████████▍| 2380/2524 [16:18<00:59,  2.43it/s, loss=0.0197, v_num=3]Epoch 3:  95%|█████████▍| 2390/2524 [16:22<00:55,  2.43it/s, loss=0.0197, v_num=3]Epoch 3:  95%|█████████▍| 2390/2524 [16:22<00:55,  2.43it/s, loss=0.0198, v_num=3]Epoch 3:  95%|█████████▌| 2400/2524 [16:26<00:50,  2.43it/s, loss=0.0198, v_num=3]Epoch 3:  95%|█████████▌| 2400/2524 [16:26<00:50,  2.43it/s, loss=0.0184, v_num=3]Epoch 3:  95%|█████████▌| 2410/2524 [16:30<00:46,  2.43it/s, loss=0.0184, v_num=3]Epoch 3:  95%|█████████▌| 2410/2524 [16:30<00:46,  2.43it/s, loss=0.016, v_num=3] Epoch 3:  96%|█████████▌| 2420/2524 [16:34<00:42,  2.43it/s, loss=0.016, v_num=3]Epoch 3:  96%|█████████▌| 2420/2524 [16:34<00:42,  2.43it/s, loss=0.0157, v_num=3]Epoch 3:  96%|█████████▋| 2430/2524 [16:39<00:38,  2.43it/s, loss=0.0157, v_num=3]Epoch 3:  96%|█████████▋| 2430/2524 [16:39<00:38,  2.43it/s, loss=0.0156, v_num=3]Epoch 3:  97%|█████████▋| 2440/2524 [16:43<00:34,  2.43it/s, loss=0.0156, v_num=3]Epoch 3:  97%|█████████▋| 2440/2524 [16:43<00:34,  2.43it/s, loss=0.015, v_num=3] Epoch 3:  97%|█████████▋| 2450/2524 [16:47<00:30,  2.43it/s, loss=0.015, v_num=3]Epoch 3:  97%|█████████▋| 2450/2524 [16:47<00:30,  2.43it/s, loss=0.0168, v_num=3]Epoch 3:  97%|█████████▋| 2460/2524 [16:51<00:26,  2.43it/s, loss=0.0168, v_num=3]Epoch 3:  97%|█████████▋| 2460/2524 [16:51<00:26,  2.43it/s, loss=0.016, v_num=3] Epoch 3:  98%|█████████▊| 2470/2524 [16:55<00:22,  2.43it/s, loss=0.016, v_num=3]Epoch 3:  98%|█████████▊| 2470/2524 [16:55<00:22,  2.43it/s, loss=0.0159, v_num=3]Epoch 3:  98%|█████████▊| 2480/2524 [16:59<00:18,  2.43it/s, loss=0.0159, v_num=3]Epoch 3:  98%|█████████▊| 2480/2524 [16:59<00:18,  2.43it/s, loss=0.0175, v_num=3]Epoch 3:  99%|█████████▊| 2490/2524 [17:03<00:13,  2.43it/s, loss=0.0175, v_num=3]Epoch 3:  99%|█████████▊| 2490/2524 [17:03<00:13,  2.43it/s, loss=0.0176, v_num=3]Epoch 3:  99%|█████████▉| 2500/2524 [17:07<00:09,  2.43it/s, loss=0.0176, v_num=3]Epoch 3:  99%|█████████▉| 2500/2524 [17:07<00:09,  2.43it/s, loss=0.0183, v_num=3]Epoch 3:  99%|█████████▉| 2510/2524 [17:11<00:05,  2.43it/s, loss=0.0183, v_num=3]Epoch 3:  99%|█████████▉| 2510/2524 [17:11<00:05,  2.43it/s, loss=0.0205, v_num=3]Epoch 3: 100%|█████████▉| 2520/2524 [17:16<00:01,  2.43it/s, loss=0.0205, v_num=3]Epoch 3: 100%|█████████▉| 2520/2524 [17:16<00:01,  2.43it/s, loss=0.0218, v_num=3]Epoch 3: 100%|██████████| 2524/2524 [17:17<00:00,  2.43it/s, loss=0.0218, v_num=3]Epoch 3: 100%|██████████| 2524/2524 [17:17<00:00,  2.43it/s, loss=0.0214, v_num=3]Epoch 3: 100%|██████████| 2524/2524 [17:17<00:00,  2.43it/s, loss=0.0214, v_num=3]Epoch 3:   0%|          | 0/2524 [00:00<?, ?it/s, loss=0.0214, v_num=3]           Epoch 4:   0%|          | 0/2524 [00:00<?, ?it/s, loss=0.0214, v_num=3]Epoch 4:   0%|          | 10/2524 [00:04<19:09,  2.19it/s, loss=0.0214, v_num=3]Epoch 4:   0%|          | 10/2524 [00:04<19:12,  2.18it/s, loss=0.0211, v_num=3]Epoch 4:   1%|          | 20/2524 [00:08<18:04,  2.31it/s, loss=0.0211, v_num=3]Epoch 4:   1%|          | 20/2524 [00:08<18:05,  2.31it/s, loss=0.0139, v_num=3]Epoch 4:   1%|          | 30/2524 [00:12<17:39,  2.35it/s, loss=0.0139, v_num=3]Epoch 4:   1%|          | 30/2524 [00:12<17:40,  2.35it/s, loss=0.014, v_num=3] Epoch 4:   2%|▏         | 40/2524 [00:16<17:25,  2.38it/s, loss=0.014, v_num=3]Epoch 4:   2%|▏         | 40/2524 [00:16<17:26,  2.37it/s, loss=0.0161, v_num=3]Epoch 4:   2%|▏         | 50/2524 [00:20<17:15,  2.39it/s, loss=0.0161, v_num=3]Epoch 4:   2%|▏         | 50/2524 [00:20<17:16,  2.39it/s, loss=0.0168, v_num=3]Epoch 4:   2%|▏         | 60/2524 [00:25<17:09,  2.39it/s, loss=0.0168, v_num=3]Epoch 4:   2%|▏         | 60/2524 [00:25<17:09,  2.39it/s, loss=0.0185, v_num=3]Epoch 4:   3%|▎         | 70/2524 [00:29<17:02,  2.40it/s, loss=0.0185, v_num=3]Epoch 4:   3%|▎         | 70/2524 [00:29<17:02,  2.40it/s, loss=0.0175, v_num=3]Epoch 4:   3%|▎         | 80/2524 [00:33<16:55,  2.41it/s, loss=0.0175, v_num=3]Epoch 4:   3%|▎         | 80/2524 [00:33<16:55,  2.41it/s, loss=0.0159, v_num=3]Epoch 4:   4%|▎         | 90/2524 [00:37<16:49,  2.41it/s, loss=0.0159, v_num=3]Epoch 4:   4%|▎         | 90/2524 [00:37<16:49,  2.41it/s, loss=0.0134, v_num=3]Epoch 4:   4%|▍         | 100/2524 [00:41<16:44,  2.41it/s, loss=0.0134, v_num=3]Epoch 4:   4%|▍         | 100/2524 [00:41<16:44,  2.41it/s, loss=0.0132, v_num=3]Epoch 4:   4%|▍         | 110/2524 [00:45<16:41,  2.41it/s, loss=0.0132, v_num=3]Epoch 4:   4%|▍         | 110/2524 [00:45<16:42,  2.41it/s, loss=0.0188, v_num=3]Epoch 4:   5%|▍         | 120/2524 [00:49<16:36,  2.41it/s, loss=0.0188, v_num=3]Epoch 4:   5%|▍         | 120/2524 [00:49<16:36,  2.41it/s, loss=0.0199, v_num=3]Epoch 4:   5%|▌         | 130/2524 [00:53<16:31,  2.41it/s, loss=0.0199, v_num=3]Epoch 4:   5%|▌         | 130/2524 [00:53<16:31,  2.41it/s, loss=0.0173, v_num=3]Epoch 4:   6%|▌         | 140/2524 [00:57<16:26,  2.42it/s, loss=0.0173, v_num=3]Epoch 4:   6%|▌         | 140/2524 [00:57<16:26,  2.42it/s, loss=0.0152, v_num=3]Epoch 4:   6%|▌         | 150/2524 [01:02<16:21,  2.42it/s, loss=0.0152, v_num=3]Epoch 4:   6%|▌         | 150/2524 [01:02<16:21,  2.42it/s, loss=0.0155, v_num=3]Epoch 4:   6%|▋         | 160/2524 [01:06<16:17,  2.42it/s, loss=0.0155, v_num=3]Epoch 4:   6%|▋         | 160/2524 [01:06<16:18,  2.42it/s, loss=0.0185, v_num=3]Epoch 4:   7%|▋         | 170/2524 [01:10<16:13,  2.42it/s, loss=0.0185, v_num=3]Epoch 4:   7%|▋         | 170/2524 [01:10<16:13,  2.42it/s, loss=0.0192, v_num=3]Epoch 4:   7%|▋         | 180/2524 [01:14<16:08,  2.42it/s, loss=0.0192, v_num=3]Epoch 4:   7%|▋         | 180/2524 [01:14<16:08,  2.42it/s, loss=0.0149, v_num=3]Epoch 4:   8%|▊         | 190/2524 [01:18<16:03,  2.42it/s, loss=0.0149, v_num=3]Epoch 4:   8%|▊         | 190/2524 [01:18<16:03,  2.42it/s, loss=0.0111, v_num=3]Epoch 4:   8%|▊         | 200/2524 [01:22<15:59,  2.42it/s, loss=0.0111, v_num=3]Epoch 4:   8%|▊         | 200/2524 [01:22<15:59,  2.42it/s, loss=0.0148, v_num=3]Epoch 4:   8%|▊         | 210/2524 [01:26<15:56,  2.42it/s, loss=0.0148, v_num=3]Epoch 4:   8%|▊         | 210/2524 [01:26<15:56,  2.42it/s, loss=0.015, v_num=3] Epoch 4:   9%|▊         | 220/2524 [01:30<15:51,  2.42it/s, loss=0.015, v_num=3]Epoch 4:   9%|▊         | 220/2524 [01:30<15:51,  2.42it/s, loss=0.0139, v_num=3]Epoch 4:   9%|▉         | 230/2524 [01:34<15:47,  2.42it/s, loss=0.0139, v_num=3]Epoch 4:   9%|▉         | 230/2524 [01:34<15:47,  2.42it/s, loss=0.0188, v_num=3]Epoch 4:  10%|▉         | 240/2524 [01:39<15:42,  2.42it/s, loss=0.0188, v_num=3]Epoch 4:  10%|▉         | 240/2524 [01:39<15:42,  2.42it/s, loss=0.017, v_num=3] Epoch 4:  10%|▉         | 250/2524 [01:43<15:38,  2.42it/s, loss=0.017, v_num=3]Epoch 4:  10%|▉         | 250/2524 [01:43<15:38,  2.42it/s, loss=0.0124, v_num=3]Epoch 4:  10%|█         | 260/2524 [01:47<15:34,  2.42it/s, loss=0.0124, v_num=3]Epoch 4:  10%|█         | 260/2524 [01:47<15:34,  2.42it/s, loss=0.0155, v_num=3]Epoch 4:  11%|█         | 270/2524 [01:51<15:29,  2.42it/s, loss=0.0155, v_num=3]Epoch 4:  11%|█         | 270/2524 [01:51<15:30,  2.42it/s, loss=0.0165, v_num=3]Epoch 4:  11%|█         | 280/2524 [01:55<15:25,  2.42it/s, loss=0.0165, v_num=3]Epoch 4:  11%|█         | 280/2524 [01:55<15:25,  2.42it/s, loss=0.0157, v_num=3]Epoch 4:  11%|█▏        | 290/2524 [01:59<15:21,  2.43it/s, loss=0.0157, v_num=3]Epoch 4:  11%|█▏        | 290/2524 [01:59<15:21,  2.42it/s, loss=0.0164, v_num=3]Epoch 4:  12%|█▏        | 300/2524 [02:03<15:16,  2.43it/s, loss=0.0164, v_num=3]Epoch 4:  12%|█▏        | 300/2524 [02:03<15:16,  2.43it/s, loss=0.0147, v_num=3]Epoch 4:  12%|█▏        | 310/2524 [02:07<15:13,  2.42it/s, loss=0.0147, v_num=3]Epoch 4:  12%|█▏        | 310/2524 [02:07<15:13,  2.42it/s, loss=0.0146, v_num=3]Epoch 4:  13%|█▎        | 320/2524 [02:11<15:09,  2.42it/s, loss=0.0146, v_num=3]Epoch 4:  13%|█▎        | 320/2524 [02:12<15:09,  2.42it/s, loss=0.0158, v_num=3]Epoch 4:  13%|█▎        | 330/2524 [02:16<15:04,  2.43it/s, loss=0.0158, v_num=3]Epoch 4:  13%|█▎        | 330/2524 [02:16<15:04,  2.42it/s, loss=0.0128, v_num=3]Epoch 4:  13%|█▎        | 340/2524 [02:20<15:00,  2.43it/s, loss=0.0128, v_num=3]Epoch 4:  13%|█▎        | 340/2524 [02:20<15:00,  2.43it/s, loss=0.0131, v_num=3]Epoch 4:  14%|█▍        | 350/2524 [02:24<14:55,  2.43it/s, loss=0.0131, v_num=3]Epoch 4:  14%|█▍        | 350/2524 [02:24<14:56,  2.43it/s, loss=0.0175, v_num=3]Epoch 4:  14%|█▍        | 360/2524 [02:28<14:51,  2.43it/s, loss=0.0175, v_num=3]Epoch 4:  14%|█▍        | 360/2524 [02:28<14:52,  2.43it/s, loss=0.0161, v_num=3]Epoch 4:  15%|█▍        | 370/2524 [02:32<14:47,  2.43it/s, loss=0.0161, v_num=3]Epoch 4:  15%|█▍        | 370/2524 [02:32<14:47,  2.43it/s, loss=0.0117, v_num=3]Epoch 4:  15%|█▌        | 380/2524 [02:36<14:43,  2.43it/s, loss=0.0117, v_num=3]Epoch 4:  15%|█▌        | 380/2524 [02:36<14:43,  2.43it/s, loss=0.0145, v_num=3]Epoch 4:  15%|█▌        | 390/2524 [02:40<14:39,  2.43it/s, loss=0.0145, v_num=3]Epoch 4:  15%|█▌        | 390/2524 [02:40<14:39,  2.43it/s, loss=0.0152, v_num=3]Epoch 4:  16%|█▌        | 400/2524 [02:44<14:34,  2.43it/s, loss=0.0152, v_num=3]Epoch 4:  16%|█▌        | 400/2524 [02:44<14:34,  2.43it/s, loss=0.0119, v_num=3]Epoch 4:  16%|█▌        | 410/2524 [02:48<14:31,  2.43it/s, loss=0.0119, v_num=3]Epoch 4:  16%|█▌        | 410/2524 [02:48<14:31,  2.43it/s, loss=0.0132, v_num=3]Epoch 4:  17%|█▋        | 420/2524 [02:53<14:26,  2.43it/s, loss=0.0132, v_num=3]Epoch 4:  17%|█▋        | 420/2524 [02:53<14:26,  2.43it/s, loss=0.0176, v_num=3]Epoch 4:  17%|█▋        | 430/2524 [02:57<14:22,  2.43it/s, loss=0.0176, v_num=3]Epoch 4:  17%|█▋        | 430/2524 [02:57<14:22,  2.43it/s, loss=0.0177, v_num=3]Epoch 4:  17%|█▋        | 440/2524 [03:01<14:18,  2.43it/s, loss=0.0177, v_num=3]Epoch 4:  17%|█▋        | 440/2524 [03:01<14:18,  2.43it/s, loss=0.0147, v_num=3]Epoch 4:  18%|█▊        | 450/2524 [03:05<14:14,  2.43it/s, loss=0.0147, v_num=3]Epoch 4:  18%|█▊        | 450/2524 [03:05<14:14,  2.43it/s, loss=0.0162, v_num=3]Epoch 4:  18%|█▊        | 460/2524 [03:09<14:10,  2.43it/s, loss=0.0162, v_num=3]Epoch 4:  18%|█▊        | 460/2524 [03:09<14:10,  2.43it/s, loss=0.0157, v_num=3]Epoch 4:  19%|█▊        | 470/2524 [03:13<14:05,  2.43it/s, loss=0.0157, v_num=3]Epoch 4:  19%|█▊        | 470/2524 [03:13<14:05,  2.43it/s, loss=0.0129, v_num=3]Epoch 4:  19%|█▉        | 480/2524 [03:17<14:01,  2.43it/s, loss=0.0129, v_num=3]Epoch 4:  19%|█▉        | 480/2524 [03:17<14:01,  2.43it/s, loss=0.0135, v_num=3]Epoch 4:  19%|█▉        | 490/2524 [03:21<13:57,  2.43it/s, loss=0.0135, v_num=3]Epoch 4:  19%|█▉        | 490/2524 [03:21<13:57,  2.43it/s, loss=0.0168, v_num=3]Epoch 4:  20%|█▉        | 500/2524 [03:25<13:53,  2.43it/s, loss=0.0168, v_num=3]Epoch 4:  20%|█▉        | 500/2524 [03:25<13:53,  2.43it/s, loss=0.0154, v_num=3]Epoch 4:  20%|██        | 510/2524 [03:30<13:49,  2.43it/s, loss=0.0154, v_num=3]Epoch 4:  20%|██        | 510/2524 [03:30<13:49,  2.43it/s, loss=0.0109, v_num=3]Epoch 4:  21%|██        | 520/2524 [03:34<13:45,  2.43it/s, loss=0.0109, v_num=3]Epoch 4:  21%|██        | 520/2524 [03:34<13:45,  2.43it/s, loss=0.0162, v_num=3]Epoch 4:  21%|██        | 530/2524 [03:38<13:40,  2.43it/s, loss=0.0162, v_num=3]Epoch 4:  21%|██        | 530/2524 [03:38<13:40,  2.43it/s, loss=0.0226, v_num=3]Epoch 4:  21%|██▏       | 540/2524 [03:42<13:36,  2.43it/s, loss=0.0226, v_num=3]Epoch 4:  21%|██▏       | 540/2524 [03:42<13:36,  2.43it/s, loss=0.0195, v_num=3]Epoch 4:  22%|██▏       | 550/2524 [03:46<13:32,  2.43it/s, loss=0.0195, v_num=3]Epoch 4:  22%|██▏       | 550/2524 [03:46<13:32,  2.43it/s, loss=0.0154, v_num=3]Epoch 4:  22%|██▏       | 560/2524 [03:50<13:28,  2.43it/s, loss=0.0154, v_num=3]Epoch 4:  22%|██▏       | 560/2524 [03:50<13:28,  2.43it/s, loss=0.0133, v_num=3]Epoch 4:  23%|██▎       | 570/2524 [03:54<13:24,  2.43it/s, loss=0.0133, v_num=3]Epoch 4:  23%|██▎       | 570/2524 [03:54<13:24,  2.43it/s, loss=0.0146, v_num=3]Epoch 4:  23%|██▎       | 580/2524 [03:58<13:20,  2.43it/s, loss=0.0146, v_num=3]Epoch 4:  23%|██▎       | 580/2524 [03:58<13:20,  2.43it/s, loss=0.018, v_num=3] Epoch 4:  23%|██▎       | 590/2524 [04:02<13:15,  2.43it/s, loss=0.018, v_num=3]Epoch 4:  23%|██▎       | 590/2524 [04:02<13:15,  2.43it/s, loss=0.0184, v_num=3]Epoch 4:  24%|██▍       | 600/2524 [04:06<13:11,  2.43it/s, loss=0.0184, v_num=3]Epoch 4:  24%|██▍       | 600/2524 [04:06<13:11,  2.43it/s, loss=0.0155, v_num=3]Epoch 4:  24%|██▍       | 610/2524 [04:11<13:07,  2.43it/s, loss=0.0155, v_num=3]Epoch 4:  24%|██▍       | 610/2524 [04:11<13:07,  2.43it/s, loss=0.015, v_num=3] Epoch 4:  25%|██▍       | 620/2524 [04:15<13:03,  2.43it/s, loss=0.015, v_num=3]Epoch 4:  25%|██▍       | 620/2524 [04:15<13:03,  2.43it/s, loss=0.0176, v_num=3]Epoch 4:  25%|██▍       | 630/2524 [04:19<12:59,  2.43it/s, loss=0.0176, v_num=3]Epoch 4:  25%|██▍       | 630/2524 [04:19<12:59,  2.43it/s, loss=0.0166, v_num=3]Epoch 4:  25%|██▌       | 640/2524 [04:23<12:55,  2.43it/s, loss=0.0166, v_num=3]Epoch 4:  25%|██▌       | 640/2524 [04:23<12:55,  2.43it/s, loss=0.0156, v_num=3]Epoch 4:  26%|██▌       | 650/2524 [04:27<12:51,  2.43it/s, loss=0.0156, v_num=3]Epoch 4:  26%|██▌       | 650/2524 [04:27<12:51,  2.43it/s, loss=0.0168, v_num=3]Epoch 4:  26%|██▌       | 660/2524 [04:31<12:47,  2.43it/s, loss=0.0168, v_num=3]Epoch 4:  26%|██▌       | 660/2524 [04:31<12:47,  2.43it/s, loss=0.0166, v_num=3]Epoch 4:  27%|██▋       | 670/2524 [04:35<12:42,  2.43it/s, loss=0.0166, v_num=3]Epoch 4:  27%|██▋       | 670/2524 [04:35<12:42,  2.43it/s, loss=0.0195, v_num=3]Epoch 4:  27%|██▋       | 680/2524 [04:39<12:38,  2.43it/s, loss=0.0195, v_num=3]Epoch 4:  27%|██▋       | 680/2524 [04:39<12:38,  2.43it/s, loss=0.0173, v_num=3]Epoch 4:  27%|██▋       | 690/2524 [04:43<12:34,  2.43it/s, loss=0.0173, v_num=3]Epoch 4:  27%|██▋       | 690/2524 [04:43<12:34,  2.43it/s, loss=0.0148, v_num=3]Epoch 4:  28%|██▊       | 700/2524 [04:47<12:30,  2.43it/s, loss=0.0148, v_num=3]Epoch 4:  28%|██▊       | 700/2524 [04:47<12:30,  2.43it/s, loss=0.017, v_num=3] Epoch 4:  28%|██▊       | 710/2524 [04:52<12:26,  2.43it/s, loss=0.017, v_num=3]Epoch 4:  28%|██▊       | 710/2524 [04:52<12:26,  2.43it/s, loss=0.0175, v_num=3]Epoch 4:  29%|██▊       | 720/2524 [04:56<12:22,  2.43it/s, loss=0.0175, v_num=3]Epoch 4:  29%|██▊       | 720/2524 [04:56<12:22,  2.43it/s, loss=0.016, v_num=3] Epoch 4:  29%|██▉       | 730/2524 [05:00<12:18,  2.43it/s, loss=0.016, v_num=3]Epoch 4:  29%|██▉       | 730/2524 [05:00<12:18,  2.43it/s, loss=0.0119, v_num=3]Epoch 4:  29%|██▉       | 740/2524 [05:04<12:13,  2.43it/s, loss=0.0119, v_num=3]Epoch 4:  29%|██▉       | 740/2524 [05:04<12:13,  2.43it/s, loss=0.0112, v_num=3]Epoch 4:  30%|██▉       | 750/2524 [05:08<12:09,  2.43it/s, loss=0.0112, v_num=3]Epoch 4:  30%|██▉       | 750/2524 [05:08<12:09,  2.43it/s, loss=0.0126, v_num=3]Epoch 4:  30%|███       | 760/2524 [05:12<12:05,  2.43it/s, loss=0.0126, v_num=3]Epoch 4:  30%|███       | 760/2524 [05:12<12:05,  2.43it/s, loss=0.0112, v_num=3]Epoch 4:  31%|███       | 770/2524 [05:16<12:01,  2.43it/s, loss=0.0112, v_num=3]Epoch 4:  31%|███       | 770/2524 [05:16<12:01,  2.43it/s, loss=0.0141, v_num=3]Epoch 4:  31%|███       | 780/2524 [05:20<11:57,  2.43it/s, loss=0.0141, v_num=3]Epoch 4:  31%|███       | 780/2524 [05:20<11:57,  2.43it/s, loss=0.0181, v_num=3]Epoch 4:  31%|███▏      | 790/2524 [05:24<11:53,  2.43it/s, loss=0.0181, v_num=3]Epoch 4:  31%|███▏      | 790/2524 [05:24<11:53,  2.43it/s, loss=0.0163, v_num=3]Epoch 4:  32%|███▏      | 800/2524 [05:29<11:49,  2.43it/s, loss=0.0163, v_num=3]Epoch 4:  32%|███▏      | 800/2524 [05:29<11:49,  2.43it/s, loss=0.0162, v_num=3]Epoch 4:  32%|███▏      | 810/2524 [05:33<11:45,  2.43it/s, loss=0.0162, v_num=3]Epoch 4:  32%|███▏      | 810/2524 [05:33<11:45,  2.43it/s, loss=0.018, v_num=3] Epoch 4:  32%|███▏      | 820/2524 [05:37<11:41,  2.43it/s, loss=0.018, v_num=3]Epoch 4:  32%|███▏      | 820/2524 [05:37<11:41,  2.43it/s, loss=0.0225, v_num=3]Epoch 4:  33%|███▎      | 830/2524 [05:41<11:36,  2.43it/s, loss=0.0225, v_num=3]Epoch 4:  33%|███▎      | 830/2524 [05:41<11:36,  2.43it/s, loss=0.0205, v_num=3]Epoch 4:  33%|███▎      | 840/2524 [05:45<11:32,  2.43it/s, loss=0.0205, v_num=3]Epoch 4:  33%|███▎      | 840/2524 [05:45<11:32,  2.43it/s, loss=0.0144, v_num=3]Epoch 4:  34%|███▎      | 850/2524 [05:49<11:28,  2.43it/s, loss=0.0144, v_num=3]Epoch 4:  34%|███▎      | 850/2524 [05:49<11:28,  2.43it/s, loss=0.0128, v_num=3]Epoch 4:  34%|███▍      | 860/2524 [05:53<11:24,  2.43it/s, loss=0.0128, v_num=3]Epoch 4:  34%|███▍      | 860/2524 [05:53<11:24,  2.43it/s, loss=0.0135, v_num=3]Epoch 4:  34%|███▍      | 870/2524 [05:57<11:20,  2.43it/s, loss=0.0135, v_num=3]Epoch 4:  34%|███▍      | 870/2524 [05:57<11:20,  2.43it/s, loss=0.0148, v_num=3]Epoch 4:  35%|███▍      | 880/2524 [06:01<11:16,  2.43it/s, loss=0.0148, v_num=3]Epoch 4:  35%|███▍      | 880/2524 [06:01<11:16,  2.43it/s, loss=0.0128, v_num=3]Epoch 4:  35%|███▌      | 890/2524 [06:06<11:12,  2.43it/s, loss=0.0128, v_num=3]Epoch 4:  35%|███▌      | 890/2524 [06:06<11:12,  2.43it/s, loss=0.0162, v_num=3]Epoch 4:  36%|███▌      | 900/2524 [06:10<11:07,  2.43it/s, loss=0.0162, v_num=3]Epoch 4:  36%|███▌      | 900/2524 [06:10<11:07,  2.43it/s, loss=0.0176, v_num=3]Epoch 4:  36%|███▌      | 910/2524 [06:14<11:03,  2.43it/s, loss=0.0176, v_num=3]Epoch 4:  36%|███▌      | 910/2524 [06:14<11:03,  2.43it/s, loss=0.013, v_num=3] Epoch 4:  36%|███▋      | 920/2524 [06:18<10:59,  2.43it/s, loss=0.013, v_num=3]Epoch 4:  36%|███▋      | 920/2524 [06:18<10:59,  2.43it/s, loss=0.0127, v_num=3]Epoch 4:  37%|███▋      | 930/2524 [06:22<10:55,  2.43it/s, loss=0.0127, v_num=3]Epoch 4:  37%|███▋      | 930/2524 [06:22<10:55,  2.43it/s, loss=0.0168, v_num=3]Epoch 4:  37%|███▋      | 940/2524 [06:26<10:51,  2.43it/s, loss=0.0168, v_num=3]Epoch 4:  37%|███▋      | 940/2524 [06:26<10:51,  2.43it/s, loss=0.0169, v_num=3]Epoch 4:  38%|███▊      | 950/2524 [06:30<10:47,  2.43it/s, loss=0.0169, v_num=3]Epoch 4:  38%|███▊      | 950/2524 [06:30<10:47,  2.43it/s, loss=0.0142, v_num=3]Epoch 4:  38%|███▊      | 960/2524 [06:34<10:43,  2.43it/s, loss=0.0142, v_num=3]Epoch 4:  38%|███▊      | 960/2524 [06:34<10:43,  2.43it/s, loss=0.0154, v_num=3]Epoch 4:  38%|███▊      | 970/2524 [06:38<10:39,  2.43it/s, loss=0.0154, v_num=3]Epoch 4:  38%|███▊      | 970/2524 [06:38<10:39,  2.43it/s, loss=0.0181, v_num=3]Epoch 4:  39%|███▉      | 980/2524 [06:43<10:35,  2.43it/s, loss=0.0181, v_num=3]Epoch 4:  39%|███▉      | 980/2524 [06:43<10:35,  2.43it/s, loss=0.0155, v_num=3]Epoch 4:  39%|███▉      | 990/2524 [06:47<10:30,  2.43it/s, loss=0.0155, v_num=3]Epoch 4:  39%|███▉      | 990/2524 [06:47<10:30,  2.43it/s, loss=0.0125, v_num=3]Epoch 4:  40%|███▉      | 1000/2524 [06:51<10:26,  2.43it/s, loss=0.0125, v_num=3]Epoch 4:  40%|███▉      | 1000/2524 [06:51<10:26,  2.43it/s, loss=0.0154, v_num=3]Epoch 4:  40%|████      | 1010/2524 [06:55<10:22,  2.43it/s, loss=0.0154, v_num=3]Epoch 4:  40%|████      | 1010/2524 [06:55<10:22,  2.43it/s, loss=0.0149, v_num=3]Epoch 4:  40%|████      | 1020/2524 [06:59<10:18,  2.43it/s, loss=0.0149, v_num=3]Epoch 4:  40%|████      | 1020/2524 [06:59<10:18,  2.43it/s, loss=0.0135, v_num=3]Epoch 4:  41%|████      | 1030/2524 [07:03<10:14,  2.43it/s, loss=0.0135, v_num=3]Epoch 4:  41%|████      | 1030/2524 [07:03<10:14,  2.43it/s, loss=0.0166, v_num=3]Epoch 4:  41%|████      | 1040/2524 [07:07<10:10,  2.43it/s, loss=0.0166, v_num=3]Epoch 4:  41%|████      | 1040/2524 [07:07<10:10,  2.43it/s, loss=0.0145, v_num=3]Epoch 4:  42%|████▏     | 1050/2524 [07:11<10:06,  2.43it/s, loss=0.0145, v_num=3]Epoch 4:  42%|████▏     | 1050/2524 [07:11<10:06,  2.43it/s, loss=0.0137, v_num=3]Epoch 4:  42%|████▏     | 1060/2524 [07:16<10:02,  2.43it/s, loss=0.0137, v_num=3]Epoch 4:  42%|████▏     | 1060/2524 [07:16<10:02,  2.43it/s, loss=0.0156, v_num=3]Epoch 4:  42%|████▏     | 1070/2524 [07:20<09:58,  2.43it/s, loss=0.0156, v_num=3]Epoch 4:  42%|████▏     | 1070/2524 [07:20<09:58,  2.43it/s, loss=0.0143, v_num=3]Epoch 4:  43%|████▎     | 1080/2524 [07:24<09:53,  2.43it/s, loss=0.0143, v_num=3]Epoch 4:  43%|████▎     | 1080/2524 [07:24<09:53,  2.43it/s, loss=0.0139, v_num=3]Epoch 4:  43%|████▎     | 1090/2524 [07:28<09:49,  2.43it/s, loss=0.0139, v_num=3]Epoch 4:  43%|████▎     | 1090/2524 [07:28<09:49,  2.43it/s, loss=0.0154, v_num=3]Epoch 4:  44%|████▎     | 1100/2524 [07:32<09:45,  2.43it/s, loss=0.0154, v_num=3]Epoch 4:  44%|████▎     | 1100/2524 [07:32<09:45,  2.43it/s, loss=0.0171, v_num=3]Epoch 4:  44%|████▍     | 1110/2524 [07:36<09:41,  2.43it/s, loss=0.0171, v_num=3]Epoch 4:  44%|████▍     | 1110/2524 [07:36<09:41,  2.43it/s, loss=0.0158, v_num=3]Epoch 4:  44%|████▍     | 1120/2524 [07:40<09:37,  2.43it/s, loss=0.0158, v_num=3]Epoch 4:  44%|████▍     | 1120/2524 [07:40<09:37,  2.43it/s, loss=0.0143, v_num=3]Epoch 4:  45%|████▍     | 1130/2524 [07:44<09:33,  2.43it/s, loss=0.0143, v_num=3]Epoch 4:  45%|████▍     | 1130/2524 [07:44<09:33,  2.43it/s, loss=0.0143, v_num=3]Epoch 4:  45%|████▌     | 1140/2524 [07:48<09:29,  2.43it/s, loss=0.0143, v_num=3]Epoch 4:  45%|████▌     | 1140/2524 [07:48<09:29,  2.43it/s, loss=0.0146, v_num=3]Epoch 4:  46%|████▌     | 1150/2524 [07:52<09:25,  2.43it/s, loss=0.0146, v_num=3]Epoch 4:  46%|████▌     | 1150/2524 [07:52<09:25,  2.43it/s, loss=0.0136, v_num=3]Epoch 4:  46%|████▌     | 1160/2524 [07:57<09:20,  2.43it/s, loss=0.0136, v_num=3]Epoch 4:  46%|████▌     | 1160/2524 [07:57<09:21,  2.43it/s, loss=0.0139, v_num=3]Epoch 4:  46%|████▋     | 1170/2524 [08:01<09:16,  2.43it/s, loss=0.0139, v_num=3]Epoch 4:  46%|████▋     | 1170/2524 [08:01<09:16,  2.43it/s, loss=0.0151, v_num=3]Epoch 4:  47%|████▋     | 1180/2524 [08:05<09:12,  2.43it/s, loss=0.0151, v_num=3]Epoch 4:  47%|████▋     | 1180/2524 [08:05<09:12,  2.43it/s, loss=0.0152, v_num=3]Epoch 4:  47%|████▋     | 1190/2524 [08:09<09:08,  2.43it/s, loss=0.0152, v_num=3]Epoch 4:  47%|████▋     | 1190/2524 [08:09<09:08,  2.43it/s, loss=0.0131, v_num=3]Epoch 4:  48%|████▊     | 1200/2524 [08:13<09:04,  2.43it/s, loss=0.0131, v_num=3]Epoch 4:  48%|████▊     | 1200/2524 [08:13<09:04,  2.43it/s, loss=0.0111, v_num=3]Epoch 4:  48%|████▊     | 1210/2524 [08:17<09:00,  2.43it/s, loss=0.0111, v_num=3]Epoch 4:  48%|████▊     | 1210/2524 [08:17<09:00,  2.43it/s, loss=0.0126, v_num=3]Epoch 4:  48%|████▊     | 1220/2524 [08:21<08:56,  2.43it/s, loss=0.0126, v_num=3]Epoch 4:  48%|████▊     | 1220/2524 [08:21<08:56,  2.43it/s, loss=0.0173, v_num=3]Epoch 4:  49%|████▊     | 1230/2524 [08:25<08:52,  2.43it/s, loss=0.0173, v_num=3]Epoch 4:  49%|████▊     | 1230/2524 [08:25<08:52,  2.43it/s, loss=0.0171, v_num=3]Epoch 4:  49%|████▉     | 1240/2524 [08:29<08:48,  2.43it/s, loss=0.0171, v_num=3]Epoch 4:  49%|████▉     | 1240/2524 [08:29<08:48,  2.43it/s, loss=0.0142, v_num=3]Epoch 4:  50%|████▉     | 1250/2524 [08:34<08:43,  2.43it/s, loss=0.0142, v_num=3]Epoch 4:  50%|████▉     | 1250/2524 [08:34<08:43,  2.43it/s, loss=0.0172, v_num=3]Epoch 4:  50%|████▉     | 1260/2524 [08:38<08:39,  2.43it/s, loss=0.0172, v_num=3]Epoch 4:  50%|████▉     | 1260/2524 [08:38<08:39,  2.43it/s, loss=0.018, v_num=3] Epoch 4:  50%|█████     | 1270/2524 [08:42<08:35,  2.43it/s, loss=0.018, v_num=3]Epoch 4:  50%|█████     | 1270/2524 [08:42<08:35,  2.43it/s, loss=0.0151, v_num=3]Epoch 4:  51%|█████     | 1280/2524 [08:46<08:31,  2.43it/s, loss=0.0151, v_num=3]Epoch 4:  51%|█████     | 1280/2524 [08:46<08:31,  2.43it/s, loss=0.0142, v_num=3]Epoch 4:  51%|█████     | 1290/2524 [08:50<08:27,  2.43it/s, loss=0.0142, v_num=3]Epoch 4:  51%|█████     | 1290/2524 [08:50<08:27,  2.43it/s, loss=0.0138, v_num=3]Epoch 4:  52%|█████▏    | 1300/2524 [08:54<08:23,  2.43it/s, loss=0.0138, v_num=3]Epoch 4:  52%|█████▏    | 1300/2524 [08:54<08:23,  2.43it/s, loss=0.0114, v_num=3]Epoch 4:  52%|█████▏    | 1310/2524 [08:58<08:19,  2.43it/s, loss=0.0114, v_num=3]Epoch 4:  52%|█████▏    | 1310/2524 [08:58<08:19,  2.43it/s, loss=0.0122, v_num=3]Epoch 4:  52%|█████▏    | 1320/2524 [09:02<08:15,  2.43it/s, loss=0.0122, v_num=3]Epoch 4:  52%|█████▏    | 1320/2524 [09:02<08:15,  2.43it/s, loss=0.013, v_num=3] Epoch 4:  53%|█████▎    | 1330/2524 [09:06<08:10,  2.43it/s, loss=0.013, v_num=3]Epoch 4:  53%|█████▎    | 1330/2524 [09:06<08:11,  2.43it/s, loss=0.015, v_num=3]Epoch 4:  53%|█████▎    | 1340/2524 [09:11<08:06,  2.43it/s, loss=0.015, v_num=3]Epoch 4:  53%|█████▎    | 1340/2524 [09:11<08:06,  2.43it/s, loss=0.0163, v_num=3]Epoch 4:  53%|█████▎    | 1350/2524 [09:15<08:02,  2.43it/s, loss=0.0163, v_num=3]Epoch 4:  53%|█████▎    | 1350/2524 [09:15<08:02,  2.43it/s, loss=0.0128, v_num=3]Epoch 4:  54%|█████▍    | 1360/2524 [09:19<07:58,  2.43it/s, loss=0.0128, v_num=3]Epoch 4:  54%|█████▍    | 1360/2524 [09:19<07:58,  2.43it/s, loss=0.0163, v_num=3]Epoch 4:  54%|█████▍    | 1370/2524 [09:23<07:54,  2.43it/s, loss=0.0163, v_num=3]Epoch 4:  54%|█████▍    | 1370/2524 [09:23<07:54,  2.43it/s, loss=0.0173, v_num=3]Epoch 4:  55%|█████▍    | 1380/2524 [09:27<07:50,  2.43it/s, loss=0.0173, v_num=3]Epoch 4:  55%|█████▍    | 1380/2524 [09:27<07:50,  2.43it/s, loss=0.016, v_num=3] Epoch 4:  55%|█████▌    | 1390/2524 [09:31<07:46,  2.43it/s, loss=0.016, v_num=3]Epoch 4:  55%|█████▌    | 1390/2524 [09:31<07:46,  2.43it/s, loss=0.0132, v_num=3]Epoch 4:  55%|█████▌    | 1400/2524 [09:35<07:42,  2.43it/s, loss=0.0132, v_num=3]Epoch 4:  55%|█████▌    | 1400/2524 [09:35<07:42,  2.43it/s, loss=0.0141, v_num=3]Epoch 4:  56%|█████▌    | 1410/2524 [09:39<07:38,  2.43it/s, loss=0.0141, v_num=3]Epoch 4:  56%|█████▌    | 1410/2524 [09:39<07:38,  2.43it/s, loss=0.0215, v_num=3]Epoch 4:  56%|█████▋    | 1420/2524 [09:43<07:33,  2.43it/s, loss=0.0215, v_num=3]Epoch 4:  56%|█████▋    | 1420/2524 [09:43<07:33,  2.43it/s, loss=0.0173, v_num=3]Epoch 4:  57%|█████▋    | 1430/2524 [09:48<07:29,  2.43it/s, loss=0.0173, v_num=3]Epoch 4:  57%|█████▋    | 1430/2524 [09:48<07:29,  2.43it/s, loss=0.0143, v_num=3]Epoch 4:  57%|█████▋    | 1440/2524 [09:52<07:25,  2.43it/s, loss=0.0143, v_num=3]Epoch 4:  57%|█████▋    | 1440/2524 [09:52<07:25,  2.43it/s, loss=0.0164, v_num=3]Epoch 4:  57%|█████▋    | 1450/2524 [09:56<07:21,  2.43it/s, loss=0.0164, v_num=3]Epoch 4:  57%|█████▋    | 1450/2524 [09:56<07:21,  2.43it/s, loss=0.0142, v_num=3]Epoch 4:  58%|█████▊    | 1460/2524 [10:00<07:17,  2.43it/s, loss=0.0142, v_num=3]Epoch 4:  58%|█████▊    | 1460/2524 [10:00<07:17,  2.43it/s, loss=0.0128, v_num=3]Epoch 4:  58%|█████▊    | 1470/2524 [10:04<07:13,  2.43it/s, loss=0.0128, v_num=3]Epoch 4:  58%|█████▊    | 1470/2524 [10:04<07:13,  2.43it/s, loss=0.0158, v_num=3]Epoch 4:  59%|█████▊    | 1480/2524 [10:08<07:09,  2.43it/s, loss=0.0158, v_num=3]Epoch 4:  59%|█████▊    | 1480/2524 [10:08<07:09,  2.43it/s, loss=0.0155, v_num=3]Epoch 4:  59%|█████▉    | 1490/2524 [10:12<07:05,  2.43it/s, loss=0.0155, v_num=3]Epoch 4:  59%|█████▉    | 1490/2524 [10:12<07:05,  2.43it/s, loss=0.0162, v_num=3]Epoch 4:  59%|█████▉    | 1500/2524 [10:16<07:00,  2.43it/s, loss=0.0162, v_num=3]Epoch 4:  59%|█████▉    | 1500/2524 [10:16<07:00,  2.43it/s, loss=0.0192, v_num=3]Epoch 4:  60%|█████▉    | 1510/2524 [10:20<06:56,  2.43it/s, loss=0.0192, v_num=3]Epoch 4:  60%|█████▉    | 1510/2524 [10:20<06:56,  2.43it/s, loss=0.0166, v_num=3]Epoch 4:  60%|██████    | 1520/2524 [10:25<06:52,  2.43it/s, loss=0.0166, v_num=3]Epoch 4:  60%|██████    | 1520/2524 [10:25<06:52,  2.43it/s, loss=0.0146, v_num=3]Epoch 4:  61%|██████    | 1530/2524 [10:29<06:48,  2.43it/s, loss=0.0146, v_num=3]Epoch 4:  61%|██████    | 1530/2524 [10:29<06:48,  2.43it/s, loss=0.0116, v_num=3]Epoch 4:  61%|██████    | 1540/2524 [10:33<06:44,  2.43it/s, loss=0.0116, v_num=3]Epoch 4:  61%|██████    | 1540/2524 [10:33<06:44,  2.43it/s, loss=0.011, v_num=3] Epoch 4:  61%|██████▏   | 1550/2524 [10:37<06:40,  2.43it/s, loss=0.011, v_num=3]Epoch 4:  61%|██████▏   | 1550/2524 [10:37<06:40,  2.43it/s, loss=0.0118, v_num=3]Epoch 4:  62%|██████▏   | 1560/2524 [10:41<06:36,  2.43it/s, loss=0.0118, v_num=3]Epoch 4:  62%|██████▏   | 1560/2524 [10:41<06:36,  2.43it/s, loss=0.0103, v_num=3]Epoch 4:  62%|██████▏   | 1570/2524 [10:45<06:32,  2.43it/s, loss=0.0103, v_num=3]Epoch 4:  62%|██████▏   | 1570/2524 [10:45<06:32,  2.43it/s, loss=0.0119, v_num=3]Epoch 4:  63%|██████▎   | 1580/2524 [10:49<06:28,  2.43it/s, loss=0.0119, v_num=3]Epoch 4:  63%|██████▎   | 1580/2524 [10:49<06:28,  2.43it/s, loss=0.0164, v_num=3]Epoch 4:  63%|██████▎   | 1590/2524 [10:53<06:23,  2.43it/s, loss=0.0164, v_num=3]Epoch 4:  63%|██████▎   | 1590/2524 [10:53<06:23,  2.43it/s, loss=0.0186, v_num=3]Epoch 4:  63%|██████▎   | 1600/2524 [10:57<06:19,  2.43it/s, loss=0.0186, v_num=3]Epoch 4:  63%|██████▎   | 1600/2524 [10:57<06:19,  2.43it/s, loss=0.0154, v_num=3]Epoch 4:  64%|██████▍   | 1610/2524 [11:01<06:15,  2.43it/s, loss=0.0154, v_num=3]Epoch 4:  64%|██████▍   | 1610/2524 [11:02<06:15,  2.43it/s, loss=0.0135, v_num=3]Epoch 4:  64%|██████▍   | 1620/2524 [11:06<06:11,  2.43it/s, loss=0.0135, v_num=3]Epoch 4:  64%|██████▍   | 1620/2524 [11:06<06:11,  2.43it/s, loss=0.0179, v_num=3]Epoch 4:  65%|██████▍   | 1630/2524 [11:10<06:07,  2.43it/s, loss=0.0179, v_num=3]Epoch 4:  65%|██████▍   | 1630/2524 [11:10<06:07,  2.43it/s, loss=0.0168, v_num=3]Epoch 4:  65%|██████▍   | 1640/2524 [11:14<06:03,  2.43it/s, loss=0.0168, v_num=3]Epoch 4:  65%|██████▍   | 1640/2524 [11:14<06:03,  2.43it/s, loss=0.015, v_num=3] Epoch 4:  65%|██████▌   | 1650/2524 [11:18<05:59,  2.43it/s, loss=0.015, v_num=3]Epoch 4:  65%|██████▌   | 1650/2524 [11:18<05:59,  2.43it/s, loss=0.0148, v_num=3]Epoch 4:  66%|██████▌   | 1660/2524 [11:22<05:55,  2.43it/s, loss=0.0148, v_num=3]Epoch 4:  66%|██████▌   | 1660/2524 [11:22<05:55,  2.43it/s, loss=0.0134, v_num=3]Epoch 4:  66%|██████▌   | 1670/2524 [11:26<05:51,  2.43it/s, loss=0.0134, v_num=3]Epoch 4:  66%|██████▌   | 1670/2524 [11:26<05:51,  2.43it/s, loss=0.0171, v_num=3]Epoch 4:  67%|██████▋   | 1680/2524 [11:30<05:46,  2.43it/s, loss=0.0171, v_num=3]Epoch 4:  67%|██████▋   | 1680/2524 [11:30<05:46,  2.43it/s, loss=0.0179, v_num=3]Epoch 4:  67%|██████▋   | 1690/2524 [11:34<05:42,  2.43it/s, loss=0.0179, v_num=3]Epoch 4:  67%|██████▋   | 1690/2524 [11:34<05:42,  2.43it/s, loss=0.0128, v_num=3]Epoch 4:  67%|██████▋   | 1700/2524 [11:38<05:38,  2.43it/s, loss=0.0128, v_num=3]Epoch 4:  67%|██████▋   | 1700/2524 [11:38<05:38,  2.43it/s, loss=0.0117, v_num=3]Epoch 4:  68%|██████▊   | 1710/2524 [11:43<05:34,  2.43it/s, loss=0.0117, v_num=3]Epoch 4:  68%|██████▊   | 1710/2524 [11:43<05:34,  2.43it/s, loss=0.0149, v_num=3]Epoch 4:  68%|██████▊   | 1720/2524 [11:47<05:30,  2.43it/s, loss=0.0149, v_num=3]Epoch 4:  68%|██████▊   | 1720/2524 [11:47<05:30,  2.43it/s, loss=0.0157, v_num=3]Epoch 4:  69%|██████▊   | 1730/2524 [11:51<05:26,  2.43it/s, loss=0.0157, v_num=3]Epoch 4:  69%|██████▊   | 1730/2524 [11:51<05:26,  2.43it/s, loss=0.0135, v_num=3]Epoch 4:  69%|██████▉   | 1740/2524 [11:55<05:22,  2.43it/s, loss=0.0135, v_num=3]Epoch 4:  69%|██████▉   | 1740/2524 [11:55<05:22,  2.43it/s, loss=0.0111, v_num=3]Epoch 4:  69%|██████▉   | 1750/2524 [11:59<05:18,  2.43it/s, loss=0.0111, v_num=3]Epoch 4:  69%|██████▉   | 1750/2524 [11:59<05:18,  2.43it/s, loss=0.0155, v_num=3]Epoch 4:  70%|██████▉   | 1760/2524 [12:03<05:14,  2.43it/s, loss=0.0155, v_num=3]Epoch 4:  70%|██████▉   | 1760/2524 [12:03<05:14,  2.43it/s, loss=0.0152, v_num=3]Epoch 4:  70%|███████   | 1770/2524 [12:07<05:09,  2.43it/s, loss=0.0152, v_num=3]Epoch 4:  70%|███████   | 1770/2524 [12:07<05:09,  2.43it/s, loss=0.0133, v_num=3]Epoch 4:  71%|███████   | 1780/2524 [12:11<05:05,  2.43it/s, loss=0.0133, v_num=3]Epoch 4:  71%|███████   | 1780/2524 [12:11<05:05,  2.43it/s, loss=0.0156, v_num=3]Epoch 4:  71%|███████   | 1790/2524 [12:15<05:01,  2.43it/s, loss=0.0156, v_num=3]Epoch 4:  71%|███████   | 1790/2524 [12:15<05:01,  2.43it/s, loss=0.0141, v_num=3]Epoch 4:  71%|███████▏  | 1800/2524 [12:19<04:57,  2.43it/s, loss=0.0141, v_num=3]Epoch 4:  71%|███████▏  | 1800/2524 [12:19<04:57,  2.43it/s, loss=0.0119, v_num=3]Epoch 4:  72%|███████▏  | 1810/2524 [12:24<04:53,  2.43it/s, loss=0.0119, v_num=3]Epoch 4:  72%|███████▏  | 1810/2524 [12:24<04:53,  2.43it/s, loss=0.0119, v_num=3]Epoch 4:  72%|███████▏  | 1820/2524 [12:28<04:49,  2.43it/s, loss=0.0119, v_num=3]Epoch 4:  72%|███████▏  | 1820/2524 [12:28<04:49,  2.43it/s, loss=0.0145, v_num=3]Epoch 4:  73%|███████▎  | 1830/2524 [12:32<04:45,  2.43it/s, loss=0.0145, v_num=3]Epoch 4:  73%|███████▎  | 1830/2524 [12:32<04:45,  2.43it/s, loss=0.0166, v_num=3]Epoch 4:  73%|███████▎  | 1840/2524 [12:36<04:41,  2.43it/s, loss=0.0166, v_num=3]Epoch 4:  73%|███████▎  | 1840/2524 [12:36<04:41,  2.43it/s, loss=0.0161, v_num=3]Epoch 4:  73%|███████▎  | 1850/2524 [12:40<04:37,  2.43it/s, loss=0.0161, v_num=3]Epoch 4:  73%|███████▎  | 1850/2524 [12:40<04:37,  2.43it/s, loss=0.0159, v_num=3]Epoch 4:  74%|███████▎  | 1860/2524 [12:44<04:32,  2.43it/s, loss=0.0159, v_num=3]Epoch 4:  74%|███████▎  | 1860/2524 [12:44<04:32,  2.43it/s, loss=0.0191, v_num=3]Epoch 4:  74%|███████▍  | 1870/2524 [12:48<04:28,  2.43it/s, loss=0.0191, v_num=3]Epoch 4:  74%|███████▍  | 1870/2524 [12:48<04:28,  2.43it/s, loss=0.019, v_num=3] Epoch 4:  74%|███████▍  | 1880/2524 [12:52<04:24,  2.43it/s, loss=0.019, v_num=3]Epoch 4:  74%|███████▍  | 1880/2524 [12:52<04:24,  2.43it/s, loss=0.0158, v_num=3]Epoch 4:  75%|███████▍  | 1890/2524 [12:56<04:20,  2.43it/s, loss=0.0158, v_num=3]Epoch 4:  75%|███████▍  | 1890/2524 [12:56<04:20,  2.43it/s, loss=0.0143, v_num=3]Epoch 4:  75%|███████▌  | 1900/2524 [13:01<04:16,  2.43it/s, loss=0.0143, v_num=3]Epoch 4:  75%|███████▌  | 1900/2524 [13:01<04:16,  2.43it/s, loss=0.0135, v_num=3]Epoch 4:  76%|███████▌  | 1910/2524 [13:05<04:12,  2.43it/s, loss=0.0135, v_num=3]Epoch 4:  76%|███████▌  | 1910/2524 [13:05<04:12,  2.43it/s, loss=0.0167, v_num=3]Epoch 4:  76%|███████▌  | 1920/2524 [13:09<04:08,  2.43it/s, loss=0.0167, v_num=3]Epoch 4:  76%|███████▌  | 1920/2524 [13:09<04:08,  2.43it/s, loss=0.0174, v_num=3]Epoch 4:  76%|███████▋  | 1930/2524 [13:13<04:04,  2.43it/s, loss=0.0174, v_num=3]Epoch 4:  76%|███████▋  | 1930/2524 [13:13<04:04,  2.43it/s, loss=0.0137, v_num=3]Epoch 4:  77%|███████▋  | 1940/2524 [13:17<04:00,  2.43it/s, loss=0.0137, v_num=3]Epoch 4:  77%|███████▋  | 1940/2524 [13:17<04:00,  2.43it/s, loss=0.0118, v_num=3]Epoch 4:  77%|███████▋  | 1950/2524 [13:21<03:55,  2.43it/s, loss=0.0118, v_num=3]Epoch 4:  77%|███████▋  | 1950/2524 [13:21<03:55,  2.43it/s, loss=0.0116, v_num=3]Epoch 4:  78%|███████▊  | 1960/2524 [13:25<03:51,  2.43it/s, loss=0.0116, v_num=3]Epoch 4:  78%|███████▊  | 1960/2524 [13:25<03:51,  2.43it/s, loss=0.0127, v_num=3]Epoch 4:  78%|███████▊  | 1970/2524 [13:29<03:47,  2.43it/s, loss=0.0127, v_num=3]Epoch 4:  78%|███████▊  | 1970/2524 [13:29<03:47,  2.43it/s, loss=0.0137, v_num=3]Epoch 4:  78%|███████▊  | 1980/2524 [13:33<03:43,  2.43it/s, loss=0.0137, v_num=3]Epoch 4:  78%|███████▊  | 1980/2524 [13:33<03:43,  2.43it/s, loss=0.0156, v_num=3]Epoch 4:  79%|███████▉  | 1990/2524 [13:38<03:39,  2.43it/s, loss=0.0156, v_num=3]Epoch 4:  79%|███████▉  | 1990/2524 [13:38<03:39,  2.43it/s, loss=0.0157, v_num=3]Epoch 4:  79%|███████▉  | 2000/2524 [13:42<03:35,  2.43it/s, loss=0.0157, v_num=3]Epoch 4:  79%|███████▉  | 2000/2524 [13:42<03:35,  2.43it/s, loss=0.0127, v_num=3]Epoch 4:  80%|███████▉  | 2010/2524 [13:46<03:31,  2.43it/s, loss=0.0127, v_num=3]Epoch 4:  80%|███████▉  | 2010/2524 [13:46<03:31,  2.43it/s, loss=0.0141, v_num=3]Epoch 4:  80%|████████  | 2020/2524 [13:50<03:27,  2.43it/s, loss=0.0141, v_num=3]Epoch 4:  80%|████████  | 2020/2524 [13:50<03:27,  2.43it/s, loss=0.0165, v_num=3]Epoch 4:  80%|████████  | 2030/2524 [13:54<03:23,  2.43it/s, loss=0.0165, v_num=3]Epoch 4:  80%|████████  | 2030/2524 [13:54<03:23,  2.43it/s, loss=0.0189, v_num=3]Epoch 4:  81%|████████  | 2040/2524 [13:58<03:18,  2.43it/s, loss=0.0189, v_num=3]Epoch 4:  81%|████████  | 2040/2524 [13:58<03:18,  2.43it/s, loss=0.0175, v_num=3]Epoch 4:  81%|████████  | 2050/2524 [14:02<03:14,  2.43it/s, loss=0.0175, v_num=3]Epoch 4:  81%|████████  | 2050/2524 [14:02<03:14,  2.43it/s, loss=0.0173, v_num=3]Epoch 4:  82%|████████▏ | 2060/2524 [14:06<03:10,  2.43it/s, loss=0.0173, v_num=3]Epoch 4:  82%|████████▏ | 2060/2524 [14:06<03:10,  2.43it/s, loss=0.0173, v_num=3]Epoch 4:  82%|████████▏ | 2070/2524 [14:10<03:06,  2.43it/s, loss=0.0173, v_num=3]Epoch 4:  82%|████████▏ | 2070/2524 [14:10<03:06,  2.43it/s, loss=0.0129, v_num=3]Epoch 4:  82%|████████▏ | 2080/2524 [14:14<03:02,  2.43it/s, loss=0.0129, v_num=3]Epoch 4:  82%|████████▏ | 2080/2524 [14:15<03:02,  2.43it/s, loss=0.0134, v_num=3]Epoch 4:  83%|████████▎ | 2090/2524 [14:19<02:58,  2.43it/s, loss=0.0134, v_num=3]Epoch 4:  83%|████████▎ | 2090/2524 [14:19<02:58,  2.43it/s, loss=0.0127, v_num=3]Epoch 4:  83%|████████▎ | 2100/2524 [14:23<02:54,  2.43it/s, loss=0.0127, v_num=3]Epoch 4:  83%|████████▎ | 2100/2524 [14:23<02:54,  2.43it/s, loss=0.0146, v_num=3]Epoch 4:  84%|████████▎ | 2110/2524 [14:27<02:50,  2.43it/s, loss=0.0146, v_num=3]Epoch 4:  84%|████████▎ | 2110/2524 [14:27<02:50,  2.43it/s, loss=0.0144, v_num=3]Epoch 4:  84%|████████▍ | 2120/2524 [14:31<02:46,  2.43it/s, loss=0.0144, v_num=3]Epoch 4:  84%|████████▍ | 2120/2524 [14:31<02:46,  2.43it/s, loss=0.0129, v_num=3]Epoch 4:  84%|████████▍ | 2130/2524 [14:35<02:41,  2.43it/s, loss=0.0129, v_num=3]Epoch 4:  84%|████████▍ | 2130/2524 [14:35<02:41,  2.43it/s, loss=0.0164, v_num=3]Epoch 4:  85%|████████▍ | 2140/2524 [14:39<02:37,  2.43it/s, loss=0.0164, v_num=3]Epoch 4:  85%|████████▍ | 2140/2524 [14:39<02:37,  2.43it/s, loss=0.0199, v_num=3]Epoch 4:  85%|████████▌ | 2150/2524 [14:43<02:33,  2.43it/s, loss=0.0199, v_num=3]Epoch 4:  85%|████████▌ | 2150/2524 [14:43<02:33,  2.43it/s, loss=0.0167, v_num=3]Epoch 4:  86%|████████▌ | 2160/2524 [14:47<02:29,  2.43it/s, loss=0.0167, v_num=3]Epoch 4:  86%|████████▌ | 2160/2524 [14:47<02:29,  2.43it/s, loss=0.0122, v_num=3]Epoch 4:  86%|████████▌ | 2170/2524 [14:51<02:25,  2.43it/s, loss=0.0122, v_num=3]Epoch 4:  86%|████████▌ | 2170/2524 [14:51<02:25,  2.43it/s, loss=0.0135, v_num=3]Epoch 4:  86%|████████▋ | 2180/2524 [14:56<02:21,  2.43it/s, loss=0.0135, v_num=3]Epoch 4:  86%|████████▋ | 2180/2524 [14:56<02:21,  2.43it/s, loss=0.0135, v_num=3]Epoch 4:  87%|████████▋ | 2190/2524 [15:00<02:17,  2.43it/s, loss=0.0135, v_num=3]Epoch 4:  87%|████████▋ | 2190/2524 [15:00<02:17,  2.43it/s, loss=0.0131, v_num=3]Epoch 4:  87%|████████▋ | 2200/2524 [15:04<02:13,  2.43it/s, loss=0.0131, v_num=3]Epoch 4:  87%|████████▋ | 2200/2524 [15:04<02:13,  2.43it/s, loss=0.0118, v_num=3]Epoch 4:  88%|████████▊ | 2210/2524 [15:08<02:09,  2.43it/s, loss=0.0118, v_num=3]Epoch 4:  88%|████████▊ | 2210/2524 [15:08<02:09,  2.43it/s, loss=0.0118, v_num=3]Epoch 4:  88%|████████▊ | 2220/2524 [15:12<02:04,  2.43it/s, loss=0.0118, v_num=3]Epoch 4:  88%|████████▊ | 2220/2524 [15:12<02:04,  2.43it/s, loss=0.0128, v_num=3]Epoch 4:  88%|████████▊ | 2230/2524 [15:16<02:00,  2.43it/s, loss=0.0128, v_num=3]Epoch 4:  88%|████████▊ | 2230/2524 [15:16<02:00,  2.43it/s, loss=0.0105, v_num=3]Epoch 4:  89%|████████▊ | 2240/2524 [15:20<01:56,  2.43it/s, loss=0.0105, v_num=3]Epoch 4:  89%|████████▊ | 2240/2524 [15:20<01:56,  2.43it/s, loss=0.0101, v_num=3]Epoch 4:  89%|████████▉ | 2250/2524 [15:24<01:52,  2.43it/s, loss=0.0101, v_num=3]Epoch 4:  89%|████████▉ | 2250/2524 [15:24<01:52,  2.43it/s, loss=0.0157, v_num=3]Epoch 4:  90%|████████▉ | 2260/2524 [15:28<01:48,  2.43it/s, loss=0.0157, v_num=3]Epoch 4:  90%|████████▉ | 2260/2524 [15:29<01:48,  2.43it/s, loss=0.0157, v_num=3]Epoch 4:  90%|████████▉ | 2270/2524 [15:33<01:44,  2.43it/s, loss=0.0157, v_num=3]Epoch 4:  90%|████████▉ | 2270/2524 [15:33<01:44,  2.43it/s, loss=0.0123, v_num=3]Epoch 4:  90%|█████████ | 2280/2524 [15:37<01:40,  2.43it/s, loss=0.0123, v_num=3]Epoch 4:  90%|█████████ | 2280/2524 [15:37<01:40,  2.43it/s, loss=0.0113, v_num=3]Epoch 4:  91%|█████████ | 2290/2524 [15:41<01:36,  2.43it/s, loss=0.0113, v_num=3]Epoch 4:  91%|█████████ | 2290/2524 [15:41<01:36,  2.43it/s, loss=0.0114, v_num=3]Epoch 4:  91%|█████████ | 2300/2524 [15:45<01:32,  2.43it/s, loss=0.0114, v_num=3]Epoch 4:  91%|█████████ | 2300/2524 [15:45<01:32,  2.43it/s, loss=0.0124, v_num=3]Epoch 4:  92%|█████████▏| 2310/2524 [15:49<01:27,  2.43it/s, loss=0.0124, v_num=3]Epoch 4:  92%|█████████▏| 2310/2524 [15:49<01:27,  2.43it/s, loss=0.0129, v_num=3]Epoch 4:  92%|█████████▏| 2320/2524 [15:53<01:23,  2.43it/s, loss=0.0129, v_num=3]Epoch 4:  92%|█████████▏| 2320/2524 [15:53<01:23,  2.43it/s, loss=0.0128, v_num=3]Epoch 4:  92%|█████████▏| 2330/2524 [15:57<01:19,  2.43it/s, loss=0.0128, v_num=3]Epoch 4:  92%|█████████▏| 2330/2524 [15:57<01:19,  2.43it/s, loss=0.0126, v_num=3]Epoch 4:  93%|█████████▎| 2340/2524 [16:01<01:15,  2.43it/s, loss=0.0126, v_num=3]Epoch 4:  93%|█████████▎| 2340/2524 [16:01<01:15,  2.43it/s, loss=0.0129, v_num=3]Epoch 4:  93%|█████████▎| 2350/2524 [16:05<01:11,  2.43it/s, loss=0.0129, v_num=3]Epoch 4:  93%|█████████▎| 2350/2524 [16:05<01:11,  2.43it/s, loss=0.0108, v_num=3]Epoch 4:  94%|█████████▎| 2360/2524 [16:10<01:07,  2.43it/s, loss=0.0108, v_num=3]Epoch 4:  94%|█████████▎| 2360/2524 [16:10<01:07,  2.43it/s, loss=0.0118, v_num=3]Epoch 4:  94%|█████████▍| 2370/2524 [16:14<01:03,  2.43it/s, loss=0.0118, v_num=3]Epoch 4:  94%|█████████▍| 2370/2524 [16:14<01:03,  2.43it/s, loss=0.0164, v_num=3]Epoch 4:  94%|█████████▍| 2380/2524 [16:18<00:59,  2.43it/s, loss=0.0164, v_num=3]Epoch 4:  94%|█████████▍| 2380/2524 [16:18<00:59,  2.43it/s, loss=0.0162, v_num=3]Epoch 4:  95%|█████████▍| 2390/2524 [16:22<00:55,  2.43it/s, loss=0.0162, v_num=3]Epoch 4:  95%|█████████▍| 2390/2524 [16:22<00:55,  2.43it/s, loss=0.0139, v_num=3]Epoch 4:  95%|█████████▌| 2400/2524 [16:26<00:50,  2.43it/s, loss=0.0139, v_num=3]Epoch 4:  95%|█████████▌| 2400/2524 [16:26<00:50,  2.43it/s, loss=0.0143, v_num=3]Epoch 4:  95%|█████████▌| 2410/2524 [16:30<00:46,  2.43it/s, loss=0.0143, v_num=3]Epoch 4:  95%|█████████▌| 2410/2524 [16:30<00:46,  2.43it/s, loss=0.0134, v_num=3]Epoch 4:  96%|█████████▌| 2420/2524 [16:34<00:42,  2.43it/s, loss=0.0134, v_num=3]Epoch 4:  96%|█████████▌| 2420/2524 [16:34<00:42,  2.43it/s, loss=0.0127, v_num=3]Epoch 4:  96%|█████████▋| 2430/2524 [16:38<00:38,  2.43it/s, loss=0.0127, v_num=3]Epoch 4:  96%|█████████▋| 2430/2524 [16:38<00:38,  2.43it/s, loss=0.0139, v_num=3]Epoch 4:  97%|█████████▋| 2440/2524 [16:42<00:34,  2.43it/s, loss=0.0139, v_num=3]Epoch 4:  97%|█████████▋| 2440/2524 [16:42<00:34,  2.43it/s, loss=0.0145, v_num=3]Epoch 4:  97%|█████████▋| 2450/2524 [16:47<00:30,  2.43it/s, loss=0.0145, v_num=3]Epoch 4:  97%|█████████▋| 2450/2524 [16:47<00:30,  2.43it/s, loss=0.0125, v_num=3]Epoch 4:  97%|█████████▋| 2460/2524 [16:51<00:26,  2.43it/s, loss=0.0125, v_num=3]Epoch 4:  97%|█████████▋| 2460/2524 [16:51<00:26,  2.43it/s, loss=0.0121, v_num=3]Epoch 4:  98%|█████████▊| 2470/2524 [16:55<00:22,  2.43it/s, loss=0.0121, v_num=3]Epoch 4:  98%|█████████▊| 2470/2524 [16:55<00:22,  2.43it/s, loss=0.0128, v_num=3]Epoch 4:  98%|█████████▊| 2480/2524 [16:59<00:18,  2.43it/s, loss=0.0128, v_num=3]Epoch 4:  98%|█████████▊| 2480/2524 [16:59<00:18,  2.43it/s, loss=0.0117, v_num=3]Epoch 4:  99%|█████████▊| 2490/2524 [17:03<00:13,  2.43it/s, loss=0.0117, v_num=3]Epoch 4:  99%|█████████▊| 2490/2524 [17:03<00:13,  2.43it/s, loss=0.0142, v_num=3]Epoch 4:  99%|█████████▉| 2500/2524 [17:07<00:09,  2.43it/s, loss=0.0142, v_num=3]Epoch 4:  99%|█████████▉| 2500/2524 [17:07<00:09,  2.43it/s, loss=0.0146, v_num=3]Epoch 4:  99%|█████████▉| 2510/2524 [17:11<00:05,  2.43it/s, loss=0.0146, v_num=3]Epoch 4:  99%|█████████▉| 2510/2524 [17:11<00:05,  2.43it/s, loss=0.0134, v_num=3]Epoch 4: 100%|█████████▉| 2520/2524 [17:15<00:01,  2.43it/s, loss=0.0134, v_num=3]Epoch 4: 100%|█████████▉| 2520/2524 [17:15<00:01,  2.43it/s, loss=0.015, v_num=3] Epoch 4: 100%|██████████| 2524/2524 [17:17<00:00,  2.43it/s, loss=0.015, v_num=3]Epoch 4: 100%|██████████| 2524/2524 [17:17<00:00,  2.43it/s, loss=0.0147, v_num=3]Epoch 4: 100%|██████████| 2524/2524 [17:17<00:00,  2.43it/s, loss=0.0147, v_num=3]Epoch 4:   0%|          | 0/2524 [00:00<?, ?it/s, loss=0.0147, v_num=3]           Epoch 5:   0%|          | 0/2524 [00:00<?, ?it/s, loss=0.0147, v_num=3]Epoch 5:   0%|          | 10/2524 [00:04<18:37,  2.25it/s, loss=0.0147, v_num=3]Epoch 5:   0%|          | 10/2524 [00:04<18:39,  2.25it/s, loss=0.0127, v_num=3]Epoch 5:   1%|          | 20/2524 [00:08<17:48,  2.34it/s, loss=0.0127, v_num=3]Epoch 5:   1%|          | 20/2524 [00:08<17:49,  2.34it/s, loss=0.0129, v_num=3]Epoch 5:   1%|          | 30/2524 [00:12<17:29,  2.38it/s, loss=0.0129, v_num=3]Epoch 5:   1%|          | 30/2524 [00:12<17:29,  2.38it/s, loss=0.0102, v_num=3]Epoch 5:   2%|▏         | 40/2524 [00:16<17:20,  2.39it/s, loss=0.0102, v_num=3]Epoch 5:   2%|▏         | 40/2524 [00:16<17:21,  2.39it/s, loss=0.01, v_num=3]  Epoch 5:   2%|▏         | 50/2524 [00:20<17:11,  2.40it/s, loss=0.01, v_num=3]Epoch 5:   2%|▏         | 50/2524 [00:20<17:11,  2.40it/s, loss=0.00998, v_num=3]Epoch 5:   2%|▏         | 60/2524 [00:24<17:03,  2.41it/s, loss=0.00998, v_num=3]Epoch 5:   2%|▏         | 60/2524 [00:24<17:04,  2.41it/s, loss=0.0102, v_num=3] Epoch 5:   3%|▎         | 70/2524 [00:29<16:57,  2.41it/s, loss=0.0102, v_num=3]Epoch 5:   3%|▎         | 70/2524 [00:29<16:57,  2.41it/s, loss=0.0138, v_num=3]Epoch 5:   3%|▎         | 80/2524 [00:33<16:52,  2.41it/s, loss=0.0138, v_num=3]Epoch 5:   3%|▎         | 80/2524 [00:33<16:53,  2.41it/s, loss=0.0141, v_num=3]Epoch 5:   4%|▎         | 90/2524 [00:37<16:49,  2.41it/s, loss=0.0141, v_num=3]Epoch 5:   4%|▎         | 90/2524 [00:37<16:50,  2.41it/s, loss=0.0108, v_num=3]Epoch 5:   4%|▍         | 100/2524 [00:41<16:44,  2.41it/s, loss=0.0108, v_num=3]Epoch 5:   4%|▍         | 100/2524 [00:41<16:44,  2.41it/s, loss=0.0121, v_num=3]Epoch 5:   4%|▍         | 110/2524 [00:45<16:39,  2.42it/s, loss=0.0121, v_num=3]Epoch 5:   4%|▍         | 110/2524 [00:45<16:39,  2.42it/s, loss=0.0127, v_num=3]Epoch 5:   5%|▍         | 120/2524 [00:49<16:34,  2.42it/s, loss=0.0127, v_num=3]Epoch 5:   5%|▍         | 120/2524 [00:49<16:34,  2.42it/s, loss=0.0141, v_num=3]Epoch 5:   5%|▌         | 130/2524 [00:53<16:29,  2.42it/s, loss=0.0141, v_num=3]Epoch 5:   5%|▌         | 130/2524 [00:53<16:29,  2.42it/s, loss=0.0149, v_num=3]Epoch 5:   6%|▌         | 140/2524 [00:57<16:25,  2.42it/s, loss=0.0149, v_num=3]Epoch 5:   6%|▌         | 140/2524 [00:57<16:25,  2.42it/s, loss=0.0123, v_num=3]Epoch 5:   6%|▌         | 150/2524 [01:01<16:20,  2.42it/s, loss=0.0123, v_num=3]Epoch 5:   6%|▌         | 150/2524 [01:01<16:20,  2.42it/s, loss=0.0115, v_num=3]Epoch 5:   6%|▋         | 160/2524 [01:06<16:15,  2.42it/s, loss=0.0115, v_num=3]Epoch 5:   6%|▋         | 160/2524 [01:06<16:15,  2.42it/s, loss=0.0114, v_num=3]Epoch 5:   7%|▋         | 170/2524 [01:10<16:11,  2.42it/s, loss=0.0114, v_num=3]Epoch 5:   7%|▋         | 170/2524 [01:10<16:11,  2.42it/s, loss=0.0124, v_num=3]Epoch 5:   7%|▋         | 180/2524 [01:14<16:07,  2.42it/s, loss=0.0124, v_num=3]Epoch 5:   7%|▋         | 180/2524 [01:14<16:07,  2.42it/s, loss=0.0107, v_num=3]Epoch 5:   8%|▊         | 190/2524 [01:18<16:03,  2.42it/s, loss=0.0107, v_num=3]Epoch 5:   8%|▊         | 190/2524 [01:18<16:03,  2.42it/s, loss=0.00925, v_num=3]Epoch 5:   8%|▊         | 200/2524 [01:22<15:59,  2.42it/s, loss=0.00925, v_num=3]Epoch 5:   8%|▊         | 200/2524 [01:22<15:59,  2.42it/s, loss=0.0118, v_num=3] Epoch 5:   8%|▊         | 210/2524 [01:26<15:54,  2.42it/s, loss=0.0118, v_num=3]Epoch 5:   8%|▊         | 210/2524 [01:26<15:54,  2.42it/s, loss=0.0136, v_num=3]Epoch 5:   9%|▊         | 220/2524 [01:30<15:50,  2.43it/s, loss=0.0136, v_num=3]Epoch 5:   9%|▊         | 220/2524 [01:30<15:50,  2.42it/s, loss=0.0164, v_num=3]Epoch 5:   9%|▉         | 230/2524 [01:34<15:45,  2.43it/s, loss=0.0164, v_num=3]Epoch 5:   9%|▉         | 230/2524 [01:34<15:45,  2.43it/s, loss=0.0167, v_num=3]Epoch 5:  10%|▉         | 240/2524 [01:38<15:41,  2.43it/s, loss=0.0167, v_num=3]Epoch 5:  10%|▉         | 240/2524 [01:38<15:41,  2.43it/s, loss=0.0142, v_num=3]Epoch 5:  10%|▉         | 250/2524 [01:43<15:37,  2.43it/s, loss=0.0142, v_num=3]Epoch 5:  10%|▉         | 250/2524 [01:43<15:37,  2.43it/s, loss=0.0127, v_num=3]Epoch 5:  10%|█         | 260/2524 [01:47<15:32,  2.43it/s, loss=0.0127, v_num=3]Epoch 5:  10%|█         | 260/2524 [01:47<15:32,  2.43it/s, loss=0.0146, v_num=3]Epoch 5:  11%|█         | 270/2524 [01:51<15:28,  2.43it/s, loss=0.0146, v_num=3]Epoch 5:  11%|█         | 270/2524 [01:51<15:28,  2.43it/s, loss=0.0134, v_num=3]Epoch 5:  11%|█         | 280/2524 [01:55<15:24,  2.43it/s, loss=0.0134, v_num=3]Epoch 5:  11%|█         | 280/2524 [01:55<15:24,  2.43it/s, loss=0.0123, v_num=3]Epoch 5:  11%|█▏        | 290/2524 [01:59<15:20,  2.43it/s, loss=0.0123, v_num=3]Epoch 5:  11%|█▏        | 290/2524 [01:59<15:20,  2.43it/s, loss=0.013, v_num=3] Epoch 5:  12%|█▏        | 300/2524 [02:03<15:16,  2.43it/s, loss=0.013, v_num=3]Epoch 5:  12%|█▏        | 300/2524 [02:03<15:16,  2.43it/s, loss=0.0108, v_num=3]Epoch 5:  12%|█▏        | 310/2524 [02:07<15:12,  2.43it/s, loss=0.0108, v_num=3]Epoch 5:  12%|█▏        | 310/2524 [02:07<15:12,  2.43it/s, loss=0.0116, v_num=3]Epoch 5:  13%|█▎        | 320/2524 [02:11<15:07,  2.43it/s, loss=0.0116, v_num=3]Epoch 5:  13%|█▎        | 320/2524 [02:11<15:07,  2.43it/s, loss=0.012, v_num=3] Epoch 5:  13%|█▎        | 330/2524 [02:15<15:03,  2.43it/s, loss=0.012, v_num=3]Epoch 5:  13%|█▎        | 330/2524 [02:15<15:03,  2.43it/s, loss=0.0101, v_num=3]Epoch 5:  13%|█▎        | 340/2524 [02:20<14:59,  2.43it/s, loss=0.0101, v_num=3]Epoch 5:  13%|█▎        | 340/2524 [02:20<14:59,  2.43it/s, loss=0.0102, v_num=3]Epoch 5:  14%|█▍        | 350/2524 [02:24<14:55,  2.43it/s, loss=0.0102, v_num=3]Epoch 5:  14%|█▍        | 350/2524 [02:24<14:55,  2.43it/s, loss=0.0112, v_num=3]Epoch 5:  14%|█▍        | 360/2524 [02:28<14:51,  2.43it/s, loss=0.0112, v_num=3]Epoch 5:  14%|█▍        | 360/2524 [02:28<14:51,  2.43it/s, loss=0.0107, v_num=3]Epoch 5:  15%|█▍        | 370/2524 [02:32<14:46,  2.43it/s, loss=0.0107, v_num=3]Epoch 5:  15%|█▍        | 370/2524 [02:32<14:46,  2.43it/s, loss=0.0115, v_num=3]Epoch 5:  15%|█▌        | 380/2524 [02:36<14:42,  2.43it/s, loss=0.0115, v_num=3]Epoch 5:  15%|█▌        | 380/2524 [02:36<14:42,  2.43it/s, loss=0.0127, v_num=3]Epoch 5:  15%|█▌        | 390/2524 [02:40<14:39,  2.43it/s, loss=0.0127, v_num=3]Epoch 5:  15%|█▌        | 390/2524 [02:40<14:39,  2.43it/s, loss=0.0132, v_num=3]Epoch 5:  16%|█▌        | 400/2524 [02:44<14:34,  2.43it/s, loss=0.0132, v_num=3]Epoch 5:  16%|█▌        | 400/2524 [02:44<14:34,  2.43it/s, loss=0.0138, v_num=3]Epoch 5:  16%|█▌        | 410/2524 [02:48<14:30,  2.43it/s, loss=0.0138, v_num=3]Epoch 5:  16%|█▌        | 410/2524 [02:48<14:30,  2.43it/s, loss=0.0133, v_num=3]Epoch 5:  17%|█▋        | 420/2524 [02:52<14:26,  2.43it/s, loss=0.0133, v_num=3]Epoch 5:  17%|█▋        | 420/2524 [02:52<14:26,  2.43it/s, loss=0.00904, v_num=3]Epoch 5:  17%|█▋        | 430/2524 [02:57<14:22,  2.43it/s, loss=0.00904, v_num=3]Epoch 5:  17%|█▋        | 430/2524 [02:57<14:22,  2.43it/s, loss=0.00811, v_num=3]Epoch 5:  17%|█▋        | 440/2524 [03:01<14:18,  2.43it/s, loss=0.00811, v_num=3]Epoch 5:  17%|█▋        | 440/2524 [03:01<14:18,  2.43it/s, loss=0.0119, v_num=3] Epoch 5:  18%|█▊        | 450/2524 [03:05<14:13,  2.43it/s, loss=0.0119, v_num=3]Epoch 5:  18%|█▊        | 450/2524 [03:05<14:13,  2.43it/s, loss=0.0127, v_num=3]Epoch 5:  18%|█▊        | 460/2524 [03:09<14:09,  2.43it/s, loss=0.0127, v_num=3]Epoch 5:  18%|█▊        | 460/2524 [03:09<14:09,  2.43it/s, loss=0.0126, v_num=3]Epoch 5:  19%|█▊        | 470/2524 [03:13<14:05,  2.43it/s, loss=0.0126, v_num=3]Epoch 5:  19%|█▊        | 470/2524 [03:13<14:05,  2.43it/s, loss=0.0125, v_num=3]Epoch 5:  19%|█▉        | 480/2524 [03:17<14:01,  2.43it/s, loss=0.0125, v_num=3]Epoch 5:  19%|█▉        | 480/2524 [03:17<14:01,  2.43it/s, loss=0.0124, v_num=3]Epoch 5:  19%|█▉        | 490/2524 [03:21<13:57,  2.43it/s, loss=0.0124, v_num=3]Epoch 5:  19%|█▉        | 490/2524 [03:21<13:57,  2.43it/s, loss=0.0123, v_num=3]Epoch 5:  20%|█▉        | 500/2524 [03:25<13:53,  2.43it/s, loss=0.0123, v_num=3]Epoch 5:  20%|█▉        | 500/2524 [03:25<13:53,  2.43it/s, loss=0.0123, v_num=3]Epoch 5:  20%|██        | 510/2524 [03:29<13:49,  2.43it/s, loss=0.0123, v_num=3]Epoch 5:  20%|██        | 510/2524 [03:29<13:49,  2.43it/s, loss=0.0119, v_num=3]Epoch 5:  21%|██        | 520/2524 [03:34<13:44,  2.43it/s, loss=0.0119, v_num=3]Epoch 5:  21%|██        | 520/2524 [03:34<13:44,  2.43it/s, loss=0.01, v_num=3]  Epoch 5:  21%|██        | 530/2524 [03:38<13:40,  2.43it/s, loss=0.01, v_num=3]Epoch 5:  21%|██        | 530/2524 [03:38<13:40,  2.43it/s, loss=0.0104, v_num=3]Epoch 5:  21%|██▏       | 540/2524 [03:42<13:36,  2.43it/s, loss=0.0104, v_num=3]Epoch 5:  21%|██▏       | 540/2524 [03:42<13:36,  2.43it/s, loss=0.0107, v_num=3]Epoch 5:  22%|██▏       | 550/2524 [03:46<13:32,  2.43it/s, loss=0.0107, v_num=3]Epoch 5:  22%|██▏       | 550/2524 [03:46<13:32,  2.43it/s, loss=0.0102, v_num=3]Epoch 5:  22%|██▏       | 560/2524 [03:50<13:28,  2.43it/s, loss=0.0102, v_num=3]Epoch 5:  22%|██▏       | 560/2524 [03:50<13:28,  2.43it/s, loss=0.0145, v_num=3]Epoch 5:  23%|██▎       | 570/2524 [03:54<13:24,  2.43it/s, loss=0.0145, v_num=3]Epoch 5:  23%|██▎       | 570/2524 [03:54<13:24,  2.43it/s, loss=0.017, v_num=3] Epoch 5:  23%|██▎       | 580/2524 [03:58<13:20,  2.43it/s, loss=0.017, v_num=3]Epoch 5:  23%|██▎       | 580/2524 [03:58<13:20,  2.43it/s, loss=0.0147, v_num=3]Epoch 5:  23%|██▎       | 590/2524 [04:02<13:16,  2.43it/s, loss=0.0147, v_num=3]Epoch 5:  23%|██▎       | 590/2524 [04:02<13:16,  2.43it/s, loss=0.016, v_num=3] Epoch 5:  24%|██▍       | 600/2524 [04:06<13:11,  2.43it/s, loss=0.016, v_num=3]Epoch 5:  24%|██▍       | 600/2524 [04:06<13:12,  2.43it/s, loss=0.0133, v_num=3]Epoch 5:  24%|██▍       | 610/2524 [04:11<13:07,  2.43it/s, loss=0.0133, v_num=3]Epoch 5:  24%|██▍       | 610/2524 [04:11<13:07,  2.43it/s, loss=0.012, v_num=3] Epoch 5:  25%|██▍       | 620/2524 [04:15<13:03,  2.43it/s, loss=0.012, v_num=3]Epoch 5:  25%|██▍       | 620/2524 [04:15<13:03,  2.43it/s, loss=0.0153, v_num=3]Epoch 5:  25%|██▍       | 630/2524 [04:19<12:59,  2.43it/s, loss=0.0153, v_num=3]Epoch 5:  25%|██▍       | 630/2524 [04:19<12:59,  2.43it/s, loss=0.0137, v_num=3]Epoch 5:  25%|██▌       | 640/2524 [04:23<12:55,  2.43it/s, loss=0.0137, v_num=3]Epoch 5:  25%|██▌       | 640/2524 [04:23<12:55,  2.43it/s, loss=0.0112, v_num=3]Epoch 5:  26%|██▌       | 650/2524 [04:27<12:51,  2.43it/s, loss=0.0112, v_num=3]Epoch 5:  26%|██▌       | 650/2524 [04:27<12:51,  2.43it/s, loss=0.0105, v_num=3]Epoch 5:  26%|██▌       | 660/2524 [04:31<12:46,  2.43it/s, loss=0.0105, v_num=3]Epoch 5:  26%|██▌       | 660/2524 [04:31<12:46,  2.43it/s, loss=0.0109, v_num=3]Epoch 5:  27%|██▋       | 670/2524 [04:35<12:42,  2.43it/s, loss=0.0109, v_num=3]Epoch 5:  27%|██▋       | 670/2524 [04:35<12:42,  2.43it/s, loss=0.00933, v_num=3]Epoch 5:  27%|██▋       | 680/2524 [04:39<12:38,  2.43it/s, loss=0.00933, v_num=3]Epoch 5:  27%|██▋       | 680/2524 [04:39<12:38,  2.43it/s, loss=0.00822, v_num=3]Epoch 5:  27%|██▋       | 690/2524 [04:43<12:34,  2.43it/s, loss=0.00822, v_num=3]Epoch 5:  27%|██▋       | 690/2524 [04:43<12:34,  2.43it/s, loss=0.01, v_num=3]   Epoch 5:  28%|██▊       | 700/2524 [04:48<12:30,  2.43it/s, loss=0.01, v_num=3]Epoch 5:  28%|██▊       | 700/2524 [04:48<12:30,  2.43it/s, loss=0.00948, v_num=3]Epoch 5:  28%|██▊       | 710/2524 [04:52<12:26,  2.43it/s, loss=0.00948, v_num=3]Epoch 5:  28%|██▊       | 710/2524 [04:52<12:26,  2.43it/s, loss=0.00843, v_num=3]Epoch 5:  29%|██▊       | 720/2524 [04:56<12:22,  2.43it/s, loss=0.00843, v_num=3]Epoch 5:  29%|██▊       | 720/2524 [04:56<12:22,  2.43it/s, loss=0.00897, v_num=3]Epoch 5:  29%|██▉       | 730/2524 [05:00<12:18,  2.43it/s, loss=0.00897, v_num=3]Epoch 5:  29%|██▉       | 730/2524 [05:00<12:18,  2.43it/s, loss=0.00878, v_num=3]Epoch 5:  29%|██▉       | 740/2524 [05:04<12:14,  2.43it/s, loss=0.00878, v_num=3]Epoch 5:  29%|██▉       | 740/2524 [05:04<12:14,  2.43it/s, loss=0.0108, v_num=3] Epoch 5:  30%|██▉       | 750/2524 [05:08<12:09,  2.43it/s, loss=0.0108, v_num=3]Epoch 5:  30%|██▉       | 750/2524 [05:08<12:09,  2.43it/s, loss=0.0123, v_num=3]Epoch 5:  30%|███       | 760/2524 [05:12<12:05,  2.43it/s, loss=0.0123, v_num=3]Epoch 5:  30%|███       | 760/2524 [05:12<12:05,  2.43it/s, loss=0.00916, v_num=3]Epoch 5:  31%|███       | 770/2524 [05:16<12:01,  2.43it/s, loss=0.00916, v_num=3]Epoch 5:  31%|███       | 770/2524 [05:16<12:01,  2.43it/s, loss=0.00716, v_num=3]Epoch 5:  31%|███       | 780/2524 [05:20<11:57,  2.43it/s, loss=0.00716, v_num=3]Epoch 5:  31%|███       | 780/2524 [05:20<11:57,  2.43it/s, loss=0.0112, v_num=3] Epoch 5:  31%|███▏      | 790/2524 [05:25<11:53,  2.43it/s, loss=0.0112, v_num=3]Epoch 5:  31%|███▏      | 790/2524 [05:25<11:53,  2.43it/s, loss=0.0139, v_num=3]Epoch 5:  32%|███▏      | 800/2524 [05:29<11:49,  2.43it/s, loss=0.0139, v_num=3]Epoch 5:  32%|███▏      | 800/2524 [05:29<11:49,  2.43it/s, loss=0.0122, v_num=3]Epoch 5:  32%|███▏      | 810/2524 [05:33<11:45,  2.43it/s, loss=0.0122, v_num=3]Epoch 5:  32%|███▏      | 810/2524 [05:33<11:45,  2.43it/s, loss=0.0108, v_num=3]Epoch 5:  32%|███▏      | 820/2524 [05:37<11:41,  2.43it/s, loss=0.0108, v_num=3]Epoch 5:  32%|███▏      | 820/2524 [05:37<11:41,  2.43it/s, loss=0.0107, v_num=3]Epoch 5:  33%|███▎      | 830/2524 [05:41<11:36,  2.43it/s, loss=0.0107, v_num=3]Epoch 5:  33%|███▎      | 830/2524 [05:41<11:36,  2.43it/s, loss=0.00937, v_num=3]Epoch 5:  33%|███▎      | 840/2524 [05:45<11:32,  2.43it/s, loss=0.00937, v_num=3]Epoch 5:  33%|███▎      | 840/2524 [05:45<11:32,  2.43it/s, loss=0.00926, v_num=3]Epoch 5:  34%|███▎      | 850/2524 [05:49<11:28,  2.43it/s, loss=0.00926, v_num=3]Epoch 5:  34%|███▎      | 850/2524 [05:49<11:28,  2.43it/s, loss=0.0126, v_num=3] Epoch 5:  34%|███▍      | 860/2524 [05:53<11:24,  2.43it/s, loss=0.0126, v_num=3]Epoch 5:  34%|███▍      | 860/2524 [05:53<11:24,  2.43it/s, loss=0.0114, v_num=3]Epoch 5:  34%|███▍      | 870/2524 [05:57<11:20,  2.43it/s, loss=0.0114, v_num=3]Epoch 5:  34%|███▍      | 870/2524 [05:57<11:20,  2.43it/s, loss=0.011, v_num=3] Epoch 5:  35%|███▍      | 880/2524 [06:01<11:16,  2.43it/s, loss=0.011, v_num=3]Epoch 5:  35%|███▍      | 880/2524 [06:01<11:16,  2.43it/s, loss=0.0132, v_num=3]Epoch 5:  35%|███▌      | 890/2524 [06:06<11:12,  2.43it/s, loss=0.0132, v_num=3]Epoch 5:  35%|███▌      | 890/2524 [06:06<11:12,  2.43it/s, loss=0.0129, v_num=3]Epoch 5:  36%|███▌      | 900/2524 [06:10<11:08,  2.43it/s, loss=0.0129, v_num=3]Epoch 5:  36%|███▌      | 900/2524 [06:10<11:08,  2.43it/s, loss=0.0112, v_num=3]Epoch 5:  36%|███▌      | 910/2524 [06:14<11:03,  2.43it/s, loss=0.0112, v_num=3]Epoch 5:  36%|███▌      | 910/2524 [06:14<11:03,  2.43it/s, loss=0.0101, v_num=3]Epoch 5:  36%|███▋      | 920/2524 [06:18<10:59,  2.43it/s, loss=0.0101, v_num=3]Epoch 5:  36%|███▋      | 920/2524 [06:18<10:59,  2.43it/s, loss=0.0106, v_num=3]Epoch 5:  37%|███▋      | 930/2524 [06:22<10:55,  2.43it/s, loss=0.0106, v_num=3]Epoch 5:  37%|███▋      | 930/2524 [06:22<10:55,  2.43it/s, loss=0.0134, v_num=3]Epoch 5:  37%|███▋      | 940/2524 [06:26<10:51,  2.43it/s, loss=0.0134, v_num=3]Epoch 5:  37%|███▋      | 940/2524 [06:26<10:51,  2.43it/s, loss=0.0122, v_num=3]Epoch 5:  38%|███▊      | 950/2524 [06:30<10:47,  2.43it/s, loss=0.0122, v_num=3]Epoch 5:  38%|███▊      | 950/2524 [06:30<10:47,  2.43it/s, loss=0.0108, v_num=3]Epoch 5:  38%|███▊      | 960/2524 [06:34<10:43,  2.43it/s, loss=0.0108, v_num=3]Epoch 5:  38%|███▊      | 960/2524 [06:34<10:43,  2.43it/s, loss=0.013, v_num=3] Epoch 5:  38%|███▊      | 970/2524 [06:38<10:39,  2.43it/s, loss=0.013, v_num=3]Epoch 5:  38%|███▊      | 970/2524 [06:38<10:39,  2.43it/s, loss=0.0124, v_num=3]Epoch 5:  39%|███▉      | 980/2524 [06:43<10:35,  2.43it/s, loss=0.0124, v_num=3]Epoch 5:  39%|███▉      | 980/2524 [06:43<10:35,  2.43it/s, loss=0.0124, v_num=3]Epoch 5:  39%|███▉      | 990/2524 [06:47<10:31,  2.43it/s, loss=0.0124, v_num=3]Epoch 5:  39%|███▉      | 990/2524 [06:47<10:31,  2.43it/s, loss=0.0114, v_num=3]Epoch 5:  40%|███▉      | 1000/2524 [06:51<10:26,  2.43it/s, loss=0.0114, v_num=3]Epoch 5:  40%|███▉      | 1000/2524 [06:51<10:26,  2.43it/s, loss=0.0091, v_num=3]Epoch 5:  40%|████      | 1010/2524 [06:55<10:22,  2.43it/s, loss=0.0091, v_num=3]Epoch 5:  40%|████      | 1010/2524 [06:55<10:22,  2.43it/s, loss=0.0113, v_num=3]Epoch 5:  40%|████      | 1020/2524 [06:59<10:18,  2.43it/s, loss=0.0113, v_num=3]Epoch 5:  40%|████      | 1020/2524 [06:59<10:18,  2.43it/s, loss=0.0131, v_num=3]Epoch 5:  41%|████      | 1030/2524 [07:03<10:14,  2.43it/s, loss=0.0131, v_num=3]Epoch 5:  41%|████      | 1030/2524 [07:03<10:14,  2.43it/s, loss=0.00996, v_num=3]Epoch 5:  41%|████      | 1040/2524 [07:07<10:10,  2.43it/s, loss=0.00996, v_num=3]Epoch 5:  41%|████      | 1040/2524 [07:07<10:10,  2.43it/s, loss=0.00901, v_num=3]Epoch 5:  42%|████▏     | 1050/2524 [07:11<10:06,  2.43it/s, loss=0.00901, v_num=3]Epoch 5:  42%|████▏     | 1050/2524 [07:11<10:06,  2.43it/s, loss=0.011, v_num=3]  Epoch 5:  42%|████▏     | 1060/2524 [07:15<10:02,  2.43it/s, loss=0.011, v_num=3]Epoch 5:  42%|████▏     | 1060/2524 [07:15<10:02,  2.43it/s, loss=0.0108, v_num=3]Epoch 5:  42%|████▏     | 1070/2524 [07:20<09:57,  2.43it/s, loss=0.0108, v_num=3]Epoch 5:  42%|████▏     | 1070/2524 [07:20<09:57,  2.43it/s, loss=0.00823, v_num=3]Epoch 5:  43%|████▎     | 1080/2524 [07:24<09:53,  2.43it/s, loss=0.00823, v_num=3]Epoch 5:  43%|████▎     | 1080/2524 [07:24<09:53,  2.43it/s, loss=0.00884, v_num=3]Epoch 5:  43%|████▎     | 1090/2524 [07:28<09:49,  2.43it/s, loss=0.00884, v_num=3]Epoch 5:  43%|████▎     | 1090/2524 [07:28<09:49,  2.43it/s, loss=0.0113, v_num=3] Epoch 5:  44%|████▎     | 1100/2524 [07:32<09:45,  2.43it/s, loss=0.0113, v_num=3]Epoch 5:  44%|████▎     | 1100/2524 [07:32<09:45,  2.43it/s, loss=0.0125, v_num=3]Epoch 5:  44%|████▍     | 1110/2524 [07:36<09:41,  2.43it/s, loss=0.0125, v_num=3]Epoch 5:  44%|████▍     | 1110/2524 [07:36<09:41,  2.43it/s, loss=0.0124, v_num=3]Epoch 5:  44%|████▍     | 1120/2524 [07:40<09:37,  2.43it/s, loss=0.0124, v_num=3]Epoch 5:  44%|████▍     | 1120/2524 [07:40<09:37,  2.43it/s, loss=0.0101, v_num=3]Epoch 5:  45%|████▍     | 1130/2524 [07:44<09:33,  2.43it/s, loss=0.0101, v_num=3]Epoch 5:  45%|████▍     | 1130/2524 [07:44<09:33,  2.43it/s, loss=0.00811, v_num=3]Epoch 5:  45%|████▌     | 1140/2524 [07:48<09:29,  2.43it/s, loss=0.00811, v_num=3]Epoch 5:  45%|████▌     | 1140/2524 [07:48<09:29,  2.43it/s, loss=0.0111, v_num=3] Epoch 5:  46%|████▌     | 1150/2524 [07:52<09:25,  2.43it/s, loss=0.0111, v_num=3]Epoch 5:  46%|████▌     | 1150/2524 [07:52<09:25,  2.43it/s, loss=0.011, v_num=3] Epoch 5:  46%|████▌     | 1160/2524 [07:57<09:20,  2.43it/s, loss=0.011, v_num=3]Epoch 5:  46%|████▌     | 1160/2524 [07:57<09:20,  2.43it/s, loss=0.00855, v_num=3]Epoch 5:  46%|████▋     | 1170/2524 [08:01<09:16,  2.43it/s, loss=0.00855, v_num=3]Epoch 5:  46%|████▋     | 1170/2524 [08:01<09:16,  2.43it/s, loss=0.0105, v_num=3] Epoch 5:  47%|████▋     | 1180/2524 [08:05<09:12,  2.43it/s, loss=0.0105, v_num=3]Epoch 5:  47%|████▋     | 1180/2524 [08:05<09:12,  2.43it/s, loss=0.0123, v_num=3]Epoch 5:  47%|████▋     | 1190/2524 [08:09<09:08,  2.43it/s, loss=0.0123, v_num=3]Epoch 5:  47%|████▋     | 1190/2524 [08:09<09:08,  2.43it/s, loss=0.0131, v_num=3]Epoch 5:  48%|████▊     | 1200/2524 [08:13<09:04,  2.43it/s, loss=0.0131, v_num=3]Epoch 5:  48%|████▊     | 1200/2524 [08:13<09:04,  2.43it/s, loss=0.0132, v_num=3]Epoch 5:  48%|████▊     | 1210/2524 [08:17<09:00,  2.43it/s, loss=0.0132, v_num=3]Epoch 5:  48%|████▊     | 1210/2524 [08:17<09:00,  2.43it/s, loss=0.00963, v_num=3]Epoch 5:  48%|████▊     | 1220/2524 [08:21<08:56,  2.43it/s, loss=0.00963, v_num=3]Epoch 5:  48%|████▊     | 1220/2524 [08:21<08:56,  2.43it/s, loss=0.00745, v_num=3]Epoch 5:  49%|████▊     | 1230/2524 [08:25<08:52,  2.43it/s, loss=0.00745, v_num=3]Epoch 5:  49%|████▊     | 1230/2524 [08:25<08:52,  2.43it/s, loss=0.00878, v_num=3]Epoch 5:  49%|████▉     | 1240/2524 [08:29<08:48,  2.43it/s, loss=0.00878, v_num=3]Epoch 5:  49%|████▉     | 1240/2524 [08:29<08:48,  2.43it/s, loss=0.0108, v_num=3] Epoch 5:  50%|████▉     | 1250/2524 [08:34<08:43,  2.43it/s, loss=0.0108, v_num=3]Epoch 5:  50%|████▉     | 1250/2524 [08:34<08:43,  2.43it/s, loss=0.0104, v_num=3]Epoch 5:  50%|████▉     | 1260/2524 [08:38<08:39,  2.43it/s, loss=0.0104, v_num=3]Epoch 5:  50%|████▉     | 1260/2524 [08:38<08:39,  2.43it/s, loss=0.011, v_num=3] Epoch 5:  50%|█████     | 1270/2524 [08:42<08:35,  2.43it/s, loss=0.011, v_num=3]Epoch 5:  50%|█████     | 1270/2524 [08:42<08:35,  2.43it/s, loss=0.013, v_num=3]Epoch 5:  51%|█████     | 1280/2524 [08:46<08:31,  2.43it/s, loss=0.013, v_num=3]Epoch 5:  51%|█████     | 1280/2524 [08:46<08:31,  2.43it/s, loss=0.0128, v_num=3]Epoch 5:  51%|█████     | 1290/2524 [08:50<08:27,  2.43it/s, loss=0.0128, v_num=3]Epoch 5:  51%|█████     | 1290/2524 [08:50<08:27,  2.43it/s, loss=0.0133, v_num=3]Epoch 5:  52%|█████▏    | 1300/2524 [08:54<08:23,  2.43it/s, loss=0.0133, v_num=3]Epoch 5:  52%|█████▏    | 1300/2524 [08:54<08:23,  2.43it/s, loss=0.0125, v_num=3]Epoch 5:  52%|█████▏    | 1310/2524 [08:58<08:19,  2.43it/s, loss=0.0125, v_num=3]Epoch 5:  52%|█████▏    | 1310/2524 [08:58<08:19,  2.43it/s, loss=0.013, v_num=3] Epoch 5:  52%|█████▏    | 1320/2524 [09:02<08:15,  2.43it/s, loss=0.013, v_num=3]Epoch 5:  52%|█████▏    | 1320/2524 [09:02<08:15,  2.43it/s, loss=0.0133, v_num=3]Epoch 5:  53%|█████▎    | 1330/2524 [09:06<08:10,  2.43it/s, loss=0.0133, v_num=3]Epoch 5:  53%|█████▎    | 1330/2524 [09:06<08:10,  2.43it/s, loss=0.0128, v_num=3]Epoch 5:  53%|█████▎    | 1340/2524 [09:11<08:06,  2.43it/s, loss=0.0128, v_num=3]Epoch 5:  53%|█████▎    | 1340/2524 [09:11<08:06,  2.43it/s, loss=0.013, v_num=3] Epoch 5:  53%|█████▎    | 1350/2524 [09:15<08:02,  2.43it/s, loss=0.013, v_num=3]Epoch 5:  53%|█████▎    | 1350/2524 [09:15<08:02,  2.43it/s, loss=0.012, v_num=3]Epoch 5:  54%|█████▍    | 1360/2524 [09:19<07:58,  2.43it/s, loss=0.012, v_num=3]Epoch 5:  54%|█████▍    | 1360/2524 [09:19<07:58,  2.43it/s, loss=0.00992, v_num=3]Epoch 5:  54%|█████▍    | 1370/2524 [09:23<07:54,  2.43it/s, loss=0.00992, v_num=3]Epoch 5:  54%|█████▍    | 1370/2524 [09:23<07:54,  2.43it/s, loss=0.00998, v_num=3]Epoch 5:  55%|█████▍    | 1380/2524 [09:27<07:50,  2.43it/s, loss=0.00998, v_num=3]Epoch 5:  55%|█████▍    | 1380/2524 [09:27<07:50,  2.43it/s, loss=0.0102, v_num=3] Epoch 5:  55%|█████▌    | 1390/2524 [09:31<07:46,  2.43it/s, loss=0.0102, v_num=3]Epoch 5:  55%|█████▌    | 1390/2524 [09:31<07:46,  2.43it/s, loss=0.00848, v_num=3]Epoch 5:  55%|█████▌    | 1400/2524 [09:35<07:42,  2.43it/s, loss=0.00848, v_num=3]Epoch 5:  55%|█████▌    | 1400/2524 [09:35<07:42,  2.43it/s, loss=0.0102, v_num=3] Epoch 5:  56%|█████▌    | 1410/2524 [09:39<07:38,  2.43it/s, loss=0.0102, v_num=3]Epoch 5:  56%|█████▌    | 1410/2524 [09:39<07:38,  2.43it/s, loss=0.0156, v_num=3]Epoch 5:  56%|█████▋    | 1420/2524 [09:43<07:33,  2.43it/s, loss=0.0156, v_num=3]Epoch 5:  56%|█████▋    | 1420/2524 [09:43<07:33,  2.43it/s, loss=0.0156, v_num=3]Epoch 5:  57%|█████▋    | 1430/2524 [09:47<07:29,  2.43it/s, loss=0.0156, v_num=3]Epoch 5:  57%|█████▋    | 1430/2524 [09:47<07:29,  2.43it/s, loss=0.0122, v_num=3]Epoch 5:  57%|█████▋    | 1440/2524 [09:52<07:25,  2.43it/s, loss=0.0122, v_num=3]Epoch 5:  57%|█████▋    | 1440/2524 [09:52<07:25,  2.43it/s, loss=0.0113, v_num=3]Epoch 5:  57%|█████▋    | 1450/2524 [09:56<07:21,  2.43it/s, loss=0.0113, v_num=3]Epoch 5:  57%|█████▋    | 1450/2524 [09:56<07:21,  2.43it/s, loss=0.0114, v_num=3]Epoch 5:  58%|█████▊    | 1460/2524 [10:00<07:17,  2.43it/s, loss=0.0114, v_num=3]Epoch 5:  58%|█████▊    | 1460/2524 [10:00<07:17,  2.43it/s, loss=0.0101, v_num=3]Epoch 5:  58%|█████▊    | 1470/2524 [10:04<07:13,  2.43it/s, loss=0.0101, v_num=3]Epoch 5:  58%|█████▊    | 1470/2524 [10:04<07:13,  2.43it/s, loss=0.0115, v_num=3]Epoch 5:  59%|█████▊    | 1480/2524 [10:08<07:09,  2.43it/s, loss=0.0115, v_num=3]Epoch 5:  59%|█████▊    | 1480/2524 [10:08<07:09,  2.43it/s, loss=0.0128, v_num=3]Epoch 5:  59%|█████▉    | 1490/2524 [10:12<07:05,  2.43it/s, loss=0.0128, v_num=3]Epoch 5:  59%|█████▉    | 1490/2524 [10:12<07:05,  2.43it/s, loss=0.0109, v_num=3]Epoch 5:  59%|█████▉    | 1500/2524 [10:16<07:01,  2.43it/s, loss=0.0109, v_num=3]Epoch 5:  59%|█████▉    | 1500/2524 [10:16<07:01,  2.43it/s, loss=0.0112, v_num=3]Epoch 5:  60%|█████▉    | 1510/2524 [10:20<06:56,  2.43it/s, loss=0.0112, v_num=3]Epoch 5:  60%|█████▉    | 1510/2524 [10:20<06:56,  2.43it/s, loss=0.0113, v_num=3]Epoch 5:  60%|██████    | 1520/2524 [10:24<06:52,  2.43it/s, loss=0.0113, v_num=3]Epoch 5:  60%|██████    | 1520/2524 [10:24<06:52,  2.43it/s, loss=0.0121, v_num=3]Epoch 5:  61%|██████    | 1530/2524 [10:29<06:48,  2.43it/s, loss=0.0121, v_num=3]Epoch 5:  61%|██████    | 1530/2524 [10:29<06:48,  2.43it/s, loss=0.0123, v_num=3]Epoch 5:  61%|██████    | 1540/2524 [10:33<06:44,  2.43it/s, loss=0.0123, v_num=3]Epoch 5:  61%|██████    | 1540/2524 [10:33<06:44,  2.43it/s, loss=0.0114, v_num=3]Epoch 5:  61%|██████▏   | 1550/2524 [10:37<06:40,  2.43it/s, loss=0.0114, v_num=3]Epoch 5:  61%|██████▏   | 1550/2524 [10:37<06:40,  2.43it/s, loss=0.0104, v_num=3]Epoch 5:  62%|██████▏   | 1560/2524 [10:41<06:36,  2.43it/s, loss=0.0104, v_num=3]Epoch 5:  62%|██████▏   | 1560/2524 [10:41<06:36,  2.43it/s, loss=0.0134, v_num=3]Epoch 5:  62%|██████▏   | 1570/2524 [10:45<06:32,  2.43it/s, loss=0.0134, v_num=3]Epoch 5:  62%|██████▏   | 1570/2524 [10:45<06:32,  2.43it/s, loss=0.0135, v_num=3]Epoch 5:  63%|██████▎   | 1580/2524 [10:49<06:28,  2.43it/s, loss=0.0135, v_num=3]Epoch 5:  63%|██████▎   | 1580/2524 [10:49<06:28,  2.43it/s, loss=0.0111, v_num=3]Epoch 5:  63%|██████▎   | 1590/2524 [10:53<06:24,  2.43it/s, loss=0.0111, v_num=3]Epoch 5:  63%|██████▎   | 1590/2524 [10:53<06:24,  2.43it/s, loss=0.0121, v_num=3]Epoch 5:  63%|██████▎   | 1600/2524 [10:57<06:19,  2.43it/s, loss=0.0121, v_num=3]Epoch 5:  63%|██████▎   | 1600/2524 [10:57<06:19,  2.43it/s, loss=0.00943, v_num=3]Epoch 5:  64%|██████▍   | 1610/2524 [11:01<06:15,  2.43it/s, loss=0.00943, v_num=3]Epoch 5:  64%|██████▍   | 1610/2524 [11:02<06:15,  2.43it/s, loss=0.00816, v_num=3]Epoch 5:  64%|██████▍   | 1620/2524 [11:06<06:11,  2.43it/s, loss=0.00816, v_num=3]Epoch 5:  64%|██████▍   | 1620/2524 [11:06<06:11,  2.43it/s, loss=0.009, v_num=3]  Epoch 5:  65%|██████▍   | 1630/2524 [11:10<06:07,  2.43it/s, loss=0.009, v_num=3]Epoch 5:  65%|██████▍   | 1630/2524 [11:10<06:07,  2.43it/s, loss=0.0104, v_num=3]Epoch 5:  65%|██████▍   | 1640/2524 [11:14<06:03,  2.43it/s, loss=0.0104, v_num=3]Epoch 5:  65%|██████▍   | 1640/2524 [11:14<06:03,  2.43it/s, loss=0.0134, v_num=3]Epoch 5:  65%|██████▌   | 1650/2524 [11:18<05:59,  2.43it/s, loss=0.0134, v_num=3]Epoch 5:  65%|██████▌   | 1650/2524 [11:18<05:59,  2.43it/s, loss=0.0124, v_num=3]Epoch 5:  66%|██████▌   | 1660/2524 [11:22<05:55,  2.43it/s, loss=0.0124, v_num=3]Epoch 5:  66%|██████▌   | 1660/2524 [11:22<05:55,  2.43it/s, loss=0.0103, v_num=3]Epoch 5:  66%|██████▌   | 1670/2524 [11:26<05:51,  2.43it/s, loss=0.0103, v_num=3]Epoch 5:  66%|██████▌   | 1670/2524 [11:26<05:51,  2.43it/s, loss=0.0104, v_num=3]Epoch 5:  67%|██████▋   | 1680/2524 [11:30<05:47,  2.43it/s, loss=0.0104, v_num=3]Epoch 5:  67%|██████▋   | 1680/2524 [11:30<05:47,  2.43it/s, loss=0.0127, v_num=3]Epoch 5:  67%|██████▋   | 1690/2524 [11:34<05:42,  2.43it/s, loss=0.0127, v_num=3]Epoch 5:  67%|██████▋   | 1690/2524 [11:34<05:42,  2.43it/s, loss=0.0127, v_num=3]Epoch 5:  67%|██████▋   | 1700/2524 [11:38<05:38,  2.43it/s, loss=0.0127, v_num=3]Epoch 5:  67%|██████▋   | 1700/2524 [11:38<05:38,  2.43it/s, loss=0.00946, v_num=3]Epoch 5:  68%|██████▊   | 1710/2524 [11:43<05:34,  2.43it/s, loss=0.00946, v_num=3]Epoch 5:  68%|██████▊   | 1710/2524 [11:43<05:34,  2.43it/s, loss=0.00878, v_num=3]Epoch 5:  68%|██████▊   | 1720/2524 [11:47<05:30,  2.43it/s, loss=0.00878, v_num=3]Epoch 5:  68%|██████▊   | 1720/2524 [11:47<05:30,  2.43it/s, loss=0.00961, v_num=3]Epoch 5:  69%|██████▊   | 1730/2524 [11:51<05:26,  2.43it/s, loss=0.00961, v_num=3]Epoch 5:  69%|██████▊   | 1730/2524 [11:51<05:26,  2.43it/s, loss=0.0112, v_num=3] Epoch 5:  69%|██████▉   | 1740/2524 [11:55<05:22,  2.43it/s, loss=0.0112, v_num=3]Epoch 5:  69%|██████▉   | 1740/2524 [11:55<05:22,  2.43it/s, loss=0.0122, v_num=3]Epoch 5:  69%|██████▉   | 1750/2524 [11:59<05:18,  2.43it/s, loss=0.0122, v_num=3]Epoch 5:  69%|██████▉   | 1750/2524 [11:59<05:18,  2.43it/s, loss=0.0108, v_num=3]Epoch 5:  70%|██████▉   | 1760/2524 [12:03<05:14,  2.43it/s, loss=0.0108, v_num=3]Epoch 5:  70%|██████▉   | 1760/2524 [12:03<05:14,  2.43it/s, loss=0.0101, v_num=3]Epoch 5:  70%|███████   | 1770/2524 [12:07<05:09,  2.43it/s, loss=0.0101, v_num=3]Epoch 5:  70%|███████   | 1770/2524 [12:07<05:09,  2.43it/s, loss=0.0133, v_num=3]Epoch 5:  71%|███████   | 1780/2524 [12:11<05:05,  2.43it/s, loss=0.0133, v_num=3]Epoch 5:  71%|███████   | 1780/2524 [12:11<05:05,  2.43it/s, loss=0.0127, v_num=3]Epoch 5:  71%|███████   | 1790/2524 [12:15<05:01,  2.43it/s, loss=0.0127, v_num=3]Epoch 5:  71%|███████   | 1790/2524 [12:15<05:01,  2.43it/s, loss=0.00986, v_num=3]Epoch 5:  71%|███████▏  | 1800/2524 [12:20<04:57,  2.43it/s, loss=0.00986, v_num=3]Epoch 5:  71%|███████▏  | 1800/2524 [12:20<04:57,  2.43it/s, loss=0.0118, v_num=3] Epoch 5:  72%|███████▏  | 1810/2524 [12:24<04:53,  2.43it/s, loss=0.0118, v_num=3]Epoch 5:  72%|███████▏  | 1810/2524 [12:24<04:53,  2.43it/s, loss=0.0131, v_num=3]Epoch 5:  72%|███████▏  | 1820/2524 [12:28<04:49,  2.43it/s, loss=0.0131, v_num=3]Epoch 5:  72%|███████▏  | 1820/2524 [12:28<04:49,  2.43it/s, loss=0.014, v_num=3] Epoch 5:  73%|███████▎  | 1830/2524 [12:32<04:45,  2.43it/s, loss=0.014, v_num=3]Epoch 5:  73%|███████▎  | 1830/2524 [12:32<04:45,  2.43it/s, loss=0.0114, v_num=3]Epoch 5:  73%|███████▎  | 1840/2524 [12:36<04:41,  2.43it/s, loss=0.0114, v_num=3]Epoch 5:  73%|███████▎  | 1840/2524 [12:36<04:41,  2.43it/s, loss=0.00833, v_num=3]Epoch 5:  73%|███████▎  | 1850/2524 [12:40<04:37,  2.43it/s, loss=0.00833, v_num=3]Epoch 5:  73%|███████▎  | 1850/2524 [12:40<04:37,  2.43it/s, loss=0.00711, v_num=3]Epoch 5:  74%|███████▎  | 1860/2524 [12:44<04:32,  2.43it/s, loss=0.00711, v_num=3]Epoch 5:  74%|███████▎  | 1860/2524 [12:44<04:32,  2.43it/s, loss=0.00745, v_num=3]Epoch 5:  74%|███████▍  | 1870/2524 [12:48<04:28,  2.43it/s, loss=0.00745, v_num=3]Epoch 5:  74%|███████▍  | 1870/2524 [12:48<04:28,  2.43it/s, loss=0.00917, v_num=3]Epoch 5:  74%|███████▍  | 1880/2524 [12:52<04:24,  2.43it/s, loss=0.00917, v_num=3]Epoch 5:  74%|███████▍  | 1880/2524 [12:52<04:24,  2.43it/s, loss=0.0109, v_num=3] Epoch 5:  75%|███████▍  | 1890/2524 [12:57<04:20,  2.43it/s, loss=0.0109, v_num=3]Epoch 5:  75%|███████▍  | 1890/2524 [12:57<04:20,  2.43it/s, loss=0.0115, v_num=3]Epoch 5:  75%|███████▌  | 1900/2524 [13:01<04:16,  2.43it/s, loss=0.0115, v_num=3]Epoch 5:  75%|███████▌  | 1900/2524 [13:01<04:16,  2.43it/s, loss=0.00883, v_num=3]Epoch 5:  76%|███████▌  | 1910/2524 [13:05<04:12,  2.43it/s, loss=0.00883, v_num=3]Epoch 5:  76%|███████▌  | 1910/2524 [13:05<04:12,  2.43it/s, loss=0.00824, v_num=3]Epoch 5:  76%|███████▌  | 1920/2524 [13:09<04:08,  2.43it/s, loss=0.00824, v_num=3]Epoch 5:  76%|███████▌  | 1920/2524 [13:09<04:08,  2.43it/s, loss=0.01, v_num=3]   Epoch 5:  76%|███████▋  | 1930/2524 [13:13<04:04,  2.43it/s, loss=0.01, v_num=3]Epoch 5:  76%|███████▋  | 1930/2524 [13:13<04:04,  2.43it/s, loss=0.0113, v_num=3]Epoch 5:  77%|███████▋  | 1940/2524 [13:17<04:00,  2.43it/s, loss=0.0113, v_num=3]Epoch 5:  77%|███████▋  | 1940/2524 [13:17<04:00,  2.43it/s, loss=0.0119, v_num=3]Epoch 5:  77%|███████▋  | 1950/2524 [13:21<03:55,  2.43it/s, loss=0.0119, v_num=3]Epoch 5:  77%|███████▋  | 1950/2524 [13:21<03:55,  2.43it/s, loss=0.00936, v_num=3]Epoch 5:  78%|███████▊  | 1960/2524 [13:25<03:51,  2.43it/s, loss=0.00936, v_num=3]Epoch 5:  78%|███████▊  | 1960/2524 [13:25<03:51,  2.43it/s, loss=0.00721, v_num=3]Epoch 5:  78%|███████▊  | 1970/2524 [13:29<03:47,  2.43it/s, loss=0.00721, v_num=3]Epoch 5:  78%|███████▊  | 1970/2524 [13:29<03:47,  2.43it/s, loss=0.0134, v_num=3] Epoch 5:  78%|███████▊  | 1980/2524 [13:33<03:43,  2.43it/s, loss=0.0134, v_num=3]Epoch 5:  78%|███████▊  | 1980/2524 [13:34<03:43,  2.43it/s, loss=0.0139, v_num=3]Epoch 5:  79%|███████▉  | 1990/2524 [13:38<03:39,  2.43it/s, loss=0.0139, v_num=3]Epoch 5:  79%|███████▉  | 1990/2524 [13:38<03:39,  2.43it/s, loss=0.011, v_num=3] Epoch 5:  79%|███████▉  | 2000/2524 [13:42<03:35,  2.43it/s, loss=0.011, v_num=3]Epoch 5:  79%|███████▉  | 2000/2524 [13:42<03:35,  2.43it/s, loss=0.0109, v_num=3]Epoch 5:  80%|███████▉  | 2010/2524 [13:46<03:31,  2.43it/s, loss=0.0109, v_num=3]Epoch 5:  80%|███████▉  | 2010/2524 [13:46<03:31,  2.43it/s, loss=0.00827, v_num=3]Epoch 5:  80%|████████  | 2020/2524 [13:50<03:27,  2.43it/s, loss=0.00827, v_num=3]Epoch 5:  80%|████████  | 2020/2524 [13:50<03:27,  2.43it/s, loss=0.00847, v_num=3]Epoch 5:  80%|████████  | 2030/2524 [13:54<03:23,  2.43it/s, loss=0.00847, v_num=3]Epoch 5:  80%|████████  | 2030/2524 [13:54<03:23,  2.43it/s, loss=0.00946, v_num=3]Epoch 5:  81%|████████  | 2040/2524 [13:58<03:18,  2.43it/s, loss=0.00946, v_num=3]Epoch 5:  81%|████████  | 2040/2524 [13:58<03:18,  2.43it/s, loss=0.0105, v_num=3] Epoch 5:  81%|████████  | 2050/2524 [14:02<03:14,  2.43it/s, loss=0.0105, v_num=3]Epoch 5:  81%|████████  | 2050/2524 [14:02<03:14,  2.43it/s, loss=0.012, v_num=3] Epoch 5:  82%|████████▏ | 2060/2524 [14:06<03:10,  2.43it/s, loss=0.012, v_num=3]Epoch 5:  82%|████████▏ | 2060/2524 [14:06<03:10,  2.43it/s, loss=0.0106, v_num=3]Epoch 5:  82%|████████▏ | 2070/2524 [14:11<03:06,  2.43it/s, loss=0.0106, v_num=3]Epoch 5:  82%|████████▏ | 2070/2524 [14:11<03:06,  2.43it/s, loss=0.00851, v_num=3]Epoch 5:  82%|████████▏ | 2080/2524 [14:15<03:02,  2.43it/s, loss=0.00851, v_num=3]Epoch 5:  82%|████████▏ | 2080/2524 [14:15<03:02,  2.43it/s, loss=0.00799, v_num=3]Epoch 5:  83%|████████▎ | 2090/2524 [14:19<02:58,  2.43it/s, loss=0.00799, v_num=3]Epoch 5:  83%|████████▎ | 2090/2524 [14:19<02:58,  2.43it/s, loss=0.00981, v_num=3]Epoch 5:  83%|████████▎ | 2100/2524 [14:23<02:54,  2.43it/s, loss=0.00981, v_num=3]Epoch 5:  83%|████████▎ | 2100/2524 [14:23<02:54,  2.43it/s, loss=0.012, v_num=3]  Epoch 5:  84%|████████▎ | 2110/2524 [14:27<02:50,  2.43it/s, loss=0.012, v_num=3]Epoch 5:  84%|████████▎ | 2110/2524 [14:27<02:50,  2.43it/s, loss=0.0108, v_num=3]Epoch 5:  84%|████████▍ | 2120/2524 [14:31<02:46,  2.43it/s, loss=0.0108, v_num=3]Epoch 5:  84%|████████▍ | 2120/2524 [14:31<02:46,  2.43it/s, loss=0.0111, v_num=3]Epoch 5:  84%|████████▍ | 2130/2524 [14:35<02:41,  2.43it/s, loss=0.0111, v_num=3]Epoch 5:  84%|████████▍ | 2130/2524 [14:35<02:41,  2.43it/s, loss=0.0106, v_num=3]Epoch 5:  85%|████████▍ | 2140/2524 [14:39<02:37,  2.43it/s, loss=0.0106, v_num=3]Epoch 5:  85%|████████▍ | 2140/2524 [14:39<02:37,  2.43it/s, loss=0.0104, v_num=3]Epoch 5:  85%|████████▌ | 2150/2524 [14:43<02:33,  2.43it/s, loss=0.0104, v_num=3]Epoch 5:  85%|████████▌ | 2150/2524 [14:43<02:33,  2.43it/s, loss=0.0113, v_num=3]Epoch 5:  86%|████████▌ | 2160/2524 [14:48<02:29,  2.43it/s, loss=0.0113, v_num=3]Epoch 5:  86%|████████▌ | 2160/2524 [14:48<02:29,  2.43it/s, loss=0.0117, v_num=3]Epoch 5:  86%|████████▌ | 2170/2524 [14:52<02:25,  2.43it/s, loss=0.0117, v_num=3]Epoch 5:  86%|████████▌ | 2170/2524 [14:52<02:25,  2.43it/s, loss=0.0131, v_num=3]Epoch 5:  86%|████████▋ | 2180/2524 [14:56<02:21,  2.43it/s, loss=0.0131, v_num=3]Epoch 5:  86%|████████▋ | 2180/2524 [14:56<02:21,  2.43it/s, loss=0.0117, v_num=3]Epoch 5:  87%|████████▋ | 2190/2524 [15:00<02:17,  2.43it/s, loss=0.0117, v_num=3]Epoch 5:  87%|████████▋ | 2190/2524 [15:00<02:17,  2.43it/s, loss=0.00958, v_num=3]Epoch 5:  87%|████████▋ | 2200/2524 [15:04<02:13,  2.43it/s, loss=0.00958, v_num=3]Epoch 5:  87%|████████▋ | 2200/2524 [15:04<02:13,  2.43it/s, loss=0.00799, v_num=3]Epoch 5:  88%|████████▊ | 2210/2524 [15:08<02:09,  2.43it/s, loss=0.00799, v_num=3]Epoch 5:  88%|████████▊ | 2210/2524 [15:08<02:09,  2.43it/s, loss=0.0107, v_num=3] Epoch 5:  88%|████████▊ | 2220/2524 [15:12<02:04,  2.43it/s, loss=0.0107, v_num=3]Epoch 5:  88%|████████▊ | 2220/2524 [15:12<02:04,  2.43it/s, loss=0.0103, v_num=3]Epoch 5:  88%|████████▊ | 2230/2524 [15:16<02:00,  2.43it/s, loss=0.0103, v_num=3]Epoch 5:  88%|████████▊ | 2230/2524 [15:16<02:00,  2.43it/s, loss=0.00838, v_num=3]Epoch 5:  89%|████████▊ | 2240/2524 [15:20<01:56,  2.43it/s, loss=0.00838, v_num=3]Epoch 5:  89%|████████▊ | 2240/2524 [15:21<01:56,  2.43it/s, loss=0.00881, v_num=3]Epoch 5:  89%|████████▉ | 2250/2524 [15:25<01:52,  2.43it/s, loss=0.00881, v_num=3]Epoch 5:  89%|████████▉ | 2250/2524 [15:25<01:52,  2.43it/s, loss=0.00813, v_num=3]Epoch 5:  90%|████████▉ | 2260/2524 [15:29<01:48,  2.43it/s, loss=0.00813, v_num=3]Epoch 5:  90%|████████▉ | 2260/2524 [15:29<01:48,  2.43it/s, loss=0.00946, v_num=3]Epoch 5:  90%|████████▉ | 2270/2524 [15:33<01:44,  2.43it/s, loss=0.00946, v_num=3]Epoch 5:  90%|████████▉ | 2270/2524 [15:33<01:44,  2.43it/s, loss=0.01, v_num=3]   Epoch 5:  90%|█████████ | 2280/2524 [15:37<01:40,  2.43it/s, loss=0.01, v_num=3]Epoch 5:  90%|█████████ | 2280/2524 [15:37<01:40,  2.43it/s, loss=0.00914, v_num=3]Epoch 5:  91%|█████████ | 2290/2524 [15:41<01:36,  2.43it/s, loss=0.00914, v_num=3]Epoch 5:  91%|█████████ | 2290/2524 [15:41<01:36,  2.43it/s, loss=0.00956, v_num=3]Epoch 5:  91%|█████████ | 2300/2524 [15:45<01:32,  2.43it/s, loss=0.00956, v_num=3]Epoch 5:  91%|█████████ | 2300/2524 [15:45<01:32,  2.43it/s, loss=0.0107, v_num=3] Epoch 5:  92%|█████████▏| 2310/2524 [15:49<01:27,  2.43it/s, loss=0.0107, v_num=3]Epoch 5:  92%|█████████▏| 2310/2524 [15:49<01:27,  2.43it/s, loss=0.0129, v_num=3]Epoch 5:  92%|█████████▏| 2320/2524 [15:53<01:23,  2.43it/s, loss=0.0129, v_num=3]Epoch 5:  92%|█████████▏| 2320/2524 [15:53<01:23,  2.43it/s, loss=0.0123, v_num=3]Epoch 5:  92%|█████████▏| 2330/2524 [15:57<01:19,  2.43it/s, loss=0.0123, v_num=3]Epoch 5:  92%|█████████▏| 2330/2524 [15:58<01:19,  2.43it/s, loss=0.0121, v_num=3]Epoch 5:  93%|█████████▎| 2340/2524 [16:02<01:15,  2.43it/s, loss=0.0121, v_num=3]Epoch 5:  93%|█████████▎| 2340/2524 [16:02<01:15,  2.43it/s, loss=0.0153, v_num=3]Epoch 5:  93%|█████████▎| 2350/2524 [16:06<01:11,  2.43it/s, loss=0.0153, v_num=3]Epoch 5:  93%|█████████▎| 2350/2524 [16:06<01:11,  2.43it/s, loss=0.0109, v_num=3]Epoch 5:  94%|█████████▎| 2360/2524 [16:10<01:07,  2.43it/s, loss=0.0109, v_num=3]Epoch 5:  94%|█████████▎| 2360/2524 [16:10<01:07,  2.43it/s, loss=0.00808, v_num=3]Epoch 5:  94%|█████████▍| 2370/2524 [16:14<01:03,  2.43it/s, loss=0.00808, v_num=3]Epoch 5:  94%|█████████▍| 2370/2524 [16:14<01:03,  2.43it/s, loss=0.0118, v_num=3] Epoch 5:  94%|█████████▍| 2380/2524 [16:18<00:59,  2.43it/s, loss=0.0118, v_num=3]Epoch 5:  94%|█████████▍| 2380/2524 [16:18<00:59,  2.43it/s, loss=0.0119, v_num=3]Epoch 5:  95%|█████████▍| 2390/2524 [16:22<00:55,  2.43it/s, loss=0.0119, v_num=3]Epoch 5:  95%|█████████▍| 2390/2524 [16:22<00:55,  2.43it/s, loss=0.0108, v_num=3]Epoch 5:  95%|█████████▌| 2400/2524 [16:26<00:50,  2.43it/s, loss=0.0108, v_num=3]Epoch 5:  95%|█████████▌| 2400/2524 [16:26<00:50,  2.43it/s, loss=0.00901, v_num=3]Epoch 5:  95%|█████████▌| 2410/2524 [16:30<00:46,  2.43it/s, loss=0.00901, v_num=3]Epoch 5:  95%|█████████▌| 2410/2524 [16:30<00:46,  2.43it/s, loss=0.00761, v_num=3]Epoch 5:  96%|█████████▌| 2420/2524 [16:34<00:42,  2.43it/s, loss=0.00761, v_num=3]Epoch 5:  96%|█████████▌| 2420/2524 [16:35<00:42,  2.43it/s, loss=0.00954, v_num=3]Epoch 5:  96%|█████████▋| 2430/2524 [16:39<00:38,  2.43it/s, loss=0.00954, v_num=3]Epoch 5:  96%|█████████▋| 2430/2524 [16:39<00:38,  2.43it/s, loss=0.0109, v_num=3] Epoch 5:  97%|█████████▋| 2440/2524 [16:43<00:34,  2.43it/s, loss=0.0109, v_num=3]Epoch 5:  97%|█████████▋| 2440/2524 [16:43<00:34,  2.43it/s, loss=0.0102, v_num=3]Epoch 5:  97%|█████████▋| 2450/2524 [16:47<00:30,  2.43it/s, loss=0.0102, v_num=3]Epoch 5:  97%|█████████▋| 2450/2524 [16:47<00:30,  2.43it/s, loss=0.00825, v_num=3]Epoch 5:  97%|█████████▋| 2460/2524 [16:51<00:26,  2.43it/s, loss=0.00825, v_num=3]Epoch 5:  97%|█████████▋| 2460/2524 [16:51<00:26,  2.43it/s, loss=0.00881, v_num=3]Epoch 5:  98%|█████████▊| 2470/2524 [16:55<00:22,  2.43it/s, loss=0.00881, v_num=3]Epoch 5:  98%|█████████▊| 2470/2524 [16:55<00:22,  2.43it/s, loss=0.00963, v_num=3]Epoch 5:  98%|█████████▊| 2480/2524 [16:59<00:18,  2.43it/s, loss=0.00963, v_num=3]Epoch 5:  98%|█████████▊| 2480/2524 [16:59<00:18,  2.43it/s, loss=0.0104, v_num=3] Epoch 5:  99%|█████████▊| 2490/2524 [17:03<00:13,  2.43it/s, loss=0.0104, v_num=3]Epoch 5:  99%|█████████▊| 2490/2524 [17:03<00:13,  2.43it/s, loss=0.0117, v_num=3]Epoch 5:  99%|█████████▉| 2500/2524 [17:07<00:09,  2.43it/s, loss=0.0117, v_num=3]Epoch 5:  99%|█████████▉| 2500/2524 [17:07<00:09,  2.43it/s, loss=0.0102, v_num=3]Epoch 5:  99%|█████████▉| 2510/2524 [17:11<00:05,  2.43it/s, loss=0.0102, v_num=3]Epoch 5:  99%|█████████▉| 2510/2524 [17:11<00:05,  2.43it/s, loss=0.011, v_num=3] Epoch 5: 100%|█████████▉| 2520/2524 [17:16<00:01,  2.43it/s, loss=0.011, v_num=3]Epoch 5: 100%|█████████▉| 2520/2524 [17:16<00:01,  2.43it/s, loss=0.0126, v_num=3]Epoch 5: 100%|██████████| 2524/2524 [17:17<00:00,  2.43it/s, loss=0.0126, v_num=3]Epoch 5: 100%|██████████| 2524/2524 [17:17<00:00,  2.43it/s, loss=0.00937, v_num=3]Epoch 5: 100%|██████████| 2524/2524 [17:17<00:00,  2.43it/s, loss=0.00937, v_num=3]Epoch 5:   0%|          | 0/2524 [00:00<?, ?it/s, loss=0.00937, v_num=3]           Epoch 6:   0%|          | 0/2524 [00:00<?, ?it/s, loss=0.00937, v_num=3]Epoch 6:   0%|          | 10/2524 [00:04<18:50,  2.22it/s, loss=0.00937, v_num=3]Epoch 6:   0%|          | 10/2524 [00:04<18:53,  2.22it/s, loss=0.0101, v_num=3] Epoch 6:   1%|          | 20/2524 [00:08<17:54,  2.33it/s, loss=0.0101, v_num=3]Epoch 6:   1%|          | 20/2524 [00:08<17:56,  2.33it/s, loss=0.0115, v_num=3]Epoch 6:   1%|          | 30/2524 [00:12<17:33,  2.37it/s, loss=0.0115, v_num=3]Epoch 6:   1%|          | 30/2524 [00:12<17:34,  2.36it/s, loss=0.00946, v_num=3]Epoch 6:   2%|▏         | 40/2524 [00:16<17:21,  2.39it/s, loss=0.00946, v_num=3]Epoch 6:   2%|▏         | 40/2524 [00:16<17:21,  2.38it/s, loss=0.0091, v_num=3] Epoch 6:   2%|▏         | 50/2524 [00:20<17:11,  2.40it/s, loss=0.0091, v_num=3]Epoch 6:   2%|▏         | 50/2524 [00:20<17:12,  2.40it/s, loss=0.0102, v_num=3]Epoch 6:   2%|▏         | 60/2524 [00:25<17:10,  2.39it/s, loss=0.0102, v_num=3]Epoch 6:   2%|▏         | 60/2524 [00:25<17:10,  2.39it/s, loss=0.00922, v_num=3]Epoch 6:   3%|▎         | 70/2524 [00:29<17:02,  2.40it/s, loss=0.00922, v_num=3]Epoch 6:   3%|▎         | 70/2524 [00:29<17:03,  2.40it/s, loss=0.0113, v_num=3] Epoch 6:   3%|▎         | 80/2524 [00:33<16:56,  2.41it/s, loss=0.0113, v_num=3]Epoch 6:   3%|▎         | 80/2524 [00:33<16:56,  2.40it/s, loss=0.00967, v_num=3]Epoch 6:   4%|▎         | 90/2524 [00:37<16:50,  2.41it/s, loss=0.00967, v_num=3]Epoch 6:   4%|▎         | 90/2524 [00:37<16:50,  2.41it/s, loss=0.00699, v_num=3]Epoch 6:   4%|▍         | 100/2524 [00:41<16:44,  2.41it/s, loss=0.00699, v_num=3]Epoch 6:   4%|▍         | 100/2524 [00:41<16:44,  2.41it/s, loss=0.00858, v_num=3]Epoch 6:   4%|▍         | 110/2524 [00:45<16:40,  2.41it/s, loss=0.00858, v_num=3]Epoch 6:   4%|▍         | 110/2524 [00:45<16:40,  2.41it/s, loss=0.0108, v_num=3] Epoch 6:   5%|▍         | 120/2524 [00:49<16:35,  2.42it/s, loss=0.0108, v_num=3]Epoch 6:   5%|▍         | 120/2524 [00:49<16:35,  2.42it/s, loss=0.0109, v_num=3]Epoch 6:   5%|▌         | 130/2524 [00:53<16:29,  2.42it/s, loss=0.0109, v_num=3]Epoch 6:   5%|▌         | 130/2524 [00:53<16:30,  2.42it/s, loss=0.00846, v_num=3]Epoch 6:   6%|▌         | 140/2524 [00:57<16:24,  2.42it/s, loss=0.00846, v_num=3]Epoch 6:   6%|▌         | 140/2524 [00:57<16:25,  2.42it/s, loss=0.00711, v_num=3]Epoch 6:   6%|▌         | 150/2524 [01:01<16:20,  2.42it/s, loss=0.00711, v_num=3]Epoch 6:   6%|▌         | 150/2524 [01:01<16:20,  2.42it/s, loss=0.00662, v_num=3]Epoch 6:   6%|▋         | 160/2524 [01:06<16:17,  2.42it/s, loss=0.00662, v_num=3]Epoch 6:   6%|▋         | 160/2524 [01:06<16:17,  2.42it/s, loss=0.00706, v_num=3]Epoch 6:   7%|▋         | 170/2524 [01:10<16:12,  2.42it/s, loss=0.00706, v_num=3]Epoch 6:   7%|▋         | 170/2524 [01:10<16:12,  2.42it/s, loss=0.0112, v_num=3] Epoch 6:   7%|▋         | 180/2524 [01:14<16:08,  2.42it/s, loss=0.0112, v_num=3]Epoch 6:   7%|▋         | 180/2524 [01:14<16:08,  2.42it/s, loss=0.0108, v_num=3]Epoch 6:   8%|▊         | 190/2524 [01:18<16:03,  2.42it/s, loss=0.0108, v_num=3]Epoch 6:   8%|▊         | 190/2524 [01:18<16:03,  2.42it/s, loss=0.00783, v_num=3]Epoch 6:   8%|▊         | 200/2524 [01:22<15:58,  2.42it/s, loss=0.00783, v_num=3]Epoch 6:   8%|▊         | 200/2524 [01:22<15:58,  2.42it/s, loss=0.0071, v_num=3] Epoch 6:   8%|▊         | 210/2524 [01:26<15:54,  2.42it/s, loss=0.0071, v_num=3]Epoch 6:   8%|▊         | 210/2524 [01:26<15:55,  2.42it/s, loss=0.00751, v_num=3]Epoch 6:   9%|▊         | 220/2524 [01:30<15:50,  2.42it/s, loss=0.00751, v_num=3]Epoch 6:   9%|▊         | 220/2524 [01:30<15:50,  2.42it/s, loss=0.00956, v_num=3]Epoch 6:   9%|▉         | 230/2524 [01:34<15:45,  2.43it/s, loss=0.00956, v_num=3]Epoch 6:   9%|▉         | 230/2524 [01:34<15:45,  2.42it/s, loss=0.0105, v_num=3] Epoch 6:  10%|▉         | 240/2524 [01:38<15:41,  2.43it/s, loss=0.0105, v_num=3]Epoch 6:  10%|▉         | 240/2524 [01:38<15:41,  2.43it/s, loss=0.00977, v_num=3]Epoch 6:  10%|▉         | 250/2524 [01:43<15:37,  2.43it/s, loss=0.00977, v_num=3]Epoch 6:  10%|▉         | 250/2524 [01:43<15:37,  2.43it/s, loss=0.00727, v_num=3]Epoch 6:  10%|█         | 260/2524 [01:47<15:33,  2.42it/s, loss=0.00727, v_num=3]Epoch 6:  10%|█         | 260/2524 [01:47<15:34,  2.42it/s, loss=0.00703, v_num=3]Epoch 6:  11%|█         | 270/2524 [01:51<15:29,  2.42it/s, loss=0.00703, v_num=3]Epoch 6:  11%|█         | 270/2524 [01:51<15:29,  2.42it/s, loss=0.00739, v_num=3]Epoch 6:  11%|█         | 280/2524 [01:55<15:25,  2.43it/s, loss=0.00739, v_num=3]Epoch 6:  11%|█         | 280/2524 [01:55<15:25,  2.43it/s, loss=0.00845, v_num=3]Epoch 6:  11%|█▏        | 290/2524 [01:59<15:20,  2.43it/s, loss=0.00845, v_num=3]Epoch 6:  11%|█▏        | 290/2524 [01:59<15:20,  2.43it/s, loss=0.00904, v_num=3]Epoch 6:  12%|█▏        | 300/2524 [02:03<15:16,  2.43it/s, loss=0.00904, v_num=3]Epoch 6:  12%|█▏        | 300/2524 [02:03<15:16,  2.43it/s, loss=0.0077, v_num=3] Epoch 6:  12%|█▏        | 310/2524 [02:07<15:12,  2.43it/s, loss=0.0077, v_num=3]Epoch 6:  12%|█▏        | 310/2524 [02:07<15:12,  2.43it/s, loss=0.00864, v_num=3]Epoch 6:  13%|█▎        | 320/2524 [02:11<15:08,  2.43it/s, loss=0.00864, v_num=3]Epoch 6:  13%|█▎        | 320/2524 [02:11<15:08,  2.43it/s, loss=0.00946, v_num=3]Epoch 6:  13%|█▎        | 330/2524 [02:15<15:03,  2.43it/s, loss=0.00946, v_num=3]Epoch 6:  13%|█▎        | 330/2524 [02:15<15:03,  2.43it/s, loss=0.00997, v_num=3]Epoch 6:  13%|█▎        | 340/2524 [02:20<14:59,  2.43it/s, loss=0.00997, v_num=3]Epoch 6:  13%|█▎        | 340/2524 [02:20<14:59,  2.43it/s, loss=0.00956, v_num=3]Epoch 6:  14%|█▍        | 350/2524 [02:24<14:55,  2.43it/s, loss=0.00956, v_num=3]Epoch 6:  14%|█▍        | 350/2524 [02:24<14:55,  2.43it/s, loss=0.00798, v_num=3]Epoch 6:  14%|█▍        | 360/2524 [02:28<14:51,  2.43it/s, loss=0.00798, v_num=3]Epoch 6:  14%|█▍        | 360/2524 [02:28<14:51,  2.43it/s, loss=0.00948, v_num=3]Epoch 6:  15%|█▍        | 370/2524 [02:32<14:47,  2.43it/s, loss=0.00948, v_num=3]Epoch 6:  15%|█▍        | 370/2524 [02:32<14:47,  2.43it/s, loss=0.0109, v_num=3] Epoch 6:  15%|█▌        | 380/2524 [02:36<14:43,  2.43it/s, loss=0.0109, v_num=3]Epoch 6:  15%|█▌        | 380/2524 [02:36<14:43,  2.43it/s, loss=0.0104, v_num=3]Epoch 6:  15%|█▌        | 390/2524 [02:40<14:38,  2.43it/s, loss=0.0104, v_num=3]Epoch 6:  15%|█▌        | 390/2524 [02:40<14:38,  2.43it/s, loss=0.0096, v_num=3]Epoch 6:  16%|█▌        | 400/2524 [02:44<14:34,  2.43it/s, loss=0.0096, v_num=3]Epoch 6:  16%|█▌        | 400/2524 [02:44<14:34,  2.43it/s, loss=0.00845, v_num=3]Epoch 6:  16%|█▌        | 410/2524 [02:48<14:30,  2.43it/s, loss=0.00845, v_num=3]Epoch 6:  16%|█▌        | 410/2524 [02:48<14:30,  2.43it/s, loss=0.00819, v_num=3]Epoch 6:  17%|█▋        | 420/2524 [02:52<14:26,  2.43it/s, loss=0.00819, v_num=3]Epoch 6:  17%|█▋        | 420/2524 [02:52<14:26,  2.43it/s, loss=0.00897, v_num=3]Epoch 6:  17%|█▋        | 430/2524 [02:57<14:22,  2.43it/s, loss=0.00897, v_num=3]Epoch 6:  17%|█▋        | 430/2524 [02:57<14:22,  2.43it/s, loss=0.0102, v_num=3] Epoch 6:  17%|█▋        | 440/2524 [03:01<14:17,  2.43it/s, loss=0.0102, v_num=3]Epoch 6:  17%|█▋        | 440/2524 [03:01<14:17,  2.43it/s, loss=0.00846, v_num=3]Epoch 6:  18%|█▊        | 450/2524 [03:05<14:13,  2.43it/s, loss=0.00846, v_num=3]Epoch 6:  18%|█▊        | 450/2524 [03:05<14:13,  2.43it/s, loss=0.00645, v_num=3]Epoch 6:  18%|█▊        | 460/2524 [03:09<14:09,  2.43it/s, loss=0.00645, v_num=3]Epoch 6:  18%|█▊        | 460/2524 [03:09<14:09,  2.43it/s, loss=0.0088, v_num=3] Epoch 6:  19%|█▊        | 470/2524 [03:13<14:05,  2.43it/s, loss=0.0088, v_num=3]Epoch 6:  19%|█▊        | 470/2524 [03:13<14:05,  2.43it/s, loss=0.0109, v_num=3]Epoch 6:  19%|█▉        | 480/2524 [03:17<14:01,  2.43it/s, loss=0.0109, v_num=3]Epoch 6:  19%|█▉        | 480/2524 [03:17<14:01,  2.43it/s, loss=0.00997, v_num=3]Epoch 6:  19%|█▉        | 490/2524 [03:21<13:57,  2.43it/s, loss=0.00997, v_num=3]Epoch 6:  19%|█▉        | 490/2524 [03:21<13:57,  2.43it/s, loss=0.00704, v_num=3]Epoch 6:  20%|█▉        | 500/2524 [03:25<13:53,  2.43it/s, loss=0.00704, v_num=3]Epoch 6:  20%|█▉        | 500/2524 [03:25<13:53,  2.43it/s, loss=0.00677, v_num=3]Epoch 6:  20%|██        | 510/2524 [03:29<13:49,  2.43it/s, loss=0.00677, v_num=3]Epoch 6:  20%|██        | 510/2524 [03:29<13:49,  2.43it/s, loss=0.00841, v_num=3]Epoch 6:  21%|██        | 520/2524 [03:34<13:44,  2.43it/s, loss=0.00841, v_num=3]Epoch 6:  21%|██        | 520/2524 [03:34<13:44,  2.43it/s, loss=0.00869, v_num=3]Epoch 6:  21%|██        | 530/2524 [03:38<13:40,  2.43it/s, loss=0.00869, v_num=3]Epoch 6:  21%|██        | 530/2524 [03:38<13:40,  2.43it/s, loss=0.00914, v_num=3]Epoch 6:  21%|██▏       | 540/2524 [03:42<13:36,  2.43it/s, loss=0.00914, v_num=3]Epoch 6:  21%|██▏       | 540/2524 [03:42<13:36,  2.43it/s, loss=0.00897, v_num=3]Epoch 6:  22%|██▏       | 550/2524 [03:46<13:32,  2.43it/s, loss=0.00897, v_num=3]Epoch 6:  22%|██▏       | 550/2524 [03:46<13:32,  2.43it/s, loss=0.01, v_num=3]   Epoch 6:  22%|██▏       | 560/2524 [03:50<13:28,  2.43it/s, loss=0.01, v_num=3]Epoch 6:  22%|██▏       | 560/2524 [03:50<13:28,  2.43it/s, loss=0.00973, v_num=3]Epoch 6:  23%|██▎       | 570/2524 [03:54<13:24,  2.43it/s, loss=0.00973, v_num=3]Epoch 6:  23%|██▎       | 570/2524 [03:54<13:24,  2.43it/s, loss=0.00662, v_num=3]Epoch 6:  23%|██▎       | 580/2524 [03:58<13:20,  2.43it/s, loss=0.00662, v_num=3]Epoch 6:  23%|██▎       | 580/2524 [03:58<13:20,  2.43it/s, loss=0.00736, v_num=3]Epoch 6:  23%|██▎       | 590/2524 [04:02<13:15,  2.43it/s, loss=0.00736, v_num=3]Epoch 6:  23%|██▎       | 590/2524 [04:02<13:15,  2.43it/s, loss=0.00657, v_num=3]Epoch 6:  24%|██▍       | 600/2524 [04:06<13:11,  2.43it/s, loss=0.00657, v_num=3]Epoch 6:  24%|██▍       | 600/2524 [04:06<13:11,  2.43it/s, loss=0.00491, v_num=3]Epoch 6:  24%|██▍       | 610/2524 [04:11<13:07,  2.43it/s, loss=0.00491, v_num=3]Epoch 6:  24%|██▍       | 610/2524 [04:11<13:07,  2.43it/s, loss=0.00528, v_num=3]Epoch 6:  25%|██▍       | 620/2524 [04:15<13:03,  2.43it/s, loss=0.00528, v_num=3]Epoch 6:  25%|██▍       | 620/2524 [04:15<13:03,  2.43it/s, loss=0.00525, v_num=3]Epoch 6:  25%|██▍       | 630/2524 [04:19<12:59,  2.43it/s, loss=0.00525, v_num=3]Epoch 6:  25%|██▍       | 630/2524 [04:19<12:59,  2.43it/s, loss=0.00775, v_num=3]Epoch 6:  25%|██▌       | 640/2524 [04:23<12:55,  2.43it/s, loss=0.00775, v_num=3]Epoch 6:  25%|██▌       | 640/2524 [04:23<12:55,  2.43it/s, loss=0.00776, v_num=3]Epoch 6:  26%|██▌       | 650/2524 [04:27<12:50,  2.43it/s, loss=0.00776, v_num=3]Epoch 6:  26%|██▌       | 650/2524 [04:27<12:50,  2.43it/s, loss=0.00588, v_num=3]Epoch 6:  26%|██▌       | 660/2524 [04:31<12:47,  2.43it/s, loss=0.00588, v_num=3]Epoch 6:  26%|██▌       | 660/2524 [04:31<12:47,  2.43it/s, loss=0.00686, v_num=3]Epoch 6:  27%|██▋       | 670/2524 [04:35<12:42,  2.43it/s, loss=0.00686, v_num=3]Epoch 6:  27%|██▋       | 670/2524 [04:35<12:42,  2.43it/s, loss=0.00839, v_num=3]Epoch 6:  27%|██▋       | 680/2524 [04:39<12:38,  2.43it/s, loss=0.00839, v_num=3]Epoch 6:  27%|██▋       | 680/2524 [04:39<12:38,  2.43it/s, loss=0.00753, v_num=3]Epoch 6:  27%|██▋       | 690/2524 [04:43<12:34,  2.43it/s, loss=0.00753, v_num=3]Epoch 6:  27%|██▋       | 690/2524 [04:43<12:34,  2.43it/s, loss=0.00668, v_num=3]Epoch 6:  28%|██▊       | 700/2524 [04:47<12:30,  2.43it/s, loss=0.00668, v_num=3]Epoch 6:  28%|██▊       | 700/2524 [04:47<12:30,  2.43it/s, loss=0.0104, v_num=3] Epoch 6:  28%|██▊       | 710/2524 [04:52<12:26,  2.43it/s, loss=0.0104, v_num=3]Epoch 6:  28%|██▊       | 710/2524 [04:52<12:26,  2.43it/s, loss=0.0111, v_num=3]Epoch 6:  29%|██▊       | 720/2524 [04:56<12:22,  2.43it/s, loss=0.0111, v_num=3]Epoch 6:  29%|██▊       | 720/2524 [04:56<12:22,  2.43it/s, loss=0.00811, v_num=3]Epoch 6:  29%|██▉       | 730/2524 [05:00<12:17,  2.43it/s, loss=0.00811, v_num=3]Epoch 6:  29%|██▉       | 730/2524 [05:00<12:17,  2.43it/s, loss=0.00906, v_num=3]Epoch 6:  29%|██▉       | 740/2524 [05:04<12:13,  2.43it/s, loss=0.00906, v_num=3]Epoch 6:  29%|██▉       | 740/2524 [05:04<12:13,  2.43it/s, loss=0.00898, v_num=3]Epoch 6:  30%|██▉       | 750/2524 [05:08<12:09,  2.43it/s, loss=0.00898, v_num=3]Epoch 6:  30%|██▉       | 750/2524 [05:08<12:09,  2.43it/s, loss=0.00618, v_num=3]Epoch 6:  30%|███       | 760/2524 [05:12<12:05,  2.43it/s, loss=0.00618, v_num=3]Epoch 6:  30%|███       | 760/2524 [05:12<12:05,  2.43it/s, loss=0.00658, v_num=3]Epoch 6:  31%|███       | 770/2524 [05:16<12:01,  2.43it/s, loss=0.00658, v_num=3]Epoch 6:  31%|███       | 770/2524 [05:16<12:01,  2.43it/s, loss=0.00784, v_num=3]Epoch 6:  31%|███       | 780/2524 [05:20<11:57,  2.43it/s, loss=0.00784, v_num=3]Epoch 6:  31%|███       | 780/2524 [05:20<11:57,  2.43it/s, loss=0.00829, v_num=3]Epoch 6:  31%|███▏      | 790/2524 [05:24<11:53,  2.43it/s, loss=0.00829, v_num=3]Epoch 6:  31%|███▏      | 790/2524 [05:24<11:53,  2.43it/s, loss=0.0105, v_num=3] Epoch 6:  32%|███▏      | 800/2524 [05:29<11:49,  2.43it/s, loss=0.0105, v_num=3]Epoch 6:  32%|███▏      | 800/2524 [05:29<11:49,  2.43it/s, loss=0.0101, v_num=3]Epoch 6:  32%|███▏      | 810/2524 [05:33<11:45,  2.43it/s, loss=0.0101, v_num=3]Epoch 6:  32%|███▏      | 810/2524 [05:33<11:45,  2.43it/s, loss=0.00815, v_num=3]Epoch 6:  32%|███▏      | 820/2524 [05:37<11:40,  2.43it/s, loss=0.00815, v_num=3]Epoch 6:  32%|███▏      | 820/2524 [05:37<11:40,  2.43it/s, loss=0.00706, v_num=3]Epoch 6:  33%|███▎      | 830/2524 [05:41<11:36,  2.43it/s, loss=0.00706, v_num=3]Epoch 6:  33%|███▎      | 830/2524 [05:41<11:36,  2.43it/s, loss=0.00712, v_num=3]Epoch 6:  33%|███▎      | 840/2524 [05:45<11:32,  2.43it/s, loss=0.00712, v_num=3]Epoch 6:  33%|███▎      | 840/2524 [05:45<11:32,  2.43it/s, loss=0.0072, v_num=3] Epoch 6:  34%|███▎      | 850/2524 [05:49<11:28,  2.43it/s, loss=0.0072, v_num=3]Epoch 6:  34%|███▎      | 850/2524 [05:49<11:28,  2.43it/s, loss=0.00789, v_num=3]Epoch 6:  34%|███▍      | 860/2524 [05:53<11:24,  2.43it/s, loss=0.00789, v_num=3]Epoch 6:  34%|███▍      | 860/2524 [05:53<11:24,  2.43it/s, loss=0.00779, v_num=3]Epoch 6:  34%|███▍      | 870/2524 [05:57<11:20,  2.43it/s, loss=0.00779, v_num=3]Epoch 6:  34%|███▍      | 870/2524 [05:57<11:20,  2.43it/s, loss=0.00694, v_num=3]Epoch 6:  35%|███▍      | 880/2524 [06:01<11:16,  2.43it/s, loss=0.00694, v_num=3]Epoch 6:  35%|███▍      | 880/2524 [06:01<11:16,  2.43it/s, loss=0.00844, v_num=3]Epoch 6:  35%|███▌      | 890/2524 [06:06<11:12,  2.43it/s, loss=0.00844, v_num=3]Epoch 6:  35%|███▌      | 890/2524 [06:06<11:12,  2.43it/s, loss=0.00793, v_num=3]Epoch 6:  36%|███▌      | 900/2524 [06:10<11:07,  2.43it/s, loss=0.00793, v_num=3]Epoch 6:  36%|███▌      | 900/2524 [06:10<11:07,  2.43it/s, loss=0.00746, v_num=3]Epoch 6:  36%|███▌      | 910/2524 [06:14<11:03,  2.43it/s, loss=0.00746, v_num=3]Epoch 6:  36%|███▌      | 910/2524 [06:14<11:03,  2.43it/s, loss=0.0102, v_num=3] Epoch 6:  36%|███▋      | 920/2524 [06:18<10:59,  2.43it/s, loss=0.0102, v_num=3]Epoch 6:  36%|███▋      | 920/2524 [06:18<10:59,  2.43it/s, loss=0.0113, v_num=3]Epoch 6:  37%|███▋      | 930/2524 [06:22<10:55,  2.43it/s, loss=0.0113, v_num=3]Epoch 6:  37%|███▋      | 930/2524 [06:22<10:55,  2.43it/s, loss=0.00922, v_num=3]Epoch 6:  37%|███▋      | 940/2524 [06:26<10:51,  2.43it/s, loss=0.00922, v_num=3]Epoch 6:  37%|███▋      | 940/2524 [06:26<10:51,  2.43it/s, loss=0.00782, v_num=3]Epoch 6:  38%|███▊      | 950/2524 [06:30<10:47,  2.43it/s, loss=0.00782, v_num=3]Epoch 6:  38%|███▊      | 950/2524 [06:30<10:47,  2.43it/s, loss=0.00852, v_num=3]Epoch 6:  38%|███▊      | 960/2524 [06:34<10:43,  2.43it/s, loss=0.00852, v_num=3]Epoch 6:  38%|███▊      | 960/2524 [06:34<10:43,  2.43it/s, loss=0.00878, v_num=3]Epoch 6:  38%|███▊      | 970/2524 [06:38<10:39,  2.43it/s, loss=0.00878, v_num=3]Epoch 6:  38%|███▊      | 970/2524 [06:38<10:39,  2.43it/s, loss=0.00963, v_num=3]Epoch 6:  39%|███▉      | 980/2524 [06:43<10:34,  2.43it/s, loss=0.00963, v_num=3]Epoch 6:  39%|███▉      | 980/2524 [06:43<10:35,  2.43it/s, loss=0.00851, v_num=3]Epoch 6:  39%|███▉      | 990/2524 [06:47<10:30,  2.43it/s, loss=0.00851, v_num=3]Epoch 6:  39%|███▉      | 990/2524 [06:47<10:30,  2.43it/s, loss=0.00761, v_num=3]Epoch 6:  40%|███▉      | 1000/2524 [06:51<10:26,  2.43it/s, loss=0.00761, v_num=3]Epoch 6:  40%|███▉      | 1000/2524 [06:51<10:26,  2.43it/s, loss=0.0097, v_num=3] Epoch 6:  40%|████      | 1010/2524 [06:55<10:22,  2.43it/s, loss=0.0097, v_num=3]Epoch 6:  40%|████      | 1010/2524 [06:55<10:22,  2.43it/s, loss=0.0113, v_num=3]Epoch 6:  40%|████      | 1020/2524 [06:59<10:18,  2.43it/s, loss=0.0113, v_num=3]Epoch 6:  40%|████      | 1020/2524 [06:59<10:18,  2.43it/s, loss=0.0111, v_num=3]Epoch 6:  41%|████      | 1030/2524 [07:03<10:14,  2.43it/s, loss=0.0111, v_num=3]Epoch 6:  41%|████      | 1030/2524 [07:03<10:14,  2.43it/s, loss=0.008, v_num=3] Epoch 6:  41%|████      | 1040/2524 [07:07<10:10,  2.43it/s, loss=0.008, v_num=3]Epoch 6:  41%|████      | 1040/2524 [07:07<10:10,  2.43it/s, loss=0.00742, v_num=3]Epoch 6:  42%|████▏     | 1050/2524 [07:11<10:06,  2.43it/s, loss=0.00742, v_num=3]Epoch 6:  42%|████▏     | 1050/2524 [07:11<10:06,  2.43it/s, loss=0.00746, v_num=3]Epoch 6:  42%|████▏     | 1060/2524 [07:15<10:02,  2.43it/s, loss=0.00746, v_num=3]Epoch 6:  42%|████▏     | 1060/2524 [07:15<10:02,  2.43it/s, loss=0.00803, v_num=3]Epoch 6:  42%|████▏     | 1070/2524 [07:20<09:57,  2.43it/s, loss=0.00803, v_num=3]Epoch 6:  42%|████▏     | 1070/2524 [07:20<09:57,  2.43it/s, loss=0.00891, v_num=3]Epoch 6:  43%|████▎     | 1080/2524 [07:24<09:53,  2.43it/s, loss=0.00891, v_num=3]Epoch 6:  43%|████▎     | 1080/2524 [07:24<09:53,  2.43it/s, loss=0.00748, v_num=3]Epoch 6:  43%|████▎     | 1090/2524 [07:28<09:49,  2.43it/s, loss=0.00748, v_num=3]Epoch 6:  43%|████▎     | 1090/2524 [07:28<09:49,  2.43it/s, loss=0.00719, v_num=3]Epoch 6:  44%|████▎     | 1100/2524 [07:32<09:45,  2.43it/s, loss=0.00719, v_num=3]Epoch 6:  44%|████▎     | 1100/2524 [07:32<09:45,  2.43it/s, loss=0.00692, v_num=3]Epoch 6:  44%|████▍     | 1110/2524 [07:36<09:41,  2.43it/s, loss=0.00692, v_num=3]Epoch 6:  44%|████▍     | 1110/2524 [07:36<09:41,  2.43it/s, loss=0.00789, v_num=3]Epoch 6:  44%|████▍     | 1120/2524 [07:40<09:37,  2.43it/s, loss=0.00789, v_num=3]Epoch 6:  44%|████▍     | 1120/2524 [07:40<09:37,  2.43it/s, loss=0.00951, v_num=3]Epoch 6:  45%|████▍     | 1130/2524 [07:44<09:33,  2.43it/s, loss=0.00951, v_num=3]Epoch 6:  45%|████▍     | 1130/2524 [07:44<09:33,  2.43it/s, loss=0.00968, v_num=3]Epoch 6:  45%|████▌     | 1140/2524 [07:48<09:29,  2.43it/s, loss=0.00968, v_num=3]Epoch 6:  45%|████▌     | 1140/2524 [07:48<09:29,  2.43it/s, loss=0.00871, v_num=3]Epoch 6:  46%|████▌     | 1150/2524 [07:52<09:24,  2.43it/s, loss=0.00871, v_num=3]Epoch 6:  46%|████▌     | 1150/2524 [07:52<09:24,  2.43it/s, loss=0.00812, v_num=3]Epoch 6:  46%|████▌     | 1160/2524 [07:57<09:20,  2.43it/s, loss=0.00812, v_num=3]Epoch 6:  46%|████▌     | 1160/2524 [07:57<09:20,  2.43it/s, loss=0.0082, v_num=3] Epoch 6:  46%|████▋     | 1170/2524 [08:01<09:16,  2.43it/s, loss=0.0082, v_num=3]Epoch 6:  46%|████▋     | 1170/2524 [08:01<09:16,  2.43it/s, loss=0.00797, v_num=3]Epoch 6:  47%|████▋     | 1180/2524 [08:05<09:12,  2.43it/s, loss=0.00797, v_num=3]Epoch 6:  47%|████▋     | 1180/2524 [08:05<09:12,  2.43it/s, loss=0.00949, v_num=3]Epoch 6:  47%|████▋     | 1190/2524 [08:09<09:08,  2.43it/s, loss=0.00949, v_num=3]Epoch 6:  47%|████▋     | 1190/2524 [08:09<09:08,  2.43it/s, loss=0.00992, v_num=3]Epoch 6:  48%|████▊     | 1200/2524 [08:13<09:04,  2.43it/s, loss=0.00992, v_num=3]Epoch 6:  48%|████▊     | 1200/2524 [08:13<09:04,  2.43it/s, loss=0.00842, v_num=3]Epoch 6:  48%|████▊     | 1210/2524 [08:17<09:00,  2.43it/s, loss=0.00842, v_num=3]Epoch 6:  48%|████▊     | 1210/2524 [08:17<09:00,  2.43it/s, loss=0.00647, v_num=3]Epoch 6:  48%|████▊     | 1220/2524 [08:21<08:56,  2.43it/s, loss=0.00647, v_num=3]Epoch 6:  48%|████▊     | 1220/2524 [08:21<08:56,  2.43it/s, loss=0.0084, v_num=3] Epoch 6:  49%|████▊     | 1230/2524 [08:25<08:52,  2.43it/s, loss=0.0084, v_num=3]Epoch 6:  49%|████▊     | 1230/2524 [08:25<08:52,  2.43it/s, loss=0.00892, v_num=3]Epoch 6:  49%|████▉     | 1240/2524 [08:29<08:47,  2.43it/s, loss=0.00892, v_num=3]Epoch 6:  49%|████▉     | 1240/2524 [08:29<08:47,  2.43it/s, loss=0.00864, v_num=3]Epoch 6:  50%|████▉     | 1250/2524 [08:33<08:43,  2.43it/s, loss=0.00864, v_num=3]Epoch 6:  50%|████▉     | 1250/2524 [08:33<08:43,  2.43it/s, loss=0.00825, v_num=3]Epoch 6:  50%|████▉     | 1260/2524 [08:38<08:39,  2.43it/s, loss=0.00825, v_num=3]Epoch 6:  50%|████▉     | 1260/2524 [08:38<08:39,  2.43it/s, loss=0.00666, v_num=3]Epoch 6:  50%|█████     | 1270/2524 [08:42<08:35,  2.43it/s, loss=0.00666, v_num=3]Epoch 6:  50%|█████     | 1270/2524 [08:42<08:35,  2.43it/s, loss=0.00987, v_num=3]Epoch 6:  51%|█████     | 1280/2524 [08:46<08:31,  2.43it/s, loss=0.00987, v_num=3]Epoch 6:  51%|█████     | 1280/2524 [08:46<08:31,  2.43it/s, loss=0.00856, v_num=3]Epoch 6:  51%|█████     | 1290/2524 [08:50<08:27,  2.43it/s, loss=0.00856, v_num=3]Epoch 6:  51%|█████     | 1290/2524 [08:50<08:27,  2.43it/s, loss=0.00599, v_num=3]Epoch 6:  52%|█████▏    | 1300/2524 [08:54<08:23,  2.43it/s, loss=0.00599, v_num=3]Epoch 6:  52%|█████▏    | 1300/2524 [08:54<08:23,  2.43it/s, loss=0.006, v_num=3]  Epoch 6:  52%|█████▏    | 1310/2524 [08:58<08:19,  2.43it/s, loss=0.006, v_num=3]Epoch 6:  52%|█████▏    | 1310/2524 [08:58<08:19,  2.43it/s, loss=0.00749, v_num=3]Epoch 6:  52%|█████▏    | 1320/2524 [09:02<08:15,  2.43it/s, loss=0.00749, v_num=3]Epoch 6:  52%|█████▏    | 1320/2524 [09:02<08:15,  2.43it/s, loss=0.00874, v_num=3]Epoch 6:  53%|█████▎    | 1330/2524 [09:06<08:10,  2.43it/s, loss=0.00874, v_num=3]Epoch 6:  53%|█████▎    | 1330/2524 [09:06<08:10,  2.43it/s, loss=0.00864, v_num=3]Epoch 6:  53%|█████▎    | 1340/2524 [09:10<08:06,  2.43it/s, loss=0.00864, v_num=3]Epoch 6:  53%|█████▎    | 1340/2524 [09:10<08:06,  2.43it/s, loss=0.00863, v_num=3]Epoch 6:  53%|█████▎    | 1350/2524 [09:14<08:02,  2.43it/s, loss=0.00863, v_num=3]Epoch 6:  53%|█████▎    | 1350/2524 [09:14<08:02,  2.43it/s, loss=0.00754, v_num=3]Epoch 6:  54%|█████▍    | 1360/2524 [09:19<07:58,  2.43it/s, loss=0.00754, v_num=3]Epoch 6:  54%|█████▍    | 1360/2524 [09:19<07:58,  2.43it/s, loss=0.00671, v_num=3]Epoch 6:  54%|█████▍    | 1370/2524 [09:23<07:54,  2.43it/s, loss=0.00671, v_num=3]Epoch 6:  54%|█████▍    | 1370/2524 [09:23<07:54,  2.43it/s, loss=0.00737, v_num=3]Epoch 6:  55%|█████▍    | 1380/2524 [09:27<07:50,  2.43it/s, loss=0.00737, v_num=3]Epoch 6:  55%|█████▍    | 1380/2524 [09:27<07:50,  2.43it/s, loss=0.00861, v_num=3]Epoch 6:  55%|█████▌    | 1390/2524 [09:31<07:46,  2.43it/s, loss=0.00861, v_num=3]Epoch 6:  55%|█████▌    | 1390/2524 [09:31<07:46,  2.43it/s, loss=0.00756, v_num=3]Epoch 6:  55%|█████▌    | 1400/2524 [09:35<07:42,  2.43it/s, loss=0.00756, v_num=3]Epoch 6:  55%|█████▌    | 1400/2524 [09:35<07:42,  2.43it/s, loss=0.00713, v_num=3]Epoch 6:  56%|█████▌    | 1410/2524 [09:39<07:38,  2.43it/s, loss=0.00713, v_num=3]Epoch 6:  56%|█████▌    | 1410/2524 [09:39<07:38,  2.43it/s, loss=0.0102, v_num=3] Epoch 6:  56%|█████▋    | 1420/2524 [09:43<07:33,  2.43it/s, loss=0.0102, v_num=3]Epoch 6:  56%|█████▋    | 1420/2524 [09:43<07:33,  2.43it/s, loss=0.0124, v_num=3]Epoch 6:  57%|█████▋    | 1430/2524 [09:47<07:29,  2.43it/s, loss=0.0124, v_num=3]Epoch 6:  57%|█████▋    | 1430/2524 [09:47<07:29,  2.43it/s, loss=0.00896, v_num=3]Epoch 6:  57%|█████▋    | 1440/2524 [09:51<07:25,  2.43it/s, loss=0.00896, v_num=3]Epoch 6:  57%|█████▋    | 1440/2524 [09:51<07:25,  2.43it/s, loss=0.00563, v_num=3]Epoch 6:  57%|█████▋    | 1450/2524 [09:56<07:21,  2.43it/s, loss=0.00563, v_num=3]Epoch 6:  57%|█████▋    | 1450/2524 [09:56<07:21,  2.43it/s, loss=0.00582, v_num=3]Epoch 6:  58%|█████▊    | 1460/2524 [10:00<07:17,  2.43it/s, loss=0.00582, v_num=3]Epoch 6:  58%|█████▊    | 1460/2524 [10:00<07:17,  2.43it/s, loss=0.00998, v_num=3]Epoch 6:  58%|█████▊    | 1470/2524 [10:04<07:13,  2.43it/s, loss=0.00998, v_num=3]Epoch 6:  58%|█████▊    | 1470/2524 [10:04<07:13,  2.43it/s, loss=0.00927, v_num=3]Epoch 6:  59%|█████▊    | 1480/2524 [10:08<07:09,  2.43it/s, loss=0.00927, v_num=3]Epoch 6:  59%|█████▊    | 1480/2524 [10:08<07:09,  2.43it/s, loss=0.00744, v_num=3]Epoch 6:  59%|█████▉    | 1490/2524 [10:12<07:05,  2.43it/s, loss=0.00744, v_num=3]Epoch 6:  59%|█████▉    | 1490/2524 [10:12<07:05,  2.43it/s, loss=0.00706, v_num=3]Epoch 6:  59%|█████▉    | 1500/2524 [10:16<07:00,  2.43it/s, loss=0.00706, v_num=3]Epoch 6:  59%|█████▉    | 1500/2524 [10:16<07:00,  2.43it/s, loss=0.00688, v_num=3]Epoch 6:  60%|█████▉    | 1510/2524 [10:20<06:56,  2.43it/s, loss=0.00688, v_num=3]Epoch 6:  60%|█████▉    | 1510/2524 [10:20<06:56,  2.43it/s, loss=0.00906, v_num=3]Epoch 6:  60%|██████    | 1520/2524 [10:24<06:52,  2.43it/s, loss=0.00906, v_num=3]Epoch 6:  60%|██████    | 1520/2524 [10:24<06:52,  2.43it/s, loss=0.00816, v_num=3]Epoch 6:  61%|██████    | 1530/2524 [10:28<06:48,  2.43it/s, loss=0.00816, v_num=3]Epoch 6:  61%|██████    | 1530/2524 [10:28<06:48,  2.43it/s, loss=0.00734, v_num=3]Epoch 6:  61%|██████    | 1540/2524 [10:33<06:44,  2.43it/s, loss=0.00734, v_num=3]Epoch 6:  61%|██████    | 1540/2524 [10:33<06:44,  2.43it/s, loss=0.00828, v_num=3]Epoch 6:  61%|██████▏   | 1550/2524 [10:37<06:40,  2.43it/s, loss=0.00828, v_num=3]Epoch 6:  61%|██████▏   | 1550/2524 [10:37<06:40,  2.43it/s, loss=0.0114, v_num=3] Epoch 6:  62%|██████▏   | 1560/2524 [10:41<06:36,  2.43it/s, loss=0.0114, v_num=3]Epoch 6:  62%|██████▏   | 1560/2524 [10:41<06:36,  2.43it/s, loss=0.0114, v_num=3]Epoch 6:  62%|██████▏   | 1570/2524 [10:45<06:32,  2.43it/s, loss=0.0114, v_num=3]Epoch 6:  62%|██████▏   | 1570/2524 [10:45<06:32,  2.43it/s, loss=0.008, v_num=3] Epoch 6:  63%|██████▎   | 1580/2524 [10:49<06:28,  2.43it/s, loss=0.008, v_num=3]Epoch 6:  63%|██████▎   | 1580/2524 [10:49<06:28,  2.43it/s, loss=0.00688, v_num=3]Epoch 6:  63%|██████▎   | 1590/2524 [10:53<06:23,  2.43it/s, loss=0.00688, v_num=3]Epoch 6:  63%|██████▎   | 1590/2524 [10:53<06:23,  2.43it/s, loss=0.00665, v_num=3]Epoch 6:  63%|██████▎   | 1600/2524 [10:57<06:19,  2.43it/s, loss=0.00665, v_num=3]Epoch 6:  63%|██████▎   | 1600/2524 [10:57<06:19,  2.43it/s, loss=0.00899, v_num=3]Epoch 6:  64%|██████▍   | 1610/2524 [11:01<06:15,  2.43it/s, loss=0.00899, v_num=3]Epoch 6:  64%|██████▍   | 1610/2524 [11:01<06:15,  2.43it/s, loss=0.0124, v_num=3] Epoch 6:  64%|██████▍   | 1620/2524 [11:05<06:11,  2.43it/s, loss=0.0124, v_num=3]Epoch 6:  64%|██████▍   | 1620/2524 [11:05<06:11,  2.43it/s, loss=0.0113, v_num=3]Epoch 6:  65%|██████▍   | 1630/2524 [11:10<06:07,  2.43it/s, loss=0.0113, v_num=3]Epoch 6:  65%|██████▍   | 1630/2524 [11:10<06:07,  2.43it/s, loss=0.00887, v_num=3]Epoch 6:  65%|██████▍   | 1640/2524 [11:14<06:03,  2.43it/s, loss=0.00887, v_num=3]Epoch 6:  65%|██████▍   | 1640/2524 [11:14<06:03,  2.43it/s, loss=0.0099, v_num=3] Epoch 6:  65%|██████▌   | 1650/2524 [11:18<05:59,  2.43it/s, loss=0.0099, v_num=3]Epoch 6:  65%|██████▌   | 1650/2524 [11:18<05:59,  2.43it/s, loss=0.0102, v_num=3]Epoch 6:  66%|██████▌   | 1660/2524 [11:22<05:55,  2.43it/s, loss=0.0102, v_num=3]Epoch 6:  66%|██████▌   | 1660/2524 [11:22<05:55,  2.43it/s, loss=0.00753, v_num=3]Epoch 6:  66%|██████▌   | 1670/2524 [11:26<05:51,  2.43it/s, loss=0.00753, v_num=3]Epoch 6:  66%|██████▌   | 1670/2524 [11:26<05:51,  2.43it/s, loss=0.00566, v_num=3]Epoch 6:  67%|██████▋   | 1680/2524 [11:30<05:46,  2.43it/s, loss=0.00566, v_num=3]Epoch 6:  67%|██████▋   | 1680/2524 [11:30<05:46,  2.43it/s, loss=0.0059, v_num=3] Epoch 6:  67%|██████▋   | 1690/2524 [11:34<05:42,  2.43it/s, loss=0.0059, v_num=3]Epoch 6:  67%|██████▋   | 1690/2524 [11:34<05:42,  2.43it/s, loss=0.00824, v_num=3]Epoch 6:  67%|██████▋   | 1700/2524 [11:38<05:38,  2.43it/s, loss=0.00824, v_num=3]Epoch 6:  67%|██████▋   | 1700/2524 [11:38<05:38,  2.43it/s, loss=0.00992, v_num=3]Epoch 6:  68%|██████▊   | 1710/2524 [11:42<05:34,  2.43it/s, loss=0.00992, v_num=3]Epoch 6:  68%|██████▊   | 1710/2524 [11:42<05:34,  2.43it/s, loss=0.00985, v_num=3]Epoch 6:  68%|██████▊   | 1720/2524 [11:47<05:30,  2.43it/s, loss=0.00985, v_num=3]Epoch 6:  68%|██████▊   | 1720/2524 [11:47<05:30,  2.43it/s, loss=0.00908, v_num=3]Epoch 6:  69%|██████▊   | 1730/2524 [11:51<05:26,  2.43it/s, loss=0.00908, v_num=3]Epoch 6:  69%|██████▊   | 1730/2524 [11:51<05:26,  2.43it/s, loss=0.00805, v_num=3]Epoch 6:  69%|██████▉   | 1740/2524 [11:55<05:22,  2.43it/s, loss=0.00805, v_num=3]Epoch 6:  69%|██████▉   | 1740/2524 [11:55<05:22,  2.43it/s, loss=0.00754, v_num=3]Epoch 6:  69%|██████▉   | 1750/2524 [11:59<05:18,  2.43it/s, loss=0.00754, v_num=3]Epoch 6:  69%|██████▉   | 1750/2524 [11:59<05:18,  2.43it/s, loss=0.0098, v_num=3] Epoch 6:  70%|██████▉   | 1760/2524 [12:03<05:14,  2.43it/s, loss=0.0098, v_num=3]Epoch 6:  70%|██████▉   | 1760/2524 [12:03<05:14,  2.43it/s, loss=0.0101, v_num=3]Epoch 6:  70%|███████   | 1770/2524 [12:07<05:09,  2.43it/s, loss=0.0101, v_num=3]Epoch 6:  70%|███████   | 1770/2524 [12:07<05:09,  2.43it/s, loss=0.00956, v_num=3]Epoch 6:  71%|███████   | 1780/2524 [12:11<05:05,  2.43it/s, loss=0.00956, v_num=3]Epoch 6:  71%|███████   | 1780/2524 [12:11<05:05,  2.43it/s, loss=0.0091, v_num=3] Epoch 6:  71%|███████   | 1790/2524 [12:15<05:01,  2.43it/s, loss=0.0091, v_num=3]Epoch 6:  71%|███████   | 1790/2524 [12:15<05:01,  2.43it/s, loss=0.00868, v_num=3]Epoch 6:  71%|███████▏  | 1800/2524 [12:19<04:57,  2.43it/s, loss=0.00868, v_num=3]Epoch 6:  71%|███████▏  | 1800/2524 [12:19<04:57,  2.43it/s, loss=0.00787, v_num=3]Epoch 6:  72%|███████▏  | 1810/2524 [12:24<04:53,  2.43it/s, loss=0.00787, v_num=3]Epoch 6:  72%|███████▏  | 1810/2524 [12:24<04:53,  2.43it/s, loss=0.00649, v_num=3]Epoch 6:  72%|███████▏  | 1820/2524 [12:28<04:49,  2.43it/s, loss=0.00649, v_num=3]Epoch 6:  72%|███████▏  | 1820/2524 [12:28<04:49,  2.43it/s, loss=0.00833, v_num=3]Epoch 6:  73%|███████▎  | 1830/2524 [12:32<04:45,  2.43it/s, loss=0.00833, v_num=3]Epoch 6:  73%|███████▎  | 1830/2524 [12:32<04:45,  2.43it/s, loss=0.00789, v_num=3]Epoch 6:  73%|███████▎  | 1840/2524 [12:36<04:41,  2.43it/s, loss=0.00789, v_num=3]Epoch 6:  73%|███████▎  | 1840/2524 [12:36<04:41,  2.43it/s, loss=0.00581, v_num=3]Epoch 6:  73%|███████▎  | 1850/2524 [12:40<04:37,  2.43it/s, loss=0.00581, v_num=3]Epoch 6:  73%|███████▎  | 1850/2524 [12:40<04:37,  2.43it/s, loss=0.00654, v_num=3]Epoch 6:  74%|███████▎  | 1860/2524 [12:44<04:32,  2.43it/s, loss=0.00654, v_num=3]Epoch 6:  74%|███████▎  | 1860/2524 [12:44<04:32,  2.43it/s, loss=0.00716, v_num=3]Epoch 6:  74%|███████▍  | 1870/2524 [12:48<04:28,  2.43it/s, loss=0.00716, v_num=3]Epoch 6:  74%|███████▍  | 1870/2524 [12:48<04:28,  2.43it/s, loss=0.00817, v_num=3]Epoch 6:  74%|███████▍  | 1880/2524 [12:52<04:24,  2.43it/s, loss=0.00817, v_num=3]Epoch 6:  74%|███████▍  | 1880/2524 [12:52<04:24,  2.43it/s, loss=0.00732, v_num=3]Epoch 6:  75%|███████▍  | 1890/2524 [12:56<04:20,  2.43it/s, loss=0.00732, v_num=3]Epoch 6:  75%|███████▍  | 1890/2524 [12:56<04:20,  2.43it/s, loss=0.00844, v_num=3]Epoch 6:  75%|███████▌  | 1900/2524 [13:00<04:16,  2.43it/s, loss=0.00844, v_num=3]Epoch 6:  75%|███████▌  | 1900/2524 [13:00<04:16,  2.43it/s, loss=0.01, v_num=3]   Epoch 6:  76%|███████▌  | 1910/2524 [13:05<04:12,  2.43it/s, loss=0.01, v_num=3]Epoch 6:  76%|███████▌  | 1910/2524 [13:05<04:12,  2.43it/s, loss=0.00875, v_num=3]Epoch 6:  76%|███████▌  | 1920/2524 [13:09<04:08,  2.43it/s, loss=0.00875, v_num=3]Epoch 6:  76%|███████▌  | 1920/2524 [13:09<04:08,  2.43it/s, loss=0.0097, v_num=3] Epoch 6:  76%|███████▋  | 1930/2524 [13:13<04:04,  2.43it/s, loss=0.0097, v_num=3]Epoch 6:  76%|███████▋  | 1930/2524 [13:13<04:04,  2.43it/s, loss=0.00869, v_num=3]Epoch 6:  77%|███████▋  | 1940/2524 [13:17<04:00,  2.43it/s, loss=0.00869, v_num=3]Epoch 6:  77%|███████▋  | 1940/2524 [13:17<04:00,  2.43it/s, loss=0.00835, v_num=3]Epoch 6:  77%|███████▋  | 1950/2524 [13:21<03:55,  2.43it/s, loss=0.00835, v_num=3]Epoch 6:  77%|███████▋  | 1950/2524 [13:21<03:55,  2.43it/s, loss=0.00953, v_num=3]Epoch 6:  78%|███████▊  | 1960/2524 [13:25<03:51,  2.43it/s, loss=0.00953, v_num=3]Epoch 6:  78%|███████▊  | 1960/2524 [13:25<03:51,  2.43it/s, loss=0.0105, v_num=3] Epoch 6:  78%|███████▊  | 1970/2524 [13:29<03:47,  2.43it/s, loss=0.0105, v_num=3]Epoch 6:  78%|███████▊  | 1970/2524 [13:29<03:47,  2.43it/s, loss=0.0121, v_num=3]Epoch 6:  78%|███████▊  | 1980/2524 [13:33<03:43,  2.43it/s, loss=0.0121, v_num=3]Epoch 6:  78%|███████▊  | 1980/2524 [13:33<03:43,  2.43it/s, loss=0.0103, v_num=3]Epoch 6:  79%|███████▉  | 1990/2524 [13:38<03:39,  2.43it/s, loss=0.0103, v_num=3]Epoch 6:  79%|███████▉  | 1990/2524 [13:38<03:39,  2.43it/s, loss=0.00752, v_num=3]Epoch 6:  79%|███████▉  | 2000/2524 [13:42<03:35,  2.43it/s, loss=0.00752, v_num=3]Epoch 6:  79%|███████▉  | 2000/2524 [13:42<03:35,  2.43it/s, loss=0.00818, v_num=3]Epoch 6:  80%|███████▉  | 2010/2524 [13:46<03:31,  2.43it/s, loss=0.00818, v_num=3]Epoch 6:  80%|███████▉  | 2010/2524 [13:46<03:31,  2.43it/s, loss=0.00886, v_num=3]Epoch 6:  80%|████████  | 2020/2524 [13:50<03:27,  2.43it/s, loss=0.00886, v_num=3]Epoch 6:  80%|████████  | 2020/2524 [13:50<03:27,  2.43it/s, loss=0.0101, v_num=3] Epoch 6:  80%|████████  | 2030/2524 [13:54<03:23,  2.43it/s, loss=0.0101, v_num=3]Epoch 6:  80%|████████  | 2030/2524 [13:54<03:23,  2.43it/s, loss=0.00916, v_num=3]Epoch 6:  81%|████████  | 2040/2524 [13:58<03:18,  2.43it/s, loss=0.00916, v_num=3]Epoch 6:  81%|████████  | 2040/2524 [13:58<03:18,  2.43it/s, loss=0.00792, v_num=3]Epoch 6:  81%|████████  | 2050/2524 [14:02<03:14,  2.43it/s, loss=0.00792, v_num=3]Epoch 6:  81%|████████  | 2050/2524 [14:02<03:14,  2.43it/s, loss=0.00871, v_num=3]Epoch 6:  82%|████████▏ | 2060/2524 [14:06<03:10,  2.43it/s, loss=0.00871, v_num=3]Epoch 6:  82%|████████▏ | 2060/2524 [14:06<03:10,  2.43it/s, loss=0.00837, v_num=3]Epoch 6:  82%|████████▏ | 2070/2524 [14:10<03:06,  2.43it/s, loss=0.00837, v_num=3]Epoch 6:  82%|████████▏ | 2070/2524 [14:10<03:06,  2.43it/s, loss=0.00928, v_num=3]Epoch 6:  82%|████████▏ | 2080/2524 [14:15<03:02,  2.43it/s, loss=0.00928, v_num=3]Epoch 6:  82%|████████▏ | 2080/2524 [14:15<03:02,  2.43it/s, loss=0.00872, v_num=3]Epoch 6:  83%|████████▎ | 2090/2524 [14:19<02:58,  2.43it/s, loss=0.00872, v_num=3]Epoch 6:  83%|████████▎ | 2090/2524 [14:19<02:58,  2.43it/s, loss=0.0071, v_num=3] Epoch 6:  83%|████████▎ | 2100/2524 [14:23<02:54,  2.43it/s, loss=0.0071, v_num=3]Epoch 6:  83%|████████▎ | 2100/2524 [14:23<02:54,  2.43it/s, loss=0.00533, v_num=3]Epoch 6:  84%|████████▎ | 2110/2524 [14:27<02:50,  2.43it/s, loss=0.00533, v_num=3]Epoch 6:  84%|████████▎ | 2110/2524 [14:27<02:50,  2.43it/s, loss=0.00338, v_num=3]Epoch 6:  84%|████████▍ | 2120/2524 [14:31<02:46,  2.43it/s, loss=0.00338, v_num=3]Epoch 6:  84%|████████▍ | 2120/2524 [14:31<02:46,  2.43it/s, loss=0.00679, v_num=3]Epoch 6:  84%|████████▍ | 2130/2524 [14:35<02:41,  2.43it/s, loss=0.00679, v_num=3]Epoch 6:  84%|████████▍ | 2130/2524 [14:35<02:41,  2.43it/s, loss=0.00898, v_num=3]Epoch 6:  85%|████████▍ | 2140/2524 [14:39<02:37,  2.43it/s, loss=0.00898, v_num=3]Epoch 6:  85%|████████▍ | 2140/2524 [14:39<02:37,  2.43it/s, loss=0.00599, v_num=3]Epoch 6:  85%|████████▌ | 2150/2524 [14:43<02:33,  2.43it/s, loss=0.00599, v_num=3]Epoch 6:  85%|████████▌ | 2150/2524 [14:43<02:33,  2.43it/s, loss=0.00623, v_num=3]Epoch 6:  86%|████████▌ | 2160/2524 [14:47<02:29,  2.43it/s, loss=0.00623, v_num=3]Epoch 6:  86%|████████▌ | 2160/2524 [14:48<02:29,  2.43it/s, loss=0.00845, v_num=3]Epoch 6:  86%|████████▌ | 2170/2524 [14:52<02:25,  2.43it/s, loss=0.00845, v_num=3]Epoch 6:  86%|████████▌ | 2170/2524 [14:52<02:25,  2.43it/s, loss=0.00845, v_num=3]Epoch 6:  86%|████████▋ | 2180/2524 [14:56<02:21,  2.43it/s, loss=0.00845, v_num=3]Epoch 6:  86%|████████▋ | 2180/2524 [14:56<02:21,  2.43it/s, loss=0.0104, v_num=3] Epoch 6:  87%|████████▋ | 2190/2524 [15:00<02:17,  2.43it/s, loss=0.0104, v_num=3]Epoch 6:  87%|████████▋ | 2190/2524 [15:00<02:17,  2.43it/s, loss=0.0102, v_num=3]Epoch 6:  87%|████████▋ | 2200/2524 [15:04<02:13,  2.43it/s, loss=0.0102, v_num=3]Epoch 6:  87%|████████▋ | 2200/2524 [15:04<02:13,  2.43it/s, loss=0.0111, v_num=3]Epoch 6:  88%|████████▊ | 2210/2524 [15:08<02:09,  2.43it/s, loss=0.0111, v_num=3]Epoch 6:  88%|████████▊ | 2210/2524 [15:08<02:09,  2.43it/s, loss=0.0125, v_num=3]Epoch 6:  88%|████████▊ | 2220/2524 [15:12<02:04,  2.43it/s, loss=0.0125, v_num=3]Epoch 6:  88%|████████▊ | 2220/2524 [15:12<02:04,  2.43it/s, loss=0.0119, v_num=3]Epoch 6:  88%|████████▊ | 2230/2524 [15:16<02:00,  2.43it/s, loss=0.0119, v_num=3]Epoch 6:  88%|████████▊ | 2230/2524 [15:16<02:00,  2.43it/s, loss=0.0131, v_num=3]Epoch 6:  89%|████████▊ | 2240/2524 [15:20<01:56,  2.43it/s, loss=0.0131, v_num=3]Epoch 6:  89%|████████▊ | 2240/2524 [15:20<01:56,  2.43it/s, loss=0.0101, v_num=3]Epoch 6:  89%|████████▉ | 2250/2524 [15:24<01:52,  2.43it/s, loss=0.0101, v_num=3]Epoch 6:  89%|████████▉ | 2250/2524 [15:24<01:52,  2.43it/s, loss=0.00733, v_num=3]Epoch 6:  90%|████████▉ | 2260/2524 [15:29<01:48,  2.43it/s, loss=0.00733, v_num=3]Epoch 6:  90%|████████▉ | 2260/2524 [15:29<01:48,  2.43it/s, loss=0.0071, v_num=3] Epoch 6:  90%|████████▉ | 2270/2524 [15:33<01:44,  2.43it/s, loss=0.0071, v_num=3]Epoch 6:  90%|████████▉ | 2270/2524 [15:33<01:44,  2.43it/s, loss=0.00963, v_num=3]Epoch 6:  90%|█████████ | 2280/2524 [15:37<01:40,  2.43it/s, loss=0.00963, v_num=3]Epoch 6:  90%|█████████ | 2280/2524 [15:37<01:40,  2.43it/s, loss=0.0106, v_num=3] Epoch 6:  91%|█████████ | 2290/2524 [15:41<01:36,  2.43it/s, loss=0.0106, v_num=3]Epoch 6:  91%|█████████ | 2290/2524 [15:41<01:36,  2.43it/s, loss=0.00907, v_num=3]Epoch 6:  91%|█████████ | 2300/2524 [15:45<01:32,  2.43it/s, loss=0.00907, v_num=3]Epoch 6:  91%|█████████ | 2300/2524 [15:45<01:32,  2.43it/s, loss=0.00874, v_num=3]Epoch 6:  92%|█████████▏| 2310/2524 [15:49<01:27,  2.43it/s, loss=0.00874, v_num=3]Epoch 6:  92%|█████████▏| 2310/2524 [15:49<01:27,  2.43it/s, loss=0.0102, v_num=3] Epoch 6:  92%|█████████▏| 2320/2524 [15:53<01:23,  2.43it/s, loss=0.0102, v_num=3]Epoch 6:  92%|█████████▏| 2320/2524 [15:53<01:23,  2.43it/s, loss=0.0121, v_num=3]Epoch 6:  92%|█████████▏| 2330/2524 [15:57<01:19,  2.43it/s, loss=0.0121, v_num=3]Epoch 6:  92%|█████████▏| 2330/2524 [15:57<01:19,  2.43it/s, loss=0.0131, v_num=3]Epoch 6:  93%|█████████▎| 2340/2524 [16:01<01:15,  2.43it/s, loss=0.0131, v_num=3]Epoch 6:  93%|█████████▎| 2340/2524 [16:01<01:15,  2.43it/s, loss=0.0131, v_num=3]Epoch 6:  93%|█████████▎| 2350/2524 [16:05<01:11,  2.43it/s, loss=0.0131, v_num=3]Epoch 6:  93%|█████████▎| 2350/2524 [16:06<01:11,  2.43it/s, loss=0.0107, v_num=3]Epoch 6:  94%|█████████▎| 2360/2524 [16:10<01:07,  2.43it/s, loss=0.0107, v_num=3]Epoch 6:  94%|█████████▎| 2360/2524 [16:10<01:07,  2.43it/s, loss=0.00716, v_num=3]Epoch 6:  94%|█████████▍| 2370/2524 [16:14<01:03,  2.43it/s, loss=0.00716, v_num=3]Epoch 6:  94%|█████████▍| 2370/2524 [16:14<01:03,  2.43it/s, loss=0.00619, v_num=3]Epoch 6:  94%|█████████▍| 2380/2524 [16:18<00:59,  2.43it/s, loss=0.00619, v_num=3]Epoch 6:  94%|█████████▍| 2380/2524 [16:18<00:59,  2.43it/s, loss=0.00775, v_num=3]Epoch 6:  95%|█████████▍| 2390/2524 [16:22<00:55,  2.43it/s, loss=0.00775, v_num=3]Epoch 6:  95%|█████████▍| 2390/2524 [16:22<00:55,  2.43it/s, loss=0.00837, v_num=3]Epoch 6:  95%|█████████▌| 2400/2524 [16:26<00:50,  2.43it/s, loss=0.00837, v_num=3]Epoch 6:  95%|█████████▌| 2400/2524 [16:26<00:50,  2.43it/s, loss=0.00978, v_num=3]Epoch 6:  95%|█████████▌| 2410/2524 [16:30<00:46,  2.43it/s, loss=0.00978, v_num=3]Epoch 6:  95%|█████████▌| 2410/2524 [16:30<00:46,  2.43it/s, loss=0.00845, v_num=3]Epoch 6:  96%|█████████▌| 2420/2524 [16:34<00:42,  2.43it/s, loss=0.00845, v_num=3]Epoch 6:  96%|█████████▌| 2420/2524 [16:34<00:42,  2.43it/s, loss=0.00598, v_num=3]Epoch 6:  96%|█████████▋| 2430/2524 [16:38<00:38,  2.43it/s, loss=0.00598, v_num=3]Epoch 6:  96%|█████████▋| 2430/2524 [16:38<00:38,  2.43it/s, loss=0.00582, v_num=3]Epoch 6:  97%|█████████▋| 2440/2524 [16:42<00:34,  2.43it/s, loss=0.00582, v_num=3]Epoch 6:  97%|█████████▋| 2440/2524 [16:42<00:34,  2.43it/s, loss=0.00734, v_num=3]Epoch 6:  97%|█████████▋| 2450/2524 [16:47<00:30,  2.43it/s, loss=0.00734, v_num=3]Epoch 6:  97%|█████████▋| 2450/2524 [16:47<00:30,  2.43it/s, loss=0.00806, v_num=3]Epoch 6:  97%|█████████▋| 2460/2524 [16:51<00:26,  2.43it/s, loss=0.00806, v_num=3]Epoch 6:  97%|█████████▋| 2460/2524 [16:51<00:26,  2.43it/s, loss=0.00985, v_num=3]Epoch 6:  98%|█████████▊| 2470/2524 [16:55<00:22,  2.43it/s, loss=0.00985, v_num=3]Epoch 6:  98%|█████████▊| 2470/2524 [16:55<00:22,  2.43it/s, loss=0.0116, v_num=3] Epoch 6:  98%|█████████▊| 2480/2524 [16:59<00:18,  2.43it/s, loss=0.0116, v_num=3]Epoch 6:  98%|█████████▊| 2480/2524 [16:59<00:18,  2.43it/s, loss=0.00889, v_num=3]Epoch 6:  99%|█████████▊| 2490/2524 [17:03<00:13,  2.43it/s, loss=0.00889, v_num=3]Epoch 6:  99%|█████████▊| 2490/2524 [17:03<00:13,  2.43it/s, loss=0.00656, v_num=3]Epoch 6:  99%|█████████▉| 2500/2524 [17:07<00:09,  2.43it/s, loss=0.00656, v_num=3]Epoch 6:  99%|█████████▉| 2500/2524 [17:07<00:09,  2.43it/s, loss=0.00782, v_num=3]Epoch 6:  99%|█████████▉| 2510/2524 [17:11<00:05,  2.43it/s, loss=0.00782, v_num=3]Epoch 6:  99%|█████████▉| 2510/2524 [17:11<00:05,  2.43it/s, loss=0.00822, v_num=3]Epoch 6: 100%|█████████▉| 2520/2524 [17:15<00:01,  2.43it/s, loss=0.00822, v_num=3]Epoch 6: 100%|█████████▉| 2520/2524 [17:15<00:01,  2.43it/s, loss=0.0079, v_num=3] Epoch 6: 100%|██████████| 2524/2524 [17:17<00:00,  2.43it/s, loss=0.0079, v_num=3]Epoch 6: 100%|██████████| 2524/2524 [17:17<00:00,  2.43it/s, loss=0.00848, v_num=3]Epoch 6: 100%|██████████| 2524/2524 [17:17<00:00,  2.43it/s, loss=0.00848, v_num=3]Epoch 6:   0%|          | 0/2524 [00:00<?, ?it/s, loss=0.00848, v_num=3]           Epoch 7:   0%|          | 0/2524 [00:00<?, ?it/s, loss=0.00848, v_num=3]Epoch 7:   0%|          | 10/2524 [00:04<18:50,  2.22it/s, loss=0.00848, v_num=3]Epoch 7:   0%|          | 10/2524 [00:04<18:52,  2.22it/s, loss=0.00627, v_num=3]Epoch 7:   1%|          | 20/2524 [00:08<17:54,  2.33it/s, loss=0.00627, v_num=3]Epoch 7:   1%|          | 20/2524 [00:08<17:56,  2.33it/s, loss=0.00431, v_num=3]Epoch 7:   1%|          | 30/2524 [00:12<17:33,  2.37it/s, loss=0.00431, v_num=3]Epoch 7:   1%|          | 30/2524 [00:12<17:34,  2.37it/s, loss=0.00485, v_num=3]Epoch 7:   2%|▏         | 40/2524 [00:16<17:30,  2.37it/s, loss=0.00485, v_num=3]Epoch 7:   2%|▏         | 40/2524 [00:16<17:30,  2.36it/s, loss=0.00573, v_num=3]Epoch 7:   2%|▏         | 50/2524 [00:21<17:19,  2.38it/s, loss=0.00573, v_num=3]Epoch 7:   2%|▏         | 50/2524 [00:21<17:19,  2.38it/s, loss=0.00984, v_num=3]Epoch 7:   2%|▏         | 60/2524 [00:25<17:10,  2.39it/s, loss=0.00984, v_num=3]Epoch 7:   2%|▏         | 60/2524 [00:25<17:11,  2.39it/s, loss=0.00944, v_num=3]Epoch 7:   3%|▎         | 70/2524 [00:29<17:03,  2.40it/s, loss=0.00944, v_num=3]Epoch 7:   3%|▎         | 70/2524 [00:29<17:03,  2.40it/s, loss=0.00446, v_num=3]Epoch 7:   3%|▎         | 80/2524 [00:33<16:56,  2.40it/s, loss=0.00446, v_num=3]Epoch 7:   3%|▎         | 80/2524 [00:33<16:57,  2.40it/s, loss=0.00562, v_num=3]Epoch 7:   4%|▎         | 90/2524 [00:37<16:52,  2.40it/s, loss=0.00562, v_num=3]Epoch 7:   4%|▎         | 90/2524 [00:37<16:52,  2.40it/s, loss=0.00712, v_num=3]Epoch 7:   4%|▍         | 100/2524 [00:41<16:46,  2.41it/s, loss=0.00712, v_num=3]Epoch 7:   4%|▍         | 100/2524 [00:41<16:46,  2.41it/s, loss=0.00888, v_num=3]Epoch 7:   4%|▍         | 110/2524 [00:46<16:50,  2.39it/s, loss=0.00888, v_num=3]Epoch 7:   4%|▍         | 110/2524 [00:46<16:51,  2.39it/s, loss=0.00995, v_num=3]Epoch 7:   5%|▍         | 120/2524 [00:50<16:44,  2.39it/s, loss=0.00995, v_num=3]Epoch 7:   5%|▍         | 120/2524 [00:50<16:44,  2.39it/s, loss=0.00708, v_num=3]Epoch 7:   5%|▌         | 130/2524 [00:54<16:38,  2.40it/s, loss=0.00708, v_num=3]Epoch 7:   5%|▌         | 130/2524 [00:54<16:38,  2.40it/s, loss=0.00631, v_num=3]Epoch 7:   6%|▌         | 140/2524 [00:58<16:35,  2.39it/s, loss=0.00631, v_num=3]Epoch 7:   6%|▌         | 140/2524 [00:58<16:35,  2.39it/s, loss=0.00687, v_num=3]Epoch 7:   6%|▌         | 150/2524 [01:02<16:30,  2.40it/s, loss=0.00687, v_num=3]Epoch 7:   6%|▌         | 150/2524 [01:02<16:30,  2.40it/s, loss=0.00666, v_num=3]Epoch 7:   6%|▋         | 160/2524 [01:06<16:24,  2.40it/s, loss=0.00666, v_num=3]Epoch 7:   6%|▋         | 160/2524 [01:06<16:24,  2.40it/s, loss=0.00567, v_num=3]Epoch 7:   7%|▋         | 170/2524 [01:10<16:19,  2.40it/s, loss=0.00567, v_num=3]Epoch 7:   7%|▋         | 170/2524 [01:10<16:19,  2.40it/s, loss=0.00662, v_num=3]Epoch 7:   7%|▋         | 180/2524 [01:14<16:14,  2.41it/s, loss=0.00662, v_num=3]Epoch 7:   7%|▋         | 180/2524 [01:14<16:14,  2.41it/s, loss=0.00746, v_num=3]Epoch 7:   8%|▊         | 190/2524 [01:18<16:09,  2.41it/s, loss=0.00746, v_num=3]Epoch 7:   8%|▊         | 190/2524 [01:18<16:10,  2.41it/s, loss=0.00584, v_num=3]Epoch 7:   8%|▊         | 200/2524 [01:23<16:05,  2.41it/s, loss=0.00584, v_num=3]Epoch 7:   8%|▊         | 200/2524 [01:23<16:05,  2.41it/s, loss=0.00603, v_num=3]Epoch 7:   8%|▊         | 210/2524 [01:27<16:00,  2.41it/s, loss=0.00603, v_num=3]Epoch 7:   8%|▊         | 210/2524 [01:27<16:00,  2.41it/s, loss=0.00614, v_num=3]Epoch 7:   9%|▊         | 220/2524 [01:31<15:55,  2.41it/s, loss=0.00614, v_num=3]Epoch 7:   9%|▊         | 220/2524 [01:31<15:55,  2.41it/s, loss=0.00641, v_num=3]Epoch 7:   9%|▉         | 230/2524 [01:35<15:50,  2.41it/s, loss=0.00641, v_num=3]Epoch 7:   9%|▉         | 230/2524 [01:35<15:50,  2.41it/s, loss=0.0073, v_num=3] Epoch 7:  10%|▉         | 240/2524 [01:39<15:47,  2.41it/s, loss=0.0073, v_num=3]Epoch 7:  10%|▉         | 240/2524 [01:39<15:47,  2.41it/s, loss=0.00614, v_num=3]Epoch 7:  10%|▉         | 250/2524 [01:43<15:42,  2.41it/s, loss=0.00614, v_num=3]Epoch 7:  10%|▉         | 250/2524 [01:43<15:42,  2.41it/s, loss=0.00614, v_num=3]Epoch 7:  10%|█         | 260/2524 [01:47<15:37,  2.41it/s, loss=0.00614, v_num=3]Epoch 7:  10%|█         | 260/2524 [01:47<15:38,  2.41it/s, loss=0.0068, v_num=3] Epoch 7:  11%|█         | 270/2524 [01:51<15:33,  2.41it/s, loss=0.0068, v_num=3]Epoch 7:  11%|█         | 270/2524 [01:51<15:33,  2.41it/s, loss=0.00476, v_num=3]Epoch 7:  11%|█         | 280/2524 [01:55<15:28,  2.42it/s, loss=0.00476, v_num=3]Epoch 7:  11%|█         | 280/2524 [01:55<15:28,  2.42it/s, loss=0.00432, v_num=3]Epoch 7:  11%|█▏        | 290/2524 [02:00<15:24,  2.42it/s, loss=0.00432, v_num=3]Epoch 7:  11%|█▏        | 290/2524 [02:00<15:24,  2.42it/s, loss=0.00609, v_num=3]Epoch 7:  12%|█▏        | 300/2524 [02:04<15:20,  2.42it/s, loss=0.00609, v_num=3]Epoch 7:  12%|█▏        | 300/2524 [02:04<15:20,  2.42it/s, loss=0.009, v_num=3]  Epoch 7:  12%|█▏        | 310/2524 [02:08<15:15,  2.42it/s, loss=0.009, v_num=3]Epoch 7:  12%|█▏        | 310/2524 [02:08<15:15,  2.42it/s, loss=0.0128, v_num=3]Epoch 7:  13%|█▎        | 320/2524 [02:12<15:11,  2.42it/s, loss=0.0128, v_num=3]Epoch 7:  13%|█▎        | 320/2524 [02:12<15:11,  2.42it/s, loss=0.0102, v_num=3]Epoch 7:  13%|█▎        | 330/2524 [02:16<15:06,  2.42it/s, loss=0.0102, v_num=3]Epoch 7:  13%|█▎        | 330/2524 [02:16<15:06,  2.42it/s, loss=0.00646, v_num=3]Epoch 7:  13%|█▎        | 340/2524 [02:20<15:03,  2.42it/s, loss=0.00646, v_num=3]Epoch 7:  13%|█▎        | 340/2524 [02:20<15:03,  2.42it/s, loss=0.0066, v_num=3] Epoch 7:  14%|█▍        | 350/2524 [02:24<14:58,  2.42it/s, loss=0.0066, v_num=3]Epoch 7:  14%|█▍        | 350/2524 [02:24<14:58,  2.42it/s, loss=0.00841, v_num=3]Epoch 7:  14%|█▍        | 360/2524 [02:28<14:54,  2.42it/s, loss=0.00841, v_num=3]Epoch 7:  14%|█▍        | 360/2524 [02:28<14:54,  2.42it/s, loss=0.00765, v_num=3]Epoch 7:  15%|█▍        | 370/2524 [02:32<14:50,  2.42it/s, loss=0.00765, v_num=3]Epoch 7:  15%|█▍        | 370/2524 [02:32<14:50,  2.42it/s, loss=0.00644, v_num=3]Epoch 7:  15%|█▌        | 380/2524 [02:36<14:45,  2.42it/s, loss=0.00644, v_num=3]Epoch 7:  15%|█▌        | 380/2524 [02:36<14:45,  2.42it/s, loss=0.00715, v_num=3]Epoch 7:  15%|█▌        | 390/2524 [02:41<14:41,  2.42it/s, loss=0.00715, v_num=3]Epoch 7:  15%|█▌        | 390/2524 [02:41<14:41,  2.42it/s, loss=0.00474, v_num=3]Epoch 7:  16%|█▌        | 400/2524 [02:45<14:37,  2.42it/s, loss=0.00474, v_num=3]Epoch 7:  16%|█▌        | 400/2524 [02:45<14:37,  2.42it/s, loss=0.00728, v_num=3]Epoch 7:  16%|█▌        | 410/2524 [02:49<14:32,  2.42it/s, loss=0.00728, v_num=3]Epoch 7:  16%|█▌        | 410/2524 [02:49<14:32,  2.42it/s, loss=0.00866, v_num=3]Epoch 7:  17%|█▋        | 420/2524 [02:53<14:28,  2.42it/s, loss=0.00866, v_num=3]Epoch 7:  17%|█▋        | 420/2524 [02:53<14:28,  2.42it/s, loss=0.00743, v_num=3]Epoch 7:  17%|█▋        | 430/2524 [02:57<14:24,  2.42it/s, loss=0.00743, v_num=3]Epoch 7:  17%|█▋        | 430/2524 [02:57<14:24,  2.42it/s, loss=0.00646, v_num=3]Epoch 7:  17%|█▋        | 440/2524 [03:01<14:20,  2.42it/s, loss=0.00646, v_num=3]Epoch 7:  17%|█▋        | 440/2524 [03:01<14:20,  2.42it/s, loss=0.00344, v_num=3]Epoch 7:  18%|█▊        | 450/2524 [03:05<14:16,  2.42it/s, loss=0.00344, v_num=3]Epoch 7:  18%|█▊        | 450/2524 [03:05<14:16,  2.42it/s, loss=0.005, v_num=3]  Epoch 7:  18%|█▊        | 460/2524 [03:09<14:12,  2.42it/s, loss=0.005, v_num=3]Epoch 7:  18%|█▊        | 460/2524 [03:09<14:12,  2.42it/s, loss=0.00665, v_num=3]Epoch 7:  19%|█▊        | 470/2524 [03:13<14:07,  2.42it/s, loss=0.00665, v_num=3]Epoch 7:  19%|█▊        | 470/2524 [03:13<14:07,  2.42it/s, loss=0.00522, v_num=3]Epoch 7:  19%|█▉        | 480/2524 [03:18<14:03,  2.42it/s, loss=0.00522, v_num=3]Epoch 7:  19%|█▉        | 480/2524 [03:18<14:03,  2.42it/s, loss=0.00612, v_num=3]Epoch 7:  19%|█▉        | 490/2524 [03:22<13:59,  2.42it/s, loss=0.00612, v_num=3]Epoch 7:  19%|█▉        | 490/2524 [03:22<13:59,  2.42it/s, loss=0.00693, v_num=3]Epoch 7:  20%|█▉        | 500/2524 [03:26<13:55,  2.42it/s, loss=0.00693, v_num=3]Epoch 7:  20%|█▉        | 500/2524 [03:26<13:55,  2.42it/s, loss=0.00713, v_num=3]Epoch 7:  20%|██        | 510/2524 [03:30<13:50,  2.42it/s, loss=0.00713, v_num=3]Epoch 7:  20%|██        | 510/2524 [03:30<13:50,  2.42it/s, loss=0.0124, v_num=3] Epoch 7:  21%|██        | 520/2524 [03:34<13:46,  2.42it/s, loss=0.0124, v_num=3]Epoch 7:  21%|██        | 520/2524 [03:34<13:46,  2.42it/s, loss=0.0116, v_num=3]Epoch 7:  21%|██        | 530/2524 [03:38<13:42,  2.43it/s, loss=0.0116, v_num=3]Epoch 7:  21%|██        | 530/2524 [03:38<13:42,  2.42it/s, loss=0.00595, v_num=3]Epoch 7:  21%|██▏       | 540/2524 [03:42<13:38,  2.42it/s, loss=0.00595, v_num=3]Epoch 7:  21%|██▏       | 540/2524 [03:42<13:38,  2.42it/s, loss=0.00549, v_num=3]Epoch 7:  22%|██▏       | 550/2524 [03:46<13:34,  2.42it/s, loss=0.00549, v_num=3]Epoch 7:  22%|██▏       | 550/2524 [03:46<13:34,  2.42it/s, loss=0.0081, v_num=3] Epoch 7:  22%|██▏       | 560/2524 [03:50<13:30,  2.42it/s, loss=0.0081, v_num=3]Epoch 7:  22%|██▏       | 560/2524 [03:50<13:30,  2.42it/s, loss=0.00957, v_num=3]Epoch 7:  23%|██▎       | 570/2524 [03:55<13:25,  2.42it/s, loss=0.00957, v_num=3]Epoch 7:  23%|██▎       | 570/2524 [03:55<13:25,  2.42it/s, loss=0.00799, v_num=3]Epoch 7:  23%|██▎       | 580/2524 [03:59<13:21,  2.43it/s, loss=0.00799, v_num=3]Epoch 7:  23%|██▎       | 580/2524 [03:59<13:21,  2.43it/s, loss=0.00633, v_num=3]Epoch 7:  23%|██▎       | 590/2524 [04:03<13:17,  2.43it/s, loss=0.00633, v_num=3]Epoch 7:  23%|██▎       | 590/2524 [04:03<13:17,  2.43it/s, loss=0.00582, v_num=3]Epoch 7:  24%|██▍       | 600/2524 [04:07<13:13,  2.43it/s, loss=0.00582, v_num=3]Epoch 7:  24%|██▍       | 600/2524 [04:07<13:13,  2.43it/s, loss=0.00667, v_num=3]Epoch 7:  24%|██▍       | 610/2524 [04:11<13:08,  2.43it/s, loss=0.00667, v_num=3]Epoch 7:  24%|██▍       | 610/2524 [04:11<13:09,  2.43it/s, loss=0.00601, v_num=3]Epoch 7:  25%|██▍       | 620/2524 [04:15<13:04,  2.43it/s, loss=0.00601, v_num=3]Epoch 7:  25%|██▍       | 620/2524 [04:15<13:04,  2.43it/s, loss=0.00505, v_num=3]Epoch 7:  25%|██▍       | 630/2524 [04:19<13:00,  2.43it/s, loss=0.00505, v_num=3]Epoch 7:  25%|██▍       | 630/2524 [04:19<13:00,  2.43it/s, loss=0.00559, v_num=3]Epoch 7:  25%|██▌       | 640/2524 [04:23<12:56,  2.43it/s, loss=0.00559, v_num=3]Epoch 7:  25%|██▌       | 640/2524 [04:23<12:56,  2.43it/s, loss=0.00585, v_num=3]Epoch 7:  26%|██▌       | 650/2524 [04:27<12:52,  2.43it/s, loss=0.00585, v_num=3]Epoch 7:  26%|██▌       | 650/2524 [04:27<12:52,  2.43it/s, loss=0.00517, v_num=3]Epoch 7:  26%|██▌       | 660/2524 [04:32<12:48,  2.43it/s, loss=0.00517, v_num=3]Epoch 7:  26%|██▌       | 660/2524 [04:32<12:48,  2.43it/s, loss=0.00616, v_num=3]Epoch 7:  27%|██▋       | 670/2524 [04:36<12:44,  2.43it/s, loss=0.00616, v_num=3]Epoch 7:  27%|██▋       | 670/2524 [04:36<12:44,  2.43it/s, loss=0.00743, v_num=3]Epoch 7:  27%|██▋       | 680/2524 [04:40<12:39,  2.43it/s, loss=0.00743, v_num=3]Epoch 7:  27%|██▋       | 680/2524 [04:40<12:39,  2.43it/s, loss=0.00668, v_num=3]Epoch 7:  27%|██▋       | 690/2524 [04:44<12:35,  2.43it/s, loss=0.00668, v_num=3]Epoch 7:  27%|██▋       | 690/2524 [04:44<12:35,  2.43it/s, loss=0.00775, v_num=3]Epoch 7:  28%|██▊       | 700/2524 [04:48<12:31,  2.43it/s, loss=0.00775, v_num=3]Epoch 7:  28%|██▊       | 700/2524 [04:48<12:31,  2.43it/s, loss=0.00825, v_num=3]Epoch 7:  28%|██▊       | 710/2524 [04:52<12:27,  2.43it/s, loss=0.00825, v_num=3]Epoch 7:  28%|██▊       | 710/2524 [04:52<12:27,  2.43it/s, loss=0.00667, v_num=3]Epoch 7:  29%|██▊       | 720/2524 [04:56<12:23,  2.43it/s, loss=0.00667, v_num=3]Epoch 7:  29%|██▊       | 720/2524 [04:56<12:23,  2.43it/s, loss=0.00761, v_num=3]Epoch 7:  29%|██▉       | 730/2524 [05:00<12:19,  2.43it/s, loss=0.00761, v_num=3]Epoch 7:  29%|██▉       | 730/2524 [05:00<12:19,  2.43it/s, loss=0.00814, v_num=3]Epoch 7:  29%|██▉       | 740/2524 [05:04<12:15,  2.43it/s, loss=0.00814, v_num=3]Epoch 7:  29%|██▉       | 740/2524 [05:04<12:15,  2.43it/s, loss=0.00752, v_num=3]Epoch 7:  30%|██▉       | 750/2524 [05:09<12:11,  2.43it/s, loss=0.00752, v_num=3]Epoch 7:  30%|██▉       | 750/2524 [05:09<12:11,  2.43it/s, loss=0.00714, v_num=3]Epoch 7:  30%|███       | 760/2524 [05:13<12:06,  2.43it/s, loss=0.00714, v_num=3]Epoch 7:  30%|███       | 760/2524 [05:13<12:06,  2.43it/s, loss=0.00581, v_num=3]Epoch 7:  31%|███       | 770/2524 [05:17<12:02,  2.43it/s, loss=0.00581, v_num=3]Epoch 7:  31%|███       | 770/2524 [05:17<12:02,  2.43it/s, loss=0.00526, v_num=3]Epoch 7:  31%|███       | 780/2524 [05:21<11:58,  2.43it/s, loss=0.00526, v_num=3]Epoch 7:  31%|███       | 780/2524 [05:21<11:58,  2.43it/s, loss=0.00706, v_num=3]Epoch 7:  31%|███▏      | 790/2524 [05:25<11:54,  2.43it/s, loss=0.00706, v_num=3]Epoch 7:  31%|███▏      | 790/2524 [05:25<11:54,  2.43it/s, loss=0.0084, v_num=3] Epoch 7:  32%|███▏      | 800/2524 [05:29<11:50,  2.43it/s, loss=0.0084, v_num=3]Epoch 7:  32%|███▏      | 800/2524 [05:29<11:50,  2.43it/s, loss=0.0082, v_num=3]Epoch 7:  32%|███▏      | 810/2524 [05:33<11:45,  2.43it/s, loss=0.0082, v_num=3]Epoch 7:  32%|███▏      | 810/2524 [05:33<11:45,  2.43it/s, loss=0.00805, v_num=3]Epoch 7:  32%|███▏      | 820/2524 [05:37<11:41,  2.43it/s, loss=0.00805, v_num=3]Epoch 7:  32%|███▏      | 820/2524 [05:37<11:41,  2.43it/s, loss=0.00733, v_num=3]Epoch 7:  33%|███▎      | 830/2524 [05:41<11:37,  2.43it/s, loss=0.00733, v_num=3]Epoch 7:  33%|███▎      | 830/2524 [05:41<11:37,  2.43it/s, loss=0.00634, v_num=3]Epoch 7:  33%|███▎      | 840/2524 [05:46<11:33,  2.43it/s, loss=0.00634, v_num=3]Epoch 7:  33%|███▎      | 840/2524 [05:46<11:33,  2.43it/s, loss=0.00711, v_num=3]Epoch 7:  34%|███▎      | 850/2524 [05:50<11:29,  2.43it/s, loss=0.00711, v_num=3]Epoch 7:  34%|███▎      | 850/2524 [05:50<11:29,  2.43it/s, loss=0.00653, v_num=3]Epoch 7:  34%|███▍      | 860/2524 [05:54<11:25,  2.43it/s, loss=0.00653, v_num=3]Epoch 7:  34%|███▍      | 860/2524 [05:54<11:25,  2.43it/s, loss=0.00518, v_num=3]Epoch 7:  34%|███▍      | 870/2524 [05:58<11:21,  2.43it/s, loss=0.00518, v_num=3]Epoch 7:  34%|███▍      | 870/2524 [05:58<11:21,  2.43it/s, loss=0.00607, v_num=3]Epoch 7:  35%|███▍      | 880/2524 [06:02<11:17,  2.43it/s, loss=0.00607, v_num=3]Epoch 7:  35%|███▍      | 880/2524 [06:02<11:17,  2.43it/s, loss=0.00746, v_num=3]Epoch 7:  35%|███▌      | 890/2524 [06:06<11:12,  2.43it/s, loss=0.00746, v_num=3]Epoch 7:  35%|███▌      | 890/2524 [06:06<11:12,  2.43it/s, loss=0.00602, v_num=3]Epoch 7:  36%|███▌      | 900/2524 [06:10<11:08,  2.43it/s, loss=0.00602, v_num=3]Epoch 7:  36%|███▌      | 900/2524 [06:10<11:08,  2.43it/s, loss=0.00675, v_num=3]Epoch 7:  36%|███▌      | 910/2524 [06:14<11:04,  2.43it/s, loss=0.00675, v_num=3]Epoch 7:  36%|███▌      | 910/2524 [06:14<11:04,  2.43it/s, loss=0.00895, v_num=3]Epoch 7:  36%|███▋      | 920/2524 [06:18<11:00,  2.43it/s, loss=0.00895, v_num=3]Epoch 7:  36%|███▋      | 920/2524 [06:18<11:00,  2.43it/s, loss=0.00706, v_num=3]Epoch 7:  37%|███▋      | 930/2524 [06:22<10:56,  2.43it/s, loss=0.00706, v_num=3]Epoch 7:  37%|███▋      | 930/2524 [06:22<10:56,  2.43it/s, loss=0.00674, v_num=3]Epoch 7:  37%|███▋      | 940/2524 [06:27<10:52,  2.43it/s, loss=0.00674, v_num=3]Epoch 7:  37%|███▋      | 940/2524 [06:27<10:52,  2.43it/s, loss=0.00532, v_num=3]Epoch 7:  38%|███▊      | 950/2524 [06:31<10:48,  2.43it/s, loss=0.00532, v_num=3]Epoch 7:  38%|███▊      | 950/2524 [06:31<10:48,  2.43it/s, loss=0.00753, v_num=3]Epoch 7:  38%|███▊      | 960/2524 [06:35<10:44,  2.43it/s, loss=0.00753, v_num=3]Epoch 7:  38%|███▊      | 960/2524 [06:35<10:44,  2.43it/s, loss=0.00786, v_num=3]Epoch 7:  38%|███▊      | 970/2524 [06:39<10:39,  2.43it/s, loss=0.00786, v_num=3]Epoch 7:  38%|███▊      | 970/2524 [06:39<10:39,  2.43it/s, loss=0.00577, v_num=3]Epoch 7:  39%|███▉      | 980/2524 [06:43<10:35,  2.43it/s, loss=0.00577, v_num=3]Epoch 7:  39%|███▉      | 980/2524 [06:43<10:35,  2.43it/s, loss=0.00622, v_num=3]Epoch 7:  39%|███▉      | 990/2524 [06:47<10:31,  2.43it/s, loss=0.00622, v_num=3]Epoch 7:  39%|███▉      | 990/2524 [06:47<10:31,  2.43it/s, loss=0.00549, v_num=3]Epoch 7:  40%|███▉      | 1000/2524 [06:51<10:27,  2.43it/s, loss=0.00549, v_num=3]Epoch 7:  40%|███▉      | 1000/2524 [06:51<10:27,  2.43it/s, loss=0.00712, v_num=3]Epoch 7:  40%|████      | 1010/2524 [06:55<10:23,  2.43it/s, loss=0.00712, v_num=3]Epoch 7:  40%|████      | 1010/2524 [06:55<10:23,  2.43it/s, loss=0.00616, v_num=3]Epoch 7:  40%|████      | 1020/2524 [06:59<10:19,  2.43it/s, loss=0.00616, v_num=3]Epoch 7:  40%|████      | 1020/2524 [06:59<10:19,  2.43it/s, loss=0.00652, v_num=3]Epoch 7:  41%|████      | 1030/2524 [07:03<10:14,  2.43it/s, loss=0.00652, v_num=3]Epoch 7:  41%|████      | 1030/2524 [07:03<10:14,  2.43it/s, loss=0.00784, v_num=3]Epoch 7:  41%|████      | 1040/2524 [07:08<10:11,  2.43it/s, loss=0.00784, v_num=3]Epoch 7:  41%|████      | 1040/2524 [07:08<10:11,  2.43it/s, loss=0.00835, v_num=3]Epoch 7:  42%|████▏     | 1050/2524 [07:12<10:06,  2.43it/s, loss=0.00835, v_num=3]Epoch 7:  42%|████▏     | 1050/2524 [07:12<10:06,  2.43it/s, loss=0.00864, v_num=3]Epoch 7:  42%|████▏     | 1060/2524 [07:16<10:02,  2.43it/s, loss=0.00864, v_num=3]Epoch 7:  42%|████▏     | 1060/2524 [07:16<10:02,  2.43it/s, loss=0.00608, v_num=3]Epoch 7:  42%|████▏     | 1070/2524 [07:20<09:58,  2.43it/s, loss=0.00608, v_num=3]Epoch 7:  42%|████▏     | 1070/2524 [07:20<09:58,  2.43it/s, loss=0.00462, v_num=3]Epoch 7:  43%|████▎     | 1080/2524 [07:24<09:54,  2.43it/s, loss=0.00462, v_num=3]Epoch 7:  43%|████▎     | 1080/2524 [07:24<09:54,  2.43it/s, loss=0.00552, v_num=3]Epoch 7:  43%|████▎     | 1090/2524 [07:28<09:50,  2.43it/s, loss=0.00552, v_num=3]Epoch 7:  43%|████▎     | 1090/2524 [07:28<09:50,  2.43it/s, loss=0.00739, v_num=3]Epoch 7:  44%|████▎     | 1100/2524 [07:32<09:46,  2.43it/s, loss=0.00739, v_num=3]Epoch 7:  44%|████▎     | 1100/2524 [07:32<09:46,  2.43it/s, loss=0.00735, v_num=3]Epoch 7:  44%|████▍     | 1110/2524 [07:36<09:42,  2.43it/s, loss=0.00735, v_num=3]Epoch 7:  44%|████▍     | 1110/2524 [07:36<09:42,  2.43it/s, loss=0.00688, v_num=3]Epoch 7:  44%|████▍     | 1120/2524 [07:40<09:37,  2.43it/s, loss=0.00688, v_num=3]Epoch 7:  44%|████▍     | 1120/2524 [07:40<09:37,  2.43it/s, loss=0.00557, v_num=3]Epoch 7:  45%|████▍     | 1130/2524 [07:45<09:33,  2.43it/s, loss=0.00557, v_num=3]Epoch 7:  45%|████▍     | 1130/2524 [07:45<09:33,  2.43it/s, loss=0.00446, v_num=3]Epoch 7:  45%|████▌     | 1140/2524 [07:49<09:29,  2.43it/s, loss=0.00446, v_num=3]Epoch 7:  45%|████▌     | 1140/2524 [07:49<09:29,  2.43it/s, loss=0.00555, v_num=3]Epoch 7:  46%|████▌     | 1150/2524 [07:53<09:25,  2.43it/s, loss=0.00555, v_num=3]Epoch 7:  46%|████▌     | 1150/2524 [07:53<09:25,  2.43it/s, loss=0.00539, v_num=3]Epoch 7:  46%|████▌     | 1160/2524 [07:57<09:21,  2.43it/s, loss=0.00539, v_num=3]Epoch 7:  46%|████▌     | 1160/2524 [07:57<09:21,  2.43it/s, loss=0.00449, v_num=3]Epoch 7:  46%|████▋     | 1170/2524 [08:01<09:17,  2.43it/s, loss=0.00449, v_num=3]Epoch 7:  46%|████▋     | 1170/2524 [08:01<09:17,  2.43it/s, loss=0.00592, v_num=3]Epoch 7:  47%|████▋     | 1180/2524 [08:05<09:13,  2.43it/s, loss=0.00592, v_num=3]Epoch 7:  47%|████▋     | 1180/2524 [08:05<09:13,  2.43it/s, loss=0.00612, v_num=3]Epoch 7:  47%|████▋     | 1190/2524 [08:09<09:09,  2.43it/s, loss=0.00612, v_num=3]Epoch 7:  47%|████▋     | 1190/2524 [08:09<09:09,  2.43it/s, loss=0.0068, v_num=3] Epoch 7:  48%|████▊     | 1200/2524 [08:13<09:04,  2.43it/s, loss=0.0068, v_num=3]Epoch 7:  48%|████▊     | 1200/2524 [08:13<09:04,  2.43it/s, loss=0.00899, v_num=3]Epoch 7:  48%|████▊     | 1210/2524 [08:17<09:00,  2.43it/s, loss=0.00899, v_num=3]Epoch 7:  48%|████▊     | 1210/2524 [08:18<09:00,  2.43it/s, loss=0.00923, v_num=3]Epoch 7:  48%|████▊     | 1220/2524 [08:22<08:56,  2.43it/s, loss=0.00923, v_num=3]Epoch 7:  48%|████▊     | 1220/2524 [08:22<08:56,  2.43it/s, loss=0.00803, v_num=3]Epoch 7:  49%|████▊     | 1230/2524 [08:26<08:52,  2.43it/s, loss=0.00803, v_num=3]Epoch 7:  49%|████▊     | 1230/2524 [08:26<08:52,  2.43it/s, loss=0.00948, v_num=3]Epoch 7:  49%|████▉     | 1240/2524 [08:30<08:48,  2.43it/s, loss=0.00948, v_num=3]Epoch 7:  49%|████▉     | 1240/2524 [08:30<08:48,  2.43it/s, loss=0.0108, v_num=3] Epoch 7:  50%|████▉     | 1250/2524 [08:34<08:44,  2.43it/s, loss=0.0108, v_num=3]Epoch 7:  50%|████▉     | 1250/2524 [08:34<08:44,  2.43it/s, loss=0.00922, v_num=3]Epoch 7:  50%|████▉     | 1260/2524 [08:38<08:40,  2.43it/s, loss=0.00922, v_num=3]Epoch 7:  50%|████▉     | 1260/2524 [08:38<08:40,  2.43it/s, loss=0.00755, v_num=3]Epoch 7:  50%|█████     | 1270/2524 [08:42<08:36,  2.43it/s, loss=0.00755, v_num=3]Epoch 7:  50%|█████     | 1270/2524 [08:42<08:36,  2.43it/s, loss=0.00427, v_num=3]Epoch 7:  51%|█████     | 1280/2524 [08:46<08:31,  2.43it/s, loss=0.00427, v_num=3]Epoch 7:  51%|█████     | 1280/2524 [08:46<08:31,  2.43it/s, loss=0.00366, v_num=3]Epoch 7:  51%|█████     | 1290/2524 [08:50<08:27,  2.43it/s, loss=0.00366, v_num=3]Epoch 7:  51%|█████     | 1290/2524 [08:50<08:27,  2.43it/s, loss=0.00535, v_num=3]Epoch 7:  52%|█████▏    | 1300/2524 [08:55<08:23,  2.43it/s, loss=0.00535, v_num=3]Epoch 7:  52%|█████▏    | 1300/2524 [08:55<08:23,  2.43it/s, loss=0.00616, v_num=3]Epoch 7:  52%|█████▏    | 1310/2524 [08:59<08:19,  2.43it/s, loss=0.00616, v_num=3]Epoch 7:  52%|█████▏    | 1310/2524 [08:59<08:19,  2.43it/s, loss=0.00793, v_num=3]Epoch 7:  52%|█████▏    | 1320/2524 [09:03<08:15,  2.43it/s, loss=0.00793, v_num=3]Epoch 7:  52%|█████▏    | 1320/2524 [09:03<08:15,  2.43it/s, loss=0.00728, v_num=3]Epoch 7:  53%|█████▎    | 1330/2524 [09:07<08:11,  2.43it/s, loss=0.00728, v_num=3]Epoch 7:  53%|█████▎    | 1330/2524 [09:07<08:11,  2.43it/s, loss=0.00764, v_num=3]Epoch 7:  53%|█████▎    | 1340/2524 [09:11<08:07,  2.43it/s, loss=0.00764, v_num=3]Epoch 7:  53%|█████▎    | 1340/2524 [09:11<08:07,  2.43it/s, loss=0.00966, v_num=3]Epoch 7:  53%|█████▎    | 1350/2524 [09:15<08:03,  2.43it/s, loss=0.00966, v_num=3]Epoch 7:  53%|█████▎    | 1350/2524 [09:15<08:03,  2.43it/s, loss=0.00635, v_num=3]Epoch 7:  54%|█████▍    | 1360/2524 [09:19<07:59,  2.43it/s, loss=0.00635, v_num=3]Epoch 7:  54%|█████▍    | 1360/2524 [09:19<07:59,  2.43it/s, loss=0.00587, v_num=3]Epoch 7:  54%|█████▍    | 1370/2524 [09:23<07:54,  2.43it/s, loss=0.00587, v_num=3]Epoch 7:  54%|█████▍    | 1370/2524 [09:23<07:54,  2.43it/s, loss=0.00836, v_num=3]Epoch 7:  55%|█████▍    | 1380/2524 [09:27<07:50,  2.43it/s, loss=0.00836, v_num=3]Epoch 7:  55%|█████▍    | 1380/2524 [09:27<07:50,  2.43it/s, loss=0.00866, v_num=3]Epoch 7:  55%|█████▌    | 1390/2524 [09:32<07:46,  2.43it/s, loss=0.00866, v_num=3]Epoch 7:  55%|█████▌    | 1390/2524 [09:32<07:46,  2.43it/s, loss=0.00956, v_num=3]Epoch 7:  55%|█████▌    | 1400/2524 [09:36<07:42,  2.43it/s, loss=0.00956, v_num=3]Epoch 7:  55%|█████▌    | 1400/2524 [09:36<07:42,  2.43it/s, loss=0.00918, v_num=3]Epoch 7:  56%|█████▌    | 1410/2524 [09:40<07:38,  2.43it/s, loss=0.00918, v_num=3]Epoch 7:  56%|█████▌    | 1410/2524 [09:40<07:38,  2.43it/s, loss=0.00696, v_num=3]Epoch 7:  56%|█████▋    | 1420/2524 [09:44<07:34,  2.43it/s, loss=0.00696, v_num=3]Epoch 7:  56%|█████▋    | 1420/2524 [09:44<07:34,  2.43it/s, loss=0.00823, v_num=3]Epoch 7:  57%|█████▋    | 1430/2524 [09:48<07:30,  2.43it/s, loss=0.00823, v_num=3]Epoch 7:  57%|█████▋    | 1430/2524 [09:48<07:30,  2.43it/s, loss=0.00815, v_num=3]Epoch 7:  57%|█████▋    | 1440/2524 [09:52<07:26,  2.43it/s, loss=0.00815, v_num=3]Epoch 7:  57%|█████▋    | 1440/2524 [09:52<07:26,  2.43it/s, loss=0.00555, v_num=3]Epoch 7:  57%|█████▋    | 1450/2524 [09:56<07:22,  2.43it/s, loss=0.00555, v_num=3]Epoch 7:  57%|█████▋    | 1450/2524 [09:56<07:22,  2.43it/s, loss=0.00645, v_num=3]Epoch 7:  58%|█████▊    | 1460/2524 [10:00<07:17,  2.43it/s, loss=0.00645, v_num=3]Epoch 7:  58%|█████▊    | 1460/2524 [10:00<07:17,  2.43it/s, loss=0.00682, v_num=3]Epoch 7:  58%|█████▊    | 1470/2524 [10:04<07:13,  2.43it/s, loss=0.00682, v_num=3]Epoch 7:  58%|█████▊    | 1470/2524 [10:04<07:13,  2.43it/s, loss=0.00796, v_num=3]Epoch 7:  59%|█████▊    | 1480/2524 [10:09<07:09,  2.43it/s, loss=0.00796, v_num=3]Epoch 7:  59%|█████▊    | 1480/2524 [10:09<07:09,  2.43it/s, loss=0.00904, v_num=3]Epoch 7:  59%|█████▉    | 1490/2524 [10:13<07:05,  2.43it/s, loss=0.00904, v_num=3]Epoch 7:  59%|█████▉    | 1490/2524 [10:13<07:05,  2.43it/s, loss=0.00691, v_num=3]Epoch 7:  59%|█████▉    | 1500/2524 [10:17<07:01,  2.43it/s, loss=0.00691, v_num=3]Epoch 7:  59%|█████▉    | 1500/2524 [10:17<07:01,  2.43it/s, loss=0.00579, v_num=3]Epoch 7:  60%|█████▉    | 1510/2524 [10:21<06:57,  2.43it/s, loss=0.00579, v_num=3]Epoch 7:  60%|█████▉    | 1510/2524 [10:21<06:57,  2.43it/s, loss=0.00673, v_num=3]Epoch 7:  60%|██████    | 1520/2524 [10:25<06:53,  2.43it/s, loss=0.00673, v_num=3]Epoch 7:  60%|██████    | 1520/2524 [10:25<06:53,  2.43it/s, loss=0.00735, v_num=3]Epoch 7:  61%|██████    | 1530/2524 [10:29<06:49,  2.43it/s, loss=0.00735, v_num=3]Epoch 7:  61%|██████    | 1530/2524 [10:29<06:49,  2.43it/s, loss=0.00593, v_num=3]Epoch 7:  61%|██████    | 1540/2524 [10:33<06:44,  2.43it/s, loss=0.00593, v_num=3]Epoch 7:  61%|██████    | 1540/2524 [10:33<06:44,  2.43it/s, loss=0.00415, v_num=3]Epoch 7:  61%|██████▏   | 1550/2524 [10:37<06:40,  2.43it/s, loss=0.00415, v_num=3]Epoch 7:  61%|██████▏   | 1550/2524 [10:37<06:40,  2.43it/s, loss=0.00586, v_num=3]Epoch 7:  62%|██████▏   | 1560/2524 [10:41<06:36,  2.43it/s, loss=0.00586, v_num=3]Epoch 7:  62%|██████▏   | 1560/2524 [10:42<06:36,  2.43it/s, loss=0.00708, v_num=3]Epoch 7:  62%|██████▏   | 1570/2524 [10:46<06:32,  2.43it/s, loss=0.00708, v_num=3]Epoch 7:  62%|██████▏   | 1570/2524 [10:46<06:32,  2.43it/s, loss=0.00694, v_num=3]Epoch 7:  63%|██████▎   | 1580/2524 [10:50<06:28,  2.43it/s, loss=0.00694, v_num=3]Epoch 7:  63%|██████▎   | 1580/2524 [10:50<06:28,  2.43it/s, loss=0.00719, v_num=3]Epoch 7:  63%|██████▎   | 1590/2524 [10:54<06:24,  2.43it/s, loss=0.00719, v_num=3]Epoch 7:  63%|██████▎   | 1590/2524 [10:54<06:24,  2.43it/s, loss=0.00626, v_num=3]Epoch 7:  63%|██████▎   | 1600/2524 [10:58<06:20,  2.43it/s, loss=0.00626, v_num=3]Epoch 7:  63%|██████▎   | 1600/2524 [10:58<06:20,  2.43it/s, loss=0.00577, v_num=3]Epoch 7:  64%|██████▍   | 1610/2524 [11:02<06:16,  2.43it/s, loss=0.00577, v_num=3]Epoch 7:  64%|██████▍   | 1610/2524 [11:02<06:16,  2.43it/s, loss=0.0053, v_num=3] Epoch 7:  64%|██████▍   | 1620/2524 [11:06<06:11,  2.43it/s, loss=0.0053, v_num=3]Epoch 7:  64%|██████▍   | 1620/2524 [11:06<06:11,  2.43it/s, loss=0.00554, v_num=3]Epoch 7:  65%|██████▍   | 1630/2524 [11:10<06:07,  2.43it/s, loss=0.00554, v_num=3]Epoch 7:  65%|██████▍   | 1630/2524 [11:10<06:07,  2.43it/s, loss=0.00759, v_num=3]Epoch 7:  65%|██████▍   | 1640/2524 [11:14<06:03,  2.43it/s, loss=0.00759, v_num=3]Epoch 7:  65%|██████▍   | 1640/2524 [11:14<06:03,  2.43it/s, loss=0.00859, v_num=3]Epoch 7:  65%|██████▌   | 1650/2524 [11:18<05:59,  2.43it/s, loss=0.00859, v_num=3]Epoch 7:  65%|██████▌   | 1650/2524 [11:18<05:59,  2.43it/s, loss=0.00643, v_num=3]Epoch 7:  66%|██████▌   | 1660/2524 [11:23<05:55,  2.43it/s, loss=0.00643, v_num=3]Epoch 7:  66%|██████▌   | 1660/2524 [11:23<05:55,  2.43it/s, loss=0.0078, v_num=3] Epoch 7:  66%|██████▌   | 1670/2524 [11:27<05:51,  2.43it/s, loss=0.0078, v_num=3]Epoch 7:  66%|██████▌   | 1670/2524 [11:27<05:51,  2.43it/s, loss=0.00816, v_num=3]Epoch 7:  67%|██████▋   | 1680/2524 [11:31<05:47,  2.43it/s, loss=0.00816, v_num=3]Epoch 7:  67%|██████▋   | 1680/2524 [11:31<05:47,  2.43it/s, loss=0.00684, v_num=3]Epoch 7:  67%|██████▋   | 1690/2524 [11:35<05:43,  2.43it/s, loss=0.00684, v_num=3]Epoch 7:  67%|██████▋   | 1690/2524 [11:35<05:43,  2.43it/s, loss=0.00751, v_num=3]Epoch 7:  67%|██████▋   | 1700/2524 [11:39<05:39,  2.43it/s, loss=0.00751, v_num=3]Epoch 7:  67%|██████▋   | 1700/2524 [11:39<05:39,  2.43it/s, loss=0.00675, v_num=3]Epoch 7:  68%|██████▊   | 1710/2524 [11:43<05:34,  2.43it/s, loss=0.00675, v_num=3]Epoch 7:  68%|██████▊   | 1710/2524 [11:43<05:34,  2.43it/s, loss=0.00629, v_num=3]Epoch 7:  68%|██████▊   | 1720/2524 [11:47<05:30,  2.43it/s, loss=0.00629, v_num=3]Epoch 7:  68%|██████▊   | 1720/2524 [11:47<05:30,  2.43it/s, loss=0.00503, v_num=3]Epoch 7:  69%|██████▊   | 1730/2524 [11:51<05:26,  2.43it/s, loss=0.00503, v_num=3]Epoch 7:  69%|██████▊   | 1730/2524 [11:51<05:26,  2.43it/s, loss=0.00536, v_num=3]Epoch 7:  69%|██████▉   | 1740/2524 [11:55<05:22,  2.43it/s, loss=0.00536, v_num=3]Epoch 7:  69%|██████▉   | 1740/2524 [11:55<05:22,  2.43it/s, loss=0.00669, v_num=3]Epoch 7:  69%|██████▉   | 1750/2524 [12:00<05:18,  2.43it/s, loss=0.00669, v_num=3]Epoch 7:  69%|██████▉   | 1750/2524 [12:00<05:18,  2.43it/s, loss=0.00592, v_num=3]Epoch 7:  70%|██████▉   | 1760/2524 [12:04<05:14,  2.43it/s, loss=0.00592, v_num=3]Epoch 7:  70%|██████▉   | 1760/2524 [12:04<05:14,  2.43it/s, loss=0.00686, v_num=3]Epoch 7:  70%|███████   | 1770/2524 [12:08<05:10,  2.43it/s, loss=0.00686, v_num=3]Epoch 7:  70%|███████   | 1770/2524 [12:08<05:10,  2.43it/s, loss=0.00601, v_num=3]Epoch 7:  71%|███████   | 1780/2524 [12:12<05:06,  2.43it/s, loss=0.00601, v_num=3]Epoch 7:  71%|███████   | 1780/2524 [12:12<05:06,  2.43it/s, loss=0.00446, v_num=3]Epoch 7:  71%|███████   | 1790/2524 [12:16<05:01,  2.43it/s, loss=0.00446, v_num=3]Epoch 7:  71%|███████   | 1790/2524 [12:16<05:01,  2.43it/s, loss=0.00483, v_num=3]Epoch 7:  71%|███████▏  | 1800/2524 [12:20<04:57,  2.43it/s, loss=0.00483, v_num=3]Epoch 7:  71%|███████▏  | 1800/2524 [12:20<04:57,  2.43it/s, loss=0.00451, v_num=3]Epoch 7:  72%|███████▏  | 1810/2524 [12:24<04:53,  2.43it/s, loss=0.00451, v_num=3]Epoch 7:  72%|███████▏  | 1810/2524 [12:24<04:53,  2.43it/s, loss=0.00563, v_num=3]Epoch 7:  72%|███████▏  | 1820/2524 [12:28<04:49,  2.43it/s, loss=0.00563, v_num=3]Epoch 7:  72%|███████▏  | 1820/2524 [12:28<04:49,  2.43it/s, loss=0.0054, v_num=3] Epoch 7:  73%|███████▎  | 1830/2524 [12:32<04:45,  2.43it/s, loss=0.0054, v_num=3]Epoch 7:  73%|███████▎  | 1830/2524 [12:32<04:45,  2.43it/s, loss=0.0061, v_num=3]Epoch 7:  73%|███████▎  | 1840/2524 [12:37<04:41,  2.43it/s, loss=0.0061, v_num=3]Epoch 7:  73%|███████▎  | 1840/2524 [12:37<04:41,  2.43it/s, loss=0.0084, v_num=3]Epoch 7:  73%|███████▎  | 1850/2524 [12:41<04:37,  2.43it/s, loss=0.0084, v_num=3]Epoch 7:  73%|███████▎  | 1850/2524 [12:41<04:37,  2.43it/s, loss=0.00746, v_num=3]Epoch 7:  74%|███████▎  | 1860/2524 [12:45<04:33,  2.43it/s, loss=0.00746, v_num=3]Epoch 7:  74%|███████▎  | 1860/2524 [12:45<04:33,  2.43it/s, loss=0.00694, v_num=3]Epoch 7:  74%|███████▍  | 1870/2524 [12:49<04:29,  2.43it/s, loss=0.00694, v_num=3]Epoch 7:  74%|███████▍  | 1870/2524 [12:49<04:29,  2.43it/s, loss=0.00797, v_num=3]Epoch 7:  74%|███████▍  | 1880/2524 [12:53<04:24,  2.43it/s, loss=0.00797, v_num=3]Epoch 7:  74%|███████▍  | 1880/2524 [12:53<04:24,  2.43it/s, loss=0.00636, v_num=3]Epoch 7:  75%|███████▍  | 1890/2524 [12:57<04:20,  2.43it/s, loss=0.00636, v_num=3]Epoch 7:  75%|███████▍  | 1890/2524 [12:57<04:20,  2.43it/s, loss=0.0041, v_num=3] Epoch 7:  75%|███████▌  | 1900/2524 [13:01<04:16,  2.43it/s, loss=0.0041, v_num=3]Epoch 7:  75%|███████▌  | 1900/2524 [13:01<04:16,  2.43it/s, loss=0.00444, v_num=3]Epoch 7:  76%|███████▌  | 1910/2524 [13:05<04:12,  2.43it/s, loss=0.00444, v_num=3]Epoch 7:  76%|███████▌  | 1910/2524 [13:05<04:12,  2.43it/s, loss=0.00534, v_num=3]Epoch 7:  76%|███████▌  | 1920/2524 [13:09<04:08,  2.43it/s, loss=0.00534, v_num=3]Epoch 7:  76%|███████▌  | 1920/2524 [13:09<04:08,  2.43it/s, loss=0.00579, v_num=3]Epoch 7:  76%|███████▋  | 1930/2524 [13:13<04:04,  2.43it/s, loss=0.00579, v_num=3]Epoch 7:  76%|███████▋  | 1930/2524 [13:13<04:04,  2.43it/s, loss=0.00598, v_num=3]Epoch 7:  77%|███████▋  | 1940/2524 [13:18<04:00,  2.43it/s, loss=0.00598, v_num=3]Epoch 7:  77%|███████▋  | 1940/2524 [13:18<04:00,  2.43it/s, loss=0.00714, v_num=3]Epoch 7:  77%|███████▋  | 1950/2524 [13:22<03:56,  2.43it/s, loss=0.00714, v_num=3]Epoch 7:  77%|███████▋  | 1950/2524 [13:22<03:56,  2.43it/s, loss=0.00707, v_num=3]Epoch 7:  78%|███████▊  | 1960/2524 [13:26<03:52,  2.43it/s, loss=0.00707, v_num=3]Epoch 7:  78%|███████▊  | 1960/2524 [13:26<03:52,  2.43it/s, loss=0.00442, v_num=3]Epoch 7:  78%|███████▊  | 1970/2524 [13:30<03:47,  2.43it/s, loss=0.00442, v_num=3]Epoch 7:  78%|███████▊  | 1970/2524 [13:30<03:47,  2.43it/s, loss=0.00408, v_num=3]Epoch 7:  78%|███████▊  | 1980/2524 [13:34<03:43,  2.43it/s, loss=0.00408, v_num=3]Epoch 7:  78%|███████▊  | 1980/2524 [13:34<03:43,  2.43it/s, loss=0.00527, v_num=3]Epoch 7:  79%|███████▉  | 1990/2524 [13:38<03:39,  2.43it/s, loss=0.00527, v_num=3]Epoch 7:  79%|███████▉  | 1990/2524 [13:38<03:39,  2.43it/s, loss=0.0072, v_num=3] Epoch 7:  79%|███████▉  | 2000/2524 [13:42<03:35,  2.43it/s, loss=0.0072, v_num=3]Epoch 7:  79%|███████▉  | 2000/2524 [13:42<03:35,  2.43it/s, loss=0.00825, v_num=3]Epoch 7:  80%|███████▉  | 2010/2524 [13:46<03:31,  2.43it/s, loss=0.00825, v_num=3]Epoch 7:  80%|███████▉  | 2010/2524 [13:46<03:31,  2.43it/s, loss=0.00735, v_num=3]Epoch 7:  80%|████████  | 2020/2524 [13:50<03:27,  2.43it/s, loss=0.00735, v_num=3]Epoch 7:  80%|████████  | 2020/2524 [13:50<03:27,  2.43it/s, loss=0.0058, v_num=3] Epoch 7:  80%|████████  | 2030/2524 [13:54<03:23,  2.43it/s, loss=0.0058, v_num=3]Epoch 7:  80%|████████  | 2030/2524 [13:54<03:23,  2.43it/s, loss=0.00544, v_num=3]Epoch 7:  81%|████████  | 2040/2524 [13:59<03:19,  2.43it/s, loss=0.00544, v_num=3]Epoch 7:  81%|████████  | 2040/2524 [13:59<03:19,  2.43it/s, loss=0.00503, v_num=3]Epoch 7:  81%|████████  | 2050/2524 [14:03<03:14,  2.43it/s, loss=0.00503, v_num=3]Epoch 7:  81%|████████  | 2050/2524 [14:03<03:14,  2.43it/s, loss=0.00439, v_num=3]Epoch 7:  82%|████████▏ | 2060/2524 [14:07<03:10,  2.43it/s, loss=0.00439, v_num=3]Epoch 7:  82%|████████▏ | 2060/2524 [14:07<03:10,  2.43it/s, loss=0.00699, v_num=3]Epoch 7:  82%|████████▏ | 2070/2524 [14:11<03:06,  2.43it/s, loss=0.00699, v_num=3]Epoch 7:  82%|████████▏ | 2070/2524 [14:11<03:06,  2.43it/s, loss=0.00633, v_num=3]Epoch 7:  82%|████████▏ | 2080/2524 [14:15<03:02,  2.43it/s, loss=0.00633, v_num=3]Epoch 7:  82%|████████▏ | 2080/2524 [14:15<03:02,  2.43it/s, loss=0.00417, v_num=3]Epoch 7:  83%|████████▎ | 2090/2524 [14:19<02:58,  2.43it/s, loss=0.00417, v_num=3]Epoch 7:  83%|████████▎ | 2090/2524 [14:19<02:58,  2.43it/s, loss=0.00734, v_num=3]Epoch 7:  83%|████████▎ | 2100/2524 [14:23<02:54,  2.43it/s, loss=0.00734, v_num=3]Epoch 7:  83%|████████▎ | 2100/2524 [14:23<02:54,  2.43it/s, loss=0.00958, v_num=3]Epoch 7:  84%|████████▎ | 2110/2524 [14:27<02:50,  2.43it/s, loss=0.00958, v_num=3]Epoch 7:  84%|████████▎ | 2110/2524 [14:27<02:50,  2.43it/s, loss=0.00798, v_num=3]Epoch 7:  84%|████████▍ | 2120/2524 [14:31<02:46,  2.43it/s, loss=0.00798, v_num=3]Epoch 7:  84%|████████▍ | 2120/2524 [14:31<02:46,  2.43it/s, loss=0.00524, v_num=3]Epoch 7:  84%|████████▍ | 2130/2524 [14:36<02:42,  2.43it/s, loss=0.00524, v_num=3]Epoch 7:  84%|████████▍ | 2130/2524 [14:36<02:42,  2.43it/s, loss=0.00565, v_num=3]Epoch 7:  85%|████████▍ | 2140/2524 [14:40<02:37,  2.43it/s, loss=0.00565, v_num=3]Epoch 7:  85%|████████▍ | 2140/2524 [14:40<02:37,  2.43it/s, loss=0.00793, v_num=3]Epoch 7:  85%|████████▌ | 2150/2524 [14:44<02:33,  2.43it/s, loss=0.00793, v_num=3]Epoch 7:  85%|████████▌ | 2150/2524 [14:44<02:33,  2.43it/s, loss=0.00647, v_num=3]Epoch 7:  86%|████████▌ | 2160/2524 [14:48<02:29,  2.43it/s, loss=0.00647, v_num=3]Epoch 7:  86%|████████▌ | 2160/2524 [14:48<02:29,  2.43it/s, loss=0.00414, v_num=3]Epoch 7:  86%|████████▌ | 2170/2524 [14:52<02:25,  2.43it/s, loss=0.00414, v_num=3]Epoch 7:  86%|████████▌ | 2170/2524 [14:52<02:25,  2.43it/s, loss=0.00443, v_num=3]Epoch 7:  86%|████████▋ | 2180/2524 [14:56<02:21,  2.43it/s, loss=0.00443, v_num=3]Epoch 7:  86%|████████▋ | 2180/2524 [14:56<02:21,  2.43it/s, loss=0.0063, v_num=3] Epoch 7:  87%|████████▋ | 2190/2524 [15:00<02:17,  2.43it/s, loss=0.0063, v_num=3]Epoch 7:  87%|████████▋ | 2190/2524 [15:00<02:17,  2.43it/s, loss=0.00703, v_num=3]Epoch 7:  87%|████████▋ | 2200/2524 [15:04<02:13,  2.43it/s, loss=0.00703, v_num=3]Epoch 7:  87%|████████▋ | 2200/2524 [15:04<02:13,  2.43it/s, loss=0.0053, v_num=3] Epoch 7:  88%|████████▊ | 2210/2524 [15:08<02:09,  2.43it/s, loss=0.0053, v_num=3]Epoch 7:  88%|████████▊ | 2210/2524 [15:08<02:09,  2.43it/s, loss=0.0049, v_num=3]Epoch 7:  88%|████████▊ | 2220/2524 [15:13<02:05,  2.43it/s, loss=0.0049, v_num=3]Epoch 7:  88%|████████▊ | 2220/2524 [15:13<02:05,  2.43it/s, loss=0.00457, v_num=3]Epoch 7:  88%|████████▊ | 2230/2524 [15:17<02:00,  2.43it/s, loss=0.00457, v_num=3]Epoch 7:  88%|████████▊ | 2230/2524 [15:17<02:00,  2.43it/s, loss=0.00367, v_num=3]Epoch 7:  89%|████████▊ | 2240/2524 [15:21<01:56,  2.43it/s, loss=0.00367, v_num=3]Epoch 7:  89%|████████▊ | 2240/2524 [15:21<01:56,  2.43it/s, loss=0.00488, v_num=3]Epoch 7:  89%|████████▉ | 2250/2524 [15:25<01:52,  2.43it/s, loss=0.00488, v_num=3]Epoch 7:  89%|████████▉ | 2250/2524 [15:25<01:52,  2.43it/s, loss=0.00636, v_num=3]Epoch 7:  90%|████████▉ | 2260/2524 [15:29<01:48,  2.43it/s, loss=0.00636, v_num=3]Epoch 7:  90%|████████▉ | 2260/2524 [15:29<01:48,  2.43it/s, loss=0.00683, v_num=3]Epoch 7:  90%|████████▉ | 2270/2524 [15:33<01:44,  2.43it/s, loss=0.00683, v_num=3]Epoch 7:  90%|████████▉ | 2270/2524 [15:33<01:44,  2.43it/s, loss=0.00664, v_num=3]Epoch 7:  90%|█████████ | 2280/2524 [15:37<01:40,  2.43it/s, loss=0.00664, v_num=3]Epoch 7:  90%|█████████ | 2280/2524 [15:37<01:40,  2.43it/s, loss=0.00811, v_num=3]Epoch 7:  91%|█████████ | 2290/2524 [15:41<01:36,  2.43it/s, loss=0.00811, v_num=3]Epoch 7:  91%|█████████ | 2290/2524 [15:41<01:36,  2.43it/s, loss=0.00806, v_num=3]Epoch 7:  91%|█████████ | 2300/2524 [15:45<01:32,  2.43it/s, loss=0.00806, v_num=3]Epoch 7:  91%|█████████ | 2300/2524 [15:45<01:32,  2.43it/s, loss=0.00701, v_num=3]Epoch 7:  92%|█████████▏| 2310/2524 [15:50<01:28,  2.43it/s, loss=0.00701, v_num=3]Epoch 7:  92%|█████████▏| 2310/2524 [15:50<01:28,  2.43it/s, loss=0.00618, v_num=3]Epoch 7:  92%|█████████▏| 2320/2524 [15:54<01:23,  2.43it/s, loss=0.00618, v_num=3]Epoch 7:  92%|█████████▏| 2320/2524 [15:54<01:23,  2.43it/s, loss=0.00398, v_num=3]Epoch 7:  92%|█████████▏| 2330/2524 [15:58<01:19,  2.43it/s, loss=0.00398, v_num=3]Epoch 7:  92%|█████████▏| 2330/2524 [15:58<01:19,  2.43it/s, loss=0.00371, v_num=3]Epoch 7:  93%|█████████▎| 2340/2524 [16:02<01:15,  2.43it/s, loss=0.00371, v_num=3]Epoch 7:  93%|█████████▎| 2340/2524 [16:02<01:15,  2.43it/s, loss=0.00555, v_num=3]Epoch 7:  93%|█████████▎| 2350/2524 [16:06<01:11,  2.43it/s, loss=0.00555, v_num=3]Epoch 7:  93%|█████████▎| 2350/2524 [16:06<01:11,  2.43it/s, loss=0.00637, v_num=3]Epoch 7:  94%|█████████▎| 2360/2524 [16:10<01:07,  2.43it/s, loss=0.00637, v_num=3]Epoch 7:  94%|█████████▎| 2360/2524 [16:10<01:07,  2.43it/s, loss=0.00696, v_num=3]Epoch 7:  94%|█████████▍| 2370/2524 [16:14<01:03,  2.43it/s, loss=0.00696, v_num=3]Epoch 7:  94%|█████████▍| 2370/2524 [16:14<01:03,  2.43it/s, loss=0.00832, v_num=3]Epoch 7:  94%|█████████▍| 2380/2524 [16:18<00:59,  2.43it/s, loss=0.00832, v_num=3]Epoch 7:  94%|█████████▍| 2380/2524 [16:18<00:59,  2.43it/s, loss=0.00702, v_num=3]Epoch 7:  95%|█████████▍| 2390/2524 [16:22<00:55,  2.43it/s, loss=0.00702, v_num=3]Epoch 7:  95%|█████████▍| 2390/2524 [16:22<00:55,  2.43it/s, loss=0.00464, v_num=3]Epoch 7:  95%|█████████▌| 2400/2524 [16:27<00:50,  2.43it/s, loss=0.00464, v_num=3]Epoch 7:  95%|█████████▌| 2400/2524 [16:27<00:50,  2.43it/s, loss=0.00397, v_num=3]Epoch 7:  95%|█████████▌| 2410/2524 [16:31<00:46,  2.43it/s, loss=0.00397, v_num=3]Epoch 7:  95%|█████████▌| 2410/2524 [16:31<00:46,  2.43it/s, loss=0.00522, v_num=3]Epoch 7:  96%|█████████▌| 2420/2524 [16:35<00:42,  2.43it/s, loss=0.00522, v_num=3]Epoch 7:  96%|█████████▌| 2420/2524 [16:35<00:42,  2.43it/s, loss=0.00502, v_num=3]Epoch 7:  96%|█████████▋| 2430/2524 [16:39<00:38,  2.43it/s, loss=0.00502, v_num=3]Epoch 7:  96%|█████████▋| 2430/2524 [16:39<00:38,  2.43it/s, loss=0.00583, v_num=3]Epoch 7:  97%|█████████▋| 2440/2524 [16:43<00:34,  2.43it/s, loss=0.00583, v_num=3]Epoch 7:  97%|█████████▋| 2440/2524 [16:43<00:34,  2.43it/s, loss=0.0075, v_num=3] Epoch 7:  97%|█████████▋| 2450/2524 [16:47<00:30,  2.43it/s, loss=0.0075, v_num=3]Epoch 7:  97%|█████████▋| 2450/2524 [16:47<00:30,  2.43it/s, loss=0.00674, v_num=3]Epoch 7:  97%|█████████▋| 2460/2524 [16:51<00:26,  2.43it/s, loss=0.00674, v_num=3]Epoch 7:  97%|█████████▋| 2460/2524 [16:51<00:26,  2.43it/s, loss=0.00551, v_num=3]Epoch 7:  98%|█████████▊| 2470/2524 [16:55<00:22,  2.43it/s, loss=0.00551, v_num=3]Epoch 7:  98%|█████████▊| 2470/2524 [16:55<00:22,  2.43it/s, loss=0.0066, v_num=3] Epoch 7:  98%|█████████▊| 2480/2524 [16:59<00:18,  2.43it/s, loss=0.0066, v_num=3]Epoch 7:  98%|█████████▊| 2480/2524 [16:59<00:18,  2.43it/s, loss=0.007, v_num=3] Epoch 7:  99%|█████████▊| 2490/2524 [17:04<00:13,  2.43it/s, loss=0.007, v_num=3]Epoch 7:  99%|█████████▊| 2490/2524 [17:04<00:13,  2.43it/s, loss=0.00592, v_num=3]Epoch 7:  99%|█████████▉| 2500/2524 [17:08<00:09,  2.43it/s, loss=0.00592, v_num=3]Epoch 7:  99%|█████████▉| 2500/2524 [17:08<00:09,  2.43it/s, loss=0.00663, v_num=3]Epoch 7:  99%|█████████▉| 2510/2524 [17:12<00:05,  2.43it/s, loss=0.00663, v_num=3]Epoch 7:  99%|█████████▉| 2510/2524 [17:12<00:05,  2.43it/s, loss=0.00647, v_num=3]Epoch 7: 100%|█████████▉| 2520/2524 [17:16<00:01,  2.43it/s, loss=0.00647, v_num=3]Epoch 7: 100%|█████████▉| 2520/2524 [17:16<00:01,  2.43it/s, loss=0.006, v_num=3]  Epoch 7: 100%|██████████| 2524/2524 [17:17<00:00,  2.43it/s, loss=0.006, v_num=3]Epoch 7: 100%|██████████| 2524/2524 [17:17<00:00,  2.43it/s, loss=0.00616, v_num=3]Epoch 7: 100%|██████████| 2524/2524 [17:17<00:00,  2.43it/s, loss=0.00616, v_num=3]Epoch 7:   0%|          | 0/2524 [00:00<?, ?it/s, loss=0.00616, v_num=3]           Epoch 8:   0%|          | 0/2524 [00:00<?, ?it/s, loss=0.00616, v_num=3]Epoch 8:   0%|          | 10/2524 [00:04<19:44,  2.12it/s, loss=0.00616, v_num=3]Epoch 8:   0%|          | 10/2524 [00:04<19:47,  2.12it/s, loss=0.00412, v_num=3]Epoch 8:   1%|          | 20/2524 [00:08<18:21,  2.27it/s, loss=0.00412, v_num=3]Epoch 8:   1%|          | 20/2524 [00:08<18:22,  2.27it/s, loss=0.00613, v_num=3]Epoch 8:   1%|          | 30/2524 [00:12<17:51,  2.33it/s, loss=0.00613, v_num=3]Epoch 8:   1%|          | 30/2524 [00:12<17:52,  2.33it/s, loss=0.00607, v_num=3]Epoch 8:   2%|▏         | 40/2524 [00:16<17:34,  2.36it/s, loss=0.00607, v_num=3]Epoch 8:   2%|▏         | 40/2524 [00:16<17:34,  2.36it/s, loss=0.00528, v_num=3]Epoch 8:   2%|▏         | 50/2524 [00:21<17:22,  2.37it/s, loss=0.00528, v_num=3]Epoch 8:   2%|▏         | 50/2524 [00:21<17:22,  2.37it/s, loss=0.00648, v_num=3]Epoch 8:   2%|▏         | 60/2524 [00:25<17:15,  2.38it/s, loss=0.00648, v_num=3]Epoch 8:   2%|▏         | 60/2524 [00:25<17:15,  2.38it/s, loss=0.00558, v_num=3]Epoch 8:   3%|▎         | 70/2524 [00:29<17:07,  2.39it/s, loss=0.00558, v_num=3]Epoch 8:   3%|▎         | 70/2524 [00:29<17:07,  2.39it/s, loss=0.00569, v_num=3]Epoch 8:   3%|▎         | 80/2524 [00:33<16:59,  2.40it/s, loss=0.00569, v_num=3]Epoch 8:   3%|▎         | 80/2524 [00:33<17:00,  2.40it/s, loss=0.00507, v_num=3]Epoch 8:   4%|▎         | 90/2524 [00:37<16:53,  2.40it/s, loss=0.00507, v_num=3]Epoch 8:   4%|▎         | 90/2524 [00:37<16:53,  2.40it/s, loss=0.00382, v_num=3]Epoch 8:   4%|▍         | 100/2524 [00:41<16:47,  2.41it/s, loss=0.00382, v_num=3]Epoch 8:   4%|▍         | 100/2524 [00:41<16:47,  2.41it/s, loss=0.00554, v_num=3]Epoch 8:   4%|▍         | 110/2524 [00:45<16:45,  2.40it/s, loss=0.00554, v_num=3]Epoch 8:   4%|▍         | 110/2524 [00:45<16:45,  2.40it/s, loss=0.00541, v_num=3]Epoch 8:   5%|▍         | 120/2524 [00:49<16:39,  2.41it/s, loss=0.00541, v_num=3]Epoch 8:   5%|▍         | 120/2524 [00:49<16:39,  2.40it/s, loss=0.00393, v_num=3]Epoch 8:   5%|▌         | 130/2524 [00:53<16:33,  2.41it/s, loss=0.00393, v_num=3]Epoch 8:   5%|▌         | 130/2524 [00:53<16:34,  2.41it/s, loss=0.00452, v_num=3]Epoch 8:   6%|▌         | 140/2524 [00:58<16:28,  2.41it/s, loss=0.00452, v_num=3]Epoch 8:   6%|▌         | 140/2524 [00:58<16:28,  2.41it/s, loss=0.00397, v_num=3]Epoch 8:   6%|▌         | 150/2524 [01:02<16:23,  2.41it/s, loss=0.00397, v_num=3]Epoch 8:   6%|▌         | 150/2524 [01:02<16:23,  2.41it/s, loss=0.00489, v_num=3]Epoch 8:   6%|▋         | 160/2524 [01:06<16:19,  2.41it/s, loss=0.00489, v_num=3]Epoch 8:   6%|▋         | 160/2524 [01:06<16:19,  2.41it/s, loss=0.00534, v_num=3]Epoch 8:   7%|▋         | 170/2524 [01:10<16:14,  2.42it/s, loss=0.00534, v_num=3]Epoch 8:   7%|▋         | 170/2524 [01:10<16:14,  2.41it/s, loss=0.00519, v_num=3]Epoch 8:   7%|▋         | 180/2524 [01:14<16:09,  2.42it/s, loss=0.00519, v_num=3]Epoch 8:   7%|▋         | 180/2524 [01:14<16:09,  2.42it/s, loss=0.00584, v_num=3]Epoch 8:   8%|▊         | 190/2524 [01:18<16:05,  2.42it/s, loss=0.00584, v_num=3]Epoch 8:   8%|▊         | 190/2524 [01:18<16:05,  2.42it/s, loss=0.00514, v_num=3]Epoch 8:   8%|▊         | 200/2524 [01:22<16:00,  2.42it/s, loss=0.00514, v_num=3]Epoch 8:   8%|▊         | 200/2524 [01:22<16:00,  2.42it/s, loss=0.0056, v_num=3] Epoch 8:   8%|▊         | 210/2524 [01:26<15:57,  2.42it/s, loss=0.0056, v_num=3]Epoch 8:   8%|▊         | 210/2524 [01:26<15:57,  2.42it/s, loss=0.00478, v_num=3]Epoch 8:   9%|▊         | 220/2524 [01:30<15:52,  2.42it/s, loss=0.00478, v_num=3]Epoch 8:   9%|▊         | 220/2524 [01:30<15:52,  2.42it/s, loss=0.00595, v_num=3]Epoch 8:   9%|▉         | 230/2524 [01:35<15:48,  2.42it/s, loss=0.00595, v_num=3]Epoch 8:   9%|▉         | 230/2524 [01:35<15:48,  2.42it/s, loss=0.00644, v_num=3]Epoch 8:  10%|▉         | 240/2524 [01:39<15:43,  2.42it/s, loss=0.00644, v_num=3]Epoch 8:  10%|▉         | 240/2524 [01:39<15:43,  2.42it/s, loss=0.00589, v_num=3]Epoch 8:  10%|▉         | 250/2524 [01:43<15:39,  2.42it/s, loss=0.00589, v_num=3]Epoch 8:  10%|▉         | 250/2524 [01:43<15:39,  2.42it/s, loss=0.00657, v_num=3]Epoch 8:  10%|█         | 260/2524 [01:47<15:35,  2.42it/s, loss=0.00657, v_num=3]Epoch 8:  10%|█         | 260/2524 [01:47<15:35,  2.42it/s, loss=0.00474, v_num=3]Epoch 8:  11%|█         | 270/2524 [01:51<15:30,  2.42it/s, loss=0.00474, v_num=3]Epoch 8:  11%|█         | 270/2524 [01:51<15:30,  2.42it/s, loss=0.00377, v_num=3]Epoch 8:  11%|█         | 280/2524 [01:55<15:26,  2.42it/s, loss=0.00377, v_num=3]Epoch 8:  11%|█         | 280/2524 [01:55<15:26,  2.42it/s, loss=0.00338, v_num=3]Epoch 8:  11%|█▏        | 290/2524 [01:59<15:21,  2.42it/s, loss=0.00338, v_num=3]Epoch 8:  11%|█▏        | 290/2524 [01:59<15:21,  2.42it/s, loss=0.00418, v_num=3]Epoch 8:  12%|█▏        | 300/2524 [02:03<15:17,  2.42it/s, loss=0.00418, v_num=3]Epoch 8:  12%|█▏        | 300/2524 [02:03<15:17,  2.42it/s, loss=0.0059, v_num=3] Epoch 8:  12%|█▏        | 310/2524 [02:08<15:14,  2.42it/s, loss=0.0059, v_num=3]Epoch 8:  12%|█▏        | 310/2524 [02:08<15:14,  2.42it/s, loss=0.00514, v_num=3]Epoch 8:  13%|█▎        | 320/2524 [02:12<15:09,  2.42it/s, loss=0.00514, v_num=3]Epoch 8:  13%|█▎        | 320/2524 [02:12<15:09,  2.42it/s, loss=0.00423, v_num=3]Epoch 8:  13%|█▎        | 330/2524 [02:16<15:05,  2.42it/s, loss=0.00423, v_num=3]Epoch 8:  13%|█▎        | 330/2524 [02:16<15:05,  2.42it/s, loss=0.00542, v_num=3]Epoch 8:  13%|█▎        | 340/2524 [02:20<15:01,  2.42it/s, loss=0.00542, v_num=3]Epoch 8:  13%|█▎        | 340/2524 [02:20<15:01,  2.42it/s, loss=0.00617, v_num=3]Epoch 8:  14%|█▍        | 350/2524 [02:24<14:56,  2.42it/s, loss=0.00617, v_num=3]Epoch 8:  14%|█▍        | 350/2524 [02:24<14:56,  2.42it/s, loss=0.00559, v_num=3]Epoch 8:  14%|█▍        | 360/2524 [02:28<14:52,  2.42it/s, loss=0.00559, v_num=3]Epoch 8:  14%|█▍        | 360/2524 [02:28<14:52,  2.42it/s, loss=0.00447, v_num=3]Epoch 8:  15%|█▍        | 370/2524 [02:32<14:48,  2.42it/s, loss=0.00447, v_num=3]Epoch 8:  15%|█▍        | 370/2524 [02:32<14:48,  2.42it/s, loss=0.00422, v_num=3]Epoch 8:  15%|█▌        | 380/2524 [02:36<14:44,  2.43it/s, loss=0.00422, v_num=3]Epoch 8:  15%|█▌        | 380/2524 [02:36<14:44,  2.43it/s, loss=0.00441, v_num=3]Epoch 8:  15%|█▌        | 390/2524 [02:40<14:39,  2.43it/s, loss=0.00441, v_num=3]Epoch 8:  15%|█▌        | 390/2524 [02:40<14:39,  2.43it/s, loss=0.00471, v_num=3]Epoch 8:  16%|█▌        | 400/2524 [02:44<14:35,  2.43it/s, loss=0.00471, v_num=3]Epoch 8:  16%|█▌        | 400/2524 [02:44<14:35,  2.43it/s, loss=0.00642, v_num=3]Epoch 8:  16%|█▌        | 410/2524 [02:49<14:31,  2.42it/s, loss=0.00642, v_num=3]Epoch 8:  16%|█▌        | 410/2524 [02:49<14:31,  2.42it/s, loss=0.00653, v_num=3]Epoch 8:  17%|█▋        | 420/2524 [02:53<14:27,  2.43it/s, loss=0.00653, v_num=3]Epoch 8:  17%|█▋        | 420/2524 [02:53<14:27,  2.42it/s, loss=0.0075, v_num=3] Epoch 8:  17%|█▋        | 430/2524 [02:57<14:23,  2.43it/s, loss=0.0075, v_num=3]Epoch 8:  17%|█▋        | 430/2524 [02:57<14:23,  2.43it/s, loss=0.00611, v_num=3]Epoch 8:  17%|█▋        | 440/2524 [03:01<14:18,  2.43it/s, loss=0.00611, v_num=3]Epoch 8:  17%|█▋        | 440/2524 [03:01<14:19,  2.43it/s, loss=0.00543, v_num=3]Epoch 8:  18%|█▊        | 450/2524 [03:05<14:14,  2.43it/s, loss=0.00543, v_num=3]Epoch 8:  18%|█▊        | 450/2524 [03:05<14:14,  2.43it/s, loss=0.00718, v_num=3]Epoch 8:  18%|█▊        | 460/2524 [03:09<14:10,  2.43it/s, loss=0.00718, v_num=3]Epoch 8:  18%|█▊        | 460/2524 [03:09<14:10,  2.43it/s, loss=0.00798, v_num=3]Epoch 8:  19%|█▊        | 470/2524 [03:13<14:06,  2.43it/s, loss=0.00798, v_num=3]Epoch 8:  19%|█▊        | 470/2524 [03:13<14:06,  2.43it/s, loss=0.0085, v_num=3] Epoch 8:  19%|█▉        | 480/2524 [03:17<14:02,  2.43it/s, loss=0.0085, v_num=3]Epoch 8:  19%|█▉        | 480/2524 [03:17<14:02,  2.43it/s, loss=0.0067, v_num=3]Epoch 8:  19%|█▉        | 490/2524 [03:21<13:57,  2.43it/s, loss=0.0067, v_num=3]Epoch 8:  19%|█▉        | 490/2524 [03:21<13:57,  2.43it/s, loss=0.00644, v_num=3]Epoch 8:  20%|█▉        | 500/2524 [03:25<13:53,  2.43it/s, loss=0.00644, v_num=3]Epoch 8:  20%|█▉        | 500/2524 [03:25<13:53,  2.43it/s, loss=0.00579, v_num=3]Epoch 8:  20%|██        | 510/2524 [03:30<13:49,  2.43it/s, loss=0.00579, v_num=3]Epoch 8:  20%|██        | 510/2524 [03:30<13:50,  2.43it/s, loss=0.00559, v_num=3]Epoch 8:  21%|██        | 520/2524 [03:34<13:45,  2.43it/s, loss=0.00559, v_num=3]Epoch 8:  21%|██        | 520/2524 [03:34<13:45,  2.43it/s, loss=0.00522, v_num=3]Epoch 8:  21%|██        | 530/2524 [03:38<13:41,  2.43it/s, loss=0.00522, v_num=3]Epoch 8:  21%|██        | 530/2524 [03:38<13:41,  2.43it/s, loss=0.0046, v_num=3] Epoch 8:  21%|██▏       | 540/2524 [03:42<13:37,  2.43it/s, loss=0.0046, v_num=3]Epoch 8:  21%|██▏       | 540/2524 [03:42<13:37,  2.43it/s, loss=0.00613, v_num=3]Epoch 8:  22%|██▏       | 550/2524 [03:46<13:33,  2.43it/s, loss=0.00613, v_num=3]Epoch 8:  22%|██▏       | 550/2524 [03:46<13:33,  2.43it/s, loss=0.00555, v_num=3]Epoch 8:  22%|██▏       | 560/2524 [03:50<13:29,  2.43it/s, loss=0.00555, v_num=3]Epoch 8:  22%|██▏       | 560/2524 [03:50<13:29,  2.43it/s, loss=0.00503, v_num=3]Epoch 8:  23%|██▎       | 570/2524 [03:54<13:24,  2.43it/s, loss=0.00503, v_num=3]Epoch 8:  23%|██▎       | 570/2524 [03:54<13:24,  2.43it/s, loss=0.00542, v_num=3]Epoch 8:  23%|██▎       | 580/2524 [03:58<13:20,  2.43it/s, loss=0.00542, v_num=3]Epoch 8:  23%|██▎       | 580/2524 [03:58<13:20,  2.43it/s, loss=0.00688, v_num=3]Epoch 8:  23%|██▎       | 590/2524 [04:02<13:16,  2.43it/s, loss=0.00688, v_num=3]Epoch 8:  23%|██▎       | 590/2524 [04:02<13:16,  2.43it/s, loss=0.00886, v_num=3]Epoch 8:  24%|██▍       | 600/2524 [04:07<13:12,  2.43it/s, loss=0.00886, v_num=3]Epoch 8:  24%|██▍       | 600/2524 [04:07<13:12,  2.43it/s, loss=0.00844, v_num=3]Epoch 8:  24%|██▍       | 610/2524 [04:11<13:08,  2.43it/s, loss=0.00844, v_num=3]Epoch 8:  24%|██▍       | 610/2524 [04:11<13:08,  2.43it/s, loss=0.0069, v_num=3] Epoch 8:  25%|██▍       | 620/2524 [04:15<13:04,  2.43it/s, loss=0.0069, v_num=3]Epoch 8:  25%|██▍       | 620/2524 [04:15<13:04,  2.43it/s, loss=0.00705, v_num=3]Epoch 8:  25%|██▍       | 630/2524 [04:19<12:59,  2.43it/s, loss=0.00705, v_num=3]Epoch 8:  25%|██▍       | 630/2524 [04:19<13:00,  2.43it/s, loss=0.00584, v_num=3]Epoch 8:  25%|██▌       | 640/2524 [04:23<12:55,  2.43it/s, loss=0.00584, v_num=3]Epoch 8:  25%|██▌       | 640/2524 [04:23<12:55,  2.43it/s, loss=0.00428, v_num=3]Epoch 8:  26%|██▌       | 650/2524 [04:27<12:51,  2.43it/s, loss=0.00428, v_num=3]Epoch 8:  26%|██▌       | 650/2524 [04:27<12:51,  2.43it/s, loss=0.00502, v_num=3]Epoch 8:  26%|██▌       | 660/2524 [04:31<12:47,  2.43it/s, loss=0.00502, v_num=3]Epoch 8:  26%|██▌       | 660/2524 [04:31<12:47,  2.43it/s, loss=0.00437, v_num=3]Epoch 8:  27%|██▋       | 670/2524 [04:35<12:43,  2.43it/s, loss=0.00437, v_num=3]Epoch 8:  27%|██▋       | 670/2524 [04:35<12:43,  2.43it/s, loss=0.0044, v_num=3] Epoch 8:  27%|██▋       | 680/2524 [04:39<12:39,  2.43it/s, loss=0.0044, v_num=3]Epoch 8:  27%|██▋       | 680/2524 [04:39<12:39,  2.43it/s, loss=0.00634, v_num=3]Epoch 8:  27%|██▋       | 690/2524 [04:44<12:34,  2.43it/s, loss=0.00634, v_num=3]Epoch 8:  27%|██▋       | 690/2524 [04:44<12:34,  2.43it/s, loss=0.00547, v_num=3]Epoch 8:  28%|██▊       | 700/2524 [04:48<12:30,  2.43it/s, loss=0.00547, v_num=3]Epoch 8:  28%|██▊       | 700/2524 [04:48<12:30,  2.43it/s, loss=0.00468, v_num=3]Epoch 8:  28%|██▊       | 710/2524 [04:52<12:26,  2.43it/s, loss=0.00468, v_num=3]Epoch 8:  28%|██▊       | 710/2524 [04:52<12:26,  2.43it/s, loss=0.00487, v_num=3]Epoch 8:  29%|██▊       | 720/2524 [04:56<12:22,  2.43it/s, loss=0.00487, v_num=3]Epoch 8:  29%|██▊       | 720/2524 [04:56<12:22,  2.43it/s, loss=0.00356, v_num=3]Epoch 8:  29%|██▉       | 730/2524 [05:00<12:18,  2.43it/s, loss=0.00356, v_num=3]Epoch 8:  29%|██▉       | 730/2524 [05:00<12:18,  2.43it/s, loss=0.00413, v_num=3]Epoch 8:  29%|██▉       | 740/2524 [05:04<12:14,  2.43it/s, loss=0.00413, v_num=3]Epoch 8:  29%|██▉       | 740/2524 [05:04<12:14,  2.43it/s, loss=0.00578, v_num=3]Epoch 8:  30%|██▉       | 750/2524 [05:08<12:10,  2.43it/s, loss=0.00578, v_num=3]Epoch 8:  30%|██▉       | 750/2524 [05:08<12:10,  2.43it/s, loss=0.00691, v_num=3]Epoch 8:  30%|███       | 760/2524 [05:12<12:06,  2.43it/s, loss=0.00691, v_num=3]Epoch 8:  30%|███       | 760/2524 [05:12<12:06,  2.43it/s, loss=0.00655, v_num=3]Epoch 8:  31%|███       | 770/2524 [05:16<12:01,  2.43it/s, loss=0.00655, v_num=3]Epoch 8:  31%|███       | 770/2524 [05:16<12:02,  2.43it/s, loss=0.00629, v_num=3]Epoch 8:  31%|███       | 780/2524 [05:21<11:57,  2.43it/s, loss=0.00629, v_num=3]Epoch 8:  31%|███       | 780/2524 [05:21<11:57,  2.43it/s, loss=0.00544, v_num=3]Epoch 8:  31%|███▏      | 790/2524 [05:25<11:53,  2.43it/s, loss=0.00544, v_num=3]Epoch 8:  31%|███▏      | 790/2524 [05:25<11:53,  2.43it/s, loss=0.00306, v_num=3]Epoch 8:  32%|███▏      | 800/2524 [05:29<11:49,  2.43it/s, loss=0.00306, v_num=3]Epoch 8:  32%|███▏      | 800/2524 [05:29<11:49,  2.43it/s, loss=0.00357, v_num=3]Epoch 8:  32%|███▏      | 810/2524 [05:33<11:45,  2.43it/s, loss=0.00357, v_num=3]Epoch 8:  32%|███▏      | 810/2524 [05:33<11:45,  2.43it/s, loss=0.00405, v_num=3]Epoch 8:  32%|███▏      | 820/2524 [05:37<11:41,  2.43it/s, loss=0.00405, v_num=3]Epoch 8:  32%|███▏      | 820/2524 [05:37<11:41,  2.43it/s, loss=0.00372, v_num=3]Epoch 8:  33%|███▎      | 830/2524 [05:41<11:37,  2.43it/s, loss=0.00372, v_num=3]Epoch 8:  33%|███▎      | 830/2524 [05:41<11:37,  2.43it/s, loss=0.00592, v_num=3]Epoch 8:  33%|███▎      | 840/2524 [05:45<11:33,  2.43it/s, loss=0.00592, v_num=3]Epoch 8:  33%|███▎      | 840/2524 [05:45<11:33,  2.43it/s, loss=0.00602, v_num=3]Epoch 8:  34%|███▎      | 850/2524 [05:49<11:28,  2.43it/s, loss=0.00602, v_num=3]Epoch 8:  34%|███▎      | 850/2524 [05:49<11:28,  2.43it/s, loss=0.00419, v_num=3]Epoch 8:  34%|███▍      | 860/2524 [05:53<11:24,  2.43it/s, loss=0.00419, v_num=3]Epoch 8:  34%|███▍      | 860/2524 [05:53<11:24,  2.43it/s, loss=0.00429, v_num=3]Epoch 8:  34%|███▍      | 870/2524 [05:58<11:20,  2.43it/s, loss=0.00429, v_num=3]Epoch 8:  34%|███▍      | 870/2524 [05:58<11:20,  2.43it/s, loss=0.00662, v_num=3]Epoch 8:  35%|███▍      | 880/2524 [06:02<11:16,  2.43it/s, loss=0.00662, v_num=3]Epoch 8:  35%|███▍      | 880/2524 [06:02<11:16,  2.43it/s, loss=0.00683, v_num=3]Epoch 8:  35%|███▌      | 890/2524 [06:06<11:12,  2.43it/s, loss=0.00683, v_num=3]Epoch 8:  35%|███▌      | 890/2524 [06:06<11:12,  2.43it/s, loss=0.00571, v_num=3]Epoch 8:  36%|███▌      | 900/2524 [06:10<11:08,  2.43it/s, loss=0.00571, v_num=3]Epoch 8:  36%|███▌      | 900/2524 [06:10<11:08,  2.43it/s, loss=0.00526, v_num=3]Epoch 8:  36%|███▌      | 910/2524 [06:14<11:04,  2.43it/s, loss=0.00526, v_num=3]Epoch 8:  36%|███▌      | 910/2524 [06:14<11:04,  2.43it/s, loss=0.00547, v_num=3]Epoch 8:  36%|███▋      | 920/2524 [06:18<11:00,  2.43it/s, loss=0.00547, v_num=3]Epoch 8:  36%|███▋      | 920/2524 [06:18<11:00,  2.43it/s, loss=0.00618, v_num=3]Epoch 8:  37%|███▋      | 930/2524 [06:22<10:55,  2.43it/s, loss=0.00618, v_num=3]Epoch 8:  37%|███▋      | 930/2524 [06:22<10:55,  2.43it/s, loss=0.0056, v_num=3] Epoch 8:  37%|███▋      | 940/2524 [06:26<10:51,  2.43it/s, loss=0.0056, v_num=3]Epoch 8:  37%|███▋      | 940/2524 [06:26<10:51,  2.43it/s, loss=0.0047, v_num=3]Epoch 8:  38%|███▊      | 950/2524 [06:30<10:47,  2.43it/s, loss=0.0047, v_num=3]Epoch 8:  38%|███▊      | 950/2524 [06:30<10:47,  2.43it/s, loss=0.00486, v_num=3]Epoch 8:  38%|███▊      | 960/2524 [06:35<10:43,  2.43it/s, loss=0.00486, v_num=3]Epoch 8:  38%|███▊      | 960/2524 [06:35<10:43,  2.43it/s, loss=0.00579, v_num=3]Epoch 8:  38%|███▊      | 970/2524 [06:39<10:39,  2.43it/s, loss=0.00579, v_num=3]Epoch 8:  38%|███▊      | 970/2524 [06:39<10:39,  2.43it/s, loss=0.00687, v_num=3]Epoch 8:  39%|███▉      | 980/2524 [06:43<10:35,  2.43it/s, loss=0.00687, v_num=3]Epoch 8:  39%|███▉      | 980/2524 [06:43<10:35,  2.43it/s, loss=0.00684, v_num=3]Epoch 8:  39%|███▉      | 990/2524 [06:47<10:31,  2.43it/s, loss=0.00684, v_num=3]Epoch 8:  39%|███▉      | 990/2524 [06:47<10:31,  2.43it/s, loss=0.00606, v_num=3]Epoch 8:  40%|███▉      | 1000/2524 [06:51<10:26,  2.43it/s, loss=0.00606, v_num=3]Epoch 8:  40%|███▉      | 1000/2524 [06:51<10:26,  2.43it/s, loss=0.00605, v_num=3]Epoch 8:  40%|████      | 1010/2524 [06:55<10:23,  2.43it/s, loss=0.00605, v_num=3]Epoch 8:  40%|████      | 1010/2524 [06:55<10:23,  2.43it/s, loss=0.00557, v_num=3]Epoch 8:  40%|████      | 1020/2524 [06:59<10:18,  2.43it/s, loss=0.00557, v_num=3]Epoch 8:  40%|████      | 1020/2524 [06:59<10:18,  2.43it/s, loss=0.00631, v_num=3]Epoch 8:  41%|████      | 1030/2524 [07:03<10:14,  2.43it/s, loss=0.00631, v_num=3]Epoch 8:  41%|████      | 1030/2524 [07:03<10:14,  2.43it/s, loss=0.00592, v_num=3]Epoch 8:  41%|████      | 1040/2524 [07:07<10:10,  2.43it/s, loss=0.00592, v_num=3]Epoch 8:  41%|████      | 1040/2524 [07:07<10:10,  2.43it/s, loss=0.00545, v_num=3]Epoch 8:  42%|████▏     | 1050/2524 [07:12<10:06,  2.43it/s, loss=0.00545, v_num=3]Epoch 8:  42%|████▏     | 1050/2524 [07:12<10:06,  2.43it/s, loss=0.00647, v_num=3]Epoch 8:  42%|████▏     | 1060/2524 [07:16<10:02,  2.43it/s, loss=0.00647, v_num=3]Epoch 8:  42%|████▏     | 1060/2524 [07:16<10:02,  2.43it/s, loss=0.00633, v_num=3]Epoch 8:  42%|████▏     | 1070/2524 [07:20<09:58,  2.43it/s, loss=0.00633, v_num=3]Epoch 8:  42%|████▏     | 1070/2524 [07:20<09:58,  2.43it/s, loss=0.00537, v_num=3]Epoch 8:  43%|████▎     | 1080/2524 [07:24<09:54,  2.43it/s, loss=0.00537, v_num=3]Epoch 8:  43%|████▎     | 1080/2524 [07:24<09:54,  2.43it/s, loss=0.00393, v_num=3]Epoch 8:  43%|████▎     | 1090/2524 [07:28<09:49,  2.43it/s, loss=0.00393, v_num=3]Epoch 8:  43%|████▎     | 1090/2524 [07:28<09:49,  2.43it/s, loss=0.00398, v_num=3]Epoch 8:  44%|████▎     | 1100/2524 [07:32<09:45,  2.43it/s, loss=0.00398, v_num=3]Epoch 8:  44%|████▎     | 1100/2524 [07:32<09:45,  2.43it/s, loss=0.00536, v_num=3]Epoch 8:  44%|████▍     | 1110/2524 [07:36<09:41,  2.43it/s, loss=0.00536, v_num=3]Epoch 8:  44%|████▍     | 1110/2524 [07:36<09:41,  2.43it/s, loss=0.00608, v_num=3]Epoch 8:  44%|████▍     | 1120/2524 [07:40<09:37,  2.43it/s, loss=0.00608, v_num=3]Epoch 8:  44%|████▍     | 1120/2524 [07:40<09:37,  2.43it/s, loss=0.006, v_num=3]  Epoch 8:  45%|████▍     | 1130/2524 [07:44<09:33,  2.43it/s, loss=0.006, v_num=3]Epoch 8:  45%|████▍     | 1130/2524 [07:44<09:33,  2.43it/s, loss=0.00562, v_num=3]Epoch 8:  45%|████▌     | 1140/2524 [07:49<09:29,  2.43it/s, loss=0.00562, v_num=3]Epoch 8:  45%|████▌     | 1140/2524 [07:49<09:29,  2.43it/s, loss=0.00396, v_num=3]Epoch 8:  46%|████▌     | 1150/2524 [07:53<09:25,  2.43it/s, loss=0.00396, v_num=3]Epoch 8:  46%|████▌     | 1150/2524 [07:53<09:25,  2.43it/s, loss=0.00326, v_num=3]Epoch 8:  46%|████▌     | 1160/2524 [07:57<09:21,  2.43it/s, loss=0.00326, v_num=3]Epoch 8:  46%|████▌     | 1160/2524 [07:57<09:21,  2.43it/s, loss=0.00416, v_num=3]Epoch 8:  46%|████▋     | 1170/2524 [08:01<09:17,  2.43it/s, loss=0.00416, v_num=3]Epoch 8:  46%|████▋     | 1170/2524 [08:01<09:17,  2.43it/s, loss=0.00356, v_num=3]Epoch 8:  47%|████▋     | 1180/2524 [08:05<09:12,  2.43it/s, loss=0.00356, v_num=3]Epoch 8:  47%|████▋     | 1180/2524 [08:05<09:12,  2.43it/s, loss=0.00525, v_num=3]Epoch 8:  47%|████▋     | 1190/2524 [08:09<09:08,  2.43it/s, loss=0.00525, v_num=3]Epoch 8:  47%|████▋     | 1190/2524 [08:09<09:08,  2.43it/s, loss=0.0058, v_num=3] Epoch 8:  48%|████▊     | 1200/2524 [08:13<09:04,  2.43it/s, loss=0.0058, v_num=3]Epoch 8:  48%|████▊     | 1200/2524 [08:13<09:04,  2.43it/s, loss=0.0041, v_num=3]Epoch 8:  48%|████▊     | 1210/2524 [08:17<09:00,  2.43it/s, loss=0.0041, v_num=3]Epoch 8:  48%|████▊     | 1210/2524 [08:17<09:00,  2.43it/s, loss=0.00386, v_num=3]Epoch 8:  48%|████▊     | 1220/2524 [08:21<08:56,  2.43it/s, loss=0.00386, v_num=3]Epoch 8:  48%|████▊     | 1220/2524 [08:21<08:56,  2.43it/s, loss=0.00567, v_num=3]Epoch 8:  49%|████▊     | 1230/2524 [08:26<08:52,  2.43it/s, loss=0.00567, v_num=3]Epoch 8:  49%|████▊     | 1230/2524 [08:26<08:52,  2.43it/s, loss=0.00611, v_num=3]Epoch 8:  49%|████▉     | 1240/2524 [08:30<08:48,  2.43it/s, loss=0.00611, v_num=3]Epoch 8:  49%|████▉     | 1240/2524 [08:30<08:48,  2.43it/s, loss=0.00477, v_num=3]Epoch 8:  50%|████▉     | 1250/2524 [08:34<08:44,  2.43it/s, loss=0.00477, v_num=3]Epoch 8:  50%|████▉     | 1250/2524 [08:34<08:44,  2.43it/s, loss=0.00646, v_num=3]Epoch 8:  50%|████▉     | 1260/2524 [08:38<08:40,  2.43it/s, loss=0.00646, v_num=3]Epoch 8:  50%|████▉     | 1260/2524 [08:38<08:40,  2.43it/s, loss=0.00585, v_num=3]Epoch 8:  50%|█████     | 1270/2524 [08:42<08:35,  2.43it/s, loss=0.00585, v_num=3]Epoch 8:  50%|█████     | 1270/2524 [08:42<08:35,  2.43it/s, loss=0.00393, v_num=3]Epoch 8:  51%|█████     | 1280/2524 [08:46<08:31,  2.43it/s, loss=0.00393, v_num=3]Epoch 8:  51%|█████     | 1280/2524 [08:46<08:31,  2.43it/s, loss=0.00384, v_num=3]Epoch 8:  51%|█████     | 1290/2524 [08:50<08:27,  2.43it/s, loss=0.00384, v_num=3]Epoch 8:  51%|█████     | 1290/2524 [08:50<08:27,  2.43it/s, loss=0.00478, v_num=3]Epoch 8:  52%|█████▏    | 1300/2524 [08:54<08:23,  2.43it/s, loss=0.00478, v_num=3]Epoch 8:  52%|█████▏    | 1300/2524 [08:54<08:23,  2.43it/s, loss=0.00524, v_num=3]Epoch 8:  52%|█████▏    | 1310/2524 [08:58<08:19,  2.43it/s, loss=0.00524, v_num=3]Epoch 8:  52%|█████▏    | 1310/2524 [08:58<08:19,  2.43it/s, loss=0.00581, v_num=3]Epoch 8:  52%|█████▏    | 1320/2524 [09:03<08:15,  2.43it/s, loss=0.00581, v_num=3]Epoch 8:  52%|█████▏    | 1320/2524 [09:03<08:15,  2.43it/s, loss=0.00724, v_num=3]Epoch 8:  53%|█████▎    | 1330/2524 [09:07<08:11,  2.43it/s, loss=0.00724, v_num=3]Epoch 8:  53%|█████▎    | 1330/2524 [09:07<08:11,  2.43it/s, loss=0.00793, v_num=3]Epoch 8:  53%|█████▎    | 1340/2524 [09:11<08:07,  2.43it/s, loss=0.00793, v_num=3]Epoch 8:  53%|█████▎    | 1340/2524 [09:11<08:07,  2.43it/s, loss=0.00518, v_num=3]Epoch 8:  53%|█████▎    | 1350/2524 [09:15<08:02,  2.43it/s, loss=0.00518, v_num=3]Epoch 8:  53%|█████▎    | 1350/2524 [09:15<08:02,  2.43it/s, loss=0.00239, v_num=3]Epoch 8:  54%|█████▍    | 1360/2524 [09:19<07:58,  2.43it/s, loss=0.00239, v_num=3]Epoch 8:  54%|█████▍    | 1360/2524 [09:19<07:58,  2.43it/s, loss=0.00444, v_num=3]Epoch 8:  54%|█████▍    | 1370/2524 [09:23<07:54,  2.43it/s, loss=0.00444, v_num=3]Epoch 8:  54%|█████▍    | 1370/2524 [09:23<07:54,  2.43it/s, loss=0.00682, v_num=3]Epoch 8:  55%|█████▍    | 1380/2524 [09:27<07:50,  2.43it/s, loss=0.00682, v_num=3]Epoch 8:  55%|█████▍    | 1380/2524 [09:27<07:50,  2.43it/s, loss=0.00664, v_num=3]Epoch 8:  55%|█████▌    | 1390/2524 [09:31<07:46,  2.43it/s, loss=0.00664, v_num=3]Epoch 8:  55%|█████▌    | 1390/2524 [09:31<07:46,  2.43it/s, loss=0.00463, v_num=3]Epoch 8:  55%|█████▌    | 1400/2524 [09:35<07:42,  2.43it/s, loss=0.00463, v_num=3]Epoch 8:  55%|█████▌    | 1400/2524 [09:35<07:42,  2.43it/s, loss=0.00406, v_num=3]Epoch 8:  56%|█████▌    | 1410/2524 [09:40<07:38,  2.43it/s, loss=0.00406, v_num=3]Epoch 8:  56%|█████▌    | 1410/2524 [09:40<07:38,  2.43it/s, loss=0.00599, v_num=3]Epoch 8:  56%|█████▋    | 1420/2524 [09:44<07:34,  2.43it/s, loss=0.00599, v_num=3]Epoch 8:  56%|█████▋    | 1420/2524 [09:44<07:34,  2.43it/s, loss=0.00652, v_num=3]Epoch 8:  57%|█████▋    | 1430/2524 [09:48<07:30,  2.43it/s, loss=0.00652, v_num=3]Epoch 8:  57%|█████▋    | 1430/2524 [09:48<07:30,  2.43it/s, loss=0.00523, v_num=3]Epoch 8:  57%|█████▋    | 1440/2524 [09:52<07:25,  2.43it/s, loss=0.00523, v_num=3]Epoch 8:  57%|█████▋    | 1440/2524 [09:52<07:25,  2.43it/s, loss=0.0054, v_num=3] Epoch 8:  57%|█████▋    | 1450/2524 [09:56<07:21,  2.43it/s, loss=0.0054, v_num=3]Epoch 8:  57%|█████▋    | 1450/2524 [09:56<07:21,  2.43it/s, loss=0.00567, v_num=3]Epoch 8:  58%|█████▊    | 1460/2524 [10:00<07:17,  2.43it/s, loss=0.00567, v_num=3]Epoch 8:  58%|█████▊    | 1460/2524 [10:00<07:17,  2.43it/s, loss=0.00597, v_num=3]Epoch 8:  58%|█████▊    | 1470/2524 [10:04<07:13,  2.43it/s, loss=0.00597, v_num=3]Epoch 8:  58%|█████▊    | 1470/2524 [10:04<07:13,  2.43it/s, loss=0.00554, v_num=3]Epoch 8:  59%|█████▊    | 1480/2524 [10:08<07:09,  2.43it/s, loss=0.00554, v_num=3]Epoch 8:  59%|█████▊    | 1480/2524 [10:08<07:09,  2.43it/s, loss=0.00706, v_num=3]Epoch 8:  59%|█████▉    | 1490/2524 [10:12<07:05,  2.43it/s, loss=0.00706, v_num=3]Epoch 8:  59%|█████▉    | 1490/2524 [10:12<07:05,  2.43it/s, loss=0.00729, v_num=3]Epoch 8:  59%|█████▉    | 1500/2524 [10:16<07:01,  2.43it/s, loss=0.00729, v_num=3]Epoch 8:  59%|█████▉    | 1500/2524 [10:16<07:01,  2.43it/s, loss=0.0043, v_num=3] Epoch 8:  60%|█████▉    | 1510/2524 [10:21<06:57,  2.43it/s, loss=0.0043, v_num=3]Epoch 8:  60%|█████▉    | 1510/2524 [10:21<06:57,  2.43it/s, loss=0.0061, v_num=3]Epoch 8:  60%|██████    | 1520/2524 [10:25<06:52,  2.43it/s, loss=0.0061, v_num=3]Epoch 8:  60%|██████    | 1520/2524 [10:25<06:52,  2.43it/s, loss=0.00586, v_num=3]Epoch 8:  61%|██████    | 1530/2524 [10:29<06:48,  2.43it/s, loss=0.00586, v_num=3]Epoch 8:  61%|██████    | 1530/2524 [10:29<06:48,  2.43it/s, loss=0.00338, v_num=3]Epoch 8:  61%|██████    | 1540/2524 [10:33<06:44,  2.43it/s, loss=0.00338, v_num=3]Epoch 8:  61%|██████    | 1540/2524 [10:33<06:44,  2.43it/s, loss=0.00835, v_num=3]Epoch 8:  61%|██████▏   | 1550/2524 [10:37<06:40,  2.43it/s, loss=0.00835, v_num=3]Epoch 8:  61%|██████▏   | 1550/2524 [10:37<06:40,  2.43it/s, loss=0.00943, v_num=3]Epoch 8:  62%|██████▏   | 1560/2524 [10:41<06:36,  2.43it/s, loss=0.00943, v_num=3]Epoch 8:  62%|██████▏   | 1560/2524 [10:41<06:36,  2.43it/s, loss=0.00506, v_num=3]Epoch 8:  62%|██████▏   | 1570/2524 [10:45<06:32,  2.43it/s, loss=0.00506, v_num=3]Epoch 8:  62%|██████▏   | 1570/2524 [10:45<06:32,  2.43it/s, loss=0.00466, v_num=3]Epoch 8:  63%|██████▎   | 1580/2524 [10:49<06:28,  2.43it/s, loss=0.00466, v_num=3]Epoch 8:  63%|██████▎   | 1580/2524 [10:49<06:28,  2.43it/s, loss=0.00585, v_num=3]Epoch 8:  63%|██████▎   | 1590/2524 [10:53<06:24,  2.43it/s, loss=0.00585, v_num=3]Epoch 8:  63%|██████▎   | 1590/2524 [10:53<06:24,  2.43it/s, loss=0.00475, v_num=3]Epoch 8:  63%|██████▎   | 1600/2524 [10:57<06:19,  2.43it/s, loss=0.00475, v_num=3]Epoch 8:  63%|██████▎   | 1600/2524 [10:57<06:19,  2.43it/s, loss=0.00421, v_num=3]Epoch 8:  64%|██████▍   | 1610/2524 [11:02<06:15,  2.43it/s, loss=0.00421, v_num=3]Epoch 8:  64%|██████▍   | 1610/2524 [11:02<06:15,  2.43it/s, loss=0.00505, v_num=3]Epoch 8:  64%|██████▍   | 1620/2524 [11:06<06:11,  2.43it/s, loss=0.00505, v_num=3]Epoch 8:  64%|██████▍   | 1620/2524 [11:06<06:11,  2.43it/s, loss=0.00496, v_num=3]Epoch 8:  65%|██████▍   | 1630/2524 [11:10<06:07,  2.43it/s, loss=0.00496, v_num=3]Epoch 8:  65%|██████▍   | 1630/2524 [11:10<06:07,  2.43it/s, loss=0.00402, v_num=3]Epoch 8:  65%|██████▍   | 1640/2524 [11:14<06:03,  2.43it/s, loss=0.00402, v_num=3]Epoch 8:  65%|██████▍   | 1640/2524 [11:14<06:03,  2.43it/s, loss=0.00373, v_num=3]Epoch 8:  65%|██████▌   | 1650/2524 [11:18<05:59,  2.43it/s, loss=0.00373, v_num=3]Epoch 8:  65%|██████▌   | 1650/2524 [11:18<05:59,  2.43it/s, loss=0.00465, v_num=3]Epoch 8:  66%|██████▌   | 1660/2524 [11:22<05:55,  2.43it/s, loss=0.00465, v_num=3]Epoch 8:  66%|██████▌   | 1660/2524 [11:22<05:55,  2.43it/s, loss=0.00396, v_num=3]Epoch 8:  66%|██████▌   | 1670/2524 [11:26<05:51,  2.43it/s, loss=0.00396, v_num=3]Epoch 8:  66%|██████▌   | 1670/2524 [11:26<05:51,  2.43it/s, loss=0.00503, v_num=3]Epoch 8:  67%|██████▋   | 1680/2524 [11:30<05:47,  2.43it/s, loss=0.00503, v_num=3]Epoch 8:  67%|██████▋   | 1680/2524 [11:30<05:47,  2.43it/s, loss=0.00628, v_num=3]Epoch 8:  67%|██████▋   | 1690/2524 [11:34<05:42,  2.43it/s, loss=0.00628, v_num=3]Epoch 8:  67%|██████▋   | 1690/2524 [11:34<05:42,  2.43it/s, loss=0.00504, v_num=3]Epoch 8:  67%|██████▋   | 1700/2524 [11:39<05:38,  2.43it/s, loss=0.00504, v_num=3]Epoch 8:  67%|██████▋   | 1700/2524 [11:39<05:38,  2.43it/s, loss=0.00439, v_num=3]Epoch 8:  68%|██████▊   | 1710/2524 [11:43<05:34,  2.43it/s, loss=0.00439, v_num=3]Epoch 8:  68%|██████▊   | 1710/2524 [11:43<05:34,  2.43it/s, loss=0.00528, v_num=3]Epoch 8:  68%|██████▊   | 1720/2524 [11:47<05:30,  2.43it/s, loss=0.00528, v_num=3]Epoch 8:  68%|██████▊   | 1720/2524 [11:47<05:30,  2.43it/s, loss=0.00696, v_num=3]Epoch 8:  69%|██████▊   | 1730/2524 [11:51<05:26,  2.43it/s, loss=0.00696, v_num=3]Epoch 8:  69%|██████▊   | 1730/2524 [11:51<05:26,  2.43it/s, loss=0.00661, v_num=3]Epoch 8:  69%|██████▉   | 1740/2524 [11:55<05:22,  2.43it/s, loss=0.00661, v_num=3]Epoch 8:  69%|██████▉   | 1740/2524 [11:55<05:22,  2.43it/s, loss=0.00439, v_num=3]Epoch 8:  69%|██████▉   | 1750/2524 [11:59<05:18,  2.43it/s, loss=0.00439, v_num=3]Epoch 8:  69%|██████▉   | 1750/2524 [11:59<05:18,  2.43it/s, loss=0.00343, v_num=3]Epoch 8:  70%|██████▉   | 1760/2524 [12:03<05:14,  2.43it/s, loss=0.00343, v_num=3]Epoch 8:  70%|██████▉   | 1760/2524 [12:03<05:14,  2.43it/s, loss=0.00413, v_num=3]Epoch 8:  70%|███████   | 1770/2524 [12:07<05:10,  2.43it/s, loss=0.00413, v_num=3]Epoch 8:  70%|███████   | 1770/2524 [12:07<05:10,  2.43it/s, loss=0.00325, v_num=3]Epoch 8:  71%|███████   | 1780/2524 [12:11<05:05,  2.43it/s, loss=0.00325, v_num=3]Epoch 8:  71%|███████   | 1780/2524 [12:11<05:05,  2.43it/s, loss=0.00389, v_num=3]Epoch 8:  71%|███████   | 1790/2524 [12:16<05:01,  2.43it/s, loss=0.00389, v_num=3]Epoch 8:  71%|███████   | 1790/2524 [12:16<05:01,  2.43it/s, loss=0.00652, v_num=3]Epoch 8:  71%|███████▏  | 1800/2524 [12:20<04:57,  2.43it/s, loss=0.00652, v_num=3]Epoch 8:  71%|███████▏  | 1800/2524 [12:20<04:57,  2.43it/s, loss=0.00621, v_num=3]Epoch 8:  72%|███████▏  | 1810/2524 [12:24<04:53,  2.43it/s, loss=0.00621, v_num=3]Epoch 8:  72%|███████▏  | 1810/2524 [12:24<04:53,  2.43it/s, loss=0.0063, v_num=3] Epoch 8:  72%|███████▏  | 1820/2524 [12:28<04:49,  2.43it/s, loss=0.0063, v_num=3]Epoch 8:  72%|███████▏  | 1820/2524 [12:28<04:49,  2.43it/s, loss=0.00778, v_num=3]Epoch 8:  73%|███████▎  | 1830/2524 [12:32<04:45,  2.43it/s, loss=0.00778, v_num=3]Epoch 8:  73%|███████▎  | 1830/2524 [12:32<04:45,  2.43it/s, loss=0.00631, v_num=3]Epoch 8:  73%|███████▎  | 1840/2524 [12:36<04:41,  2.43it/s, loss=0.00631, v_num=3]Epoch 8:  73%|███████▎  | 1840/2524 [12:36<04:41,  2.43it/s, loss=0.00657, v_num=3]Epoch 8:  73%|███████▎  | 1850/2524 [12:40<04:37,  2.43it/s, loss=0.00657, v_num=3]Epoch 8:  73%|███████▎  | 1850/2524 [12:40<04:37,  2.43it/s, loss=0.00876, v_num=3]Epoch 8:  74%|███████▎  | 1860/2524 [12:44<04:33,  2.43it/s, loss=0.00876, v_num=3]Epoch 8:  74%|███████▎  | 1860/2524 [12:44<04:33,  2.43it/s, loss=0.00818, v_num=3]Epoch 8:  74%|███████▍  | 1870/2524 [12:48<04:28,  2.43it/s, loss=0.00818, v_num=3]Epoch 8:  74%|███████▍  | 1870/2524 [12:48<04:28,  2.43it/s, loss=0.00716, v_num=3]Epoch 8:  74%|███████▍  | 1880/2524 [12:53<04:24,  2.43it/s, loss=0.00716, v_num=3]Epoch 8:  74%|███████▍  | 1880/2524 [12:53<04:24,  2.43it/s, loss=0.00567, v_num=3]Epoch 8:  75%|███████▍  | 1890/2524 [12:57<04:20,  2.43it/s, loss=0.00567, v_num=3]Epoch 8:  75%|███████▍  | 1890/2524 [12:57<04:20,  2.43it/s, loss=0.00652, v_num=3]Epoch 8:  75%|███████▌  | 1900/2524 [13:01<04:16,  2.43it/s, loss=0.00652, v_num=3]Epoch 8:  75%|███████▌  | 1900/2524 [13:01<04:16,  2.43it/s, loss=0.00563, v_num=3]Epoch 8:  76%|███████▌  | 1910/2524 [13:05<04:12,  2.43it/s, loss=0.00563, v_num=3]Epoch 8:  76%|███████▌  | 1910/2524 [13:05<04:12,  2.43it/s, loss=0.00486, v_num=3]Epoch 8:  76%|███████▌  | 1920/2524 [13:09<04:08,  2.43it/s, loss=0.00486, v_num=3]Epoch 8:  76%|███████▌  | 1920/2524 [13:09<04:08,  2.43it/s, loss=0.00618, v_num=3]Epoch 8:  76%|███████▋  | 1930/2524 [13:13<04:04,  2.43it/s, loss=0.00618, v_num=3]Epoch 8:  76%|███████▋  | 1930/2524 [13:13<04:04,  2.43it/s, loss=0.00476, v_num=3]Epoch 8:  77%|███████▋  | 1940/2524 [13:17<04:00,  2.43it/s, loss=0.00476, v_num=3]Epoch 8:  77%|███████▋  | 1940/2524 [13:17<04:00,  2.43it/s, loss=0.00451, v_num=3]Epoch 8:  77%|███████▋  | 1950/2524 [13:21<03:56,  2.43it/s, loss=0.00451, v_num=3]Epoch 8:  77%|███████▋  | 1950/2524 [13:21<03:56,  2.43it/s, loss=0.00515, v_num=3]Epoch 8:  78%|███████▊  | 1960/2524 [13:26<03:51,  2.43it/s, loss=0.00515, v_num=3]Epoch 8:  78%|███████▊  | 1960/2524 [13:26<03:51,  2.43it/s, loss=0.00489, v_num=3]Epoch 8:  78%|███████▊  | 1970/2524 [13:30<03:47,  2.43it/s, loss=0.00489, v_num=3]Epoch 8:  78%|███████▊  | 1970/2524 [13:30<03:47,  2.43it/s, loss=0.00577, v_num=3]Epoch 8:  78%|███████▊  | 1980/2524 [13:34<03:43,  2.43it/s, loss=0.00577, v_num=3]Epoch 8:  78%|███████▊  | 1980/2524 [13:34<03:43,  2.43it/s, loss=0.00656, v_num=3]Epoch 8:  79%|███████▉  | 1990/2524 [13:38<03:39,  2.43it/s, loss=0.00656, v_num=3]Epoch 8:  79%|███████▉  | 1990/2524 [13:38<03:39,  2.43it/s, loss=0.005, v_num=3]  Epoch 8:  79%|███████▉  | 2000/2524 [13:42<03:35,  2.43it/s, loss=0.005, v_num=3]Epoch 8:  79%|███████▉  | 2000/2524 [13:42<03:35,  2.43it/s, loss=0.00519, v_num=3]Epoch 8:  80%|███████▉  | 2010/2524 [13:46<03:31,  2.43it/s, loss=0.00519, v_num=3]Epoch 8:  80%|███████▉  | 2010/2524 [13:46<03:31,  2.43it/s, loss=0.0052, v_num=3] Epoch 8:  80%|████████  | 2020/2524 [13:50<03:27,  2.43it/s, loss=0.0052, v_num=3]Epoch 8:  80%|████████  | 2020/2524 [13:50<03:27,  2.43it/s, loss=0.00504, v_num=3]Epoch 8:  80%|████████  | 2030/2524 [13:54<03:23,  2.43it/s, loss=0.00504, v_num=3]Epoch 8:  80%|████████  | 2030/2524 [13:54<03:23,  2.43it/s, loss=0.00464, v_num=3]Epoch 8:  81%|████████  | 2040/2524 [13:58<03:19,  2.43it/s, loss=0.00464, v_num=3]Epoch 8:  81%|████████  | 2040/2524 [13:58<03:19,  2.43it/s, loss=0.00333, v_num=3]Epoch 8:  81%|████████  | 2050/2524 [14:03<03:14,  2.43it/s, loss=0.00333, v_num=3]Epoch 8:  81%|████████  | 2050/2524 [14:03<03:14,  2.43it/s, loss=0.0031, v_num=3] Epoch 8:  82%|████████▏ | 2060/2524 [14:07<03:10,  2.43it/s, loss=0.0031, v_num=3]Epoch 8:  82%|████████▏ | 2060/2524 [14:07<03:10,  2.43it/s, loss=0.00285, v_num=3]Epoch 8:  82%|████████▏ | 2070/2524 [14:11<03:06,  2.43it/s, loss=0.00285, v_num=3]Epoch 8:  82%|████████▏ | 2070/2524 [14:11<03:06,  2.43it/s, loss=0.00478, v_num=3]Epoch 8:  82%|████████▏ | 2080/2524 [14:15<03:02,  2.43it/s, loss=0.00478, v_num=3]Epoch 8:  82%|████████▏ | 2080/2524 [14:15<03:02,  2.43it/s, loss=0.00504, v_num=3]Epoch 8:  83%|████████▎ | 2090/2524 [14:19<02:58,  2.43it/s, loss=0.00504, v_num=3]Epoch 8:  83%|████████▎ | 2090/2524 [14:19<02:58,  2.43it/s, loss=0.00418, v_num=3]Epoch 8:  83%|████████▎ | 2100/2524 [14:23<02:54,  2.43it/s, loss=0.00418, v_num=3]Epoch 8:  83%|████████▎ | 2100/2524 [14:23<02:54,  2.43it/s, loss=0.00599, v_num=3]Epoch 8:  84%|████████▎ | 2110/2524 [14:27<02:50,  2.43it/s, loss=0.00599, v_num=3]Epoch 8:  84%|████████▎ | 2110/2524 [14:27<02:50,  2.43it/s, loss=0.00857, v_num=3]Epoch 8:  84%|████████▍ | 2120/2524 [14:31<02:46,  2.43it/s, loss=0.00857, v_num=3]Epoch 8:  84%|████████▍ | 2120/2524 [14:31<02:46,  2.43it/s, loss=0.00745, v_num=3]Epoch 8:  84%|████████▍ | 2130/2524 [14:35<02:42,  2.43it/s, loss=0.00745, v_num=3]Epoch 8:  84%|████████▍ | 2130/2524 [14:35<02:42,  2.43it/s, loss=0.0049, v_num=3] Epoch 8:  85%|████████▍ | 2140/2524 [14:40<02:37,  2.43it/s, loss=0.0049, v_num=3]Epoch 8:  85%|████████▍ | 2140/2524 [14:40<02:37,  2.43it/s, loss=0.00464, v_num=3]Epoch 8:  85%|████████▌ | 2150/2524 [14:44<02:33,  2.43it/s, loss=0.00464, v_num=3]Epoch 8:  85%|████████▌ | 2150/2524 [14:44<02:33,  2.43it/s, loss=0.00541, v_num=3]Epoch 8:  86%|████████▌ | 2160/2524 [14:48<02:29,  2.43it/s, loss=0.00541, v_num=3]Epoch 8:  86%|████████▌ | 2160/2524 [14:48<02:29,  2.43it/s, loss=0.00512, v_num=3]Epoch 8:  86%|████████▌ | 2170/2524 [14:52<02:25,  2.43it/s, loss=0.00512, v_num=3]Epoch 8:  86%|████████▌ | 2170/2524 [14:52<02:25,  2.43it/s, loss=0.00455, v_num=3]Epoch 8:  86%|████████▋ | 2180/2524 [14:56<02:21,  2.43it/s, loss=0.00455, v_num=3]Epoch 8:  86%|████████▋ | 2180/2524 [14:56<02:21,  2.43it/s, loss=0.00485, v_num=3]Epoch 8:  87%|████████▋ | 2190/2524 [15:00<02:17,  2.43it/s, loss=0.00485, v_num=3]Epoch 8:  87%|████████▋ | 2190/2524 [15:00<02:17,  2.43it/s, loss=0.00442, v_num=3]Epoch 8:  87%|████████▋ | 2200/2524 [15:04<02:13,  2.43it/s, loss=0.00442, v_num=3]Epoch 8:  87%|████████▋ | 2200/2524 [15:04<02:13,  2.43it/s, loss=0.00722, v_num=3]Epoch 8:  88%|████████▊ | 2210/2524 [15:08<02:09,  2.43it/s, loss=0.00722, v_num=3]Epoch 8:  88%|████████▊ | 2210/2524 [15:08<02:09,  2.43it/s, loss=0.00882, v_num=3]Epoch 8:  88%|████████▊ | 2220/2524 [15:12<02:05,  2.43it/s, loss=0.00882, v_num=3]Epoch 8:  88%|████████▊ | 2220/2524 [15:12<02:05,  2.43it/s, loss=0.00585, v_num=3]Epoch 8:  88%|████████▊ | 2230/2524 [15:17<02:00,  2.43it/s, loss=0.00585, v_num=3]Epoch 8:  88%|████████▊ | 2230/2524 [15:17<02:00,  2.43it/s, loss=0.0045, v_num=3] Epoch 8:  89%|████████▊ | 2240/2524 [15:21<01:56,  2.43it/s, loss=0.0045, v_num=3]Epoch 8:  89%|████████▊ | 2240/2524 [15:21<01:56,  2.43it/s, loss=0.00395, v_num=3]Epoch 8:  89%|████████▉ | 2250/2524 [15:25<01:52,  2.43it/s, loss=0.00395, v_num=3]Epoch 8:  89%|████████▉ | 2250/2524 [15:25<01:52,  2.43it/s, loss=0.00391, v_num=3]Epoch 8:  90%|████████▉ | 2260/2524 [15:29<01:48,  2.43it/s, loss=0.00391, v_num=3]Epoch 8:  90%|████████▉ | 2260/2524 [15:29<01:48,  2.43it/s, loss=0.00465, v_num=3]Epoch 8:  90%|████████▉ | 2270/2524 [15:33<01:44,  2.43it/s, loss=0.00465, v_num=3]Epoch 8:  90%|████████▉ | 2270/2524 [15:33<01:44,  2.43it/s, loss=0.00691, v_num=3]Epoch 8:  90%|█████████ | 2280/2524 [15:37<01:40,  2.43it/s, loss=0.00691, v_num=3]Epoch 8:  90%|█████████ | 2280/2524 [15:37<01:40,  2.43it/s, loss=0.00696, v_num=3]Epoch 8:  91%|█████████ | 2290/2524 [15:41<01:36,  2.43it/s, loss=0.00696, v_num=3]Epoch 8:  91%|█████████ | 2290/2524 [15:41<01:36,  2.43it/s, loss=0.00568, v_num=3]Epoch 8:  91%|█████████ | 2300/2524 [15:45<01:32,  2.43it/s, loss=0.00568, v_num=3]Epoch 8:  91%|█████████ | 2300/2524 [15:45<01:32,  2.43it/s, loss=0.00599, v_num=3]Epoch 8:  92%|█████████▏| 2310/2524 [15:49<01:28,  2.43it/s, loss=0.00599, v_num=3]Epoch 8:  92%|█████████▏| 2310/2524 [15:49<01:28,  2.43it/s, loss=0.00401, v_num=3]Epoch 8:  92%|█████████▏| 2320/2524 [15:54<01:23,  2.43it/s, loss=0.00401, v_num=3]Epoch 8:  92%|█████████▏| 2320/2524 [15:54<01:23,  2.43it/s, loss=0.00281, v_num=3]Epoch 8:  92%|█████████▏| 2330/2524 [15:58<01:19,  2.43it/s, loss=0.00281, v_num=3]Epoch 8:  92%|█████████▏| 2330/2524 [15:58<01:19,  2.43it/s, loss=0.00406, v_num=3]Epoch 8:  93%|█████████▎| 2340/2524 [16:02<01:15,  2.43it/s, loss=0.00406, v_num=3]Epoch 8:  93%|█████████▎| 2340/2524 [16:02<01:15,  2.43it/s, loss=0.00638, v_num=3]Epoch 8:  93%|█████████▎| 2350/2524 [16:06<01:11,  2.43it/s, loss=0.00638, v_num=3]Epoch 8:  93%|█████████▎| 2350/2524 [16:06<01:11,  2.43it/s, loss=0.00706, v_num=3]Epoch 8:  94%|█████████▎| 2360/2524 [16:10<01:07,  2.43it/s, loss=0.00706, v_num=3]Epoch 8:  94%|█████████▎| 2360/2524 [16:10<01:07,  2.43it/s, loss=0.00571, v_num=3]Epoch 8:  94%|█████████▍| 2370/2524 [16:14<01:03,  2.43it/s, loss=0.00571, v_num=3]Epoch 8:  94%|█████████▍| 2370/2524 [16:14<01:03,  2.43it/s, loss=0.00569, v_num=3]Epoch 8:  94%|█████████▍| 2380/2524 [16:18<00:59,  2.43it/s, loss=0.00569, v_num=3]Epoch 8:  94%|█████████▍| 2380/2524 [16:18<00:59,  2.43it/s, loss=0.00619, v_num=3]Epoch 8:  95%|█████████▍| 2390/2524 [16:22<00:55,  2.43it/s, loss=0.00619, v_num=3]Epoch 8:  95%|█████████▍| 2390/2524 [16:22<00:55,  2.43it/s, loss=0.00601, v_num=3]Epoch 8:  95%|█████████▌| 2400/2524 [16:26<00:50,  2.43it/s, loss=0.00601, v_num=3]Epoch 8:  95%|█████████▌| 2400/2524 [16:26<00:50,  2.43it/s, loss=0.00685, v_num=3]Epoch 8:  95%|█████████▌| 2410/2524 [16:31<00:46,  2.43it/s, loss=0.00685, v_num=3]Epoch 8:  95%|█████████▌| 2410/2524 [16:31<00:46,  2.43it/s, loss=0.00628, v_num=3]Epoch 8:  96%|█████████▌| 2420/2524 [16:35<00:42,  2.43it/s, loss=0.00628, v_num=3]Epoch 8:  96%|█████████▌| 2420/2524 [16:35<00:42,  2.43it/s, loss=0.00478, v_num=3]Epoch 8:  96%|█████████▋| 2430/2524 [16:39<00:38,  2.43it/s, loss=0.00478, v_num=3]Epoch 8:  96%|█████████▋| 2430/2524 [16:39<00:38,  2.43it/s, loss=0.00464, v_num=3]Epoch 8:  97%|█████████▋| 2440/2524 [16:43<00:34,  2.43it/s, loss=0.00464, v_num=3]Epoch 8:  97%|█████████▋| 2440/2524 [16:43<00:34,  2.43it/s, loss=0.00378, v_num=3]Epoch 8:  97%|█████████▋| 2450/2524 [16:47<00:30,  2.43it/s, loss=0.00378, v_num=3]Epoch 8:  97%|█████████▋| 2450/2524 [16:47<00:30,  2.43it/s, loss=0.00268, v_num=3]Epoch 8:  97%|█████████▋| 2460/2524 [16:51<00:26,  2.43it/s, loss=0.00268, v_num=3]Epoch 8:  97%|█████████▋| 2460/2524 [16:51<00:26,  2.43it/s, loss=0.00182, v_num=3]Epoch 8:  98%|█████████▊| 2470/2524 [16:55<00:22,  2.43it/s, loss=0.00182, v_num=3]Epoch 8:  98%|█████████▊| 2470/2524 [16:55<00:22,  2.43it/s, loss=0.00325, v_num=3]Epoch 8:  98%|█████████▊| 2480/2524 [16:59<00:18,  2.43it/s, loss=0.00325, v_num=3]Epoch 8:  98%|█████████▊| 2480/2524 [16:59<00:18,  2.43it/s, loss=0.00496, v_num=3]Epoch 8:  99%|█████████▊| 2490/2524 [17:03<00:13,  2.43it/s, loss=0.00496, v_num=3]Epoch 8:  99%|█████████▊| 2490/2524 [17:03<00:13,  2.43it/s, loss=0.00405, v_num=3]Epoch 8:  99%|█████████▉| 2500/2524 [17:07<00:09,  2.43it/s, loss=0.00405, v_num=3]Epoch 8:  99%|█████████▉| 2500/2524 [17:07<00:09,  2.43it/s, loss=0.00557, v_num=3]Epoch 8:  99%|█████████▉| 2510/2524 [17:12<00:05,  2.43it/s, loss=0.00557, v_num=3]Epoch 8:  99%|█████████▉| 2510/2524 [17:12<00:05,  2.43it/s, loss=0.00604, v_num=3]Epoch 8: 100%|█████████▉| 2520/2524 [17:16<00:01,  2.43it/s, loss=0.00604, v_num=3]Epoch 8: 100%|█████████▉| 2520/2524 [17:16<00:01,  2.43it/s, loss=0.00413, v_num=3]Epoch 8: 100%|██████████| 2524/2524 [17:17<00:00,  2.43it/s, loss=0.00413, v_num=3]Epoch 8: 100%|██████████| 2524/2524 [17:17<00:00,  2.43it/s, loss=0.00388, v_num=3]Epoch 8: 100%|██████████| 2524/2524 [17:17<00:00,  2.43it/s, loss=0.00388, v_num=3]Epoch 8:   0%|          | 0/2539 [00:00<?, ?it/s, loss=0.00388, v_num=3]           Epoch 9:   0%|          | 0/2539 [00:00<?, ?it/s, loss=0.00388, v_num=3]Epoch 9:   0%|          | 10/2539 [00:04<18:42,  2.25it/s, loss=0.00388, v_num=3]Epoch 9:   0%|          | 10/2539 [00:04<18:45,  2.25it/s, loss=0.00286, v_num=3]Epoch 9:   1%|          | 20/2539 [00:08<17:54,  2.34it/s, loss=0.00286, v_num=3]Epoch 9:   1%|          | 20/2539 [00:08<17:56,  2.34it/s, loss=0.00394, v_num=3]Epoch 9:   1%|          | 30/2539 [00:12<17:36,  2.38it/s, loss=0.00394, v_num=3]Epoch 9:   1%|          | 30/2539 [00:12<17:37,  2.37it/s, loss=0.00504, v_num=3]Epoch 9:   2%|▏         | 40/2539 [00:16<17:28,  2.38it/s, loss=0.00504, v_num=3]Epoch 9:   2%|▏         | 40/2539 [00:16<17:29,  2.38it/s, loss=0.00476, v_num=3]Epoch 9:   2%|▏         | 50/2539 [00:20<17:19,  2.40it/s, loss=0.00476, v_num=3]Epoch 9:   2%|▏         | 50/2539 [00:20<17:19,  2.39it/s, loss=0.00415, v_num=3]Epoch 9:   2%|▏         | 60/2539 [00:24<17:11,  2.40it/s, loss=0.00415, v_num=3]Epoch 9:   2%|▏         | 60/2539 [00:24<17:12,  2.40it/s, loss=0.00368, v_num=3]Epoch 9:   3%|▎         | 70/2539 [00:29<17:05,  2.41it/s, loss=0.00368, v_num=3]Epoch 9:   3%|▎         | 70/2539 [00:29<17:05,  2.41it/s, loss=0.00481, v_num=3]Epoch 9:   3%|▎         | 80/2539 [00:33<16:59,  2.41it/s, loss=0.00481, v_num=3]Epoch 9:   3%|▎         | 80/2539 [00:33<16:59,  2.41it/s, loss=0.00488, v_num=3]Epoch 9:   4%|▎         | 90/2539 [00:37<16:57,  2.41it/s, loss=0.00488, v_num=3]Epoch 9:   4%|▎         | 90/2539 [00:37<16:58,  2.41it/s, loss=0.00417, v_num=3]Epoch 9:   4%|▍         | 100/2539 [00:41<16:52,  2.41it/s, loss=0.00417, v_num=3]Epoch 9:   4%|▍         | 100/2539 [00:41<16:52,  2.41it/s, loss=0.00544, v_num=3]Epoch 9:   4%|▍         | 110/2539 [00:45<16:46,  2.41it/s, loss=0.00544, v_num=3]Epoch 9:   4%|▍         | 110/2539 [00:45<16:46,  2.41it/s, loss=0.00445, v_num=3]Epoch 9:   5%|▍         | 120/2539 [00:49<16:41,  2.42it/s, loss=0.00445, v_num=3]Epoch 9:   5%|▍         | 120/2539 [00:49<16:41,  2.41it/s, loss=0.00245, v_num=3]Epoch 9:   5%|▌         | 130/2539 [00:53<16:36,  2.42it/s, loss=0.00245, v_num=3]Epoch 9:   5%|▌         | 130/2539 [00:53<16:36,  2.42it/s, loss=0.00196, v_num=3]Epoch 9:   6%|▌         | 140/2539 [00:57<16:32,  2.42it/s, loss=0.00196, v_num=3]Epoch 9:   6%|▌         | 140/2539 [00:57<16:32,  2.42it/s, loss=0.00337, v_num=3]Epoch 9:   6%|▌         | 150/2539 [01:02<16:27,  2.42it/s, loss=0.00337, v_num=3]Epoch 9:   6%|▌         | 150/2539 [01:02<16:27,  2.42it/s, loss=0.00471, v_num=3]Epoch 9:   6%|▋         | 160/2539 [01:06<16:22,  2.42it/s, loss=0.00471, v_num=3]Epoch 9:   6%|▋         | 160/2539 [01:06<16:23,  2.42it/s, loss=0.0045, v_num=3] Epoch 9:   7%|▋         | 170/2539 [01:10<16:18,  2.42it/s, loss=0.0045, v_num=3]Epoch 9:   7%|▋         | 170/2539 [01:10<16:18,  2.42it/s, loss=0.00338, v_num=3]Epoch 9:   7%|▋         | 180/2539 [01:14<16:13,  2.42it/s, loss=0.00338, v_num=3]Epoch 9:   7%|▋         | 180/2539 [01:14<16:13,  2.42it/s, loss=0.00324, v_num=3]Epoch 9:   7%|▋         | 190/2539 [01:18<16:10,  2.42it/s, loss=0.00324, v_num=3]Epoch 9:   7%|▋         | 190/2539 [01:18<16:11,  2.42it/s, loss=0.0034, v_num=3] Epoch 9:   8%|▊         | 200/2539 [01:22<16:06,  2.42it/s, loss=0.0034, v_num=3]Epoch 9:   8%|▊         | 200/2539 [01:22<16:06,  2.42it/s, loss=0.00234, v_num=3]Epoch 9:   8%|▊         | 210/2539 [01:26<16:01,  2.42it/s, loss=0.00234, v_num=3]Epoch 9:   8%|▊         | 210/2539 [01:26<16:01,  2.42it/s, loss=0.00361, v_num=3]Epoch 9:   9%|▊         | 220/2539 [01:30<15:57,  2.42it/s, loss=0.00361, v_num=3]Epoch 9:   9%|▊         | 220/2539 [01:30<15:57,  2.42it/s, loss=0.00494, v_num=3]Epoch 9:   9%|▉         | 230/2539 [01:34<15:52,  2.42it/s, loss=0.00494, v_num=3]Epoch 9:   9%|▉         | 230/2539 [01:34<15:52,  2.42it/s, loss=0.00475, v_num=3]Epoch 9:   9%|▉         | 240/2539 [01:39<15:48,  2.42it/s, loss=0.00475, v_num=3]Epoch 9:   9%|▉         | 240/2539 [01:39<15:48,  2.42it/s, loss=0.0046, v_num=3] Epoch 9:  10%|▉         | 250/2539 [01:43<15:44,  2.42it/s, loss=0.0046, v_num=3]Epoch 9:  10%|▉         | 250/2539 [01:43<15:44,  2.42it/s, loss=0.00314, v_num=3]Epoch 9:  10%|█         | 260/2539 [01:47<15:39,  2.43it/s, loss=0.00314, v_num=3]Epoch 9:  10%|█         | 260/2539 [01:47<15:39,  2.43it/s, loss=0.00187, v_num=3]Epoch 9:  11%|█         | 270/2539 [01:51<15:35,  2.43it/s, loss=0.00187, v_num=3]Epoch 9:  11%|█         | 270/2539 [01:51<15:35,  2.43it/s, loss=0.00289, v_num=3]Epoch 9:  11%|█         | 280/2539 [01:55<15:30,  2.43it/s, loss=0.00289, v_num=3]Epoch 9:  11%|█         | 280/2539 [01:55<15:30,  2.43it/s, loss=0.00284, v_num=3]Epoch 9:  11%|█▏        | 290/2539 [01:59<15:27,  2.42it/s, loss=0.00284, v_num=3]Epoch 9:  11%|█▏        | 290/2539 [01:59<15:27,  2.42it/s, loss=0.00486, v_num=3]Epoch 9:  12%|█▏        | 300/2539 [02:03<15:23,  2.43it/s, loss=0.00486, v_num=3]Epoch 9:  12%|█▏        | 300/2539 [02:03<15:23,  2.43it/s, loss=0.00641, v_num=3]Epoch 9:  12%|█▏        | 310/2539 [02:07<15:18,  2.43it/s, loss=0.00641, v_num=3]Epoch 9:  12%|█▏        | 310/2539 [02:07<15:18,  2.43it/s, loss=0.00429, v_num=3]Epoch 9:  13%|█▎        | 320/2539 [02:11<15:14,  2.43it/s, loss=0.00429, v_num=3]Epoch 9:  13%|█▎        | 320/2539 [02:11<15:14,  2.43it/s, loss=0.00502, v_num=3]Epoch 9:  13%|█▎        | 330/2539 [02:15<15:10,  2.43it/s, loss=0.00502, v_num=3]Epoch 9:  13%|█▎        | 330/2539 [02:15<15:10,  2.43it/s, loss=0.00474, v_num=3]Epoch 9:  13%|█▎        | 340/2539 [02:20<15:06,  2.43it/s, loss=0.00474, v_num=3]Epoch 9:  13%|█▎        | 340/2539 [02:20<15:06,  2.43it/s, loss=0.00286, v_num=3]Epoch 9:  14%|█▍        | 350/2539 [02:24<15:01,  2.43it/s, loss=0.00286, v_num=3]Epoch 9:  14%|█▍        | 350/2539 [02:24<15:01,  2.43it/s, loss=0.00282, v_num=3]Epoch 9:  14%|█▍        | 360/2539 [02:28<14:57,  2.43it/s, loss=0.00282, v_num=3]Epoch 9:  14%|█▍        | 360/2539 [02:28<14:57,  2.43it/s, loss=0.00306, v_num=3]Epoch 9:  15%|█▍        | 370/2539 [02:32<14:53,  2.43it/s, loss=0.00306, v_num=3]Epoch 9:  15%|█▍        | 370/2539 [02:32<14:53,  2.43it/s, loss=0.00272, v_num=3]Epoch 9:  15%|█▍        | 380/2539 [02:36<14:48,  2.43it/s, loss=0.00272, v_num=3]Epoch 9:  15%|█▍        | 380/2539 [02:36<14:49,  2.43it/s, loss=0.00213, v_num=3]Epoch 9:  15%|█▌        | 390/2539 [02:40<14:45,  2.43it/s, loss=0.00213, v_num=3]Epoch 9:  15%|█▌        | 390/2539 [02:40<14:45,  2.43it/s, loss=0.00263, v_num=3]Epoch 9:  16%|█▌        | 400/2539 [02:44<14:41,  2.43it/s, loss=0.00263, v_num=3]Epoch 9:  16%|█▌        | 400/2539 [02:44<14:41,  2.43it/s, loss=0.00293, v_num=3]Epoch 9:  16%|█▌        | 410/2539 [02:48<14:36,  2.43it/s, loss=0.00293, v_num=3]Epoch 9:  16%|█▌        | 410/2539 [02:48<14:36,  2.43it/s, loss=0.00277, v_num=3]Epoch 9:  17%|█▋        | 420/2539 [02:52<14:32,  2.43it/s, loss=0.00277, v_num=3]Epoch 9:  17%|█▋        | 420/2539 [02:52<14:32,  2.43it/s, loss=0.00261, v_num=3]Epoch 9:  17%|█▋        | 430/2539 [02:57<14:28,  2.43it/s, loss=0.00261, v_num=3]Epoch 9:  17%|█▋        | 430/2539 [02:57<14:28,  2.43it/s, loss=0.00329, v_num=3]Epoch 9:  17%|█▋        | 440/2539 [03:01<14:24,  2.43it/s, loss=0.00329, v_num=3]Epoch 9:  17%|█▋        | 440/2539 [03:01<14:24,  2.43it/s, loss=0.00405, v_num=3]Epoch 9:  18%|█▊        | 450/2539 [03:05<14:20,  2.43it/s, loss=0.00405, v_num=3]Epoch 9:  18%|█▊        | 450/2539 [03:05<14:20,  2.43it/s, loss=0.00612, v_num=3]Epoch 9:  18%|█▊        | 460/2539 [03:09<14:15,  2.43it/s, loss=0.00612, v_num=3]Epoch 9:  18%|█▊        | 460/2539 [03:09<14:15,  2.43it/s, loss=0.00644, v_num=3]Epoch 9:  19%|█▊        | 470/2539 [03:13<14:11,  2.43it/s, loss=0.00644, v_num=3]Epoch 9:  19%|█▊        | 470/2539 [03:13<14:11,  2.43it/s, loss=0.00563, v_num=3]Epoch 9:  19%|█▉        | 480/2539 [03:17<14:07,  2.43it/s, loss=0.00563, v_num=3]Epoch 9:  19%|█▉        | 480/2539 [03:17<14:07,  2.43it/s, loss=0.00579, v_num=3]Epoch 9:  19%|█▉        | 490/2539 [03:21<14:03,  2.43it/s, loss=0.00579, v_num=3]Epoch 9:  19%|█▉        | 490/2539 [03:21<14:03,  2.43it/s, loss=0.00552, v_num=3]Epoch 9:  20%|█▉        | 500/2539 [03:25<13:59,  2.43it/s, loss=0.00552, v_num=3]Epoch 9:  20%|█▉        | 500/2539 [03:25<13:59,  2.43it/s, loss=0.00458, v_num=3]Epoch 9:  20%|██        | 510/2539 [03:29<13:55,  2.43it/s, loss=0.00458, v_num=3]Epoch 9:  20%|██        | 510/2539 [03:29<13:55,  2.43it/s, loss=0.00378, v_num=3]Epoch 9:  20%|██        | 520/2539 [03:34<13:51,  2.43it/s, loss=0.00378, v_num=3]Epoch 9:  20%|██        | 520/2539 [03:34<13:51,  2.43it/s, loss=0.00358, v_num=3]Epoch 9:  21%|██        | 530/2539 [03:38<13:46,  2.43it/s, loss=0.00358, v_num=3]Epoch 9:  21%|██        | 530/2539 [03:38<13:46,  2.43it/s, loss=0.00291, v_num=3]Epoch 9:  21%|██▏       | 540/2539 [03:42<13:42,  2.43it/s, loss=0.00291, v_num=3]Epoch 9:  21%|██▏       | 540/2539 [03:42<13:42,  2.43it/s, loss=0.00396, v_num=3]Epoch 9:  22%|██▏       | 550/2539 [03:46<13:38,  2.43it/s, loss=0.00396, v_num=3]Epoch 9:  22%|██▏       | 550/2539 [03:46<13:38,  2.43it/s, loss=0.00384, v_num=3]Epoch 9:  22%|██▏       | 560/2539 [03:50<13:34,  2.43it/s, loss=0.00384, v_num=3]Epoch 9:  22%|██▏       | 560/2539 [03:50<13:34,  2.43it/s, loss=0.00503, v_num=3]Epoch 9:  22%|██▏       | 570/2539 [03:54<13:30,  2.43it/s, loss=0.00503, v_num=3]Epoch 9:  22%|██▏       | 570/2539 [03:54<13:30,  2.43it/s, loss=0.00521, v_num=3]Epoch 9:  23%|██▎       | 580/2539 [03:58<13:26,  2.43it/s, loss=0.00521, v_num=3]Epoch 9:  23%|██▎       | 580/2539 [03:58<13:26,  2.43it/s, loss=0.00384, v_num=3]Epoch 9:  23%|██▎       | 590/2539 [04:02<13:22,  2.43it/s, loss=0.00384, v_num=3]Epoch 9:  23%|██▎       | 590/2539 [04:02<13:22,  2.43it/s, loss=0.00341, v_num=3]Epoch 9:  24%|██▎       | 600/2539 [04:06<13:18,  2.43it/s, loss=0.00341, v_num=3]Epoch 9:  24%|██▎       | 600/2539 [04:06<13:18,  2.43it/s, loss=0.00356, v_num=3]Epoch 9:  24%|██▍       | 610/2539 [04:11<13:13,  2.43it/s, loss=0.00356, v_num=3]Epoch 9:  24%|██▍       | 610/2539 [04:11<13:13,  2.43it/s, loss=0.00329, v_num=3]Epoch 9:  24%|██▍       | 620/2539 [04:15<13:09,  2.43it/s, loss=0.00329, v_num=3]Epoch 9:  24%|██▍       | 620/2539 [04:15<13:09,  2.43it/s, loss=0.00405, v_num=3]Epoch 9:  25%|██▍       | 630/2539 [04:19<13:05,  2.43it/s, loss=0.00405, v_num=3]Epoch 9:  25%|██▍       | 630/2539 [04:19<13:05,  2.43it/s, loss=0.00832, v_num=3]Epoch 9:  25%|██▌       | 640/2539 [04:23<13:01,  2.43it/s, loss=0.00832, v_num=3]Epoch 9:  25%|██▌       | 640/2539 [04:23<13:01,  2.43it/s, loss=0.00923, v_num=3]Epoch 9:  26%|██▌       | 650/2539 [04:27<12:57,  2.43it/s, loss=0.00923, v_num=3]Epoch 9:  26%|██▌       | 650/2539 [04:27<12:57,  2.43it/s, loss=0.00569, v_num=3]Epoch 9:  26%|██▌       | 660/2539 [04:31<12:53,  2.43it/s, loss=0.00569, v_num=3]Epoch 9:  26%|██▌       | 660/2539 [04:31<12:53,  2.43it/s, loss=0.0061, v_num=3] Epoch 9:  26%|██▋       | 670/2539 [04:35<12:48,  2.43it/s, loss=0.0061, v_num=3]Epoch 9:  26%|██▋       | 670/2539 [04:35<12:48,  2.43it/s, loss=0.00536, v_num=3]Epoch 9:  27%|██▋       | 680/2539 [04:39<12:44,  2.43it/s, loss=0.00536, v_num=3]Epoch 9:  27%|██▋       | 680/2539 [04:39<12:44,  2.43it/s, loss=0.00157, v_num=3]Epoch 9:  27%|██▋       | 690/2539 [04:43<12:40,  2.43it/s, loss=0.00157, v_num=3]Epoch 9:  27%|██▋       | 690/2539 [04:43<12:41,  2.43it/s, loss=0.0045, v_num=3] Epoch 9:  28%|██▊       | 700/2539 [04:48<12:36,  2.43it/s, loss=0.0045, v_num=3]Epoch 9:  28%|██▊       | 700/2539 [04:48<12:36,  2.43it/s, loss=0.0054, v_num=3]Epoch 9:  28%|██▊       | 710/2539 [04:52<12:32,  2.43it/s, loss=0.0054, v_num=3]Epoch 9:  28%|██▊       | 710/2539 [04:52<12:32,  2.43it/s, loss=0.00473, v_num=3]Epoch 9:  28%|██▊       | 720/2539 [04:56<12:28,  2.43it/s, loss=0.00473, v_num=3]Epoch 9:  28%|██▊       | 720/2539 [04:56<12:28,  2.43it/s, loss=0.00587, v_num=3]Epoch 9:  29%|██▉       | 730/2539 [05:00<12:24,  2.43it/s, loss=0.00587, v_num=3]Epoch 9:  29%|██▉       | 730/2539 [05:00<12:24,  2.43it/s, loss=0.00363, v_num=3]Epoch 9:  29%|██▉       | 740/2539 [05:04<12:20,  2.43it/s, loss=0.00363, v_num=3]Epoch 9:  29%|██▉       | 740/2539 [05:04<12:20,  2.43it/s, loss=0.00259, v_num=3]Epoch 9:  30%|██▉       | 750/2539 [05:08<12:16,  2.43it/s, loss=0.00259, v_num=3]Epoch 9:  30%|██▉       | 750/2539 [05:08<12:16,  2.43it/s, loss=0.00263, v_num=3]Epoch 9:  30%|██▉       | 760/2539 [05:12<12:11,  2.43it/s, loss=0.00263, v_num=3]Epoch 9:  30%|██▉       | 760/2539 [05:12<12:11,  2.43it/s, loss=0.00244, v_num=3]Epoch 9:  30%|███       | 770/2539 [05:16<12:07,  2.43it/s, loss=0.00244, v_num=3]Epoch 9:  30%|███       | 770/2539 [05:16<12:07,  2.43it/s, loss=0.00417, v_num=3]Epoch 9:  31%|███       | 780/2539 [05:20<12:03,  2.43it/s, loss=0.00417, v_num=3]Epoch 9:  31%|███       | 780/2539 [05:20<12:03,  2.43it/s, loss=0.00547, v_num=3]Epoch 9:  31%|███       | 790/2539 [05:25<11:59,  2.43it/s, loss=0.00547, v_num=3]Epoch 9:  31%|███       | 790/2539 [05:25<11:59,  2.43it/s, loss=0.00613, v_num=3]Epoch 9:  32%|███▏      | 800/2539 [05:29<11:55,  2.43it/s, loss=0.00613, v_num=3]Epoch 9:  32%|███▏      | 800/2539 [05:29<11:55,  2.43it/s, loss=0.00499, v_num=3]Epoch 9:  32%|███▏      | 810/2539 [05:33<11:51,  2.43it/s, loss=0.00499, v_num=3]Epoch 9:  32%|███▏      | 810/2539 [05:33<11:51,  2.43it/s, loss=0.0032, v_num=3] Epoch 9:  32%|███▏      | 820/2539 [05:37<11:47,  2.43it/s, loss=0.0032, v_num=3]Epoch 9:  32%|███▏      | 820/2539 [05:37<11:47,  2.43it/s, loss=0.00521, v_num=3]Epoch 9:  33%|███▎      | 830/2539 [05:41<11:43,  2.43it/s, loss=0.00521, v_num=3]Epoch 9:  33%|███▎      | 830/2539 [05:41<11:43,  2.43it/s, loss=0.00434, v_num=3]Epoch 9:  33%|███▎      | 840/2539 [05:45<11:39,  2.43it/s, loss=0.00434, v_num=3]Epoch 9:  33%|███▎      | 840/2539 [05:45<11:39,  2.43it/s, loss=0.0046, v_num=3] Epoch 9:  33%|███▎      | 850/2539 [05:49<11:34,  2.43it/s, loss=0.0046, v_num=3]Epoch 9:  33%|███▎      | 850/2539 [05:49<11:34,  2.43it/s, loss=0.00674, v_num=3]Epoch 9:  34%|███▍      | 860/2539 [05:53<11:30,  2.43it/s, loss=0.00674, v_num=3]Epoch 9:  34%|███▍      | 860/2539 [05:53<11:30,  2.43it/s, loss=0.00549, v_num=3]Epoch 9:  34%|███▍      | 870/2539 [05:57<11:26,  2.43it/s, loss=0.00549, v_num=3]Epoch 9:  34%|███▍      | 870/2539 [05:57<11:26,  2.43it/s, loss=0.00596, v_num=3]Epoch 9:  35%|███▍      | 880/2539 [06:02<11:22,  2.43it/s, loss=0.00596, v_num=3]Epoch 9:  35%|███▍      | 880/2539 [06:02<11:22,  2.43it/s, loss=0.0061, v_num=3] Epoch 9:  35%|███▌      | 890/2539 [06:06<11:18,  2.43it/s, loss=0.0061, v_num=3]Epoch 9:  35%|███▌      | 890/2539 [06:06<11:18,  2.43it/s, loss=0.00603, v_num=3]Epoch 9:  35%|███▌      | 900/2539 [06:10<11:14,  2.43it/s, loss=0.00603, v_num=3]Epoch 9:  35%|███▌      | 900/2539 [06:10<11:14,  2.43it/s, loss=0.00559, v_num=3]Epoch 9:  36%|███▌      | 910/2539 [06:14<11:10,  2.43it/s, loss=0.00559, v_num=3]Epoch 9:  36%|███▌      | 910/2539 [06:14<11:10,  2.43it/s, loss=0.00693, v_num=3]Epoch 9:  36%|███▌      | 920/2539 [06:18<11:06,  2.43it/s, loss=0.00693, v_num=3]Epoch 9:  36%|███▌      | 920/2539 [06:18<11:06,  2.43it/s, loss=0.00562, v_num=3]Epoch 9:  37%|███▋      | 930/2539 [06:22<11:02,  2.43it/s, loss=0.00562, v_num=3]Epoch 9:  37%|███▋      | 930/2539 [06:22<11:02,  2.43it/s, loss=0.00329, v_num=3]Epoch 9:  37%|███▋      | 940/2539 [06:26<10:57,  2.43it/s, loss=0.00329, v_num=3]Epoch 9:  37%|███▋      | 940/2539 [06:26<10:57,  2.43it/s, loss=0.0053, v_num=3] Epoch 9:  37%|███▋      | 950/2539 [06:30<10:53,  2.43it/s, loss=0.0053, v_num=3]Epoch 9:  37%|███▋      | 950/2539 [06:30<10:53,  2.43it/s, loss=0.00483, v_num=3]Epoch 9:  38%|███▊      | 960/2539 [06:34<10:49,  2.43it/s, loss=0.00483, v_num=3]Epoch 9:  38%|███▊      | 960/2539 [06:34<10:49,  2.43it/s, loss=0.00368, v_num=3]Epoch 9:  38%|███▊      | 970/2539 [06:39<10:45,  2.43it/s, loss=0.00368, v_num=3]Epoch 9:  38%|███▊      | 970/2539 [06:39<10:45,  2.43it/s, loss=0.00308, v_num=3]Epoch 9:  39%|███▊      | 980/2539 [06:43<10:41,  2.43it/s, loss=0.00308, v_num=3]Epoch 9:  39%|███▊      | 980/2539 [06:43<10:41,  2.43it/s, loss=0.00375, v_num=3]Epoch 9:  39%|███▉      | 990/2539 [06:47<10:37,  2.43it/s, loss=0.00375, v_num=3]Epoch 9:  39%|███▉      | 990/2539 [06:47<10:37,  2.43it/s, loss=0.00492, v_num=3]Epoch 9:  39%|███▉      | 1000/2539 [06:51<10:33,  2.43it/s, loss=0.00492, v_num=3]Epoch 9:  39%|███▉      | 1000/2539 [06:51<10:33,  2.43it/s, loss=0.00452, v_num=3]Epoch 9:  40%|███▉      | 1010/2539 [06:55<10:29,  2.43it/s, loss=0.00452, v_num=3]Epoch 9:  40%|███▉      | 1010/2539 [06:55<10:29,  2.43it/s, loss=0.00424, v_num=3]Epoch 9:  40%|████      | 1020/2539 [06:59<10:24,  2.43it/s, loss=0.00424, v_num=3]Epoch 9:  40%|████      | 1020/2539 [06:59<10:25,  2.43it/s, loss=0.00585, v_num=3]Epoch 9:  41%|████      | 1030/2539 [07:03<10:20,  2.43it/s, loss=0.00585, v_num=3]Epoch 9:  41%|████      | 1030/2539 [07:03<10:20,  2.43it/s, loss=0.0057, v_num=3] Epoch 9:  41%|████      | 1040/2539 [07:07<10:16,  2.43it/s, loss=0.0057, v_num=3]Epoch 9:  41%|████      | 1040/2539 [07:07<10:16,  2.43it/s, loss=0.00391, v_num=3]Epoch 9:  41%|████▏     | 1050/2539 [07:12<10:12,  2.43it/s, loss=0.00391, v_num=3]Epoch 9:  41%|████▏     | 1050/2539 [07:12<10:12,  2.43it/s, loss=0.00426, v_num=3]Epoch 9:  42%|████▏     | 1060/2539 [07:16<10:08,  2.43it/s, loss=0.00426, v_num=3]Epoch 9:  42%|████▏     | 1060/2539 [07:16<10:08,  2.43it/s, loss=0.00534, v_num=3]Epoch 9:  42%|████▏     | 1070/2539 [07:20<10:04,  2.43it/s, loss=0.00534, v_num=3]Epoch 9:  42%|████▏     | 1070/2539 [07:20<10:04,  2.43it/s, loss=0.00453, v_num=3]Epoch 9:  43%|████▎     | 1080/2539 [07:24<10:00,  2.43it/s, loss=0.00453, v_num=3]Epoch 9:  43%|████▎     | 1080/2539 [07:24<10:00,  2.43it/s, loss=0.00379, v_num=3]Epoch 9:  43%|████▎     | 1090/2539 [07:28<09:56,  2.43it/s, loss=0.00379, v_num=3]Epoch 9:  43%|████▎     | 1090/2539 [07:28<09:56,  2.43it/s, loss=0.00451, v_num=3]Epoch 9:  43%|████▎     | 1100/2539 [07:32<09:52,  2.43it/s, loss=0.00451, v_num=3]Epoch 9:  43%|████▎     | 1100/2539 [07:32<09:52,  2.43it/s, loss=0.00381, v_num=3]Epoch 9:  44%|████▎     | 1110/2539 [07:36<09:47,  2.43it/s, loss=0.00381, v_num=3]Epoch 9:  44%|████▎     | 1110/2539 [07:36<09:47,  2.43it/s, loss=0.00436, v_num=3]Epoch 9:  44%|████▍     | 1120/2539 [07:40<09:43,  2.43it/s, loss=0.00436, v_num=3]Epoch 9:  44%|████▍     | 1120/2539 [07:40<09:43,  2.43it/s, loss=0.00481, v_num=3]Epoch 9:  45%|████▍     | 1130/2539 [07:44<09:39,  2.43it/s, loss=0.00481, v_num=3]Epoch 9:  45%|████▍     | 1130/2539 [07:44<09:39,  2.43it/s, loss=0.00336, v_num=3]Epoch 9:  45%|████▍     | 1140/2539 [07:49<09:35,  2.43it/s, loss=0.00336, v_num=3]Epoch 9:  45%|████▍     | 1140/2539 [07:49<09:35,  2.43it/s, loss=0.00363, v_num=3]Epoch 9:  45%|████▌     | 1150/2539 [07:53<09:31,  2.43it/s, loss=0.00363, v_num=3]Epoch 9:  45%|████▌     | 1150/2539 [07:53<09:31,  2.43it/s, loss=0.00408, v_num=3]Epoch 9:  46%|████▌     | 1160/2539 [07:57<09:27,  2.43it/s, loss=0.00408, v_num=3]Epoch 9:  46%|████▌     | 1160/2539 [07:57<09:27,  2.43it/s, loss=0.00518, v_num=3]Epoch 9:  46%|████▌     | 1170/2539 [08:01<09:23,  2.43it/s, loss=0.00518, v_num=3]Epoch 9:  46%|████▌     | 1170/2539 [08:01<09:23,  2.43it/s, loss=0.00699, v_num=3]Epoch 9:  46%|████▋     | 1180/2539 [08:05<09:19,  2.43it/s, loss=0.00699, v_num=3]Epoch 9:  46%|████▋     | 1180/2539 [08:05<09:19,  2.43it/s, loss=0.00606, v_num=3]Epoch 9:  47%|████▋     | 1190/2539 [08:09<09:15,  2.43it/s, loss=0.00606, v_num=3]Epoch 9:  47%|████▋     | 1190/2539 [08:09<09:15,  2.43it/s, loss=0.00403, v_num=3]Epoch 9:  47%|████▋     | 1200/2539 [08:13<09:10,  2.43it/s, loss=0.00403, v_num=3]Epoch 9:  47%|████▋     | 1200/2539 [08:13<09:10,  2.43it/s, loss=0.00475, v_num=3]Epoch 9:  48%|████▊     | 1210/2539 [08:17<09:06,  2.43it/s, loss=0.00475, v_num=3]Epoch 9:  48%|████▊     | 1210/2539 [08:17<09:06,  2.43it/s, loss=0.00418, v_num=3]Epoch 9:  48%|████▊     | 1220/2539 [08:21<09:02,  2.43it/s, loss=0.00418, v_num=3]Epoch 9:  48%|████▊     | 1220/2539 [08:21<09:02,  2.43it/s, loss=0.00179, v_num=3]Epoch 9:  48%|████▊     | 1230/2539 [08:25<08:58,  2.43it/s, loss=0.00179, v_num=3]Epoch 9:  48%|████▊     | 1230/2539 [08:26<08:58,  2.43it/s, loss=0.00345, v_num=3]Epoch 9:  49%|████▉     | 1240/2539 [08:30<08:54,  2.43it/s, loss=0.00345, v_num=3]Epoch 9:  49%|████▉     | 1240/2539 [08:30<08:54,  2.43it/s, loss=0.00394, v_num=3]Epoch 9:  49%|████▉     | 1250/2539 [08:34<08:50,  2.43it/s, loss=0.00394, v_num=3]Epoch 9:  49%|████▉     | 1250/2539 [08:34<08:50,  2.43it/s, loss=0.00192, v_num=3]Epoch 9:  50%|████▉     | 1260/2539 [08:38<08:46,  2.43it/s, loss=0.00192, v_num=3]Epoch 9:  50%|████▉     | 1260/2539 [08:38<08:46,  2.43it/s, loss=0.00233, v_num=3]Epoch 9:  50%|█████     | 1270/2539 [08:42<08:41,  2.43it/s, loss=0.00233, v_num=3]Epoch 9:  50%|█████     | 1270/2539 [08:42<08:42,  2.43it/s, loss=0.00229, v_num=3]Epoch 9:  50%|█████     | 1280/2539 [08:46<08:37,  2.43it/s, loss=0.00229, v_num=3]Epoch 9:  50%|█████     | 1280/2539 [08:46<08:37,  2.43it/s, loss=0.0037, v_num=3] Epoch 9:  51%|█████     | 1290/2539 [08:50<08:33,  2.43it/s, loss=0.0037, v_num=3]Epoch 9:  51%|█████     | 1290/2539 [08:50<08:33,  2.43it/s, loss=0.00513, v_num=3]Epoch 9:  51%|█████     | 1300/2539 [08:54<08:29,  2.43it/s, loss=0.00513, v_num=3]Epoch 9:  51%|█████     | 1300/2539 [08:54<08:29,  2.43it/s, loss=0.00461, v_num=3]Epoch 9:  52%|█████▏    | 1310/2539 [08:58<08:25,  2.43it/s, loss=0.00461, v_num=3]Epoch 9:  52%|█████▏    | 1310/2539 [08:58<08:25,  2.43it/s, loss=0.00384, v_num=3]Epoch 9:  52%|█████▏    | 1320/2539 [09:03<08:21,  2.43it/s, loss=0.00384, v_num=3]Epoch 9:  52%|█████▏    | 1320/2539 [09:03<08:21,  2.43it/s, loss=0.00285, v_num=3]Epoch 9:  52%|█████▏    | 1330/2539 [09:07<08:17,  2.43it/s, loss=0.00285, v_num=3]Epoch 9:  52%|█████▏    | 1330/2539 [09:07<08:17,  2.43it/s, loss=0.00353, v_num=3]Epoch 9:  53%|█████▎    | 1340/2539 [09:11<08:13,  2.43it/s, loss=0.00353, v_num=3]Epoch 9:  53%|█████▎    | 1340/2539 [09:11<08:13,  2.43it/s, loss=0.00728, v_num=3]Epoch 9:  53%|█████▎    | 1350/2539 [09:15<08:09,  2.43it/s, loss=0.00728, v_num=3]Epoch 9:  53%|█████▎    | 1350/2539 [09:15<08:09,  2.43it/s, loss=0.00637, v_num=3]Epoch 9:  54%|█████▎    | 1360/2539 [09:19<08:04,  2.43it/s, loss=0.00637, v_num=3]Epoch 9:  54%|█████▎    | 1360/2539 [09:19<08:04,  2.43it/s, loss=0.00347, v_num=3]Epoch 9:  54%|█████▍    | 1370/2539 [09:23<08:00,  2.43it/s, loss=0.00347, v_num=3]Epoch 9:  54%|█████▍    | 1370/2539 [09:23<08:00,  2.43it/s, loss=0.00397, v_num=3]Epoch 9:  54%|█████▍    | 1380/2539 [09:27<07:56,  2.43it/s, loss=0.00397, v_num=3]Epoch 9:  54%|█████▍    | 1380/2539 [09:27<07:56,  2.43it/s, loss=0.00311, v_num=3]Epoch 9:  55%|█████▍    | 1390/2539 [09:31<07:52,  2.43it/s, loss=0.00311, v_num=3]Epoch 9:  55%|█████▍    | 1390/2539 [09:31<07:52,  2.43it/s, loss=0.00272, v_num=3]Epoch 9:  55%|█████▌    | 1400/2539 [09:35<07:48,  2.43it/s, loss=0.00272, v_num=3]Epoch 9:  55%|█████▌    | 1400/2539 [09:35<07:48,  2.43it/s, loss=0.00227, v_num=3]Epoch 9:  56%|█████▌    | 1410/2539 [09:40<07:44,  2.43it/s, loss=0.00227, v_num=3]Epoch 9:  56%|█████▌    | 1410/2539 [09:40<07:44,  2.43it/s, loss=0.00312, v_num=3]Epoch 9:  56%|█████▌    | 1420/2539 [09:44<07:40,  2.43it/s, loss=0.00312, v_num=3]Epoch 9:  56%|█████▌    | 1420/2539 [09:44<07:40,  2.43it/s, loss=0.00316, v_num=3]Epoch 9:  56%|█████▋    | 1430/2539 [09:48<07:36,  2.43it/s, loss=0.00316, v_num=3]Epoch 9:  56%|█████▋    | 1430/2539 [09:48<07:36,  2.43it/s, loss=0.00265, v_num=3]Epoch 9:  57%|█████▋    | 1440/2539 [09:52<07:32,  2.43it/s, loss=0.00265, v_num=3]Epoch 9:  57%|█████▋    | 1440/2539 [09:52<07:32,  2.43it/s, loss=0.00431, v_num=3]Epoch 9:  57%|█████▋    | 1450/2539 [09:56<07:27,  2.43it/s, loss=0.00431, v_num=3]Epoch 9:  57%|█████▋    | 1450/2539 [09:56<07:27,  2.43it/s, loss=0.00359, v_num=3]Epoch 9:  58%|█████▊    | 1460/2539 [10:00<07:23,  2.43it/s, loss=0.00359, v_num=3]Epoch 9:  58%|█████▊    | 1460/2539 [10:00<07:23,  2.43it/s, loss=0.00149, v_num=3]Epoch 9:  58%|█████▊    | 1470/2539 [10:04<07:19,  2.43it/s, loss=0.00149, v_num=3]Epoch 9:  58%|█████▊    | 1470/2539 [10:04<07:19,  2.43it/s, loss=0.00257, v_num=3]Epoch 9:  58%|█████▊    | 1480/2539 [10:08<07:15,  2.43it/s, loss=0.00257, v_num=3]Epoch 9:  58%|█████▊    | 1480/2539 [10:08<07:15,  2.43it/s, loss=0.00309, v_num=3]Epoch 9:  59%|█████▊    | 1490/2539 [10:12<07:11,  2.43it/s, loss=0.00309, v_num=3]Epoch 9:  59%|█████▊    | 1490/2539 [10:12<07:11,  2.43it/s, loss=0.00335, v_num=3]Epoch 9:  59%|█████▉    | 1500/2539 [10:17<07:07,  2.43it/s, loss=0.00335, v_num=3]Epoch 9:  59%|█████▉    | 1500/2539 [10:17<07:07,  2.43it/s, loss=0.00417, v_num=3]Epoch 9:  59%|█████▉    | 1510/2539 [10:21<07:03,  2.43it/s, loss=0.00417, v_num=3]Epoch 9:  59%|█████▉    | 1510/2539 [10:21<07:03,  2.43it/s, loss=0.0047, v_num=3] Epoch 9:  60%|█████▉    | 1520/2539 [10:25<06:59,  2.43it/s, loss=0.0047, v_num=3]Epoch 9:  60%|█████▉    | 1520/2539 [10:25<06:59,  2.43it/s, loss=0.00497, v_num=3]Epoch 9:  60%|██████    | 1530/2539 [10:29<06:55,  2.43it/s, loss=0.00497, v_num=3]Epoch 9:  60%|██████    | 1530/2539 [10:29<06:55,  2.43it/s, loss=0.00352, v_num=3]Epoch 9:  61%|██████    | 1540/2539 [10:33<06:50,  2.43it/s, loss=0.00352, v_num=3]Epoch 9:  61%|██████    | 1540/2539 [10:33<06:50,  2.43it/s, loss=0.00293, v_num=3]Epoch 9:  61%|██████    | 1550/2539 [10:37<06:46,  2.43it/s, loss=0.00293, v_num=3]Epoch 9:  61%|██████    | 1550/2539 [10:37<06:46,  2.43it/s, loss=0.00373, v_num=3]Epoch 9:  61%|██████▏   | 1560/2539 [10:41<06:42,  2.43it/s, loss=0.00373, v_num=3]Epoch 9:  61%|██████▏   | 1560/2539 [10:41<06:42,  2.43it/s, loss=0.00367, v_num=3]Epoch 9:  62%|██████▏   | 1570/2539 [10:45<06:38,  2.43it/s, loss=0.00367, v_num=3]Epoch 9:  62%|██████▏   | 1570/2539 [10:45<06:38,  2.43it/s, loss=0.00276, v_num=3]Epoch 9:  62%|██████▏   | 1580/2539 [10:49<06:34,  2.43it/s, loss=0.00276, v_num=3]Epoch 9:  62%|██████▏   | 1580/2539 [10:49<06:34,  2.43it/s, loss=0.00415, v_num=3]Epoch 9:  63%|██████▎   | 1590/2539 [10:54<06:30,  2.43it/s, loss=0.00415, v_num=3]Epoch 9:  63%|██████▎   | 1590/2539 [10:54<06:30,  2.43it/s, loss=0.00525, v_num=3]Epoch 9:  63%|██████▎   | 1600/2539 [10:58<06:26,  2.43it/s, loss=0.00525, v_num=3]Epoch 9:  63%|██████▎   | 1600/2539 [10:58<06:26,  2.43it/s, loss=0.00471, v_num=3]Epoch 9:  63%|██████▎   | 1610/2539 [11:02<06:22,  2.43it/s, loss=0.00471, v_num=3]Epoch 9:  63%|██████▎   | 1610/2539 [11:02<06:22,  2.43it/s, loss=0.00408, v_num=3]Epoch 9:  64%|██████▍   | 1620/2539 [11:06<06:17,  2.43it/s, loss=0.00408, v_num=3]Epoch 9:  64%|██████▍   | 1620/2539 [11:06<06:17,  2.43it/s, loss=0.00624, v_num=3]Epoch 9:  64%|██████▍   | 1630/2539 [11:10<06:13,  2.43it/s, loss=0.00624, v_num=3]Epoch 9:  64%|██████▍   | 1630/2539 [11:10<06:13,  2.43it/s, loss=0.0082, v_num=3] Epoch 9:  65%|██████▍   | 1640/2539 [11:14<06:09,  2.43it/s, loss=0.0082, v_num=3]Epoch 9:  65%|██████▍   | 1640/2539 [11:14<06:09,  2.43it/s, loss=0.00573, v_num=3]Epoch 9:  65%|██████▍   | 1650/2539 [11:18<06:05,  2.43it/s, loss=0.00573, v_num=3]Epoch 9:  65%|██████▍   | 1650/2539 [11:18<06:05,  2.43it/s, loss=0.004, v_num=3]  Epoch 9:  65%|██████▌   | 1660/2539 [11:22<06:01,  2.43it/s, loss=0.004, v_num=3]Epoch 9:  65%|██████▌   | 1660/2539 [11:22<06:01,  2.43it/s, loss=0.00305, v_num=3]Epoch 9:  66%|██████▌   | 1670/2539 [11:26<05:57,  2.43it/s, loss=0.00305, v_num=3]Epoch 9:  66%|██████▌   | 1670/2539 [11:26<05:57,  2.43it/s, loss=0.00298, v_num=3]Epoch 9:  66%|██████▌   | 1680/2539 [11:30<05:53,  2.43it/s, loss=0.00298, v_num=3]Epoch 9:  66%|██████▌   | 1680/2539 [11:30<05:53,  2.43it/s, loss=0.00417, v_num=3]Epoch 9:  67%|██████▋   | 1690/2539 [11:35<05:49,  2.43it/s, loss=0.00417, v_num=3]Epoch 9:  67%|██████▋   | 1690/2539 [11:35<05:49,  2.43it/s, loss=0.00357, v_num=3]Epoch 9:  67%|██████▋   | 1700/2539 [11:39<05:45,  2.43it/s, loss=0.00357, v_num=3]Epoch 9:  67%|██████▋   | 1700/2539 [11:39<05:45,  2.43it/s, loss=0.00442, v_num=3]Epoch 9:  67%|██████▋   | 1710/2539 [11:43<05:40,  2.43it/s, loss=0.00442, v_num=3]Epoch 9:  67%|██████▋   | 1710/2539 [11:43<05:40,  2.43it/s, loss=0.00395, v_num=3]Epoch 9:  68%|██████▊   | 1720/2539 [11:47<05:36,  2.43it/s, loss=0.00395, v_num=3]Epoch 9:  68%|██████▊   | 1720/2539 [11:47<05:36,  2.43it/s, loss=0.00465, v_num=3]Epoch 9:  68%|██████▊   | 1730/2539 [11:51<05:32,  2.43it/s, loss=0.00465, v_num=3]Epoch 9:  68%|██████▊   | 1730/2539 [11:51<05:32,  2.43it/s, loss=0.00582, v_num=3]Epoch 9:  69%|██████▊   | 1740/2539 [11:55<05:28,  2.43it/s, loss=0.00582, v_num=3]Epoch 9:  69%|██████▊   | 1740/2539 [11:55<05:28,  2.43it/s, loss=0.0037, v_num=3] Epoch 9:  69%|██████▉   | 1750/2539 [11:59<05:24,  2.43it/s, loss=0.0037, v_num=3]Epoch 9:  69%|██████▉   | 1750/2539 [11:59<05:24,  2.43it/s, loss=0.00385, v_num=3]Epoch 9:  69%|██████▉   | 1760/2539 [12:03<05:20,  2.43it/s, loss=0.00385, v_num=3]Epoch 9:  69%|██████▉   | 1760/2539 [12:03<05:20,  2.43it/s, loss=0.00386, v_num=3]Epoch 9:  70%|██████▉   | 1770/2539 [12:07<05:16,  2.43it/s, loss=0.00386, v_num=3]Epoch 9:  70%|██████▉   | 1770/2539 [12:07<05:16,  2.43it/s, loss=0.00254, v_num=3]Epoch 9:  70%|███████   | 1780/2539 [12:11<05:12,  2.43it/s, loss=0.00254, v_num=3]Epoch 9:  70%|███████   | 1780/2539 [12:12<05:12,  2.43it/s, loss=0.00333, v_num=3]Epoch 9:  71%|███████   | 1790/2539 [12:16<05:08,  2.43it/s, loss=0.00333, v_num=3]Epoch 9:  71%|███████   | 1790/2539 [12:16<05:08,  2.43it/s, loss=0.00536, v_num=3]Epoch 9:  71%|███████   | 1800/2539 [12:20<05:03,  2.43it/s, loss=0.00536, v_num=3]Epoch 9:  71%|███████   | 1800/2539 [12:20<05:03,  2.43it/s, loss=0.00481, v_num=3]Epoch 9:  71%|███████▏  | 1810/2539 [12:24<04:59,  2.43it/s, loss=0.00481, v_num=3]Epoch 9:  71%|███████▏  | 1810/2539 [12:24<04:59,  2.43it/s, loss=0.00392, v_num=3]Epoch 9:  72%|███████▏  | 1820/2539 [12:28<04:55,  2.43it/s, loss=0.00392, v_num=3]Epoch 9:  72%|███████▏  | 1820/2539 [12:28<04:55,  2.43it/s, loss=0.00314, v_num=3]Epoch 9:  72%|███████▏  | 1830/2539 [12:32<04:51,  2.43it/s, loss=0.00314, v_num=3]Epoch 9:  72%|███████▏  | 1830/2539 [12:32<04:51,  2.43it/s, loss=0.00467, v_num=3]Epoch 9:  72%|███████▏  | 1840/2539 [12:36<04:47,  2.43it/s, loss=0.00467, v_num=3]Epoch 9:  72%|███████▏  | 1840/2539 [12:36<04:47,  2.43it/s, loss=0.00472, v_num=3]Epoch 9:  73%|███████▎  | 1850/2539 [12:40<04:43,  2.43it/s, loss=0.00472, v_num=3]Epoch 9:  73%|███████▎  | 1850/2539 [12:40<04:43,  2.43it/s, loss=0.00265, v_num=3]Epoch 9:  73%|███████▎  | 1860/2539 [12:44<04:39,  2.43it/s, loss=0.00265, v_num=3]Epoch 9:  73%|███████▎  | 1860/2539 [12:44<04:39,  2.43it/s, loss=0.00185, v_num=3]Epoch 9:  74%|███████▎  | 1870/2539 [12:48<04:35,  2.43it/s, loss=0.00185, v_num=3]Epoch 9:  74%|███████▎  | 1870/2539 [12:49<04:35,  2.43it/s, loss=0.00247, v_num=3]Epoch 9:  74%|███████▍  | 1880/2539 [12:53<04:30,  2.43it/s, loss=0.00247, v_num=3]Epoch 9:  74%|███████▍  | 1880/2539 [12:53<04:30,  2.43it/s, loss=0.00405, v_num=3]Epoch 9:  74%|███████▍  | 1890/2539 [12:57<04:26,  2.43it/s, loss=0.00405, v_num=3]Epoch 9:  74%|███████▍  | 1890/2539 [12:57<04:26,  2.43it/s, loss=0.00476, v_num=3]Epoch 9:  75%|███████▍  | 1900/2539 [13:01<04:22,  2.43it/s, loss=0.00476, v_num=3]Epoch 9:  75%|███████▍  | 1900/2539 [13:01<04:22,  2.43it/s, loss=0.00533, v_num=3]Epoch 9:  75%|███████▌  | 1910/2539 [13:05<04:18,  2.43it/s, loss=0.00533, v_num=3]Epoch 9:  75%|███████▌  | 1910/2539 [13:05<04:18,  2.43it/s, loss=0.00466, v_num=3]Epoch 9:  76%|███████▌  | 1920/2539 [13:09<04:14,  2.43it/s, loss=0.00466, v_num=3]Epoch 9:  76%|███████▌  | 1920/2539 [13:09<04:14,  2.43it/s, loss=0.00478, v_num=3]Epoch 9:  76%|███████▌  | 1930/2539 [13:13<04:10,  2.43it/s, loss=0.00478, v_num=3]Epoch 9:  76%|███████▌  | 1930/2539 [13:13<04:10,  2.43it/s, loss=0.00511, v_num=3]Epoch 9:  76%|███████▋  | 1940/2539 [13:17<04:06,  2.43it/s, loss=0.00511, v_num=3]Epoch 9:  76%|███████▋  | 1940/2539 [13:17<04:06,  2.43it/s, loss=0.00356, v_num=3]Epoch 9:  77%|███████▋  | 1950/2539 [13:21<04:02,  2.43it/s, loss=0.00356, v_num=3]Epoch 9:  77%|███████▋  | 1950/2539 [13:21<04:02,  2.43it/s, loss=0.00321, v_num=3]Epoch 9:  77%|███████▋  | 1960/2539 [13:26<03:58,  2.43it/s, loss=0.00321, v_num=3]Epoch 9:  77%|███████▋  | 1960/2539 [13:26<03:58,  2.43it/s, loss=0.00292, v_num=3]Epoch 9:  78%|███████▊  | 1970/2539 [13:30<03:53,  2.43it/s, loss=0.00292, v_num=3]Epoch 9:  78%|███████▊  | 1970/2539 [13:30<03:54,  2.43it/s, loss=0.00152, v_num=3]Epoch 9:  78%|███████▊  | 1980/2539 [13:34<03:49,  2.43it/s, loss=0.00152, v_num=3]Epoch 9:  78%|███████▊  | 1980/2539 [13:34<03:49,  2.43it/s, loss=0.00184, v_num=3]Epoch 9:  78%|███████▊  | 1990/2539 [13:38<03:45,  2.43it/s, loss=0.00184, v_num=3]Epoch 9:  78%|███████▊  | 1990/2539 [13:38<03:45,  2.43it/s, loss=0.00388, v_num=3]Epoch 9:  79%|███████▉  | 2000/2539 [13:42<03:41,  2.43it/s, loss=0.00388, v_num=3]Epoch 9:  79%|███████▉  | 2000/2539 [13:42<03:41,  2.43it/s, loss=0.00535, v_num=3]Epoch 9:  79%|███████▉  | 2010/2539 [13:46<03:37,  2.43it/s, loss=0.00535, v_num=3]Epoch 9:  79%|███████▉  | 2010/2539 [13:46<03:37,  2.43it/s, loss=0.00405, v_num=3]Epoch 9:  80%|███████▉  | 2020/2539 [13:50<03:33,  2.43it/s, loss=0.00405, v_num=3]Epoch 9:  80%|███████▉  | 2020/2539 [13:50<03:33,  2.43it/s, loss=0.00287, v_num=3]Epoch 9:  80%|███████▉  | 2030/2539 [13:54<03:29,  2.43it/s, loss=0.00287, v_num=3]Epoch 9:  80%|███████▉  | 2030/2539 [13:54<03:29,  2.43it/s, loss=0.00336, v_num=3]Epoch 9:  80%|████████  | 2040/2539 [13:59<03:25,  2.43it/s, loss=0.00336, v_num=3]Epoch 9:  80%|████████  | 2040/2539 [13:59<03:25,  2.43it/s, loss=0.00427, v_num=3]Epoch 9:  81%|████████  | 2050/2539 [14:03<03:21,  2.43it/s, loss=0.00427, v_num=3]Epoch 9:  81%|████████  | 2050/2539 [14:03<03:21,  2.43it/s, loss=0.00648, v_num=3]Epoch 9:  81%|████████  | 2060/2539 [14:07<03:16,  2.43it/s, loss=0.00648, v_num=3]Epoch 9:  81%|████████  | 2060/2539 [14:07<03:16,  2.43it/s, loss=0.00586, v_num=3]Epoch 9:  82%|████████▏ | 2070/2539 [14:11<03:12,  2.43it/s, loss=0.00586, v_num=3]Epoch 9:  82%|████████▏ | 2070/2539 [14:11<03:12,  2.43it/s, loss=0.00371, v_num=3]Epoch 9:  82%|████████▏ | 2080/2539 [14:15<03:08,  2.43it/s, loss=0.00371, v_num=3]Epoch 9:  82%|████████▏ | 2080/2539 [14:15<03:08,  2.43it/s, loss=0.00447, v_num=3]Epoch 9:  82%|████████▏ | 2090/2539 [14:19<03:04,  2.43it/s, loss=0.00447, v_num=3]Epoch 9:  82%|████████▏ | 2090/2539 [14:19<03:04,  2.43it/s, loss=0.00519, v_num=3]Epoch 9:  83%|████████▎ | 2100/2539 [14:23<03:00,  2.43it/s, loss=0.00519, v_num=3]Epoch 9:  83%|████████▎ | 2100/2539 [14:23<03:00,  2.43it/s, loss=0.00408, v_num=3]Epoch 9:  83%|████████▎ | 2110/2539 [14:27<02:56,  2.43it/s, loss=0.00408, v_num=3]Epoch 9:  83%|████████▎ | 2110/2539 [14:27<02:56,  2.43it/s, loss=0.00437, v_num=3]Epoch 9:  83%|████████▎ | 2120/2539 [14:31<02:52,  2.43it/s, loss=0.00437, v_num=3]Epoch 9:  83%|████████▎ | 2120/2539 [14:31<02:52,  2.43it/s, loss=0.00431, v_num=3]Epoch 9:  84%|████████▍ | 2130/2539 [14:36<02:48,  2.43it/s, loss=0.00431, v_num=3]Epoch 9:  84%|████████▍ | 2130/2539 [14:36<02:48,  2.43it/s, loss=0.00382, v_num=3]Epoch 9:  84%|████████▍ | 2140/2539 [14:40<02:44,  2.43it/s, loss=0.00382, v_num=3]Epoch 9:  84%|████████▍ | 2140/2539 [14:40<02:44,  2.43it/s, loss=0.00411, v_num=3]Epoch 9:  85%|████████▍ | 2150/2539 [14:44<02:39,  2.43it/s, loss=0.00411, v_num=3]Epoch 9:  85%|████████▍ | 2150/2539 [14:44<02:39,  2.43it/s, loss=0.00365, v_num=3]Epoch 9:  85%|████████▌ | 2160/2539 [14:48<02:35,  2.43it/s, loss=0.00365, v_num=3]Epoch 9:  85%|████████▌ | 2160/2539 [14:48<02:35,  2.43it/s, loss=0.0029, v_num=3] Epoch 9:  85%|████████▌ | 2170/2539 [14:52<02:31,  2.43it/s, loss=0.0029, v_num=3]Epoch 9:  85%|████████▌ | 2170/2539 [14:52<02:31,  2.43it/s, loss=0.00193, v_num=3]Epoch 9:  86%|████████▌ | 2180/2539 [14:56<02:27,  2.43it/s, loss=0.00193, v_num=3]Epoch 9:  86%|████████▌ | 2180/2539 [14:56<02:27,  2.43it/s, loss=0.00338, v_num=3]Epoch 9:  86%|████████▋ | 2190/2539 [15:00<02:23,  2.43it/s, loss=0.00338, v_num=3]Epoch 9:  86%|████████▋ | 2190/2539 [15:00<02:23,  2.43it/s, loss=0.00382, v_num=3]Epoch 9:  87%|████████▋ | 2200/2539 [15:04<02:19,  2.43it/s, loss=0.00382, v_num=3]Epoch 9:  87%|████████▋ | 2200/2539 [15:04<02:19,  2.43it/s, loss=0.00295, v_num=3]Epoch 9:  87%|████████▋ | 2210/2539 [15:08<02:15,  2.43it/s, loss=0.00295, v_num=3]Epoch 9:  87%|████████▋ | 2210/2539 [15:08<02:15,  2.43it/s, loss=0.00408, v_num=3]Epoch 9:  87%|████████▋ | 2220/2539 [15:13<02:11,  2.43it/s, loss=0.00408, v_num=3]Epoch 9:  87%|████████▋ | 2220/2539 [15:13<02:11,  2.43it/s, loss=0.00394, v_num=3]Epoch 9:  88%|████████▊ | 2230/2539 [15:17<02:07,  2.43it/s, loss=0.00394, v_num=3]Epoch 9:  88%|████████▊ | 2230/2539 [15:17<02:07,  2.43it/s, loss=0.00431, v_num=3]Epoch 9:  88%|████████▊ | 2240/2539 [15:21<02:02,  2.43it/s, loss=0.00431, v_num=3]Epoch 9:  88%|████████▊ | 2240/2539 [15:21<02:02,  2.43it/s, loss=0.00545, v_num=3]Epoch 9:  89%|████████▊ | 2250/2539 [15:25<01:58,  2.43it/s, loss=0.00545, v_num=3]Epoch 9:  89%|████████▊ | 2250/2539 [15:25<01:58,  2.43it/s, loss=0.0055, v_num=3] Epoch 9:  89%|████████▉ | 2260/2539 [15:29<01:54,  2.43it/s, loss=0.0055, v_num=3]Epoch 9:  89%|████████▉ | 2260/2539 [15:29<01:54,  2.43it/s, loss=0.00455, v_num=3]Epoch 9:  89%|████████▉ | 2270/2539 [15:33<01:50,  2.43it/s, loss=0.00455, v_num=3]Epoch 9:  89%|████████▉ | 2270/2539 [15:33<01:50,  2.43it/s, loss=0.00539, v_num=3]Epoch 9:  90%|████████▉ | 2280/2539 [15:37<01:46,  2.43it/s, loss=0.00539, v_num=3]Epoch 9:  90%|████████▉ | 2280/2539 [15:37<01:46,  2.43it/s, loss=0.00551, v_num=3]Epoch 9:  90%|█████████ | 2290/2539 [15:41<01:42,  2.43it/s, loss=0.00551, v_num=3]Epoch 9:  90%|█████████ | 2290/2539 [15:41<01:42,  2.43it/s, loss=0.00276, v_num=3]Epoch 9:  91%|█████████ | 2300/2539 [15:45<01:38,  2.43it/s, loss=0.00276, v_num=3]Epoch 9:  91%|█████████ | 2300/2539 [15:45<01:38,  2.43it/s, loss=0.00192, v_num=3]Epoch 9:  91%|█████████ | 2310/2539 [15:50<01:34,  2.43it/s, loss=0.00192, v_num=3]Epoch 9:  91%|█████████ | 2310/2539 [15:50<01:34,  2.43it/s, loss=0.00434, v_num=3]Epoch 9:  91%|█████████▏| 2320/2539 [15:54<01:30,  2.43it/s, loss=0.00434, v_num=3]Epoch 9:  91%|█████████▏| 2320/2539 [15:54<01:30,  2.43it/s, loss=0.00572, v_num=3]Epoch 9:  92%|█████████▏| 2330/2539 [15:58<01:25,  2.43it/s, loss=0.00572, v_num=3]Epoch 9:  92%|█████████▏| 2330/2539 [15:58<01:25,  2.43it/s, loss=0.00375, v_num=3]Epoch 9:  92%|█████████▏| 2340/2539 [16:02<01:21,  2.43it/s, loss=0.00375, v_num=3]Epoch 9:  92%|█████████▏| 2340/2539 [16:02<01:21,  2.43it/s, loss=0.00253, v_num=3]Epoch 9:  93%|█████████▎| 2350/2539 [16:06<01:17,  2.43it/s, loss=0.00253, v_num=3]Epoch 9:  93%|█████████▎| 2350/2539 [16:06<01:17,  2.43it/s, loss=0.00261, v_num=3]Epoch 9:  93%|█████████▎| 2360/2539 [16:10<01:13,  2.43it/s, loss=0.00261, v_num=3]Epoch 9:  93%|█████████▎| 2360/2539 [16:10<01:13,  2.43it/s, loss=0.0053, v_num=3] Epoch 9:  93%|█████████▎| 2370/2539 [16:14<01:09,  2.43it/s, loss=0.0053, v_num=3]Epoch 9:  93%|█████████▎| 2370/2539 [16:14<01:09,  2.43it/s, loss=0.00604, v_num=3]Epoch 9:  94%|█████████▎| 2380/2539 [16:18<01:05,  2.43it/s, loss=0.00604, v_num=3]Epoch 9:  94%|█████████▎| 2380/2539 [16:18<01:05,  2.43it/s, loss=0.00535, v_num=3]Epoch 9:  94%|█████████▍| 2390/2539 [16:22<01:01,  2.43it/s, loss=0.00535, v_num=3]Epoch 9:  94%|█████████▍| 2390/2539 [16:23<01:01,  2.43it/s, loss=0.00484, v_num=3]Epoch 9:  95%|█████████▍| 2400/2539 [16:27<00:57,  2.43it/s, loss=0.00484, v_num=3]Epoch 9:  95%|█████████▍| 2400/2539 [16:27<00:57,  2.43it/s, loss=0.00305, v_num=3]Epoch 9:  95%|█████████▍| 2410/2539 [16:31<00:53,  2.43it/s, loss=0.00305, v_num=3]Epoch 9:  95%|█████████▍| 2410/2539 [16:31<00:53,  2.43it/s, loss=0.00272, v_num=3]Epoch 9:  95%|█████████▌| 2420/2539 [16:35<00:48,  2.43it/s, loss=0.00272, v_num=3]Epoch 9:  95%|█████████▌| 2420/2539 [16:35<00:48,  2.43it/s, loss=0.00327, v_num=3]Epoch 9:  96%|█████████▌| 2430/2539 [16:39<00:44,  2.43it/s, loss=0.00327, v_num=3]Epoch 9:  96%|█████████▌| 2430/2539 [16:39<00:44,  2.43it/s, loss=0.00371, v_num=3]Epoch 9:  96%|█████████▌| 2440/2539 [16:43<00:40,  2.43it/s, loss=0.00371, v_num=3]Epoch 9:  96%|█████████▌| 2440/2539 [16:43<00:40,  2.43it/s, loss=0.00376, v_num=3]Epoch 9:  96%|█████████▋| 2450/2539 [16:47<00:36,  2.43it/s, loss=0.00376, v_num=3]Epoch 9:  96%|█████████▋| 2450/2539 [16:47<00:36,  2.43it/s, loss=0.00362, v_num=3]Epoch 9:  97%|█████████▋| 2460/2539 [16:51<00:32,  2.43it/s, loss=0.00362, v_num=3]Epoch 9:  97%|█████████▋| 2460/2539 [16:51<00:32,  2.43it/s, loss=0.00331, v_num=3]Epoch 9:  97%|█████████▋| 2470/2539 [16:55<00:28,  2.43it/s, loss=0.00331, v_num=3]Epoch 9:  97%|█████████▋| 2470/2539 [16:55<00:28,  2.43it/s, loss=0.00452, v_num=3]Epoch 9:  98%|█████████▊| 2480/2539 [16:59<00:24,  2.43it/s, loss=0.00452, v_num=3]Epoch 9:  98%|█████████▊| 2480/2539 [16:59<00:24,  2.43it/s, loss=0.00521, v_num=3]Epoch 9:  98%|█████████▊| 2490/2539 [17:04<00:20,  2.43it/s, loss=0.00521, v_num=3]Epoch 9:  98%|█████████▊| 2490/2539 [17:04<00:20,  2.43it/s, loss=0.0031, v_num=3] Epoch 9:  98%|█████████▊| 2500/2539 [17:08<00:16,  2.43it/s, loss=0.0031, v_num=3]Epoch 9:  98%|█████████▊| 2500/2539 [17:08<00:16,  2.43it/s, loss=0.00367, v_num=3]Epoch 9:  99%|█████████▉| 2510/2539 [17:12<00:11,  2.43it/s, loss=0.00367, v_num=3]Epoch 9:  99%|█████████▉| 2510/2539 [17:12<00:11,  2.43it/s, loss=0.00473, v_num=3]Epoch 9:  99%|█████████▉| 2520/2539 [17:16<00:07,  2.43it/s, loss=0.00473, v_num=3]Epoch 9:  99%|█████████▉| 2520/2539 [17:16<00:07,  2.43it/s, loss=0.00339, v_num=3]
Validation: 0it [00:00, ?it/s][A
Validation:   0%|          | 0/15 [00:00<?, ?it/s][A
Validation DataLoader 0:   0%|          | 0/15 [00:00<?, ?it/s][Anumber of gold spans: 106, predicted spans: 101, hit: 72
number of gold spans: 102, predicted spans: 103, hit: 60
number of gold spans: 94, predicted spans: 102, hit: 63
number of gold spans: 100, predicted spans: 102, hit: 71
number of gold spans: 113, predicted spans: 113, hit: 76
number of gold spans: 98, predicted spans: 101, hit: 65
Epoch 9: 100%|█████████▉| 2530/2539 [17:57<00:03,  2.35it/s, loss=0.00339, v_num=3]number of gold spans: 104, predicted spans: 103, hit: 71
number of gold spans: 90, predicted spans: 94, hit: 52
number of gold spans: 98, predicted spans: 95, hit: 53
number of gold spans: 95, predicted spans: 92, hit: 62

Validation DataLoader 0:  67%|██████▋   | 10/15 [01:03<00:31,  6.37s/it][Anumber of gold spans: 99, predicted spans: 105, hit: 68
number of gold spans: 109, predicted spans: 107, hit: 68
number of gold spans: 95, predicted spans: 98, hit: 57
number of gold spans: 94, predicted spans: 95, hit: 56
number of gold spans: 4, predicted spans: 3, hit: 3

Validation DataLoader 0: 100%|██████████| 15/15 [01:28<00:00,  5.93s/it][AEpoch 9: 100%|██████████| 2539/2539 [18:47<00:00,  2.25it/s, loss=0.00339, v_num=3]Epoch 9: 100%|██████████| 2539/2539 [18:47<00:00,  2.25it/s, loss=0.00355, v_num=3, val_loss=0.306, val_f1=63.60]
                                                                        [AEpoch 9: 100%|██████████| 2539/2539 [18:47<00:00,  2.25it/s, loss=0.00355, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 9:   0%|          | 0/2524 [00:00<?, ?it/s, loss=0.00355, v_num=3, val_loss=0.306, val_f1=63.60]           Epoch 10:   0%|          | 0/2524 [00:00<?, ?it/s, loss=0.00355, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   0%|          | 10/2524 [00:04<18:15,  2.29it/s, loss=0.00355, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   0%|          | 10/2524 [00:04<18:18,  2.29it/s, loss=0.00236, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   1%|          | 20/2524 [00:08<17:37,  2.37it/s, loss=0.00236, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   1%|          | 20/2524 [00:08<17:38,  2.36it/s, loss=0.00363, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   1%|          | 30/2524 [00:12<17:17,  2.40it/s, loss=0.00363, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   1%|          | 30/2524 [00:12<17:18,  2.40it/s, loss=0.00412, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   2%|▏         | 40/2524 [00:16<17:06,  2.42it/s, loss=0.00412, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   2%|▏         | 40/2524 [00:16<17:06,  2.42it/s, loss=0.00293, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   2%|▏         | 50/2524 [00:20<16:57,  2.43it/s, loss=0.00293, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   2%|▏         | 50/2524 [00:20<16:58,  2.43it/s, loss=0.0027, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 10:   2%|▏         | 60/2524 [00:24<16:52,  2.43it/s, loss=0.0027, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   2%|▏         | 60/2524 [00:24<16:52,  2.43it/s, loss=0.00351, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   3%|▎         | 70/2524 [00:28<16:49,  2.43it/s, loss=0.00351, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   3%|▎         | 70/2524 [00:28<16:50,  2.43it/s, loss=0.00418, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   3%|▎         | 80/2524 [00:32<16:43,  2.43it/s, loss=0.00418, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   3%|▎         | 80/2524 [00:32<16:44,  2.43it/s, loss=0.00478, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   4%|▎         | 90/2524 [00:36<16:38,  2.44it/s, loss=0.00478, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   4%|▎         | 90/2524 [00:36<16:38,  2.44it/s, loss=0.00454, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   4%|▍         | 100/2524 [00:40<16:32,  2.44it/s, loss=0.00454, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   4%|▍         | 100/2524 [00:40<16:33,  2.44it/s, loss=0.00265, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   4%|▍         | 110/2524 [00:45<16:28,  2.44it/s, loss=0.00265, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   4%|▍         | 110/2524 [00:45<16:28,  2.44it/s, loss=0.00257, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   5%|▍         | 120/2524 [00:49<16:24,  2.44it/s, loss=0.00257, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   5%|▍         | 120/2524 [00:49<16:24,  2.44it/s, loss=0.00471, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   5%|▌         | 130/2524 [00:53<16:19,  2.44it/s, loss=0.00471, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   5%|▌         | 130/2524 [00:53<16:20,  2.44it/s, loss=0.00371, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   6%|▌         | 140/2524 [00:57<16:15,  2.44it/s, loss=0.00371, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   6%|▌         | 140/2524 [00:57<16:15,  2.44it/s, loss=0.00246, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   6%|▌         | 150/2524 [01:01<16:10,  2.45it/s, loss=0.00246, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   6%|▌         | 150/2524 [01:01<16:10,  2.44it/s, loss=0.00343, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   6%|▋         | 160/2524 [01:05<16:07,  2.44it/s, loss=0.00343, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   6%|▋         | 160/2524 [01:05<16:07,  2.44it/s, loss=0.00325, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   7%|▋         | 170/2524 [01:09<16:04,  2.44it/s, loss=0.00325, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   7%|▋         | 170/2524 [01:09<16:04,  2.44it/s, loss=0.00522, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   7%|▋         | 180/2524 [01:13<15:59,  2.44it/s, loss=0.00522, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   7%|▋         | 180/2524 [01:13<15:59,  2.44it/s, loss=0.00592, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   8%|▊         | 190/2524 [01:17<15:55,  2.44it/s, loss=0.00592, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   8%|▊         | 190/2524 [01:17<15:55,  2.44it/s, loss=0.00431, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   8%|▊         | 200/2524 [01:21<15:50,  2.44it/s, loss=0.00431, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   8%|▊         | 200/2524 [01:21<15:51,  2.44it/s, loss=0.00345, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   8%|▊         | 210/2524 [01:25<15:46,  2.44it/s, loss=0.00345, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   8%|▊         | 210/2524 [01:25<15:46,  2.44it/s, loss=0.00318, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   9%|▊         | 220/2524 [01:30<15:43,  2.44it/s, loss=0.00318, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   9%|▊         | 220/2524 [01:30<15:43,  2.44it/s, loss=0.00347, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   9%|▉         | 230/2524 [01:34<15:38,  2.44it/s, loss=0.00347, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   9%|▉         | 230/2524 [01:34<15:39,  2.44it/s, loss=0.00404, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  10%|▉         | 240/2524 [01:38<15:34,  2.44it/s, loss=0.00404, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  10%|▉         | 240/2524 [01:38<15:34,  2.44it/s, loss=0.00529, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  10%|▉         | 250/2524 [01:42<15:30,  2.44it/s, loss=0.00529, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  10%|▉         | 250/2524 [01:42<15:30,  2.44it/s, loss=0.00595, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  10%|█         | 260/2524 [01:46<15:26,  2.44it/s, loss=0.00595, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  10%|█         | 260/2524 [01:46<15:26,  2.44it/s, loss=0.00509, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  11%|█         | 270/2524 [01:50<15:23,  2.44it/s, loss=0.00509, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  11%|█         | 270/2524 [01:50<15:23,  2.44it/s, loss=0.00403, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  11%|█         | 280/2524 [01:54<15:19,  2.44it/s, loss=0.00403, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  11%|█         | 280/2524 [01:54<15:19,  2.44it/s, loss=0.00397, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  11%|█▏        | 290/2524 [01:58<15:15,  2.44it/s, loss=0.00397, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  11%|█▏        | 290/2524 [01:58<15:15,  2.44it/s, loss=0.00334, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  12%|█▏        | 300/2524 [02:02<15:11,  2.44it/s, loss=0.00334, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  12%|█▏        | 300/2524 [02:02<15:11,  2.44it/s, loss=0.00295, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  12%|█▏        | 310/2524 [02:06<15:06,  2.44it/s, loss=0.00295, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  12%|█▏        | 310/2524 [02:06<15:06,  2.44it/s, loss=0.00314, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  13%|█▎        | 320/2524 [02:11<15:03,  2.44it/s, loss=0.00314, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  13%|█▎        | 320/2524 [02:11<15:03,  2.44it/s, loss=0.00281, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  13%|█▎        | 330/2524 [02:15<14:59,  2.44it/s, loss=0.00281, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  13%|█▎        | 330/2524 [02:15<14:59,  2.44it/s, loss=0.00459, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  13%|█▎        | 340/2524 [02:19<14:54,  2.44it/s, loss=0.00459, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  13%|█▎        | 340/2524 [02:19<14:54,  2.44it/s, loss=0.00469, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  14%|█▍        | 350/2524 [02:23<14:50,  2.44it/s, loss=0.00469, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  14%|█▍        | 350/2524 [02:23<14:50,  2.44it/s, loss=0.00263, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  14%|█▍        | 360/2524 [02:27<14:46,  2.44it/s, loss=0.00263, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  14%|█▍        | 360/2524 [02:27<14:46,  2.44it/s, loss=0.00339, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  15%|█▍        | 370/2524 [02:31<14:43,  2.44it/s, loss=0.00339, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  15%|█▍        | 370/2524 [02:31<14:43,  2.44it/s, loss=0.00365, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  15%|█▌        | 380/2524 [02:35<14:39,  2.44it/s, loss=0.00365, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  15%|█▌        | 380/2524 [02:35<14:39,  2.44it/s, loss=0.00225, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  15%|█▌        | 390/2524 [02:39<14:35,  2.44it/s, loss=0.00225, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  15%|█▌        | 390/2524 [02:39<14:35,  2.44it/s, loss=0.00195, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  16%|█▌        | 400/2524 [02:44<14:30,  2.44it/s, loss=0.00195, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  16%|█▌        | 400/2524 [02:44<14:31,  2.44it/s, loss=0.00453, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  16%|█▌        | 410/2524 [02:48<14:26,  2.44it/s, loss=0.00453, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  16%|█▌        | 410/2524 [02:48<14:26,  2.44it/s, loss=0.00488, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  17%|█▋        | 420/2524 [02:52<14:22,  2.44it/s, loss=0.00488, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  17%|█▋        | 420/2524 [02:52<14:23,  2.44it/s, loss=0.00248, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  17%|█▋        | 430/2524 [02:56<14:18,  2.44it/s, loss=0.00248, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  17%|█▋        | 430/2524 [02:56<14:18,  2.44it/s, loss=0.00169, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  17%|█▋        | 440/2524 [03:00<14:14,  2.44it/s, loss=0.00169, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  17%|█▋        | 440/2524 [03:00<14:14,  2.44it/s, loss=0.00264, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  18%|█▊        | 450/2524 [03:04<14:10,  2.44it/s, loss=0.00264, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  18%|█▊        | 450/2524 [03:04<14:10,  2.44it/s, loss=0.00414, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  18%|█▊        | 460/2524 [03:08<14:06,  2.44it/s, loss=0.00414, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  18%|█▊        | 460/2524 [03:08<14:06,  2.44it/s, loss=0.00426, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  19%|█▊        | 470/2524 [03:12<14:02,  2.44it/s, loss=0.00426, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  19%|█▊        | 470/2524 [03:12<14:03,  2.44it/s, loss=0.00487, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  19%|█▉        | 480/2524 [03:16<13:58,  2.44it/s, loss=0.00487, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  19%|█▉        | 480/2524 [03:16<13:58,  2.44it/s, loss=0.00435, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  19%|█▉        | 490/2524 [03:21<13:54,  2.44it/s, loss=0.00435, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  19%|█▉        | 490/2524 [03:21<13:54,  2.44it/s, loss=0.00278, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  20%|█▉        | 500/2524 [03:25<13:50,  2.44it/s, loss=0.00278, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  20%|█▉        | 500/2524 [03:25<13:50,  2.44it/s, loss=0.00358, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  20%|██        | 510/2524 [03:29<13:46,  2.44it/s, loss=0.00358, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  20%|██        | 510/2524 [03:29<13:46,  2.44it/s, loss=0.00537, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  21%|██        | 520/2524 [03:33<13:42,  2.44it/s, loss=0.00537, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  21%|██        | 520/2524 [03:33<13:42,  2.44it/s, loss=0.00454, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  21%|██        | 530/2524 [03:37<13:38,  2.44it/s, loss=0.00454, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  21%|██        | 530/2524 [03:37<13:38,  2.44it/s, loss=0.00376, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  21%|██▏       | 540/2524 [03:41<13:34,  2.44it/s, loss=0.00376, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  21%|██▏       | 540/2524 [03:41<13:34,  2.44it/s, loss=0.0042, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 10:  22%|██▏       | 550/2524 [03:45<13:30,  2.44it/s, loss=0.0042, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  22%|██▏       | 550/2524 [03:45<13:30,  2.44it/s, loss=0.00338, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  22%|██▏       | 560/2524 [03:49<13:26,  2.44it/s, loss=0.00338, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  22%|██▏       | 560/2524 [03:49<13:26,  2.44it/s, loss=0.00394, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  23%|██▎       | 570/2524 [03:54<13:22,  2.44it/s, loss=0.00394, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  23%|██▎       | 570/2524 [03:54<13:22,  2.44it/s, loss=0.00372, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  23%|██▎       | 580/2524 [03:58<13:18,  2.44it/s, loss=0.00372, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  23%|██▎       | 580/2524 [03:58<13:18,  2.44it/s, loss=0.00232, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  23%|██▎       | 590/2524 [04:02<13:13,  2.44it/s, loss=0.00232, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  23%|██▎       | 590/2524 [04:02<13:13,  2.44it/s, loss=0.00343, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  24%|██▍       | 600/2524 [04:06<13:09,  2.44it/s, loss=0.00343, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  24%|██▍       | 600/2524 [04:06<13:09,  2.44it/s, loss=0.00432, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  24%|██▍       | 610/2524 [04:10<13:05,  2.44it/s, loss=0.00432, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  24%|██▍       | 610/2524 [04:10<13:05,  2.44it/s, loss=0.00674, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  25%|██▍       | 620/2524 [04:14<13:01,  2.44it/s, loss=0.00674, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  25%|██▍       | 620/2524 [04:14<13:01,  2.44it/s, loss=0.00749, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  25%|██▍       | 630/2524 [04:18<12:57,  2.44it/s, loss=0.00749, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  25%|██▍       | 630/2524 [04:18<12:57,  2.44it/s, loss=0.00443, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  25%|██▌       | 640/2524 [04:22<12:53,  2.44it/s, loss=0.00443, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  25%|██▌       | 640/2524 [04:22<12:53,  2.44it/s, loss=0.00314, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  26%|██▌       | 650/2524 [04:26<12:49,  2.44it/s, loss=0.00314, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  26%|██▌       | 650/2524 [04:26<12:49,  2.44it/s, loss=0.00483, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  26%|██▌       | 660/2524 [04:30<12:45,  2.44it/s, loss=0.00483, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  26%|██▌       | 660/2524 [04:30<12:45,  2.44it/s, loss=0.00543, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  27%|██▋       | 670/2524 [04:35<12:41,  2.43it/s, loss=0.00543, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  27%|██▋       | 670/2524 [04:35<12:41,  2.43it/s, loss=0.00426, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  27%|██▋       | 680/2524 [04:39<12:37,  2.44it/s, loss=0.00426, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  27%|██▋       | 680/2524 [04:39<12:37,  2.44it/s, loss=0.00304, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  27%|██▋       | 690/2524 [04:43<12:33,  2.44it/s, loss=0.00304, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  27%|██▋       | 690/2524 [04:43<12:33,  2.44it/s, loss=0.00205, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  28%|██▊       | 700/2524 [04:47<12:28,  2.44it/s, loss=0.00205, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  28%|██▊       | 700/2524 [04:47<12:28,  2.44it/s, loss=0.00235, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  28%|██▊       | 710/2524 [04:51<12:24,  2.44it/s, loss=0.00235, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  28%|██▊       | 710/2524 [04:51<12:24,  2.44it/s, loss=0.00235, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  29%|██▊       | 720/2524 [04:55<12:20,  2.44it/s, loss=0.00235, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  29%|██▊       | 720/2524 [04:55<12:20,  2.44it/s, loss=0.00275, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  29%|██▉       | 730/2524 [04:59<12:16,  2.44it/s, loss=0.00275, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  29%|██▉       | 730/2524 [04:59<12:16,  2.44it/s, loss=0.00321, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  29%|██▉       | 740/2524 [05:03<12:12,  2.44it/s, loss=0.00321, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  29%|██▉       | 740/2524 [05:03<12:12,  2.44it/s, loss=0.00322, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  30%|██▉       | 750/2524 [05:07<12:08,  2.44it/s, loss=0.00322, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  30%|██▉       | 750/2524 [05:07<12:08,  2.44it/s, loss=0.00379, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  30%|███       | 760/2524 [05:12<12:04,  2.44it/s, loss=0.00379, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  30%|███       | 760/2524 [05:12<12:04,  2.44it/s, loss=0.00443, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  31%|███       | 770/2524 [05:16<12:00,  2.43it/s, loss=0.00443, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  31%|███       | 770/2524 [05:16<12:00,  2.43it/s, loss=0.00498, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  31%|███       | 780/2524 [05:20<11:56,  2.43it/s, loss=0.00498, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  31%|███       | 780/2524 [05:20<11:56,  2.43it/s, loss=0.00443, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  31%|███▏      | 790/2524 [05:24<11:52,  2.43it/s, loss=0.00443, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  31%|███▏      | 790/2524 [05:24<11:52,  2.43it/s, loss=0.00312, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  32%|███▏      | 800/2524 [05:28<11:48,  2.43it/s, loss=0.00312, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  32%|███▏      | 800/2524 [05:28<11:48,  2.43it/s, loss=0.00231, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  32%|███▏      | 810/2524 [05:32<11:43,  2.43it/s, loss=0.00231, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  32%|███▏      | 810/2524 [05:32<11:43,  2.43it/s, loss=0.00281, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  32%|███▏      | 820/2524 [05:36<11:39,  2.43it/s, loss=0.00281, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  32%|███▏      | 820/2524 [05:36<11:39,  2.43it/s, loss=0.00405, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  33%|███▎      | 830/2524 [05:40<11:35,  2.43it/s, loss=0.00405, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  33%|███▎      | 830/2524 [05:40<11:35,  2.43it/s, loss=0.00315, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  33%|███▎      | 840/2524 [05:45<11:31,  2.43it/s, loss=0.00315, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  33%|███▎      | 840/2524 [05:45<11:31,  2.43it/s, loss=0.00193, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  34%|███▎      | 850/2524 [05:49<11:27,  2.43it/s, loss=0.00193, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  34%|███▎      | 850/2524 [05:49<11:27,  2.43it/s, loss=0.00139, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  34%|███▍      | 860/2524 [05:53<11:23,  2.43it/s, loss=0.00139, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  34%|███▍      | 860/2524 [05:53<11:23,  2.43it/s, loss=0.00306, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  34%|███▍      | 870/2524 [05:57<11:19,  2.43it/s, loss=0.00306, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  34%|███▍      | 870/2524 [05:57<11:19,  2.43it/s, loss=0.005, v_num=3, val_loss=0.306, val_f1=63.60]  Epoch 10:  35%|███▍      | 880/2524 [06:01<11:15,  2.43it/s, loss=0.005, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  35%|███▍      | 880/2524 [06:01<11:15,  2.43it/s, loss=0.00391, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  35%|███▌      | 890/2524 [06:05<11:11,  2.43it/s, loss=0.00391, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  35%|███▌      | 890/2524 [06:05<11:11,  2.43it/s, loss=0.00457, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  36%|███▌      | 900/2524 [06:09<11:07,  2.43it/s, loss=0.00457, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  36%|███▌      | 900/2524 [06:09<11:07,  2.43it/s, loss=0.00446, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  36%|███▌      | 910/2524 [06:13<11:03,  2.43it/s, loss=0.00446, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  36%|███▌      | 910/2524 [06:13<11:03,  2.43it/s, loss=0.00355, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  36%|███▋      | 920/2524 [06:17<10:59,  2.43it/s, loss=0.00355, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  36%|███▋      | 920/2524 [06:18<10:59,  2.43it/s, loss=0.0055, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 10:  37%|███▋      | 930/2524 [06:22<10:54,  2.43it/s, loss=0.0055, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  37%|███▋      | 930/2524 [06:22<10:54,  2.43it/s, loss=0.00517, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  37%|███▋      | 940/2524 [06:26<10:50,  2.43it/s, loss=0.00517, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  37%|███▋      | 940/2524 [06:26<10:50,  2.43it/s, loss=0.00358, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  38%|███▊      | 950/2524 [06:30<10:46,  2.43it/s, loss=0.00358, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  38%|███▊      | 950/2524 [06:30<10:46,  2.43it/s, loss=0.00397, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  38%|███▊      | 960/2524 [06:34<10:42,  2.43it/s, loss=0.00397, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  38%|███▊      | 960/2524 [06:34<10:42,  2.43it/s, loss=0.00479, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  38%|███▊      | 970/2524 [06:38<10:38,  2.43it/s, loss=0.00479, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  38%|███▊      | 970/2524 [06:38<10:38,  2.43it/s, loss=0.00335, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  39%|███▉      | 980/2524 [06:42<10:34,  2.43it/s, loss=0.00335, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  39%|███▉      | 980/2524 [06:42<10:34,  2.43it/s, loss=0.00202, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  39%|███▉      | 990/2524 [06:46<10:30,  2.43it/s, loss=0.00202, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  39%|███▉      | 990/2524 [06:46<10:30,  2.43it/s, loss=0.00445, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  40%|███▉      | 1000/2524 [06:50<10:26,  2.43it/s, loss=0.00445, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  40%|███▉      | 1000/2524 [06:50<10:26,  2.43it/s, loss=0.00626, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  40%|████      | 1010/2524 [06:55<10:22,  2.43it/s, loss=0.00626, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  40%|████      | 1010/2524 [06:55<10:22,  2.43it/s, loss=0.00404, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  40%|████      | 1020/2524 [06:59<10:18,  2.43it/s, loss=0.00404, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  40%|████      | 1020/2524 [06:59<10:18,  2.43it/s, loss=0.00239, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  41%|████      | 1030/2524 [07:03<10:13,  2.43it/s, loss=0.00239, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  41%|████      | 1030/2524 [07:03<10:13,  2.43it/s, loss=0.00338, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  41%|████      | 1040/2524 [07:07<10:09,  2.43it/s, loss=0.00338, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  41%|████      | 1040/2524 [07:07<10:09,  2.43it/s, loss=0.00533, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  42%|████▏     | 1050/2524 [07:11<10:05,  2.43it/s, loss=0.00533, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  42%|████▏     | 1050/2524 [07:11<10:05,  2.43it/s, loss=0.00434, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  42%|████▏     | 1060/2524 [07:15<10:01,  2.43it/s, loss=0.00434, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  42%|████▏     | 1060/2524 [07:15<10:01,  2.43it/s, loss=0.00301, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  42%|████▏     | 1070/2524 [07:19<09:57,  2.43it/s, loss=0.00301, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  42%|████▏     | 1070/2524 [07:19<09:57,  2.43it/s, loss=0.0036, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 10:  43%|████▎     | 1080/2524 [07:23<09:53,  2.43it/s, loss=0.0036, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  43%|████▎     | 1080/2524 [07:23<09:53,  2.43it/s, loss=0.00284, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  43%|████▎     | 1090/2524 [07:27<09:49,  2.43it/s, loss=0.00284, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  43%|████▎     | 1090/2524 [07:27<09:49,  2.43it/s, loss=0.00385, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  44%|████▎     | 1100/2524 [07:32<09:45,  2.43it/s, loss=0.00385, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  44%|████▎     | 1100/2524 [07:32<09:45,  2.43it/s, loss=0.00643, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  44%|████▍     | 1110/2524 [07:36<09:41,  2.43it/s, loss=0.00643, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  44%|████▍     | 1110/2524 [07:36<09:41,  2.43it/s, loss=0.00524, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  44%|████▍     | 1120/2524 [07:40<09:36,  2.43it/s, loss=0.00524, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  44%|████▍     | 1120/2524 [07:40<09:36,  2.43it/s, loss=0.00384, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  45%|████▍     | 1130/2524 [07:44<09:32,  2.43it/s, loss=0.00384, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  45%|████▍     | 1130/2524 [07:44<09:32,  2.43it/s, loss=0.00525, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  45%|████▌     | 1140/2524 [07:48<09:28,  2.43it/s, loss=0.00525, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  45%|████▌     | 1140/2524 [07:48<09:28,  2.43it/s, loss=0.00404, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  46%|████▌     | 1150/2524 [07:52<09:24,  2.43it/s, loss=0.00404, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  46%|████▌     | 1150/2524 [07:52<09:24,  2.43it/s, loss=0.00276, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  46%|████▌     | 1160/2524 [07:56<09:20,  2.43it/s, loss=0.00276, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  46%|████▌     | 1160/2524 [07:56<09:20,  2.43it/s, loss=0.00499, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  46%|████▋     | 1170/2524 [08:00<09:16,  2.43it/s, loss=0.00499, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  46%|████▋     | 1170/2524 [08:00<09:16,  2.43it/s, loss=0.00718, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  47%|████▋     | 1180/2524 [08:04<09:12,  2.43it/s, loss=0.00718, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  47%|████▋     | 1180/2524 [08:04<09:12,  2.43it/s, loss=0.00496, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  47%|████▋     | 1190/2524 [08:09<09:08,  2.43it/s, loss=0.00496, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  47%|████▋     | 1190/2524 [08:09<09:08,  2.43it/s, loss=0.00303, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  48%|████▊     | 1200/2524 [08:13<09:04,  2.43it/s, loss=0.00303, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  48%|████▊     | 1200/2524 [08:13<09:04,  2.43it/s, loss=0.00401, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  48%|████▊     | 1210/2524 [08:17<08:59,  2.43it/s, loss=0.00401, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  48%|████▊     | 1210/2524 [08:17<09:00,  2.43it/s, loss=0.00484, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  48%|████▊     | 1220/2524 [08:21<08:55,  2.43it/s, loss=0.00484, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  48%|████▊     | 1220/2524 [08:21<08:55,  2.43it/s, loss=0.00436, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  49%|████▊     | 1230/2524 [08:25<08:51,  2.43it/s, loss=0.00436, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  49%|████▊     | 1230/2524 [08:25<08:51,  2.43it/s, loss=0.00236, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  49%|████▉     | 1240/2524 [08:29<08:47,  2.43it/s, loss=0.00236, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  49%|████▉     | 1240/2524 [08:29<08:47,  2.43it/s, loss=0.00364, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  50%|████▉     | 1250/2524 [08:33<08:43,  2.43it/s, loss=0.00364, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  50%|████▉     | 1250/2524 [08:33<08:43,  2.43it/s, loss=0.00547, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  50%|████▉     | 1260/2524 [08:37<08:39,  2.43it/s, loss=0.00547, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  50%|████▉     | 1260/2524 [08:37<08:39,  2.43it/s, loss=0.0049, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 10:  50%|█████     | 1270/2524 [08:42<08:35,  2.43it/s, loss=0.0049, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  50%|█████     | 1270/2524 [08:42<08:35,  2.43it/s, loss=0.00467, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  51%|█████     | 1280/2524 [08:46<08:31,  2.43it/s, loss=0.00467, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  51%|█████     | 1280/2524 [08:46<08:31,  2.43it/s, loss=0.00479, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  51%|█████     | 1290/2524 [08:50<08:27,  2.43it/s, loss=0.00479, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  51%|█████     | 1290/2524 [08:50<08:27,  2.43it/s, loss=0.004, v_num=3, val_loss=0.306, val_f1=63.60]  Epoch 10:  52%|█████▏    | 1300/2524 [08:54<08:23,  2.43it/s, loss=0.004, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  52%|█████▏    | 1300/2524 [08:54<08:23,  2.43it/s, loss=0.00242, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  52%|█████▏    | 1310/2524 [08:58<08:18,  2.43it/s, loss=0.00242, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  52%|█████▏    | 1310/2524 [08:58<08:18,  2.43it/s, loss=0.00214, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  52%|█████▏    | 1320/2524 [09:02<08:14,  2.43it/s, loss=0.00214, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  52%|█████▏    | 1320/2524 [09:02<08:14,  2.43it/s, loss=0.00207, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  53%|█████▎    | 1330/2524 [09:06<08:10,  2.43it/s, loss=0.00207, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  53%|█████▎    | 1330/2524 [09:06<08:10,  2.43it/s, loss=0.00247, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  53%|█████▎    | 1340/2524 [09:10<08:06,  2.43it/s, loss=0.00247, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  53%|█████▎    | 1340/2524 [09:10<08:06,  2.43it/s, loss=0.00347, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  53%|█████▎    | 1350/2524 [09:14<08:02,  2.43it/s, loss=0.00347, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  53%|█████▎    | 1350/2524 [09:14<08:02,  2.43it/s, loss=0.00332, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  54%|█████▍    | 1360/2524 [09:18<07:58,  2.43it/s, loss=0.00332, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  54%|█████▍    | 1360/2524 [09:18<07:58,  2.43it/s, loss=0.00269, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  54%|█████▍    | 1370/2524 [09:23<07:54,  2.43it/s, loss=0.00269, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  54%|█████▍    | 1370/2524 [09:23<07:54,  2.43it/s, loss=0.00279, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  55%|█████▍    | 1380/2524 [09:27<07:50,  2.43it/s, loss=0.00279, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  55%|█████▍    | 1380/2524 [09:27<07:50,  2.43it/s, loss=0.00251, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  55%|█████▌    | 1390/2524 [09:31<07:46,  2.43it/s, loss=0.00251, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  55%|█████▌    | 1390/2524 [09:31<07:46,  2.43it/s, loss=0.00307, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  55%|█████▌    | 1400/2524 [09:35<07:41,  2.43it/s, loss=0.00307, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  55%|█████▌    | 1400/2524 [09:35<07:41,  2.43it/s, loss=0.00441, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  56%|█████▌    | 1410/2524 [09:39<07:37,  2.43it/s, loss=0.00441, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  56%|█████▌    | 1410/2524 [09:39<07:37,  2.43it/s, loss=0.0034, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 10:  56%|█████▋    | 1420/2524 [09:43<07:33,  2.43it/s, loss=0.0034, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  56%|█████▋    | 1420/2524 [09:43<07:33,  2.43it/s, loss=0.00246, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  57%|█████▋    | 1430/2524 [09:47<07:29,  2.43it/s, loss=0.00246, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  57%|█████▋    | 1430/2524 [09:47<07:29,  2.43it/s, loss=0.00282, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  57%|█████▋    | 1440/2524 [09:51<07:25,  2.43it/s, loss=0.00282, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  57%|█████▋    | 1440/2524 [09:51<07:25,  2.43it/s, loss=0.0032, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 10:  57%|█████▋    | 1450/2524 [09:55<07:21,  2.43it/s, loss=0.0032, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  57%|█████▋    | 1450/2524 [09:55<07:21,  2.43it/s, loss=0.00406, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  58%|█████▊    | 1460/2524 [10:00<07:17,  2.43it/s, loss=0.00406, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  58%|█████▊    | 1460/2524 [10:00<07:17,  2.43it/s, loss=0.00463, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  58%|█████▊    | 1470/2524 [10:04<07:13,  2.43it/s, loss=0.00463, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  58%|█████▊    | 1470/2524 [10:04<07:13,  2.43it/s, loss=0.00341, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  59%|█████▊    | 1480/2524 [10:08<07:09,  2.43it/s, loss=0.00341, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  59%|█████▊    | 1480/2524 [10:08<07:09,  2.43it/s, loss=0.00425, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  59%|█████▉    | 1490/2524 [10:12<07:04,  2.43it/s, loss=0.00425, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  59%|█████▉    | 1490/2524 [10:12<07:05,  2.43it/s, loss=0.00544, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  59%|█████▉    | 1500/2524 [10:16<07:00,  2.43it/s, loss=0.00544, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  59%|█████▉    | 1500/2524 [10:16<07:00,  2.43it/s, loss=0.00415, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  60%|█████▉    | 1510/2524 [10:20<06:56,  2.43it/s, loss=0.00415, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  60%|█████▉    | 1510/2524 [10:20<06:56,  2.43it/s, loss=0.00602, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  60%|██████    | 1520/2524 [10:24<06:52,  2.43it/s, loss=0.00602, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  60%|██████    | 1520/2524 [10:24<06:52,  2.43it/s, loss=0.00651, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  61%|██████    | 1530/2524 [10:28<06:48,  2.43it/s, loss=0.00651, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  61%|██████    | 1530/2524 [10:28<06:48,  2.43it/s, loss=0.0038, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 10:  61%|██████    | 1540/2524 [10:32<06:44,  2.43it/s, loss=0.0038, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  61%|██████    | 1540/2524 [10:32<06:44,  2.43it/s, loss=0.00387, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  61%|██████▏   | 1550/2524 [10:37<06:40,  2.43it/s, loss=0.00387, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  61%|██████▏   | 1550/2524 [10:37<06:40,  2.43it/s, loss=0.00371, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  62%|██████▏   | 1560/2524 [10:41<06:36,  2.43it/s, loss=0.00371, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  62%|██████▏   | 1560/2524 [10:41<06:36,  2.43it/s, loss=0.00448, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  62%|██████▏   | 1570/2524 [10:45<06:32,  2.43it/s, loss=0.00448, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  62%|██████▏   | 1570/2524 [10:45<06:32,  2.43it/s, loss=0.00629, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  63%|██████▎   | 1580/2524 [10:49<06:28,  2.43it/s, loss=0.00629, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  63%|██████▎   | 1580/2524 [10:49<06:28,  2.43it/s, loss=0.00496, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  63%|██████▎   | 1590/2524 [10:53<06:23,  2.43it/s, loss=0.00496, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  63%|██████▎   | 1590/2524 [10:53<06:23,  2.43it/s, loss=0.00281, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  63%|██████▎   | 1600/2524 [10:57<06:19,  2.43it/s, loss=0.00281, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  63%|██████▎   | 1600/2524 [10:57<06:19,  2.43it/s, loss=0.00233, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  64%|██████▍   | 1610/2524 [11:01<06:15,  2.43it/s, loss=0.00233, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  64%|██████▍   | 1610/2524 [11:01<06:15,  2.43it/s, loss=0.00197, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  64%|██████▍   | 1620/2524 [11:05<06:11,  2.43it/s, loss=0.00197, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  64%|██████▍   | 1620/2524 [11:05<06:11,  2.43it/s, loss=0.00181, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  65%|██████▍   | 1630/2524 [11:09<06:07,  2.43it/s, loss=0.00181, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  65%|██████▍   | 1630/2524 [11:09<06:07,  2.43it/s, loss=0.00401, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  65%|██████▍   | 1640/2524 [11:14<06:03,  2.43it/s, loss=0.00401, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  65%|██████▍   | 1640/2524 [11:14<06:03,  2.43it/s, loss=0.00483, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  65%|██████▌   | 1650/2524 [11:18<05:59,  2.43it/s, loss=0.00483, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  65%|██████▌   | 1650/2524 [11:18<05:59,  2.43it/s, loss=0.00247, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  66%|██████▌   | 1660/2524 [11:22<05:55,  2.43it/s, loss=0.00247, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  66%|██████▌   | 1660/2524 [11:22<05:55,  2.43it/s, loss=0.00301, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  66%|██████▌   | 1670/2524 [11:26<05:51,  2.43it/s, loss=0.00301, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  66%|██████▌   | 1670/2524 [11:26<05:51,  2.43it/s, loss=0.00461, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  67%|██████▋   | 1680/2524 [11:30<05:46,  2.43it/s, loss=0.00461, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  67%|██████▋   | 1680/2524 [11:30<05:46,  2.43it/s, loss=0.00322, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  67%|██████▋   | 1690/2524 [11:34<05:42,  2.43it/s, loss=0.00322, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  67%|██████▋   | 1690/2524 [11:34<05:42,  2.43it/s, loss=0.00189, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  67%|██████▋   | 1700/2524 [11:38<05:38,  2.43it/s, loss=0.00189, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  67%|██████▋   | 1700/2524 [11:38<05:38,  2.43it/s, loss=0.0023, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 10:  68%|██████▊   | 1710/2524 [11:42<05:34,  2.43it/s, loss=0.0023, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  68%|██████▊   | 1710/2524 [11:42<05:34,  2.43it/s, loss=0.00279, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  68%|██████▊   | 1720/2524 [11:47<05:30,  2.43it/s, loss=0.00279, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  68%|██████▊   | 1720/2524 [11:47<05:30,  2.43it/s, loss=0.00217, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  69%|██████▊   | 1730/2524 [11:51<05:26,  2.43it/s, loss=0.00217, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  69%|██████▊   | 1730/2524 [11:51<05:26,  2.43it/s, loss=0.00481, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  69%|██████▉   | 1740/2524 [11:55<05:22,  2.43it/s, loss=0.00481, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  69%|██████▉   | 1740/2524 [11:55<05:22,  2.43it/s, loss=0.00468, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  69%|██████▉   | 1750/2524 [11:59<05:18,  2.43it/s, loss=0.00468, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  69%|██████▉   | 1750/2524 [11:59<05:18,  2.43it/s, loss=0.00145, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  70%|██████▉   | 1760/2524 [12:03<05:14,  2.43it/s, loss=0.00145, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  70%|██████▉   | 1760/2524 [12:03<05:14,  2.43it/s, loss=0.00206, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  70%|███████   | 1770/2524 [12:07<05:09,  2.43it/s, loss=0.00206, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  70%|███████   | 1770/2524 [12:07<05:09,  2.43it/s, loss=0.00244, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  71%|███████   | 1780/2524 [12:11<05:05,  2.43it/s, loss=0.00244, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  71%|███████   | 1780/2524 [12:11<05:05,  2.43it/s, loss=0.00195, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  71%|███████   | 1790/2524 [12:15<05:01,  2.43it/s, loss=0.00195, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  71%|███████   | 1790/2524 [12:15<05:01,  2.43it/s, loss=0.00232, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  71%|███████▏  | 1800/2524 [12:19<04:57,  2.43it/s, loss=0.00232, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  71%|███████▏  | 1800/2524 [12:19<04:57,  2.43it/s, loss=0.00337, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  72%|███████▏  | 1810/2524 [12:24<04:53,  2.43it/s, loss=0.00337, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  72%|███████▏  | 1810/2524 [12:24<04:53,  2.43it/s, loss=0.00391, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  72%|███████▏  | 1820/2524 [12:28<04:49,  2.43it/s, loss=0.00391, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  72%|███████▏  | 1820/2524 [12:28<04:49,  2.43it/s, loss=0.00306, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  73%|███████▎  | 1830/2524 [12:32<04:45,  2.43it/s, loss=0.00306, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  73%|███████▎  | 1830/2524 [12:32<04:45,  2.43it/s, loss=0.00232, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  73%|███████▎  | 1840/2524 [12:36<04:41,  2.43it/s, loss=0.00232, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  73%|███████▎  | 1840/2524 [12:36<04:41,  2.43it/s, loss=0.00214, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  73%|███████▎  | 1850/2524 [12:40<04:37,  2.43it/s, loss=0.00214, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  73%|███████▎  | 1850/2524 [12:40<04:37,  2.43it/s, loss=0.00133, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  74%|███████▎  | 1860/2524 [12:44<04:32,  2.43it/s, loss=0.00133, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  74%|███████▎  | 1860/2524 [12:44<04:32,  2.43it/s, loss=0.000792, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  74%|███████▍  | 1870/2524 [12:48<04:28,  2.43it/s, loss=0.000792, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  74%|███████▍  | 1870/2524 [12:48<04:28,  2.43it/s, loss=0.0016, v_num=3, val_loss=0.306, val_f1=63.60]  Epoch 10:  74%|███████▍  | 1880/2524 [12:52<04:24,  2.43it/s, loss=0.0016, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  74%|███████▍  | 1880/2524 [12:52<04:24,  2.43it/s, loss=0.00268, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  75%|███████▍  | 1890/2524 [12:57<04:20,  2.43it/s, loss=0.00268, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  75%|███████▍  | 1890/2524 [12:57<04:20,  2.43it/s, loss=0.00287, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  75%|███████▌  | 1900/2524 [13:01<04:16,  2.43it/s, loss=0.00287, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  75%|███████▌  | 1900/2524 [13:01<04:16,  2.43it/s, loss=0.00299, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  76%|███████▌  | 1910/2524 [13:05<04:12,  2.43it/s, loss=0.00299, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  76%|███████▌  | 1910/2524 [13:05<04:12,  2.43it/s, loss=0.00386, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  76%|███████▌  | 1920/2524 [13:09<04:08,  2.43it/s, loss=0.00386, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  76%|███████▌  | 1920/2524 [13:09<04:08,  2.43it/s, loss=0.0032, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 10:  76%|███████▋  | 1930/2524 [13:13<04:04,  2.43it/s, loss=0.0032, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  76%|███████▋  | 1930/2524 [13:13<04:04,  2.43it/s, loss=0.0032, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  77%|███████▋  | 1940/2524 [13:17<04:00,  2.43it/s, loss=0.0032, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  77%|███████▋  | 1940/2524 [13:17<04:00,  2.43it/s, loss=0.00375, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  77%|███████▋  | 1950/2524 [13:21<03:55,  2.43it/s, loss=0.00375, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  77%|███████▋  | 1950/2524 [13:21<03:55,  2.43it/s, loss=0.00218, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  78%|███████▊  | 1960/2524 [13:25<03:51,  2.43it/s, loss=0.00218, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  78%|███████▊  | 1960/2524 [13:25<03:51,  2.43it/s, loss=0.00202, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  78%|███████▊  | 1970/2524 [13:29<03:47,  2.43it/s, loss=0.00202, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  78%|███████▊  | 1970/2524 [13:29<03:47,  2.43it/s, loss=0.00235, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  78%|███████▊  | 1980/2524 [13:34<03:43,  2.43it/s, loss=0.00235, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  78%|███████▊  | 1980/2524 [13:34<03:43,  2.43it/s, loss=0.00213, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  79%|███████▉  | 1990/2524 [13:38<03:39,  2.43it/s, loss=0.00213, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  79%|███████▉  | 1990/2524 [13:38<03:39,  2.43it/s, loss=0.00178, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  79%|███████▉  | 2000/2524 [13:42<03:35,  2.43it/s, loss=0.00178, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  79%|███████▉  | 2000/2524 [13:42<03:35,  2.43it/s, loss=0.00158, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  80%|███████▉  | 2010/2524 [13:46<03:31,  2.43it/s, loss=0.00158, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  80%|███████▉  | 2010/2524 [13:46<03:31,  2.43it/s, loss=0.00278, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  80%|████████  | 2020/2524 [13:50<03:27,  2.43it/s, loss=0.00278, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  80%|████████  | 2020/2524 [13:50<03:27,  2.43it/s, loss=0.00325, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  80%|████████  | 2030/2524 [13:54<03:23,  2.43it/s, loss=0.00325, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  80%|████████  | 2030/2524 [13:54<03:23,  2.43it/s, loss=0.00306, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  81%|████████  | 2040/2524 [13:58<03:18,  2.43it/s, loss=0.00306, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  81%|████████  | 2040/2524 [13:58<03:18,  2.43it/s, loss=0.00332, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  81%|████████  | 2050/2524 [14:02<03:14,  2.43it/s, loss=0.00332, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  81%|████████  | 2050/2524 [14:02<03:14,  2.43it/s, loss=0.00222, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  82%|████████▏ | 2060/2524 [14:06<03:10,  2.43it/s, loss=0.00222, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  82%|████████▏ | 2060/2524 [14:06<03:10,  2.43it/s, loss=0.000948, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  82%|████████▏ | 2070/2524 [14:11<03:06,  2.43it/s, loss=0.000948, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  82%|████████▏ | 2070/2524 [14:11<03:06,  2.43it/s, loss=0.00196, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 10:  82%|████████▏ | 2080/2524 [14:15<03:02,  2.43it/s, loss=0.00196, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  82%|████████▏ | 2080/2524 [14:15<03:02,  2.43it/s, loss=0.00377, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  83%|████████▎ | 2090/2524 [14:19<02:58,  2.43it/s, loss=0.00377, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  83%|████████▎ | 2090/2524 [14:19<02:58,  2.43it/s, loss=0.00501, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  83%|████████▎ | 2100/2524 [14:23<02:54,  2.43it/s, loss=0.00501, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  83%|████████▎ | 2100/2524 [14:23<02:54,  2.43it/s, loss=0.00415, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  84%|████████▎ | 2110/2524 [14:27<02:50,  2.43it/s, loss=0.00415, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  84%|████████▎ | 2110/2524 [14:27<02:50,  2.43it/s, loss=0.00275, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  84%|████████▍ | 2120/2524 [14:31<02:46,  2.43it/s, loss=0.00275, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  84%|████████▍ | 2120/2524 [14:31<02:46,  2.43it/s, loss=0.00342, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  84%|████████▍ | 2130/2524 [14:35<02:41,  2.43it/s, loss=0.00342, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  84%|████████▍ | 2130/2524 [14:35<02:41,  2.43it/s, loss=0.00429, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  85%|████████▍ | 2140/2524 [14:39<02:37,  2.43it/s, loss=0.00429, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  85%|████████▍ | 2140/2524 [14:39<02:37,  2.43it/s, loss=0.00339, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  85%|████████▌ | 2150/2524 [14:43<02:33,  2.43it/s, loss=0.00339, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  85%|████████▌ | 2150/2524 [14:43<02:33,  2.43it/s, loss=0.00166, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  86%|████████▌ | 2160/2524 [14:48<02:29,  2.43it/s, loss=0.00166, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  86%|████████▌ | 2160/2524 [14:48<02:29,  2.43it/s, loss=0.00262, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  86%|████████▌ | 2170/2524 [14:52<02:25,  2.43it/s, loss=0.00262, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  86%|████████▌ | 2170/2524 [14:52<02:25,  2.43it/s, loss=0.00337, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  86%|████████▋ | 2180/2524 [14:56<02:21,  2.43it/s, loss=0.00337, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  86%|████████▋ | 2180/2524 [14:56<02:21,  2.43it/s, loss=0.00221, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  87%|████████▋ | 2190/2524 [15:00<02:17,  2.43it/s, loss=0.00221, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  87%|████████▋ | 2190/2524 [15:00<02:17,  2.43it/s, loss=0.00225, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  87%|████████▋ | 2200/2524 [15:04<02:13,  2.43it/s, loss=0.00225, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  87%|████████▋ | 2200/2524 [15:04<02:13,  2.43it/s, loss=0.0026, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 10:  88%|████████▊ | 2210/2524 [15:08<02:09,  2.43it/s, loss=0.0026, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  88%|████████▊ | 2210/2524 [15:08<02:09,  2.43it/s, loss=0.00316, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  88%|████████▊ | 2220/2524 [15:12<02:04,  2.43it/s, loss=0.00316, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  88%|████████▊ | 2220/2524 [15:12<02:04,  2.43it/s, loss=0.00259, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  88%|████████▊ | 2230/2524 [15:16<02:00,  2.43it/s, loss=0.00259, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  88%|████████▊ | 2230/2524 [15:16<02:00,  2.43it/s, loss=0.00161, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  89%|████████▊ | 2240/2524 [15:20<01:56,  2.43it/s, loss=0.00161, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  89%|████████▊ | 2240/2524 [15:20<01:56,  2.43it/s, loss=0.0023, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 10:  89%|████████▉ | 2250/2524 [15:25<01:52,  2.43it/s, loss=0.0023, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  89%|████████▉ | 2250/2524 [15:25<01:52,  2.43it/s, loss=0.00245, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  90%|████████▉ | 2260/2524 [15:29<01:48,  2.43it/s, loss=0.00245, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  90%|████████▉ | 2260/2524 [15:29<01:48,  2.43it/s, loss=0.00165, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  90%|████████▉ | 2270/2524 [15:33<01:44,  2.43it/s, loss=0.00165, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  90%|████████▉ | 2270/2524 [15:33<01:44,  2.43it/s, loss=0.00318, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  90%|█████████ | 2280/2524 [15:37<01:40,  2.43it/s, loss=0.00318, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  90%|█████████ | 2280/2524 [15:37<01:40,  2.43it/s, loss=0.00406, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  91%|█████████ | 2290/2524 [15:41<01:36,  2.43it/s, loss=0.00406, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  91%|█████████ | 2290/2524 [15:41<01:36,  2.43it/s, loss=0.00451, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  91%|█████████ | 2300/2524 [15:45<01:32,  2.43it/s, loss=0.00451, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  91%|█████████ | 2300/2524 [15:45<01:32,  2.43it/s, loss=0.00381, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  92%|█████████▏| 2310/2524 [15:49<01:27,  2.43it/s, loss=0.00381, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  92%|█████████▏| 2310/2524 [15:49<01:27,  2.43it/s, loss=0.00144, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  92%|█████████▏| 2320/2524 [15:53<01:23,  2.43it/s, loss=0.00144, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  92%|█████████▏| 2320/2524 [15:53<01:23,  2.43it/s, loss=0.00184, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  92%|█████████▏| 2330/2524 [15:57<01:19,  2.43it/s, loss=0.00184, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  92%|█████████▏| 2330/2524 [15:57<01:19,  2.43it/s, loss=0.00338, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  93%|█████████▎| 2340/2524 [16:02<01:15,  2.43it/s, loss=0.00338, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  93%|█████████▎| 2340/2524 [16:02<01:15,  2.43it/s, loss=0.00353, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  93%|█████████▎| 2350/2524 [16:06<01:11,  2.43it/s, loss=0.00353, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  93%|█████████▎| 2350/2524 [16:06<01:11,  2.43it/s, loss=0.0029, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 10:  94%|█████████▎| 2360/2524 [16:10<01:07,  2.43it/s, loss=0.0029, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  94%|█████████▎| 2360/2524 [16:10<01:07,  2.43it/s, loss=0.0031, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  94%|█████████▍| 2370/2524 [16:14<01:03,  2.43it/s, loss=0.0031, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  94%|█████████▍| 2370/2524 [16:14<01:03,  2.43it/s, loss=0.0031, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  94%|█████████▍| 2380/2524 [16:18<00:59,  2.43it/s, loss=0.0031, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  94%|█████████▍| 2380/2524 [16:18<00:59,  2.43it/s, loss=0.00315, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  95%|█████████▍| 2390/2524 [16:22<00:55,  2.43it/s, loss=0.00315, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  95%|█████████▍| 2390/2524 [16:22<00:55,  2.43it/s, loss=0.00374, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  95%|█████████▌| 2400/2524 [16:26<00:50,  2.43it/s, loss=0.00374, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  95%|█████████▌| 2400/2524 [16:26<00:50,  2.43it/s, loss=0.00483, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  95%|█████████▌| 2410/2524 [16:30<00:46,  2.43it/s, loss=0.00483, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  95%|█████████▌| 2410/2524 [16:30<00:46,  2.43it/s, loss=0.00452, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  96%|█████████▌| 2420/2524 [16:35<00:42,  2.43it/s, loss=0.00452, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  96%|█████████▌| 2420/2524 [16:35<00:42,  2.43it/s, loss=0.00272, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  96%|█████████▋| 2430/2524 [16:39<00:38,  2.43it/s, loss=0.00272, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  96%|█████████▋| 2430/2524 [16:39<00:38,  2.43it/s, loss=0.00217, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  97%|█████████▋| 2440/2524 [16:43<00:34,  2.43it/s, loss=0.00217, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  97%|█████████▋| 2440/2524 [16:43<00:34,  2.43it/s, loss=0.00381, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  97%|█████████▋| 2450/2524 [16:47<00:30,  2.43it/s, loss=0.00381, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  97%|█████████▋| 2450/2524 [16:47<00:30,  2.43it/s, loss=0.00368, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  97%|█████████▋| 2460/2524 [16:51<00:26,  2.43it/s, loss=0.00368, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  97%|█████████▋| 2460/2524 [16:51<00:26,  2.43it/s, loss=0.00228, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  98%|█████████▊| 2470/2524 [16:55<00:22,  2.43it/s, loss=0.00228, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  98%|█████████▊| 2470/2524 [16:55<00:22,  2.43it/s, loss=0.00356, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  98%|█████████▊| 2480/2524 [16:59<00:18,  2.43it/s, loss=0.00356, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  98%|█████████▊| 2480/2524 [16:59<00:18,  2.43it/s, loss=0.00367, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  99%|█████████▊| 2490/2524 [17:03<00:13,  2.43it/s, loss=0.00367, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  99%|█████████▊| 2490/2524 [17:03<00:13,  2.43it/s, loss=0.00205, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  99%|█████████▉| 2500/2524 [17:07<00:09,  2.43it/s, loss=0.00205, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  99%|█████████▉| 2500/2524 [17:07<00:09,  2.43it/s, loss=0.00224, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  99%|█████████▉| 2510/2524 [17:12<00:05,  2.43it/s, loss=0.00224, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:  99%|█████████▉| 2510/2524 [17:12<00:05,  2.43it/s, loss=0.00328, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10: 100%|█████████▉| 2520/2524 [17:16<00:01,  2.43it/s, loss=0.00328, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10: 100%|█████████▉| 2520/2524 [17:16<00:01,  2.43it/s, loss=0.00277, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10: 100%|██████████| 2524/2524 [17:17<00:00,  2.43it/s, loss=0.00277, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10: 100%|██████████| 2524/2524 [17:17<00:00,  2.43it/s, loss=0.00186, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10: 100%|██████████| 2524/2524 [17:17<00:00,  2.43it/s, loss=0.00186, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 10:   0%|          | 0/2524 [00:00<?, ?it/s, loss=0.00186, v_num=3, val_loss=0.306, val_f1=63.60]           Epoch 11:   0%|          | 0/2524 [00:00<?, ?it/s, loss=0.00186, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   0%|          | 10/2524 [00:04<18:39,  2.25it/s, loss=0.00186, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   0%|          | 10/2524 [00:04<18:42,  2.24it/s, loss=0.00256, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   1%|          | 20/2524 [00:08<17:50,  2.34it/s, loss=0.00256, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   1%|          | 20/2524 [00:08<17:51,  2.34it/s, loss=0.00375, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   1%|          | 30/2524 [00:12<17:30,  2.37it/s, loss=0.00375, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   1%|          | 30/2524 [00:12<17:31,  2.37it/s, loss=0.00537, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   2%|▏         | 40/2524 [00:16<17:29,  2.37it/s, loss=0.00537, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   2%|▏         | 40/2524 [00:16<17:30,  2.37it/s, loss=0.00472, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   2%|▏         | 50/2524 [00:20<17:18,  2.38it/s, loss=0.00472, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   2%|▏         | 50/2524 [00:21<17:19,  2.38it/s, loss=0.0025, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 11:   2%|▏         | 60/2524 [00:25<17:10,  2.39it/s, loss=0.0025, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   2%|▏         | 60/2524 [00:25<17:10,  2.39it/s, loss=0.00208, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   3%|▎         | 70/2524 [00:29<17:02,  2.40it/s, loss=0.00208, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   3%|▎         | 70/2524 [00:29<17:03,  2.40it/s, loss=0.00239, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   3%|▎         | 80/2524 [00:33<16:56,  2.40it/s, loss=0.00239, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   3%|▎         | 80/2524 [00:33<16:56,  2.40it/s, loss=0.00288, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   4%|▎         | 90/2524 [00:37<16:52,  2.41it/s, loss=0.00288, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   4%|▎         | 90/2524 [00:37<16:52,  2.40it/s, loss=0.00352, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   4%|▍         | 100/2524 [00:41<16:46,  2.41it/s, loss=0.00352, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   4%|▍         | 100/2524 [00:41<16:46,  2.41it/s, loss=0.00409, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   4%|▍         | 110/2524 [00:45<16:40,  2.41it/s, loss=0.00409, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   4%|▍         | 110/2524 [00:45<16:41,  2.41it/s, loss=0.00362, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   5%|▍         | 120/2524 [00:49<16:35,  2.41it/s, loss=0.00362, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   5%|▍         | 120/2524 [00:49<16:35,  2.41it/s, loss=0.003, v_num=3, val_loss=0.306, val_f1=63.60]  Epoch 11:   5%|▌         | 130/2524 [00:53<16:30,  2.42it/s, loss=0.003, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   5%|▌         | 130/2524 [00:53<16:30,  2.42it/s, loss=0.00417, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   6%|▌         | 140/2524 [00:58<16:28,  2.41it/s, loss=0.00417, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   6%|▌         | 140/2524 [00:58<16:28,  2.41it/s, loss=0.00388, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   6%|▌         | 150/2524 [01:02<16:23,  2.41it/s, loss=0.00388, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   6%|▌         | 150/2524 [01:02<16:23,  2.41it/s, loss=0.00365, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   6%|▋         | 160/2524 [01:06<16:18,  2.42it/s, loss=0.00365, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   6%|▋         | 160/2524 [01:06<16:18,  2.42it/s, loss=0.0037, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 11:   7%|▋         | 170/2524 [01:10<16:13,  2.42it/s, loss=0.0037, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   7%|▋         | 170/2524 [01:10<16:13,  2.42it/s, loss=0.00336, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   7%|▋         | 180/2524 [01:14<16:08,  2.42it/s, loss=0.00336, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   7%|▋         | 180/2524 [01:14<16:09,  2.42it/s, loss=0.00358, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   8%|▊         | 190/2524 [01:18<16:04,  2.42it/s, loss=0.00358, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   8%|▊         | 190/2524 [01:18<16:05,  2.42it/s, loss=0.00313, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   8%|▊         | 200/2524 [01:22<16:00,  2.42it/s, loss=0.00313, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   8%|▊         | 200/2524 [01:22<16:00,  2.42it/s, loss=0.00225, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   8%|▊         | 210/2524 [01:26<15:55,  2.42it/s, loss=0.00225, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   8%|▊         | 210/2524 [01:26<15:55,  2.42it/s, loss=0.00196, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   9%|▊         | 220/2524 [01:30<15:51,  2.42it/s, loss=0.00196, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   9%|▊         | 220/2524 [01:30<15:51,  2.42it/s, loss=0.00229, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   9%|▉         | 230/2524 [01:34<15:46,  2.42it/s, loss=0.00229, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   9%|▉         | 230/2524 [01:34<15:46,  2.42it/s, loss=0.00214, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  10%|▉         | 240/2524 [01:39<15:43,  2.42it/s, loss=0.00214, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  10%|▉         | 240/2524 [01:39<15:43,  2.42it/s, loss=0.00225, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  10%|▉         | 250/2524 [01:43<15:39,  2.42it/s, loss=0.00225, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  10%|▉         | 250/2524 [01:43<15:39,  2.42it/s, loss=0.00212, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  10%|█         | 260/2524 [01:47<15:34,  2.42it/s, loss=0.00212, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  10%|█         | 260/2524 [01:47<15:34,  2.42it/s, loss=0.00234, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  11%|█         | 270/2524 [01:51<15:30,  2.42it/s, loss=0.00234, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  11%|█         | 270/2524 [01:51<15:30,  2.42it/s, loss=0.00516, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  11%|█         | 280/2524 [01:55<15:25,  2.42it/s, loss=0.00516, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  11%|█         | 280/2524 [01:55<15:26,  2.42it/s, loss=0.00536, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  11%|█▏        | 290/2524 [01:59<15:21,  2.42it/s, loss=0.00536, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  11%|█▏        | 290/2524 [01:59<15:22,  2.42it/s, loss=0.00261, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  12%|█▏        | 300/2524 [02:03<15:17,  2.42it/s, loss=0.00261, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  12%|█▏        | 300/2524 [02:03<15:17,  2.42it/s, loss=0.00192, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  12%|█▏        | 310/2524 [02:07<15:13,  2.42it/s, loss=0.00192, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  12%|█▏        | 310/2524 [02:07<15:13,  2.42it/s, loss=0.00163, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  13%|█▎        | 320/2524 [02:11<15:08,  2.42it/s, loss=0.00163, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  13%|█▎        | 320/2524 [02:11<15:08,  2.42it/s, loss=0.00175, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  13%|█▎        | 330/2524 [02:16<15:04,  2.43it/s, loss=0.00175, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  13%|█▎        | 330/2524 [02:16<15:04,  2.43it/s, loss=0.00177, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  13%|█▎        | 340/2524 [02:20<15:01,  2.42it/s, loss=0.00177, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  13%|█▎        | 340/2524 [02:20<15:01,  2.42it/s, loss=0.00287, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  14%|█▍        | 350/2524 [02:24<14:56,  2.42it/s, loss=0.00287, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  14%|█▍        | 350/2524 [02:24<14:57,  2.42it/s, loss=0.00282, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  14%|█▍        | 360/2524 [02:28<14:52,  2.42it/s, loss=0.00282, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  14%|█▍        | 360/2524 [02:28<14:52,  2.42it/s, loss=0.00379, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  15%|█▍        | 370/2524 [02:32<14:48,  2.42it/s, loss=0.00379, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  15%|█▍        | 370/2524 [02:32<14:48,  2.42it/s, loss=0.00405, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  15%|█▌        | 380/2524 [02:36<14:44,  2.43it/s, loss=0.00405, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  15%|█▌        | 380/2524 [02:36<14:44,  2.42it/s, loss=0.0018, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 11:  15%|█▌        | 390/2524 [02:40<14:40,  2.42it/s, loss=0.0018, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  15%|█▌        | 390/2524 [02:40<14:40,  2.42it/s, loss=0.00189, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  16%|█▌        | 400/2524 [02:44<14:35,  2.43it/s, loss=0.00189, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  16%|█▌        | 400/2524 [02:44<14:35,  2.42it/s, loss=0.00264, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  16%|█▌        | 410/2524 [02:49<14:31,  2.43it/s, loss=0.00264, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  16%|█▌        | 410/2524 [02:49<14:31,  2.43it/s, loss=0.00314, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  17%|█▋        | 420/2524 [02:53<14:27,  2.43it/s, loss=0.00314, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  17%|█▋        | 420/2524 [02:53<14:27,  2.43it/s, loss=0.00288, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  17%|█▋        | 430/2524 [02:57<14:23,  2.43it/s, loss=0.00288, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  17%|█▋        | 430/2524 [02:57<14:23,  2.43it/s, loss=0.00212, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  17%|█▋        | 440/2524 [03:01<14:19,  2.42it/s, loss=0.00212, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  17%|█▋        | 440/2524 [03:01<14:19,  2.42it/s, loss=0.00184, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  18%|█▊        | 450/2524 [03:05<14:15,  2.42it/s, loss=0.00184, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  18%|█▊        | 450/2524 [03:05<14:15,  2.42it/s, loss=0.00241, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  18%|█▊        | 460/2524 [03:09<14:11,  2.43it/s, loss=0.00241, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  18%|█▊        | 460/2524 [03:09<14:11,  2.43it/s, loss=0.0033, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 11:  19%|█▊        | 470/2524 [03:13<14:06,  2.43it/s, loss=0.0033, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  19%|█▊        | 470/2524 [03:13<14:06,  2.43it/s, loss=0.00364, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  19%|█▉        | 480/2524 [03:17<14:02,  2.43it/s, loss=0.00364, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  19%|█▉        | 480/2524 [03:17<14:02,  2.43it/s, loss=0.00275, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  19%|█▉        | 490/2524 [03:22<13:58,  2.43it/s, loss=0.00275, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  19%|█▉        | 490/2524 [03:22<13:58,  2.43it/s, loss=0.00215, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  20%|█▉        | 500/2524 [03:26<13:54,  2.43it/s, loss=0.00215, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  20%|█▉        | 500/2524 [03:26<13:54,  2.43it/s, loss=0.00246, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  20%|██        | 510/2524 [03:30<13:50,  2.43it/s, loss=0.00246, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  20%|██        | 510/2524 [03:30<13:50,  2.43it/s, loss=0.00226, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  21%|██        | 520/2524 [03:34<13:45,  2.43it/s, loss=0.00226, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  21%|██        | 520/2524 [03:34<13:45,  2.43it/s, loss=0.00224, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  21%|██        | 530/2524 [03:38<13:41,  2.43it/s, loss=0.00224, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  21%|██        | 530/2524 [03:38<13:41,  2.43it/s, loss=0.00214, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  21%|██▏       | 540/2524 [03:42<13:37,  2.43it/s, loss=0.00214, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  21%|██▏       | 540/2524 [03:42<13:38,  2.43it/s, loss=0.00197, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  22%|██▏       | 550/2524 [03:46<13:33,  2.43it/s, loss=0.00197, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  22%|██▏       | 550/2524 [03:46<13:33,  2.43it/s, loss=0.0025, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 11:  22%|██▏       | 560/2524 [03:50<13:29,  2.43it/s, loss=0.0025, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  22%|██▏       | 560/2524 [03:50<13:29,  2.43it/s, loss=0.00277, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  23%|██▎       | 570/2524 [03:54<13:25,  2.43it/s, loss=0.00277, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  23%|██▎       | 570/2524 [03:54<13:25,  2.43it/s, loss=0.00243, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  23%|██▎       | 580/2524 [03:58<13:21,  2.43it/s, loss=0.00243, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  23%|██▎       | 580/2524 [03:59<13:21,  2.43it/s, loss=0.00285, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  23%|██▎       | 590/2524 [04:03<13:17,  2.43it/s, loss=0.00285, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  23%|██▎       | 590/2524 [04:03<13:17,  2.43it/s, loss=0.0039, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 11:  24%|██▍       | 600/2524 [04:07<13:12,  2.43it/s, loss=0.0039, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  24%|██▍       | 600/2524 [04:07<13:12,  2.43it/s, loss=0.0044, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  24%|██▍       | 610/2524 [04:11<13:08,  2.43it/s, loss=0.0044, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  24%|██▍       | 610/2524 [04:11<13:08,  2.43it/s, loss=0.00423, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  25%|██▍       | 620/2524 [04:15<13:04,  2.43it/s, loss=0.00423, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  25%|██▍       | 620/2524 [04:15<13:04,  2.43it/s, loss=0.00367, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  25%|██▍       | 630/2524 [04:19<13:00,  2.43it/s, loss=0.00367, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  25%|██▍       | 630/2524 [04:19<13:00,  2.43it/s, loss=0.00255, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  25%|██▌       | 640/2524 [04:23<12:56,  2.43it/s, loss=0.00255, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  25%|██▌       | 640/2524 [04:23<12:56,  2.43it/s, loss=0.00131, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  26%|██▌       | 650/2524 [04:27<12:52,  2.43it/s, loss=0.00131, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  26%|██▌       | 650/2524 [04:27<12:52,  2.43it/s, loss=0.00114, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  26%|██▌       | 660/2524 [04:31<12:48,  2.43it/s, loss=0.00114, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  26%|██▌       | 660/2524 [04:31<12:48,  2.43it/s, loss=0.00142, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  27%|██▋       | 670/2524 [04:36<12:43,  2.43it/s, loss=0.00142, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  27%|██▋       | 670/2524 [04:36<12:43,  2.43it/s, loss=0.00345, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  27%|██▋       | 680/2524 [04:40<12:39,  2.43it/s, loss=0.00345, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  27%|██▋       | 680/2524 [04:40<12:39,  2.43it/s, loss=0.00376, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  27%|██▋       | 690/2524 [04:44<12:35,  2.43it/s, loss=0.00376, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  27%|██▋       | 690/2524 [04:44<12:35,  2.43it/s, loss=0.00241, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  28%|██▊       | 700/2524 [04:48<12:31,  2.43it/s, loss=0.00241, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  28%|██▊       | 700/2524 [04:48<12:31,  2.43it/s, loss=0.00307, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  28%|██▊       | 710/2524 [04:52<12:27,  2.43it/s, loss=0.00307, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  28%|██▊       | 710/2524 [04:52<12:27,  2.43it/s, loss=0.00262, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  29%|██▊       | 720/2524 [04:56<12:23,  2.43it/s, loss=0.00262, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  29%|██▊       | 720/2524 [04:56<12:23,  2.43it/s, loss=0.00186, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  29%|██▉       | 730/2524 [05:00<12:18,  2.43it/s, loss=0.00186, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  29%|██▉       | 730/2524 [05:00<12:18,  2.43it/s, loss=0.00268, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  29%|██▉       | 740/2524 [05:04<12:15,  2.43it/s, loss=0.00268, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  29%|██▉       | 740/2524 [05:04<12:15,  2.43it/s, loss=0.00309, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  30%|██▉       | 750/2524 [05:08<12:10,  2.43it/s, loss=0.00309, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  30%|██▉       | 750/2524 [05:08<12:10,  2.43it/s, loss=0.00361, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  30%|███       | 760/2524 [05:13<12:06,  2.43it/s, loss=0.00361, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  30%|███       | 760/2524 [05:13<12:06,  2.43it/s, loss=0.00371, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  31%|███       | 770/2524 [05:17<12:02,  2.43it/s, loss=0.00371, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  31%|███       | 770/2524 [05:17<12:02,  2.43it/s, loss=0.00248, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  31%|███       | 780/2524 [05:21<11:58,  2.43it/s, loss=0.00248, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  31%|███       | 780/2524 [05:21<11:58,  2.43it/s, loss=0.00223, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  31%|███▏      | 790/2524 [05:25<11:54,  2.43it/s, loss=0.00223, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  31%|███▏      | 790/2524 [05:25<11:54,  2.43it/s, loss=0.00248, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  32%|███▏      | 800/2524 [05:29<11:50,  2.43it/s, loss=0.00248, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  32%|███▏      | 800/2524 [05:29<11:50,  2.43it/s, loss=0.00231, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  32%|███▏      | 810/2524 [05:33<11:45,  2.43it/s, loss=0.00231, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  32%|███▏      | 810/2524 [05:33<11:45,  2.43it/s, loss=0.00212, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  32%|███▏      | 820/2524 [05:37<11:41,  2.43it/s, loss=0.00212, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  32%|███▏      | 820/2524 [05:37<11:41,  2.43it/s, loss=0.00162, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  33%|███▎      | 830/2524 [05:41<11:37,  2.43it/s, loss=0.00162, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  33%|███▎      | 830/2524 [05:41<11:37,  2.43it/s, loss=0.00108, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  33%|███▎      | 840/2524 [05:46<11:33,  2.43it/s, loss=0.00108, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  33%|███▎      | 840/2524 [05:46<11:33,  2.43it/s, loss=0.00177, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  34%|███▎      | 850/2524 [05:50<11:29,  2.43it/s, loss=0.00177, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  34%|███▎      | 850/2524 [05:50<11:29,  2.43it/s, loss=0.0023, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 11:  34%|███▍      | 860/2524 [05:54<11:25,  2.43it/s, loss=0.0023, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  34%|███▍      | 860/2524 [05:54<11:25,  2.43it/s, loss=0.00316, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  34%|███▍      | 870/2524 [05:58<11:21,  2.43it/s, loss=0.00316, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  34%|███▍      | 870/2524 [05:58<11:21,  2.43it/s, loss=0.00328, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  35%|███▍      | 880/2524 [06:02<11:17,  2.43it/s, loss=0.00328, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  35%|███▍      | 880/2524 [06:02<11:17,  2.43it/s, loss=0.00312, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  35%|███▌      | 890/2524 [06:06<11:12,  2.43it/s, loss=0.00312, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  35%|███▌      | 890/2524 [06:06<11:12,  2.43it/s, loss=0.00311, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  36%|███▌      | 900/2524 [06:10<11:08,  2.43it/s, loss=0.00311, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  36%|███▌      | 900/2524 [06:10<11:08,  2.43it/s, loss=0.00152, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  36%|███▌      | 910/2524 [06:14<11:04,  2.43it/s, loss=0.00152, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  36%|███▌      | 910/2524 [06:14<11:04,  2.43it/s, loss=0.001, v_num=3, val_loss=0.306, val_f1=63.60]  Epoch 11:  36%|███▋      | 920/2524 [06:18<11:00,  2.43it/s, loss=0.001, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  36%|███▋      | 920/2524 [06:18<11:00,  2.43it/s, loss=0.00229, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  37%|███▋      | 930/2524 [06:22<10:56,  2.43it/s, loss=0.00229, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  37%|███▋      | 930/2524 [06:22<10:56,  2.43it/s, loss=0.00503, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  37%|███▋      | 940/2524 [06:27<10:52,  2.43it/s, loss=0.00503, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  37%|███▋      | 940/2524 [06:27<10:52,  2.43it/s, loss=0.00381, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  38%|███▊      | 950/2524 [06:31<10:48,  2.43it/s, loss=0.00381, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  38%|███▊      | 950/2524 [06:31<10:48,  2.43it/s, loss=0.00154, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  38%|███▊      | 960/2524 [06:35<10:44,  2.43it/s, loss=0.00154, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  38%|███▊      | 960/2524 [06:35<10:44,  2.43it/s, loss=0.00243, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  38%|███▊      | 970/2524 [06:39<10:39,  2.43it/s, loss=0.00243, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  38%|███▊      | 970/2524 [06:39<10:39,  2.43it/s, loss=0.00247, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  39%|███▉      | 980/2524 [06:43<10:35,  2.43it/s, loss=0.00247, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  39%|███▉      | 980/2524 [06:43<10:35,  2.43it/s, loss=0.00289, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  39%|███▉      | 990/2524 [06:47<10:31,  2.43it/s, loss=0.00289, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  39%|███▉      | 990/2524 [06:47<10:31,  2.43it/s, loss=0.00306, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  40%|███▉      | 1000/2524 [06:51<10:27,  2.43it/s, loss=0.00306, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  40%|███▉      | 1000/2524 [06:51<10:27,  2.43it/s, loss=0.00281, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  40%|████      | 1010/2524 [06:55<10:23,  2.43it/s, loss=0.00281, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  40%|████      | 1010/2524 [06:55<10:23,  2.43it/s, loss=0.00317, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  40%|████      | 1020/2524 [06:59<10:19,  2.43it/s, loss=0.00317, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  40%|████      | 1020/2524 [06:59<10:19,  2.43it/s, loss=0.00456, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  41%|████      | 1030/2524 [07:04<10:15,  2.43it/s, loss=0.00456, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  41%|████      | 1030/2524 [07:04<10:15,  2.43it/s, loss=0.00341, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  41%|████      | 1040/2524 [07:08<10:11,  2.43it/s, loss=0.00341, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  41%|████      | 1040/2524 [07:08<10:11,  2.43it/s, loss=0.00164, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  42%|████▏     | 1050/2524 [07:12<10:06,  2.43it/s, loss=0.00164, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  42%|████▏     | 1050/2524 [07:12<10:06,  2.43it/s, loss=0.00141, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  42%|████▏     | 1060/2524 [07:16<10:02,  2.43it/s, loss=0.00141, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  42%|████▏     | 1060/2524 [07:16<10:02,  2.43it/s, loss=0.00149, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  42%|████▏     | 1070/2524 [07:20<09:58,  2.43it/s, loss=0.00149, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  42%|████▏     | 1070/2524 [07:20<09:58,  2.43it/s, loss=0.00373, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  43%|████▎     | 1080/2524 [07:24<09:54,  2.43it/s, loss=0.00373, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  43%|████▎     | 1080/2524 [07:24<09:54,  2.43it/s, loss=0.00528, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  43%|████▎     | 1090/2524 [07:28<09:50,  2.43it/s, loss=0.00528, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  43%|████▎     | 1090/2524 [07:28<09:50,  2.43it/s, loss=0.00425, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  44%|████▎     | 1100/2524 [07:32<09:46,  2.43it/s, loss=0.00425, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  44%|████▎     | 1100/2524 [07:32<09:46,  2.43it/s, loss=0.00237, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  44%|████▍     | 1110/2524 [07:36<09:42,  2.43it/s, loss=0.00237, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  44%|████▍     | 1110/2524 [07:37<09:42,  2.43it/s, loss=0.00145, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  44%|████▍     | 1120/2524 [07:41<09:37,  2.43it/s, loss=0.00145, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  44%|████▍     | 1120/2524 [07:41<09:38,  2.43it/s, loss=0.00141, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  45%|████▍     | 1130/2524 [07:45<09:33,  2.43it/s, loss=0.00141, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  45%|████▍     | 1130/2524 [07:45<09:33,  2.43it/s, loss=0.00338, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  45%|████▌     | 1140/2524 [07:49<09:29,  2.43it/s, loss=0.00338, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  45%|████▌     | 1140/2524 [07:49<09:29,  2.43it/s, loss=0.00361, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  46%|████▌     | 1150/2524 [07:53<09:25,  2.43it/s, loss=0.00361, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  46%|████▌     | 1150/2524 [07:53<09:25,  2.43it/s, loss=0.00297, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  46%|████▌     | 1160/2524 [07:57<09:21,  2.43it/s, loss=0.00297, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  46%|████▌     | 1160/2524 [07:57<09:21,  2.43it/s, loss=0.00589, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  46%|████▋     | 1170/2524 [08:01<09:17,  2.43it/s, loss=0.00589, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  46%|████▋     | 1170/2524 [08:01<09:17,  2.43it/s, loss=0.00512, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  47%|████▋     | 1180/2524 [08:05<09:13,  2.43it/s, loss=0.00512, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  47%|████▋     | 1180/2524 [08:05<09:13,  2.43it/s, loss=0.00216, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  47%|████▋     | 1190/2524 [08:09<09:09,  2.43it/s, loss=0.00216, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  47%|████▋     | 1190/2524 [08:09<09:09,  2.43it/s, loss=0.00288, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  48%|████▊     | 1200/2524 [08:14<09:05,  2.43it/s, loss=0.00288, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  48%|████▊     | 1200/2524 [08:14<09:05,  2.43it/s, loss=0.00259, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  48%|████▊     | 1210/2524 [08:18<09:00,  2.43it/s, loss=0.00259, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  48%|████▊     | 1210/2524 [08:18<09:00,  2.43it/s, loss=0.00115, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  48%|████▊     | 1220/2524 [08:22<08:56,  2.43it/s, loss=0.00115, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  48%|████▊     | 1220/2524 [08:22<08:56,  2.43it/s, loss=0.00136, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  49%|████▊     | 1230/2524 [08:26<08:52,  2.43it/s, loss=0.00136, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  49%|████▊     | 1230/2524 [08:26<08:52,  2.43it/s, loss=0.00222, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  49%|████▉     | 1240/2524 [08:30<08:48,  2.43it/s, loss=0.00222, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  49%|████▉     | 1240/2524 [08:30<08:48,  2.43it/s, loss=0.00368, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  50%|████▉     | 1250/2524 [08:34<08:44,  2.43it/s, loss=0.00368, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  50%|████▉     | 1250/2524 [08:34<08:44,  2.43it/s, loss=0.00361, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  50%|████▉     | 1260/2524 [08:38<08:40,  2.43it/s, loss=0.00361, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  50%|████▉     | 1260/2524 [08:38<08:40,  2.43it/s, loss=0.00237, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  50%|█████     | 1270/2524 [08:42<08:36,  2.43it/s, loss=0.00237, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  50%|█████     | 1270/2524 [08:42<08:36,  2.43it/s, loss=0.00189, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  51%|█████     | 1280/2524 [08:46<08:32,  2.43it/s, loss=0.00189, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  51%|█████     | 1280/2524 [08:46<08:32,  2.43it/s, loss=0.00263, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  51%|█████     | 1290/2524 [08:51<08:28,  2.43it/s, loss=0.00263, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  51%|█████     | 1290/2524 [08:51<08:28,  2.43it/s, loss=0.00257, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  52%|█████▏    | 1300/2524 [08:55<08:23,  2.43it/s, loss=0.00257, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  52%|█████▏    | 1300/2524 [08:55<08:23,  2.43it/s, loss=0.00254, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  52%|█████▏    | 1310/2524 [08:59<08:19,  2.43it/s, loss=0.00254, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  52%|█████▏    | 1310/2524 [08:59<08:19,  2.43it/s, loss=0.00398, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  52%|█████▏    | 1320/2524 [09:03<08:15,  2.43it/s, loss=0.00398, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  52%|█████▏    | 1320/2524 [09:03<08:15,  2.43it/s, loss=0.00318, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  53%|█████▎    | 1330/2524 [09:07<08:11,  2.43it/s, loss=0.00318, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  53%|█████▎    | 1330/2524 [09:07<08:11,  2.43it/s, loss=0.00161, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  53%|█████▎    | 1340/2524 [09:11<08:07,  2.43it/s, loss=0.00161, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  53%|█████▎    | 1340/2524 [09:11<08:07,  2.43it/s, loss=0.00182, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  53%|█████▎    | 1350/2524 [09:15<08:03,  2.43it/s, loss=0.00182, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  53%|█████▎    | 1350/2524 [09:15<08:03,  2.43it/s, loss=0.00284, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  54%|█████▍    | 1360/2524 [09:19<07:59,  2.43it/s, loss=0.00284, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  54%|█████▍    | 1360/2524 [09:19<07:59,  2.43it/s, loss=0.00363, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  54%|█████▍    | 1370/2524 [09:23<07:55,  2.43it/s, loss=0.00363, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  54%|█████▍    | 1370/2524 [09:23<07:55,  2.43it/s, loss=0.00262, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  55%|█████▍    | 1380/2524 [09:28<07:50,  2.43it/s, loss=0.00262, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  55%|█████▍    | 1380/2524 [09:28<07:50,  2.43it/s, loss=0.00375, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  55%|█████▌    | 1390/2524 [09:32<07:47,  2.43it/s, loss=0.00375, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  55%|█████▌    | 1390/2524 [09:32<07:47,  2.43it/s, loss=0.00392, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  55%|█████▌    | 1400/2524 [09:36<07:43,  2.43it/s, loss=0.00392, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  55%|█████▌    | 1400/2524 [09:36<07:43,  2.43it/s, loss=0.00131, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  56%|█████▌    | 1410/2524 [09:40<07:38,  2.43it/s, loss=0.00131, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  56%|█████▌    | 1410/2524 [09:40<07:38,  2.43it/s, loss=0.00231, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  56%|█████▋    | 1420/2524 [09:45<07:34,  2.43it/s, loss=0.00231, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  56%|█████▋    | 1420/2524 [09:45<07:34,  2.43it/s, loss=0.00307, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  57%|█████▋    | 1430/2524 [09:49<07:30,  2.43it/s, loss=0.00307, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  57%|█████▋    | 1430/2524 [09:49<07:30,  2.43it/s, loss=0.00246, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  57%|█████▋    | 1440/2524 [09:53<07:26,  2.43it/s, loss=0.00246, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  57%|█████▋    | 1440/2524 [09:53<07:26,  2.43it/s, loss=0.00197, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  57%|█████▋    | 1450/2524 [09:57<07:22,  2.43it/s, loss=0.00197, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  57%|█████▋    | 1450/2524 [09:57<07:22,  2.43it/s, loss=0.00199, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  58%|█████▊    | 1460/2524 [10:01<07:18,  2.43it/s, loss=0.00199, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  58%|█████▊    | 1460/2524 [10:01<07:18,  2.43it/s, loss=0.00205, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  58%|█████▊    | 1470/2524 [10:05<07:14,  2.43it/s, loss=0.00205, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  58%|█████▊    | 1470/2524 [10:05<07:14,  2.43it/s, loss=0.0021, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 11:  59%|█████▊    | 1480/2524 [10:09<07:10,  2.43it/s, loss=0.0021, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  59%|█████▊    | 1480/2524 [10:09<07:10,  2.43it/s, loss=0.00193, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  59%|█████▉    | 1490/2524 [10:13<07:06,  2.43it/s, loss=0.00193, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  59%|█████▉    | 1490/2524 [10:13<07:06,  2.43it/s, loss=0.00142, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  59%|█████▉    | 1500/2524 [10:17<07:01,  2.43it/s, loss=0.00142, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  59%|█████▉    | 1500/2524 [10:17<07:01,  2.43it/s, loss=0.00287, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  60%|█████▉    | 1510/2524 [10:22<06:57,  2.43it/s, loss=0.00287, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  60%|█████▉    | 1510/2524 [10:22<06:57,  2.43it/s, loss=0.00374, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  60%|██████    | 1520/2524 [10:26<06:53,  2.43it/s, loss=0.00374, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  60%|██████    | 1520/2524 [10:26<06:53,  2.43it/s, loss=0.00225, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  61%|██████    | 1530/2524 [10:30<06:49,  2.43it/s, loss=0.00225, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  61%|██████    | 1530/2524 [10:30<06:49,  2.43it/s, loss=0.00306, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  61%|██████    | 1540/2524 [10:34<06:45,  2.43it/s, loss=0.00306, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  61%|██████    | 1540/2524 [10:34<06:45,  2.43it/s, loss=0.00442, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  61%|██████▏   | 1550/2524 [10:38<06:41,  2.43it/s, loss=0.00442, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  61%|██████▏   | 1550/2524 [10:38<06:41,  2.43it/s, loss=0.00365, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  62%|██████▏   | 1560/2524 [10:42<06:37,  2.43it/s, loss=0.00365, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  62%|██████▏   | 1560/2524 [10:42<06:37,  2.43it/s, loss=0.00422, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  62%|██████▏   | 1570/2524 [10:46<06:32,  2.43it/s, loss=0.00422, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  62%|██████▏   | 1570/2524 [10:46<06:33,  2.43it/s, loss=0.00403, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  63%|██████▎   | 1580/2524 [10:50<06:28,  2.43it/s, loss=0.00403, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  63%|██████▎   | 1580/2524 [10:50<06:28,  2.43it/s, loss=0.00311, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  63%|██████▎   | 1590/2524 [10:54<06:24,  2.43it/s, loss=0.00311, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  63%|██████▎   | 1590/2524 [10:55<06:24,  2.43it/s, loss=0.00295, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  63%|██████▎   | 1600/2524 [10:59<06:20,  2.43it/s, loss=0.00295, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  63%|██████▎   | 1600/2524 [10:59<06:20,  2.43it/s, loss=0.00259, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  64%|██████▍   | 1610/2524 [11:03<06:16,  2.43it/s, loss=0.00259, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  64%|██████▍   | 1610/2524 [11:03<06:16,  2.43it/s, loss=0.00226, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  64%|██████▍   | 1620/2524 [11:07<06:12,  2.43it/s, loss=0.00226, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  64%|██████▍   | 1620/2524 [11:07<06:12,  2.43it/s, loss=0.00209, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  65%|██████▍   | 1630/2524 [11:11<06:08,  2.43it/s, loss=0.00209, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  65%|██████▍   | 1630/2524 [11:11<06:08,  2.43it/s, loss=0.00236, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  65%|██████▍   | 1640/2524 [11:15<06:04,  2.43it/s, loss=0.00236, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  65%|██████▍   | 1640/2524 [11:15<06:04,  2.43it/s, loss=0.00351, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  65%|██████▌   | 1650/2524 [11:19<06:00,  2.43it/s, loss=0.00351, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  65%|██████▌   | 1650/2524 [11:19<06:00,  2.43it/s, loss=0.00306, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  66%|██████▌   | 1660/2524 [11:23<05:55,  2.43it/s, loss=0.00306, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  66%|██████▌   | 1660/2524 [11:23<05:55,  2.43it/s, loss=0.00125, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  66%|██████▌   | 1670/2524 [11:27<05:51,  2.43it/s, loss=0.00125, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  66%|██████▌   | 1670/2524 [11:27<05:51,  2.43it/s, loss=0.00368, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  67%|██████▋   | 1680/2524 [11:31<05:47,  2.43it/s, loss=0.00368, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  67%|██████▋   | 1680/2524 [11:31<05:47,  2.43it/s, loss=0.00407, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  67%|██████▋   | 1690/2524 [11:36<05:43,  2.43it/s, loss=0.00407, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  67%|██████▋   | 1690/2524 [11:36<05:43,  2.43it/s, loss=0.00152, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  67%|██████▋   | 1700/2524 [11:40<05:39,  2.43it/s, loss=0.00152, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  67%|██████▋   | 1700/2524 [11:40<05:39,  2.43it/s, loss=0.00235, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  68%|██████▊   | 1710/2524 [11:44<05:35,  2.43it/s, loss=0.00235, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  68%|██████▊   | 1710/2524 [11:44<05:35,  2.43it/s, loss=0.00249, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  68%|██████▊   | 1720/2524 [11:48<05:31,  2.43it/s, loss=0.00249, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  68%|██████▊   | 1720/2524 [11:48<05:31,  2.43it/s, loss=0.0037, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 11:  69%|██████▊   | 1730/2524 [11:52<05:27,  2.43it/s, loss=0.0037, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  69%|██████▊   | 1730/2524 [11:52<05:27,  2.43it/s, loss=0.00358, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  69%|██████▉   | 1740/2524 [11:56<05:22,  2.43it/s, loss=0.00358, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  69%|██████▉   | 1740/2524 [11:56<05:22,  2.43it/s, loss=0.00154, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  69%|██████▉   | 1750/2524 [12:00<05:18,  2.43it/s, loss=0.00154, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  69%|██████▉   | 1750/2524 [12:00<05:18,  2.43it/s, loss=0.00178, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  70%|██████▉   | 1760/2524 [12:04<05:14,  2.43it/s, loss=0.00178, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  70%|██████▉   | 1760/2524 [12:04<05:14,  2.43it/s, loss=0.00182, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  70%|███████   | 1770/2524 [12:09<05:10,  2.43it/s, loss=0.00182, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  70%|███████   | 1770/2524 [12:09<05:10,  2.43it/s, loss=0.00211, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  71%|███████   | 1780/2524 [12:13<05:06,  2.43it/s, loss=0.00211, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  71%|███████   | 1780/2524 [12:13<05:06,  2.43it/s, loss=0.00351, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  71%|███████   | 1790/2524 [12:17<05:02,  2.43it/s, loss=0.00351, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  71%|███████   | 1790/2524 [12:17<05:02,  2.43it/s, loss=0.00456, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  71%|███████▏  | 1800/2524 [12:21<04:58,  2.43it/s, loss=0.00456, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  71%|███████▏  | 1800/2524 [12:21<04:58,  2.43it/s, loss=0.0042, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 11:  72%|███████▏  | 1810/2524 [12:25<04:54,  2.43it/s, loss=0.0042, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  72%|███████▏  | 1810/2524 [12:25<04:54,  2.43it/s, loss=0.00397, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  72%|███████▏  | 1820/2524 [12:29<04:49,  2.43it/s, loss=0.00397, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  72%|███████▏  | 1820/2524 [12:29<04:49,  2.43it/s, loss=0.0034, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 11:  73%|███████▎  | 1830/2524 [12:33<04:45,  2.43it/s, loss=0.0034, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  73%|███████▎  | 1830/2524 [12:33<04:45,  2.43it/s, loss=0.00261, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  73%|███████▎  | 1840/2524 [12:37<04:41,  2.43it/s, loss=0.00261, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  73%|███████▎  | 1840/2524 [12:37<04:41,  2.43it/s, loss=0.00281, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  73%|███████▎  | 1850/2524 [12:41<04:37,  2.43it/s, loss=0.00281, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  73%|███████▎  | 1850/2524 [12:41<04:37,  2.43it/s, loss=0.00319, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  74%|███████▎  | 1860/2524 [12:46<04:33,  2.43it/s, loss=0.00319, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  74%|███████▎  | 1860/2524 [12:46<04:33,  2.43it/s, loss=0.00216, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  74%|███████▍  | 1870/2524 [12:50<04:29,  2.43it/s, loss=0.00216, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  74%|███████▍  | 1870/2524 [12:50<04:29,  2.43it/s, loss=0.0042, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 11:  74%|███████▍  | 1880/2524 [12:54<04:25,  2.43it/s, loss=0.0042, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  74%|███████▍  | 1880/2524 [12:54<04:25,  2.43it/s, loss=0.00445, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  75%|███████▍  | 1890/2524 [12:58<04:21,  2.43it/s, loss=0.00445, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  75%|███████▍  | 1890/2524 [12:58<04:21,  2.43it/s, loss=0.00197, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  75%|███████▌  | 1900/2524 [13:02<04:16,  2.43it/s, loss=0.00197, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  75%|███████▌  | 1900/2524 [13:02<04:17,  2.43it/s, loss=0.00259, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  76%|███████▌  | 1910/2524 [13:06<04:12,  2.43it/s, loss=0.00259, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  76%|███████▌  | 1910/2524 [13:06<04:12,  2.43it/s, loss=0.00461, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  76%|███████▌  | 1920/2524 [13:10<04:08,  2.43it/s, loss=0.00461, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  76%|███████▌  | 1920/2524 [13:10<04:08,  2.43it/s, loss=0.00384, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  76%|███████▋  | 1930/2524 [13:14<04:04,  2.43it/s, loss=0.00384, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  76%|███████▋  | 1930/2524 [13:14<04:04,  2.43it/s, loss=0.0014, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 11:  77%|███████▋  | 1940/2524 [13:19<04:00,  2.43it/s, loss=0.0014, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  77%|███████▋  | 1940/2524 [13:19<04:00,  2.43it/s, loss=0.00182, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  77%|███████▋  | 1950/2524 [13:23<03:56,  2.43it/s, loss=0.00182, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  77%|███████▋  | 1950/2524 [13:23<03:56,  2.43it/s, loss=0.00237, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  78%|███████▊  | 1960/2524 [13:27<03:52,  2.43it/s, loss=0.00237, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  78%|███████▊  | 1960/2524 [13:27<03:52,  2.43it/s, loss=0.00216, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  78%|███████▊  | 1970/2524 [13:31<03:48,  2.43it/s, loss=0.00216, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  78%|███████▊  | 1970/2524 [13:31<03:48,  2.43it/s, loss=0.00171, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  78%|███████▊  | 1980/2524 [13:35<03:44,  2.43it/s, loss=0.00171, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  78%|███████▊  | 1980/2524 [13:35<03:44,  2.43it/s, loss=0.00226, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  79%|███████▉  | 1990/2524 [13:39<03:39,  2.43it/s, loss=0.00226, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  79%|███████▉  | 1990/2524 [13:39<03:39,  2.43it/s, loss=0.00254, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  79%|███████▉  | 2000/2524 [13:43<03:35,  2.43it/s, loss=0.00254, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  79%|███████▉  | 2000/2524 [13:43<03:35,  2.43it/s, loss=0.00306, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  80%|███████▉  | 2010/2524 [13:47<03:31,  2.43it/s, loss=0.00306, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  80%|███████▉  | 2010/2524 [13:47<03:31,  2.43it/s, loss=0.00421, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  80%|████████  | 2020/2524 [13:51<03:27,  2.43it/s, loss=0.00421, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  80%|████████  | 2020/2524 [13:51<03:27,  2.43it/s, loss=0.00342, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  80%|████████  | 2030/2524 [13:55<03:23,  2.43it/s, loss=0.00342, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  80%|████████  | 2030/2524 [13:55<03:23,  2.43it/s, loss=0.00271, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  81%|████████  | 2040/2524 [14:00<03:19,  2.43it/s, loss=0.00271, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  81%|████████  | 2040/2524 [14:00<03:19,  2.43it/s, loss=0.00373, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  81%|████████  | 2050/2524 [14:04<03:15,  2.43it/s, loss=0.00373, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  81%|████████  | 2050/2524 [14:04<03:15,  2.43it/s, loss=0.00434, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  82%|████████▏ | 2060/2524 [14:08<03:11,  2.43it/s, loss=0.00434, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  82%|████████▏ | 2060/2524 [14:08<03:11,  2.43it/s, loss=0.00313, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  82%|████████▏ | 2070/2524 [14:12<03:06,  2.43it/s, loss=0.00313, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  82%|████████▏ | 2070/2524 [14:12<03:06,  2.43it/s, loss=0.00208, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  82%|████████▏ | 2080/2524 [14:16<03:02,  2.43it/s, loss=0.00208, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  82%|████████▏ | 2080/2524 [14:16<03:02,  2.43it/s, loss=0.00283, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  83%|████████▎ | 2090/2524 [14:20<02:58,  2.43it/s, loss=0.00283, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  83%|████████▎ | 2090/2524 [14:20<02:58,  2.43it/s, loss=0.00304, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  83%|████████▎ | 2100/2524 [14:24<02:54,  2.43it/s, loss=0.00304, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  83%|████████▎ | 2100/2524 [14:24<02:54,  2.43it/s, loss=0.00281, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  84%|████████▎ | 2110/2524 [14:28<02:50,  2.43it/s, loss=0.00281, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  84%|████████▎ | 2110/2524 [14:28<02:50,  2.43it/s, loss=0.00288, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  84%|████████▍ | 2120/2524 [14:33<02:46,  2.43it/s, loss=0.00288, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  84%|████████▍ | 2120/2524 [14:33<02:46,  2.43it/s, loss=0.00275, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  84%|████████▍ | 2130/2524 [14:37<02:42,  2.43it/s, loss=0.00275, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  84%|████████▍ | 2130/2524 [14:37<02:42,  2.43it/s, loss=0.00296, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  85%|████████▍ | 2140/2524 [14:41<02:38,  2.43it/s, loss=0.00296, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  85%|████████▍ | 2140/2524 [14:41<02:38,  2.43it/s, loss=0.00297, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  85%|████████▌ | 2150/2524 [14:45<02:34,  2.43it/s, loss=0.00297, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  85%|████████▌ | 2150/2524 [14:45<02:34,  2.43it/s, loss=0.00315, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  86%|████████▌ | 2160/2524 [14:49<02:29,  2.43it/s, loss=0.00315, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  86%|████████▌ | 2160/2524 [14:49<02:29,  2.43it/s, loss=0.00257, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  86%|████████▌ | 2170/2524 [14:53<02:25,  2.43it/s, loss=0.00257, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  86%|████████▌ | 2170/2524 [14:53<02:25,  2.43it/s, loss=0.00194, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  86%|████████▋ | 2180/2524 [14:57<02:21,  2.43it/s, loss=0.00194, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  86%|████████▋ | 2180/2524 [14:57<02:21,  2.43it/s, loss=0.00421, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  87%|████████▋ | 2190/2524 [15:01<02:17,  2.43it/s, loss=0.00421, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  87%|████████▋ | 2190/2524 [15:01<02:17,  2.43it/s, loss=0.00354, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  87%|████████▋ | 2200/2524 [15:05<02:13,  2.43it/s, loss=0.00354, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  87%|████████▋ | 2200/2524 [15:05<02:13,  2.43it/s, loss=0.00357, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  88%|████████▊ | 2210/2524 [15:10<02:09,  2.43it/s, loss=0.00357, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  88%|████████▊ | 2210/2524 [15:10<02:09,  2.43it/s, loss=0.00395, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  88%|████████▊ | 2220/2524 [15:14<02:05,  2.43it/s, loss=0.00395, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  88%|████████▊ | 2220/2524 [15:14<02:05,  2.43it/s, loss=0.00194, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  88%|████████▊ | 2230/2524 [15:18<02:01,  2.43it/s, loss=0.00194, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  88%|████████▊ | 2230/2524 [15:18<02:01,  2.43it/s, loss=0.00275, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  89%|████████▊ | 2240/2524 [15:22<01:56,  2.43it/s, loss=0.00275, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  89%|████████▊ | 2240/2524 [15:22<01:56,  2.43it/s, loss=0.00299, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  89%|████████▉ | 2250/2524 [15:26<01:52,  2.43it/s, loss=0.00299, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  89%|████████▉ | 2250/2524 [15:26<01:52,  2.43it/s, loss=0.00213, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  90%|████████▉ | 2260/2524 [15:30<01:48,  2.43it/s, loss=0.00213, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  90%|████████▉ | 2260/2524 [15:30<01:48,  2.43it/s, loss=0.00304, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  90%|████████▉ | 2270/2524 [15:34<01:44,  2.43it/s, loss=0.00304, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  90%|████████▉ | 2270/2524 [15:34<01:44,  2.43it/s, loss=0.00329, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  90%|█████████ | 2280/2524 [15:38<01:40,  2.43it/s, loss=0.00329, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  90%|█████████ | 2280/2524 [15:38<01:40,  2.43it/s, loss=0.00199, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  91%|█████████ | 2290/2524 [15:42<01:36,  2.43it/s, loss=0.00199, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  91%|█████████ | 2290/2524 [15:43<01:36,  2.43it/s, loss=0.00235, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  91%|█████████ | 2300/2524 [15:47<01:32,  2.43it/s, loss=0.00235, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  91%|█████████ | 2300/2524 [15:47<01:32,  2.43it/s, loss=0.00312, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  92%|█████████▏| 2310/2524 [15:51<01:28,  2.43it/s, loss=0.00312, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  92%|█████████▏| 2310/2524 [15:51<01:28,  2.43it/s, loss=0.00253, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  92%|█████████▏| 2320/2524 [15:55<01:23,  2.43it/s, loss=0.00253, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  92%|█████████▏| 2320/2524 [15:55<01:23,  2.43it/s, loss=0.00308, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  92%|█████████▏| 2330/2524 [15:59<01:19,  2.43it/s, loss=0.00308, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  92%|█████████▏| 2330/2524 [15:59<01:19,  2.43it/s, loss=0.00415, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  93%|█████████▎| 2340/2524 [16:03<01:15,  2.43it/s, loss=0.00415, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  93%|█████████▎| 2340/2524 [16:03<01:15,  2.43it/s, loss=0.00256, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  93%|█████████▎| 2350/2524 [16:07<01:11,  2.43it/s, loss=0.00256, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  93%|█████████▎| 2350/2524 [16:07<01:11,  2.43it/s, loss=0.00126, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  94%|█████████▎| 2360/2524 [16:11<01:07,  2.43it/s, loss=0.00126, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  94%|█████████▎| 2360/2524 [16:11<01:07,  2.43it/s, loss=0.00178, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  94%|█████████▍| 2370/2524 [16:15<01:03,  2.43it/s, loss=0.00178, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  94%|█████████▍| 2370/2524 [16:15<01:03,  2.43it/s, loss=0.00233, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  94%|█████████▍| 2380/2524 [16:19<00:59,  2.43it/s, loss=0.00233, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  94%|█████████▍| 2380/2524 [16:19<00:59,  2.43it/s, loss=0.00156, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  95%|█████████▍| 2390/2524 [16:24<00:55,  2.43it/s, loss=0.00156, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  95%|█████████▍| 2390/2524 [16:24<00:55,  2.43it/s, loss=0.00157, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  95%|█████████▌| 2400/2524 [16:28<00:51,  2.43it/s, loss=0.00157, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  95%|█████████▌| 2400/2524 [16:28<00:51,  2.43it/s, loss=0.00265, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  95%|█████████▌| 2410/2524 [16:32<00:46,  2.43it/s, loss=0.00265, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  95%|█████████▌| 2410/2524 [16:32<00:46,  2.43it/s, loss=0.00445, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  96%|█████████▌| 2420/2524 [16:36<00:42,  2.43it/s, loss=0.00445, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  96%|█████████▌| 2420/2524 [16:36<00:42,  2.43it/s, loss=0.00478, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  96%|█████████▋| 2430/2524 [16:40<00:38,  2.43it/s, loss=0.00478, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  96%|█████████▋| 2430/2524 [16:40<00:38,  2.43it/s, loss=0.00394, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  97%|█████████▋| 2440/2524 [16:44<00:34,  2.43it/s, loss=0.00394, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  97%|█████████▋| 2440/2524 [16:44<00:34,  2.43it/s, loss=0.00397, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  97%|█████████▋| 2450/2524 [16:48<00:30,  2.43it/s, loss=0.00397, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  97%|█████████▋| 2450/2524 [16:48<00:30,  2.43it/s, loss=0.00335, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  97%|█████████▋| 2460/2524 [16:52<00:26,  2.43it/s, loss=0.00335, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  97%|█████████▋| 2460/2524 [16:52<00:26,  2.43it/s, loss=0.00281, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  98%|█████████▊| 2470/2524 [16:57<00:22,  2.43it/s, loss=0.00281, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  98%|█████████▊| 2470/2524 [16:57<00:22,  2.43it/s, loss=0.00265, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  98%|█████████▊| 2480/2524 [17:01<00:18,  2.43it/s, loss=0.00265, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  98%|█████████▊| 2480/2524 [17:01<00:18,  2.43it/s, loss=0.00211, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  99%|█████████▊| 2490/2524 [17:05<00:13,  2.43it/s, loss=0.00211, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  99%|█████████▊| 2490/2524 [17:05<00:13,  2.43it/s, loss=0.00187, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  99%|█████████▉| 2500/2524 [17:09<00:09,  2.43it/s, loss=0.00187, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  99%|█████████▉| 2500/2524 [17:09<00:09,  2.43it/s, loss=0.00259, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  99%|█████████▉| 2510/2524 [17:13<00:05,  2.43it/s, loss=0.00259, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:  99%|█████████▉| 2510/2524 [17:13<00:05,  2.43it/s, loss=0.00303, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11: 100%|█████████▉| 2520/2524 [17:17<00:01,  2.43it/s, loss=0.00303, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11: 100%|█████████▉| 2520/2524 [17:17<00:01,  2.43it/s, loss=0.00311, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11: 100%|██████████| 2524/2524 [17:19<00:00,  2.43it/s, loss=0.00311, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11: 100%|██████████| 2524/2524 [17:19<00:00,  2.43it/s, loss=0.0027, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 11: 100%|██████████| 2524/2524 [17:19<00:00,  2.43it/s, loss=0.0027, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 11:   0%|          | 0/2524 [00:00<?, ?it/s, loss=0.0027, v_num=3, val_loss=0.306, val_f1=63.60]           Epoch 12:   0%|          | 0/2524 [00:00<?, ?it/s, loss=0.0027, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   0%|          | 10/2524 [00:04<18:46,  2.23it/s, loss=0.0027, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   0%|          | 10/2524 [00:04<18:49,  2.23it/s, loss=0.00312, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   1%|          | 20/2524 [00:08<18:16,  2.28it/s, loss=0.00312, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   1%|          | 20/2524 [00:08<18:18,  2.28it/s, loss=0.00292, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   1%|          | 30/2524 [00:12<17:50,  2.33it/s, loss=0.00292, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   1%|          | 30/2524 [00:12<17:50,  2.33it/s, loss=0.00313, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   2%|▏         | 40/2524 [00:16<17:34,  2.36it/s, loss=0.00313, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   2%|▏         | 40/2524 [00:16<17:35,  2.35it/s, loss=0.00343, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   2%|▏         | 50/2524 [00:21<17:23,  2.37it/s, loss=0.00343, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   2%|▏         | 50/2524 [00:21<17:24,  2.37it/s, loss=0.00397, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   2%|▏         | 60/2524 [00:25<17:14,  2.38it/s, loss=0.00397, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   2%|▏         | 60/2524 [00:25<17:15,  2.38it/s, loss=0.00399, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   3%|▎         | 70/2524 [00:29<17:09,  2.38it/s, loss=0.00399, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   3%|▎         | 70/2524 [00:29<17:10,  2.38it/s, loss=0.00267, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   3%|▎         | 80/2524 [00:33<17:03,  2.39it/s, loss=0.00267, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   3%|▎         | 80/2524 [00:33<17:03,  2.39it/s, loss=0.00285, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   4%|▎         | 90/2524 [00:37<16:56,  2.39it/s, loss=0.00285, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   4%|▎         | 90/2524 [00:37<16:56,  2.39it/s, loss=0.00288, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   4%|▍         | 100/2524 [00:41<16:50,  2.40it/s, loss=0.00288, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   4%|▍         | 100/2524 [00:41<16:51,  2.40it/s, loss=0.002, v_num=3, val_loss=0.306, val_f1=63.60]  Epoch 12:   4%|▍         | 110/2524 [00:45<16:45,  2.40it/s, loss=0.002, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   4%|▍         | 110/2524 [00:45<16:45,  2.40it/s, loss=0.00267, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   5%|▍         | 120/2524 [00:50<16:43,  2.40it/s, loss=0.00267, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   5%|▍         | 120/2524 [00:50<16:43,  2.40it/s, loss=0.00284, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   5%|▌         | 130/2524 [00:54<16:37,  2.40it/s, loss=0.00284, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   5%|▌         | 130/2524 [00:54<16:38,  2.40it/s, loss=0.00275, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   6%|▌         | 140/2524 [00:58<16:32,  2.40it/s, loss=0.00275, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   6%|▌         | 140/2524 [00:58<16:33,  2.40it/s, loss=0.00235, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   6%|▌         | 150/2524 [01:02<16:27,  2.40it/s, loss=0.00235, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   6%|▌         | 150/2524 [01:02<16:28,  2.40it/s, loss=0.0016, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 12:   6%|▋         | 160/2524 [01:06<16:23,  2.40it/s, loss=0.0016, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   6%|▋         | 160/2524 [01:06<16:23,  2.40it/s, loss=0.00211, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   7%|▋         | 170/2524 [01:10<16:18,  2.40it/s, loss=0.00211, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   7%|▋         | 170/2524 [01:10<16:19,  2.40it/s, loss=0.00272, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   7%|▋         | 180/2524 [01:14<16:14,  2.41it/s, loss=0.00272, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   7%|▋         | 180/2524 [01:14<16:14,  2.41it/s, loss=0.00221, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   8%|▊         | 190/2524 [01:18<16:09,  2.41it/s, loss=0.00221, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   8%|▊         | 190/2524 [01:18<16:09,  2.41it/s, loss=0.00151, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   8%|▊         | 200/2524 [01:23<16:04,  2.41it/s, loss=0.00151, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   8%|▊         | 200/2524 [01:23<16:05,  2.41it/s, loss=0.00251, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   8%|▊         | 210/2524 [01:27<16:00,  2.41it/s, loss=0.00251, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   8%|▊         | 210/2524 [01:27<16:00,  2.41it/s, loss=0.00265, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   9%|▊         | 220/2524 [01:31<15:57,  2.41it/s, loss=0.00265, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   9%|▊         | 220/2524 [01:31<15:57,  2.41it/s, loss=0.00249, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   9%|▉         | 230/2524 [01:35<15:52,  2.41it/s, loss=0.00249, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   9%|▉         | 230/2524 [01:35<15:52,  2.41it/s, loss=0.00208, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  10%|▉         | 240/2524 [01:39<15:48,  2.41it/s, loss=0.00208, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  10%|▉         | 240/2524 [01:39<15:48,  2.41it/s, loss=0.00153, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  10%|▉         | 250/2524 [01:43<15:43,  2.41it/s, loss=0.00153, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  10%|▉         | 250/2524 [01:43<15:43,  2.41it/s, loss=0.00305, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  10%|█         | 260/2524 [01:47<15:38,  2.41it/s, loss=0.00305, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  10%|█         | 260/2524 [01:47<15:39,  2.41it/s, loss=0.0038, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 12:  11%|█         | 270/2524 [01:52<15:35,  2.41it/s, loss=0.0038, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  11%|█         | 270/2524 [01:52<15:35,  2.41it/s, loss=0.00318, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  11%|█         | 280/2524 [01:56<15:30,  2.41it/s, loss=0.00318, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  11%|█         | 280/2524 [01:56<15:30,  2.41it/s, loss=0.0024, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 12:  11%|█▏        | 290/2524 [02:00<15:26,  2.41it/s, loss=0.0024, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  11%|█▏        | 290/2524 [02:00<15:26,  2.41it/s, loss=0.00147, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  12%|█▏        | 300/2524 [02:04<15:21,  2.41it/s, loss=0.00147, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  12%|█▏        | 300/2524 [02:04<15:21,  2.41it/s, loss=0.00157, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  12%|█▏        | 310/2524 [02:08<15:17,  2.41it/s, loss=0.00157, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  12%|█▏        | 310/2524 [02:08<15:17,  2.41it/s, loss=0.00312, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  13%|█▎        | 320/2524 [02:12<15:14,  2.41it/s, loss=0.00312, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  13%|█▎        | 320/2524 [02:12<15:14,  2.41it/s, loss=0.00315, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  13%|█▎        | 330/2524 [02:16<15:09,  2.41it/s, loss=0.00315, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  13%|█▎        | 330/2524 [02:16<15:09,  2.41it/s, loss=0.00153, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  13%|█▎        | 340/2524 [02:20<15:05,  2.41it/s, loss=0.00153, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  13%|█▎        | 340/2524 [02:20<15:05,  2.41it/s, loss=0.00294, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  14%|█▍        | 350/2524 [02:25<15:00,  2.41it/s, loss=0.00294, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  14%|█▍        | 350/2524 [02:25<15:01,  2.41it/s, loss=0.0044, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 12:  14%|█▍        | 360/2524 [02:29<14:56,  2.41it/s, loss=0.0044, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  14%|█▍        | 360/2524 [02:29<14:56,  2.41it/s, loss=0.00294, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  15%|█▍        | 370/2524 [02:33<14:52,  2.41it/s, loss=0.00294, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  15%|█▍        | 370/2524 [02:33<14:52,  2.41it/s, loss=0.00183, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  15%|█▌        | 380/2524 [02:37<14:48,  2.41it/s, loss=0.00183, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  15%|█▌        | 380/2524 [02:37<14:48,  2.41it/s, loss=0.00269, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  15%|█▌        | 390/2524 [02:41<14:44,  2.41it/s, loss=0.00269, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  15%|█▌        | 390/2524 [02:41<14:44,  2.41it/s, loss=0.00343, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  16%|█▌        | 400/2524 [02:45<14:39,  2.41it/s, loss=0.00343, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  16%|█▌        | 400/2524 [02:45<14:39,  2.41it/s, loss=0.00257, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  16%|█▌        | 410/2524 [02:49<14:35,  2.41it/s, loss=0.00257, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  16%|█▌        | 410/2524 [02:49<14:35,  2.41it/s, loss=0.00226, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  17%|█▋        | 420/2524 [02:54<14:31,  2.41it/s, loss=0.00226, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  17%|█▋        | 420/2524 [02:54<14:32,  2.41it/s, loss=0.00203, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  17%|█▋        | 430/2524 [02:58<14:27,  2.41it/s, loss=0.00203, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  17%|█▋        | 430/2524 [02:58<14:27,  2.41it/s, loss=0.00201, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  17%|█▋        | 440/2524 [03:02<14:23,  2.41it/s, loss=0.00201, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  17%|█▋        | 440/2524 [03:02<14:23,  2.41it/s, loss=0.00402, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  18%|█▊        | 450/2524 [03:06<14:19,  2.41it/s, loss=0.00402, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  18%|█▊        | 450/2524 [03:06<14:19,  2.41it/s, loss=0.00399, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  18%|█▊        | 460/2524 [03:10<14:14,  2.41it/s, loss=0.00399, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  18%|█▊        | 460/2524 [03:10<14:14,  2.41it/s, loss=0.00188, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  19%|█▊        | 470/2524 [03:14<14:10,  2.41it/s, loss=0.00188, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  19%|█▊        | 470/2524 [03:14<14:10,  2.41it/s, loss=0.00216, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  19%|█▉        | 480/2524 [03:18<14:06,  2.41it/s, loss=0.00216, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  19%|█▉        | 480/2524 [03:18<14:06,  2.41it/s, loss=0.00255, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  19%|█▉        | 490/2524 [03:22<14:02,  2.42it/s, loss=0.00255, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  19%|█▉        | 490/2524 [03:22<14:02,  2.42it/s, loss=0.00296, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  20%|█▉        | 500/2524 [03:26<13:57,  2.42it/s, loss=0.00296, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  20%|█▉        | 500/2524 [03:27<13:57,  2.42it/s, loss=0.00235, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  20%|██        | 510/2524 [03:31<13:53,  2.42it/s, loss=0.00235, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  20%|██        | 510/2524 [03:31<13:53,  2.42it/s, loss=0.00118, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  21%|██        | 520/2524 [03:35<13:49,  2.41it/s, loss=0.00118, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  21%|██        | 520/2524 [03:35<13:50,  2.41it/s, loss=0.00316, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  21%|██        | 530/2524 [03:39<13:45,  2.41it/s, loss=0.00316, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  21%|██        | 530/2524 [03:39<13:45,  2.41it/s, loss=0.00514, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  21%|██▏       | 540/2524 [03:43<13:41,  2.42it/s, loss=0.00514, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  21%|██▏       | 540/2524 [03:43<13:41,  2.42it/s, loss=0.00411, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  22%|██▏       | 550/2524 [03:47<13:37,  2.42it/s, loss=0.00411, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  22%|██▏       | 550/2524 [03:47<13:37,  2.42it/s, loss=0.00195, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  22%|██▏       | 560/2524 [03:51<13:32,  2.42it/s, loss=0.00195, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  22%|██▏       | 560/2524 [03:51<13:32,  2.42it/s, loss=0.00303, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  23%|██▎       | 570/2524 [03:55<13:28,  2.42it/s, loss=0.00303, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  23%|██▎       | 570/2524 [03:55<13:28,  2.42it/s, loss=0.00397, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  23%|██▎       | 580/2524 [04:00<13:24,  2.42it/s, loss=0.00397, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  23%|██▎       | 580/2524 [04:00<13:24,  2.42it/s, loss=0.00214, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  23%|██▎       | 590/2524 [04:04<13:20,  2.42it/s, loss=0.00214, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  23%|██▎       | 590/2524 [04:04<13:20,  2.42it/s, loss=0.00192, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  24%|██▍       | 600/2524 [04:08<13:16,  2.42it/s, loss=0.00192, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  24%|██▍       | 600/2524 [04:08<13:16,  2.42it/s, loss=0.00229, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  24%|██▍       | 610/2524 [04:12<13:11,  2.42it/s, loss=0.00229, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  24%|██▍       | 610/2524 [04:12<13:11,  2.42it/s, loss=0.00172, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  25%|██▍       | 620/2524 [04:16<13:08,  2.42it/s, loss=0.00172, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  25%|██▍       | 620/2524 [04:16<13:08,  2.42it/s, loss=0.00177, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  25%|██▍       | 630/2524 [04:20<13:03,  2.42it/s, loss=0.00177, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  25%|██▍       | 630/2524 [04:20<13:03,  2.42it/s, loss=0.0027, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 12:  25%|██▌       | 640/2524 [04:24<12:59,  2.42it/s, loss=0.0027, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  25%|██▌       | 640/2524 [04:24<12:59,  2.42it/s, loss=0.00334, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  26%|██▌       | 650/2524 [04:28<12:55,  2.42it/s, loss=0.00334, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  26%|██▌       | 650/2524 [04:28<12:55,  2.42it/s, loss=0.00244, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  26%|██▌       | 660/2524 [04:33<12:51,  2.42it/s, loss=0.00244, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  26%|██▌       | 660/2524 [04:33<12:51,  2.42it/s, loss=0.00427, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  27%|██▋       | 670/2524 [04:37<12:47,  2.42it/s, loss=0.00427, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  27%|██▋       | 670/2524 [04:37<12:47,  2.42it/s, loss=0.00471, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  27%|██▋       | 680/2524 [04:41<12:42,  2.42it/s, loss=0.00471, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  27%|██▋       | 680/2524 [04:41<12:42,  2.42it/s, loss=0.0022, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 12:  27%|██▋       | 690/2524 [04:45<12:38,  2.42it/s, loss=0.0022, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  27%|██▋       | 690/2524 [04:45<12:38,  2.42it/s, loss=0.00265, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  28%|██▊       | 700/2524 [04:49<12:34,  2.42it/s, loss=0.00265, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  28%|██▊       | 700/2524 [04:49<12:34,  2.42it/s, loss=0.00202, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  28%|██▊       | 710/2524 [04:53<12:30,  2.42it/s, loss=0.00202, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  28%|██▊       | 710/2524 [04:53<12:30,  2.42it/s, loss=0.00113, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  29%|██▊       | 720/2524 [04:57<12:26,  2.42it/s, loss=0.00113, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  29%|██▊       | 720/2524 [04:57<12:26,  2.42it/s, loss=0.00251, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  29%|██▉       | 730/2524 [05:01<12:22,  2.42it/s, loss=0.00251, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  29%|██▉       | 730/2524 [05:01<12:22,  2.42it/s, loss=0.00248, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  29%|██▉       | 740/2524 [05:06<12:17,  2.42it/s, loss=0.00248, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  29%|██▉       | 740/2524 [05:06<12:17,  2.42it/s, loss=0.0025, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 12:  30%|██▉       | 750/2524 [05:10<12:13,  2.42it/s, loss=0.0025, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  30%|██▉       | 750/2524 [05:10<12:13,  2.42it/s, loss=0.00294, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  30%|███       | 760/2524 [05:14<12:09,  2.42it/s, loss=0.00294, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  30%|███       | 760/2524 [05:14<12:09,  2.42it/s, loss=0.0017, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 12:  31%|███       | 770/2524 [05:18<12:05,  2.42it/s, loss=0.0017, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  31%|███       | 770/2524 [05:18<12:05,  2.42it/s, loss=0.0018, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  31%|███       | 780/2524 [05:22<12:01,  2.42it/s, loss=0.0018, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  31%|███       | 780/2524 [05:22<12:01,  2.42it/s, loss=0.00209, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  31%|███▏      | 790/2524 [05:26<11:57,  2.42it/s, loss=0.00209, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  31%|███▏      | 790/2524 [05:26<11:57,  2.42it/s, loss=0.00184, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  32%|███▏      | 800/2524 [05:30<11:52,  2.42it/s, loss=0.00184, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  32%|███▏      | 800/2524 [05:30<11:52,  2.42it/s, loss=0.00197, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  32%|███▏      | 810/2524 [05:34<11:48,  2.42it/s, loss=0.00197, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  32%|███▏      | 810/2524 [05:34<11:48,  2.42it/s, loss=0.00178, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  32%|███▏      | 820/2524 [05:39<11:44,  2.42it/s, loss=0.00178, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  32%|███▏      | 820/2524 [05:39<11:44,  2.42it/s, loss=0.00246, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  33%|███▎      | 830/2524 [05:43<11:40,  2.42it/s, loss=0.00246, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  33%|███▎      | 830/2524 [05:43<11:40,  2.42it/s, loss=0.00285, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  33%|███▎      | 840/2524 [05:47<11:36,  2.42it/s, loss=0.00285, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  33%|███▎      | 840/2524 [05:47<11:36,  2.42it/s, loss=0.00278, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  34%|███▎      | 850/2524 [05:51<11:32,  2.42it/s, loss=0.00278, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  34%|███▎      | 850/2524 [05:51<11:32,  2.42it/s, loss=0.00285, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  34%|███▍      | 860/2524 [05:55<11:28,  2.42it/s, loss=0.00285, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  34%|███▍      | 860/2524 [05:55<11:28,  2.42it/s, loss=0.00243, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  34%|███▍      | 870/2524 [05:59<11:23,  2.42it/s, loss=0.00243, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  34%|███▍      | 870/2524 [05:59<11:23,  2.42it/s, loss=0.00186, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  35%|███▍      | 880/2524 [06:03<11:19,  2.42it/s, loss=0.00186, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  35%|███▍      | 880/2524 [06:03<11:19,  2.42it/s, loss=0.00346, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  35%|███▌      | 890/2524 [06:07<11:15,  2.42it/s, loss=0.00346, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  35%|███▌      | 890/2524 [06:07<11:15,  2.42it/s, loss=0.00373, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  36%|███▌      | 900/2524 [06:12<11:11,  2.42it/s, loss=0.00373, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  36%|███▌      | 900/2524 [06:12<11:11,  2.42it/s, loss=0.00262, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  36%|███▌      | 910/2524 [06:16<11:07,  2.42it/s, loss=0.00262, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  36%|███▌      | 910/2524 [06:16<11:07,  2.42it/s, loss=0.00332, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  36%|███▋      | 920/2524 [06:20<11:03,  2.42it/s, loss=0.00332, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  36%|███▋      | 920/2524 [06:20<11:03,  2.42it/s, loss=0.00276, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  37%|███▋      | 930/2524 [06:24<10:59,  2.42it/s, loss=0.00276, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  37%|███▋      | 930/2524 [06:24<10:59,  2.42it/s, loss=0.00235, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  37%|███▋      | 940/2524 [06:28<10:54,  2.42it/s, loss=0.00235, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  37%|███▋      | 940/2524 [06:28<10:54,  2.42it/s, loss=0.00213, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  38%|███▊      | 950/2524 [06:32<10:50,  2.42it/s, loss=0.00213, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  38%|███▊      | 950/2524 [06:32<10:50,  2.42it/s, loss=0.00137, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  38%|███▊      | 960/2524 [06:36<10:46,  2.42it/s, loss=0.00137, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  38%|███▊      | 960/2524 [06:36<10:46,  2.42it/s, loss=0.00144, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  38%|███▊      | 970/2524 [06:41<10:42,  2.42it/s, loss=0.00144, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  38%|███▊      | 970/2524 [06:41<10:42,  2.42it/s, loss=0.00192, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  39%|███▉      | 980/2524 [06:45<10:38,  2.42it/s, loss=0.00192, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  39%|███▉      | 980/2524 [06:45<10:38,  2.42it/s, loss=0.00217, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  39%|███▉      | 990/2524 [06:49<10:34,  2.42it/s, loss=0.00217, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  39%|███▉      | 990/2524 [06:49<10:34,  2.42it/s, loss=0.00411, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  40%|███▉      | 1000/2524 [06:53<10:29,  2.42it/s, loss=0.00411, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  40%|███▉      | 1000/2524 [06:53<10:29,  2.42it/s, loss=0.00466, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  40%|████      | 1010/2524 [06:57<10:25,  2.42it/s, loss=0.00466, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  40%|████      | 1010/2524 [06:57<10:25,  2.42it/s, loss=0.00434, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  40%|████      | 1020/2524 [07:01<10:21,  2.42it/s, loss=0.00434, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  40%|████      | 1020/2524 [07:01<10:21,  2.42it/s, loss=0.0033, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 12:  41%|████      | 1030/2524 [07:05<10:17,  2.42it/s, loss=0.0033, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  41%|████      | 1030/2524 [07:05<10:17,  2.42it/s, loss=0.00202, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  41%|████      | 1040/2524 [07:09<10:13,  2.42it/s, loss=0.00202, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  41%|████      | 1040/2524 [07:09<10:13,  2.42it/s, loss=0.00199, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  42%|████▏     | 1050/2524 [07:14<10:09,  2.42it/s, loss=0.00199, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  42%|████▏     | 1050/2524 [07:14<10:09,  2.42it/s, loss=0.00302, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  42%|████▏     | 1060/2524 [07:18<10:05,  2.42it/s, loss=0.00302, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  42%|████▏     | 1060/2524 [07:18<10:05,  2.42it/s, loss=0.00411, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  42%|████▏     | 1070/2524 [07:22<10:01,  2.42it/s, loss=0.00411, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  42%|████▏     | 1070/2524 [07:22<10:01,  2.42it/s, loss=0.00232, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  43%|████▎     | 1080/2524 [07:26<09:56,  2.42it/s, loss=0.00232, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  43%|████▎     | 1080/2524 [07:26<09:56,  2.42it/s, loss=0.00184, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  43%|████▎     | 1090/2524 [07:30<09:52,  2.42it/s, loss=0.00184, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  43%|████▎     | 1090/2524 [07:30<09:52,  2.42it/s, loss=0.00232, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  44%|████▎     | 1100/2524 [07:34<09:48,  2.42it/s, loss=0.00232, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  44%|████▎     | 1100/2524 [07:34<09:48,  2.42it/s, loss=0.00172, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  44%|████▍     | 1110/2524 [07:38<09:44,  2.42it/s, loss=0.00172, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  44%|████▍     | 1110/2524 [07:38<09:44,  2.42it/s, loss=0.00124, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  44%|████▍     | 1120/2524 [07:43<09:40,  2.42it/s, loss=0.00124, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  44%|████▍     | 1120/2524 [07:43<09:40,  2.42it/s, loss=0.00289, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  45%|████▍     | 1130/2524 [07:47<09:36,  2.42it/s, loss=0.00289, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  45%|████▍     | 1130/2524 [07:47<09:36,  2.42it/s, loss=0.00426, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  45%|████▌     | 1140/2524 [07:51<09:32,  2.42it/s, loss=0.00426, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  45%|████▌     | 1140/2524 [07:51<09:32,  2.42it/s, loss=0.00338, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  46%|████▌     | 1150/2524 [07:55<09:27,  2.42it/s, loss=0.00338, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  46%|████▌     | 1150/2524 [07:55<09:27,  2.42it/s, loss=0.00333, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  46%|████▌     | 1160/2524 [07:59<09:23,  2.42it/s, loss=0.00333, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  46%|████▌     | 1160/2524 [07:59<09:23,  2.42it/s, loss=0.003, v_num=3, val_loss=0.306, val_f1=63.60]  Epoch 12:  46%|████▋     | 1170/2524 [08:03<09:19,  2.42it/s, loss=0.003, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  46%|████▋     | 1170/2524 [08:03<09:19,  2.42it/s, loss=0.00186, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  47%|████▋     | 1180/2524 [08:07<09:15,  2.42it/s, loss=0.00186, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  47%|████▋     | 1180/2524 [08:07<09:15,  2.42it/s, loss=0.00229, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  47%|████▋     | 1190/2524 [08:11<09:11,  2.42it/s, loss=0.00229, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  47%|████▋     | 1190/2524 [08:11<09:11,  2.42it/s, loss=0.00276, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  48%|████▊     | 1200/2524 [08:15<09:07,  2.42it/s, loss=0.00276, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  48%|████▊     | 1200/2524 [08:15<09:07,  2.42it/s, loss=0.00198, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  48%|████▊     | 1210/2524 [08:20<09:03,  2.42it/s, loss=0.00198, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  48%|████▊     | 1210/2524 [08:20<09:03,  2.42it/s, loss=0.00184, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  48%|████▊     | 1220/2524 [08:24<08:59,  2.42it/s, loss=0.00184, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  48%|████▊     | 1220/2524 [08:24<08:59,  2.42it/s, loss=0.00176, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  49%|████▊     | 1230/2524 [08:28<08:54,  2.42it/s, loss=0.00176, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  49%|████▊     | 1230/2524 [08:28<08:54,  2.42it/s, loss=0.00203, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  49%|████▉     | 1240/2524 [08:32<08:50,  2.42it/s, loss=0.00203, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  49%|████▉     | 1240/2524 [08:32<08:50,  2.42it/s, loss=0.00368, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  50%|████▉     | 1250/2524 [08:36<08:46,  2.42it/s, loss=0.00368, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  50%|████▉     | 1250/2524 [08:36<08:46,  2.42it/s, loss=0.00321, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  50%|████▉     | 1260/2524 [08:40<08:42,  2.42it/s, loss=0.00321, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  50%|████▉     | 1260/2524 [08:40<08:42,  2.42it/s, loss=0.00175, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  50%|█████     | 1270/2524 [08:44<08:38,  2.42it/s, loss=0.00175, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  50%|█████     | 1270/2524 [08:44<08:38,  2.42it/s, loss=0.0022, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 12:  51%|█████     | 1280/2524 [08:49<08:34,  2.42it/s, loss=0.0022, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  51%|█████     | 1280/2524 [08:49<08:34,  2.42it/s, loss=0.00293, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  51%|█████     | 1290/2524 [08:53<08:29,  2.42it/s, loss=0.00293, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  51%|█████     | 1290/2524 [08:53<08:29,  2.42it/s, loss=0.0021, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 12:  52%|█████▏    | 1300/2524 [08:57<08:25,  2.42it/s, loss=0.0021, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  52%|█████▏    | 1300/2524 [08:57<08:25,  2.42it/s, loss=0.00224, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  52%|█████▏    | 1310/2524 [09:01<08:21,  2.42it/s, loss=0.00224, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  52%|█████▏    | 1310/2524 [09:01<08:21,  2.42it/s, loss=0.00291, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  52%|█████▏    | 1320/2524 [09:05<08:17,  2.42it/s, loss=0.00291, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  52%|█████▏    | 1320/2524 [09:05<08:17,  2.42it/s, loss=0.00263, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  53%|█████▎    | 1330/2524 [09:09<08:13,  2.42it/s, loss=0.00263, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  53%|█████▎    | 1330/2524 [09:09<08:13,  2.42it/s, loss=0.00236, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  53%|█████▎    | 1340/2524 [09:13<08:09,  2.42it/s, loss=0.00236, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  53%|█████▎    | 1340/2524 [09:13<08:09,  2.42it/s, loss=0.00242, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  53%|█████▎    | 1350/2524 [09:17<08:05,  2.42it/s, loss=0.00242, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  53%|█████▎    | 1350/2524 [09:17<08:05,  2.42it/s, loss=0.00237, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  54%|█████▍    | 1360/2524 [09:22<08:01,  2.42it/s, loss=0.00237, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  54%|█████▍    | 1360/2524 [09:22<08:01,  2.42it/s, loss=0.00191, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  54%|█████▍    | 1370/2524 [09:26<07:56,  2.42it/s, loss=0.00191, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  54%|█████▍    | 1370/2524 [09:26<07:56,  2.42it/s, loss=0.00268, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  55%|█████▍    | 1380/2524 [09:30<07:52,  2.42it/s, loss=0.00268, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  55%|█████▍    | 1380/2524 [09:30<07:52,  2.42it/s, loss=0.00238, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  55%|█████▌    | 1390/2524 [09:34<07:48,  2.42it/s, loss=0.00238, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  55%|█████▌    | 1390/2524 [09:34<07:48,  2.42it/s, loss=0.00192, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  55%|█████▌    | 1400/2524 [09:38<07:44,  2.42it/s, loss=0.00192, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  55%|█████▌    | 1400/2524 [09:38<07:44,  2.42it/s, loss=0.00237, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  56%|█████▌    | 1410/2524 [09:42<07:40,  2.42it/s, loss=0.00237, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  56%|█████▌    | 1410/2524 [09:42<07:40,  2.42it/s, loss=0.00285, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  56%|█████▋    | 1420/2524 [09:46<07:36,  2.42it/s, loss=0.00285, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  56%|█████▋    | 1420/2524 [09:46<07:36,  2.42it/s, loss=0.00252, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  57%|█████▋    | 1430/2524 [09:50<07:32,  2.42it/s, loss=0.00252, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  57%|█████▋    | 1430/2524 [09:50<07:32,  2.42it/s, loss=0.00101, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  57%|█████▋    | 1440/2524 [09:55<07:27,  2.42it/s, loss=0.00101, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  57%|█████▋    | 1440/2524 [09:55<07:27,  2.42it/s, loss=0.00114, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  57%|█████▋    | 1450/2524 [09:59<07:23,  2.42it/s, loss=0.00114, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  57%|█████▋    | 1450/2524 [09:59<07:23,  2.42it/s, loss=0.00173, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  58%|█████▊    | 1460/2524 [10:03<07:19,  2.42it/s, loss=0.00173, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  58%|█████▊    | 1460/2524 [10:03<07:19,  2.42it/s, loss=0.00186, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  58%|█████▊    | 1470/2524 [10:07<07:15,  2.42it/s, loss=0.00186, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  58%|█████▊    | 1470/2524 [10:07<07:15,  2.42it/s, loss=0.00161, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  59%|█████▊    | 1480/2524 [10:11<07:11,  2.42it/s, loss=0.00161, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  59%|█████▊    | 1480/2524 [10:11<07:11,  2.42it/s, loss=0.00119, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  59%|█████▉    | 1490/2524 [10:15<07:07,  2.42it/s, loss=0.00119, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  59%|█████▉    | 1490/2524 [10:15<07:07,  2.42it/s, loss=0.00161, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  59%|█████▉    | 1500/2524 [10:19<07:03,  2.42it/s, loss=0.00161, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  59%|█████▉    | 1500/2524 [10:19<07:03,  2.42it/s, loss=0.00232, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  60%|█████▉    | 1510/2524 [10:23<06:58,  2.42it/s, loss=0.00232, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  60%|█████▉    | 1510/2524 [10:23<06:58,  2.42it/s, loss=0.00277, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  60%|██████    | 1520/2524 [10:28<06:54,  2.42it/s, loss=0.00277, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  60%|██████    | 1520/2524 [10:28<06:54,  2.42it/s, loss=0.00258, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  61%|██████    | 1530/2524 [10:32<06:50,  2.42it/s, loss=0.00258, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  61%|██████    | 1530/2524 [10:32<06:50,  2.42it/s, loss=0.00206, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  61%|██████    | 1540/2524 [10:36<06:46,  2.42it/s, loss=0.00206, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  61%|██████    | 1540/2524 [10:36<06:46,  2.42it/s, loss=0.00245, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  61%|██████▏   | 1550/2524 [10:40<06:42,  2.42it/s, loss=0.00245, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  61%|██████▏   | 1550/2524 [10:40<06:42,  2.42it/s, loss=0.00292, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  62%|██████▏   | 1560/2524 [10:44<06:38,  2.42it/s, loss=0.00292, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  62%|██████▏   | 1560/2524 [10:44<06:38,  2.42it/s, loss=0.00294, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  62%|██████▏   | 1570/2524 [10:48<06:34,  2.42it/s, loss=0.00294, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  62%|██████▏   | 1570/2524 [10:48<06:34,  2.42it/s, loss=0.00316, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  63%|██████▎   | 1580/2524 [10:52<06:30,  2.42it/s, loss=0.00316, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  63%|██████▎   | 1580/2524 [10:52<06:30,  2.42it/s, loss=0.00307, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  63%|██████▎   | 1590/2524 [10:57<06:25,  2.42it/s, loss=0.00307, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  63%|██████▎   | 1590/2524 [10:57<06:25,  2.42it/s, loss=0.00213, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  63%|██████▎   | 1600/2524 [11:01<06:21,  2.42it/s, loss=0.00213, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  63%|██████▎   | 1600/2524 [11:01<06:21,  2.42it/s, loss=0.00178, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  64%|██████▍   | 1610/2524 [11:05<06:17,  2.42it/s, loss=0.00178, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  64%|██████▍   | 1610/2524 [11:05<06:17,  2.42it/s, loss=0.00161, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  64%|██████▍   | 1620/2524 [11:09<06:13,  2.42it/s, loss=0.00161, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  64%|██████▍   | 1620/2524 [11:09<06:13,  2.42it/s, loss=0.0011, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 12:  65%|██████▍   | 1630/2524 [11:13<06:09,  2.42it/s, loss=0.0011, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  65%|██████▍   | 1630/2524 [11:13<06:09,  2.42it/s, loss=0.00276, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  65%|██████▍   | 1640/2524 [11:17<06:05,  2.42it/s, loss=0.00276, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  65%|██████▍   | 1640/2524 [11:17<06:05,  2.42it/s, loss=0.00306, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  65%|██████▌   | 1650/2524 [11:21<06:01,  2.42it/s, loss=0.00306, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  65%|██████▌   | 1650/2524 [11:21<06:01,  2.42it/s, loss=0.00186, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  66%|██████▌   | 1660/2524 [11:26<05:57,  2.42it/s, loss=0.00186, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  66%|██████▌   | 1660/2524 [11:26<05:57,  2.42it/s, loss=0.0022, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 12:  66%|██████▌   | 1670/2524 [11:30<05:52,  2.42it/s, loss=0.0022, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  66%|██████▌   | 1670/2524 [11:30<05:52,  2.42it/s, loss=0.00248, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  67%|██████▋   | 1680/2524 [11:34<05:48,  2.42it/s, loss=0.00248, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  67%|██████▋   | 1680/2524 [11:34<05:48,  2.42it/s, loss=0.00263, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  67%|██████▋   | 1690/2524 [11:38<05:44,  2.42it/s, loss=0.00263, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  67%|██████▋   | 1690/2524 [11:38<05:44,  2.42it/s, loss=0.00299, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  67%|██████▋   | 1700/2524 [11:42<05:40,  2.42it/s, loss=0.00299, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  67%|██████▋   | 1700/2524 [11:42<05:40,  2.42it/s, loss=0.00339, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  68%|██████▊   | 1710/2524 [11:46<05:36,  2.42it/s, loss=0.00339, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  68%|██████▊   | 1710/2524 [11:46<05:36,  2.42it/s, loss=0.00377, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  68%|██████▊   | 1720/2524 [11:50<05:32,  2.42it/s, loss=0.00377, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  68%|██████▊   | 1720/2524 [11:50<05:32,  2.42it/s, loss=0.00252, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  69%|██████▊   | 1730/2524 [11:54<05:28,  2.42it/s, loss=0.00252, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  69%|██████▊   | 1730/2524 [11:54<05:28,  2.42it/s, loss=0.00133, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  69%|██████▉   | 1740/2524 [11:59<05:23,  2.42it/s, loss=0.00133, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  69%|██████▉   | 1740/2524 [11:59<05:23,  2.42it/s, loss=0.00171, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  69%|██████▉   | 1750/2524 [12:03<05:19,  2.42it/s, loss=0.00171, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  69%|██████▉   | 1750/2524 [12:03<05:19,  2.42it/s, loss=0.0016, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 12:  70%|██████▉   | 1760/2524 [12:07<05:15,  2.42it/s, loss=0.0016, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  70%|██████▉   | 1760/2524 [12:07<05:15,  2.42it/s, loss=0.00183, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  70%|███████   | 1770/2524 [12:11<05:11,  2.42it/s, loss=0.00183, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  70%|███████   | 1770/2524 [12:11<05:11,  2.42it/s, loss=0.00308, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  71%|███████   | 1780/2524 [12:15<05:07,  2.42it/s, loss=0.00308, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  71%|███████   | 1780/2524 [12:15<05:07,  2.42it/s, loss=0.00353, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  71%|███████   | 1790/2524 [12:19<05:03,  2.42it/s, loss=0.00353, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  71%|███████   | 1790/2524 [12:19<05:03,  2.42it/s, loss=0.00253, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  71%|███████▏  | 1800/2524 [12:23<04:59,  2.42it/s, loss=0.00253, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  71%|███████▏  | 1800/2524 [12:23<04:59,  2.42it/s, loss=0.00149, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  72%|███████▏  | 1810/2524 [12:27<04:54,  2.42it/s, loss=0.00149, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  72%|███████▏  | 1810/2524 [12:27<04:54,  2.42it/s, loss=0.00161, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  72%|███████▏  | 1820/2524 [12:31<04:50,  2.42it/s, loss=0.00161, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  72%|███████▏  | 1820/2524 [12:31<04:50,  2.42it/s, loss=0.00193, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  73%|███████▎  | 1830/2524 [12:36<04:46,  2.42it/s, loss=0.00193, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  73%|███████▎  | 1830/2524 [12:36<04:46,  2.42it/s, loss=0.00134, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  73%|███████▎  | 1840/2524 [12:40<04:42,  2.42it/s, loss=0.00134, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  73%|███████▎  | 1840/2524 [12:40<04:42,  2.42it/s, loss=0.000777, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  73%|███████▎  | 1850/2524 [12:44<04:38,  2.42it/s, loss=0.000777, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  73%|███████▎  | 1850/2524 [12:44<04:38,  2.42it/s, loss=0.00159, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 12:  74%|███████▎  | 1860/2524 [12:48<04:34,  2.42it/s, loss=0.00159, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  74%|███████▎  | 1860/2524 [12:48<04:34,  2.42it/s, loss=0.00221, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  74%|███████▍  | 1870/2524 [12:52<04:30,  2.42it/s, loss=0.00221, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  74%|███████▍  | 1870/2524 [12:52<04:30,  2.42it/s, loss=0.00234, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  74%|███████▍  | 1880/2524 [12:56<04:26,  2.42it/s, loss=0.00234, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  74%|███████▍  | 1880/2524 [12:56<04:26,  2.42it/s, loss=0.0021, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 12:  75%|███████▍  | 1890/2524 [13:00<04:21,  2.42it/s, loss=0.0021, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  75%|███████▍  | 1890/2524 [13:00<04:21,  2.42it/s, loss=0.00114, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  75%|███████▌  | 1900/2524 [13:04<04:17,  2.42it/s, loss=0.00114, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  75%|███████▌  | 1900/2524 [13:04<04:17,  2.42it/s, loss=0.00147, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  76%|███████▌  | 1910/2524 [13:08<04:13,  2.42it/s, loss=0.00147, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  76%|███████▌  | 1910/2524 [13:08<04:13,  2.42it/s, loss=0.00304, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  76%|███████▌  | 1920/2524 [13:13<04:09,  2.42it/s, loss=0.00304, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  76%|███████▌  | 1920/2524 [13:13<04:09,  2.42it/s, loss=0.00301, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  76%|███████▋  | 1930/2524 [13:17<04:05,  2.42it/s, loss=0.00301, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  76%|███████▋  | 1930/2524 [13:17<04:05,  2.42it/s, loss=0.00159, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  77%|███████▋  | 1940/2524 [13:21<04:01,  2.42it/s, loss=0.00159, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  77%|███████▋  | 1940/2524 [13:21<04:01,  2.42it/s, loss=0.00156, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  77%|███████▋  | 1950/2524 [13:25<03:57,  2.42it/s, loss=0.00156, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  77%|███████▋  | 1950/2524 [13:25<03:57,  2.42it/s, loss=0.00338, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  78%|███████▊  | 1960/2524 [13:29<03:52,  2.42it/s, loss=0.00338, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  78%|███████▊  | 1960/2524 [13:29<03:52,  2.42it/s, loss=0.00295, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  78%|███████▊  | 1970/2524 [13:33<03:48,  2.42it/s, loss=0.00295, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  78%|███████▊  | 1970/2524 [13:33<03:48,  2.42it/s, loss=0.00152, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  78%|███████▊  | 1980/2524 [13:37<03:44,  2.42it/s, loss=0.00152, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  78%|███████▊  | 1980/2524 [13:37<03:44,  2.42it/s, loss=0.00219, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  79%|███████▉  | 1990/2524 [13:41<03:40,  2.42it/s, loss=0.00219, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  79%|███████▉  | 1990/2524 [13:41<03:40,  2.42it/s, loss=0.00229, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  79%|███████▉  | 2000/2524 [13:45<03:36,  2.42it/s, loss=0.00229, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  79%|███████▉  | 2000/2524 [13:45<03:36,  2.42it/s, loss=0.00302, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  80%|███████▉  | 2010/2524 [13:50<03:32,  2.42it/s, loss=0.00302, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  80%|███████▉  | 2010/2524 [13:50<03:32,  2.42it/s, loss=0.0024, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 12:  80%|████████  | 2020/2524 [13:54<03:28,  2.42it/s, loss=0.0024, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  80%|████████  | 2020/2524 [13:54<03:28,  2.42it/s, loss=0.0019, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  80%|████████  | 2030/2524 [13:58<03:24,  2.42it/s, loss=0.0019, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  80%|████████  | 2030/2524 [13:58<03:24,  2.42it/s, loss=0.00213, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  81%|████████  | 2040/2524 [14:02<03:19,  2.42it/s, loss=0.00213, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  81%|████████  | 2040/2524 [14:02<03:19,  2.42it/s, loss=0.00173, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  81%|████████  | 2050/2524 [14:06<03:15,  2.42it/s, loss=0.00173, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  81%|████████  | 2050/2524 [14:06<03:15,  2.42it/s, loss=0.0019, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 12:  82%|████████▏ | 2060/2524 [14:10<03:11,  2.42it/s, loss=0.0019, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  82%|████████▏ | 2060/2524 [14:10<03:11,  2.42it/s, loss=0.00189, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  82%|████████▏ | 2070/2524 [14:14<03:07,  2.42it/s, loss=0.00189, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  82%|████████▏ | 2070/2524 [14:14<03:07,  2.42it/s, loss=0.00246, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  82%|████████▏ | 2080/2524 [14:18<03:03,  2.42it/s, loss=0.00246, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  82%|████████▏ | 2080/2524 [14:18<03:03,  2.42it/s, loss=0.00246, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  83%|████████▎ | 2090/2524 [14:22<02:59,  2.42it/s, loss=0.00246, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  83%|████████▎ | 2090/2524 [14:22<02:59,  2.42it/s, loss=0.00205, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  83%|████████▎ | 2100/2524 [14:27<02:55,  2.42it/s, loss=0.00205, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  83%|████████▎ | 2100/2524 [14:27<02:55,  2.42it/s, loss=0.00363, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  84%|████████▎ | 2110/2524 [14:31<02:50,  2.42it/s, loss=0.00363, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  84%|████████▎ | 2110/2524 [14:31<02:50,  2.42it/s, loss=0.00323, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  84%|████████▍ | 2120/2524 [14:35<02:46,  2.42it/s, loss=0.00323, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  84%|████████▍ | 2120/2524 [14:35<02:46,  2.42it/s, loss=0.00198, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  84%|████████▍ | 2130/2524 [14:39<02:42,  2.42it/s, loss=0.00198, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  84%|████████▍ | 2130/2524 [14:39<02:42,  2.42it/s, loss=0.00228, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  85%|████████▍ | 2140/2524 [14:43<02:38,  2.42it/s, loss=0.00228, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  85%|████████▍ | 2140/2524 [14:43<02:38,  2.42it/s, loss=0.00247, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  85%|████████▌ | 2150/2524 [14:47<02:34,  2.42it/s, loss=0.00247, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  85%|████████▌ | 2150/2524 [14:47<02:34,  2.42it/s, loss=0.00314, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  86%|████████▌ | 2160/2524 [14:51<02:30,  2.42it/s, loss=0.00314, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  86%|████████▌ | 2160/2524 [14:51<02:30,  2.42it/s, loss=0.0029, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 12:  86%|████████▌ | 2170/2524 [14:55<02:26,  2.42it/s, loss=0.0029, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  86%|████████▌ | 2170/2524 [14:55<02:26,  2.42it/s, loss=0.00156, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  86%|████████▋ | 2180/2524 [15:00<02:22,  2.42it/s, loss=0.00156, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  86%|████████▋ | 2180/2524 [15:00<02:22,  2.42it/s, loss=0.00122, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  87%|████████▋ | 2190/2524 [15:04<02:17,  2.42it/s, loss=0.00122, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  87%|████████▋ | 2190/2524 [15:04<02:17,  2.42it/s, loss=0.0023, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 12:  87%|████████▋ | 2200/2524 [15:08<02:13,  2.42it/s, loss=0.0023, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  87%|████████▋ | 2200/2524 [15:08<02:13,  2.42it/s, loss=0.00235, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  88%|████████▊ | 2210/2524 [15:12<02:09,  2.42it/s, loss=0.00235, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  88%|████████▊ | 2210/2524 [15:12<02:09,  2.42it/s, loss=0.00252, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  88%|████████▊ | 2220/2524 [15:16<02:05,  2.42it/s, loss=0.00252, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  88%|████████▊ | 2220/2524 [15:16<02:05,  2.42it/s, loss=0.00182, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  88%|████████▊ | 2230/2524 [15:20<02:01,  2.42it/s, loss=0.00182, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  88%|████████▊ | 2230/2524 [15:20<02:01,  2.42it/s, loss=0.00122, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  89%|████████▊ | 2240/2524 [15:24<01:57,  2.42it/s, loss=0.00122, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  89%|████████▊ | 2240/2524 [15:24<01:57,  2.42it/s, loss=0.00189, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  89%|████████▉ | 2250/2524 [15:28<01:53,  2.42it/s, loss=0.00189, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  89%|████████▉ | 2250/2524 [15:28<01:53,  2.42it/s, loss=0.0018, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 12:  90%|████████▉ | 2260/2524 [15:32<01:48,  2.42it/s, loss=0.0018, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  90%|████████▉ | 2260/2524 [15:32<01:48,  2.42it/s, loss=0.00189, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  90%|████████▉ | 2270/2524 [15:37<01:44,  2.42it/s, loss=0.00189, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  90%|████████▉ | 2270/2524 [15:37<01:44,  2.42it/s, loss=0.00203, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  90%|█████████ | 2280/2524 [15:41<01:40,  2.42it/s, loss=0.00203, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  90%|█████████ | 2280/2524 [15:41<01:40,  2.42it/s, loss=0.00199, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  91%|█████████ | 2290/2524 [15:45<01:36,  2.42it/s, loss=0.00199, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  91%|█████████ | 2290/2524 [15:45<01:36,  2.42it/s, loss=0.00223, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  91%|█████████ | 2300/2524 [15:49<01:32,  2.42it/s, loss=0.00223, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  91%|█████████ | 2300/2524 [15:49<01:32,  2.42it/s, loss=0.00258, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  92%|█████████▏| 2310/2524 [15:53<01:28,  2.42it/s, loss=0.00258, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  92%|█████████▏| 2310/2524 [15:53<01:28,  2.42it/s, loss=0.00281, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  92%|█████████▏| 2320/2524 [15:57<01:24,  2.42it/s, loss=0.00281, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  92%|█████████▏| 2320/2524 [15:57<01:24,  2.42it/s, loss=0.00267, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  92%|█████████▏| 2330/2524 [16:01<01:20,  2.42it/s, loss=0.00267, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  92%|█████████▏| 2330/2524 [16:01<01:20,  2.42it/s, loss=0.0023, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 12:  93%|█████████▎| 2340/2524 [16:05<01:15,  2.42it/s, loss=0.0023, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  93%|█████████▎| 2340/2524 [16:05<01:15,  2.42it/s, loss=0.00182, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  93%|█████████▎| 2350/2524 [16:09<01:11,  2.42it/s, loss=0.00182, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  93%|█████████▎| 2350/2524 [16:09<01:11,  2.42it/s, loss=0.00152, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  94%|█████████▎| 2360/2524 [16:14<01:07,  2.42it/s, loss=0.00152, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  94%|█████████▎| 2360/2524 [16:14<01:07,  2.42it/s, loss=0.00227, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  94%|█████████▍| 2370/2524 [16:18<01:03,  2.42it/s, loss=0.00227, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  94%|█████████▍| 2370/2524 [16:18<01:03,  2.42it/s, loss=0.00226, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  94%|█████████▍| 2380/2524 [16:22<00:59,  2.42it/s, loss=0.00226, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  94%|█████████▍| 2380/2524 [16:22<00:59,  2.42it/s, loss=0.00185, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  95%|█████████▍| 2390/2524 [16:26<00:55,  2.42it/s, loss=0.00185, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  95%|█████████▍| 2390/2524 [16:26<00:55,  2.42it/s, loss=0.00186, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  95%|█████████▌| 2400/2524 [16:30<00:51,  2.42it/s, loss=0.00186, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  95%|█████████▌| 2400/2524 [16:30<00:51,  2.42it/s, loss=0.0028, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 12:  95%|█████████▌| 2410/2524 [16:34<00:47,  2.42it/s, loss=0.0028, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  95%|█████████▌| 2410/2524 [16:34<00:47,  2.42it/s, loss=0.00317, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  96%|█████████▌| 2420/2524 [16:38<00:42,  2.42it/s, loss=0.00317, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  96%|█████████▌| 2420/2524 [16:38<00:42,  2.42it/s, loss=0.00165, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  96%|█████████▋| 2430/2524 [16:42<00:38,  2.42it/s, loss=0.00165, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  96%|█████████▋| 2430/2524 [16:42<00:38,  2.42it/s, loss=0.00109, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  97%|█████████▋| 2440/2524 [16:46<00:34,  2.42it/s, loss=0.00109, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  97%|█████████▋| 2440/2524 [16:46<00:34,  2.42it/s, loss=0.00238, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  97%|█████████▋| 2450/2524 [16:51<00:30,  2.42it/s, loss=0.00238, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  97%|█████████▋| 2450/2524 [16:51<00:30,  2.42it/s, loss=0.00276, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  97%|█████████▋| 2460/2524 [16:55<00:26,  2.42it/s, loss=0.00276, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  97%|█████████▋| 2460/2524 [16:55<00:26,  2.42it/s, loss=0.00235, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  98%|█████████▊| 2470/2524 [16:59<00:22,  2.42it/s, loss=0.00235, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  98%|█████████▊| 2470/2524 [16:59<00:22,  2.42it/s, loss=0.00173, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  98%|█████████▊| 2480/2524 [17:03<00:18,  2.42it/s, loss=0.00173, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  98%|█████████▊| 2480/2524 [17:03<00:18,  2.42it/s, loss=0.00257, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  99%|█████████▊| 2490/2524 [17:07<00:14,  2.42it/s, loss=0.00257, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  99%|█████████▊| 2490/2524 [17:07<00:14,  2.42it/s, loss=0.00314, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  99%|█████████▉| 2500/2524 [17:11<00:09,  2.42it/s, loss=0.00314, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  99%|█████████▉| 2500/2524 [17:11<00:09,  2.42it/s, loss=0.00114, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  99%|█████████▉| 2510/2524 [17:15<00:05,  2.42it/s, loss=0.00114, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:  99%|█████████▉| 2510/2524 [17:15<00:05,  2.42it/s, loss=0.00111, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12: 100%|█████████▉| 2520/2524 [17:19<00:01,  2.42it/s, loss=0.00111, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12: 100%|█████████▉| 2520/2524 [17:19<00:01,  2.42it/s, loss=0.00169, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12: 100%|██████████| 2524/2524 [17:21<00:00,  2.42it/s, loss=0.00169, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12: 100%|██████████| 2524/2524 [17:21<00:00,  2.42it/s, loss=0.00244, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12: 100%|██████████| 2524/2524 [17:21<00:00,  2.42it/s, loss=0.00244, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 12:   0%|          | 0/2524 [00:00<?, ?it/s, loss=0.00244, v_num=3, val_loss=0.306, val_f1=63.60]           Epoch 13:   0%|          | 0/2524 [00:00<?, ?it/s, loss=0.00244, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   0%|          | 10/2524 [00:04<18:40,  2.24it/s, loss=0.00244, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   0%|          | 10/2524 [00:04<18:43,  2.24it/s, loss=0.0023, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:   1%|          | 20/2524 [00:08<17:50,  2.34it/s, loss=0.0023, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   1%|          | 20/2524 [00:08<17:51,  2.34it/s, loss=0.00164, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   1%|          | 30/2524 [00:12<17:31,  2.37it/s, loss=0.00164, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   1%|          | 30/2524 [00:12<17:31,  2.37it/s, loss=0.00131, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   2%|▏         | 40/2524 [00:16<17:22,  2.38it/s, loss=0.00131, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   2%|▏         | 40/2524 [00:16<17:23,  2.38it/s, loss=0.00159, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   2%|▏         | 50/2524 [00:20<17:13,  2.39it/s, loss=0.00159, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   2%|▏         | 50/2524 [00:20<17:13,  2.39it/s, loss=0.0017, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:   2%|▏         | 60/2524 [00:24<17:05,  2.40it/s, loss=0.0017, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   2%|▏         | 60/2524 [00:24<17:06,  2.40it/s, loss=0.00198, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   3%|▎         | 70/2524 [00:29<16:59,  2.41it/s, loss=0.00198, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   3%|▎         | 70/2524 [00:29<17:00,  2.41it/s, loss=0.00254, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   3%|▎         | 80/2524 [00:33<16:54,  2.41it/s, loss=0.00254, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   3%|▎         | 80/2524 [00:33<16:54,  2.41it/s, loss=0.0032, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:   4%|▎         | 90/2524 [00:37<16:53,  2.40it/s, loss=0.0032, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   4%|▎         | 90/2524 [00:37<16:53,  2.40it/s, loss=0.00253, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   4%|▍         | 100/2524 [00:41<16:47,  2.41it/s, loss=0.00253, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   4%|▍         | 100/2524 [00:41<16:47,  2.40it/s, loss=0.00207, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   4%|▍         | 110/2524 [00:45<16:42,  2.41it/s, loss=0.00207, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   4%|▍         | 110/2524 [00:45<16:43,  2.41it/s, loss=0.00191, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   5%|▍         | 120/2524 [00:49<16:37,  2.41it/s, loss=0.00191, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   5%|▍         | 120/2524 [00:49<16:38,  2.41it/s, loss=0.00207, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   5%|▌         | 130/2524 [00:53<16:32,  2.41it/s, loss=0.00207, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   5%|▌         | 130/2524 [00:53<16:33,  2.41it/s, loss=0.00232, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   6%|▌         | 140/2524 [00:58<16:28,  2.41it/s, loss=0.00232, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   6%|▌         | 140/2524 [00:58<16:29,  2.41it/s, loss=0.00112, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   6%|▌         | 150/2524 [01:02<16:24,  2.41it/s, loss=0.00112, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   6%|▌         | 150/2524 [01:02<16:24,  2.41it/s, loss=0.00151, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   6%|▋         | 160/2524 [01:06<16:19,  2.41it/s, loss=0.00151, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   6%|▋         | 160/2524 [01:06<16:19,  2.41it/s, loss=0.00188, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   7%|▋         | 170/2524 [01:10<16:14,  2.42it/s, loss=0.00188, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   7%|▋         | 170/2524 [01:10<16:14,  2.41it/s, loss=0.0013, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:   7%|▋         | 180/2524 [01:14<16:10,  2.42it/s, loss=0.0013, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   7%|▋         | 180/2524 [01:14<16:10,  2.42it/s, loss=0.00108, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   8%|▊         | 190/2524 [01:18<16:07,  2.41it/s, loss=0.00108, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   8%|▊         | 190/2524 [01:18<16:07,  2.41it/s, loss=0.00127, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   8%|▊         | 200/2524 [01:22<16:02,  2.41it/s, loss=0.00127, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   8%|▊         | 200/2524 [01:22<16:03,  2.41it/s, loss=0.00129, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   8%|▊         | 210/2524 [01:26<15:58,  2.41it/s, loss=0.00129, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   8%|▊         | 210/2524 [01:26<15:58,  2.41it/s, loss=0.00112, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   9%|▊         | 220/2524 [01:31<15:53,  2.42it/s, loss=0.00112, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   9%|▊         | 220/2524 [01:31<15:54,  2.41it/s, loss=0.00178, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   9%|▉         | 230/2524 [01:35<15:49,  2.42it/s, loss=0.00178, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   9%|▉         | 230/2524 [01:35<15:49,  2.42it/s, loss=0.0021, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:  10%|▉         | 240/2524 [01:39<15:45,  2.42it/s, loss=0.0021, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  10%|▉         | 240/2524 [01:39<15:45,  2.41it/s, loss=0.0012, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  10%|▉         | 250/2524 [01:43<15:41,  2.42it/s, loss=0.0012, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  10%|▉         | 250/2524 [01:43<15:41,  2.42it/s, loss=0.000895, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  10%|█         | 260/2524 [01:47<15:36,  2.42it/s, loss=0.000895, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  10%|█         | 260/2524 [01:47<15:36,  2.42it/s, loss=0.00286, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:  11%|█         | 270/2524 [01:51<15:32,  2.42it/s, loss=0.00286, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  11%|█         | 270/2524 [01:51<15:32,  2.42it/s, loss=0.00366, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  11%|█         | 280/2524 [01:55<15:28,  2.42it/s, loss=0.00366, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  11%|█         | 280/2524 [01:55<15:28,  2.42it/s, loss=0.00279, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  11%|█▏        | 290/2524 [02:00<15:24,  2.42it/s, loss=0.00279, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  11%|█▏        | 290/2524 [02:00<15:25,  2.42it/s, loss=0.00212, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  12%|█▏        | 300/2524 [02:04<15:20,  2.42it/s, loss=0.00212, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  12%|█▏        | 300/2524 [02:04<15:20,  2.42it/s, loss=0.0014, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:  12%|█▏        | 310/2524 [02:08<15:16,  2.42it/s, loss=0.0014, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  12%|█▏        | 310/2524 [02:08<15:16,  2.42it/s, loss=0.00152, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  13%|█▎        | 320/2524 [02:12<15:11,  2.42it/s, loss=0.00152, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  13%|█▎        | 320/2524 [02:12<15:11,  2.42it/s, loss=0.00164, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  13%|█▎        | 330/2524 [02:16<15:07,  2.42it/s, loss=0.00164, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  13%|█▎        | 330/2524 [02:16<15:07,  2.42it/s, loss=0.00125, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  13%|█▎        | 340/2524 [02:20<15:03,  2.42it/s, loss=0.00125, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  13%|█▎        | 340/2524 [02:20<15:03,  2.42it/s, loss=0.00126, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  14%|█▍        | 350/2524 [02:24<14:59,  2.42it/s, loss=0.00126, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  14%|█▍        | 350/2524 [02:24<14:59,  2.42it/s, loss=0.00151, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  14%|█▍        | 360/2524 [02:28<14:55,  2.42it/s, loss=0.00151, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  14%|█▍        | 360/2524 [02:28<14:55,  2.42it/s, loss=0.00108, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  15%|█▍        | 370/2524 [02:33<14:50,  2.42it/s, loss=0.00108, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  15%|█▍        | 370/2524 [02:33<14:50,  2.42it/s, loss=0.00105, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  15%|█▌        | 380/2524 [02:37<14:46,  2.42it/s, loss=0.00105, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  15%|█▌        | 380/2524 [02:37<14:46,  2.42it/s, loss=0.0015, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:  15%|█▌        | 390/2524 [02:41<14:43,  2.42it/s, loss=0.0015, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  15%|█▌        | 390/2524 [02:41<14:43,  2.42it/s, loss=0.0014, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  16%|█▌        | 400/2524 [02:45<14:38,  2.42it/s, loss=0.0014, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  16%|█▌        | 400/2524 [02:45<14:38,  2.42it/s, loss=0.00132, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  16%|█▌        | 410/2524 [02:49<14:34,  2.42it/s, loss=0.00132, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  16%|█▌        | 410/2524 [02:49<14:34,  2.42it/s, loss=0.00224, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  17%|█▋        | 420/2524 [02:53<14:30,  2.42it/s, loss=0.00224, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  17%|█▋        | 420/2524 [02:53<14:30,  2.42it/s, loss=0.00334, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  17%|█▋        | 430/2524 [02:57<14:25,  2.42it/s, loss=0.00334, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  17%|█▋        | 430/2524 [02:57<14:25,  2.42it/s, loss=0.00256, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  17%|█▋        | 440/2524 [03:01<14:21,  2.42it/s, loss=0.00256, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  17%|█▋        | 440/2524 [03:01<14:21,  2.42it/s, loss=0.00113, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  18%|█▊        | 450/2524 [03:06<14:17,  2.42it/s, loss=0.00113, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  18%|█▊        | 450/2524 [03:06<14:17,  2.42it/s, loss=0.00099, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  18%|█▊        | 460/2524 [03:10<14:13,  2.42it/s, loss=0.00099, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  18%|█▊        | 460/2524 [03:10<14:13,  2.42it/s, loss=0.00199, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  19%|█▊        | 470/2524 [03:14<14:09,  2.42it/s, loss=0.00199, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  19%|█▊        | 470/2524 [03:14<14:09,  2.42it/s, loss=0.00206, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  19%|█▉        | 480/2524 [03:18<14:04,  2.42it/s, loss=0.00206, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  19%|█▉        | 480/2524 [03:18<14:04,  2.42it/s, loss=0.0024, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:  19%|█▉        | 490/2524 [03:22<14:01,  2.42it/s, loss=0.0024, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  19%|█▉        | 490/2524 [03:22<14:01,  2.42it/s, loss=0.00212, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  20%|█▉        | 500/2524 [03:26<13:57,  2.42it/s, loss=0.00212, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  20%|█▉        | 500/2524 [03:26<13:57,  2.42it/s, loss=0.000559, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  20%|██        | 510/2524 [03:30<13:52,  2.42it/s, loss=0.000559, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  20%|██        | 510/2524 [03:30<13:52,  2.42it/s, loss=0.00153, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:  21%|██        | 520/2524 [03:34<13:48,  2.42it/s, loss=0.00153, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  21%|██        | 520/2524 [03:34<13:48,  2.42it/s, loss=0.00532, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  21%|██        | 530/2524 [03:39<13:44,  2.42it/s, loss=0.00532, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  21%|██        | 530/2524 [03:39<13:44,  2.42it/s, loss=0.00609, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  21%|██▏       | 540/2524 [03:43<13:40,  2.42it/s, loss=0.00609, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  21%|██▏       | 540/2524 [03:43<13:40,  2.42it/s, loss=0.00308, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  22%|██▏       | 550/2524 [03:47<13:36,  2.42it/s, loss=0.00308, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  22%|██▏       | 550/2524 [03:47<13:36,  2.42it/s, loss=0.00149, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  22%|██▏       | 560/2524 [03:51<13:31,  2.42it/s, loss=0.00149, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  22%|██▏       | 560/2524 [03:51<13:31,  2.42it/s, loss=0.000789, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  23%|██▎       | 570/2524 [03:55<13:27,  2.42it/s, loss=0.000789, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  23%|██▎       | 570/2524 [03:55<13:27,  2.42it/s, loss=0.00127, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:  23%|██▎       | 580/2524 [03:59<13:23,  2.42it/s, loss=0.00127, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  23%|██▎       | 580/2524 [03:59<13:23,  2.42it/s, loss=0.00146, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  23%|██▎       | 590/2524 [04:03<13:19,  2.42it/s, loss=0.00146, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  23%|██▎       | 590/2524 [04:03<13:19,  2.42it/s, loss=0.00177, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  24%|██▍       | 600/2524 [04:08<13:15,  2.42it/s, loss=0.00177, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  24%|██▍       | 600/2524 [04:08<13:15,  2.42it/s, loss=0.00243, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  24%|██▍       | 610/2524 [04:12<13:11,  2.42it/s, loss=0.00243, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  24%|██▍       | 610/2524 [04:12<13:11,  2.42it/s, loss=0.00245, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  25%|██▍       | 620/2524 [04:16<13:06,  2.42it/s, loss=0.00245, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  25%|██▍       | 620/2524 [04:16<13:06,  2.42it/s, loss=0.00187, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  25%|██▍       | 630/2524 [04:20<13:02,  2.42it/s, loss=0.00187, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  25%|██▍       | 630/2524 [04:20<13:02,  2.42it/s, loss=0.00093, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  25%|██▌       | 640/2524 [04:24<12:58,  2.42it/s, loss=0.00093, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  25%|██▌       | 640/2524 [04:24<12:58,  2.42it/s, loss=0.00182, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  26%|██▌       | 650/2524 [04:28<12:54,  2.42it/s, loss=0.00182, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  26%|██▌       | 650/2524 [04:28<12:54,  2.42it/s, loss=0.00262, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  26%|██▌       | 660/2524 [04:32<12:49,  2.42it/s, loss=0.00262, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  26%|██▌       | 660/2524 [04:32<12:50,  2.42it/s, loss=0.00248, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  27%|██▋       | 670/2524 [04:36<12:45,  2.42it/s, loss=0.00248, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  27%|██▋       | 670/2524 [04:36<12:45,  2.42it/s, loss=0.00223, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  27%|██▋       | 680/2524 [04:40<12:41,  2.42it/s, loss=0.00223, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  27%|██▋       | 680/2524 [04:40<12:41,  2.42it/s, loss=0.00209, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  27%|██▋       | 690/2524 [04:45<12:37,  2.42it/s, loss=0.00209, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  27%|██▋       | 690/2524 [04:45<12:37,  2.42it/s, loss=0.00149, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  28%|██▊       | 700/2524 [04:49<12:33,  2.42it/s, loss=0.00149, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  28%|██▊       | 700/2524 [04:49<12:33,  2.42it/s, loss=0.00128, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  28%|██▊       | 710/2524 [04:53<12:29,  2.42it/s, loss=0.00128, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  28%|██▊       | 710/2524 [04:53<12:29,  2.42it/s, loss=0.00153, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  29%|██▊       | 720/2524 [04:57<12:25,  2.42it/s, loss=0.00153, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  29%|██▊       | 720/2524 [04:57<12:25,  2.42it/s, loss=0.00167, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  29%|██▉       | 730/2524 [05:01<12:21,  2.42it/s, loss=0.00167, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  29%|██▉       | 730/2524 [05:01<12:21,  2.42it/s, loss=0.00185, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  29%|██▉       | 740/2524 [05:05<12:16,  2.42it/s, loss=0.00185, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  29%|██▉       | 740/2524 [05:05<12:16,  2.42it/s, loss=0.002, v_num=3, val_loss=0.306, val_f1=63.60]  Epoch 13:  30%|██▉       | 750/2524 [05:09<12:12,  2.42it/s, loss=0.002, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  30%|██▉       | 750/2524 [05:09<12:12,  2.42it/s, loss=0.00204, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  30%|███       | 760/2524 [05:13<12:08,  2.42it/s, loss=0.00204, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  30%|███       | 760/2524 [05:13<12:08,  2.42it/s, loss=0.00101, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  31%|███       | 770/2524 [05:17<12:04,  2.42it/s, loss=0.00101, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  31%|███       | 770/2524 [05:18<12:04,  2.42it/s, loss=0.000547, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  31%|███       | 780/2524 [05:22<12:00,  2.42it/s, loss=0.000547, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  31%|███       | 780/2524 [05:22<12:00,  2.42it/s, loss=0.00108, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:  31%|███▏      | 790/2524 [05:26<11:56,  2.42it/s, loss=0.00108, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  31%|███▏      | 790/2524 [05:26<11:56,  2.42it/s, loss=0.00214, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  32%|███▏      | 800/2524 [05:30<11:52,  2.42it/s, loss=0.00214, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  32%|███▏      | 800/2524 [05:30<11:52,  2.42it/s, loss=0.00172, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  32%|███▏      | 810/2524 [05:34<11:47,  2.42it/s, loss=0.00172, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  32%|███▏      | 810/2524 [05:34<11:47,  2.42it/s, loss=0.000972, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  32%|███▏      | 820/2524 [05:38<11:43,  2.42it/s, loss=0.000972, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  32%|███▏      | 820/2524 [05:38<11:43,  2.42it/s, loss=0.00165, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:  33%|███▎      | 830/2524 [05:42<11:39,  2.42it/s, loss=0.00165, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  33%|███▎      | 830/2524 [05:42<11:39,  2.42it/s, loss=0.00237, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  33%|███▎      | 840/2524 [05:46<11:35,  2.42it/s, loss=0.00237, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  33%|███▎      | 840/2524 [05:46<11:35,  2.42it/s, loss=0.00161, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  34%|███▎      | 850/2524 [05:51<11:31,  2.42it/s, loss=0.00161, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  34%|███▎      | 850/2524 [05:51<11:31,  2.42it/s, loss=0.00145, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  34%|███▍      | 860/2524 [05:55<11:27,  2.42it/s, loss=0.00145, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  34%|███▍      | 860/2524 [05:55<11:27,  2.42it/s, loss=0.00196, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  34%|███▍      | 870/2524 [05:59<11:22,  2.42it/s, loss=0.00196, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  34%|███▍      | 870/2524 [05:59<11:22,  2.42it/s, loss=0.00188, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  35%|███▍      | 880/2524 [06:03<11:18,  2.42it/s, loss=0.00188, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  35%|███▍      | 880/2524 [06:03<11:18,  2.42it/s, loss=0.00292, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  35%|███▌      | 890/2524 [06:07<11:14,  2.42it/s, loss=0.00292, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  35%|███▌      | 890/2524 [06:07<11:14,  2.42it/s, loss=0.00236, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  36%|███▌      | 900/2524 [06:11<11:10,  2.42it/s, loss=0.00236, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  36%|███▌      | 900/2524 [06:11<11:10,  2.42it/s, loss=0.00234, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  36%|███▌      | 910/2524 [06:15<11:06,  2.42it/s, loss=0.00234, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  36%|███▌      | 910/2524 [06:15<11:06,  2.42it/s, loss=0.0029, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:  36%|███▋      | 920/2524 [06:19<11:02,  2.42it/s, loss=0.0029, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  36%|███▋      | 920/2524 [06:19<11:02,  2.42it/s, loss=0.00172, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  37%|███▋      | 930/2524 [06:24<10:58,  2.42it/s, loss=0.00172, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  37%|███▋      | 930/2524 [06:24<10:58,  2.42it/s, loss=0.00209, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  37%|███▋      | 940/2524 [06:28<10:54,  2.42it/s, loss=0.00209, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  37%|███▋      | 940/2524 [06:28<10:54,  2.42it/s, loss=0.00227, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  38%|███▊      | 950/2524 [06:32<10:49,  2.42it/s, loss=0.00227, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  38%|███▊      | 950/2524 [06:32<10:50,  2.42it/s, loss=0.0014, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:  38%|███▊      | 960/2524 [06:36<10:45,  2.42it/s, loss=0.0014, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  38%|███▊      | 960/2524 [06:36<10:45,  2.42it/s, loss=0.00139, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  38%|███▊      | 970/2524 [06:40<10:41,  2.42it/s, loss=0.00139, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  38%|███▊      | 970/2524 [06:40<10:41,  2.42it/s, loss=0.00166, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  39%|███▉      | 980/2524 [06:44<10:37,  2.42it/s, loss=0.00166, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  39%|███▉      | 980/2524 [06:44<10:37,  2.42it/s, loss=0.00136, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  39%|███▉      | 990/2524 [06:48<10:33,  2.42it/s, loss=0.00136, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  39%|███▉      | 990/2524 [06:48<10:33,  2.42it/s, loss=0.000823, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  40%|███▉      | 1000/2524 [06:53<10:29,  2.42it/s, loss=0.000823, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  40%|███▉      | 1000/2524 [06:53<10:29,  2.42it/s, loss=0.000677, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  40%|████      | 1010/2524 [06:57<10:25,  2.42it/s, loss=0.000677, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  40%|████      | 1010/2524 [06:57<10:25,  2.42it/s, loss=0.00189, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:  40%|████      | 1020/2524 [07:01<10:21,  2.42it/s, loss=0.00189, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  40%|████      | 1020/2524 [07:01<10:21,  2.42it/s, loss=0.00289, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  41%|████      | 1030/2524 [07:05<10:16,  2.42it/s, loss=0.00289, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  41%|████      | 1030/2524 [07:05<10:16,  2.42it/s, loss=0.00187, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  41%|████      | 1040/2524 [07:09<10:12,  2.42it/s, loss=0.00187, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  41%|████      | 1040/2524 [07:09<10:12,  2.42it/s, loss=0.00205, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  42%|████▏     | 1050/2524 [07:13<10:08,  2.42it/s, loss=0.00205, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  42%|████▏     | 1050/2524 [07:13<10:08,  2.42it/s, loss=0.00237, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  42%|████▏     | 1060/2524 [07:17<10:04,  2.42it/s, loss=0.00237, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  42%|████▏     | 1060/2524 [07:17<10:04,  2.42it/s, loss=0.00352, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  42%|████▏     | 1070/2524 [07:21<10:00,  2.42it/s, loss=0.00352, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  42%|████▏     | 1070/2524 [07:21<10:00,  2.42it/s, loss=0.00555, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  43%|████▎     | 1080/2524 [07:25<09:56,  2.42it/s, loss=0.00555, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  43%|████▎     | 1080/2524 [07:25<09:56,  2.42it/s, loss=0.00461, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  43%|████▎     | 1090/2524 [07:30<09:52,  2.42it/s, loss=0.00461, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  43%|████▎     | 1090/2524 [07:30<09:52,  2.42it/s, loss=0.00242, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  44%|████▎     | 1100/2524 [07:34<09:48,  2.42it/s, loss=0.00242, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  44%|████▎     | 1100/2524 [07:34<09:48,  2.42it/s, loss=0.00229, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  44%|████▍     | 1110/2524 [07:38<09:43,  2.42it/s, loss=0.00229, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  44%|████▍     | 1110/2524 [07:38<09:44,  2.42it/s, loss=0.00255, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  44%|████▍     | 1120/2524 [07:42<09:39,  2.42it/s, loss=0.00255, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  44%|████▍     | 1120/2524 [07:42<09:39,  2.42it/s, loss=0.00128, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  45%|████▍     | 1130/2524 [07:46<09:35,  2.42it/s, loss=0.00128, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  45%|████▍     | 1130/2524 [07:46<09:35,  2.42it/s, loss=0.00228, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  45%|████▌     | 1140/2524 [07:50<09:31,  2.42it/s, loss=0.00228, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  45%|████▌     | 1140/2524 [07:50<09:31,  2.42it/s, loss=0.00263, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  46%|████▌     | 1150/2524 [07:54<09:27,  2.42it/s, loss=0.00263, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  46%|████▌     | 1150/2524 [07:54<09:27,  2.42it/s, loss=0.00149, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  46%|████▌     | 1160/2524 [07:59<09:23,  2.42it/s, loss=0.00149, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  46%|████▌     | 1160/2524 [07:59<09:23,  2.42it/s, loss=0.00193, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  46%|████▋     | 1170/2524 [08:03<09:19,  2.42it/s, loss=0.00193, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  46%|████▋     | 1170/2524 [08:03<09:19,  2.42it/s, loss=0.00167, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  47%|████▋     | 1180/2524 [08:07<09:14,  2.42it/s, loss=0.00167, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  47%|████▋     | 1180/2524 [08:07<09:14,  2.42it/s, loss=0.00191, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  47%|████▋     | 1190/2524 [08:11<09:10,  2.42it/s, loss=0.00191, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  47%|████▋     | 1190/2524 [08:11<09:10,  2.42it/s, loss=0.0024, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:  48%|████▊     | 1200/2524 [08:15<09:06,  2.42it/s, loss=0.0024, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  48%|████▊     | 1200/2524 [08:15<09:06,  2.42it/s, loss=0.00269, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  48%|████▊     | 1210/2524 [08:19<09:02,  2.42it/s, loss=0.00269, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  48%|████▊     | 1210/2524 [08:19<09:02,  2.42it/s, loss=0.00305, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  48%|████▊     | 1220/2524 [08:23<08:58,  2.42it/s, loss=0.00305, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  48%|████▊     | 1220/2524 [08:23<08:58,  2.42it/s, loss=0.00227, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  49%|████▊     | 1230/2524 [08:27<08:54,  2.42it/s, loss=0.00227, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  49%|████▊     | 1230/2524 [08:27<08:54,  2.42it/s, loss=0.00199, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  49%|████▉     | 1240/2524 [08:32<08:50,  2.42it/s, loss=0.00199, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  49%|████▉     | 1240/2524 [08:32<08:50,  2.42it/s, loss=0.00284, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  50%|████▉     | 1250/2524 [08:36<08:46,  2.42it/s, loss=0.00284, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  50%|████▉     | 1250/2524 [08:36<08:46,  2.42it/s, loss=0.0022, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:  50%|████▉     | 1260/2524 [08:40<08:41,  2.42it/s, loss=0.0022, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  50%|████▉     | 1260/2524 [08:40<08:41,  2.42it/s, loss=0.00127, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  50%|█████     | 1270/2524 [08:44<08:37,  2.42it/s, loss=0.00127, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  50%|█████     | 1270/2524 [08:44<08:37,  2.42it/s, loss=0.00127, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  51%|█████     | 1280/2524 [08:48<08:33,  2.42it/s, loss=0.00127, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  51%|█████     | 1280/2524 [08:48<08:33,  2.42it/s, loss=0.00167, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  51%|█████     | 1290/2524 [08:52<08:29,  2.42it/s, loss=0.00167, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  51%|█████     | 1290/2524 [08:52<08:29,  2.42it/s, loss=0.00159, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  52%|█████▏    | 1300/2524 [08:56<08:25,  2.42it/s, loss=0.00159, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  52%|█████▏    | 1300/2524 [08:56<08:25,  2.42it/s, loss=0.00177, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  52%|█████▏    | 1310/2524 [09:00<08:21,  2.42it/s, loss=0.00177, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  52%|█████▏    | 1310/2524 [09:00<08:21,  2.42it/s, loss=0.00217, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  52%|█████▏    | 1320/2524 [09:05<08:17,  2.42it/s, loss=0.00217, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  52%|█████▏    | 1320/2524 [09:05<08:17,  2.42it/s, loss=0.00146, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  53%|█████▎    | 1330/2524 [09:09<08:13,  2.42it/s, loss=0.00146, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  53%|█████▎    | 1330/2524 [09:09<08:13,  2.42it/s, loss=0.00134, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  53%|█████▎    | 1340/2524 [09:13<08:08,  2.42it/s, loss=0.00134, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  53%|█████▎    | 1340/2524 [09:13<08:08,  2.42it/s, loss=0.00186, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  53%|█████▎    | 1350/2524 [09:17<08:04,  2.42it/s, loss=0.00186, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  53%|█████▎    | 1350/2524 [09:17<08:04,  2.42it/s, loss=0.00308, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  54%|█████▍    | 1360/2524 [09:21<08:00,  2.42it/s, loss=0.00308, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  54%|█████▍    | 1360/2524 [09:21<08:00,  2.42it/s, loss=0.00251, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  54%|█████▍    | 1370/2524 [09:25<07:56,  2.42it/s, loss=0.00251, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  54%|█████▍    | 1370/2524 [09:25<07:56,  2.42it/s, loss=0.00195, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  55%|█████▍    | 1380/2524 [09:29<07:52,  2.42it/s, loss=0.00195, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  55%|█████▍    | 1380/2524 [09:29<07:52,  2.42it/s, loss=0.00209, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  55%|█████▌    | 1390/2524 [09:33<07:48,  2.42it/s, loss=0.00209, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  55%|█████▌    | 1390/2524 [09:33<07:48,  2.42it/s, loss=0.00113, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  55%|█████▌    | 1400/2524 [09:38<07:44,  2.42it/s, loss=0.00113, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  55%|█████▌    | 1400/2524 [09:38<07:44,  2.42it/s, loss=0.000583, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  56%|█████▌    | 1410/2524 [09:42<07:39,  2.42it/s, loss=0.000583, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  56%|█████▌    | 1410/2524 [09:42<07:39,  2.42it/s, loss=0.00121, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:  56%|█████▋    | 1420/2524 [09:46<07:35,  2.42it/s, loss=0.00121, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  56%|█████▋    | 1420/2524 [09:46<07:35,  2.42it/s, loss=0.00189, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  57%|█████▋    | 1430/2524 [09:50<07:31,  2.42it/s, loss=0.00189, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  57%|█████▋    | 1430/2524 [09:50<07:31,  2.42it/s, loss=0.00152, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  57%|█████▋    | 1440/2524 [09:54<07:27,  2.42it/s, loss=0.00152, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  57%|█████▋    | 1440/2524 [09:54<07:27,  2.42it/s, loss=0.00137, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  57%|█████▋    | 1450/2524 [09:58<07:23,  2.42it/s, loss=0.00137, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  57%|█████▋    | 1450/2524 [09:58<07:23,  2.42it/s, loss=0.00225, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  58%|█████▊    | 1460/2524 [10:02<07:19,  2.42it/s, loss=0.00225, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  58%|█████▊    | 1460/2524 [10:02<07:19,  2.42it/s, loss=0.00277, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  58%|█████▊    | 1470/2524 [10:06<07:15,  2.42it/s, loss=0.00277, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  58%|█████▊    | 1470/2524 [10:06<07:15,  2.42it/s, loss=0.00211, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  59%|█████▊    | 1480/2524 [10:10<07:10,  2.42it/s, loss=0.00211, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  59%|█████▊    | 1480/2524 [10:10<07:10,  2.42it/s, loss=0.00241, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  59%|█████▉    | 1490/2524 [10:15<07:06,  2.42it/s, loss=0.00241, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  59%|█████▉    | 1490/2524 [10:15<07:06,  2.42it/s, loss=0.002, v_num=3, val_loss=0.306, val_f1=63.60]  Epoch 13:  59%|█████▉    | 1500/2524 [10:19<07:02,  2.42it/s, loss=0.002, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  59%|█████▉    | 1500/2524 [10:19<07:02,  2.42it/s, loss=0.00248, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  60%|█████▉    | 1510/2524 [10:23<06:58,  2.42it/s, loss=0.00248, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  60%|█████▉    | 1510/2524 [10:23<06:58,  2.42it/s, loss=0.0024, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:  60%|██████    | 1520/2524 [10:27<06:54,  2.42it/s, loss=0.0024, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  60%|██████    | 1520/2524 [10:27<06:54,  2.42it/s, loss=0.00119, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  61%|██████    | 1530/2524 [10:31<06:50,  2.42it/s, loss=0.00119, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  61%|██████    | 1530/2524 [10:31<06:50,  2.42it/s, loss=0.00118, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  61%|██████    | 1540/2524 [10:35<06:46,  2.42it/s, loss=0.00118, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  61%|██████    | 1540/2524 [10:35<06:46,  2.42it/s, loss=0.00118, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  61%|██████▏   | 1550/2524 [10:39<06:42,  2.42it/s, loss=0.00118, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  61%|██████▏   | 1550/2524 [10:39<06:42,  2.42it/s, loss=0.00241, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  62%|██████▏   | 1560/2524 [10:44<06:37,  2.42it/s, loss=0.00241, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  62%|██████▏   | 1560/2524 [10:44<06:37,  2.42it/s, loss=0.00257, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  62%|██████▏   | 1570/2524 [10:48<06:33,  2.42it/s, loss=0.00257, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  62%|██████▏   | 1570/2524 [10:48<06:33,  2.42it/s, loss=0.00213, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  63%|██████▎   | 1580/2524 [10:52<06:29,  2.42it/s, loss=0.00213, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  63%|██████▎   | 1580/2524 [10:52<06:29,  2.42it/s, loss=0.00206, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  63%|██████▎   | 1590/2524 [10:56<06:25,  2.42it/s, loss=0.00206, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  63%|██████▎   | 1590/2524 [10:56<06:25,  2.42it/s, loss=0.00237, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  63%|██████▎   | 1600/2524 [11:00<06:21,  2.42it/s, loss=0.00237, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  63%|██████▎   | 1600/2524 [11:00<06:21,  2.42it/s, loss=0.00183, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  64%|██████▍   | 1610/2524 [11:04<06:17,  2.42it/s, loss=0.00183, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  64%|██████▍   | 1610/2524 [11:04<06:17,  2.42it/s, loss=0.0017, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:  64%|██████▍   | 1620/2524 [11:08<06:13,  2.42it/s, loss=0.0017, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  64%|██████▍   | 1620/2524 [11:08<06:13,  2.42it/s, loss=0.00221, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  65%|██████▍   | 1630/2524 [11:12<06:09,  2.42it/s, loss=0.00221, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  65%|██████▍   | 1630/2524 [11:12<06:09,  2.42it/s, loss=0.0019, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:  65%|██████▍   | 1640/2524 [11:17<06:04,  2.42it/s, loss=0.0019, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  65%|██████▍   | 1640/2524 [11:17<06:04,  2.42it/s, loss=0.00332, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  65%|██████▌   | 1650/2524 [11:21<06:00,  2.42it/s, loss=0.00332, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  65%|██████▌   | 1650/2524 [11:21<06:00,  2.42it/s, loss=0.00283, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  66%|██████▌   | 1660/2524 [11:25<05:56,  2.42it/s, loss=0.00283, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  66%|██████▌   | 1660/2524 [11:25<05:56,  2.42it/s, loss=0.00168, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  66%|██████▌   | 1670/2524 [11:29<05:52,  2.42it/s, loss=0.00168, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  66%|██████▌   | 1670/2524 [11:29<05:52,  2.42it/s, loss=0.00282, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  67%|██████▋   | 1680/2524 [11:33<05:48,  2.42it/s, loss=0.00282, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  67%|██████▋   | 1680/2524 [11:33<05:48,  2.42it/s, loss=0.0031, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:  67%|██████▋   | 1690/2524 [11:37<05:44,  2.42it/s, loss=0.0031, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  67%|██████▋   | 1690/2524 [11:37<05:44,  2.42it/s, loss=0.00235, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  67%|██████▋   | 1700/2524 [11:41<05:40,  2.42it/s, loss=0.00235, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  67%|██████▋   | 1700/2524 [11:41<05:40,  2.42it/s, loss=0.00201, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  68%|██████▊   | 1710/2524 [11:45<05:36,  2.42it/s, loss=0.00201, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  68%|██████▊   | 1710/2524 [11:45<05:36,  2.42it/s, loss=0.0014, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:  68%|██████▊   | 1720/2524 [11:50<05:31,  2.42it/s, loss=0.0014, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  68%|██████▊   | 1720/2524 [11:50<05:31,  2.42it/s, loss=0.000947, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  69%|██████▊   | 1730/2524 [11:54<05:27,  2.42it/s, loss=0.000947, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  69%|██████▊   | 1730/2524 [11:54<05:27,  2.42it/s, loss=0.00138, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:  69%|██████▉   | 1740/2524 [11:58<05:23,  2.42it/s, loss=0.00138, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  69%|██████▉   | 1740/2524 [11:58<05:23,  2.42it/s, loss=0.00113, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  69%|██████▉   | 1750/2524 [12:02<05:19,  2.42it/s, loss=0.00113, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  69%|██████▉   | 1750/2524 [12:02<05:19,  2.42it/s, loss=0.00131, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  70%|██████▉   | 1760/2524 [12:06<05:15,  2.42it/s, loss=0.00131, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  70%|██████▉   | 1760/2524 [12:06<05:15,  2.42it/s, loss=0.00156, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  70%|███████   | 1770/2524 [12:10<05:11,  2.42it/s, loss=0.00156, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  70%|███████   | 1770/2524 [12:10<05:11,  2.42it/s, loss=0.00111, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  71%|███████   | 1780/2524 [12:14<05:07,  2.42it/s, loss=0.00111, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  71%|███████   | 1780/2524 [12:14<05:07,  2.42it/s, loss=0.000788, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  71%|███████   | 1790/2524 [12:19<05:03,  2.42it/s, loss=0.000788, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  71%|███████   | 1790/2524 [12:19<05:03,  2.42it/s, loss=0.00173, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:  71%|███████▏  | 1800/2524 [12:23<04:58,  2.42it/s, loss=0.00173, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  71%|███████▏  | 1800/2524 [12:23<04:58,  2.42it/s, loss=0.00225, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  72%|███████▏  | 1810/2524 [12:27<04:54,  2.42it/s, loss=0.00225, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  72%|███████▏  | 1810/2524 [12:27<04:54,  2.42it/s, loss=0.00285, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  72%|███████▏  | 1820/2524 [12:31<04:50,  2.42it/s, loss=0.00285, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  72%|███████▏  | 1820/2524 [12:31<04:50,  2.42it/s, loss=0.00244, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  73%|███████▎  | 1830/2524 [12:35<04:46,  2.42it/s, loss=0.00244, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  73%|███████▎  | 1830/2524 [12:35<04:46,  2.42it/s, loss=0.00155, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  73%|███████▎  | 1840/2524 [12:39<04:42,  2.42it/s, loss=0.00155, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  73%|███████▎  | 1840/2524 [12:39<04:42,  2.42it/s, loss=0.00193, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  73%|███████▎  | 1850/2524 [12:43<04:38,  2.42it/s, loss=0.00193, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  73%|███████▎  | 1850/2524 [12:43<04:38,  2.42it/s, loss=0.00221, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  74%|███████▎  | 1860/2524 [12:47<04:34,  2.42it/s, loss=0.00221, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  74%|███████▎  | 1860/2524 [12:47<04:34,  2.42it/s, loss=0.00197, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  74%|███████▍  | 1870/2524 [12:51<04:29,  2.42it/s, loss=0.00197, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  74%|███████▍  | 1870/2524 [12:51<04:29,  2.42it/s, loss=0.000732, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  74%|███████▍  | 1880/2524 [12:56<04:25,  2.42it/s, loss=0.000732, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  74%|███████▍  | 1880/2524 [12:56<04:25,  2.42it/s, loss=0.000808, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  75%|███████▍  | 1890/2524 [13:00<04:21,  2.42it/s, loss=0.000808, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  75%|███████▍  | 1890/2524 [13:00<04:21,  2.42it/s, loss=0.0019, v_num=3, val_loss=0.306, val_f1=63.60]  Epoch 13:  75%|███████▌  | 1900/2524 [13:04<04:17,  2.42it/s, loss=0.0019, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  75%|███████▌  | 1900/2524 [13:04<04:17,  2.42it/s, loss=0.00238, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  76%|███████▌  | 1910/2524 [13:08<04:13,  2.42it/s, loss=0.00238, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  76%|███████▌  | 1910/2524 [13:08<04:13,  2.42it/s, loss=0.00307, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  76%|███████▌  | 1920/2524 [13:12<04:09,  2.42it/s, loss=0.00307, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  76%|███████▌  | 1920/2524 [13:12<04:09,  2.42it/s, loss=0.00262, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  76%|███████▋  | 1930/2524 [13:16<04:05,  2.42it/s, loss=0.00262, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  76%|███████▋  | 1930/2524 [13:16<04:05,  2.42it/s, loss=0.000914, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  77%|███████▋  | 1940/2524 [13:20<04:01,  2.42it/s, loss=0.000914, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  77%|███████▋  | 1940/2524 [13:20<04:01,  2.42it/s, loss=0.00154, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:  77%|███████▋  | 1950/2524 [13:25<03:56,  2.42it/s, loss=0.00154, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  77%|███████▋  | 1950/2524 [13:25<03:56,  2.42it/s, loss=0.0021, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:  78%|███████▊  | 1960/2524 [13:29<03:52,  2.42it/s, loss=0.0021, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  78%|███████▊  | 1960/2524 [13:29<03:52,  2.42it/s, loss=0.00267, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  78%|███████▊  | 1970/2524 [13:33<03:48,  2.42it/s, loss=0.00267, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  78%|███████▊  | 1970/2524 [13:33<03:48,  2.42it/s, loss=0.00262, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  78%|███████▊  | 1980/2524 [13:37<03:44,  2.42it/s, loss=0.00262, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  78%|███████▊  | 1980/2524 [13:37<03:44,  2.42it/s, loss=0.00117, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  79%|███████▉  | 1990/2524 [13:41<03:40,  2.42it/s, loss=0.00117, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  79%|███████▉  | 1990/2524 [13:41<03:40,  2.42it/s, loss=0.000935, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  79%|███████▉  | 2000/2524 [13:45<03:36,  2.42it/s, loss=0.000935, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  79%|███████▉  | 2000/2524 [13:45<03:36,  2.42it/s, loss=0.000891, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  80%|███████▉  | 2010/2524 [13:49<03:32,  2.42it/s, loss=0.000891, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  80%|███████▉  | 2010/2524 [13:49<03:32,  2.42it/s, loss=0.00149, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:  80%|████████  | 2020/2524 [13:53<03:28,  2.42it/s, loss=0.00149, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  80%|████████  | 2020/2524 [13:53<03:28,  2.42it/s, loss=0.00155, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  80%|████████  | 2030/2524 [13:58<03:23,  2.42it/s, loss=0.00155, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  80%|████████  | 2030/2524 [13:58<03:23,  2.42it/s, loss=0.000876, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  81%|████████  | 2040/2524 [14:02<03:19,  2.42it/s, loss=0.000876, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  81%|████████  | 2040/2524 [14:02<03:19,  2.42it/s, loss=0.00339, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:  81%|████████  | 2050/2524 [14:06<03:15,  2.42it/s, loss=0.00339, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  81%|████████  | 2050/2524 [14:06<03:15,  2.42it/s, loss=0.00388, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  82%|████████▏ | 2060/2524 [14:10<03:11,  2.42it/s, loss=0.00388, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  82%|████████▏ | 2060/2524 [14:10<03:11,  2.42it/s, loss=0.00356, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  82%|████████▏ | 2070/2524 [14:14<03:07,  2.42it/s, loss=0.00356, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  82%|████████▏ | 2070/2524 [14:14<03:07,  2.42it/s, loss=0.00325, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  82%|████████▏ | 2080/2524 [14:18<03:03,  2.42it/s, loss=0.00325, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  82%|████████▏ | 2080/2524 [14:18<03:03,  2.42it/s, loss=0.00147, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  83%|████████▎ | 2090/2524 [14:22<02:59,  2.42it/s, loss=0.00147, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  83%|████████▎ | 2090/2524 [14:22<02:59,  2.42it/s, loss=0.00135, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  83%|████████▎ | 2100/2524 [14:26<02:55,  2.42it/s, loss=0.00135, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  83%|████████▎ | 2100/2524 [14:26<02:55,  2.42it/s, loss=0.00135, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  84%|████████▎ | 2110/2524 [14:31<02:50,  2.42it/s, loss=0.00135, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  84%|████████▎ | 2110/2524 [14:31<02:50,  2.42it/s, loss=0.00125, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  84%|████████▍ | 2120/2524 [14:35<02:46,  2.42it/s, loss=0.00125, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  84%|████████▍ | 2120/2524 [14:35<02:46,  2.42it/s, loss=0.00175, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  84%|████████▍ | 2130/2524 [14:39<02:42,  2.42it/s, loss=0.00175, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  84%|████████▍ | 2130/2524 [14:39<02:42,  2.42it/s, loss=0.00204, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  85%|████████▍ | 2140/2524 [14:43<02:38,  2.42it/s, loss=0.00204, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  85%|████████▍ | 2140/2524 [14:43<02:38,  2.42it/s, loss=0.00194, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  85%|████████▌ | 2150/2524 [14:47<02:34,  2.42it/s, loss=0.00194, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  85%|████████▌ | 2150/2524 [14:47<02:34,  2.42it/s, loss=0.00281, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  86%|████████▌ | 2160/2524 [14:51<02:30,  2.42it/s, loss=0.00281, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  86%|████████▌ | 2160/2524 [14:51<02:30,  2.42it/s, loss=0.00189, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  86%|████████▌ | 2170/2524 [14:55<02:26,  2.42it/s, loss=0.00189, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  86%|████████▌ | 2170/2524 [14:55<02:26,  2.42it/s, loss=0.000634, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  86%|████████▋ | 2180/2524 [14:59<02:21,  2.42it/s, loss=0.000634, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  86%|████████▋ | 2180/2524 [14:59<02:21,  2.42it/s, loss=0.00118, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:  87%|████████▋ | 2190/2524 [15:04<02:17,  2.42it/s, loss=0.00118, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  87%|████████▋ | 2190/2524 [15:04<02:17,  2.42it/s, loss=0.00115, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  87%|████████▋ | 2200/2524 [15:08<02:13,  2.42it/s, loss=0.00115, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  87%|████████▋ | 2200/2524 [15:08<02:13,  2.42it/s, loss=0.000587, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  88%|████████▊ | 2210/2524 [15:12<02:09,  2.42it/s, loss=0.000587, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  88%|████████▊ | 2210/2524 [15:12<02:09,  2.42it/s, loss=0.00122, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:  88%|████████▊ | 2220/2524 [15:16<02:05,  2.42it/s, loss=0.00122, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  88%|████████▊ | 2220/2524 [15:16<02:05,  2.42it/s, loss=0.00191, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  88%|████████▊ | 2230/2524 [15:20<02:01,  2.42it/s, loss=0.00191, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  88%|████████▊ | 2230/2524 [15:20<02:01,  2.42it/s, loss=0.00137, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  89%|████████▊ | 2240/2524 [15:24<01:57,  2.42it/s, loss=0.00137, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  89%|████████▊ | 2240/2524 [15:24<01:57,  2.42it/s, loss=0.000952, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  89%|████████▉ | 2250/2524 [15:28<01:53,  2.42it/s, loss=0.000952, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  89%|████████▉ | 2250/2524 [15:28<01:53,  2.42it/s, loss=0.00203, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:  90%|████████▉ | 2260/2524 [15:32<01:48,  2.42it/s, loss=0.00203, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  90%|████████▉ | 2260/2524 [15:32<01:48,  2.42it/s, loss=0.00229, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  90%|████████▉ | 2270/2524 [15:37<01:44,  2.42it/s, loss=0.00229, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  90%|████████▉ | 2270/2524 [15:37<01:44,  2.42it/s, loss=0.00152, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  90%|█████████ | 2280/2524 [15:41<01:40,  2.42it/s, loss=0.00152, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  90%|█████████ | 2280/2524 [15:41<01:40,  2.42it/s, loss=0.0027, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:  91%|█████████ | 2290/2524 [15:45<01:36,  2.42it/s, loss=0.0027, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  91%|█████████ | 2290/2524 [15:45<01:36,  2.42it/s, loss=0.00233, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  91%|█████████ | 2300/2524 [15:49<01:32,  2.42it/s, loss=0.00233, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  91%|█████████ | 2300/2524 [15:49<01:32,  2.42it/s, loss=0.00236, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  92%|█████████▏| 2310/2524 [15:53<01:28,  2.42it/s, loss=0.00236, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  92%|█████████▏| 2310/2524 [15:53<01:28,  2.42it/s, loss=0.0027, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:  92%|█████████▏| 2320/2524 [15:57<01:24,  2.42it/s, loss=0.0027, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  92%|█████████▏| 2320/2524 [15:57<01:24,  2.42it/s, loss=0.00167, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  92%|█████████▏| 2330/2524 [16:01<01:20,  2.42it/s, loss=0.00167, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  92%|█████████▏| 2330/2524 [16:01<01:20,  2.42it/s, loss=0.0013, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:  93%|█████████▎| 2340/2524 [16:06<01:15,  2.42it/s, loss=0.0013, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  93%|█████████▎| 2340/2524 [16:06<01:15,  2.42it/s, loss=0.00115, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  93%|█████████▎| 2350/2524 [16:10<01:11,  2.42it/s, loss=0.00115, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  93%|█████████▎| 2350/2524 [16:10<01:11,  2.42it/s, loss=0.00198, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  94%|█████████▎| 2360/2524 [16:14<01:07,  2.42it/s, loss=0.00198, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  94%|█████████▎| 2360/2524 [16:14<01:07,  2.42it/s, loss=0.00163, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  94%|█████████▍| 2370/2524 [16:18<01:03,  2.42it/s, loss=0.00163, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  94%|█████████▍| 2370/2524 [16:18<01:03,  2.42it/s, loss=0.00147, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  94%|█████████▍| 2380/2524 [16:22<00:59,  2.42it/s, loss=0.00147, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  94%|█████████▍| 2380/2524 [16:22<00:59,  2.42it/s, loss=0.00194, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  95%|█████████▍| 2390/2524 [16:26<00:55,  2.42it/s, loss=0.00194, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  95%|█████████▍| 2390/2524 [16:26<00:55,  2.42it/s, loss=0.00195, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  95%|█████████▌| 2400/2524 [16:30<00:51,  2.42it/s, loss=0.00195, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  95%|█████████▌| 2400/2524 [16:30<00:51,  2.42it/s, loss=0.00149, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  95%|█████████▌| 2410/2524 [16:34<00:47,  2.42it/s, loss=0.00149, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  95%|█████████▌| 2410/2524 [16:34<00:47,  2.42it/s, loss=0.00123, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  96%|█████████▌| 2420/2524 [16:39<00:42,  2.42it/s, loss=0.00123, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  96%|█████████▌| 2420/2524 [16:39<00:42,  2.42it/s, loss=0.00256, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  96%|█████████▋| 2430/2524 [16:43<00:38,  2.42it/s, loss=0.00256, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  96%|█████████▋| 2430/2524 [16:43<00:38,  2.42it/s, loss=0.0025, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:  97%|█████████▋| 2440/2524 [16:47<00:34,  2.42it/s, loss=0.0025, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  97%|█████████▋| 2440/2524 [16:47<00:34,  2.42it/s, loss=0.00145, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  97%|█████████▋| 2450/2524 [16:51<00:30,  2.42it/s, loss=0.00145, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  97%|█████████▋| 2450/2524 [16:51<00:30,  2.42it/s, loss=0.00149, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  97%|█████████▋| 2460/2524 [16:55<00:26,  2.42it/s, loss=0.00149, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  97%|█████████▋| 2460/2524 [16:55<00:26,  2.42it/s, loss=0.0028, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:  98%|█████████▊| 2470/2524 [16:59<00:22,  2.42it/s, loss=0.0028, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  98%|█████████▊| 2470/2524 [16:59<00:22,  2.42it/s, loss=0.00288, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  98%|█████████▊| 2480/2524 [17:03<00:18,  2.42it/s, loss=0.00288, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  98%|█████████▊| 2480/2524 [17:03<00:18,  2.42it/s, loss=0.0014, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 13:  99%|█████████▊| 2490/2524 [17:07<00:14,  2.42it/s, loss=0.0014, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  99%|█████████▊| 2490/2524 [17:08<00:14,  2.42it/s, loss=0.00138, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  99%|█████████▉| 2500/2524 [17:12<00:09,  2.42it/s, loss=0.00138, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  99%|█████████▉| 2500/2524 [17:12<00:09,  2.42it/s, loss=0.00227, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  99%|█████████▉| 2510/2524 [17:16<00:05,  2.42it/s, loss=0.00227, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:  99%|█████████▉| 2510/2524 [17:16<00:05,  2.42it/s, loss=0.00255, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13: 100%|█████████▉| 2520/2524 [17:20<00:01,  2.42it/s, loss=0.00255, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13: 100%|█████████▉| 2520/2524 [17:20<00:01,  2.42it/s, loss=0.00219, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13: 100%|██████████| 2524/2524 [17:21<00:00,  2.42it/s, loss=0.00219, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13: 100%|██████████| 2524/2524 [17:21<00:00,  2.42it/s, loss=0.00205, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13: 100%|██████████| 2524/2524 [17:21<00:00,  2.42it/s, loss=0.00205, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 13:   0%|          | 0/2524 [00:00<?, ?it/s, loss=0.00205, v_num=3, val_loss=0.306, val_f1=63.60]           Epoch 14:   0%|          | 0/2524 [00:00<?, ?it/s, loss=0.00205, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   0%|          | 10/2524 [00:04<19:14,  2.18it/s, loss=0.00205, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   0%|          | 10/2524 [00:04<19:16,  2.17it/s, loss=0.00146, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   1%|          | 20/2524 [00:08<18:15,  2.29it/s, loss=0.00146, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   1%|          | 20/2524 [00:08<18:17,  2.28it/s, loss=0.000966, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   1%|          | 30/2524 [00:12<17:49,  2.33it/s, loss=0.000966, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   1%|          | 30/2524 [00:12<17:50,  2.33it/s, loss=0.00212, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:   2%|▏         | 40/2524 [00:16<17:33,  2.36it/s, loss=0.00212, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   2%|▏         | 40/2524 [00:16<17:34,  2.36it/s, loss=0.00325, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   2%|▏         | 50/2524 [00:21<17:22,  2.37it/s, loss=0.00325, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   2%|▏         | 50/2524 [00:21<17:22,  2.37it/s, loss=0.0035, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:   2%|▏         | 60/2524 [00:25<17:13,  2.38it/s, loss=0.0035, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   2%|▏         | 60/2524 [00:25<17:14,  2.38it/s, loss=0.00253, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   3%|▎         | 70/2524 [00:29<17:12,  2.38it/s, loss=0.00253, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   3%|▎         | 70/2524 [00:29<17:12,  2.38it/s, loss=0.00122, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   3%|▎         | 80/2524 [00:33<17:04,  2.38it/s, loss=0.00122, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   3%|▎         | 80/2524 [00:33<17:05,  2.38it/s, loss=0.00324, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   4%|▎         | 90/2524 [00:37<16:58,  2.39it/s, loss=0.00324, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   4%|▎         | 90/2524 [00:37<16:58,  2.39it/s, loss=0.00328, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   4%|▍         | 100/2524 [00:41<16:52,  2.39it/s, loss=0.00328, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   4%|▍         | 100/2524 [00:41<16:52,  2.39it/s, loss=0.00139, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   4%|▍         | 110/2524 [00:45<16:46,  2.40it/s, loss=0.00139, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   4%|▍         | 110/2524 [00:45<16:47,  2.40it/s, loss=0.00113, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   5%|▍         | 120/2524 [00:50<16:42,  2.40it/s, loss=0.00113, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   5%|▍         | 120/2524 [00:50<16:42,  2.40it/s, loss=0.00124, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   5%|▌         | 130/2524 [00:54<16:37,  2.40it/s, loss=0.00124, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   5%|▌         | 130/2524 [00:54<16:37,  2.40it/s, loss=0.0012, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:   6%|▌         | 140/2524 [00:58<16:32,  2.40it/s, loss=0.0012, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   6%|▌         | 140/2524 [00:58<16:32,  2.40it/s, loss=0.000801, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   6%|▌         | 150/2524 [01:02<16:27,  2.40it/s, loss=0.000801, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   6%|▌         | 150/2524 [01:02<16:27,  2.40it/s, loss=0.000371, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   6%|▋         | 160/2524 [01:06<16:22,  2.41it/s, loss=0.000371, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   6%|▋         | 160/2524 [01:06<16:22,  2.41it/s, loss=0.00086, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:   7%|▋         | 170/2524 [01:10<16:19,  2.40it/s, loss=0.00086, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   7%|▋         | 170/2524 [01:10<16:19,  2.40it/s, loss=0.00158, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   7%|▋         | 180/2524 [01:14<16:14,  2.40it/s, loss=0.00158, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   7%|▋         | 180/2524 [01:14<16:14,  2.40it/s, loss=0.00144, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   8%|▊         | 190/2524 [01:18<16:10,  2.41it/s, loss=0.00144, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   8%|▊         | 190/2524 [01:18<16:10,  2.41it/s, loss=0.00287, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   8%|▊         | 200/2524 [01:23<16:05,  2.41it/s, loss=0.00287, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   8%|▊         | 200/2524 [01:23<16:05,  2.41it/s, loss=0.00308, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   8%|▊         | 210/2524 [01:27<16:00,  2.41it/s, loss=0.00308, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   8%|▊         | 210/2524 [01:27<16:00,  2.41it/s, loss=0.00176, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   9%|▊         | 220/2524 [01:31<15:56,  2.41it/s, loss=0.00176, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   9%|▊         | 220/2524 [01:31<15:56,  2.41it/s, loss=0.00179, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   9%|▉         | 230/2524 [01:35<15:52,  2.41it/s, loss=0.00179, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   9%|▉         | 230/2524 [01:35<15:52,  2.41it/s, loss=0.00134, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  10%|▉         | 240/2524 [01:39<15:47,  2.41it/s, loss=0.00134, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  10%|▉         | 240/2524 [01:39<15:47,  2.41it/s, loss=0.00256, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  10%|▉         | 250/2524 [01:43<15:43,  2.41it/s, loss=0.00256, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  10%|▉         | 250/2524 [01:43<15:43,  2.41it/s, loss=0.00244, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  10%|█         | 260/2524 [01:47<15:38,  2.41it/s, loss=0.00244, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  10%|█         | 260/2524 [01:47<15:38,  2.41it/s, loss=0.000843, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  11%|█         | 270/2524 [01:52<15:35,  2.41it/s, loss=0.000843, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  11%|█         | 270/2524 [01:52<15:35,  2.41it/s, loss=0.00119, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  11%|█         | 280/2524 [01:56<15:30,  2.41it/s, loss=0.00119, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  11%|█         | 280/2524 [01:56<15:31,  2.41it/s, loss=0.00103, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  11%|█▏        | 290/2524 [02:00<15:26,  2.41it/s, loss=0.00103, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  11%|█▏        | 290/2524 [02:00<15:26,  2.41it/s, loss=0.000614, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  12%|█▏        | 300/2524 [02:04<15:22,  2.41it/s, loss=0.000614, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  12%|█▏        | 300/2524 [02:04<15:22,  2.41it/s, loss=0.00092, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  12%|█▏        | 310/2524 [02:08<15:17,  2.41it/s, loss=0.00092, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  12%|█▏        | 310/2524 [02:08<15:17,  2.41it/s, loss=0.00248, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  13%|█▎        | 320/2524 [02:12<15:13,  2.41it/s, loss=0.00248, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  13%|█▎        | 320/2524 [02:12<15:13,  2.41it/s, loss=0.00299, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  13%|█▎        | 330/2524 [02:16<15:09,  2.41it/s, loss=0.00299, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  13%|█▎        | 330/2524 [02:16<15:09,  2.41it/s, loss=0.00166, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  13%|█▎        | 340/2524 [02:20<15:04,  2.41it/s, loss=0.00166, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  13%|█▎        | 340/2524 [02:20<15:04,  2.41it/s, loss=0.00148, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  14%|█▍        | 350/2524 [02:24<15:00,  2.41it/s, loss=0.00148, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  14%|█▍        | 350/2524 [02:24<15:00,  2.41it/s, loss=0.00165, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  14%|█▍        | 360/2524 [02:29<14:56,  2.41it/s, loss=0.00165, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  14%|█▍        | 360/2524 [02:29<14:56,  2.41it/s, loss=0.00132, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  15%|█▍        | 370/2524 [02:33<14:52,  2.41it/s, loss=0.00132, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  15%|█▍        | 370/2524 [02:33<14:52,  2.41it/s, loss=0.00238, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  15%|█▌        | 380/2524 [02:37<14:48,  2.41it/s, loss=0.00238, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  15%|█▌        | 380/2524 [02:37<14:48,  2.41it/s, loss=0.0023, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  15%|█▌        | 390/2524 [02:41<14:44,  2.41it/s, loss=0.0023, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  15%|█▌        | 390/2524 [02:41<14:44,  2.41it/s, loss=0.00171, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  16%|█▌        | 400/2524 [02:45<14:39,  2.41it/s, loss=0.00171, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  16%|█▌        | 400/2524 [02:45<14:39,  2.41it/s, loss=0.00177, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  16%|█▌        | 410/2524 [02:49<14:35,  2.41it/s, loss=0.00177, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  16%|█▌        | 410/2524 [02:49<14:35,  2.41it/s, loss=0.00145, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  17%|█▋        | 420/2524 [02:53<14:31,  2.41it/s, loss=0.00145, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  17%|█▋        | 420/2524 [02:53<14:31,  2.41it/s, loss=0.00126, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  17%|█▋        | 430/2524 [02:58<14:27,  2.41it/s, loss=0.00126, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  17%|█▋        | 430/2524 [02:58<14:27,  2.41it/s, loss=0.00109, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  17%|█▋        | 440/2524 [03:02<14:22,  2.42it/s, loss=0.00109, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  17%|█▋        | 440/2524 [03:02<14:22,  2.42it/s, loss=0.00112, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  18%|█▊        | 450/2524 [03:06<14:18,  2.42it/s, loss=0.00112, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  18%|█▊        | 450/2524 [03:06<14:18,  2.42it/s, loss=0.000998, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  18%|█▊        | 460/2524 [03:10<14:14,  2.42it/s, loss=0.000998, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  18%|█▊        | 460/2524 [03:10<14:14,  2.42it/s, loss=0.00144, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  19%|█▊        | 470/2524 [03:14<14:10,  2.41it/s, loss=0.00144, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  19%|█▊        | 470/2524 [03:14<14:10,  2.41it/s, loss=0.00147, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  19%|█▉        | 480/2524 [03:18<14:06,  2.42it/s, loss=0.00147, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  19%|█▉        | 480/2524 [03:18<14:06,  2.41it/s, loss=0.00144, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  19%|█▉        | 490/2524 [03:22<14:02,  2.42it/s, loss=0.00144, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  19%|█▉        | 490/2524 [03:22<14:02,  2.42it/s, loss=0.00272, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  20%|█▉        | 500/2524 [03:26<13:57,  2.42it/s, loss=0.00272, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  20%|█▉        | 500/2524 [03:26<13:57,  2.42it/s, loss=0.00228, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  20%|██        | 510/2524 [03:31<13:53,  2.42it/s, loss=0.00228, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  20%|██        | 510/2524 [03:31<13:53,  2.42it/s, loss=0.00098, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  21%|██        | 520/2524 [03:35<13:49,  2.42it/s, loss=0.00098, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  21%|██        | 520/2524 [03:35<13:49,  2.42it/s, loss=0.00131, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  21%|██        | 530/2524 [03:39<13:45,  2.42it/s, loss=0.00131, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  21%|██        | 530/2524 [03:39<13:45,  2.42it/s, loss=0.00149, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  21%|██▏       | 540/2524 [03:43<13:40,  2.42it/s, loss=0.00149, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  21%|██▏       | 540/2524 [03:43<13:40,  2.42it/s, loss=0.00113, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  22%|██▏       | 550/2524 [03:47<13:36,  2.42it/s, loss=0.00113, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  22%|██▏       | 550/2524 [03:47<13:36,  2.42it/s, loss=0.00108, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  22%|██▏       | 560/2524 [03:51<13:32,  2.42it/s, loss=0.00108, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  22%|██▏       | 560/2524 [03:51<13:32,  2.42it/s, loss=0.00112, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  23%|██▎       | 570/2524 [03:55<13:28,  2.42it/s, loss=0.00112, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  23%|██▎       | 570/2524 [03:55<13:28,  2.42it/s, loss=0.00154, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  23%|██▎       | 580/2524 [04:00<13:24,  2.42it/s, loss=0.00154, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  23%|██▎       | 580/2524 [04:00<13:24,  2.42it/s, loss=0.00215, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  23%|██▎       | 590/2524 [04:04<13:20,  2.42it/s, loss=0.00215, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  23%|██▎       | 590/2524 [04:04<13:20,  2.42it/s, loss=0.00138, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  24%|██▍       | 600/2524 [04:08<13:16,  2.42it/s, loss=0.00138, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  24%|██▍       | 600/2524 [04:08<13:16,  2.42it/s, loss=0.00144, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  24%|██▍       | 610/2524 [04:12<13:11,  2.42it/s, loss=0.00144, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  24%|██▍       | 610/2524 [04:12<13:11,  2.42it/s, loss=0.00177, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  25%|██▍       | 620/2524 [04:16<13:07,  2.42it/s, loss=0.00177, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  25%|██▍       | 620/2524 [04:16<13:07,  2.42it/s, loss=0.00227, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  25%|██▍       | 630/2524 [04:20<13:03,  2.42it/s, loss=0.00227, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  25%|██▍       | 630/2524 [04:20<13:03,  2.42it/s, loss=0.00274, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  25%|██▌       | 640/2524 [04:24<12:59,  2.42it/s, loss=0.00274, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  25%|██▌       | 640/2524 [04:24<12:59,  2.42it/s, loss=0.00157, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  26%|██▌       | 650/2524 [04:28<12:54,  2.42it/s, loss=0.00157, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  26%|██▌       | 650/2524 [04:28<12:55,  2.42it/s, loss=0.000826, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  26%|██▌       | 660/2524 [04:32<12:50,  2.42it/s, loss=0.000826, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  26%|██▌       | 660/2524 [04:32<12:50,  2.42it/s, loss=0.00065, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  27%|██▋       | 670/2524 [04:37<12:46,  2.42it/s, loss=0.00065, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  27%|██▋       | 670/2524 [04:37<12:47,  2.42it/s, loss=0.000603, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  27%|██▋       | 680/2524 [04:41<12:42,  2.42it/s, loss=0.000603, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  27%|██▋       | 680/2524 [04:41<12:42,  2.42it/s, loss=0.000751, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  27%|██▋       | 690/2524 [04:45<12:38,  2.42it/s, loss=0.000751, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  27%|██▋       | 690/2524 [04:45<12:38,  2.42it/s, loss=0.00136, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  28%|██▊       | 700/2524 [04:49<12:34,  2.42it/s, loss=0.00136, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  28%|██▊       | 700/2524 [04:49<12:34,  2.42it/s, loss=0.00121, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  28%|██▊       | 710/2524 [04:53<12:30,  2.42it/s, loss=0.00121, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  28%|██▊       | 710/2524 [04:53<12:30,  2.42it/s, loss=0.0011, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  29%|██▊       | 720/2524 [04:57<12:26,  2.42it/s, loss=0.0011, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  29%|██▊       | 720/2524 [04:57<12:26,  2.42it/s, loss=0.00131, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  29%|██▉       | 730/2524 [05:01<12:21,  2.42it/s, loss=0.00131, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  29%|██▉       | 730/2524 [05:01<12:21,  2.42it/s, loss=0.00182, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  29%|██▉       | 740/2524 [05:05<12:17,  2.42it/s, loss=0.00182, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  29%|██▉       | 740/2524 [05:05<12:17,  2.42it/s, loss=0.00177, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  30%|██▉       | 750/2524 [05:10<12:13,  2.42it/s, loss=0.00177, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  30%|██▉       | 750/2524 [05:10<12:13,  2.42it/s, loss=0.000627, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  30%|███       | 760/2524 [05:14<12:09,  2.42it/s, loss=0.000627, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  30%|███       | 760/2524 [05:14<12:09,  2.42it/s, loss=0.00043, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  31%|███       | 770/2524 [05:18<12:05,  2.42it/s, loss=0.00043, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  31%|███       | 770/2524 [05:18<12:05,  2.42it/s, loss=0.001, v_num=3, val_loss=0.306, val_f1=63.60]  Epoch 14:  31%|███       | 780/2524 [05:22<12:01,  2.42it/s, loss=0.001, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  31%|███       | 780/2524 [05:22<12:01,  2.42it/s, loss=0.000955, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  31%|███▏      | 790/2524 [05:26<11:56,  2.42it/s, loss=0.000955, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  31%|███▏      | 790/2524 [05:26<11:56,  2.42it/s, loss=0.00112, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  32%|███▏      | 800/2524 [05:30<11:52,  2.42it/s, loss=0.00112, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  32%|███▏      | 800/2524 [05:30<11:52,  2.42it/s, loss=0.00185, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  32%|███▏      | 810/2524 [05:34<11:48,  2.42it/s, loss=0.00185, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  32%|███▏      | 810/2524 [05:34<11:48,  2.42it/s, loss=0.001, v_num=3, val_loss=0.306, val_f1=63.60]  Epoch 14:  32%|███▏      | 820/2524 [05:39<11:44,  2.42it/s, loss=0.001, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  32%|███▏      | 820/2524 [05:39<11:44,  2.42it/s, loss=0.0014, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  33%|███▎      | 830/2524 [05:43<11:40,  2.42it/s, loss=0.0014, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  33%|███▎      | 830/2524 [05:43<11:40,  2.42it/s, loss=0.00299, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  33%|███▎      | 840/2524 [05:47<11:36,  2.42it/s, loss=0.00299, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  33%|███▎      | 840/2524 [05:47<11:36,  2.42it/s, loss=0.00307, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  34%|███▎      | 850/2524 [05:51<11:31,  2.42it/s, loss=0.00307, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  34%|███▎      | 850/2524 [05:51<11:31,  2.42it/s, loss=0.00194, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  34%|███▍      | 860/2524 [05:55<11:27,  2.42it/s, loss=0.00194, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  34%|███▍      | 860/2524 [05:55<11:27,  2.42it/s, loss=0.00116, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  34%|███▍      | 870/2524 [05:59<11:23,  2.42it/s, loss=0.00116, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  34%|███▍      | 870/2524 [05:59<11:23,  2.42it/s, loss=0.000803, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  35%|███▍      | 880/2524 [06:03<11:19,  2.42it/s, loss=0.000803, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  35%|███▍      | 880/2524 [06:03<11:19,  2.42it/s, loss=0.00042, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  35%|███▌      | 890/2524 [06:07<11:15,  2.42it/s, loss=0.00042, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  35%|███▌      | 890/2524 [06:07<11:15,  2.42it/s, loss=0.00137, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  36%|███▌      | 900/2524 [06:11<11:11,  2.42it/s, loss=0.00137, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  36%|███▌      | 900/2524 [06:12<11:11,  2.42it/s, loss=0.0023, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  36%|███▌      | 910/2524 [06:16<11:07,  2.42it/s, loss=0.0023, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  36%|███▌      | 910/2524 [06:16<11:07,  2.42it/s, loss=0.00237, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  36%|███▋      | 920/2524 [06:20<11:02,  2.42it/s, loss=0.00237, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  36%|███▋      | 920/2524 [06:20<11:02,  2.42it/s, loss=0.00238, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  37%|███▋      | 930/2524 [06:24<10:58,  2.42it/s, loss=0.00238, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  37%|███▋      | 930/2524 [06:24<10:58,  2.42it/s, loss=0.00161, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  37%|███▋      | 940/2524 [06:28<10:54,  2.42it/s, loss=0.00161, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  37%|███▋      | 940/2524 [06:28<10:54,  2.42it/s, loss=0.00195, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  38%|███▊      | 950/2524 [06:32<10:50,  2.42it/s, loss=0.00195, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  38%|███▊      | 950/2524 [06:32<10:50,  2.42it/s, loss=0.00303, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  38%|███▊      | 960/2524 [06:36<10:46,  2.42it/s, loss=0.00303, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  38%|███▊      | 960/2524 [06:36<10:46,  2.42it/s, loss=0.00265, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  38%|███▊      | 970/2524 [06:40<10:42,  2.42it/s, loss=0.00265, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  38%|███▊      | 970/2524 [06:40<10:42,  2.42it/s, loss=0.00265, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  39%|███▉      | 980/2524 [06:45<10:38,  2.42it/s, loss=0.00265, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  39%|███▉      | 980/2524 [06:45<10:38,  2.42it/s, loss=0.00218, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  39%|███▉      | 990/2524 [06:49<10:33,  2.42it/s, loss=0.00218, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  39%|███▉      | 990/2524 [06:49<10:33,  2.42it/s, loss=0.000881, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  40%|███▉      | 1000/2524 [06:53<10:29,  2.42it/s, loss=0.000881, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  40%|███▉      | 1000/2524 [06:53<10:29,  2.42it/s, loss=0.00185, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  40%|████      | 1010/2524 [06:57<10:25,  2.42it/s, loss=0.00185, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  40%|████      | 1010/2524 [06:57<10:25,  2.42it/s, loss=0.00212, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  40%|████      | 1020/2524 [07:01<10:21,  2.42it/s, loss=0.00212, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  40%|████      | 1020/2524 [07:01<10:21,  2.42it/s, loss=0.00111, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  41%|████      | 1030/2524 [07:05<10:17,  2.42it/s, loss=0.00111, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  41%|████      | 1030/2524 [07:05<10:17,  2.42it/s, loss=0.00114, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  41%|████      | 1040/2524 [07:09<10:13,  2.42it/s, loss=0.00114, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  41%|████      | 1040/2524 [07:09<10:13,  2.42it/s, loss=0.00183, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  42%|████▏     | 1050/2524 [07:13<10:09,  2.42it/s, loss=0.00183, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  42%|████▏     | 1050/2524 [07:13<10:09,  2.42it/s, loss=0.00149, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  42%|████▏     | 1060/2524 [07:17<10:04,  2.42it/s, loss=0.00149, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  42%|████▏     | 1060/2524 [07:17<10:04,  2.42it/s, loss=0.000758, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  42%|████▏     | 1070/2524 [07:22<10:00,  2.42it/s, loss=0.000758, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  42%|████▏     | 1070/2524 [07:22<10:00,  2.42it/s, loss=0.0013, v_num=3, val_loss=0.306, val_f1=63.60]  Epoch 14:  43%|████▎     | 1080/2524 [07:26<09:56,  2.42it/s, loss=0.0013, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  43%|████▎     | 1080/2524 [07:26<09:56,  2.42it/s, loss=0.00126, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  43%|████▎     | 1090/2524 [07:30<09:52,  2.42it/s, loss=0.00126, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  43%|████▎     | 1090/2524 [07:30<09:52,  2.42it/s, loss=0.00133, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  44%|████▎     | 1100/2524 [07:34<09:48,  2.42it/s, loss=0.00133, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  44%|████▎     | 1100/2524 [07:34<09:48,  2.42it/s, loss=0.00123, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  44%|████▍     | 1110/2524 [07:38<09:44,  2.42it/s, loss=0.00123, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  44%|████▍     | 1110/2524 [07:38<09:44,  2.42it/s, loss=0.00112, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  44%|████▍     | 1120/2524 [07:42<09:40,  2.42it/s, loss=0.00112, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  44%|████▍     | 1120/2524 [07:42<09:40,  2.42it/s, loss=0.00107, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  45%|████▍     | 1130/2524 [07:46<09:35,  2.42it/s, loss=0.00107, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  45%|████▍     | 1130/2524 [07:46<09:36,  2.42it/s, loss=0.0006, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  45%|████▌     | 1140/2524 [07:51<09:31,  2.42it/s, loss=0.0006, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  45%|████▌     | 1140/2524 [07:51<09:31,  2.42it/s, loss=0.000648, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  46%|████▌     | 1150/2524 [07:55<09:27,  2.42it/s, loss=0.000648, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  46%|████▌     | 1150/2524 [07:55<09:27,  2.42it/s, loss=0.00122, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  46%|████▌     | 1160/2524 [07:59<09:23,  2.42it/s, loss=0.00122, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  46%|████▌     | 1160/2524 [07:59<09:23,  2.42it/s, loss=0.00151, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  46%|████▋     | 1170/2524 [08:03<09:19,  2.42it/s, loss=0.00151, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  46%|████▋     | 1170/2524 [08:03<09:19,  2.42it/s, loss=0.00116, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  47%|████▋     | 1180/2524 [08:07<09:15,  2.42it/s, loss=0.00116, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  47%|████▋     | 1180/2524 [08:07<09:15,  2.42it/s, loss=0.000692, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  47%|████▋     | 1190/2524 [08:11<09:11,  2.42it/s, loss=0.000692, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  47%|████▋     | 1190/2524 [08:11<09:11,  2.42it/s, loss=0.00107, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  48%|████▊     | 1200/2524 [08:15<09:07,  2.42it/s, loss=0.00107, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  48%|████▊     | 1200/2524 [08:15<09:07,  2.42it/s, loss=0.00219, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  48%|████▊     | 1210/2524 [08:19<09:02,  2.42it/s, loss=0.00219, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  48%|████▊     | 1210/2524 [08:19<09:02,  2.42it/s, loss=0.00191, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  48%|████▊     | 1220/2524 [08:24<08:58,  2.42it/s, loss=0.00191, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  48%|████▊     | 1220/2524 [08:24<08:58,  2.42it/s, loss=0.00106, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  49%|████▊     | 1230/2524 [08:28<08:54,  2.42it/s, loss=0.00106, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  49%|████▊     | 1230/2524 [08:28<08:54,  2.42it/s, loss=0.000966, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  49%|████▉     | 1240/2524 [08:32<08:50,  2.42it/s, loss=0.000966, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  49%|████▉     | 1240/2524 [08:32<08:50,  2.42it/s, loss=0.00149, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  50%|████▉     | 1250/2524 [08:36<08:46,  2.42it/s, loss=0.00149, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  50%|████▉     | 1250/2524 [08:36<08:46,  2.42it/s, loss=0.00177, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  50%|████▉     | 1260/2524 [08:40<08:42,  2.42it/s, loss=0.00177, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  50%|████▉     | 1260/2524 [08:40<08:42,  2.42it/s, loss=0.00153, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  50%|█████     | 1270/2524 [08:44<08:38,  2.42it/s, loss=0.00153, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  50%|█████     | 1270/2524 [08:44<08:38,  2.42it/s, loss=0.000987, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  51%|█████     | 1280/2524 [08:48<08:34,  2.42it/s, loss=0.000987, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  51%|█████     | 1280/2524 [08:48<08:34,  2.42it/s, loss=0.000737, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  51%|█████     | 1290/2524 [08:53<08:29,  2.42it/s, loss=0.000737, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  51%|█████     | 1290/2524 [08:53<08:29,  2.42it/s, loss=0.00131, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  52%|█████▏    | 1300/2524 [08:57<08:25,  2.42it/s, loss=0.00131, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  52%|█████▏    | 1300/2524 [08:57<08:25,  2.42it/s, loss=0.0013, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  52%|█████▏    | 1310/2524 [09:01<08:21,  2.42it/s, loss=0.0013, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  52%|█████▏    | 1310/2524 [09:01<08:21,  2.42it/s, loss=0.00115, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  52%|█████▏    | 1320/2524 [09:05<08:17,  2.42it/s, loss=0.00115, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  52%|█████▏    | 1320/2524 [09:05<08:17,  2.42it/s, loss=0.00133, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  53%|█████▎    | 1330/2524 [09:09<08:13,  2.42it/s, loss=0.00133, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  53%|█████▎    | 1330/2524 [09:09<08:13,  2.42it/s, loss=0.00168, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  53%|█████▎    | 1340/2524 [09:13<08:09,  2.42it/s, loss=0.00168, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  53%|█████▎    | 1340/2524 [09:13<08:09,  2.42it/s, loss=0.00269, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  53%|█████▎    | 1350/2524 [09:17<08:05,  2.42it/s, loss=0.00269, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  53%|█████▎    | 1350/2524 [09:17<08:05,  2.42it/s, loss=0.0025, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  54%|█████▍    | 1360/2524 [09:21<08:00,  2.42it/s, loss=0.0025, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  54%|█████▍    | 1360/2524 [09:21<08:00,  2.42it/s, loss=0.00151, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  54%|█████▍    | 1370/2524 [09:26<07:56,  2.42it/s, loss=0.00151, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  54%|█████▍    | 1370/2524 [09:26<07:56,  2.42it/s, loss=0.00116, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  55%|█████▍    | 1380/2524 [09:30<07:52,  2.42it/s, loss=0.00116, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  55%|█████▍    | 1380/2524 [09:30<07:52,  2.42it/s, loss=0.0017, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  55%|█████▌    | 1390/2524 [09:34<07:48,  2.42it/s, loss=0.0017, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  55%|█████▌    | 1390/2524 [09:34<07:48,  2.42it/s, loss=0.00162, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  55%|█████▌    | 1400/2524 [09:38<07:44,  2.42it/s, loss=0.00162, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  55%|█████▌    | 1400/2524 [09:38<07:44,  2.42it/s, loss=0.00106, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  56%|█████▌    | 1410/2524 [09:42<07:40,  2.42it/s, loss=0.00106, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  56%|█████▌    | 1410/2524 [09:42<07:40,  2.42it/s, loss=0.00181, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  56%|█████▋    | 1420/2524 [09:46<07:36,  2.42it/s, loss=0.00181, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  56%|█████▋    | 1420/2524 [09:46<07:36,  2.42it/s, loss=0.00168, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  57%|█████▋    | 1430/2524 [09:50<07:31,  2.42it/s, loss=0.00168, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  57%|█████▋    | 1430/2524 [09:50<07:31,  2.42it/s, loss=0.000956, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  57%|█████▋    | 1440/2524 [09:54<07:27,  2.42it/s, loss=0.000956, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  57%|█████▋    | 1440/2524 [09:54<07:27,  2.42it/s, loss=0.000871, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  57%|█████▋    | 1450/2524 [09:58<07:23,  2.42it/s, loss=0.000871, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  57%|█████▋    | 1450/2524 [09:59<07:23,  2.42it/s, loss=0.00127, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  58%|█████▊    | 1460/2524 [10:03<07:19,  2.42it/s, loss=0.00127, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  58%|█████▊    | 1460/2524 [10:03<07:19,  2.42it/s, loss=0.00257, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  58%|█████▊    | 1470/2524 [10:07<07:15,  2.42it/s, loss=0.00257, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  58%|█████▊    | 1470/2524 [10:07<07:15,  2.42it/s, loss=0.00191, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  59%|█████▊    | 1480/2524 [10:11<07:11,  2.42it/s, loss=0.00191, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  59%|█████▊    | 1480/2524 [10:11<07:11,  2.42it/s, loss=0.000587, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  59%|█████▉    | 1490/2524 [10:15<07:07,  2.42it/s, loss=0.000587, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  59%|█████▉    | 1490/2524 [10:15<07:07,  2.42it/s, loss=0.00117, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  59%|█████▉    | 1500/2524 [10:19<07:03,  2.42it/s, loss=0.00117, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  59%|█████▉    | 1500/2524 [10:19<07:03,  2.42it/s, loss=0.00127, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  60%|█████▉    | 1510/2524 [10:23<06:58,  2.42it/s, loss=0.00127, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  60%|█████▉    | 1510/2524 [10:23<06:58,  2.42it/s, loss=0.000909, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  60%|██████    | 1520/2524 [10:27<06:54,  2.42it/s, loss=0.000909, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  60%|██████    | 1520/2524 [10:27<06:54,  2.42it/s, loss=0.000816, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  61%|██████    | 1530/2524 [10:32<06:50,  2.42it/s, loss=0.000816, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  61%|██████    | 1530/2524 [10:32<06:50,  2.42it/s, loss=0.00178, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  61%|██████    | 1540/2524 [10:36<06:46,  2.42it/s, loss=0.00178, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  61%|██████    | 1540/2524 [10:36<06:46,  2.42it/s, loss=0.00159, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  61%|██████▏   | 1550/2524 [10:40<06:42,  2.42it/s, loss=0.00159, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  61%|██████▏   | 1550/2524 [10:40<06:42,  2.42it/s, loss=0.00112, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  62%|██████▏   | 1560/2524 [10:44<06:38,  2.42it/s, loss=0.00112, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  62%|██████▏   | 1560/2524 [10:44<06:38,  2.42it/s, loss=0.00148, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  62%|██████▏   | 1570/2524 [10:48<06:34,  2.42it/s, loss=0.00148, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  62%|██████▏   | 1570/2524 [10:48<06:34,  2.42it/s, loss=0.000959, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  63%|██████▎   | 1580/2524 [10:52<06:29,  2.42it/s, loss=0.000959, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  63%|██████▎   | 1580/2524 [10:52<06:29,  2.42it/s, loss=0.00135, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  63%|██████▎   | 1590/2524 [10:56<06:25,  2.42it/s, loss=0.00135, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  63%|██████▎   | 1590/2524 [10:56<06:25,  2.42it/s, loss=0.00237, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  63%|██████▎   | 1600/2524 [11:00<06:21,  2.42it/s, loss=0.00237, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  63%|██████▎   | 1600/2524 [11:00<06:21,  2.42it/s, loss=0.00185, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  64%|██████▍   | 1610/2524 [11:05<06:17,  2.42it/s, loss=0.00185, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  64%|██████▍   | 1610/2524 [11:05<06:17,  2.42it/s, loss=0.00234, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  64%|██████▍   | 1620/2524 [11:09<06:13,  2.42it/s, loss=0.00234, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  64%|██████▍   | 1620/2524 [11:09<06:13,  2.42it/s, loss=0.00236, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  65%|██████▍   | 1630/2524 [11:13<06:09,  2.42it/s, loss=0.00236, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  65%|██████▍   | 1630/2524 [11:13<06:09,  2.42it/s, loss=0.000886, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  65%|██████▍   | 1640/2524 [11:17<06:05,  2.42it/s, loss=0.000886, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  65%|██████▍   | 1640/2524 [11:17<06:05,  2.42it/s, loss=0.0016, v_num=3, val_loss=0.306, val_f1=63.60]  Epoch 14:  65%|██████▌   | 1650/2524 [11:21<06:00,  2.42it/s, loss=0.0016, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  65%|██████▌   | 1650/2524 [11:21<06:00,  2.42it/s, loss=0.00179, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  66%|██████▌   | 1660/2524 [11:25<05:56,  2.42it/s, loss=0.00179, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  66%|██████▌   | 1660/2524 [11:25<05:56,  2.42it/s, loss=0.00121, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  66%|██████▌   | 1670/2524 [11:29<05:52,  2.42it/s, loss=0.00121, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  66%|██████▌   | 1670/2524 [11:29<05:52,  2.42it/s, loss=0.00121, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  67%|██████▋   | 1680/2524 [11:33<05:48,  2.42it/s, loss=0.00121, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  67%|██████▋   | 1680/2524 [11:33<05:48,  2.42it/s, loss=0.0013, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  67%|██████▋   | 1690/2524 [11:38<05:44,  2.42it/s, loss=0.0013, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  67%|██████▋   | 1690/2524 [11:38<05:44,  2.42it/s, loss=0.00158, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  67%|██████▋   | 1700/2524 [11:42<05:40,  2.42it/s, loss=0.00158, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  67%|██████▋   | 1700/2524 [11:42<05:40,  2.42it/s, loss=0.00119, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  68%|██████▊   | 1710/2524 [11:46<05:36,  2.42it/s, loss=0.00119, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  68%|██████▊   | 1710/2524 [11:46<05:36,  2.42it/s, loss=0.000871, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  68%|██████▊   | 1720/2524 [11:50<05:32,  2.42it/s, loss=0.000871, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  68%|██████▊   | 1720/2524 [11:50<05:32,  2.42it/s, loss=0.00215, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  69%|██████▊   | 1730/2524 [11:54<05:27,  2.42it/s, loss=0.00215, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  69%|██████▊   | 1730/2524 [11:54<05:27,  2.42it/s, loss=0.00199, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  69%|██████▉   | 1740/2524 [11:58<05:23,  2.42it/s, loss=0.00199, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  69%|██████▉   | 1740/2524 [11:58<05:23,  2.42it/s, loss=0.00127, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  69%|██████▉   | 1750/2524 [12:02<05:19,  2.42it/s, loss=0.00127, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  69%|██████▉   | 1750/2524 [12:02<05:19,  2.42it/s, loss=0.00129, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  70%|██████▉   | 1760/2524 [12:06<05:15,  2.42it/s, loss=0.00129, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  70%|██████▉   | 1760/2524 [12:06<05:15,  2.42it/s, loss=0.00107, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  70%|███████   | 1770/2524 [12:11<05:11,  2.42it/s, loss=0.00107, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  70%|███████   | 1770/2524 [12:11<05:11,  2.42it/s, loss=0.00145, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  71%|███████   | 1780/2524 [12:15<05:07,  2.42it/s, loss=0.00145, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  71%|███████   | 1780/2524 [12:15<05:07,  2.42it/s, loss=0.00121, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  71%|███████   | 1790/2524 [12:19<05:03,  2.42it/s, loss=0.00121, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  71%|███████   | 1790/2524 [12:19<05:03,  2.42it/s, loss=0.00125, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  71%|███████▏  | 1800/2524 [12:23<04:59,  2.42it/s, loss=0.00125, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  71%|███████▏  | 1800/2524 [12:23<04:59,  2.42it/s, loss=0.00143, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  72%|███████▏  | 1810/2524 [12:27<04:54,  2.42it/s, loss=0.00143, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  72%|███████▏  | 1810/2524 [12:27<04:54,  2.42it/s, loss=0.00179, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  72%|███████▏  | 1820/2524 [12:31<04:50,  2.42it/s, loss=0.00179, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  72%|███████▏  | 1820/2524 [12:31<04:50,  2.42it/s, loss=0.00236, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  73%|███████▎  | 1830/2524 [12:35<04:46,  2.42it/s, loss=0.00236, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  73%|███████▎  | 1830/2524 [12:35<04:46,  2.42it/s, loss=0.00162, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  73%|███████▎  | 1840/2524 [12:39<04:42,  2.42it/s, loss=0.00162, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  73%|███████▎  | 1840/2524 [12:39<04:42,  2.42it/s, loss=0.00178, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  73%|███████▎  | 1850/2524 [12:44<04:38,  2.42it/s, loss=0.00178, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  73%|███████▎  | 1850/2524 [12:44<04:38,  2.42it/s, loss=0.00215, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  74%|███████▎  | 1860/2524 [12:48<04:34,  2.42it/s, loss=0.00215, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  74%|███████▎  | 1860/2524 [12:48<04:34,  2.42it/s, loss=0.00118, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  74%|███████▍  | 1870/2524 [12:52<04:30,  2.42it/s, loss=0.00118, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  74%|███████▍  | 1870/2524 [12:52<04:30,  2.42it/s, loss=0.000862, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  74%|███████▍  | 1880/2524 [12:56<04:26,  2.42it/s, loss=0.000862, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  74%|███████▍  | 1880/2524 [12:56<04:26,  2.42it/s, loss=0.00208, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  75%|███████▍  | 1890/2524 [13:00<04:21,  2.42it/s, loss=0.00208, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  75%|███████▍  | 1890/2524 [13:00<04:21,  2.42it/s, loss=0.0023, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  75%|███████▌  | 1900/2524 [13:04<04:17,  2.42it/s, loss=0.0023, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  75%|███████▌  | 1900/2524 [13:04<04:17,  2.42it/s, loss=0.00191, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  76%|███████▌  | 1910/2524 [13:08<04:13,  2.42it/s, loss=0.00191, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  76%|███████▌  | 1910/2524 [13:08<04:13,  2.42it/s, loss=0.00181, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  76%|███████▌  | 1920/2524 [13:13<04:09,  2.42it/s, loss=0.00181, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  76%|███████▌  | 1920/2524 [13:13<04:09,  2.42it/s, loss=0.000795, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  76%|███████▋  | 1930/2524 [13:17<04:05,  2.42it/s, loss=0.000795, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  76%|███████▋  | 1930/2524 [13:17<04:05,  2.42it/s, loss=0.000371, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  77%|███████▋  | 1940/2524 [13:21<04:01,  2.42it/s, loss=0.000371, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  77%|███████▋  | 1940/2524 [13:21<04:01,  2.42it/s, loss=0.000395, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  77%|███████▋  | 1950/2524 [13:25<03:57,  2.42it/s, loss=0.000395, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  77%|███████▋  | 1950/2524 [13:25<03:57,  2.42it/s, loss=0.00106, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  78%|███████▊  | 1960/2524 [13:29<03:52,  2.42it/s, loss=0.00106, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  78%|███████▊  | 1960/2524 [13:29<03:52,  2.42it/s, loss=0.00114, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  78%|███████▊  | 1970/2524 [13:33<03:48,  2.42it/s, loss=0.00114, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  78%|███████▊  | 1970/2524 [13:33<03:48,  2.42it/s, loss=0.000828, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  78%|███████▊  | 1980/2524 [13:37<03:44,  2.42it/s, loss=0.000828, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  78%|███████▊  | 1980/2524 [13:37<03:44,  2.42it/s, loss=0.00101, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  79%|███████▉  | 1990/2524 [13:41<03:40,  2.42it/s, loss=0.00101, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  79%|███████▉  | 1990/2524 [13:41<03:40,  2.42it/s, loss=0.000919, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  79%|███████▉  | 2000/2524 [13:46<03:36,  2.42it/s, loss=0.000919, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  79%|███████▉  | 2000/2524 [13:46<03:36,  2.42it/s, loss=0.00212, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  80%|███████▉  | 2010/2524 [13:50<03:32,  2.42it/s, loss=0.00212, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  80%|███████▉  | 2010/2524 [13:50<03:32,  2.42it/s, loss=0.00218, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  80%|████████  | 2020/2524 [13:54<03:28,  2.42it/s, loss=0.00218, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  80%|████████  | 2020/2524 [13:54<03:28,  2.42it/s, loss=0.000959, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  80%|████████  | 2030/2524 [13:58<03:24,  2.42it/s, loss=0.000959, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  80%|████████  | 2030/2524 [13:58<03:24,  2.42it/s, loss=0.00107, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  81%|████████  | 2040/2524 [14:02<03:19,  2.42it/s, loss=0.00107, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  81%|████████  | 2040/2524 [14:02<03:19,  2.42it/s, loss=0.000859, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  81%|████████  | 2050/2524 [14:06<03:15,  2.42it/s, loss=0.000859, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  81%|████████  | 2050/2524 [14:06<03:15,  2.42it/s, loss=0.00103, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  82%|████████▏ | 2060/2524 [14:10<03:11,  2.42it/s, loss=0.00103, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  82%|████████▏ | 2060/2524 [14:10<03:11,  2.42it/s, loss=0.00185, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  82%|████████▏ | 2070/2524 [14:15<03:07,  2.42it/s, loss=0.00185, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  82%|████████▏ | 2070/2524 [14:15<03:07,  2.42it/s, loss=0.00146, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  82%|████████▏ | 2080/2524 [14:19<03:03,  2.42it/s, loss=0.00146, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  82%|████████▏ | 2080/2524 [14:19<03:03,  2.42it/s, loss=0.000714, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  83%|████████▎ | 2090/2524 [14:23<02:59,  2.42it/s, loss=0.000714, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  83%|████████▎ | 2090/2524 [14:23<02:59,  2.42it/s, loss=0.000838, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  83%|████████▎ | 2100/2524 [14:27<02:55,  2.42it/s, loss=0.000838, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  83%|████████▎ | 2100/2524 [14:27<02:55,  2.42it/s, loss=0.0011, v_num=3, val_loss=0.306, val_f1=63.60]  Epoch 14:  84%|████████▎ | 2110/2524 [14:31<02:50,  2.42it/s, loss=0.0011, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  84%|████████▎ | 2110/2524 [14:31<02:50,  2.42it/s, loss=0.00131, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  84%|████████▍ | 2120/2524 [14:35<02:46,  2.42it/s, loss=0.00131, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  84%|████████▍ | 2120/2524 [14:35<02:46,  2.42it/s, loss=0.0017, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  84%|████████▍ | 2130/2524 [14:39<02:42,  2.42it/s, loss=0.0017, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  84%|████████▍ | 2130/2524 [14:39<02:42,  2.42it/s, loss=0.00171, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  85%|████████▍ | 2140/2524 [14:43<02:38,  2.42it/s, loss=0.00171, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  85%|████████▍ | 2140/2524 [14:43<02:38,  2.42it/s, loss=0.00401, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  85%|████████▌ | 2150/2524 [14:47<02:34,  2.42it/s, loss=0.00401, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  85%|████████▌ | 2150/2524 [14:47<02:34,  2.42it/s, loss=0.00471, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  86%|████████▌ | 2160/2524 [14:52<02:30,  2.42it/s, loss=0.00471, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  86%|████████▌ | 2160/2524 [14:52<02:30,  2.42it/s, loss=0.00217, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  86%|████████▌ | 2170/2524 [14:56<02:26,  2.42it/s, loss=0.00217, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  86%|████████▌ | 2170/2524 [14:56<02:26,  2.42it/s, loss=0.00154, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  86%|████████▋ | 2180/2524 [15:00<02:22,  2.42it/s, loss=0.00154, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  86%|████████▋ | 2180/2524 [15:00<02:22,  2.42it/s, loss=0.00156, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  87%|████████▋ | 2190/2524 [15:04<02:17,  2.42it/s, loss=0.00156, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  87%|████████▋ | 2190/2524 [15:04<02:17,  2.42it/s, loss=0.00174, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  87%|████████▋ | 2200/2524 [15:08<02:13,  2.42it/s, loss=0.00174, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  87%|████████▋ | 2200/2524 [15:08<02:13,  2.42it/s, loss=0.0013, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  88%|████████▊ | 2210/2524 [15:12<02:09,  2.42it/s, loss=0.0013, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  88%|████████▊ | 2210/2524 [15:12<02:09,  2.42it/s, loss=0.00055, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  88%|████████▊ | 2220/2524 [15:16<02:05,  2.42it/s, loss=0.00055, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  88%|████████▊ | 2220/2524 [15:16<02:05,  2.42it/s, loss=0.00076, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  88%|████████▊ | 2230/2524 [15:20<02:01,  2.42it/s, loss=0.00076, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  88%|████████▊ | 2230/2524 [15:20<02:01,  2.42it/s, loss=0.00153, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  89%|████████▊ | 2240/2524 [15:25<01:57,  2.42it/s, loss=0.00153, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  89%|████████▊ | 2240/2524 [15:25<01:57,  2.42it/s, loss=0.00265, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  89%|████████▉ | 2250/2524 [15:29<01:53,  2.42it/s, loss=0.00265, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  89%|████████▉ | 2250/2524 [15:29<01:53,  2.42it/s, loss=0.00272, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  90%|████████▉ | 2260/2524 [15:33<01:49,  2.42it/s, loss=0.00272, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  90%|████████▉ | 2260/2524 [15:33<01:49,  2.42it/s, loss=0.00172, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  90%|████████▉ | 2270/2524 [15:37<01:44,  2.42it/s, loss=0.00172, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  90%|████████▉ | 2270/2524 [15:37<01:44,  2.42it/s, loss=0.00088, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  90%|█████████ | 2280/2524 [15:41<01:40,  2.42it/s, loss=0.00088, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  90%|█████████ | 2280/2524 [15:41<01:40,  2.42it/s, loss=0.000534, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  91%|█████████ | 2290/2524 [15:45<01:36,  2.42it/s, loss=0.000534, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  91%|█████████ | 2290/2524 [15:45<01:36,  2.42it/s, loss=0.000525, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  91%|█████████ | 2300/2524 [15:49<01:32,  2.42it/s, loss=0.000525, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  91%|█████████ | 2300/2524 [15:49<01:32,  2.42it/s, loss=0.000581, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  92%|█████████▏| 2310/2524 [15:53<01:28,  2.42it/s, loss=0.000581, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  92%|█████████▏| 2310/2524 [15:53<01:28,  2.42it/s, loss=0.00158, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  92%|█████████▏| 2320/2524 [15:58<01:24,  2.42it/s, loss=0.00158, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  92%|█████████▏| 2320/2524 [15:58<01:24,  2.42it/s, loss=0.00161, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  92%|█████████▏| 2330/2524 [16:02<01:20,  2.42it/s, loss=0.00161, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  92%|█████████▏| 2330/2524 [16:02<01:20,  2.42it/s, loss=0.00305, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  93%|█████████▎| 2340/2524 [16:06<01:15,  2.42it/s, loss=0.00305, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  93%|█████████▎| 2340/2524 [16:06<01:15,  2.42it/s, loss=0.00293, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  93%|█████████▎| 2350/2524 [16:10<01:11,  2.42it/s, loss=0.00293, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  93%|█████████▎| 2350/2524 [16:10<01:11,  2.42it/s, loss=0.00126, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  94%|█████████▎| 2360/2524 [16:14<01:07,  2.42it/s, loss=0.00126, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  94%|█████████▎| 2360/2524 [16:14<01:07,  2.42it/s, loss=0.0018, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  94%|█████████▍| 2370/2524 [16:18<01:03,  2.42it/s, loss=0.0018, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  94%|█████████▍| 2370/2524 [16:18<01:03,  2.42it/s, loss=0.001, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  94%|█████████▍| 2380/2524 [16:22<00:59,  2.42it/s, loss=0.001, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  94%|█████████▍| 2380/2524 [16:22<00:59,  2.42it/s, loss=0.000671, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  95%|█████████▍| 2390/2524 [16:27<00:55,  2.42it/s, loss=0.000671, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  95%|█████████▍| 2390/2524 [16:27<00:55,  2.42it/s, loss=0.0028, v_num=3, val_loss=0.306, val_f1=63.60]  Epoch 14:  95%|█████████▌| 2400/2524 [16:31<00:51,  2.42it/s, loss=0.0028, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  95%|█████████▌| 2400/2524 [16:31<00:51,  2.42it/s, loss=0.00307, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  95%|█████████▌| 2410/2524 [16:35<00:47,  2.42it/s, loss=0.00307, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  95%|█████████▌| 2410/2524 [16:35<00:47,  2.42it/s, loss=0.00185, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  96%|█████████▌| 2420/2524 [16:39<00:42,  2.42it/s, loss=0.00185, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  96%|█████████▌| 2420/2524 [16:39<00:42,  2.42it/s, loss=0.00164, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  96%|█████████▋| 2430/2524 [16:43<00:38,  2.42it/s, loss=0.00164, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  96%|█████████▋| 2430/2524 [16:43<00:38,  2.42it/s, loss=0.00114, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  97%|█████████▋| 2440/2524 [16:47<00:34,  2.42it/s, loss=0.00114, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  97%|█████████▋| 2440/2524 [16:47<00:34,  2.42it/s, loss=0.000999, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  97%|█████████▋| 2450/2524 [16:51<00:30,  2.42it/s, loss=0.000999, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  97%|█████████▋| 2450/2524 [16:51<00:30,  2.42it/s, loss=0.00075, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  97%|█████████▋| 2460/2524 [16:55<00:26,  2.42it/s, loss=0.00075, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  97%|█████████▋| 2460/2524 [16:55<00:26,  2.42it/s, loss=0.000514, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  98%|█████████▊| 2470/2524 [17:00<00:22,  2.42it/s, loss=0.000514, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  98%|█████████▊| 2470/2524 [17:00<00:22,  2.42it/s, loss=0.000566, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  98%|█████████▊| 2480/2524 [17:04<00:18,  2.42it/s, loss=0.000566, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  98%|█████████▊| 2480/2524 [17:04<00:18,  2.42it/s, loss=0.00144, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 14:  99%|█████████▊| 2490/2524 [17:08<00:14,  2.42it/s, loss=0.00144, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  99%|█████████▊| 2490/2524 [17:08<00:14,  2.42it/s, loss=0.00199, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  99%|█████████▉| 2500/2524 [17:12<00:09,  2.42it/s, loss=0.00199, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  99%|█████████▉| 2500/2524 [17:12<00:09,  2.42it/s, loss=0.00242, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  99%|█████████▉| 2510/2524 [17:16<00:05,  2.42it/s, loss=0.00242, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:  99%|█████████▉| 2510/2524 [17:16<00:05,  2.42it/s, loss=0.00219, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14: 100%|█████████▉| 2520/2524 [17:20<00:01,  2.42it/s, loss=0.00219, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14: 100%|█████████▉| 2520/2524 [17:20<00:01,  2.42it/s, loss=0.000998, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14: 100%|██████████| 2524/2524 [17:22<00:00,  2.42it/s, loss=0.000998, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14: 100%|██████████| 2524/2524 [17:22<00:00,  2.42it/s, loss=0.000734, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14: 100%|██████████| 2524/2524 [17:22<00:00,  2.42it/s, loss=0.000734, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 14:   0%|          | 0/2524 [00:00<?, ?it/s, loss=0.000734, v_num=3, val_loss=0.306, val_f1=63.60]           Epoch 15:   0%|          | 0/2524 [00:00<?, ?it/s, loss=0.000734, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   0%|          | 10/2524 [00:04<19:06,  2.19it/s, loss=0.000734, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   0%|          | 10/2524 [00:04<19:09,  2.19it/s, loss=0.00125, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:   1%|          | 20/2524 [00:08<18:03,  2.31it/s, loss=0.00125, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   1%|          | 20/2524 [00:08<18:04,  2.31it/s, loss=0.00134, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   1%|          | 30/2524 [00:12<17:39,  2.35it/s, loss=0.00134, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   1%|          | 30/2524 [00:12<17:40,  2.35it/s, loss=0.00125, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   2%|▏         | 40/2524 [00:16<17:28,  2.37it/s, loss=0.00125, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   2%|▏         | 40/2524 [00:16<17:28,  2.37it/s, loss=0.00121, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   2%|▏         | 50/2524 [00:21<17:22,  2.37it/s, loss=0.00121, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   2%|▏         | 50/2524 [00:21<17:23,  2.37it/s, loss=0.000563, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   2%|▏         | 60/2524 [00:25<17:13,  2.38it/s, loss=0.000563, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   2%|▏         | 60/2524 [00:25<17:14,  2.38it/s, loss=0.000704, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   3%|▎         | 70/2524 [00:29<17:05,  2.39it/s, loss=0.000704, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   3%|▎         | 70/2524 [00:29<17:06,  2.39it/s, loss=0.00122, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:   3%|▎         | 80/2524 [00:33<16:58,  2.40it/s, loss=0.00122, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   3%|▎         | 80/2524 [00:33<16:59,  2.40it/s, loss=0.00101, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   4%|▎         | 90/2524 [00:37<16:52,  2.40it/s, loss=0.00101, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   4%|▎         | 90/2524 [00:37<16:52,  2.40it/s, loss=0.00135, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   4%|▍         | 100/2524 [00:41<16:48,  2.40it/s, loss=0.00135, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   4%|▍         | 100/2524 [00:41<16:48,  2.40it/s, loss=0.0015, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:   4%|▍         | 110/2524 [00:45<16:42,  2.41it/s, loss=0.0015, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   4%|▍         | 110/2524 [00:45<16:42,  2.41it/s, loss=0.0012, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   5%|▍         | 120/2524 [00:49<16:36,  2.41it/s, loss=0.0012, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   5%|▍         | 120/2524 [00:49<16:37,  2.41it/s, loss=0.00127, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   5%|▌         | 130/2524 [00:53<16:31,  2.41it/s, loss=0.00127, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   5%|▌         | 130/2524 [00:53<16:31,  2.41it/s, loss=0.000743, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   6%|▌         | 140/2524 [00:57<16:27,  2.41it/s, loss=0.000743, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   6%|▌         | 140/2524 [00:57<16:27,  2.41it/s, loss=0.000851, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   6%|▌         | 150/2524 [01:02<16:24,  2.41it/s, loss=0.000851, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   6%|▌         | 150/2524 [01:02<16:24,  2.41it/s, loss=0.00105, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:   6%|▋         | 160/2524 [01:06<16:19,  2.41it/s, loss=0.00105, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   6%|▋         | 160/2524 [01:06<16:19,  2.41it/s, loss=0.001, v_num=3, val_loss=0.306, val_f1=63.60]  Epoch 15:   7%|▋         | 170/2524 [01:10<16:14,  2.42it/s, loss=0.001, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   7%|▋         | 170/2524 [01:10<16:14,  2.41it/s, loss=0.00183, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   7%|▋         | 180/2524 [01:14<16:09,  2.42it/s, loss=0.00183, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   7%|▋         | 180/2524 [01:14<16:10,  2.42it/s, loss=0.00155, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   8%|▊         | 190/2524 [01:18<16:05,  2.42it/s, loss=0.00155, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   8%|▊         | 190/2524 [01:18<16:05,  2.42it/s, loss=0.000795, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   8%|▊         | 200/2524 [01:22<16:01,  2.42it/s, loss=0.000795, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   8%|▊         | 200/2524 [01:22<16:01,  2.42it/s, loss=0.00248, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:   8%|▊         | 210/2524 [01:26<15:56,  2.42it/s, loss=0.00248, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   8%|▊         | 210/2524 [01:26<15:56,  2.42it/s, loss=0.00275, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   9%|▊         | 220/2524 [01:30<15:52,  2.42it/s, loss=0.00275, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   9%|▊         | 220/2524 [01:30<15:52,  2.42it/s, loss=0.00172, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   9%|▉         | 230/2524 [01:35<15:47,  2.42it/s, loss=0.00172, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   9%|▉         | 230/2524 [01:35<15:47,  2.42it/s, loss=0.00131, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  10%|▉         | 240/2524 [01:39<15:43,  2.42it/s, loss=0.00131, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  10%|▉         | 240/2524 [01:39<15:43,  2.42it/s, loss=0.00127, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  10%|▉         | 250/2524 [01:43<15:40,  2.42it/s, loss=0.00127, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  10%|▉         | 250/2524 [01:43<15:40,  2.42it/s, loss=0.00178, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  10%|█         | 260/2524 [01:47<15:35,  2.42it/s, loss=0.00178, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  10%|█         | 260/2524 [01:47<15:35,  2.42it/s, loss=0.00131, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  11%|█         | 270/2524 [01:51<15:31,  2.42it/s, loss=0.00131, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  11%|█         | 270/2524 [01:51<15:31,  2.42it/s, loss=0.00225, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  11%|█         | 280/2524 [01:55<15:26,  2.42it/s, loss=0.00225, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  11%|█         | 280/2524 [01:55<15:26,  2.42it/s, loss=0.00244, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  11%|█▏        | 290/2524 [01:59<15:22,  2.42it/s, loss=0.00244, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  11%|█▏        | 290/2524 [01:59<15:22,  2.42it/s, loss=0.00303, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  12%|█▏        | 300/2524 [02:03<15:18,  2.42it/s, loss=0.00303, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  12%|█▏        | 300/2524 [02:03<15:18,  2.42it/s, loss=0.00282, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  12%|█▏        | 310/2524 [02:07<15:13,  2.42it/s, loss=0.00282, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  12%|█▏        | 310/2524 [02:07<15:13,  2.42it/s, loss=0.000716, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  13%|█▎        | 320/2524 [02:12<15:09,  2.42it/s, loss=0.000716, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  13%|█▎        | 320/2524 [02:12<15:09,  2.42it/s, loss=0.0013, v_num=3, val_loss=0.306, val_f1=63.60]  Epoch 15:  13%|█▎        | 330/2524 [02:16<15:04,  2.42it/s, loss=0.0013, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  13%|█▎        | 330/2524 [02:16<15:05,  2.42it/s, loss=0.00148, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  13%|█▎        | 340/2524 [02:20<15:00,  2.42it/s, loss=0.00148, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  13%|█▎        | 340/2524 [02:20<15:00,  2.42it/s, loss=0.00223, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  14%|█▍        | 350/2524 [02:24<14:57,  2.42it/s, loss=0.00223, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  14%|█▍        | 350/2524 [02:24<14:57,  2.42it/s, loss=0.00246, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  14%|█▍        | 360/2524 [02:28<14:52,  2.42it/s, loss=0.00246, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  14%|█▍        | 360/2524 [02:28<14:52,  2.42it/s, loss=0.00166, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  15%|█▍        | 370/2524 [02:32<14:48,  2.42it/s, loss=0.00166, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  15%|█▍        | 370/2524 [02:32<14:48,  2.42it/s, loss=0.0011, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  15%|█▌        | 380/2524 [02:36<14:44,  2.42it/s, loss=0.0011, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  15%|█▌        | 380/2524 [02:36<14:44,  2.42it/s, loss=0.000395, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  15%|█▌        | 390/2524 [02:40<14:40,  2.42it/s, loss=0.000395, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  15%|█▌        | 390/2524 [02:40<14:40,  2.42it/s, loss=0.00197, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  16%|█▌        | 400/2524 [02:44<14:36,  2.42it/s, loss=0.00197, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  16%|█▌        | 400/2524 [02:44<14:36,  2.42it/s, loss=0.00191, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  16%|█▌        | 410/2524 [02:49<14:31,  2.42it/s, loss=0.00191, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  16%|█▌        | 410/2524 [02:49<14:31,  2.42it/s, loss=0.000727, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  17%|█▋        | 420/2524 [02:53<14:27,  2.43it/s, loss=0.000727, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  17%|█▋        | 420/2524 [02:53<14:27,  2.42it/s, loss=0.000909, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  17%|█▋        | 430/2524 [02:57<14:23,  2.43it/s, loss=0.000909, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  17%|█▋        | 430/2524 [02:57<14:23,  2.43it/s, loss=0.00143, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  17%|█▋        | 440/2524 [03:01<14:19,  2.43it/s, loss=0.00143, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  17%|█▋        | 440/2524 [03:01<14:19,  2.43it/s, loss=0.00245, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  18%|█▊        | 450/2524 [03:05<14:15,  2.42it/s, loss=0.00245, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  18%|█▊        | 450/2524 [03:05<14:15,  2.42it/s, loss=0.00165, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  18%|█▊        | 460/2524 [03:09<14:11,  2.42it/s, loss=0.00165, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  18%|█▊        | 460/2524 [03:09<14:11,  2.42it/s, loss=0.000995, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  19%|█▊        | 470/2524 [03:13<14:06,  2.43it/s, loss=0.000995, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  19%|█▊        | 470/2524 [03:13<14:06,  2.43it/s, loss=0.000993, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  19%|█▉        | 480/2524 [03:17<14:02,  2.43it/s, loss=0.000993, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  19%|█▉        | 480/2524 [03:17<14:02,  2.43it/s, loss=0.000431, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  19%|█▉        | 490/2524 [03:21<13:58,  2.43it/s, loss=0.000431, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  19%|█▉        | 490/2524 [03:21<13:58,  2.43it/s, loss=0.0011, v_num=3, val_loss=0.306, val_f1=63.60]  Epoch 15:  20%|█▉        | 500/2524 [03:26<13:54,  2.43it/s, loss=0.0011, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  20%|█▉        | 500/2524 [03:26<13:54,  2.43it/s, loss=0.00119, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  20%|██        | 510/2524 [03:30<13:50,  2.43it/s, loss=0.00119, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  20%|██        | 510/2524 [03:30<13:50,  2.43it/s, loss=0.000647, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  21%|██        | 520/2524 [03:34<13:45,  2.43it/s, loss=0.000647, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  21%|██        | 520/2524 [03:34<13:45,  2.43it/s, loss=0.00126, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  21%|██        | 530/2524 [03:38<13:41,  2.43it/s, loss=0.00126, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  21%|██        | 530/2524 [03:38<13:41,  2.43it/s, loss=0.00131, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  21%|██▏       | 540/2524 [03:42<13:37,  2.43it/s, loss=0.00131, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  21%|██▏       | 540/2524 [03:42<13:37,  2.43it/s, loss=0.00191, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  22%|██▏       | 550/2524 [03:46<13:33,  2.43it/s, loss=0.00191, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  22%|██▏       | 550/2524 [03:46<13:33,  2.43it/s, loss=0.00305, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  22%|██▏       | 560/2524 [03:50<13:29,  2.43it/s, loss=0.00305, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  22%|██▏       | 560/2524 [03:50<13:29,  2.43it/s, loss=0.00257, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  23%|██▎       | 570/2524 [03:54<13:25,  2.43it/s, loss=0.00257, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  23%|██▎       | 570/2524 [03:54<13:25,  2.43it/s, loss=0.00132, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  23%|██▎       | 580/2524 [03:59<13:21,  2.43it/s, loss=0.00132, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  23%|██▎       | 580/2524 [03:59<13:21,  2.43it/s, loss=0.00135, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  23%|██▎       | 590/2524 [04:03<13:16,  2.43it/s, loss=0.00135, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  23%|██▎       | 590/2524 [04:03<13:16,  2.43it/s, loss=0.00418, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  24%|██▍       | 600/2524 [04:07<13:12,  2.43it/s, loss=0.00418, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  24%|██▍       | 600/2524 [04:07<13:12,  2.43it/s, loss=0.00375, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  24%|██▍       | 610/2524 [04:11<13:08,  2.43it/s, loss=0.00375, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  24%|██▍       | 610/2524 [04:11<13:08,  2.43it/s, loss=0.00144, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  25%|██▍       | 620/2524 [04:15<13:04,  2.43it/s, loss=0.00144, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  25%|██▍       | 620/2524 [04:15<13:04,  2.43it/s, loss=0.0016, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  25%|██▍       | 630/2524 [04:19<13:00,  2.43it/s, loss=0.0016, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  25%|██▍       | 630/2524 [04:19<13:00,  2.43it/s, loss=0.00194, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  25%|██▌       | 640/2524 [04:23<12:56,  2.43it/s, loss=0.00194, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  25%|██▌       | 640/2524 [04:23<12:56,  2.43it/s, loss=0.00139, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  26%|██▌       | 650/2524 [04:27<12:52,  2.43it/s, loss=0.00139, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  26%|██▌       | 650/2524 [04:27<12:52,  2.43it/s, loss=0.0011, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  26%|██▌       | 660/2524 [04:31<12:48,  2.43it/s, loss=0.0011, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  26%|██▌       | 660/2524 [04:31<12:48,  2.43it/s, loss=0.00115, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  27%|██▋       | 670/2524 [04:36<12:43,  2.43it/s, loss=0.00115, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  27%|██▋       | 670/2524 [04:36<12:43,  2.43it/s, loss=0.000819, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  27%|██▋       | 680/2524 [04:40<12:39,  2.43it/s, loss=0.000819, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  27%|██▋       | 680/2524 [04:40<12:39,  2.43it/s, loss=0.00102, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  27%|██▋       | 690/2524 [04:44<12:35,  2.43it/s, loss=0.00102, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  27%|██▋       | 690/2524 [04:44<12:35,  2.43it/s, loss=0.00135, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  28%|██▊       | 700/2524 [04:48<12:31,  2.43it/s, loss=0.00135, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  28%|██▊       | 700/2524 [04:48<12:31,  2.43it/s, loss=0.0014, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  28%|██▊       | 710/2524 [04:52<12:27,  2.43it/s, loss=0.0014, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  28%|██▊       | 710/2524 [04:52<12:27,  2.43it/s, loss=0.000971, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  29%|██▊       | 720/2524 [04:56<12:22,  2.43it/s, loss=0.000971, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  29%|██▊       | 720/2524 [04:56<12:23,  2.43it/s, loss=0.000894, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  29%|██▉       | 730/2524 [05:00<12:18,  2.43it/s, loss=0.000894, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  29%|██▉       | 730/2524 [05:00<12:18,  2.43it/s, loss=0.000733, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  29%|██▉       | 740/2524 [05:04<12:14,  2.43it/s, loss=0.000733, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  29%|██▉       | 740/2524 [05:04<12:14,  2.43it/s, loss=0.00169, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  30%|██▉       | 750/2524 [05:08<12:10,  2.43it/s, loss=0.00169, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  30%|██▉       | 750/2524 [05:08<12:10,  2.43it/s, loss=0.00153, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  30%|███       | 760/2524 [05:13<12:06,  2.43it/s, loss=0.00153, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  30%|███       | 760/2524 [05:13<12:06,  2.43it/s, loss=0.000317, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  31%|███       | 770/2524 [05:17<12:02,  2.43it/s, loss=0.000317, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  31%|███       | 770/2524 [05:17<12:02,  2.43it/s, loss=0.00082, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  31%|███       | 780/2524 [05:21<11:58,  2.43it/s, loss=0.00082, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  31%|███       | 780/2524 [05:21<11:58,  2.43it/s, loss=0.0012, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  31%|███▏      | 790/2524 [05:25<11:54,  2.43it/s, loss=0.0012, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  31%|███▏      | 790/2524 [05:25<11:54,  2.43it/s, loss=0.00147, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  32%|███▏      | 800/2524 [05:29<11:50,  2.43it/s, loss=0.00147, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  32%|███▏      | 800/2524 [05:29<11:50,  2.43it/s, loss=0.00162, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  32%|███▏      | 810/2524 [05:33<11:45,  2.43it/s, loss=0.00162, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  32%|███▏      | 810/2524 [05:33<11:45,  2.43it/s, loss=0.00103, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  32%|███▏      | 820/2524 [05:37<11:41,  2.43it/s, loss=0.00103, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  32%|███▏      | 820/2524 [05:37<11:41,  2.43it/s, loss=0.00133, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  33%|███▎      | 830/2524 [05:41<11:37,  2.43it/s, loss=0.00133, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  33%|███▎      | 830/2524 [05:41<11:37,  2.43it/s, loss=0.00148, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  33%|███▎      | 840/2524 [05:45<11:33,  2.43it/s, loss=0.00148, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  33%|███▎      | 840/2524 [05:45<11:33,  2.43it/s, loss=0.000729, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  34%|███▎      | 850/2524 [05:50<11:29,  2.43it/s, loss=0.000729, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  34%|███▎      | 850/2524 [05:50<11:29,  2.43it/s, loss=0.000998, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  34%|███▍      | 860/2524 [05:54<11:25,  2.43it/s, loss=0.000998, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  34%|███▍      | 860/2524 [05:54<11:25,  2.43it/s, loss=0.000925, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  34%|███▍      | 870/2524 [05:58<11:21,  2.43it/s, loss=0.000925, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  34%|███▍      | 870/2524 [05:58<11:21,  2.43it/s, loss=0.00145, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  35%|███▍      | 880/2524 [06:02<11:16,  2.43it/s, loss=0.00145, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  35%|███▍      | 880/2524 [06:02<11:16,  2.43it/s, loss=0.00151, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  35%|███▌      | 890/2524 [06:06<11:12,  2.43it/s, loss=0.00151, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  35%|███▌      | 890/2524 [06:06<11:12,  2.43it/s, loss=0.00101, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  36%|███▌      | 900/2524 [06:10<11:08,  2.43it/s, loss=0.00101, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  36%|███▌      | 900/2524 [06:10<11:08,  2.43it/s, loss=0.00105, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  36%|███▌      | 910/2524 [06:14<11:04,  2.43it/s, loss=0.00105, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  36%|███▌      | 910/2524 [06:14<11:04,  2.43it/s, loss=0.000457, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  36%|███▋      | 920/2524 [06:18<11:00,  2.43it/s, loss=0.000457, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  36%|███▋      | 920/2524 [06:18<11:00,  2.43it/s, loss=0.000418, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  37%|███▋      | 930/2524 [06:22<10:56,  2.43it/s, loss=0.000418, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  37%|███▋      | 930/2524 [06:22<10:56,  2.43it/s, loss=0.00241, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  37%|███▋      | 940/2524 [06:26<10:52,  2.43it/s, loss=0.00241, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  37%|███▋      | 940/2524 [06:27<10:52,  2.43it/s, loss=0.00263, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  38%|███▊      | 950/2524 [06:31<10:48,  2.43it/s, loss=0.00263, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  38%|███▊      | 950/2524 [06:31<10:48,  2.43it/s, loss=0.000857, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  38%|███▊      | 960/2524 [06:35<10:43,  2.43it/s, loss=0.000857, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  38%|███▊      | 960/2524 [06:35<10:43,  2.43it/s, loss=0.00193, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  38%|███▊      | 970/2524 [06:39<10:39,  2.43it/s, loss=0.00193, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  38%|███▊      | 970/2524 [06:39<10:39,  2.43it/s, loss=0.00243, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  39%|███▉      | 980/2524 [06:43<10:35,  2.43it/s, loss=0.00243, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  39%|███▉      | 980/2524 [06:43<10:35,  2.43it/s, loss=0.00142, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  39%|███▉      | 990/2524 [06:47<10:31,  2.43it/s, loss=0.00142, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  39%|███▉      | 990/2524 [06:47<10:31,  2.43it/s, loss=0.000995, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  40%|███▉      | 1000/2524 [06:51<10:27,  2.43it/s, loss=0.000995, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  40%|███▉      | 1000/2524 [06:51<10:27,  2.43it/s, loss=0.00198, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  40%|████      | 1010/2524 [06:55<10:23,  2.43it/s, loss=0.00198, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  40%|████      | 1010/2524 [06:55<10:23,  2.43it/s, loss=0.00184, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  40%|████      | 1020/2524 [06:59<10:19,  2.43it/s, loss=0.00184, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  40%|████      | 1020/2524 [06:59<10:19,  2.43it/s, loss=0.000858, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  41%|████      | 1030/2524 [07:03<10:14,  2.43it/s, loss=0.000858, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  41%|████      | 1030/2524 [07:03<10:14,  2.43it/s, loss=0.0019, v_num=3, val_loss=0.306, val_f1=63.60]  Epoch 15:  41%|████      | 1040/2524 [07:08<10:10,  2.43it/s, loss=0.0019, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  41%|████      | 1040/2524 [07:08<10:10,  2.43it/s, loss=0.00189, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  42%|████▏     | 1050/2524 [07:12<10:06,  2.43it/s, loss=0.00189, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  42%|████▏     | 1050/2524 [07:12<10:06,  2.43it/s, loss=0.000807, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  42%|████▏     | 1060/2524 [07:16<10:02,  2.43it/s, loss=0.000807, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  42%|████▏     | 1060/2524 [07:16<10:02,  2.43it/s, loss=0.000763, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  42%|████▏     | 1070/2524 [07:20<09:58,  2.43it/s, loss=0.000763, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  42%|████▏     | 1070/2524 [07:20<09:58,  2.43it/s, loss=0.000611, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  43%|████▎     | 1080/2524 [07:24<09:54,  2.43it/s, loss=0.000611, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  43%|████▎     | 1080/2524 [07:24<09:54,  2.43it/s, loss=0.000953, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  43%|████▎     | 1090/2524 [07:28<09:50,  2.43it/s, loss=0.000953, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  43%|████▎     | 1090/2524 [07:28<09:50,  2.43it/s, loss=0.00103, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  44%|████▎     | 1100/2524 [07:32<09:46,  2.43it/s, loss=0.00103, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  44%|████▎     | 1100/2524 [07:32<09:46,  2.43it/s, loss=0.000326, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  44%|████▍     | 1110/2524 [07:36<09:42,  2.43it/s, loss=0.000326, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  44%|████▍     | 1110/2524 [07:36<09:42,  2.43it/s, loss=0.000309, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  44%|████▍     | 1120/2524 [07:40<09:37,  2.43it/s, loss=0.000309, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  44%|████▍     | 1120/2524 [07:40<09:37,  2.43it/s, loss=0.00206, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  45%|████▍     | 1130/2524 [07:45<09:33,  2.43it/s, loss=0.00206, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  45%|████▍     | 1130/2524 [07:45<09:33,  2.43it/s, loss=0.0024, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  45%|████▌     | 1140/2524 [07:49<09:29,  2.43it/s, loss=0.0024, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  45%|████▌     | 1140/2524 [07:49<09:29,  2.43it/s, loss=0.000968, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  46%|████▌     | 1150/2524 [07:53<09:25,  2.43it/s, loss=0.000968, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  46%|████▌     | 1150/2524 [07:53<09:25,  2.43it/s, loss=0.00122, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  46%|████▌     | 1160/2524 [07:57<09:21,  2.43it/s, loss=0.00122, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  46%|████▌     | 1160/2524 [07:57<09:21,  2.43it/s, loss=0.0011, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  46%|████▋     | 1170/2524 [08:01<09:17,  2.43it/s, loss=0.0011, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  46%|████▋     | 1170/2524 [08:01<09:17,  2.43it/s, loss=0.000592, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  47%|████▋     | 1180/2524 [08:05<09:13,  2.43it/s, loss=0.000592, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  47%|████▋     | 1180/2524 [08:05<09:13,  2.43it/s, loss=0.000932, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  47%|████▋     | 1190/2524 [08:09<09:09,  2.43it/s, loss=0.000932, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  47%|████▋     | 1190/2524 [08:09<09:09,  2.43it/s, loss=0.00151, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  48%|████▊     | 1200/2524 [08:13<09:04,  2.43it/s, loss=0.00151, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  48%|████▊     | 1200/2524 [08:13<09:04,  2.43it/s, loss=0.00146, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  48%|████▊     | 1210/2524 [08:17<09:00,  2.43it/s, loss=0.00146, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  48%|████▊     | 1210/2524 [08:17<09:00,  2.43it/s, loss=0.00201, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  48%|████▊     | 1220/2524 [08:22<08:56,  2.43it/s, loss=0.00201, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  48%|████▊     | 1220/2524 [08:22<08:56,  2.43it/s, loss=0.0031, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  49%|████▊     | 1230/2524 [08:26<08:52,  2.43it/s, loss=0.0031, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  49%|████▊     | 1230/2524 [08:26<08:52,  2.43it/s, loss=0.00208, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  49%|████▉     | 1240/2524 [08:30<08:48,  2.43it/s, loss=0.00208, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  49%|████▉     | 1240/2524 [08:30<08:48,  2.43it/s, loss=0.000823, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  50%|████▉     | 1250/2524 [08:34<08:44,  2.43it/s, loss=0.000823, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  50%|████▉     | 1250/2524 [08:34<08:44,  2.43it/s, loss=0.000837, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  50%|████▉     | 1260/2524 [08:38<08:40,  2.43it/s, loss=0.000837, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  50%|████▉     | 1260/2524 [08:38<08:40,  2.43it/s, loss=0.000903, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  50%|█████     | 1270/2524 [08:42<08:36,  2.43it/s, loss=0.000903, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  50%|█████     | 1270/2524 [08:42<08:36,  2.43it/s, loss=0.00138, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  51%|█████     | 1280/2524 [08:46<08:31,  2.43it/s, loss=0.00138, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  51%|█████     | 1280/2524 [08:46<08:31,  2.43it/s, loss=0.00119, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  51%|█████     | 1290/2524 [08:50<08:27,  2.43it/s, loss=0.00119, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  51%|█████     | 1290/2524 [08:50<08:27,  2.43it/s, loss=0.000643, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  52%|█████▏    | 1300/2524 [08:55<08:23,  2.43it/s, loss=0.000643, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  52%|█████▏    | 1300/2524 [08:55<08:23,  2.43it/s, loss=0.00089, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  52%|█████▏    | 1310/2524 [08:59<08:19,  2.43it/s, loss=0.00089, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  52%|█████▏    | 1310/2524 [08:59<08:19,  2.43it/s, loss=0.00103, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  52%|█████▏    | 1320/2524 [09:03<08:15,  2.43it/s, loss=0.00103, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  52%|█████▏    | 1320/2524 [09:03<08:15,  2.43it/s, loss=0.000643, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  53%|█████▎    | 1330/2524 [09:07<08:11,  2.43it/s, loss=0.000643, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  53%|█████▎    | 1330/2524 [09:07<08:11,  2.43it/s, loss=0.000398, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  53%|█████▎    | 1340/2524 [09:11<08:07,  2.43it/s, loss=0.000398, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  53%|█████▎    | 1340/2524 [09:11<08:07,  2.43it/s, loss=0.00031, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  53%|█████▎    | 1350/2524 [09:15<08:03,  2.43it/s, loss=0.00031, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  53%|█████▎    | 1350/2524 [09:15<08:03,  2.43it/s, loss=0.000586, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  54%|█████▍    | 1360/2524 [09:19<07:59,  2.43it/s, loss=0.000586, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  54%|█████▍    | 1360/2524 [09:19<07:59,  2.43it/s, loss=0.000855, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  54%|█████▍    | 1370/2524 [09:23<07:54,  2.43it/s, loss=0.000855, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  54%|█████▍    | 1370/2524 [09:23<07:54,  2.43it/s, loss=0.00106, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  55%|█████▍    | 1380/2524 [09:27<07:50,  2.43it/s, loss=0.00106, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  55%|█████▍    | 1380/2524 [09:27<07:50,  2.43it/s, loss=0.00145, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  55%|█████▌    | 1390/2524 [09:32<07:46,  2.43it/s, loss=0.00145, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  55%|█████▌    | 1390/2524 [09:32<07:46,  2.43it/s, loss=0.00138, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  55%|█████▌    | 1400/2524 [09:36<07:42,  2.43it/s, loss=0.00138, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  55%|█████▌    | 1400/2524 [09:36<07:42,  2.43it/s, loss=0.00121, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  56%|█████▌    | 1410/2524 [09:40<07:38,  2.43it/s, loss=0.00121, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  56%|█████▌    | 1410/2524 [09:40<07:38,  2.43it/s, loss=0.00107, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  56%|█████▋    | 1420/2524 [09:44<07:34,  2.43it/s, loss=0.00107, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  56%|█████▋    | 1420/2524 [09:44<07:34,  2.43it/s, loss=0.00145, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  57%|█████▋    | 1430/2524 [09:48<07:30,  2.43it/s, loss=0.00145, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  57%|█████▋    | 1430/2524 [09:48<07:30,  2.43it/s, loss=0.00122, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  57%|█████▋    | 1440/2524 [09:52<07:26,  2.43it/s, loss=0.00122, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  57%|█████▋    | 1440/2524 [09:52<07:26,  2.43it/s, loss=0.000874, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  57%|█████▋    | 1450/2524 [09:56<07:22,  2.43it/s, loss=0.000874, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  57%|█████▋    | 1450/2524 [09:56<07:22,  2.43it/s, loss=0.0017, v_num=3, val_loss=0.306, val_f1=63.60]  Epoch 15:  58%|█████▊    | 1460/2524 [10:00<07:17,  2.43it/s, loss=0.0017, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  58%|█████▊    | 1460/2524 [10:00<07:17,  2.43it/s, loss=0.00155, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  58%|█████▊    | 1470/2524 [10:04<07:13,  2.43it/s, loss=0.00155, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  58%|█████▊    | 1470/2524 [10:04<07:13,  2.43it/s, loss=0.0017, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  59%|█████▊    | 1480/2524 [10:09<07:09,  2.43it/s, loss=0.0017, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  59%|█████▊    | 1480/2524 [10:09<07:09,  2.43it/s, loss=0.00151, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  59%|█████▉    | 1490/2524 [10:13<07:05,  2.43it/s, loss=0.00151, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  59%|█████▉    | 1490/2524 [10:13<07:05,  2.43it/s, loss=0.0019, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  59%|█████▉    | 1500/2524 [10:17<07:01,  2.43it/s, loss=0.0019, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  59%|█████▉    | 1500/2524 [10:17<07:01,  2.43it/s, loss=0.00278, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  60%|█████▉    | 1510/2524 [10:21<06:57,  2.43it/s, loss=0.00278, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  60%|█████▉    | 1510/2524 [10:21<06:57,  2.43it/s, loss=0.00272, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  60%|██████    | 1520/2524 [10:25<06:53,  2.43it/s, loss=0.00272, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  60%|██████    | 1520/2524 [10:25<06:53,  2.43it/s, loss=0.00281, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  61%|██████    | 1530/2524 [10:29<06:48,  2.43it/s, loss=0.00281, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  61%|██████    | 1530/2524 [10:29<06:49,  2.43it/s, loss=0.00223, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  61%|██████    | 1540/2524 [10:33<06:44,  2.43it/s, loss=0.00223, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  61%|██████    | 1540/2524 [10:33<06:44,  2.43it/s, loss=0.0013, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  61%|██████▏   | 1550/2524 [10:37<06:40,  2.43it/s, loss=0.0013, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  61%|██████▏   | 1550/2524 [10:37<06:40,  2.43it/s, loss=0.000648, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  62%|██████▏   | 1560/2524 [10:41<06:36,  2.43it/s, loss=0.000648, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  62%|██████▏   | 1560/2524 [10:41<06:36,  2.43it/s, loss=0.000731, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  62%|██████▏   | 1570/2524 [10:46<06:32,  2.43it/s, loss=0.000731, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  62%|██████▏   | 1570/2524 [10:46<06:32,  2.43it/s, loss=0.00141, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  63%|██████▎   | 1580/2524 [10:50<06:28,  2.43it/s, loss=0.00141, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  63%|██████▎   | 1580/2524 [10:50<06:28,  2.43it/s, loss=0.00132, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  63%|██████▎   | 1590/2524 [10:54<06:24,  2.43it/s, loss=0.00132, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  63%|██████▎   | 1590/2524 [10:54<06:24,  2.43it/s, loss=0.00424, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  63%|██████▎   | 1600/2524 [10:58<06:20,  2.43it/s, loss=0.00424, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  63%|██████▎   | 1600/2524 [10:58<06:20,  2.43it/s, loss=0.00449, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  64%|██████▍   | 1610/2524 [11:02<06:16,  2.43it/s, loss=0.00449, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  64%|██████▍   | 1610/2524 [11:02<06:16,  2.43it/s, loss=0.00128, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  64%|██████▍   | 1620/2524 [11:06<06:11,  2.43it/s, loss=0.00128, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  64%|██████▍   | 1620/2524 [11:06<06:11,  2.43it/s, loss=0.00182, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  65%|██████▍   | 1630/2524 [11:10<06:07,  2.43it/s, loss=0.00182, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  65%|██████▍   | 1630/2524 [11:10<06:07,  2.43it/s, loss=0.00132, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  65%|██████▍   | 1640/2524 [11:14<06:03,  2.43it/s, loss=0.00132, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  65%|██████▍   | 1640/2524 [11:14<06:03,  2.43it/s, loss=0.000631, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  65%|██████▌   | 1650/2524 [11:18<05:59,  2.43it/s, loss=0.000631, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  65%|██████▌   | 1650/2524 [11:19<05:59,  2.43it/s, loss=0.00065, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  66%|██████▌   | 1660/2524 [11:23<05:55,  2.43it/s, loss=0.00065, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  66%|██████▌   | 1660/2524 [11:23<05:55,  2.43it/s, loss=0.000681, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  66%|██████▌   | 1670/2524 [11:27<05:51,  2.43it/s, loss=0.000681, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  66%|██████▌   | 1670/2524 [11:27<05:51,  2.43it/s, loss=0.000803, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  67%|██████▋   | 1680/2524 [11:31<05:47,  2.43it/s, loss=0.000803, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  67%|██████▋   | 1680/2524 [11:31<05:47,  2.43it/s, loss=0.00104, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  67%|██████▋   | 1690/2524 [11:35<05:43,  2.43it/s, loss=0.00104, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  67%|██████▋   | 1690/2524 [11:35<05:43,  2.43it/s, loss=0.00115, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  67%|██████▋   | 1700/2524 [11:39<05:39,  2.43it/s, loss=0.00115, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  67%|██████▋   | 1700/2524 [11:39<05:39,  2.43it/s, loss=0.00126, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  68%|██████▊   | 1710/2524 [11:43<05:34,  2.43it/s, loss=0.00126, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  68%|██████▊   | 1710/2524 [11:43<05:34,  2.43it/s, loss=0.00171, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  68%|██████▊   | 1720/2524 [11:47<05:30,  2.43it/s, loss=0.00171, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  68%|██████▊   | 1720/2524 [11:47<05:30,  2.43it/s, loss=0.00178, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  69%|██████▊   | 1730/2524 [11:51<05:26,  2.43it/s, loss=0.00178, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  69%|██████▊   | 1730/2524 [11:51<05:26,  2.43it/s, loss=0.00132, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  69%|██████▉   | 1740/2524 [11:55<05:22,  2.43it/s, loss=0.00132, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  69%|██████▉   | 1740/2524 [11:55<05:22,  2.43it/s, loss=0.00106, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  69%|██████▉   | 1750/2524 [12:00<05:18,  2.43it/s, loss=0.00106, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  69%|██████▉   | 1750/2524 [12:00<05:18,  2.43it/s, loss=0.000915, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  70%|██████▉   | 1760/2524 [12:04<05:14,  2.43it/s, loss=0.000915, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  70%|██████▉   | 1760/2524 [12:04<05:14,  2.43it/s, loss=0.000648, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  70%|███████   | 1770/2524 [12:08<05:10,  2.43it/s, loss=0.000648, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  70%|███████   | 1770/2524 [12:08<05:10,  2.43it/s, loss=0.000897, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  71%|███████   | 1780/2524 [12:12<05:06,  2.43it/s, loss=0.000897, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  71%|███████   | 1780/2524 [12:12<05:06,  2.43it/s, loss=0.000886, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  71%|███████   | 1790/2524 [12:16<05:02,  2.43it/s, loss=0.000886, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  71%|███████   | 1790/2524 [12:16<05:02,  2.43it/s, loss=0.000742, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  71%|███████▏  | 1800/2524 [12:20<04:57,  2.43it/s, loss=0.000742, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  71%|███████▏  | 1800/2524 [12:20<04:57,  2.43it/s, loss=0.000756, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  72%|███████▏  | 1810/2524 [12:24<04:53,  2.43it/s, loss=0.000756, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  72%|███████▏  | 1810/2524 [12:24<04:53,  2.43it/s, loss=0.0013, v_num=3, val_loss=0.306, val_f1=63.60]  Epoch 15:  72%|███████▏  | 1820/2524 [12:28<04:49,  2.43it/s, loss=0.0013, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  72%|███████▏  | 1820/2524 [12:28<04:49,  2.43it/s, loss=0.0011, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  73%|███████▎  | 1830/2524 [12:32<04:45,  2.43it/s, loss=0.0011, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  73%|███████▎  | 1830/2524 [12:32<04:45,  2.43it/s, loss=0.00113, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  73%|███████▎  | 1840/2524 [12:37<04:41,  2.43it/s, loss=0.00113, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  73%|███████▎  | 1840/2524 [12:37<04:41,  2.43it/s, loss=0.0022, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  73%|███████▎  | 1850/2524 [12:41<04:37,  2.43it/s, loss=0.0022, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  73%|███████▎  | 1850/2524 [12:41<04:37,  2.43it/s, loss=0.00205, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  74%|███████▎  | 1860/2524 [12:45<04:33,  2.43it/s, loss=0.00205, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  74%|███████▎  | 1860/2524 [12:45<04:33,  2.43it/s, loss=0.000952, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  74%|███████▍  | 1870/2524 [12:49<04:29,  2.43it/s, loss=0.000952, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  74%|███████▍  | 1870/2524 [12:49<04:29,  2.43it/s, loss=0.000483, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  74%|███████▍  | 1880/2524 [12:53<04:24,  2.43it/s, loss=0.000483, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  74%|███████▍  | 1880/2524 [12:53<04:24,  2.43it/s, loss=0.000723, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  75%|███████▍  | 1890/2524 [12:57<04:20,  2.43it/s, loss=0.000723, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  75%|███████▍  | 1890/2524 [12:57<04:20,  2.43it/s, loss=0.00101, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  75%|███████▌  | 1900/2524 [13:01<04:16,  2.43it/s, loss=0.00101, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  75%|███████▌  | 1900/2524 [13:01<04:16,  2.43it/s, loss=0.00161, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  76%|███████▌  | 1910/2524 [13:05<04:12,  2.43it/s, loss=0.00161, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  76%|███████▌  | 1910/2524 [13:05<04:12,  2.43it/s, loss=0.00154, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  76%|███████▌  | 1920/2524 [13:10<04:08,  2.43it/s, loss=0.00154, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  76%|███████▌  | 1920/2524 [13:10<04:08,  2.43it/s, loss=0.000935, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  76%|███████▋  | 1930/2524 [13:14<04:04,  2.43it/s, loss=0.000935, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  76%|███████▋  | 1930/2524 [13:14<04:04,  2.43it/s, loss=0.00144, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  77%|███████▋  | 1940/2524 [13:18<04:00,  2.43it/s, loss=0.00144, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  77%|███████▋  | 1940/2524 [13:18<04:00,  2.43it/s, loss=0.00127, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  77%|███████▋  | 1950/2524 [13:22<03:56,  2.43it/s, loss=0.00127, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  77%|███████▋  | 1950/2524 [13:22<03:56,  2.43it/s, loss=0.000395, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  78%|███████▊  | 1960/2524 [13:26<03:52,  2.43it/s, loss=0.000395, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  78%|███████▊  | 1960/2524 [13:26<03:52,  2.43it/s, loss=0.000412, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  78%|███████▊  | 1970/2524 [13:30<03:47,  2.43it/s, loss=0.000412, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  78%|███████▊  | 1970/2524 [13:30<03:47,  2.43it/s, loss=0.000681, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  78%|███████▊  | 1980/2524 [13:34<03:43,  2.43it/s, loss=0.000681, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  78%|███████▊  | 1980/2524 [13:34<03:43,  2.43it/s, loss=0.000697, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  79%|███████▉  | 1990/2524 [13:38<03:39,  2.43it/s, loss=0.000697, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  79%|███████▉  | 1990/2524 [13:38<03:39,  2.43it/s, loss=0.000497, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  79%|███████▉  | 2000/2524 [13:42<03:35,  2.43it/s, loss=0.000497, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  79%|███████▉  | 2000/2524 [13:42<03:35,  2.43it/s, loss=0.000944, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  80%|███████▉  | 2010/2524 [13:47<03:31,  2.43it/s, loss=0.000944, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  80%|███████▉  | 2010/2524 [13:47<03:31,  2.43it/s, loss=0.00158, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  80%|████████  | 2020/2524 [13:51<03:27,  2.43it/s, loss=0.00158, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  80%|████████  | 2020/2524 [13:51<03:27,  2.43it/s, loss=0.00277, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  80%|████████  | 2030/2524 [13:55<03:23,  2.43it/s, loss=0.00277, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  80%|████████  | 2030/2524 [13:55<03:23,  2.43it/s, loss=0.00227, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  81%|████████  | 2040/2524 [13:59<03:19,  2.43it/s, loss=0.00227, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  81%|████████  | 2040/2524 [13:59<03:19,  2.43it/s, loss=0.0012, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  81%|████████  | 2050/2524 [14:03<03:15,  2.43it/s, loss=0.0012, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  81%|████████  | 2050/2524 [14:03<03:15,  2.43it/s, loss=0.00155, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  82%|████████▏ | 2060/2524 [14:07<03:10,  2.43it/s, loss=0.00155, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  82%|████████▏ | 2060/2524 [14:07<03:10,  2.43it/s, loss=0.00104, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  82%|████████▏ | 2070/2524 [14:11<03:06,  2.43it/s, loss=0.00104, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  82%|████████▏ | 2070/2524 [14:11<03:06,  2.43it/s, loss=0.000832, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  82%|████████▏ | 2080/2524 [14:15<03:02,  2.43it/s, loss=0.000832, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  82%|████████▏ | 2080/2524 [14:15<03:02,  2.43it/s, loss=0.00129, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  83%|████████▎ | 2090/2524 [14:19<02:58,  2.43it/s, loss=0.00129, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  83%|████████▎ | 2090/2524 [14:19<02:58,  2.43it/s, loss=0.00142, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  83%|████████▎ | 2100/2524 [14:24<02:54,  2.43it/s, loss=0.00142, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  83%|████████▎ | 2100/2524 [14:24<02:54,  2.43it/s, loss=0.00116, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  84%|████████▎ | 2110/2524 [14:28<02:50,  2.43it/s, loss=0.00116, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  84%|████████▎ | 2110/2524 [14:28<02:50,  2.43it/s, loss=0.00067, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  84%|████████▍ | 2120/2524 [14:32<02:46,  2.43it/s, loss=0.00067, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  84%|████████▍ | 2120/2524 [14:32<02:46,  2.43it/s, loss=0.000723, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  84%|████████▍ | 2130/2524 [14:36<02:42,  2.43it/s, loss=0.000723, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  84%|████████▍ | 2130/2524 [14:36<02:42,  2.43it/s, loss=0.00101, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  85%|████████▍ | 2140/2524 [14:40<02:38,  2.43it/s, loss=0.00101, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  85%|████████▍ | 2140/2524 [14:40<02:38,  2.43it/s, loss=0.00193, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  85%|████████▌ | 2150/2524 [14:44<02:33,  2.43it/s, loss=0.00193, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  85%|████████▌ | 2150/2524 [14:44<02:33,  2.43it/s, loss=0.00271, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  86%|████████▌ | 2160/2524 [14:48<02:29,  2.43it/s, loss=0.00271, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  86%|████████▌ | 2160/2524 [14:48<02:29,  2.43it/s, loss=0.00179, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  86%|████████▌ | 2170/2524 [14:53<02:25,  2.43it/s, loss=0.00179, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  86%|████████▌ | 2170/2524 [14:53<02:25,  2.43it/s, loss=0.00064, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  86%|████████▋ | 2180/2524 [14:57<02:21,  2.43it/s, loss=0.00064, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  86%|████████▋ | 2180/2524 [14:57<02:21,  2.43it/s, loss=0.000356, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  87%|████████▋ | 2190/2524 [15:01<02:17,  2.43it/s, loss=0.000356, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  87%|████████▋ | 2190/2524 [15:01<02:17,  2.43it/s, loss=0.00161, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  87%|████████▋ | 2200/2524 [15:05<02:13,  2.43it/s, loss=0.00161, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  87%|████████▋ | 2200/2524 [15:05<02:13,  2.43it/s, loss=0.00228, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  88%|████████▊ | 2210/2524 [15:09<02:09,  2.43it/s, loss=0.00228, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  88%|████████▊ | 2210/2524 [15:09<02:09,  2.43it/s, loss=0.00118, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  88%|████████▊ | 2220/2524 [15:13<02:05,  2.43it/s, loss=0.00118, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  88%|████████▊ | 2220/2524 [15:13<02:05,  2.43it/s, loss=0.000535, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  88%|████████▊ | 2230/2524 [15:17<02:00,  2.43it/s, loss=0.000535, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  88%|████████▊ | 2230/2524 [15:17<02:00,  2.43it/s, loss=0.000606, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  89%|████████▊ | 2240/2524 [15:22<01:56,  2.43it/s, loss=0.000606, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  89%|████████▊ | 2240/2524 [15:22<01:56,  2.43it/s, loss=0.0011, v_num=3, val_loss=0.306, val_f1=63.60]  Epoch 15:  89%|████████▉ | 2250/2524 [15:26<01:52,  2.43it/s, loss=0.0011, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  89%|████████▉ | 2250/2524 [15:26<01:52,  2.43it/s, loss=0.0012, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  90%|████████▉ | 2260/2524 [15:30<01:48,  2.43it/s, loss=0.0012, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  90%|████████▉ | 2260/2524 [15:30<01:48,  2.43it/s, loss=0.000698, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  90%|████████▉ | 2270/2524 [15:34<01:44,  2.43it/s, loss=0.000698, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  90%|████████▉ | 2270/2524 [15:34<01:44,  2.43it/s, loss=0.00061, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  90%|█████████ | 2280/2524 [15:39<01:40,  2.43it/s, loss=0.00061, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  90%|█████████ | 2280/2524 [15:39<01:40,  2.43it/s, loss=0.000772, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  91%|█████████ | 2290/2524 [15:43<01:36,  2.43it/s, loss=0.000772, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  91%|█████████ | 2290/2524 [15:43<01:36,  2.43it/s, loss=0.000796, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  91%|█████████ | 2300/2524 [15:47<01:32,  2.43it/s, loss=0.000796, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  91%|█████████ | 2300/2524 [15:47<01:32,  2.43it/s, loss=0.00052, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  92%|█████████▏| 2310/2524 [15:51<01:28,  2.43it/s, loss=0.00052, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  92%|█████████▏| 2310/2524 [15:51<01:28,  2.43it/s, loss=0.000356, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  92%|█████████▏| 2320/2524 [15:55<01:24,  2.43it/s, loss=0.000356, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  92%|█████████▏| 2320/2524 [15:55<01:24,  2.43it/s, loss=0.000579, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  92%|█████████▏| 2330/2524 [15:59<01:19,  2.43it/s, loss=0.000579, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  92%|█████████▏| 2330/2524 [15:59<01:19,  2.43it/s, loss=0.00108, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  93%|█████████▎| 2340/2524 [16:03<01:15,  2.43it/s, loss=0.00108, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  93%|█████████▎| 2340/2524 [16:03<01:15,  2.43it/s, loss=0.000969, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  93%|█████████▎| 2350/2524 [16:07<01:11,  2.43it/s, loss=0.000969, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  93%|█████████▎| 2350/2524 [16:08<01:11,  2.43it/s, loss=0.000757, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  94%|█████████▎| 2360/2524 [16:12<01:07,  2.43it/s, loss=0.000757, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  94%|█████████▎| 2360/2524 [16:12<01:07,  2.43it/s, loss=0.00144, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  94%|█████████▍| 2370/2524 [16:16<01:03,  2.43it/s, loss=0.00144, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  94%|█████████▍| 2370/2524 [16:16<01:03,  2.43it/s, loss=0.0012, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  94%|█████████▍| 2380/2524 [16:20<00:59,  2.43it/s, loss=0.0012, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  94%|█████████▍| 2380/2524 [16:20<00:59,  2.43it/s, loss=0.00098, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  95%|█████████▍| 2390/2524 [16:24<00:55,  2.43it/s, loss=0.00098, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  95%|█████████▍| 2390/2524 [16:24<00:55,  2.43it/s, loss=0.00163, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  95%|█████████▌| 2400/2524 [16:28<00:51,  2.43it/s, loss=0.00163, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  95%|█████████▌| 2400/2524 [16:28<00:51,  2.43it/s, loss=0.00122, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  95%|█████████▌| 2410/2524 [16:32<00:46,  2.43it/s, loss=0.00122, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  95%|█████████▌| 2410/2524 [16:32<00:46,  2.43it/s, loss=0.00101, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  96%|█████████▌| 2420/2524 [16:36<00:42,  2.43it/s, loss=0.00101, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  96%|█████████▌| 2420/2524 [16:36<00:42,  2.43it/s, loss=0.00292, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  96%|█████████▋| 2430/2524 [16:40<00:38,  2.43it/s, loss=0.00292, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  96%|█████████▋| 2430/2524 [16:40<00:38,  2.43it/s, loss=0.00279, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  97%|█████████▋| 2440/2524 [16:45<00:34,  2.43it/s, loss=0.00279, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  97%|█████████▋| 2440/2524 [16:45<00:34,  2.43it/s, loss=0.0023, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  97%|█████████▋| 2450/2524 [16:49<00:30,  2.43it/s, loss=0.0023, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  97%|█████████▋| 2450/2524 [16:49<00:30,  2.43it/s, loss=0.00221, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  97%|█████████▋| 2460/2524 [16:53<00:26,  2.43it/s, loss=0.00221, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  97%|█████████▋| 2460/2524 [16:53<00:26,  2.43it/s, loss=0.0013, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15:  98%|█████████▊| 2470/2524 [16:57<00:22,  2.43it/s, loss=0.0013, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  98%|█████████▊| 2470/2524 [16:57<00:22,  2.43it/s, loss=0.0012, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  98%|█████████▊| 2480/2524 [17:01<00:18,  2.43it/s, loss=0.0012, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  98%|█████████▊| 2480/2524 [17:01<00:18,  2.43it/s, loss=0.00212, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  99%|█████████▊| 2490/2524 [17:05<00:14,  2.43it/s, loss=0.00212, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  99%|█████████▊| 2490/2524 [17:05<00:14,  2.43it/s, loss=0.00209, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  99%|█████████▉| 2500/2524 [17:09<00:09,  2.43it/s, loss=0.00209, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  99%|█████████▉| 2500/2524 [17:09<00:09,  2.43it/s, loss=0.00125, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  99%|█████████▉| 2510/2524 [17:13<00:05,  2.43it/s, loss=0.00125, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:  99%|█████████▉| 2510/2524 [17:13<00:05,  2.43it/s, loss=0.00114, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15: 100%|█████████▉| 2520/2524 [17:17<00:01,  2.43it/s, loss=0.00114, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15: 100%|█████████▉| 2520/2524 [17:17<00:01,  2.43it/s, loss=0.000838, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15: 100%|██████████| 2524/2524 [17:19<00:00,  2.43it/s, loss=0.000838, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15: 100%|██████████| 2524/2524 [17:19<00:00,  2.43it/s, loss=0.00095, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 15: 100%|██████████| 2524/2524 [17:19<00:00,  2.43it/s, loss=0.00095, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 15:   0%|          | 0/2524 [00:00<?, ?it/s, loss=0.00095, v_num=3, val_loss=0.306, val_f1=63.60]           Epoch 16:   0%|          | 0/2524 [00:00<?, ?it/s, loss=0.00095, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   0%|          | 10/2524 [00:04<18:52,  2.22it/s, loss=0.00095, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   0%|          | 10/2524 [00:04<18:55,  2.21it/s, loss=0.00109, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   1%|          | 20/2524 [00:08<18:16,  2.28it/s, loss=0.00109, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   1%|          | 20/2524 [00:08<18:17,  2.28it/s, loss=0.00106, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   1%|          | 30/2524 [00:12<17:48,  2.33it/s, loss=0.00106, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   1%|          | 30/2524 [00:12<17:49,  2.33it/s, loss=0.000828, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   2%|▏         | 40/2524 [00:16<17:31,  2.36it/s, loss=0.000828, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   2%|▏         | 40/2524 [00:16<17:32,  2.36it/s, loss=0.000939, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   2%|▏         | 50/2524 [00:21<17:20,  2.38it/s, loss=0.000939, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   2%|▏         | 50/2524 [00:21<17:21,  2.38it/s, loss=0.000807, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   2%|▏         | 60/2524 [00:25<17:12,  2.39it/s, loss=0.000807, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   2%|▏         | 60/2524 [00:25<17:12,  2.39it/s, loss=0.000771, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   3%|▎         | 70/2524 [00:29<17:06,  2.39it/s, loss=0.000771, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   3%|▎         | 70/2524 [00:29<17:06,  2.39it/s, loss=0.00101, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:   3%|▎         | 80/2524 [00:33<16:59,  2.40it/s, loss=0.00101, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   3%|▎         | 80/2524 [00:33<16:59,  2.40it/s, loss=0.000855, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   4%|▎         | 90/2524 [00:37<16:53,  2.40it/s, loss=0.000855, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   4%|▎         | 90/2524 [00:37<16:53,  2.40it/s, loss=0.00061, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:   4%|▍         | 100/2524 [00:41<16:47,  2.41it/s, loss=0.00061, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   4%|▍         | 100/2524 [00:41<16:47,  2.41it/s, loss=0.000512, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   4%|▍         | 110/2524 [00:45<16:41,  2.41it/s, loss=0.000512, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   4%|▍         | 110/2524 [00:45<16:41,  2.41it/s, loss=0.000563, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   5%|▍         | 120/2524 [00:49<16:39,  2.41it/s, loss=0.000563, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   5%|▍         | 120/2524 [00:49<16:39,  2.40it/s, loss=0.00116, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:   5%|▌         | 130/2524 [00:53<16:34,  2.41it/s, loss=0.00116, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   5%|▌         | 130/2524 [00:53<16:34,  2.41it/s, loss=0.0012, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:   6%|▌         | 140/2524 [00:58<16:28,  2.41it/s, loss=0.0012, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   6%|▌         | 140/2524 [00:58<16:29,  2.41it/s, loss=0.000449, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   6%|▌         | 150/2524 [01:02<16:23,  2.41it/s, loss=0.000449, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   6%|▌         | 150/2524 [01:02<16:24,  2.41it/s, loss=0.000388, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   6%|▋         | 160/2524 [01:06<16:18,  2.41it/s, loss=0.000388, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   6%|▋         | 160/2524 [01:06<16:19,  2.41it/s, loss=0.00117, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:   7%|▋         | 170/2524 [01:10<16:14,  2.41it/s, loss=0.00117, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   7%|▋         | 170/2524 [01:10<16:15,  2.41it/s, loss=0.00222, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   7%|▋         | 180/2524 [01:14<16:10,  2.42it/s, loss=0.00222, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   7%|▋         | 180/2524 [01:14<16:10,  2.42it/s, loss=0.00165, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   8%|▊         | 190/2524 [01:18<16:05,  2.42it/s, loss=0.00165, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   8%|▊         | 190/2524 [01:18<16:05,  2.42it/s, loss=0.000765, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   8%|▊         | 200/2524 [01:22<16:00,  2.42it/s, loss=0.000765, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   8%|▊         | 200/2524 [01:22<16:00,  2.42it/s, loss=0.000685, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   8%|▊         | 210/2524 [01:26<15:56,  2.42it/s, loss=0.000685, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   8%|▊         | 210/2524 [01:26<15:56,  2.42it/s, loss=0.000744, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   9%|▊         | 220/2524 [01:31<15:53,  2.42it/s, loss=0.000744, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   9%|▊         | 220/2524 [01:31<15:53,  2.42it/s, loss=0.000658, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   9%|▉         | 230/2524 [01:35<15:48,  2.42it/s, loss=0.000658, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   9%|▉         | 230/2524 [01:35<15:48,  2.42it/s, loss=0.000921, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  10%|▉         | 240/2524 [01:39<15:44,  2.42it/s, loss=0.000921, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  10%|▉         | 240/2524 [01:39<15:44,  2.42it/s, loss=0.00106, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  10%|▉         | 250/2524 [01:43<15:39,  2.42it/s, loss=0.00106, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  10%|▉         | 250/2524 [01:43<15:39,  2.42it/s, loss=0.000613, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  10%|█         | 260/2524 [01:47<15:35,  2.42it/s, loss=0.000613, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  10%|█         | 260/2524 [01:47<15:35,  2.42it/s, loss=0.00125, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  11%|█         | 270/2524 [01:51<15:31,  2.42it/s, loss=0.00125, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  11%|█         | 270/2524 [01:51<15:31,  2.42it/s, loss=0.00126, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  11%|█         | 280/2524 [01:55<15:26,  2.42it/s, loss=0.00126, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  11%|█         | 280/2524 [01:55<15:26,  2.42it/s, loss=0.000665, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  11%|█▏        | 290/2524 [01:59<15:22,  2.42it/s, loss=0.000665, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  11%|█▏        | 290/2524 [01:59<15:22,  2.42it/s, loss=0.00105, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  12%|█▏        | 300/2524 [02:03<15:17,  2.42it/s, loss=0.00105, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  12%|█▏        | 300/2524 [02:03<15:18,  2.42it/s, loss=0.00177, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  12%|█▏        | 310/2524 [02:07<15:13,  2.42it/s, loss=0.00177, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  12%|█▏        | 310/2524 [02:07<15:13,  2.42it/s, loss=0.00163, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  13%|█▎        | 320/2524 [02:12<15:10,  2.42it/s, loss=0.00163, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  13%|█▎        | 320/2524 [02:12<15:10,  2.42it/s, loss=0.000654, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  13%|█▎        | 330/2524 [02:16<15:06,  2.42it/s, loss=0.000654, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  13%|█▎        | 330/2524 [02:16<15:06,  2.42it/s, loss=0.000387, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  13%|█▎        | 340/2524 [02:20<15:01,  2.42it/s, loss=0.000387, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  13%|█▎        | 340/2524 [02:20<15:01,  2.42it/s, loss=0.000642, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  14%|█▍        | 350/2524 [02:24<14:57,  2.42it/s, loss=0.000642, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  14%|█▍        | 350/2524 [02:24<14:57,  2.42it/s, loss=0.000897, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  14%|█▍        | 360/2524 [02:28<14:53,  2.42it/s, loss=0.000897, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  14%|█▍        | 360/2524 [02:28<14:53,  2.42it/s, loss=0.000619, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  15%|█▍        | 370/2524 [02:32<14:49,  2.42it/s, loss=0.000619, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  15%|█▍        | 370/2524 [02:32<14:49,  2.42it/s, loss=0.000355, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  15%|█▌        | 380/2524 [02:36<14:44,  2.42it/s, loss=0.000355, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  15%|█▌        | 380/2524 [02:36<14:44,  2.42it/s, loss=0.000941, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  15%|█▌        | 390/2524 [02:40<14:40,  2.42it/s, loss=0.000941, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  15%|█▌        | 390/2524 [02:40<14:40,  2.42it/s, loss=0.00109, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  16%|█▌        | 400/2524 [02:45<14:36,  2.42it/s, loss=0.00109, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  16%|█▌        | 400/2524 [02:45<14:36,  2.42it/s, loss=0.000819, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  16%|█▌        | 410/2524 [02:49<14:31,  2.42it/s, loss=0.000819, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  16%|█▌        | 410/2524 [02:49<14:31,  2.42it/s, loss=0.00115, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  17%|█▋        | 420/2524 [02:53<14:28,  2.42it/s, loss=0.00115, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  17%|█▋        | 420/2524 [02:53<14:28,  2.42it/s, loss=0.00116, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  17%|█▋        | 430/2524 [02:57<14:24,  2.42it/s, loss=0.00116, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  17%|█▋        | 430/2524 [02:57<14:24,  2.42it/s, loss=0.000605, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  17%|█▋        | 440/2524 [03:01<14:19,  2.42it/s, loss=0.000605, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  17%|█▋        | 440/2524 [03:01<14:19,  2.42it/s, loss=0.000672, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  18%|█▊        | 450/2524 [03:05<14:15,  2.42it/s, loss=0.000672, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  18%|█▊        | 450/2524 [03:05<14:15,  2.42it/s, loss=0.00116, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  18%|█▊        | 460/2524 [03:09<14:11,  2.42it/s, loss=0.00116, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  18%|█▊        | 460/2524 [03:09<14:11,  2.42it/s, loss=0.00104, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  19%|█▊        | 470/2524 [03:13<14:07,  2.42it/s, loss=0.00104, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  19%|█▊        | 470/2524 [03:13<14:07,  2.42it/s, loss=0.000896, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  19%|█▉        | 480/2524 [03:17<14:03,  2.42it/s, loss=0.000896, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  19%|█▉        | 480/2524 [03:17<14:03,  2.42it/s, loss=0.000964, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  19%|█▉        | 490/2524 [03:22<13:58,  2.42it/s, loss=0.000964, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  19%|█▉        | 490/2524 [03:22<13:58,  2.42it/s, loss=0.000811, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  20%|█▉        | 500/2524 [03:26<13:54,  2.43it/s, loss=0.000811, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  20%|█▉        | 500/2524 [03:26<13:54,  2.43it/s, loss=0.000619, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  20%|██        | 510/2524 [03:30<13:50,  2.43it/s, loss=0.000619, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  20%|██        | 510/2524 [03:30<13:50,  2.43it/s, loss=0.000534, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  21%|██        | 520/2524 [03:34<13:46,  2.42it/s, loss=0.000534, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  21%|██        | 520/2524 [03:34<13:46,  2.42it/s, loss=0.00076, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  21%|██        | 530/2524 [03:38<13:42,  2.42it/s, loss=0.00076, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  21%|██        | 530/2524 [03:38<13:42,  2.42it/s, loss=0.00205, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  21%|██▏       | 540/2524 [03:42<13:38,  2.42it/s, loss=0.00205, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  21%|██▏       | 540/2524 [03:42<13:38,  2.42it/s, loss=0.0021, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  22%|██▏       | 550/2524 [03:46<13:33,  2.43it/s, loss=0.0021, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  22%|██▏       | 550/2524 [03:46<13:34,  2.43it/s, loss=0.000616, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  22%|██▏       | 560/2524 [03:50<13:29,  2.43it/s, loss=0.000616, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  22%|██▏       | 560/2524 [03:50<13:29,  2.43it/s, loss=0.000381, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  23%|██▎       | 570/2524 [03:55<13:25,  2.43it/s, loss=0.000381, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  23%|██▎       | 570/2524 [03:55<13:25,  2.43it/s, loss=0.000748, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  23%|██▎       | 580/2524 [03:59<13:21,  2.43it/s, loss=0.000748, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  23%|██▎       | 580/2524 [03:59<13:21,  2.43it/s, loss=0.000891, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  23%|██▎       | 590/2524 [04:03<13:17,  2.43it/s, loss=0.000891, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  23%|██▎       | 590/2524 [04:03<13:17,  2.43it/s, loss=0.000586, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  24%|██▍       | 600/2524 [04:07<13:13,  2.43it/s, loss=0.000586, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  24%|██▍       | 600/2524 [04:07<13:13,  2.43it/s, loss=0.00029, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  24%|██▍       | 610/2524 [04:11<13:08,  2.43it/s, loss=0.00029, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  24%|██▍       | 610/2524 [04:11<13:08,  2.43it/s, loss=0.000759, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  25%|██▍       | 620/2524 [04:15<13:05,  2.43it/s, loss=0.000759, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  25%|██▍       | 620/2524 [04:15<13:05,  2.43it/s, loss=0.00096, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  25%|██▍       | 630/2524 [04:19<13:00,  2.43it/s, loss=0.00096, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  25%|██▍       | 630/2524 [04:19<13:00,  2.43it/s, loss=0.000405, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  25%|██▌       | 640/2524 [04:23<12:56,  2.43it/s, loss=0.000405, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  25%|██▌       | 640/2524 [04:23<12:56,  2.43it/s, loss=0.000696, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  26%|██▌       | 650/2524 [04:27<12:52,  2.43it/s, loss=0.000696, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  26%|██▌       | 650/2524 [04:27<12:52,  2.43it/s, loss=0.000996, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  26%|██▌       | 660/2524 [04:31<12:48,  2.43it/s, loss=0.000996, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  26%|██▌       | 660/2524 [04:32<12:48,  2.43it/s, loss=0.000559, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  27%|██▋       | 670/2524 [04:36<12:44,  2.43it/s, loss=0.000559, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  27%|██▋       | 670/2524 [04:36<12:44,  2.43it/s, loss=0.00155, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  27%|██▋       | 680/2524 [04:40<12:39,  2.43it/s, loss=0.00155, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  27%|██▋       | 680/2524 [04:40<12:39,  2.43it/s, loss=0.00211, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  27%|██▋       | 690/2524 [04:44<12:35,  2.43it/s, loss=0.00211, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  27%|██▋       | 690/2524 [04:44<12:35,  2.43it/s, loss=0.000955, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  28%|██▊       | 700/2524 [04:48<12:31,  2.43it/s, loss=0.000955, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  28%|██▊       | 700/2524 [04:48<12:31,  2.43it/s, loss=0.000377, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  28%|██▊       | 710/2524 [04:52<12:27,  2.43it/s, loss=0.000377, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  28%|██▊       | 710/2524 [04:52<12:27,  2.43it/s, loss=0.000966, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  29%|██▊       | 720/2524 [04:56<12:23,  2.43it/s, loss=0.000966, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  29%|██▊       | 720/2524 [04:56<12:23,  2.43it/s, loss=0.00101, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  29%|██▉       | 730/2524 [05:00<12:19,  2.43it/s, loss=0.00101, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  29%|██▉       | 730/2524 [05:00<12:19,  2.43it/s, loss=0.000635, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  29%|██▉       | 740/2524 [05:04<12:15,  2.43it/s, loss=0.000635, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  29%|██▉       | 740/2524 [05:04<12:15,  2.43it/s, loss=0.000717, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  30%|██▉       | 750/2524 [05:09<12:10,  2.43it/s, loss=0.000717, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  30%|██▉       | 750/2524 [05:09<12:10,  2.43it/s, loss=0.000496, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  30%|███       | 760/2524 [05:13<12:06,  2.43it/s, loss=0.000496, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  30%|███       | 760/2524 [05:13<12:06,  2.43it/s, loss=0.000908, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  31%|███       | 770/2524 [05:17<12:02,  2.43it/s, loss=0.000908, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  31%|███       | 770/2524 [05:17<12:02,  2.43it/s, loss=0.00104, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  31%|███       | 780/2524 [05:21<11:58,  2.43it/s, loss=0.00104, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  31%|███       | 780/2524 [05:21<11:58,  2.43it/s, loss=0.00128, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  31%|███▏      | 790/2524 [05:25<11:54,  2.43it/s, loss=0.00128, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  31%|███▏      | 790/2524 [05:25<11:54,  2.43it/s, loss=0.00132, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  32%|███▏      | 800/2524 [05:29<11:50,  2.43it/s, loss=0.00132, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  32%|███▏      | 800/2524 [05:29<11:50,  2.43it/s, loss=0.001, v_num=3, val_loss=0.306, val_f1=63.60]  Epoch 16:  32%|███▏      | 810/2524 [05:33<11:45,  2.43it/s, loss=0.001, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  32%|███▏      | 810/2524 [05:33<11:45,  2.43it/s, loss=0.00131, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  32%|███▏      | 820/2524 [05:37<11:42,  2.43it/s, loss=0.00131, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  32%|███▏      | 820/2524 [05:37<11:42,  2.43it/s, loss=0.00145, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  33%|███▎      | 830/2524 [05:41<11:37,  2.43it/s, loss=0.00145, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  33%|███▎      | 830/2524 [05:41<11:37,  2.43it/s, loss=0.00114, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  33%|███▎      | 840/2524 [05:46<11:33,  2.43it/s, loss=0.00114, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  33%|███▎      | 840/2524 [05:46<11:33,  2.43it/s, loss=0.000751, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  34%|███▎      | 850/2524 [05:50<11:29,  2.43it/s, loss=0.000751, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  34%|███▎      | 850/2524 [05:50<11:29,  2.43it/s, loss=0.000941, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  34%|███▍      | 860/2524 [05:54<11:25,  2.43it/s, loss=0.000941, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  34%|███▍      | 860/2524 [05:54<11:25,  2.43it/s, loss=0.000771, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  34%|███▍      | 870/2524 [05:58<11:21,  2.43it/s, loss=0.000771, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  34%|███▍      | 870/2524 [05:58<11:21,  2.43it/s, loss=0.000705, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  35%|███▍      | 880/2524 [06:02<11:17,  2.43it/s, loss=0.000705, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  35%|███▍      | 880/2524 [06:02<11:17,  2.43it/s, loss=0.000698, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  35%|███▌      | 890/2524 [06:06<11:12,  2.43it/s, loss=0.000698, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  35%|███▌      | 890/2524 [06:06<11:13,  2.43it/s, loss=0.000965, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  36%|███▌      | 900/2524 [06:10<11:08,  2.43it/s, loss=0.000965, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  36%|███▌      | 900/2524 [06:10<11:08,  2.43it/s, loss=0.00124, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  36%|███▌      | 910/2524 [06:14<11:04,  2.43it/s, loss=0.00124, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  36%|███▌      | 910/2524 [06:14<11:04,  2.43it/s, loss=0.000947, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  36%|███▋      | 920/2524 [06:18<11:00,  2.43it/s, loss=0.000947, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  36%|███▋      | 920/2524 [06:19<11:00,  2.43it/s, loss=0.000843, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  37%|███▋      | 930/2524 [06:23<10:56,  2.43it/s, loss=0.000843, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  37%|███▋      | 930/2524 [06:23<10:56,  2.43it/s, loss=0.00114, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  37%|███▋      | 940/2524 [06:27<10:52,  2.43it/s, loss=0.00114, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  37%|███▋      | 940/2524 [06:27<10:52,  2.43it/s, loss=0.00144, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  38%|███▊      | 950/2524 [06:31<10:48,  2.43it/s, loss=0.00144, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  38%|███▊      | 950/2524 [06:31<10:48,  2.43it/s, loss=0.000895, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  38%|███▊      | 960/2524 [06:35<10:44,  2.43it/s, loss=0.000895, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  38%|███▊      | 960/2524 [06:35<10:44,  2.43it/s, loss=0.000588, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  38%|███▊      | 970/2524 [06:39<10:40,  2.43it/s, loss=0.000588, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  38%|███▊      | 970/2524 [06:39<10:40,  2.43it/s, loss=0.000573, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  39%|███▉      | 980/2524 [06:43<10:35,  2.43it/s, loss=0.000573, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  39%|███▉      | 980/2524 [06:43<10:35,  2.43it/s, loss=0.000404, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  39%|███▉      | 990/2524 [06:47<10:31,  2.43it/s, loss=0.000404, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  39%|███▉      | 990/2524 [06:47<10:31,  2.43it/s, loss=0.000267, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  40%|███▉      | 1000/2524 [06:51<10:27,  2.43it/s, loss=0.000267, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  40%|███▉      | 1000/2524 [06:51<10:27,  2.43it/s, loss=0.000282, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  40%|████      | 1010/2524 [06:55<10:23,  2.43it/s, loss=0.000282, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  40%|████      | 1010/2524 [06:55<10:23,  2.43it/s, loss=0.000968, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  40%|████      | 1020/2524 [07:00<10:19,  2.43it/s, loss=0.000968, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  40%|████      | 1020/2524 [07:00<10:19,  2.43it/s, loss=0.001, v_num=3, val_loss=0.306, val_f1=63.60]   Epoch 16:  41%|████      | 1030/2524 [07:04<10:15,  2.43it/s, loss=0.001, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  41%|████      | 1030/2524 [07:04<10:15,  2.43it/s, loss=0.00108, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  41%|████      | 1040/2524 [07:08<10:11,  2.43it/s, loss=0.00108, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  41%|████      | 1040/2524 [07:08<10:11,  2.43it/s, loss=0.0018, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  42%|████▏     | 1050/2524 [07:12<10:07,  2.43it/s, loss=0.0018, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  42%|████▏     | 1050/2524 [07:12<10:07,  2.43it/s, loss=0.00215, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  42%|████▏     | 1060/2524 [07:16<10:02,  2.43it/s, loss=0.00215, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  42%|████▏     | 1060/2524 [07:16<10:02,  2.43it/s, loss=0.00162, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  42%|████▏     | 1070/2524 [07:20<09:58,  2.43it/s, loss=0.00162, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  42%|████▏     | 1070/2524 [07:20<09:58,  2.43it/s, loss=0.0005, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  43%|████▎     | 1080/2524 [07:24<09:54,  2.43it/s, loss=0.0005, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  43%|████▎     | 1080/2524 [07:24<09:54,  2.43it/s, loss=0.000709, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  43%|████▎     | 1090/2524 [07:28<09:50,  2.43it/s, loss=0.000709, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  43%|████▎     | 1090/2524 [07:28<09:50,  2.43it/s, loss=0.000814, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  44%|████▎     | 1100/2524 [07:32<09:46,  2.43it/s, loss=0.000814, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  44%|████▎     | 1100/2524 [07:32<09:46,  2.43it/s, loss=0.00033, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  44%|████▍     | 1110/2524 [07:37<09:42,  2.43it/s, loss=0.00033, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  44%|████▍     | 1110/2524 [07:37<09:42,  2.43it/s, loss=0.000443, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  44%|████▍     | 1120/2524 [07:41<09:38,  2.43it/s, loss=0.000443, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  44%|████▍     | 1120/2524 [07:41<09:38,  2.43it/s, loss=0.000747, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  45%|████▍     | 1130/2524 [07:45<09:34,  2.43it/s, loss=0.000747, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  45%|████▍     | 1130/2524 [07:45<09:34,  2.43it/s, loss=0.00077, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  45%|████▌     | 1140/2524 [07:49<09:29,  2.43it/s, loss=0.00077, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  45%|████▌     | 1140/2524 [07:49<09:29,  2.43it/s, loss=0.000459, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  46%|████▌     | 1150/2524 [07:53<09:25,  2.43it/s, loss=0.000459, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  46%|████▌     | 1150/2524 [07:53<09:25,  2.43it/s, loss=0.001, v_num=3, val_loss=0.306, val_f1=63.60]   Epoch 16:  46%|████▌     | 1160/2524 [07:57<09:21,  2.43it/s, loss=0.001, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  46%|████▌     | 1160/2524 [07:57<09:21,  2.43it/s, loss=0.00139, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  46%|████▋     | 1170/2524 [08:01<09:17,  2.43it/s, loss=0.00139, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  46%|████▋     | 1170/2524 [08:01<09:17,  2.43it/s, loss=0.00103, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  47%|████▋     | 1180/2524 [08:05<09:13,  2.43it/s, loss=0.00103, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  47%|████▋     | 1180/2524 [08:05<09:13,  2.43it/s, loss=0.000954, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  47%|████▋     | 1190/2524 [08:10<09:09,  2.43it/s, loss=0.000954, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  47%|████▋     | 1190/2524 [08:10<09:09,  2.43it/s, loss=0.000517, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  48%|████▊     | 1200/2524 [08:14<09:05,  2.43it/s, loss=0.000517, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  48%|████▊     | 1200/2524 [08:14<09:05,  2.43it/s, loss=0.000836, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  48%|████▊     | 1210/2524 [08:18<09:01,  2.43it/s, loss=0.000836, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  48%|████▊     | 1210/2524 [08:18<09:01,  2.43it/s, loss=0.00131, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  48%|████▊     | 1220/2524 [08:22<08:57,  2.43it/s, loss=0.00131, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  48%|████▊     | 1220/2524 [08:22<08:57,  2.43it/s, loss=0.000969, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  49%|████▊     | 1230/2524 [08:26<08:52,  2.43it/s, loss=0.000969, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  49%|████▊     | 1230/2524 [08:26<08:52,  2.43it/s, loss=0.00147, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  49%|████▉     | 1240/2524 [08:30<08:48,  2.43it/s, loss=0.00147, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  49%|████▉     | 1240/2524 [08:30<08:48,  2.43it/s, loss=0.00153, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  50%|████▉     | 1250/2524 [08:34<08:44,  2.43it/s, loss=0.00153, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  50%|████▉     | 1250/2524 [08:34<08:44,  2.43it/s, loss=0.0013, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  50%|████▉     | 1260/2524 [08:38<08:40,  2.43it/s, loss=0.0013, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  50%|████▉     | 1260/2524 [08:38<08:40,  2.43it/s, loss=0.00134, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  50%|█████     | 1270/2524 [08:42<08:36,  2.43it/s, loss=0.00134, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  50%|█████     | 1270/2524 [08:42<08:36,  2.43it/s, loss=0.000825, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  51%|█████     | 1280/2524 [08:47<08:32,  2.43it/s, loss=0.000825, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  51%|█████     | 1280/2524 [08:47<08:32,  2.43it/s, loss=0.000633, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  51%|█████     | 1290/2524 [08:51<08:28,  2.43it/s, loss=0.000633, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  51%|█████     | 1290/2524 [08:51<08:28,  2.43it/s, loss=0.000571, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  52%|█████▏    | 1300/2524 [08:55<08:23,  2.43it/s, loss=0.000571, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  52%|█████▏    | 1300/2524 [08:55<08:23,  2.43it/s, loss=0.00061, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  52%|█████▏    | 1310/2524 [08:59<08:19,  2.43it/s, loss=0.00061, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  52%|█████▏    | 1310/2524 [08:59<08:19,  2.43it/s, loss=0.000867, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  52%|█████▏    | 1320/2524 [09:03<08:15,  2.43it/s, loss=0.000867, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  52%|█████▏    | 1320/2524 [09:03<08:15,  2.43it/s, loss=0.000719, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  53%|█████▎    | 1330/2524 [09:07<08:11,  2.43it/s, loss=0.000719, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  53%|█████▎    | 1330/2524 [09:07<08:11,  2.43it/s, loss=0.000373, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  53%|█████▎    | 1340/2524 [09:11<08:07,  2.43it/s, loss=0.000373, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  53%|█████▎    | 1340/2524 [09:11<08:07,  2.43it/s, loss=0.000537, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  53%|█████▎    | 1350/2524 [09:15<08:03,  2.43it/s, loss=0.000537, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  53%|█████▎    | 1350/2524 [09:15<08:03,  2.43it/s, loss=0.0011, v_num=3, val_loss=0.306, val_f1=63.60]  Epoch 16:  54%|█████▍    | 1360/2524 [09:19<07:59,  2.43it/s, loss=0.0011, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  54%|█████▍    | 1360/2524 [09:19<07:59,  2.43it/s, loss=0.000976, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  54%|█████▍    | 1370/2524 [09:24<07:55,  2.43it/s, loss=0.000976, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  54%|█████▍    | 1370/2524 [09:24<07:55,  2.43it/s, loss=0.000682, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  55%|█████▍    | 1380/2524 [09:28<07:51,  2.43it/s, loss=0.000682, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  55%|█████▍    | 1380/2524 [09:28<07:51,  2.43it/s, loss=0.000519, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  55%|█████▌    | 1390/2524 [09:32<07:46,  2.43it/s, loss=0.000519, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  55%|█████▌    | 1390/2524 [09:32<07:46,  2.43it/s, loss=0.000724, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  55%|█████▌    | 1400/2524 [09:36<07:42,  2.43it/s, loss=0.000724, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  55%|█████▌    | 1400/2524 [09:36<07:42,  2.43it/s, loss=0.000673, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  56%|█████▌    | 1410/2524 [09:40<07:38,  2.43it/s, loss=0.000673, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  56%|█████▌    | 1410/2524 [09:40<07:38,  2.43it/s, loss=0.000225, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  56%|█████▋    | 1420/2524 [09:44<07:34,  2.43it/s, loss=0.000225, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  56%|█████▋    | 1420/2524 [09:44<07:34,  2.43it/s, loss=0.000259, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  57%|█████▋    | 1430/2524 [09:48<07:30,  2.43it/s, loss=0.000259, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  57%|█████▋    | 1430/2524 [09:48<07:30,  2.43it/s, loss=0.000163, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  57%|█████▋    | 1440/2524 [09:52<07:26,  2.43it/s, loss=0.000163, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  57%|█████▋    | 1440/2524 [09:52<07:26,  2.43it/s, loss=0.00212, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  57%|█████▋    | 1450/2524 [09:56<07:22,  2.43it/s, loss=0.00212, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  57%|█████▋    | 1450/2524 [09:57<07:22,  2.43it/s, loss=0.00288, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  58%|█████▊    | 1460/2524 [10:01<07:18,  2.43it/s, loss=0.00288, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  58%|█████▊    | 1460/2524 [10:01<07:18,  2.43it/s, loss=0.00137, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  58%|█████▊    | 1470/2524 [10:05<07:13,  2.43it/s, loss=0.00137, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  58%|█████▊    | 1470/2524 [10:05<07:13,  2.43it/s, loss=0.00106, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  59%|█████▊    | 1480/2524 [10:09<07:09,  2.43it/s, loss=0.00106, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  59%|█████▊    | 1480/2524 [10:09<07:09,  2.43it/s, loss=0.000766, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  59%|█████▉    | 1490/2524 [10:13<07:05,  2.43it/s, loss=0.000766, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  59%|█████▉    | 1490/2524 [10:13<07:05,  2.43it/s, loss=0.000842, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  59%|█████▉    | 1500/2524 [10:17<07:01,  2.43it/s, loss=0.000842, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  59%|█████▉    | 1500/2524 [10:17<07:01,  2.43it/s, loss=0.00219, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  60%|█████▉    | 1510/2524 [10:21<06:57,  2.43it/s, loss=0.00219, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  60%|█████▉    | 1510/2524 [10:21<06:57,  2.43it/s, loss=0.00238, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  60%|██████    | 1520/2524 [10:25<06:53,  2.43it/s, loss=0.00238, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  60%|██████    | 1520/2524 [10:25<06:53,  2.43it/s, loss=0.00154, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  61%|██████    | 1530/2524 [10:29<06:49,  2.43it/s, loss=0.00154, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  61%|██████    | 1530/2524 [10:29<06:49,  2.43it/s, loss=0.00168, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  61%|██████    | 1540/2524 [10:34<06:45,  2.43it/s, loss=0.00168, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  61%|██████    | 1540/2524 [10:34<06:45,  2.43it/s, loss=0.00115, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  61%|██████▏   | 1550/2524 [10:38<06:40,  2.43it/s, loss=0.00115, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  61%|██████▏   | 1550/2524 [10:38<06:40,  2.43it/s, loss=0.0012, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  62%|██████▏   | 1560/2524 [10:42<06:36,  2.43it/s, loss=0.0012, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  62%|██████▏   | 1560/2524 [10:42<06:36,  2.43it/s, loss=0.00117, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  62%|██████▏   | 1570/2524 [10:46<06:32,  2.43it/s, loss=0.00117, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  62%|██████▏   | 1570/2524 [10:46<06:32,  2.43it/s, loss=0.00027, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  63%|██████▎   | 1580/2524 [10:50<06:28,  2.43it/s, loss=0.00027, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  63%|██████▎   | 1580/2524 [10:50<06:28,  2.43it/s, loss=0.000182, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  63%|██████▎   | 1590/2524 [10:54<06:24,  2.43it/s, loss=0.000182, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  63%|██████▎   | 1590/2524 [10:54<06:24,  2.43it/s, loss=0.00154, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  63%|██████▎   | 1600/2524 [10:58<06:20,  2.43it/s, loss=0.00154, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  63%|██████▎   | 1600/2524 [10:58<06:20,  2.43it/s, loss=0.00201, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  64%|██████▍   | 1610/2524 [11:02<06:16,  2.43it/s, loss=0.00201, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  64%|██████▍   | 1610/2524 [11:02<06:16,  2.43it/s, loss=0.000644, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  64%|██████▍   | 1620/2524 [11:06<06:12,  2.43it/s, loss=0.000644, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  64%|██████▍   | 1620/2524 [11:06<06:12,  2.43it/s, loss=0.000946, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  65%|██████▍   | 1630/2524 [11:11<06:08,  2.43it/s, loss=0.000946, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  65%|██████▍   | 1630/2524 [11:11<06:08,  2.43it/s, loss=0.00203, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  65%|██████▍   | 1640/2524 [11:15<06:03,  2.43it/s, loss=0.00203, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  65%|██████▍   | 1640/2524 [11:15<06:03,  2.43it/s, loss=0.00143, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  65%|██████▌   | 1650/2524 [11:19<05:59,  2.43it/s, loss=0.00143, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  65%|██████▌   | 1650/2524 [11:19<05:59,  2.43it/s, loss=0.000771, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  66%|██████▌   | 1660/2524 [11:23<05:55,  2.43it/s, loss=0.000771, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  66%|██████▌   | 1660/2524 [11:23<05:55,  2.43it/s, loss=0.000721, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  66%|██████▌   | 1670/2524 [11:27<05:51,  2.43it/s, loss=0.000721, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  66%|██████▌   | 1670/2524 [11:27<05:51,  2.43it/s, loss=0.00064, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  67%|██████▋   | 1680/2524 [11:31<05:47,  2.43it/s, loss=0.00064, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  67%|██████▋   | 1680/2524 [11:31<05:47,  2.43it/s, loss=0.000501, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  67%|██████▋   | 1690/2524 [11:35<05:43,  2.43it/s, loss=0.000501, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  67%|██████▋   | 1690/2524 [11:35<05:43,  2.43it/s, loss=0.000521, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  67%|██████▋   | 1700/2524 [11:39<05:39,  2.43it/s, loss=0.000521, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  67%|██████▋   | 1700/2524 [11:39<05:39,  2.43it/s, loss=0.000749, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  68%|██████▊   | 1710/2524 [11:43<05:35,  2.43it/s, loss=0.000749, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  68%|██████▊   | 1710/2524 [11:43<05:35,  2.43it/s, loss=0.000935, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  68%|██████▊   | 1720/2524 [11:48<05:30,  2.43it/s, loss=0.000935, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  68%|██████▊   | 1720/2524 [11:48<05:30,  2.43it/s, loss=0.00131, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  69%|██████▊   | 1730/2524 [11:52<05:26,  2.43it/s, loss=0.00131, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  69%|██████▊   | 1730/2524 [11:52<05:26,  2.43it/s, loss=0.00256, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  69%|██████▉   | 1740/2524 [11:56<05:22,  2.43it/s, loss=0.00256, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  69%|██████▉   | 1740/2524 [11:56<05:22,  2.43it/s, loss=0.00252, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  69%|██████▉   | 1750/2524 [12:00<05:18,  2.43it/s, loss=0.00252, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  69%|██████▉   | 1750/2524 [12:00<05:18,  2.43it/s, loss=0.000724, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  70%|██████▉   | 1760/2524 [12:04<05:14,  2.43it/s, loss=0.000724, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  70%|██████▉   | 1760/2524 [12:04<05:14,  2.43it/s, loss=0.000329, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  70%|███████   | 1770/2524 [12:08<05:10,  2.43it/s, loss=0.000329, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  70%|███████   | 1770/2524 [12:08<05:10,  2.43it/s, loss=0.000788, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  71%|███████   | 1780/2524 [12:12<05:06,  2.43it/s, loss=0.000788, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  71%|███████   | 1780/2524 [12:12<05:06,  2.43it/s, loss=0.000906, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  71%|███████   | 1790/2524 [12:16<05:02,  2.43it/s, loss=0.000906, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  71%|███████   | 1790/2524 [12:16<05:02,  2.43it/s, loss=0.00138, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  71%|███████▏  | 1800/2524 [12:20<04:57,  2.43it/s, loss=0.00138, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  71%|███████▏  | 1800/2524 [12:20<04:57,  2.43it/s, loss=0.00141, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  72%|███████▏  | 1810/2524 [12:24<04:53,  2.43it/s, loss=0.00141, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  72%|███████▏  | 1810/2524 [12:24<04:53,  2.43it/s, loss=0.00113, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  72%|███████▏  | 1820/2524 [12:29<04:49,  2.43it/s, loss=0.00113, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  72%|███████▏  | 1820/2524 [12:29<04:49,  2.43it/s, loss=0.0022, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  73%|███████▎  | 1830/2524 [12:33<04:45,  2.43it/s, loss=0.0022, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  73%|███████▎  | 1830/2524 [12:33<04:45,  2.43it/s, loss=0.00156, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  73%|███████▎  | 1840/2524 [12:37<04:41,  2.43it/s, loss=0.00156, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  73%|███████▎  | 1840/2524 [12:37<04:41,  2.43it/s, loss=0.000637, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  73%|███████▎  | 1850/2524 [12:41<04:37,  2.43it/s, loss=0.000637, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  73%|███████▎  | 1850/2524 [12:41<04:37,  2.43it/s, loss=0.000719, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  74%|███████▎  | 1860/2524 [12:45<04:33,  2.43it/s, loss=0.000719, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  74%|███████▎  | 1860/2524 [12:45<04:33,  2.43it/s, loss=0.000627, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  74%|███████▍  | 1870/2524 [12:49<04:29,  2.43it/s, loss=0.000627, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  74%|███████▍  | 1870/2524 [12:49<04:29,  2.43it/s, loss=0.000622, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  74%|███████▍  | 1880/2524 [12:53<04:25,  2.43it/s, loss=0.000622, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  74%|███████▍  | 1880/2524 [12:53<04:25,  2.43it/s, loss=0.00134, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  75%|███████▍  | 1890/2524 [12:57<04:20,  2.43it/s, loss=0.00134, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  75%|███████▍  | 1890/2524 [12:57<04:20,  2.43it/s, loss=0.00147, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  75%|███████▌  | 1900/2524 [13:02<04:16,  2.43it/s, loss=0.00147, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  75%|███████▌  | 1900/2524 [13:02<04:16,  2.43it/s, loss=0.0005, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  76%|███████▌  | 1910/2524 [13:06<04:12,  2.43it/s, loss=0.0005, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  76%|███████▌  | 1910/2524 [13:06<04:12,  2.43it/s, loss=0.000262, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  76%|███████▌  | 1920/2524 [13:10<04:08,  2.43it/s, loss=0.000262, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  76%|███████▌  | 1920/2524 [13:10<04:08,  2.43it/s, loss=0.000932, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  76%|███████▋  | 1930/2524 [13:14<04:04,  2.43it/s, loss=0.000932, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  76%|███████▋  | 1930/2524 [13:14<04:04,  2.43it/s, loss=0.00213, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  77%|███████▋  | 1940/2524 [13:18<04:00,  2.43it/s, loss=0.00213, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  77%|███████▋  | 1940/2524 [13:18<04:00,  2.43it/s, loss=0.00148, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  77%|███████▋  | 1950/2524 [13:22<03:56,  2.43it/s, loss=0.00148, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  77%|███████▋  | 1950/2524 [13:22<03:56,  2.43it/s, loss=0.000792, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  78%|███████▊  | 1960/2524 [13:26<03:52,  2.43it/s, loss=0.000792, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  78%|███████▊  | 1960/2524 [13:26<03:52,  2.43it/s, loss=0.000832, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  78%|███████▊  | 1970/2524 [13:30<03:48,  2.43it/s, loss=0.000832, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  78%|███████▊  | 1970/2524 [13:30<03:48,  2.43it/s, loss=0.000506, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  78%|███████▊  | 1980/2524 [13:34<03:43,  2.43it/s, loss=0.000506, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  78%|███████▊  | 1980/2524 [13:34<03:43,  2.43it/s, loss=0.000596, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  79%|███████▉  | 1990/2524 [13:39<03:39,  2.43it/s, loss=0.000596, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  79%|███████▉  | 1990/2524 [13:39<03:39,  2.43it/s, loss=0.00063, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  79%|███████▉  | 2000/2524 [13:43<03:35,  2.43it/s, loss=0.00063, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  79%|███████▉  | 2000/2524 [13:43<03:35,  2.43it/s, loss=0.00063, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  80%|███████▉  | 2010/2524 [13:47<03:31,  2.43it/s, loss=0.00063, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  80%|███████▉  | 2010/2524 [13:47<03:31,  2.43it/s, loss=0.000753, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  80%|████████  | 2020/2524 [13:51<03:27,  2.43it/s, loss=0.000753, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  80%|████████  | 2020/2524 [13:51<03:27,  2.43it/s, loss=0.00072, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  80%|████████  | 2030/2524 [13:55<03:23,  2.43it/s, loss=0.00072, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  80%|████████  | 2030/2524 [13:55<03:23,  2.43it/s, loss=0.00101, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  81%|████████  | 2040/2524 [13:59<03:19,  2.43it/s, loss=0.00101, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  81%|████████  | 2040/2524 [13:59<03:19,  2.43it/s, loss=0.00126, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  81%|████████  | 2050/2524 [14:03<03:15,  2.43it/s, loss=0.00126, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  81%|████████  | 2050/2524 [14:03<03:15,  2.43it/s, loss=0.000877, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  82%|████████▏ | 2060/2524 [14:07<03:10,  2.43it/s, loss=0.000877, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  82%|████████▏ | 2060/2524 [14:07<03:10,  2.43it/s, loss=0.00096, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  82%|████████▏ | 2070/2524 [14:11<03:06,  2.43it/s, loss=0.00096, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  82%|████████▏ | 2070/2524 [14:11<03:06,  2.43it/s, loss=0.000741, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  82%|████████▏ | 2080/2524 [14:16<03:02,  2.43it/s, loss=0.000741, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  82%|████████▏ | 2080/2524 [14:16<03:02,  2.43it/s, loss=0.000224, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  83%|████████▎ | 2090/2524 [14:20<02:58,  2.43it/s, loss=0.000224, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  83%|████████▎ | 2090/2524 [14:20<02:58,  2.43it/s, loss=0.000333, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  83%|████████▎ | 2100/2524 [14:24<02:54,  2.43it/s, loss=0.000333, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  83%|████████▎ | 2100/2524 [14:24<02:54,  2.43it/s, loss=0.000386, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  84%|████████▎ | 2110/2524 [14:28<02:50,  2.43it/s, loss=0.000386, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  84%|████████▎ | 2110/2524 [14:28<02:50,  2.43it/s, loss=0.000974, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  84%|████████▍ | 2120/2524 [14:32<02:46,  2.43it/s, loss=0.000974, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  84%|████████▍ | 2120/2524 [14:32<02:46,  2.43it/s, loss=0.00132, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  84%|████████▍ | 2130/2524 [14:36<02:42,  2.43it/s, loss=0.00132, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  84%|████████▍ | 2130/2524 [14:36<02:42,  2.43it/s, loss=0.000935, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  85%|████████▍ | 2140/2524 [14:40<02:38,  2.43it/s, loss=0.000935, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  85%|████████▍ | 2140/2524 [14:40<02:38,  2.43it/s, loss=0.000533, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  85%|████████▌ | 2150/2524 [14:44<02:33,  2.43it/s, loss=0.000533, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  85%|████████▌ | 2150/2524 [14:44<02:33,  2.43it/s, loss=0.000333, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  86%|████████▌ | 2160/2524 [14:48<02:29,  2.43it/s, loss=0.000333, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  86%|████████▌ | 2160/2524 [14:48<02:29,  2.43it/s, loss=0.000462, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  86%|████████▌ | 2170/2524 [14:53<02:25,  2.43it/s, loss=0.000462, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  86%|████████▌ | 2170/2524 [14:53<02:25,  2.43it/s, loss=0.00121, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  86%|████████▋ | 2180/2524 [14:57<02:21,  2.43it/s, loss=0.00121, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  86%|████████▋ | 2180/2524 [14:57<02:21,  2.43it/s, loss=0.0011, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  87%|████████▋ | 2190/2524 [15:01<02:17,  2.43it/s, loss=0.0011, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  87%|████████▋ | 2190/2524 [15:01<02:17,  2.43it/s, loss=0.000469, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  87%|████████▋ | 2200/2524 [15:05<02:13,  2.43it/s, loss=0.000469, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  87%|████████▋ | 2200/2524 [15:05<02:13,  2.43it/s, loss=0.00108, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  88%|████████▊ | 2210/2524 [15:09<02:09,  2.43it/s, loss=0.00108, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  88%|████████▊ | 2210/2524 [15:09<02:09,  2.43it/s, loss=0.00137, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  88%|████████▊ | 2220/2524 [15:13<02:05,  2.43it/s, loss=0.00137, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  88%|████████▊ | 2220/2524 [15:13<02:05,  2.43it/s, loss=0.0013, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  88%|████████▊ | 2230/2524 [15:17<02:01,  2.43it/s, loss=0.0013, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  88%|████████▊ | 2230/2524 [15:17<02:01,  2.43it/s, loss=0.00121, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  89%|████████▊ | 2240/2524 [15:21<01:56,  2.43it/s, loss=0.00121, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  89%|████████▊ | 2240/2524 [15:21<01:56,  2.43it/s, loss=0.00112, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  89%|████████▉ | 2250/2524 [15:25<01:52,  2.43it/s, loss=0.00112, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  89%|████████▉ | 2250/2524 [15:26<01:52,  2.43it/s, loss=0.000973, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  90%|████████▉ | 2260/2524 [15:30<01:48,  2.43it/s, loss=0.000973, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  90%|████████▉ | 2260/2524 [15:30<01:48,  2.43it/s, loss=0.000752, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  90%|████████▉ | 2270/2524 [15:34<01:44,  2.43it/s, loss=0.000752, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  90%|████████▉ | 2270/2524 [15:34<01:44,  2.43it/s, loss=0.00168, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  90%|█████████ | 2280/2524 [15:38<01:40,  2.43it/s, loss=0.00168, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  90%|█████████ | 2280/2524 [15:38<01:40,  2.43it/s, loss=0.00158, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  91%|█████████ | 2290/2524 [15:42<01:36,  2.43it/s, loss=0.00158, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  91%|█████████ | 2290/2524 [15:42<01:36,  2.43it/s, loss=0.000999, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  91%|█████████ | 2300/2524 [15:46<01:32,  2.43it/s, loss=0.000999, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  91%|█████████ | 2300/2524 [15:46<01:32,  2.43it/s, loss=0.000996, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  92%|█████████▏| 2310/2524 [15:50<01:28,  2.43it/s, loss=0.000996, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  92%|█████████▏| 2310/2524 [15:50<01:28,  2.43it/s, loss=0.000621, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  92%|█████████▏| 2320/2524 [15:54<01:23,  2.43it/s, loss=0.000621, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  92%|█████████▏| 2320/2524 [15:54<01:23,  2.43it/s, loss=0.000842, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  92%|█████████▏| 2330/2524 [15:58<01:19,  2.43it/s, loss=0.000842, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  92%|█████████▏| 2330/2524 [15:58<01:19,  2.43it/s, loss=0.000694, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  93%|█████████▎| 2340/2524 [16:03<01:15,  2.43it/s, loss=0.000694, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  93%|█████████▎| 2340/2524 [16:03<01:15,  2.43it/s, loss=0.00209, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  93%|█████████▎| 2350/2524 [16:07<01:11,  2.43it/s, loss=0.00209, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  93%|█████████▎| 2350/2524 [16:07<01:11,  2.43it/s, loss=0.0022, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  94%|█████████▎| 2360/2524 [16:11<01:07,  2.43it/s, loss=0.0022, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  94%|█████████▎| 2360/2524 [16:11<01:07,  2.43it/s, loss=0.000878, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  94%|█████████▍| 2370/2524 [16:15<01:03,  2.43it/s, loss=0.000878, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  94%|█████████▍| 2370/2524 [16:15<01:03,  2.43it/s, loss=0.00112, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  94%|█████████▍| 2380/2524 [16:19<00:59,  2.43it/s, loss=0.00112, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  94%|█████████▍| 2380/2524 [16:19<00:59,  2.43it/s, loss=0.00239, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  95%|█████████▍| 2390/2524 [16:23<00:55,  2.43it/s, loss=0.00239, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  95%|█████████▍| 2390/2524 [16:23<00:55,  2.43it/s, loss=0.00248, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  95%|█████████▌| 2400/2524 [16:27<00:51,  2.43it/s, loss=0.00248, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  95%|█████████▌| 2400/2524 [16:27<00:51,  2.43it/s, loss=0.000851, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  95%|█████████▌| 2410/2524 [16:31<00:46,  2.43it/s, loss=0.000851, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  95%|█████████▌| 2410/2524 [16:31<00:46,  2.43it/s, loss=0.000445, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  96%|█████████▌| 2420/2524 [16:35<00:42,  2.43it/s, loss=0.000445, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  96%|█████████▌| 2420/2524 [16:35<00:42,  2.43it/s, loss=0.000803, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  96%|█████████▋| 2430/2524 [16:40<00:38,  2.43it/s, loss=0.000803, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  96%|█████████▋| 2430/2524 [16:40<00:38,  2.43it/s, loss=0.000832, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  97%|█████████▋| 2440/2524 [16:44<00:34,  2.43it/s, loss=0.000832, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  97%|█████████▋| 2440/2524 [16:44<00:34,  2.43it/s, loss=0.000881, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  97%|█████████▋| 2450/2524 [16:48<00:30,  2.43it/s, loss=0.000881, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  97%|█████████▋| 2450/2524 [16:48<00:30,  2.43it/s, loss=0.00107, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  97%|█████████▋| 2460/2524 [16:52<00:26,  2.43it/s, loss=0.00107, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  97%|█████████▋| 2460/2524 [16:52<00:26,  2.43it/s, loss=0.000685, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  98%|█████████▊| 2470/2524 [16:56<00:22,  2.43it/s, loss=0.000685, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  98%|█████████▊| 2470/2524 [16:56<00:22,  2.43it/s, loss=0.000632, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  98%|█████████▊| 2480/2524 [17:00<00:18,  2.43it/s, loss=0.000632, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  98%|█████████▊| 2480/2524 [17:00<00:18,  2.43it/s, loss=0.00109, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16:  99%|█████████▊| 2490/2524 [17:04<00:13,  2.43it/s, loss=0.00109, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  99%|█████████▊| 2490/2524 [17:04<00:13,  2.43it/s, loss=0.00109, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  99%|█████████▉| 2500/2524 [17:08<00:09,  2.43it/s, loss=0.00109, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  99%|█████████▉| 2500/2524 [17:08<00:09,  2.43it/s, loss=0.000739, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  99%|█████████▉| 2510/2524 [17:12<00:05,  2.43it/s, loss=0.000739, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:  99%|█████████▉| 2510/2524 [17:12<00:05,  2.43it/s, loss=0.000525, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16: 100%|█████████▉| 2520/2524 [17:17<00:01,  2.43it/s, loss=0.000525, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16: 100%|█████████▉| 2520/2524 [17:17<00:01,  2.43it/s, loss=0.00074, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 16: 100%|██████████| 2524/2524 [17:18<00:00,  2.43it/s, loss=0.00074, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16: 100%|██████████| 2524/2524 [17:18<00:00,  2.43it/s, loss=0.00145, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16: 100%|██████████| 2524/2524 [17:18<00:00,  2.43it/s, loss=0.00145, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 16:   0%|          | 0/2524 [00:00<?, ?it/s, loss=0.00145, v_num=3, val_loss=0.306, val_f1=63.60]           Epoch 17:   0%|          | 0/2524 [00:00<?, ?it/s, loss=0.00145, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   0%|          | 10/2524 [00:04<18:34,  2.26it/s, loss=0.00145, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   0%|          | 10/2524 [00:04<18:36,  2.25it/s, loss=0.00212, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   1%|          | 20/2524 [00:08<17:47,  2.35it/s, loss=0.00212, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   1%|          | 20/2524 [00:08<17:48,  2.34it/s, loss=0.00164, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   1%|          | 30/2524 [00:12<17:28,  2.38it/s, loss=0.00164, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   1%|          | 30/2524 [00:12<17:29,  2.38it/s, loss=0.000688, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   2%|▏         | 40/2524 [00:16<17:17,  2.39it/s, loss=0.000688, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   2%|▏         | 40/2524 [00:16<17:18,  2.39it/s, loss=0.000362, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   2%|▏         | 50/2524 [00:20<17:12,  2.40it/s, loss=0.000362, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   2%|▏         | 50/2524 [00:20<17:12,  2.40it/s, loss=0.000465, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   2%|▏         | 60/2524 [00:24<17:04,  2.40it/s, loss=0.000465, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   2%|▏         | 60/2524 [00:24<17:05,  2.40it/s, loss=0.000919, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   3%|▎         | 70/2524 [00:29<16:58,  2.41it/s, loss=0.000919, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   3%|▎         | 70/2524 [00:29<16:58,  2.41it/s, loss=0.00247, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:   3%|▎         | 80/2524 [00:33<16:52,  2.41it/s, loss=0.00247, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   3%|▎         | 80/2524 [00:33<16:52,  2.41it/s, loss=0.00271, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   4%|▎         | 90/2524 [00:37<16:46,  2.42it/s, loss=0.00271, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   4%|▎         | 90/2524 [00:37<16:47,  2.42it/s, loss=0.00112, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   4%|▍         | 100/2524 [00:41<16:45,  2.41it/s, loss=0.00112, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   4%|▍         | 100/2524 [00:41<16:45,  2.41it/s, loss=0.000238, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   4%|▍         | 110/2524 [00:45<16:40,  2.41it/s, loss=0.000238, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   4%|▍         | 110/2524 [00:45<16:40,  2.41it/s, loss=0.00119, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:   5%|▍         | 120/2524 [00:49<16:34,  2.42it/s, loss=0.00119, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   5%|▍         | 120/2524 [00:49<16:35,  2.42it/s, loss=0.00168, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   5%|▌         | 130/2524 [00:53<16:29,  2.42it/s, loss=0.00168, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   5%|▌         | 130/2524 [00:53<16:30,  2.42it/s, loss=0.00145, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   6%|▌         | 140/2524 [00:57<16:25,  2.42it/s, loss=0.00145, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   6%|▌         | 140/2524 [00:57<16:25,  2.42it/s, loss=0.00267, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   6%|▌         | 150/2524 [01:01<16:21,  2.42it/s, loss=0.00267, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   6%|▌         | 150/2524 [01:02<16:21,  2.42it/s, loss=0.0024, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:   6%|▋         | 160/2524 [01:06<16:16,  2.42it/s, loss=0.0024, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   6%|▋         | 160/2524 [01:06<16:16,  2.42it/s, loss=0.000778, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   7%|▋         | 170/2524 [01:10<16:11,  2.42it/s, loss=0.000778, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   7%|▋         | 170/2524 [01:10<16:11,  2.42it/s, loss=0.000375, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   7%|▋         | 180/2524 [01:14<16:07,  2.42it/s, loss=0.000375, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   7%|▋         | 180/2524 [01:14<16:07,  2.42it/s, loss=0.000715, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   8%|▊         | 190/2524 [01:18<16:02,  2.42it/s, loss=0.000715, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   8%|▊         | 190/2524 [01:18<16:02,  2.42it/s, loss=0.000817, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   8%|▊         | 200/2524 [01:22<15:59,  2.42it/s, loss=0.000817, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   8%|▊         | 200/2524 [01:22<16:00,  2.42it/s, loss=0.00105, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:   8%|▊         | 210/2524 [01:26<15:55,  2.42it/s, loss=0.00105, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   8%|▊         | 210/2524 [01:26<15:55,  2.42it/s, loss=0.00134, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   9%|▊         | 220/2524 [01:30<15:50,  2.42it/s, loss=0.00134, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   9%|▊         | 220/2524 [01:30<15:50,  2.42it/s, loss=0.000935, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   9%|▉         | 230/2524 [01:34<15:46,  2.42it/s, loss=0.000935, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   9%|▉         | 230/2524 [01:34<15:46,  2.42it/s, loss=0.000535, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  10%|▉         | 240/2524 [01:38<15:41,  2.42it/s, loss=0.000535, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  10%|▉         | 240/2524 [01:38<15:41,  2.42it/s, loss=0.000959, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  10%|▉         | 250/2524 [01:43<15:37,  2.42it/s, loss=0.000959, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  10%|▉         | 250/2524 [01:43<15:38,  2.42it/s, loss=0.00132, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  10%|█         | 260/2524 [01:47<15:33,  2.43it/s, loss=0.00132, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  10%|█         | 260/2524 [01:47<15:33,  2.42it/s, loss=0.000749, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  11%|█         | 270/2524 [01:51<15:29,  2.43it/s, loss=0.000749, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  11%|█         | 270/2524 [01:51<15:29,  2.43it/s, loss=0.000633, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  11%|█         | 280/2524 [01:55<15:24,  2.43it/s, loss=0.000633, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  11%|█         | 280/2524 [01:55<15:24,  2.43it/s, loss=0.00109, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  11%|█▏        | 290/2524 [01:59<15:20,  2.43it/s, loss=0.00109, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  11%|█▏        | 290/2524 [01:59<15:20,  2.43it/s, loss=0.000828, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  12%|█▏        | 300/2524 [02:03<15:17,  2.42it/s, loss=0.000828, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  12%|█▏        | 300/2524 [02:03<15:17,  2.42it/s, loss=0.000489, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  12%|█▏        | 310/2524 [02:07<15:12,  2.43it/s, loss=0.000489, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  12%|█▏        | 310/2524 [02:07<15:13,  2.42it/s, loss=0.000783, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  13%|█▎        | 320/2524 [02:11<15:08,  2.43it/s, loss=0.000783, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  13%|█▎        | 320/2524 [02:11<15:08,  2.43it/s, loss=0.000644, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  13%|█▎        | 330/2524 [02:16<15:04,  2.43it/s, loss=0.000644, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  13%|█▎        | 330/2524 [02:16<15:04,  2.43it/s, loss=0.000367, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  13%|█▎        | 340/2524 [02:20<14:59,  2.43it/s, loss=0.000367, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  13%|█▎        | 340/2524 [02:20<15:00,  2.43it/s, loss=0.000487, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  14%|█▍        | 350/2524 [02:24<14:56,  2.43it/s, loss=0.000487, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  14%|█▍        | 350/2524 [02:24<14:56,  2.43it/s, loss=0.00094, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  14%|█▍        | 360/2524 [02:28<14:51,  2.43it/s, loss=0.00094, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  14%|█▍        | 360/2524 [02:28<14:51,  2.43it/s, loss=0.0008, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  15%|█▍        | 370/2524 [02:32<14:47,  2.43it/s, loss=0.0008, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  15%|█▍        | 370/2524 [02:32<14:47,  2.43it/s, loss=0.000952, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  15%|█▌        | 380/2524 [02:36<14:43,  2.43it/s, loss=0.000952, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  15%|█▌        | 380/2524 [02:36<14:43,  2.43it/s, loss=0.000925, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  15%|█▌        | 390/2524 [02:40<14:38,  2.43it/s, loss=0.000925, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  15%|█▌        | 390/2524 [02:40<14:38,  2.43it/s, loss=0.00103, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  16%|█▌        | 400/2524 [02:44<14:35,  2.43it/s, loss=0.00103, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  16%|█▌        | 400/2524 [02:44<14:35,  2.43it/s, loss=0.00265, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  16%|█▌        | 410/2524 [02:48<14:31,  2.43it/s, loss=0.00265, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  16%|█▌        | 410/2524 [02:48<14:31,  2.43it/s, loss=0.0018, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  17%|█▋        | 420/2524 [02:53<14:26,  2.43it/s, loss=0.0018, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  17%|█▋        | 420/2524 [02:53<14:26,  2.43it/s, loss=0.000758, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  17%|█▋        | 430/2524 [02:57<14:22,  2.43it/s, loss=0.000758, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  17%|█▋        | 430/2524 [02:57<14:22,  2.43it/s, loss=0.000872, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  17%|█▋        | 440/2524 [03:01<14:18,  2.43it/s, loss=0.000872, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  17%|█▋        | 440/2524 [03:01<14:18,  2.43it/s, loss=0.00036, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  18%|█▊        | 450/2524 [03:05<14:14,  2.43it/s, loss=0.00036, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  18%|█▊        | 450/2524 [03:05<14:14,  2.43it/s, loss=0.000684, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  18%|█▊        | 460/2524 [03:09<14:10,  2.43it/s, loss=0.000684, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  18%|█▊        | 460/2524 [03:09<14:10,  2.43it/s, loss=0.000831, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  19%|█▊        | 470/2524 [03:13<14:05,  2.43it/s, loss=0.000831, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  19%|█▊        | 470/2524 [03:13<14:05,  2.43it/s, loss=0.000839, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  19%|█▉        | 480/2524 [03:17<14:01,  2.43it/s, loss=0.000839, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  19%|█▉        | 480/2524 [03:17<14:01,  2.43it/s, loss=0.00134, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  19%|█▉        | 490/2524 [03:21<13:57,  2.43it/s, loss=0.00134, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  19%|█▉        | 490/2524 [03:21<13:57,  2.43it/s, loss=0.0011, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  20%|█▉        | 500/2524 [03:25<13:53,  2.43it/s, loss=0.0011, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  20%|█▉        | 500/2524 [03:26<13:53,  2.43it/s, loss=0.000455, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  20%|██        | 510/2524 [03:30<13:49,  2.43it/s, loss=0.000455, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  20%|██        | 510/2524 [03:30<13:49,  2.43it/s, loss=0.000395, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  21%|██        | 520/2524 [03:34<13:45,  2.43it/s, loss=0.000395, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  21%|██        | 520/2524 [03:34<13:45,  2.43it/s, loss=0.000525, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  21%|██        | 530/2524 [03:38<13:41,  2.43it/s, loss=0.000525, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  21%|██        | 530/2524 [03:38<13:41,  2.43it/s, loss=0.000872, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  21%|██▏       | 540/2524 [03:42<13:36,  2.43it/s, loss=0.000872, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  21%|██▏       | 540/2524 [03:42<13:37,  2.43it/s, loss=0.00111, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  22%|██▏       | 550/2524 [03:46<13:32,  2.43it/s, loss=0.00111, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  22%|██▏       | 550/2524 [03:46<13:33,  2.43it/s, loss=0.000776, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  22%|██▏       | 560/2524 [03:50<13:28,  2.43it/s, loss=0.000776, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  22%|██▏       | 560/2524 [03:50<13:28,  2.43it/s, loss=0.000326, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  23%|██▎       | 570/2524 [03:54<13:24,  2.43it/s, loss=0.000326, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  23%|██▎       | 570/2524 [03:54<13:24,  2.43it/s, loss=0.000867, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  23%|██▎       | 580/2524 [03:58<13:20,  2.43it/s, loss=0.000867, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  23%|██▎       | 580/2524 [03:58<13:20,  2.43it/s, loss=0.000874, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  23%|██▎       | 590/2524 [04:02<13:16,  2.43it/s, loss=0.000874, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  23%|██▎       | 590/2524 [04:02<13:16,  2.43it/s, loss=0.000257, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  24%|██▍       | 600/2524 [04:07<13:12,  2.43it/s, loss=0.000257, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  24%|██▍       | 600/2524 [04:07<13:12,  2.43it/s, loss=0.00115, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  24%|██▍       | 610/2524 [04:11<13:08,  2.43it/s, loss=0.00115, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  24%|██▍       | 610/2524 [04:11<13:08,  2.43it/s, loss=0.0021, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  25%|██▍       | 620/2524 [04:15<13:04,  2.43it/s, loss=0.0021, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  25%|██▍       | 620/2524 [04:15<13:04,  2.43it/s, loss=0.00186, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  25%|██▍       | 630/2524 [04:19<12:59,  2.43it/s, loss=0.00186, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  25%|██▍       | 630/2524 [04:19<12:59,  2.43it/s, loss=0.0012, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  25%|██▌       | 640/2524 [04:23<12:55,  2.43it/s, loss=0.0012, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  25%|██▌       | 640/2524 [04:23<12:55,  2.43it/s, loss=0.000636, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  26%|██▌       | 650/2524 [04:27<12:51,  2.43it/s, loss=0.000636, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  26%|██▌       | 650/2524 [04:27<12:51,  2.43it/s, loss=0.000563, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  26%|██▌       | 660/2524 [04:31<12:47,  2.43it/s, loss=0.000563, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  26%|██▌       | 660/2524 [04:31<12:47,  2.43it/s, loss=0.00112, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  27%|██▋       | 670/2524 [04:35<12:43,  2.43it/s, loss=0.00112, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  27%|██▋       | 670/2524 [04:35<12:43,  2.43it/s, loss=0.00153, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  27%|██▋       | 680/2524 [04:39<12:39,  2.43it/s, loss=0.00153, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  27%|██▋       | 680/2524 [04:39<12:39,  2.43it/s, loss=0.00126, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  27%|██▋       | 690/2524 [04:44<12:35,  2.43it/s, loss=0.00126, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  27%|██▋       | 690/2524 [04:44<12:35,  2.43it/s, loss=0.000751, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  28%|██▊       | 700/2524 [04:48<12:31,  2.43it/s, loss=0.000751, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  28%|██▊       | 700/2524 [04:48<12:31,  2.43it/s, loss=0.000481, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  28%|██▊       | 710/2524 [04:52<12:27,  2.43it/s, loss=0.000481, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  28%|██▊       | 710/2524 [04:52<12:27,  2.43it/s, loss=0.000512, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  29%|██▊       | 720/2524 [04:56<12:22,  2.43it/s, loss=0.000512, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  29%|██▊       | 720/2524 [04:56<12:22,  2.43it/s, loss=0.000934, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  29%|██▉       | 730/2524 [05:00<12:18,  2.43it/s, loss=0.000934, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  29%|██▉       | 730/2524 [05:00<12:18,  2.43it/s, loss=0.00125, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  29%|██▉       | 740/2524 [05:04<12:14,  2.43it/s, loss=0.00125, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  29%|██▉       | 740/2524 [05:04<12:14,  2.43it/s, loss=0.000746, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  30%|██▉       | 750/2524 [05:08<12:10,  2.43it/s, loss=0.000746, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  30%|██▉       | 750/2524 [05:08<12:10,  2.43it/s, loss=0.00126, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  30%|███       | 760/2524 [05:12<12:06,  2.43it/s, loss=0.00126, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  30%|███       | 760/2524 [05:12<12:06,  2.43it/s, loss=0.00182, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  31%|███       | 770/2524 [05:17<12:02,  2.43it/s, loss=0.00182, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  31%|███       | 770/2524 [05:17<12:02,  2.43it/s, loss=0.00131, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  31%|███       | 780/2524 [05:21<11:57,  2.43it/s, loss=0.00131, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  31%|███       | 780/2524 [05:21<11:57,  2.43it/s, loss=0.00156, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  31%|███▏      | 790/2524 [05:25<11:53,  2.43it/s, loss=0.00156, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  31%|███▏      | 790/2524 [05:25<11:53,  2.43it/s, loss=0.00132, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  32%|███▏      | 800/2524 [05:29<11:49,  2.43it/s, loss=0.00132, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  32%|███▏      | 800/2524 [05:29<11:49,  2.43it/s, loss=0.00077, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  32%|███▏      | 810/2524 [05:33<11:45,  2.43it/s, loss=0.00077, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  32%|███▏      | 810/2524 [05:33<11:45,  2.43it/s, loss=0.000871, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  32%|███▏      | 820/2524 [05:37<11:41,  2.43it/s, loss=0.000871, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  32%|███▏      | 820/2524 [05:37<11:41,  2.43it/s, loss=0.00107, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  33%|███▎      | 830/2524 [05:41<11:37,  2.43it/s, loss=0.00107, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  33%|███▎      | 830/2524 [05:41<11:37,  2.43it/s, loss=0.000851, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  33%|███▎      | 840/2524 [05:45<11:33,  2.43it/s, loss=0.000851, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  33%|███▎      | 840/2524 [05:45<11:33,  2.43it/s, loss=0.000468, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  34%|███▎      | 850/2524 [05:49<11:29,  2.43it/s, loss=0.000468, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  34%|███▎      | 850/2524 [05:49<11:29,  2.43it/s, loss=0.00125, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  34%|███▍      | 860/2524 [05:54<11:25,  2.43it/s, loss=0.00125, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  34%|███▍      | 860/2524 [05:54<11:25,  2.43it/s, loss=0.00154, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  34%|███▍      | 870/2524 [05:58<11:20,  2.43it/s, loss=0.00154, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  34%|███▍      | 870/2524 [05:58<11:20,  2.43it/s, loss=0.000794, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  35%|███▍      | 880/2524 [06:02<11:16,  2.43it/s, loss=0.000794, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  35%|███▍      | 880/2524 [06:02<11:16,  2.43it/s, loss=0.000698, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  35%|███▌      | 890/2524 [06:06<11:12,  2.43it/s, loss=0.000698, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  35%|███▌      | 890/2524 [06:06<11:12,  2.43it/s, loss=0.000605, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  36%|███▌      | 900/2524 [06:10<11:08,  2.43it/s, loss=0.000605, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  36%|███▌      | 900/2524 [06:10<11:08,  2.43it/s, loss=0.000596, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  36%|███▌      | 910/2524 [06:14<11:04,  2.43it/s, loss=0.000596, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  36%|███▌      | 910/2524 [06:14<11:04,  2.43it/s, loss=0.000563, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  36%|███▋      | 920/2524 [06:18<11:00,  2.43it/s, loss=0.000563, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  36%|███▋      | 920/2524 [06:18<11:00,  2.43it/s, loss=0.000657, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  37%|███▋      | 930/2524 [06:22<10:56,  2.43it/s, loss=0.000657, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  37%|███▋      | 930/2524 [06:22<10:56,  2.43it/s, loss=0.000874, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  37%|███▋      | 940/2524 [06:26<10:52,  2.43it/s, loss=0.000874, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  37%|███▋      | 940/2524 [06:26<10:52,  2.43it/s, loss=0.000681, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  38%|███▊      | 950/2524 [06:31<10:48,  2.43it/s, loss=0.000681, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  38%|███▊      | 950/2524 [06:31<10:48,  2.43it/s, loss=0.000654, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  38%|███▊      | 960/2524 [06:35<10:43,  2.43it/s, loss=0.000654, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  38%|███▊      | 960/2524 [06:35<10:43,  2.43it/s, loss=0.00044, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  38%|███▊      | 970/2524 [06:39<10:39,  2.43it/s, loss=0.00044, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  38%|███▊      | 970/2524 [06:39<10:39,  2.43it/s, loss=0.000203, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  39%|███▉      | 980/2524 [06:43<10:35,  2.43it/s, loss=0.000203, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  39%|███▉      | 980/2524 [06:43<10:35,  2.43it/s, loss=0.000198, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  39%|███▉      | 990/2524 [06:47<10:31,  2.43it/s, loss=0.000198, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  39%|███▉      | 990/2524 [06:47<10:31,  2.43it/s, loss=0.000381, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  40%|███▉      | 1000/2524 [06:51<10:27,  2.43it/s, loss=0.000381, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  40%|███▉      | 1000/2524 [06:51<10:27,  2.43it/s, loss=0.000626, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  40%|████      | 1010/2524 [06:55<10:23,  2.43it/s, loss=0.000626, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  40%|████      | 1010/2524 [06:55<10:23,  2.43it/s, loss=0.00124, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  40%|████      | 1020/2524 [06:59<10:19,  2.43it/s, loss=0.00124, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  40%|████      | 1020/2524 [06:59<10:19,  2.43it/s, loss=0.00115, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  41%|████      | 1030/2524 [07:04<10:15,  2.43it/s, loss=0.00115, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  41%|████      | 1030/2524 [07:04<10:15,  2.43it/s, loss=0.000437, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  41%|████      | 1040/2524 [07:08<10:10,  2.43it/s, loss=0.000437, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  41%|████      | 1040/2524 [07:08<10:10,  2.43it/s, loss=0.000739, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  42%|████▏     | 1050/2524 [07:12<10:06,  2.43it/s, loss=0.000739, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  42%|████▏     | 1050/2524 [07:12<10:06,  2.43it/s, loss=0.00107, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  42%|████▏     | 1060/2524 [07:16<10:02,  2.43it/s, loss=0.00107, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  42%|████▏     | 1060/2524 [07:16<10:02,  2.43it/s, loss=0.000972, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  42%|████▏     | 1070/2524 [07:20<09:58,  2.43it/s, loss=0.000972, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  42%|████▏     | 1070/2524 [07:20<09:58,  2.43it/s, loss=0.00106, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  43%|████▎     | 1080/2524 [07:24<09:54,  2.43it/s, loss=0.00106, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  43%|████▎     | 1080/2524 [07:24<09:54,  2.43it/s, loss=0.00104, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  43%|████▎     | 1090/2524 [07:28<09:50,  2.43it/s, loss=0.00104, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  43%|████▎     | 1090/2524 [07:28<09:50,  2.43it/s, loss=0.0007, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  44%|████▎     | 1100/2524 [07:32<09:46,  2.43it/s, loss=0.0007, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  44%|████▎     | 1100/2524 [07:32<09:46,  2.43it/s, loss=0.000402, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  44%|████▍     | 1110/2524 [07:36<09:42,  2.43it/s, loss=0.000402, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  44%|████▍     | 1110/2524 [07:36<09:42,  2.43it/s, loss=0.000719, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  44%|████▍     | 1120/2524 [07:41<09:37,  2.43it/s, loss=0.000719, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  44%|████▍     | 1120/2524 [07:41<09:37,  2.43it/s, loss=0.000845, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  45%|████▍     | 1130/2524 [07:45<09:33,  2.43it/s, loss=0.000845, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  45%|████▍     | 1130/2524 [07:45<09:33,  2.43it/s, loss=0.00107, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  45%|████▌     | 1140/2524 [07:49<09:29,  2.43it/s, loss=0.00107, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  45%|████▌     | 1140/2524 [07:49<09:29,  2.43it/s, loss=0.00121, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  46%|████▌     | 1150/2524 [07:53<09:25,  2.43it/s, loss=0.00121, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  46%|████▌     | 1150/2524 [07:53<09:25,  2.43it/s, loss=0.000643, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  46%|████▌     | 1160/2524 [07:57<09:21,  2.43it/s, loss=0.000643, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  46%|████▌     | 1160/2524 [07:57<09:21,  2.43it/s, loss=0.00073, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  46%|████▋     | 1170/2524 [08:01<09:17,  2.43it/s, loss=0.00073, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  46%|████▋     | 1170/2524 [08:01<09:17,  2.43it/s, loss=0.000773, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  47%|████▋     | 1180/2524 [08:05<09:13,  2.43it/s, loss=0.000773, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  47%|████▋     | 1180/2524 [08:05<09:13,  2.43it/s, loss=0.0013, v_num=3, val_loss=0.306, val_f1=63.60]  Epoch 17:  47%|████▋     | 1190/2524 [08:09<09:09,  2.43it/s, loss=0.0013, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  47%|████▋     | 1190/2524 [08:09<09:09,  2.43it/s, loss=0.00121, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  48%|████▊     | 1200/2524 [08:14<09:05,  2.43it/s, loss=0.00121, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  48%|████▊     | 1200/2524 [08:14<09:05,  2.43it/s, loss=0.000299, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  48%|████▊     | 1210/2524 [08:18<09:00,  2.43it/s, loss=0.000299, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  48%|████▊     | 1210/2524 [08:18<09:00,  2.43it/s, loss=0.000916, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  48%|████▊     | 1220/2524 [08:22<08:56,  2.43it/s, loss=0.000916, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  48%|████▊     | 1220/2524 [08:22<08:56,  2.43it/s, loss=0.00109, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  49%|████▊     | 1230/2524 [08:26<08:52,  2.43it/s, loss=0.00109, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  49%|████▊     | 1230/2524 [08:26<08:52,  2.43it/s, loss=0.000403, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  49%|████▉     | 1240/2524 [08:30<08:48,  2.43it/s, loss=0.000403, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  49%|████▉     | 1240/2524 [08:30<08:48,  2.43it/s, loss=0.000325, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  50%|████▉     | 1250/2524 [08:34<08:44,  2.43it/s, loss=0.000325, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  50%|████▉     | 1250/2524 [08:34<08:44,  2.43it/s, loss=0.000402, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  50%|████▉     | 1260/2524 [08:38<08:40,  2.43it/s, loss=0.000402, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  50%|████▉     | 1260/2524 [08:38<08:40,  2.43it/s, loss=0.000295, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  50%|█████     | 1270/2524 [08:42<08:36,  2.43it/s, loss=0.000295, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  50%|█████     | 1270/2524 [08:42<08:36,  2.43it/s, loss=0.0007, v_num=3, val_loss=0.306, val_f1=63.60]  Epoch 17:  51%|█████     | 1280/2524 [08:46<08:32,  2.43it/s, loss=0.0007, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  51%|█████     | 1280/2524 [08:46<08:32,  2.43it/s, loss=0.000929, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  51%|█████     | 1290/2524 [08:50<08:27,  2.43it/s, loss=0.000929, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  51%|█████     | 1290/2524 [08:51<08:27,  2.43it/s, loss=0.00118, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  52%|█████▏    | 1300/2524 [08:55<08:23,  2.43it/s, loss=0.00118, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  52%|█████▏    | 1300/2524 [08:55<08:23,  2.43it/s, loss=0.00145, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  52%|█████▏    | 1310/2524 [08:59<08:19,  2.43it/s, loss=0.00145, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  52%|█████▏    | 1310/2524 [08:59<08:19,  2.43it/s, loss=0.00081, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  52%|█████▏    | 1320/2524 [09:03<08:15,  2.43it/s, loss=0.00081, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  52%|█████▏    | 1320/2524 [09:03<08:15,  2.43it/s, loss=0.000469, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  53%|█████▎    | 1330/2524 [09:07<08:11,  2.43it/s, loss=0.000469, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  53%|█████▎    | 1330/2524 [09:07<08:11,  2.43it/s, loss=0.000331, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  53%|█████▎    | 1340/2524 [09:11<08:07,  2.43it/s, loss=0.000331, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  53%|█████▎    | 1340/2524 [09:11<08:07,  2.43it/s, loss=0.000163, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  53%|█████▎    | 1350/2524 [09:15<08:03,  2.43it/s, loss=0.000163, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  53%|█████▎    | 1350/2524 [09:15<08:03,  2.43it/s, loss=0.000177, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  54%|█████▍    | 1360/2524 [09:19<07:59,  2.43it/s, loss=0.000177, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  54%|█████▍    | 1360/2524 [09:19<07:59,  2.43it/s, loss=0.000511, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  54%|█████▍    | 1370/2524 [09:23<07:55,  2.43it/s, loss=0.000511, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  54%|█████▍    | 1370/2524 [09:23<07:55,  2.43it/s, loss=0.00145, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  55%|█████▍    | 1380/2524 [09:28<07:50,  2.43it/s, loss=0.00145, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  55%|█████▍    | 1380/2524 [09:28<07:50,  2.43it/s, loss=0.00138, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  55%|█████▌    | 1390/2524 [09:32<07:46,  2.43it/s, loss=0.00138, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  55%|█████▌    | 1390/2524 [09:32<07:46,  2.43it/s, loss=0.000525, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  55%|█████▌    | 1400/2524 [09:36<07:42,  2.43it/s, loss=0.000525, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  55%|█████▌    | 1400/2524 [09:36<07:42,  2.43it/s, loss=0.000374, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  56%|█████▌    | 1410/2524 [09:40<07:38,  2.43it/s, loss=0.000374, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  56%|█████▌    | 1410/2524 [09:40<07:38,  2.43it/s, loss=0.000406, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  56%|█████▋    | 1420/2524 [09:44<07:34,  2.43it/s, loss=0.000406, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  56%|█████▋    | 1420/2524 [09:44<07:34,  2.43it/s, loss=0.000795, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  57%|█████▋    | 1430/2524 [09:48<07:30,  2.43it/s, loss=0.000795, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  57%|█████▋    | 1430/2524 [09:48<07:30,  2.43it/s, loss=0.00107, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  57%|█████▋    | 1440/2524 [09:52<07:26,  2.43it/s, loss=0.00107, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  57%|█████▋    | 1440/2524 [09:52<07:26,  2.43it/s, loss=0.000562, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  57%|█████▋    | 1450/2524 [09:56<07:22,  2.43it/s, loss=0.000562, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  57%|█████▋    | 1450/2524 [09:56<07:22,  2.43it/s, loss=0.000725, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  58%|█████▊    | 1460/2524 [10:01<07:18,  2.43it/s, loss=0.000725, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  58%|█████▊    | 1460/2524 [10:01<07:18,  2.43it/s, loss=0.00093, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  58%|█████▊    | 1470/2524 [10:05<07:13,  2.43it/s, loss=0.00093, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  58%|█████▊    | 1470/2524 [10:05<07:13,  2.43it/s, loss=0.00115, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  59%|█████▊    | 1480/2524 [10:09<07:09,  2.43it/s, loss=0.00115, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  59%|█████▊    | 1480/2524 [10:09<07:09,  2.43it/s, loss=0.00185, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  59%|█████▉    | 1490/2524 [10:13<07:05,  2.43it/s, loss=0.00185, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  59%|█████▉    | 1490/2524 [10:13<07:05,  2.43it/s, loss=0.0014, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  59%|█████▉    | 1500/2524 [10:17<07:01,  2.43it/s, loss=0.0014, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  59%|█████▉    | 1500/2524 [10:17<07:01,  2.43it/s, loss=0.000478, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  60%|█████▉    | 1510/2524 [10:21<06:57,  2.43it/s, loss=0.000478, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  60%|█████▉    | 1510/2524 [10:21<06:57,  2.43it/s, loss=0.000114, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  60%|██████    | 1520/2524 [10:25<06:53,  2.43it/s, loss=0.000114, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  60%|██████    | 1520/2524 [10:25<06:53,  2.43it/s, loss=0.000237, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  61%|██████    | 1530/2524 [10:29<06:49,  2.43it/s, loss=0.000237, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  61%|██████    | 1530/2524 [10:29<06:49,  2.43it/s, loss=0.000738, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  61%|██████    | 1540/2524 [10:33<06:45,  2.43it/s, loss=0.000738, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  61%|██████    | 1540/2524 [10:33<06:45,  2.43it/s, loss=0.00178, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  61%|██████▏   | 1550/2524 [10:38<06:40,  2.43it/s, loss=0.00178, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  61%|██████▏   | 1550/2524 [10:38<06:40,  2.43it/s, loss=0.0019, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  62%|██████▏   | 1560/2524 [10:42<06:36,  2.43it/s, loss=0.0019, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  62%|██████▏   | 1560/2524 [10:42<06:36,  2.43it/s, loss=0.00106, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  62%|██████▏   | 1570/2524 [10:46<06:32,  2.43it/s, loss=0.00106, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  62%|██████▏   | 1570/2524 [10:46<06:32,  2.43it/s, loss=0.000604, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  63%|██████▎   | 1580/2524 [10:50<06:28,  2.43it/s, loss=0.000604, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  63%|██████▎   | 1580/2524 [10:50<06:28,  2.43it/s, loss=0.000442, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  63%|██████▎   | 1590/2524 [10:54<06:24,  2.43it/s, loss=0.000442, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  63%|██████▎   | 1590/2524 [10:54<06:24,  2.43it/s, loss=0.000293, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  63%|██████▎   | 1600/2524 [10:58<06:20,  2.43it/s, loss=0.000293, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  63%|██████▎   | 1600/2524 [10:58<06:20,  2.43it/s, loss=0.000298, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  64%|██████▍   | 1610/2524 [11:02<06:16,  2.43it/s, loss=0.000298, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  64%|██████▍   | 1610/2524 [11:02<06:16,  2.43it/s, loss=0.000645, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  64%|██████▍   | 1620/2524 [11:06<06:12,  2.43it/s, loss=0.000645, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  64%|██████▍   | 1620/2524 [11:06<06:12,  2.43it/s, loss=0.000583, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  65%|██████▍   | 1630/2524 [11:10<06:07,  2.43it/s, loss=0.000583, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  65%|██████▍   | 1630/2524 [11:10<06:07,  2.43it/s, loss=0.000484, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  65%|██████▍   | 1640/2524 [11:15<06:03,  2.43it/s, loss=0.000484, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  65%|██████▍   | 1640/2524 [11:15<06:03,  2.43it/s, loss=0.000468, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  65%|██████▌   | 1650/2524 [11:19<05:59,  2.43it/s, loss=0.000468, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  65%|██████▌   | 1650/2524 [11:19<05:59,  2.43it/s, loss=0.000324, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  66%|██████▌   | 1660/2524 [11:23<05:55,  2.43it/s, loss=0.000324, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  66%|██████▌   | 1660/2524 [11:23<05:55,  2.43it/s, loss=0.000365, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  66%|██████▌   | 1670/2524 [11:27<05:51,  2.43it/s, loss=0.000365, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  66%|██████▌   | 1670/2524 [11:27<05:51,  2.43it/s, loss=0.00138, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  67%|██████▋   | 1680/2524 [11:31<05:47,  2.43it/s, loss=0.00138, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  67%|██████▋   | 1680/2524 [11:31<05:47,  2.43it/s, loss=0.00145, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  67%|██████▋   | 1690/2524 [11:35<05:43,  2.43it/s, loss=0.00145, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  67%|██████▋   | 1690/2524 [11:35<05:43,  2.43it/s, loss=0.000336, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  67%|██████▋   | 1700/2524 [11:39<05:39,  2.43it/s, loss=0.000336, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  67%|██████▋   | 1700/2524 [11:39<05:39,  2.43it/s, loss=0.000286, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  68%|██████▊   | 1710/2524 [11:43<05:35,  2.43it/s, loss=0.000286, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  68%|██████▊   | 1710/2524 [11:43<05:35,  2.43it/s, loss=0.00129, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  68%|██████▊   | 1720/2524 [11:47<05:30,  2.43it/s, loss=0.00129, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  68%|██████▊   | 1720/2524 [11:47<05:30,  2.43it/s, loss=0.00136, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  69%|██████▊   | 1730/2524 [11:52<05:26,  2.43it/s, loss=0.00136, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  69%|██████▊   | 1730/2524 [11:52<05:26,  2.43it/s, loss=0.00054, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  69%|██████▉   | 1740/2524 [11:56<05:22,  2.43it/s, loss=0.00054, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  69%|██████▉   | 1740/2524 [11:56<05:22,  2.43it/s, loss=0.000513, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  69%|██████▉   | 1750/2524 [12:00<05:18,  2.43it/s, loss=0.000513, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  69%|██████▉   | 1750/2524 [12:00<05:18,  2.43it/s, loss=0.000558, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  70%|██████▉   | 1760/2524 [12:04<05:14,  2.43it/s, loss=0.000558, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  70%|██████▉   | 1760/2524 [12:04<05:14,  2.43it/s, loss=0.00121, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  70%|███████   | 1770/2524 [12:08<05:10,  2.43it/s, loss=0.00121, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  70%|███████   | 1770/2524 [12:08<05:10,  2.43it/s, loss=0.00107, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  71%|███████   | 1780/2524 [12:12<05:06,  2.43it/s, loss=0.00107, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  71%|███████   | 1780/2524 [12:12<05:06,  2.43it/s, loss=0.000296, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  71%|███████   | 1790/2524 [12:16<05:02,  2.43it/s, loss=0.000296, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  71%|███████   | 1790/2524 [12:16<05:02,  2.43it/s, loss=0.00103, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  71%|███████▏  | 1800/2524 [12:20<04:58,  2.43it/s, loss=0.00103, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  71%|███████▏  | 1800/2524 [12:20<04:58,  2.43it/s, loss=0.00118, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  72%|███████▏  | 1810/2524 [12:24<04:53,  2.43it/s, loss=0.00118, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  72%|███████▏  | 1810/2524 [12:25<04:53,  2.43it/s, loss=0.00064, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  72%|███████▏  | 1820/2524 [12:29<04:49,  2.43it/s, loss=0.00064, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  72%|███████▏  | 1820/2524 [12:29<04:49,  2.43it/s, loss=0.000438, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  73%|███████▎  | 1830/2524 [12:33<04:45,  2.43it/s, loss=0.000438, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  73%|███████▎  | 1830/2524 [12:33<04:45,  2.43it/s, loss=0.000324, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  73%|███████▎  | 1840/2524 [12:37<04:41,  2.43it/s, loss=0.000324, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  73%|███████▎  | 1840/2524 [12:37<04:41,  2.43it/s, loss=0.000457, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  73%|███████▎  | 1850/2524 [12:41<04:37,  2.43it/s, loss=0.000457, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  73%|███████▎  | 1850/2524 [12:41<04:37,  2.43it/s, loss=0.000865, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  74%|███████▎  | 1860/2524 [12:45<04:33,  2.43it/s, loss=0.000865, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  74%|███████▎  | 1860/2524 [12:45<04:33,  2.43it/s, loss=0.000936, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  74%|███████▍  | 1870/2524 [12:49<04:29,  2.43it/s, loss=0.000936, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  74%|███████▍  | 1870/2524 [12:49<04:29,  2.43it/s, loss=0.000432, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  74%|███████▍  | 1880/2524 [12:53<04:25,  2.43it/s, loss=0.000432, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  74%|███████▍  | 1880/2524 [12:53<04:25,  2.43it/s, loss=0.000573, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  75%|███████▍  | 1890/2524 [12:57<04:20,  2.43it/s, loss=0.000573, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  75%|███████▍  | 1890/2524 [12:57<04:20,  2.43it/s, loss=0.000664, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  75%|███████▌  | 1900/2524 [13:02<04:16,  2.43it/s, loss=0.000664, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  75%|███████▌  | 1900/2524 [13:02<04:16,  2.43it/s, loss=0.000367, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  76%|███████▌  | 1910/2524 [13:06<04:12,  2.43it/s, loss=0.000367, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  76%|███████▌  | 1910/2524 [13:06<04:12,  2.43it/s, loss=0.000841, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  76%|███████▌  | 1920/2524 [13:10<04:08,  2.43it/s, loss=0.000841, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  76%|███████▌  | 1920/2524 [13:10<04:08,  2.43it/s, loss=0.00082, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  76%|███████▋  | 1930/2524 [13:14<04:04,  2.43it/s, loss=0.00082, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  76%|███████▋  | 1930/2524 [13:14<04:04,  2.43it/s, loss=0.000159, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  77%|███████▋  | 1940/2524 [13:18<04:00,  2.43it/s, loss=0.000159, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  77%|███████▋  | 1940/2524 [13:18<04:00,  2.43it/s, loss=0.000339, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  77%|███████▋  | 1950/2524 [13:22<03:56,  2.43it/s, loss=0.000339, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  77%|███████▋  | 1950/2524 [13:22<03:56,  2.43it/s, loss=0.000366, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  78%|███████▊  | 1960/2524 [13:26<03:52,  2.43it/s, loss=0.000366, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  78%|███████▊  | 1960/2524 [13:26<03:52,  2.43it/s, loss=0.00081, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  78%|███████▊  | 1970/2524 [13:30<03:47,  2.43it/s, loss=0.00081, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  78%|███████▊  | 1970/2524 [13:30<03:47,  2.43it/s, loss=0.000949, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  78%|███████▊  | 1980/2524 [13:34<03:43,  2.43it/s, loss=0.000949, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  78%|███████▊  | 1980/2524 [13:34<03:43,  2.43it/s, loss=0.00033, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  79%|███████▉  | 1990/2524 [13:38<03:39,  2.43it/s, loss=0.00033, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  79%|███████▉  | 1990/2524 [13:38<03:39,  2.43it/s, loss=0.000331, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  79%|███████▉  | 2000/2524 [13:43<03:35,  2.43it/s, loss=0.000331, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  79%|███████▉  | 2000/2524 [13:43<03:35,  2.43it/s, loss=0.000461, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  80%|███████▉  | 2010/2524 [13:47<03:31,  2.43it/s, loss=0.000461, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  80%|███████▉  | 2010/2524 [13:47<03:31,  2.43it/s, loss=0.00052, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  80%|████████  | 2020/2524 [13:51<03:27,  2.43it/s, loss=0.00052, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  80%|████████  | 2020/2524 [13:51<03:27,  2.43it/s, loss=0.000776, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  80%|████████  | 2030/2524 [13:55<03:23,  2.43it/s, loss=0.000776, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  80%|████████  | 2030/2524 [13:55<03:23,  2.43it/s, loss=0.000859, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  81%|████████  | 2040/2524 [13:59<03:19,  2.43it/s, loss=0.000859, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  81%|████████  | 2040/2524 [13:59<03:19,  2.43it/s, loss=0.000671, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  81%|████████  | 2050/2524 [14:03<03:15,  2.43it/s, loss=0.000671, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  81%|████████  | 2050/2524 [14:03<03:15,  2.43it/s, loss=0.000383, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  82%|████████▏ | 2060/2524 [14:07<03:10,  2.43it/s, loss=0.000383, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  82%|████████▏ | 2060/2524 [14:07<03:10,  2.43it/s, loss=0.000318, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  82%|████████▏ | 2070/2524 [14:11<03:06,  2.43it/s, loss=0.000318, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  82%|████████▏ | 2070/2524 [14:11<03:06,  2.43it/s, loss=0.00146, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  82%|████████▏ | 2080/2524 [14:15<03:02,  2.43it/s, loss=0.00146, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  82%|████████▏ | 2080/2524 [14:15<03:02,  2.43it/s, loss=0.00143, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  83%|████████▎ | 2090/2524 [14:20<02:58,  2.43it/s, loss=0.00143, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  83%|████████▎ | 2090/2524 [14:20<02:58,  2.43it/s, loss=0.000903, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  83%|████████▎ | 2100/2524 [14:24<02:54,  2.43it/s, loss=0.000903, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  83%|████████▎ | 2100/2524 [14:24<02:54,  2.43it/s, loss=0.000802, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  84%|████████▎ | 2110/2524 [14:28<02:50,  2.43it/s, loss=0.000802, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  84%|████████▎ | 2110/2524 [14:28<02:50,  2.43it/s, loss=0.000299, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  84%|████████▍ | 2120/2524 [14:32<02:46,  2.43it/s, loss=0.000299, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  84%|████████▍ | 2120/2524 [14:32<02:46,  2.43it/s, loss=0.00165, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  84%|████████▍ | 2130/2524 [14:36<02:42,  2.43it/s, loss=0.00165, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  84%|████████▍ | 2130/2524 [14:36<02:42,  2.43it/s, loss=0.00185, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  85%|████████▍ | 2140/2524 [14:40<02:38,  2.43it/s, loss=0.00185, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  85%|████████▍ | 2140/2524 [14:40<02:38,  2.43it/s, loss=0.000613, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  85%|████████▌ | 2150/2524 [14:44<02:33,  2.43it/s, loss=0.000613, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  85%|████████▌ | 2150/2524 [14:44<02:33,  2.43it/s, loss=0.00106, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  86%|████████▌ | 2160/2524 [14:48<02:29,  2.43it/s, loss=0.00106, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  86%|████████▌ | 2160/2524 [14:48<02:29,  2.43it/s, loss=0.00149, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  86%|████████▌ | 2170/2524 [14:53<02:25,  2.43it/s, loss=0.00149, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  86%|████████▌ | 2170/2524 [14:53<02:25,  2.43it/s, loss=0.000838, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  86%|████████▋ | 2180/2524 [14:57<02:21,  2.43it/s, loss=0.000838, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  86%|████████▋ | 2180/2524 [14:57<02:21,  2.43it/s, loss=0.000859, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  87%|████████▋ | 2190/2524 [15:01<02:17,  2.43it/s, loss=0.000859, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  87%|████████▋ | 2190/2524 [15:01<02:17,  2.43it/s, loss=0.00173, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  87%|████████▋ | 2200/2524 [15:05<02:13,  2.43it/s, loss=0.00173, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  87%|████████▋ | 2200/2524 [15:05<02:13,  2.43it/s, loss=0.00114, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  88%|████████▊ | 2210/2524 [15:09<02:09,  2.43it/s, loss=0.00114, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  88%|████████▊ | 2210/2524 [15:09<02:09,  2.43it/s, loss=0.000354, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  88%|████████▊ | 2220/2524 [15:13<02:05,  2.43it/s, loss=0.000354, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  88%|████████▊ | 2220/2524 [15:13<02:05,  2.43it/s, loss=0.00125, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  88%|████████▊ | 2230/2524 [15:17<02:00,  2.43it/s, loss=0.00125, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  88%|████████▊ | 2230/2524 [15:17<02:00,  2.43it/s, loss=0.00124, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  89%|████████▊ | 2240/2524 [15:21<01:56,  2.43it/s, loss=0.00124, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  89%|████████▊ | 2240/2524 [15:21<01:56,  2.43it/s, loss=0.000353, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  89%|████████▉ | 2250/2524 [15:26<01:52,  2.43it/s, loss=0.000353, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  89%|████████▉ | 2250/2524 [15:26<01:52,  2.43it/s, loss=0.000966, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  90%|████████▉ | 2260/2524 [15:30<01:48,  2.43it/s, loss=0.000966, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  90%|████████▉ | 2260/2524 [15:30<01:48,  2.43it/s, loss=0.00242, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  90%|████████▉ | 2270/2524 [15:34<01:44,  2.43it/s, loss=0.00242, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  90%|████████▉ | 2270/2524 [15:34<01:44,  2.43it/s, loss=0.00166, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  90%|█████████ | 2280/2524 [15:38<01:40,  2.43it/s, loss=0.00166, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  90%|█████████ | 2280/2524 [15:38<01:40,  2.43it/s, loss=0.000352, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  91%|█████████ | 2290/2524 [15:42<01:36,  2.43it/s, loss=0.000352, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  91%|█████████ | 2290/2524 [15:42<01:36,  2.43it/s, loss=0.000397, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  91%|█████████ | 2300/2524 [15:46<01:32,  2.43it/s, loss=0.000397, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  91%|█████████ | 2300/2524 [15:46<01:32,  2.43it/s, loss=0.0011, v_num=3, val_loss=0.306, val_f1=63.60]  Epoch 17:  92%|█████████▏| 2310/2524 [15:50<01:28,  2.43it/s, loss=0.0011, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  92%|█████████▏| 2310/2524 [15:50<01:28,  2.43it/s, loss=0.00117, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  92%|█████████▏| 2320/2524 [15:54<01:23,  2.43it/s, loss=0.00117, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  92%|█████████▏| 2320/2524 [15:54<01:23,  2.43it/s, loss=0.000986, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  92%|█████████▏| 2330/2524 [15:58<01:19,  2.43it/s, loss=0.000986, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  92%|█████████▏| 2330/2524 [15:58<01:19,  2.43it/s, loss=0.00127, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  93%|█████████▎| 2340/2524 [16:03<01:15,  2.43it/s, loss=0.00127, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  93%|█████████▎| 2340/2524 [16:03<01:15,  2.43it/s, loss=0.00115, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  93%|█████████▎| 2350/2524 [16:07<01:11,  2.43it/s, loss=0.00115, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  93%|█████████▎| 2350/2524 [16:07<01:11,  2.43it/s, loss=0.00121, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  94%|█████████▎| 2360/2524 [16:11<01:07,  2.43it/s, loss=0.00121, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  94%|█████████▎| 2360/2524 [16:11<01:07,  2.43it/s, loss=0.00144, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  94%|█████████▍| 2370/2524 [16:15<01:03,  2.43it/s, loss=0.00144, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  94%|█████████▍| 2370/2524 [16:15<01:03,  2.43it/s, loss=0.00132, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  94%|█████████▍| 2380/2524 [16:19<00:59,  2.43it/s, loss=0.00132, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  94%|█████████▍| 2380/2524 [16:19<00:59,  2.43it/s, loss=0.000634, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  95%|█████████▍| 2390/2524 [16:23<00:55,  2.43it/s, loss=0.000634, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  95%|█████████▍| 2390/2524 [16:23<00:55,  2.43it/s, loss=0.00042, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  95%|█████████▌| 2400/2524 [16:27<00:51,  2.43it/s, loss=0.00042, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  95%|█████████▌| 2400/2524 [16:27<00:51,  2.43it/s, loss=0.00059, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  95%|█████████▌| 2410/2524 [16:31<00:46,  2.43it/s, loss=0.00059, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  95%|█████████▌| 2410/2524 [16:31<00:46,  2.43it/s, loss=0.000582, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  96%|█████████▌| 2420/2524 [16:36<00:42,  2.43it/s, loss=0.000582, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  96%|█████████▌| 2420/2524 [16:36<00:42,  2.43it/s, loss=0.00034, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 17:  96%|█████████▋| 2430/2524 [16:40<00:38,  2.43it/s, loss=0.00034, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  96%|█████████▋| 2430/2524 [16:40<00:38,  2.43it/s, loss=0.00052, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  97%|█████████▋| 2440/2524 [16:44<00:34,  2.43it/s, loss=0.00052, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  97%|█████████▋| 2440/2524 [16:44<00:34,  2.43it/s, loss=0.00104, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  97%|█████████▋| 2450/2524 [16:48<00:30,  2.43it/s, loss=0.00104, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  97%|█████████▋| 2450/2524 [16:48<00:30,  2.43it/s, loss=0.00153, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  97%|█████████▋| 2460/2524 [16:52<00:26,  2.43it/s, loss=0.00153, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  97%|█████████▋| 2460/2524 [16:52<00:26,  2.43it/s, loss=0.00273, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  98%|█████████▊| 2470/2524 [16:56<00:22,  2.43it/s, loss=0.00273, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  98%|█████████▊| 2470/2524 [16:56<00:22,  2.43it/s, loss=0.00266, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  98%|█████████▊| 2480/2524 [17:00<00:18,  2.43it/s, loss=0.00266, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  98%|█████████▊| 2480/2524 [17:00<00:18,  2.43it/s, loss=0.00118, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  99%|█████████▊| 2490/2524 [17:04<00:13,  2.43it/s, loss=0.00118, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  99%|█████████▊| 2490/2524 [17:04<00:13,  2.43it/s, loss=0.000459, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  99%|█████████▉| 2500/2524 [17:08<00:09,  2.43it/s, loss=0.000459, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  99%|█████████▉| 2500/2524 [17:09<00:09,  2.43it/s, loss=0.000259, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  99%|█████████▉| 2510/2524 [17:13<00:05,  2.43it/s, loss=0.000259, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:  99%|█████████▉| 2510/2524 [17:13<00:05,  2.43it/s, loss=0.000604, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17: 100%|█████████▉| 2520/2524 [17:17<00:01,  2.43it/s, loss=0.000604, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17: 100%|█████████▉| 2520/2524 [17:17<00:01,  2.43it/s, loss=0.000579, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17: 100%|██████████| 2524/2524 [17:18<00:00,  2.43it/s, loss=0.000579, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17: 100%|██████████| 2524/2524 [17:18<00:00,  2.43it/s, loss=0.000513, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17: 100%|██████████| 2524/2524 [17:18<00:00,  2.43it/s, loss=0.000513, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 17:   0%|          | 0/2524 [00:00<?, ?it/s, loss=0.000513, v_num=3, val_loss=0.306, val_f1=63.60]           Epoch 18:   0%|          | 0/2524 [00:00<?, ?it/s, loss=0.000513, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   0%|          | 10/2524 [00:04<18:53,  2.22it/s, loss=0.000513, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   0%|          | 10/2524 [00:04<18:56,  2.21it/s, loss=0.000234, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   1%|          | 20/2524 [00:08<18:03,  2.31it/s, loss=0.000234, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   1%|          | 20/2524 [00:08<18:05,  2.31it/s, loss=0.000376, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   1%|          | 30/2524 [00:12<17:39,  2.35it/s, loss=0.000376, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   1%|          | 30/2524 [00:12<17:40,  2.35it/s, loss=0.000476, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   2%|▏         | 40/2524 [00:16<17:25,  2.38it/s, loss=0.000476, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   2%|▏         | 40/2524 [00:16<17:26,  2.37it/s, loss=0.00059, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:   2%|▏         | 50/2524 [00:20<17:15,  2.39it/s, loss=0.00059, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   2%|▏         | 50/2524 [00:20<17:15,  2.39it/s, loss=0.000648, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   2%|▏         | 60/2524 [00:25<17:07,  2.40it/s, loss=0.000648, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   2%|▏         | 60/2524 [00:25<17:07,  2.40it/s, loss=0.000383, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   3%|▎         | 70/2524 [00:29<17:06,  2.39it/s, loss=0.000383, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   3%|▎         | 70/2524 [00:29<17:06,  2.39it/s, loss=0.000264, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   3%|▎         | 80/2524 [00:33<16:59,  2.40it/s, loss=0.000264, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   3%|▎         | 80/2524 [00:33<16:59,  2.40it/s, loss=0.000388, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   4%|▎         | 90/2524 [00:37<16:52,  2.40it/s, loss=0.000388, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   4%|▎         | 90/2524 [00:37<16:53,  2.40it/s, loss=0.000498, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   4%|▍         | 100/2524 [00:41<16:46,  2.41it/s, loss=0.000498, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   4%|▍         | 100/2524 [00:41<16:47,  2.41it/s, loss=0.000824, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   4%|▍         | 110/2524 [00:45<16:41,  2.41it/s, loss=0.000824, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   4%|▍         | 110/2524 [00:45<16:41,  2.41it/s, loss=0.000762, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   5%|▍         | 120/2524 [00:49<16:37,  2.41it/s, loss=0.000762, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   5%|▍         | 120/2524 [00:49<16:37,  2.41it/s, loss=0.000513, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   5%|▌         | 130/2524 [00:53<16:32,  2.41it/s, loss=0.000513, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   5%|▌         | 130/2524 [00:53<16:32,  2.41it/s, loss=0.0019, v_num=3, val_loss=0.306, val_f1=63.60]  Epoch 18:   6%|▌         | 140/2524 [00:57<16:27,  2.42it/s, loss=0.0019, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   6%|▌         | 140/2524 [00:57<16:27,  2.41it/s, loss=0.00172, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   6%|▌         | 150/2524 [01:02<16:22,  2.42it/s, loss=0.00172, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   6%|▌         | 150/2524 [01:02<16:22,  2.42it/s, loss=0.000507, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   6%|▋         | 160/2524 [01:06<16:17,  2.42it/s, loss=0.000507, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   6%|▋         | 160/2524 [01:06<16:17,  2.42it/s, loss=0.000944, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   7%|▋         | 170/2524 [01:10<16:14,  2.41it/s, loss=0.000944, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   7%|▋         | 170/2524 [01:10<16:14,  2.41it/s, loss=0.000684, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   7%|▋         | 180/2524 [01:14<16:10,  2.42it/s, loss=0.000684, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   7%|▋         | 180/2524 [01:14<16:10,  2.42it/s, loss=0.000439, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   8%|▊         | 190/2524 [01:18<16:05,  2.42it/s, loss=0.000439, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   8%|▊         | 190/2524 [01:18<16:05,  2.42it/s, loss=0.000667, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   8%|▊         | 200/2524 [01:22<16:00,  2.42it/s, loss=0.000667, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   8%|▊         | 200/2524 [01:22<16:00,  2.42it/s, loss=0.000957, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   8%|▊         | 210/2524 [01:26<15:56,  2.42it/s, loss=0.000957, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   8%|▊         | 210/2524 [01:26<15:56,  2.42it/s, loss=0.000856, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   9%|▊         | 220/2524 [01:30<15:52,  2.42it/s, loss=0.000856, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   9%|▊         | 220/2524 [01:30<15:52,  2.42it/s, loss=0.000467, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   9%|▉         | 230/2524 [01:35<15:47,  2.42it/s, loss=0.000467, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   9%|▉         | 230/2524 [01:35<15:47,  2.42it/s, loss=0.00042, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  10%|▉         | 240/2524 [01:39<15:43,  2.42it/s, loss=0.00042, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  10%|▉         | 240/2524 [01:39<15:43,  2.42it/s, loss=0.000822, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  10%|▉         | 250/2524 [01:43<15:38,  2.42it/s, loss=0.000822, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  10%|▉         | 250/2524 [01:43<15:38,  2.42it/s, loss=0.00132, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  10%|█         | 260/2524 [01:47<15:34,  2.42it/s, loss=0.00132, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  10%|█         | 260/2524 [01:47<15:34,  2.42it/s, loss=0.000838, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  11%|█         | 270/2524 [01:51<15:31,  2.42it/s, loss=0.000838, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  11%|█         | 270/2524 [01:51<15:31,  2.42it/s, loss=0.000364, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  11%|█         | 280/2524 [01:55<15:26,  2.42it/s, loss=0.000364, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  11%|█         | 280/2524 [01:55<15:26,  2.42it/s, loss=0.000364, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  11%|█▏        | 290/2524 [01:59<15:22,  2.42it/s, loss=0.000364, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  11%|█▏        | 290/2524 [01:59<15:22,  2.42it/s, loss=0.000652, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  12%|█▏        | 300/2524 [02:03<15:17,  2.42it/s, loss=0.000652, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  12%|█▏        | 300/2524 [02:03<15:17,  2.42it/s, loss=0.000632, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  12%|█▏        | 310/2524 [02:07<15:13,  2.42it/s, loss=0.000632, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  12%|█▏        | 310/2524 [02:07<15:13,  2.42it/s, loss=0.00044, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  13%|█▎        | 320/2524 [02:12<15:09,  2.42it/s, loss=0.00044, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  13%|█▎        | 320/2524 [02:12<15:09,  2.42it/s, loss=0.000499, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  13%|█▎        | 330/2524 [02:16<15:05,  2.42it/s, loss=0.000499, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  13%|█▎        | 330/2524 [02:16<15:05,  2.42it/s, loss=0.000457, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  13%|█▎        | 340/2524 [02:20<15:00,  2.42it/s, loss=0.000457, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  13%|█▎        | 340/2524 [02:20<15:00,  2.42it/s, loss=0.000607, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  14%|█▍        | 350/2524 [02:24<14:56,  2.43it/s, loss=0.000607, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  14%|█▍        | 350/2524 [02:24<14:56,  2.42it/s, loss=0.000764, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  14%|█▍        | 360/2524 [02:28<14:52,  2.43it/s, loss=0.000764, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  14%|█▍        | 360/2524 [02:28<14:52,  2.43it/s, loss=0.000917, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  15%|█▍        | 370/2524 [02:32<14:48,  2.42it/s, loss=0.000917, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  15%|█▍        | 370/2524 [02:32<14:48,  2.42it/s, loss=0.000645, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  15%|█▌        | 380/2524 [02:36<14:44,  2.42it/s, loss=0.000645, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  15%|█▌        | 380/2524 [02:36<14:44,  2.42it/s, loss=0.000436, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  15%|█▌        | 390/2524 [02:40<14:40,  2.42it/s, loss=0.000436, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  15%|█▌        | 390/2524 [02:40<14:40,  2.42it/s, loss=0.000977, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  16%|█▌        | 400/2524 [02:44<14:35,  2.43it/s, loss=0.000977, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  16%|█▌        | 400/2524 [02:44<14:35,  2.42it/s, loss=0.000925, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  16%|█▌        | 410/2524 [02:49<14:31,  2.43it/s, loss=0.000925, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  16%|█▌        | 410/2524 [02:49<14:31,  2.43it/s, loss=0.000305, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  17%|█▋        | 420/2524 [02:53<14:27,  2.43it/s, loss=0.000305, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  17%|█▋        | 420/2524 [02:53<14:27,  2.43it/s, loss=0.000197, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  17%|█▋        | 430/2524 [02:57<14:23,  2.43it/s, loss=0.000197, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  17%|█▋        | 430/2524 [02:57<14:23,  2.43it/s, loss=0.000209, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  17%|█▋        | 440/2524 [03:01<14:18,  2.43it/s, loss=0.000209, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  17%|█▋        | 440/2524 [03:01<14:19,  2.43it/s, loss=0.000714, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  18%|█▊        | 450/2524 [03:05<14:14,  2.43it/s, loss=0.000714, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  18%|█▊        | 450/2524 [03:05<14:14,  2.43it/s, loss=0.00123, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  18%|█▊        | 460/2524 [03:09<14:10,  2.43it/s, loss=0.00123, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  18%|█▊        | 460/2524 [03:09<14:10,  2.43it/s, loss=0.000821, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  19%|█▊        | 470/2524 [03:13<14:07,  2.42it/s, loss=0.000821, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  19%|█▊        | 470/2524 [03:13<14:07,  2.42it/s, loss=0.000259, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  19%|█▉        | 480/2524 [03:17<14:02,  2.43it/s, loss=0.000259, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  19%|█▉        | 480/2524 [03:17<14:02,  2.43it/s, loss=0.000209, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  19%|█▉        | 490/2524 [03:22<13:58,  2.43it/s, loss=0.000209, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  19%|█▉        | 490/2524 [03:22<13:58,  2.43it/s, loss=0.00045, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  20%|█▉        | 500/2524 [03:26<13:54,  2.43it/s, loss=0.00045, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  20%|█▉        | 500/2524 [03:26<13:54,  2.43it/s, loss=0.000402, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  20%|██        | 510/2524 [03:30<13:50,  2.43it/s, loss=0.000402, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  20%|██        | 510/2524 [03:30<13:50,  2.43it/s, loss=0.000836, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  21%|██        | 520/2524 [03:34<13:46,  2.43it/s, loss=0.000836, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  21%|██        | 520/2524 [03:34<13:46,  2.43it/s, loss=0.000902, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  21%|██        | 530/2524 [03:38<13:41,  2.43it/s, loss=0.000902, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  21%|██        | 530/2524 [03:38<13:41,  2.43it/s, loss=0.000359, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  21%|██▏       | 540/2524 [03:42<13:37,  2.43it/s, loss=0.000359, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  21%|██▏       | 540/2524 [03:42<13:37,  2.43it/s, loss=0.00126, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  22%|██▏       | 550/2524 [03:46<13:33,  2.43it/s, loss=0.00126, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  22%|██▏       | 550/2524 [03:46<13:33,  2.43it/s, loss=0.0013, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  22%|██▏       | 560/2524 [03:50<13:29,  2.43it/s, loss=0.0013, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  22%|██▏       | 560/2524 [03:50<13:29,  2.43it/s, loss=0.000486, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  23%|██▎       | 570/2524 [03:55<13:25,  2.43it/s, loss=0.000486, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  23%|██▎       | 570/2524 [03:55<13:25,  2.43it/s, loss=0.000346, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  23%|██▎       | 580/2524 [03:59<13:21,  2.43it/s, loss=0.000346, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  23%|██▎       | 580/2524 [03:59<13:21,  2.43it/s, loss=0.000288, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  23%|██▎       | 590/2524 [04:03<13:17,  2.43it/s, loss=0.000288, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  23%|██▎       | 590/2524 [04:03<13:17,  2.43it/s, loss=0.000403, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  24%|██▍       | 600/2524 [04:07<13:12,  2.43it/s, loss=0.000403, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  24%|██▍       | 600/2524 [04:07<13:12,  2.43it/s, loss=0.000628, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  24%|██▍       | 610/2524 [04:11<13:08,  2.43it/s, loss=0.000628, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  24%|██▍       | 610/2524 [04:11<13:08,  2.43it/s, loss=0.00164, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  25%|██▍       | 620/2524 [04:15<13:04,  2.43it/s, loss=0.00164, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  25%|██▍       | 620/2524 [04:15<13:04,  2.43it/s, loss=0.00164, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  25%|██▍       | 630/2524 [04:19<13:00,  2.43it/s, loss=0.00164, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  25%|██▍       | 630/2524 [04:19<13:00,  2.43it/s, loss=0.000499, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  25%|██▌       | 640/2524 [04:23<12:56,  2.43it/s, loss=0.000499, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  25%|██▌       | 640/2524 [04:23<12:56,  2.43it/s, loss=0.000144, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  26%|██▌       | 650/2524 [04:27<12:52,  2.43it/s, loss=0.000144, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  26%|██▌       | 650/2524 [04:27<12:52,  2.43it/s, loss=0.00118, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  26%|██▌       | 660/2524 [04:31<12:47,  2.43it/s, loss=0.00118, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  26%|██▌       | 660/2524 [04:31<12:47,  2.43it/s, loss=0.0015, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  27%|██▋       | 670/2524 [04:36<12:44,  2.43it/s, loss=0.0015, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  27%|██▋       | 670/2524 [04:36<12:44,  2.43it/s, loss=0.00123, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  27%|██▋       | 680/2524 [04:40<12:39,  2.43it/s, loss=0.00123, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  27%|██▋       | 680/2524 [04:40<12:39,  2.43it/s, loss=0.00109, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  27%|██▋       | 690/2524 [04:44<12:35,  2.43it/s, loss=0.00109, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  27%|██▋       | 690/2524 [04:44<12:35,  2.43it/s, loss=0.000472, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  28%|██▊       | 700/2524 [04:48<12:31,  2.43it/s, loss=0.000472, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  28%|██▊       | 700/2524 [04:48<12:31,  2.43it/s, loss=0.000325, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  28%|██▊       | 710/2524 [04:52<12:27,  2.43it/s, loss=0.000325, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  28%|██▊       | 710/2524 [04:52<12:27,  2.43it/s, loss=0.000344, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  29%|██▊       | 720/2524 [04:56<12:23,  2.43it/s, loss=0.000344, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  29%|██▊       | 720/2524 [04:56<12:23,  2.43it/s, loss=0.000756, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  29%|██▉       | 730/2524 [05:00<12:19,  2.43it/s, loss=0.000756, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  29%|██▉       | 730/2524 [05:00<12:19,  2.43it/s, loss=0.000744, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  29%|██▉       | 740/2524 [05:04<12:14,  2.43it/s, loss=0.000744, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  29%|██▉       | 740/2524 [05:04<12:14,  2.43it/s, loss=0.000631, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  30%|██▉       | 750/2524 [05:08<12:10,  2.43it/s, loss=0.000631, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  30%|██▉       | 750/2524 [05:08<12:10,  2.43it/s, loss=0.00129, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  30%|███       | 760/2524 [05:12<12:06,  2.43it/s, loss=0.00129, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  30%|███       | 760/2524 [05:13<12:06,  2.43it/s, loss=0.00132, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  31%|███       | 770/2524 [05:17<12:02,  2.43it/s, loss=0.00132, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  31%|███       | 770/2524 [05:17<12:02,  2.43it/s, loss=0.00103, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  31%|███       | 780/2524 [05:21<11:58,  2.43it/s, loss=0.00103, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  31%|███       | 780/2524 [05:21<11:58,  2.43it/s, loss=0.0017, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  31%|███▏      | 790/2524 [05:25<11:54,  2.43it/s, loss=0.0017, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  31%|███▏      | 790/2524 [05:25<11:54,  2.43it/s, loss=0.00118, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  32%|███▏      | 800/2524 [05:29<11:50,  2.43it/s, loss=0.00118, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  32%|███▏      | 800/2524 [05:29<11:50,  2.43it/s, loss=0.000402, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  32%|███▏      | 810/2524 [05:33<11:45,  2.43it/s, loss=0.000402, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  32%|███▏      | 810/2524 [05:33<11:45,  2.43it/s, loss=0.000704, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  32%|███▏      | 820/2524 [05:37<11:41,  2.43it/s, loss=0.000704, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  32%|███▏      | 820/2524 [05:37<11:41,  2.43it/s, loss=0.000736, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  33%|███▎      | 830/2524 [05:41<11:37,  2.43it/s, loss=0.000736, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  33%|███▎      | 830/2524 [05:41<11:37,  2.43it/s, loss=0.000658, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  33%|███▎      | 840/2524 [05:45<11:33,  2.43it/s, loss=0.000658, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  33%|███▎      | 840/2524 [05:45<11:33,  2.43it/s, loss=0.000454, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  34%|███▎      | 850/2524 [05:50<11:29,  2.43it/s, loss=0.000454, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  34%|███▎      | 850/2524 [05:50<11:29,  2.43it/s, loss=0.000226, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  34%|███▍      | 860/2524 [05:54<11:25,  2.43it/s, loss=0.000226, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  34%|███▍      | 860/2524 [05:54<11:25,  2.43it/s, loss=0.000241, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  34%|███▍      | 870/2524 [05:58<11:21,  2.43it/s, loss=0.000241, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  34%|███▍      | 870/2524 [05:58<11:21,  2.43it/s, loss=0.000299, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  35%|███▍      | 880/2524 [06:02<11:17,  2.43it/s, loss=0.000299, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  35%|███▍      | 880/2524 [06:02<11:17,  2.43it/s, loss=0.000335, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  35%|███▌      | 890/2524 [06:06<11:13,  2.43it/s, loss=0.000335, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  35%|███▌      | 890/2524 [06:06<11:13,  2.43it/s, loss=0.00057, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  36%|███▌      | 900/2524 [06:10<11:08,  2.43it/s, loss=0.00057, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  36%|███▌      | 900/2524 [06:10<11:08,  2.43it/s, loss=0.00118, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  36%|███▌      | 910/2524 [06:14<11:04,  2.43it/s, loss=0.00118, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  36%|███▌      | 910/2524 [06:14<11:04,  2.43it/s, loss=0.00125, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  36%|███▋      | 920/2524 [06:18<11:00,  2.43it/s, loss=0.00125, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  36%|███▋      | 920/2524 [06:18<11:00,  2.43it/s, loss=0.00067, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  37%|███▋      | 930/2524 [06:23<10:56,  2.43it/s, loss=0.00067, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  37%|███▋      | 930/2524 [06:23<10:56,  2.43it/s, loss=0.000587, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  37%|███▋      | 940/2524 [06:27<10:52,  2.43it/s, loss=0.000587, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  37%|███▋      | 940/2524 [06:27<10:52,  2.43it/s, loss=0.000515, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  38%|███▊      | 950/2524 [06:31<10:48,  2.43it/s, loss=0.000515, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  38%|███▊      | 950/2524 [06:31<10:48,  2.43it/s, loss=0.000344, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  38%|███▊      | 960/2524 [06:35<10:44,  2.43it/s, loss=0.000344, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  38%|███▊      | 960/2524 [06:35<10:44,  2.43it/s, loss=0.00097, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  38%|███▊      | 970/2524 [06:39<10:40,  2.43it/s, loss=0.00097, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  38%|███▊      | 970/2524 [06:39<10:40,  2.43it/s, loss=0.000888, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  39%|███▉      | 980/2524 [06:43<10:36,  2.43it/s, loss=0.000888, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  39%|███▉      | 980/2524 [06:43<10:36,  2.43it/s, loss=0.00023, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  39%|███▉      | 990/2524 [06:47<10:31,  2.43it/s, loss=0.00023, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  39%|███▉      | 990/2524 [06:47<10:31,  2.43it/s, loss=0.000302, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  40%|███▉      | 1000/2524 [06:51<10:27,  2.43it/s, loss=0.000302, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  40%|███▉      | 1000/2524 [06:51<10:27,  2.43it/s, loss=0.000583, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  40%|████      | 1010/2524 [06:55<10:23,  2.43it/s, loss=0.000583, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  40%|████      | 1010/2524 [06:55<10:23,  2.43it/s, loss=0.00155, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  40%|████      | 1020/2524 [07:00<10:19,  2.43it/s, loss=0.00155, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  40%|████      | 1020/2524 [07:00<10:19,  2.43it/s, loss=0.00167, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  41%|████      | 1030/2524 [07:04<10:15,  2.43it/s, loss=0.00167, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  41%|████      | 1030/2524 [07:04<10:15,  2.43it/s, loss=0.000636, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  41%|████      | 1040/2524 [07:08<10:11,  2.43it/s, loss=0.000636, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  41%|████      | 1040/2524 [07:08<10:11,  2.43it/s, loss=0.00039, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  42%|████▏     | 1050/2524 [07:12<10:06,  2.43it/s, loss=0.00039, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  42%|████▏     | 1050/2524 [07:12<10:06,  2.43it/s, loss=0.0006, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  42%|████▏     | 1060/2524 [07:16<10:02,  2.43it/s, loss=0.0006, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  42%|████▏     | 1060/2524 [07:16<10:02,  2.43it/s, loss=0.000592, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  42%|████▏     | 1070/2524 [07:20<09:58,  2.43it/s, loss=0.000592, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  42%|████▏     | 1070/2524 [07:20<09:58,  2.43it/s, loss=0.00133, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  43%|████▎     | 1080/2524 [07:24<09:54,  2.43it/s, loss=0.00133, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  43%|████▎     | 1080/2524 [07:24<09:54,  2.43it/s, loss=0.00164, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  43%|████▎     | 1090/2524 [07:28<09:50,  2.43it/s, loss=0.00164, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  43%|████▎     | 1090/2524 [07:28<09:50,  2.43it/s, loss=0.00166, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  44%|████▎     | 1100/2524 [07:33<09:46,  2.43it/s, loss=0.00166, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  44%|████▎     | 1100/2524 [07:33<09:46,  2.43it/s, loss=0.00114, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  44%|████▍     | 1110/2524 [07:37<09:42,  2.43it/s, loss=0.00114, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  44%|████▍     | 1110/2524 [07:37<09:42,  2.43it/s, loss=0.000386, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  44%|████▍     | 1120/2524 [07:41<09:38,  2.43it/s, loss=0.000386, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  44%|████▍     | 1120/2524 [07:41<09:38,  2.43it/s, loss=0.00067, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  45%|████▍     | 1130/2524 [07:45<09:34,  2.43it/s, loss=0.00067, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  45%|████▍     | 1130/2524 [07:45<09:34,  2.43it/s, loss=0.000902, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  45%|████▌     | 1140/2524 [07:49<09:29,  2.43it/s, loss=0.000902, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  45%|████▌     | 1140/2524 [07:49<09:29,  2.43it/s, loss=0.000684, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  46%|████▌     | 1150/2524 [07:53<09:25,  2.43it/s, loss=0.000684, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  46%|████▌     | 1150/2524 [07:53<09:25,  2.43it/s, loss=0.00059, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  46%|████▌     | 1160/2524 [07:57<09:21,  2.43it/s, loss=0.00059, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  46%|████▌     | 1160/2524 [07:57<09:21,  2.43it/s, loss=0.000718, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  46%|████▋     | 1170/2524 [08:01<09:17,  2.43it/s, loss=0.000718, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  46%|████▋     | 1170/2524 [08:01<09:17,  2.43it/s, loss=0.000544, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  47%|████▋     | 1180/2524 [08:05<09:13,  2.43it/s, loss=0.000544, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  47%|████▋     | 1180/2524 [08:05<09:13,  2.43it/s, loss=0.000413, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  47%|████▋     | 1190/2524 [08:10<09:09,  2.43it/s, loss=0.000413, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  47%|████▋     | 1190/2524 [08:10<09:09,  2.43it/s, loss=0.000698, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  48%|████▊     | 1200/2524 [08:14<09:05,  2.43it/s, loss=0.000698, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  48%|████▊     | 1200/2524 [08:14<09:05,  2.43it/s, loss=0.00113, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  48%|████▊     | 1210/2524 [08:18<09:01,  2.43it/s, loss=0.00113, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  48%|████▊     | 1210/2524 [08:18<09:01,  2.43it/s, loss=0.00064, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  48%|████▊     | 1220/2524 [08:22<08:56,  2.43it/s, loss=0.00064, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  48%|████▊     | 1220/2524 [08:22<08:56,  2.43it/s, loss=0.000997, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  49%|████▊     | 1230/2524 [08:26<08:52,  2.43it/s, loss=0.000997, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  49%|████▊     | 1230/2524 [08:26<08:52,  2.43it/s, loss=0.00113, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  49%|████▉     | 1240/2524 [08:30<08:48,  2.43it/s, loss=0.00113, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  49%|████▉     | 1240/2524 [08:30<08:48,  2.43it/s, loss=0.000861, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  50%|████▉     | 1250/2524 [08:34<08:44,  2.43it/s, loss=0.000861, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  50%|████▉     | 1250/2524 [08:34<08:44,  2.43it/s, loss=0.000905, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  50%|████▉     | 1260/2524 [08:38<08:40,  2.43it/s, loss=0.000905, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  50%|████▉     | 1260/2524 [08:38<08:40,  2.43it/s, loss=0.000609, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  50%|█████     | 1270/2524 [08:42<08:36,  2.43it/s, loss=0.000609, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  50%|█████     | 1270/2524 [08:43<08:36,  2.43it/s, loss=0.000416, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  51%|█████     | 1280/2524 [08:47<08:32,  2.43it/s, loss=0.000416, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  51%|█████     | 1280/2524 [08:47<08:32,  2.43it/s, loss=0.000595, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  51%|█████     | 1290/2524 [08:51<08:28,  2.43it/s, loss=0.000595, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  51%|█████     | 1290/2524 [08:51<08:28,  2.43it/s, loss=0.00079, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  52%|█████▏    | 1300/2524 [08:55<08:23,  2.43it/s, loss=0.00079, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  52%|█████▏    | 1300/2524 [08:55<08:23,  2.43it/s, loss=0.000376, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  52%|█████▏    | 1310/2524 [08:59<08:19,  2.43it/s, loss=0.000376, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  52%|█████▏    | 1310/2524 [08:59<08:19,  2.43it/s, loss=0.000804, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  52%|█████▏    | 1320/2524 [09:03<08:15,  2.43it/s, loss=0.000804, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  52%|█████▏    | 1320/2524 [09:03<08:15,  2.43it/s, loss=0.00114, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  53%|█████▎    | 1330/2524 [09:07<08:11,  2.43it/s, loss=0.00114, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  53%|█████▎    | 1330/2524 [09:07<08:11,  2.43it/s, loss=0.00124, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  53%|█████▎    | 1340/2524 [09:11<08:07,  2.43it/s, loss=0.00124, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  53%|█████▎    | 1340/2524 [09:11<08:07,  2.43it/s, loss=0.000891, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  53%|█████▎    | 1350/2524 [09:15<08:03,  2.43it/s, loss=0.000891, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  53%|█████▎    | 1350/2524 [09:15<08:03,  2.43it/s, loss=0.000374, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  54%|█████▍    | 1360/2524 [09:19<07:59,  2.43it/s, loss=0.000374, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  54%|█████▍    | 1360/2524 [09:19<07:59,  2.43it/s, loss=0.00109, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  54%|█████▍    | 1370/2524 [09:24<07:55,  2.43it/s, loss=0.00109, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  54%|█████▍    | 1370/2524 [09:24<07:55,  2.43it/s, loss=0.000918, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  55%|█████▍    | 1380/2524 [09:28<07:51,  2.43it/s, loss=0.000918, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  55%|█████▍    | 1380/2524 [09:28<07:51,  2.43it/s, loss=0.000527, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  55%|█████▌    | 1390/2524 [09:32<07:46,  2.43it/s, loss=0.000527, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  55%|█████▌    | 1390/2524 [09:32<07:46,  2.43it/s, loss=0.000622, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  55%|█████▌    | 1400/2524 [09:36<07:42,  2.43it/s, loss=0.000622, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  55%|█████▌    | 1400/2524 [09:36<07:42,  2.43it/s, loss=0.00113, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  56%|█████▌    | 1410/2524 [09:40<07:38,  2.43it/s, loss=0.00113, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  56%|█████▌    | 1410/2524 [09:40<07:38,  2.43it/s, loss=0.00115, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  56%|█████▋    | 1420/2524 [09:44<07:34,  2.43it/s, loss=0.00115, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  56%|█████▋    | 1420/2524 [09:44<07:34,  2.43it/s, loss=0.000501, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  57%|█████▋    | 1430/2524 [09:48<07:30,  2.43it/s, loss=0.000501, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  57%|█████▋    | 1430/2524 [09:48<07:30,  2.43it/s, loss=0.00152, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  57%|█████▋    | 1440/2524 [09:52<07:26,  2.43it/s, loss=0.00152, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  57%|█████▋    | 1440/2524 [09:52<07:26,  2.43it/s, loss=0.00288, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  57%|█████▋    | 1450/2524 [09:56<07:22,  2.43it/s, loss=0.00288, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  57%|█████▋    | 1450/2524 [09:56<07:22,  2.43it/s, loss=0.00174, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  58%|█████▊    | 1460/2524 [10:01<07:18,  2.43it/s, loss=0.00174, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  58%|█████▊    | 1460/2524 [10:01<07:18,  2.43it/s, loss=0.000157, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  58%|█████▊    | 1470/2524 [10:05<07:13,  2.43it/s, loss=0.000157, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  58%|█████▊    | 1470/2524 [10:05<07:13,  2.43it/s, loss=0.000173, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  59%|█████▊    | 1480/2524 [10:09<07:09,  2.43it/s, loss=0.000173, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  59%|█████▊    | 1480/2524 [10:09<07:09,  2.43it/s, loss=0.000298, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  59%|█████▉    | 1490/2524 [10:13<07:05,  2.43it/s, loss=0.000298, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  59%|█████▉    | 1490/2524 [10:13<07:05,  2.43it/s, loss=0.000295, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  59%|█████▉    | 1500/2524 [10:17<07:01,  2.43it/s, loss=0.000295, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  59%|█████▉    | 1500/2524 [10:17<07:01,  2.43it/s, loss=0.000491, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  60%|█████▉    | 1510/2524 [10:21<06:57,  2.43it/s, loss=0.000491, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  60%|█████▉    | 1510/2524 [10:21<06:57,  2.43it/s, loss=0.00046, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  60%|██████    | 1520/2524 [10:25<06:53,  2.43it/s, loss=0.00046, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  60%|██████    | 1520/2524 [10:25<06:53,  2.43it/s, loss=0.000162, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  61%|██████    | 1530/2524 [10:29<06:49,  2.43it/s, loss=0.000162, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  61%|██████    | 1530/2524 [10:29<06:49,  2.43it/s, loss=0.000285, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  61%|██████    | 1540/2524 [10:33<06:45,  2.43it/s, loss=0.000285, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  61%|██████    | 1540/2524 [10:33<06:45,  2.43it/s, loss=0.000666, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  61%|██████▏   | 1550/2524 [10:38<06:40,  2.43it/s, loss=0.000666, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  61%|██████▏   | 1550/2524 [10:38<06:40,  2.43it/s, loss=0.000625, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  62%|██████▏   | 1560/2524 [10:42<06:36,  2.43it/s, loss=0.000625, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  62%|██████▏   | 1560/2524 [10:42<06:36,  2.43it/s, loss=0.00025, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  62%|██████▏   | 1570/2524 [10:46<06:32,  2.43it/s, loss=0.00025, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  62%|██████▏   | 1570/2524 [10:46<06:32,  2.43it/s, loss=0.000892, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  63%|██████▎   | 1580/2524 [10:50<06:28,  2.43it/s, loss=0.000892, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  63%|██████▎   | 1580/2524 [10:50<06:28,  2.43it/s, loss=0.000903, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  63%|██████▎   | 1590/2524 [10:54<06:24,  2.43it/s, loss=0.000903, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  63%|██████▎   | 1590/2524 [10:54<06:24,  2.43it/s, loss=0.000715, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  63%|██████▎   | 1600/2524 [10:58<06:20,  2.43it/s, loss=0.000715, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  63%|██████▎   | 1600/2524 [10:58<06:20,  2.43it/s, loss=0.000789, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  64%|██████▍   | 1610/2524 [11:02<06:16,  2.43it/s, loss=0.000789, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  64%|██████▍   | 1610/2524 [11:02<06:16,  2.43it/s, loss=0.00043, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  64%|██████▍   | 1620/2524 [11:06<06:12,  2.43it/s, loss=0.00043, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  64%|██████▍   | 1620/2524 [11:06<06:12,  2.43it/s, loss=0.00148, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  65%|██████▍   | 1630/2524 [11:11<06:08,  2.43it/s, loss=0.00148, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  65%|██████▍   | 1630/2524 [11:11<06:08,  2.43it/s, loss=0.00146, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  65%|██████▍   | 1640/2524 [11:15<06:03,  2.43it/s, loss=0.00146, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  65%|██████▍   | 1640/2524 [11:15<06:03,  2.43it/s, loss=0.000576, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  65%|██████▌   | 1650/2524 [11:19<05:59,  2.43it/s, loss=0.000576, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  65%|██████▌   | 1650/2524 [11:19<05:59,  2.43it/s, loss=0.00094, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  66%|██████▌   | 1660/2524 [11:23<05:55,  2.43it/s, loss=0.00094, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  66%|██████▌   | 1660/2524 [11:23<05:55,  2.43it/s, loss=0.00139, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  66%|██████▌   | 1670/2524 [11:27<05:51,  2.43it/s, loss=0.00139, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  66%|██████▌   | 1670/2524 [11:27<05:51,  2.43it/s, loss=0.000933, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  67%|██████▋   | 1680/2524 [11:31<05:47,  2.43it/s, loss=0.000933, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  67%|██████▋   | 1680/2524 [11:31<05:47,  2.43it/s, loss=0.000412, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  67%|██████▋   | 1690/2524 [11:35<05:43,  2.43it/s, loss=0.000412, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  67%|██████▋   | 1690/2524 [11:35<05:43,  2.43it/s, loss=0.00059, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  67%|██████▋   | 1700/2524 [11:39<05:39,  2.43it/s, loss=0.00059, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  67%|██████▋   | 1700/2524 [11:39<05:39,  2.43it/s, loss=0.000468, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  68%|██████▊   | 1710/2524 [11:43<05:35,  2.43it/s, loss=0.000468, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  68%|██████▊   | 1710/2524 [11:43<05:35,  2.43it/s, loss=0.00086, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  68%|██████▊   | 1720/2524 [11:48<05:30,  2.43it/s, loss=0.00086, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  68%|██████▊   | 1720/2524 [11:48<05:30,  2.43it/s, loss=0.000829, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  69%|██████▊   | 1730/2524 [11:52<05:26,  2.43it/s, loss=0.000829, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  69%|██████▊   | 1730/2524 [11:52<05:26,  2.43it/s, loss=0.000259, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  69%|██████▉   | 1740/2524 [11:56<05:22,  2.43it/s, loss=0.000259, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  69%|██████▉   | 1740/2524 [11:56<05:22,  2.43it/s, loss=0.000168, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  69%|██████▉   | 1750/2524 [12:00<05:18,  2.43it/s, loss=0.000168, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  69%|██████▉   | 1750/2524 [12:00<05:18,  2.43it/s, loss=0.0007, v_num=3, val_loss=0.306, val_f1=63.60]  Epoch 18:  70%|██████▉   | 1760/2524 [12:04<05:14,  2.43it/s, loss=0.0007, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  70%|██████▉   | 1760/2524 [12:04<05:14,  2.43it/s, loss=0.000759, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  70%|███████   | 1770/2524 [12:08<05:10,  2.43it/s, loss=0.000759, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  70%|███████   | 1770/2524 [12:08<05:10,  2.43it/s, loss=0.00112, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  71%|███████   | 1780/2524 [12:12<05:06,  2.43it/s, loss=0.00112, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  71%|███████   | 1780/2524 [12:12<05:06,  2.43it/s, loss=0.00134, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  71%|███████   | 1790/2524 [12:16<05:02,  2.43it/s, loss=0.00134, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  71%|███████   | 1790/2524 [12:16<05:02,  2.43it/s, loss=0.00101, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  71%|███████▏  | 1800/2524 [12:20<04:58,  2.43it/s, loss=0.00101, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  71%|███████▏  | 1800/2524 [12:21<04:58,  2.43it/s, loss=0.000749, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  72%|███████▏  | 1810/2524 [12:25<04:53,  2.43it/s, loss=0.000749, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  72%|███████▏  | 1810/2524 [12:25<04:53,  2.43it/s, loss=0.000469, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  72%|███████▏  | 1820/2524 [12:29<04:49,  2.43it/s, loss=0.000469, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  72%|███████▏  | 1820/2524 [12:29<04:49,  2.43it/s, loss=0.000586, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  73%|███████▎  | 1830/2524 [12:33<04:45,  2.43it/s, loss=0.000586, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  73%|███████▎  | 1830/2524 [12:33<04:45,  2.43it/s, loss=0.00118, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  73%|███████▎  | 1840/2524 [12:37<04:41,  2.43it/s, loss=0.00118, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  73%|███████▎  | 1840/2524 [12:37<04:41,  2.43it/s, loss=0.00107, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  73%|███████▎  | 1850/2524 [12:41<04:37,  2.43it/s, loss=0.00107, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  73%|███████▎  | 1850/2524 [12:41<04:37,  2.43it/s, loss=0.000139, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  74%|███████▎  | 1860/2524 [12:45<04:33,  2.43it/s, loss=0.000139, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  74%|███████▎  | 1860/2524 [12:45<04:33,  2.43it/s, loss=0.000191, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  74%|███████▍  | 1870/2524 [12:49<04:29,  2.43it/s, loss=0.000191, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  74%|███████▍  | 1870/2524 [12:49<04:29,  2.43it/s, loss=0.000266, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  74%|███████▍  | 1880/2524 [12:53<04:25,  2.43it/s, loss=0.000266, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  74%|███████▍  | 1880/2524 [12:53<04:25,  2.43it/s, loss=0.000633, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  75%|███████▍  | 1890/2524 [12:58<04:20,  2.43it/s, loss=0.000633, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  75%|███████▍  | 1890/2524 [12:58<04:20,  2.43it/s, loss=0.000654, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  75%|███████▌  | 1900/2524 [13:02<04:16,  2.43it/s, loss=0.000654, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  75%|███████▌  | 1900/2524 [13:02<04:16,  2.43it/s, loss=0.000744, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  76%|███████▌  | 1910/2524 [13:06<04:12,  2.43it/s, loss=0.000744, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  76%|███████▌  | 1910/2524 [13:06<04:12,  2.43it/s, loss=0.000809, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  76%|███████▌  | 1920/2524 [13:10<04:08,  2.43it/s, loss=0.000809, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  76%|███████▌  | 1920/2524 [13:10<04:08,  2.43it/s, loss=0.000429, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  76%|███████▋  | 1930/2524 [13:14<04:04,  2.43it/s, loss=0.000429, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  76%|███████▋  | 1930/2524 [13:14<04:04,  2.43it/s, loss=0.000986, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  77%|███████▋  | 1940/2524 [13:18<04:00,  2.43it/s, loss=0.000986, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  77%|███████▋  | 1940/2524 [13:18<04:00,  2.43it/s, loss=0.00135, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  77%|███████▋  | 1950/2524 [13:22<03:56,  2.43it/s, loss=0.00135, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  77%|███████▋  | 1950/2524 [13:22<03:56,  2.43it/s, loss=0.000807, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  78%|███████▊  | 1960/2524 [13:26<03:52,  2.43it/s, loss=0.000807, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  78%|███████▊  | 1960/2524 [13:26<03:52,  2.43it/s, loss=0.000669, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  78%|███████▊  | 1970/2524 [13:31<03:48,  2.43it/s, loss=0.000669, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  78%|███████▊  | 1970/2524 [13:31<03:48,  2.43it/s, loss=0.000931, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  78%|███████▊  | 1980/2524 [13:35<03:43,  2.43it/s, loss=0.000931, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  78%|███████▊  | 1980/2524 [13:35<03:43,  2.43it/s, loss=0.000816, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  79%|███████▉  | 1990/2524 [13:39<03:39,  2.43it/s, loss=0.000816, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  79%|███████▉  | 1990/2524 [13:39<03:39,  2.43it/s, loss=0.000492, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  79%|███████▉  | 2000/2524 [13:43<03:35,  2.43it/s, loss=0.000492, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  79%|███████▉  | 2000/2524 [13:43<03:35,  2.43it/s, loss=0.000314, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  80%|███████▉  | 2010/2524 [13:47<03:31,  2.43it/s, loss=0.000314, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  80%|███████▉  | 2010/2524 [13:47<03:31,  2.43it/s, loss=0.000337, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  80%|████████  | 2020/2524 [13:51<03:27,  2.43it/s, loss=0.000337, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  80%|████████  | 2020/2524 [13:51<03:27,  2.43it/s, loss=0.000637, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  80%|████████  | 2030/2524 [13:55<03:23,  2.43it/s, loss=0.000637, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  80%|████████  | 2030/2524 [13:55<03:23,  2.43it/s, loss=0.00136, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  81%|████████  | 2040/2524 [13:59<03:19,  2.43it/s, loss=0.00136, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  81%|████████  | 2040/2524 [13:59<03:19,  2.43it/s, loss=0.00124, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  81%|████████  | 2050/2524 [14:03<03:15,  2.43it/s, loss=0.00124, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  81%|████████  | 2050/2524 [14:03<03:15,  2.43it/s, loss=0.000526, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  82%|████████▏ | 2060/2524 [14:07<03:10,  2.43it/s, loss=0.000526, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  82%|████████▏ | 2060/2524 [14:07<03:10,  2.43it/s, loss=0.000464, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  82%|████████▏ | 2070/2524 [14:12<03:06,  2.43it/s, loss=0.000464, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  82%|████████▏ | 2070/2524 [14:12<03:06,  2.43it/s, loss=0.000472, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  82%|████████▏ | 2080/2524 [14:16<03:02,  2.43it/s, loss=0.000472, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  82%|████████▏ | 2080/2524 [14:16<03:02,  2.43it/s, loss=0.000278, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  83%|████████▎ | 2090/2524 [14:20<02:58,  2.43it/s, loss=0.000278, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  83%|████████▎ | 2090/2524 [14:20<02:58,  2.43it/s, loss=0.000301, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  83%|████████▎ | 2100/2524 [14:24<02:54,  2.43it/s, loss=0.000301, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  83%|████████▎ | 2100/2524 [14:24<02:54,  2.43it/s, loss=0.000352, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  84%|████████▎ | 2110/2524 [14:28<02:50,  2.43it/s, loss=0.000352, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  84%|████████▎ | 2110/2524 [14:28<02:50,  2.43it/s, loss=0.00102, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  84%|████████▍ | 2120/2524 [14:32<02:46,  2.43it/s, loss=0.00102, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  84%|████████▍ | 2120/2524 [14:32<02:46,  2.43it/s, loss=0.00116, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  84%|████████▍ | 2130/2524 [14:36<02:42,  2.43it/s, loss=0.00116, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  84%|████████▍ | 2130/2524 [14:36<02:42,  2.43it/s, loss=0.000449, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  85%|████████▍ | 2140/2524 [14:40<02:38,  2.43it/s, loss=0.000449, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  85%|████████▍ | 2140/2524 [14:40<02:38,  2.43it/s, loss=0.000565, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  85%|████████▌ | 2150/2524 [14:44<02:33,  2.43it/s, loss=0.000565, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  85%|████████▌ | 2150/2524 [14:44<02:33,  2.43it/s, loss=0.000511, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  86%|████████▌ | 2160/2524 [14:49<02:29,  2.43it/s, loss=0.000511, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  86%|████████▌ | 2160/2524 [14:49<02:29,  2.43it/s, loss=0.000719, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  86%|████████▌ | 2170/2524 [14:53<02:25,  2.43it/s, loss=0.000719, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  86%|████████▌ | 2170/2524 [14:53<02:25,  2.43it/s, loss=0.000849, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  86%|████████▋ | 2180/2524 [14:57<02:21,  2.43it/s, loss=0.000849, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  86%|████████▋ | 2180/2524 [14:57<02:21,  2.43it/s, loss=0.000496, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  87%|████████▋ | 2190/2524 [15:01<02:17,  2.43it/s, loss=0.000496, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  87%|████████▋ | 2190/2524 [15:01<02:17,  2.43it/s, loss=0.00128, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  87%|████████▋ | 2200/2524 [15:05<02:13,  2.43it/s, loss=0.00128, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  87%|████████▋ | 2200/2524 [15:05<02:13,  2.43it/s, loss=0.00252, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  88%|████████▊ | 2210/2524 [15:09<02:09,  2.43it/s, loss=0.00252, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  88%|████████▊ | 2210/2524 [15:09<02:09,  2.43it/s, loss=0.00182, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  88%|████████▊ | 2220/2524 [15:13<02:05,  2.43it/s, loss=0.00182, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  88%|████████▊ | 2220/2524 [15:13<02:05,  2.43it/s, loss=0.00261, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  88%|████████▊ | 2230/2524 [15:17<02:01,  2.43it/s, loss=0.00261, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  88%|████████▊ | 2230/2524 [15:17<02:01,  2.43it/s, loss=0.00241, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  89%|████████▊ | 2240/2524 [15:21<01:56,  2.43it/s, loss=0.00241, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  89%|████████▊ | 2240/2524 [15:21<01:56,  2.43it/s, loss=0.000235, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  89%|████████▉ | 2250/2524 [15:26<01:52,  2.43it/s, loss=0.000235, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  89%|████████▉ | 2250/2524 [15:26<01:52,  2.43it/s, loss=0.000344, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  90%|████████▉ | 2260/2524 [15:30<01:48,  2.43it/s, loss=0.000344, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  90%|████████▉ | 2260/2524 [15:30<01:48,  2.43it/s, loss=0.000467, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  90%|████████▉ | 2270/2524 [15:34<01:44,  2.43it/s, loss=0.000467, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  90%|████████▉ | 2270/2524 [15:34<01:44,  2.43it/s, loss=0.00082, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  90%|█████████ | 2280/2524 [15:38<01:40,  2.43it/s, loss=0.00082, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  90%|█████████ | 2280/2524 [15:38<01:40,  2.43it/s, loss=0.000727, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  91%|█████████ | 2290/2524 [15:42<01:36,  2.43it/s, loss=0.000727, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  91%|█████████ | 2290/2524 [15:42<01:36,  2.43it/s, loss=0.000892, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  91%|█████████ | 2300/2524 [15:46<01:32,  2.43it/s, loss=0.000892, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  91%|█████████ | 2300/2524 [15:46<01:32,  2.43it/s, loss=0.00104, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  92%|█████████▏| 2310/2524 [15:50<01:28,  2.43it/s, loss=0.00104, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  92%|█████████▏| 2310/2524 [15:50<01:28,  2.43it/s, loss=0.000319, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  92%|█████████▏| 2320/2524 [15:54<01:23,  2.43it/s, loss=0.000319, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  92%|█████████▏| 2320/2524 [15:54<01:23,  2.43it/s, loss=0.000183, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  92%|█████████▏| 2330/2524 [15:58<01:19,  2.43it/s, loss=0.000183, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  92%|█████████▏| 2330/2524 [15:58<01:19,  2.43it/s, loss=0.000411, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  93%|█████████▎| 2340/2524 [16:03<01:15,  2.43it/s, loss=0.000411, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  93%|█████████▎| 2340/2524 [16:03<01:15,  2.43it/s, loss=0.00106, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  93%|█████████▎| 2350/2524 [16:07<01:11,  2.43it/s, loss=0.00106, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  93%|█████████▎| 2350/2524 [16:07<01:11,  2.43it/s, loss=0.000885, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  94%|█████████▎| 2360/2524 [16:11<01:07,  2.43it/s, loss=0.000885, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  94%|█████████▎| 2360/2524 [16:11<01:07,  2.43it/s, loss=0.000309, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  94%|█████████▍| 2370/2524 [16:15<01:03,  2.43it/s, loss=0.000309, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  94%|█████████▍| 2370/2524 [16:15<01:03,  2.43it/s, loss=0.000522, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  94%|█████████▍| 2380/2524 [16:19<00:59,  2.43it/s, loss=0.000522, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  94%|█████████▍| 2380/2524 [16:19<00:59,  2.43it/s, loss=0.000417, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  95%|█████████▍| 2390/2524 [16:23<00:55,  2.43it/s, loss=0.000417, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  95%|█████████▍| 2390/2524 [16:23<00:55,  2.43it/s, loss=0.000422, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  95%|█████████▌| 2400/2524 [16:27<00:51,  2.43it/s, loss=0.000422, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  95%|█████████▌| 2400/2524 [16:27<00:51,  2.43it/s, loss=0.00104, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  95%|█████████▌| 2410/2524 [16:31<00:46,  2.43it/s, loss=0.00104, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  95%|█████████▌| 2410/2524 [16:31<00:46,  2.43it/s, loss=0.000925, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  96%|█████████▌| 2420/2524 [16:36<00:42,  2.43it/s, loss=0.000925, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  96%|█████████▌| 2420/2524 [16:36<00:42,  2.43it/s, loss=0.000397, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  96%|█████████▋| 2430/2524 [16:40<00:38,  2.43it/s, loss=0.000397, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  96%|█████████▋| 2430/2524 [16:40<00:38,  2.43it/s, loss=0.00169, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18:  97%|█████████▋| 2440/2524 [16:44<00:34,  2.43it/s, loss=0.00169, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  97%|█████████▋| 2440/2524 [16:44<00:34,  2.43it/s, loss=0.00213, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  97%|█████████▋| 2450/2524 [16:48<00:30,  2.43it/s, loss=0.00213, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  97%|█████████▋| 2450/2524 [16:48<00:30,  2.43it/s, loss=0.000798, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  97%|█████████▋| 2460/2524 [16:52<00:26,  2.43it/s, loss=0.000798, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  97%|█████████▋| 2460/2524 [16:52<00:26,  2.43it/s, loss=0.000354, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  98%|█████████▊| 2470/2524 [16:56<00:22,  2.43it/s, loss=0.000354, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  98%|█████████▊| 2470/2524 [16:56<00:22,  2.43it/s, loss=0.000324, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  98%|█████████▊| 2480/2524 [17:00<00:18,  2.43it/s, loss=0.000324, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  98%|█████████▊| 2480/2524 [17:00<00:18,  2.43it/s, loss=0.000217, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  99%|█████████▊| 2490/2524 [17:04<00:13,  2.43it/s, loss=0.000217, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  99%|█████████▊| 2490/2524 [17:04<00:13,  2.43it/s, loss=0.000656, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  99%|█████████▉| 2500/2524 [17:08<00:09,  2.43it/s, loss=0.000656, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  99%|█████████▉| 2500/2524 [17:08<00:09,  2.43it/s, loss=0.000747, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  99%|█████████▉| 2510/2524 [17:12<00:05,  2.43it/s, loss=0.000747, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:  99%|█████████▉| 2510/2524 [17:12<00:05,  2.43it/s, loss=0.00032, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 18: 100%|█████████▉| 2520/2524 [17:17<00:01,  2.43it/s, loss=0.00032, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18: 100%|█████████▉| 2520/2524 [17:17<00:01,  2.43it/s, loss=0.000722, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18: 100%|██████████| 2524/2524 [17:18<00:00,  2.43it/s, loss=0.000722, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18: 100%|██████████| 2524/2524 [17:18<00:00,  2.43it/s, loss=0.000727, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18: 100%|██████████| 2524/2524 [17:18<00:00,  2.43it/s, loss=0.000727, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 18:   0%|          | 0/2539 [00:00<?, ?it/s, loss=0.000727, v_num=3, val_loss=0.306, val_f1=63.60]           Epoch 19:   0%|          | 0/2539 [00:00<?, ?it/s, loss=0.000727, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   0%|          | 10/2539 [00:04<18:40,  2.26it/s, loss=0.000727, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   0%|          | 10/2539 [00:04<18:42,  2.25it/s, loss=0.00068, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 19:   1%|          | 20/2539 [00:08<17:52,  2.35it/s, loss=0.00068, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   1%|          | 20/2539 [00:08<17:54,  2.34it/s, loss=0.000253, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   1%|          | 30/2539 [00:12<17:34,  2.38it/s, loss=0.000253, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   1%|          | 30/2539 [00:12<17:35,  2.38it/s, loss=0.000299, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   2%|▏         | 40/2539 [00:16<17:23,  2.40it/s, loss=0.000299, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   2%|▏         | 40/2539 [00:16<17:24,  2.39it/s, loss=0.000328, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   2%|▏         | 50/2539 [00:20<17:23,  2.39it/s, loss=0.000328, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   2%|▏         | 50/2539 [00:20<17:23,  2.38it/s, loss=0.000278, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   2%|▏         | 60/2539 [00:25<17:14,  2.40it/s, loss=0.000278, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   2%|▏         | 60/2539 [00:25<17:15,  2.39it/s, loss=0.000791, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   3%|▎         | 70/2539 [00:29<17:07,  2.40it/s, loss=0.000791, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   3%|▎         | 70/2539 [00:29<17:08,  2.40it/s, loss=0.000941, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   3%|▎         | 80/2539 [00:33<17:01,  2.41it/s, loss=0.000941, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   3%|▎         | 80/2539 [00:33<17:01,  2.41it/s, loss=0.000367, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   4%|▎         | 90/2539 [00:37<16:55,  2.41it/s, loss=0.000367, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   4%|▎         | 90/2539 [00:37<16:55,  2.41it/s, loss=0.000186, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   4%|▍         | 100/2539 [00:41<16:51,  2.41it/s, loss=0.000186, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   4%|▍         | 100/2539 [00:41<16:51,  2.41it/s, loss=0.000284, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   4%|▍         | 110/2539 [00:45<16:46,  2.41it/s, loss=0.000284, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   4%|▍         | 110/2539 [00:45<16:46,  2.41it/s, loss=0.000332, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   5%|▍         | 120/2539 [00:49<16:40,  2.42it/s, loss=0.000332, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   5%|▍         | 120/2539 [00:49<16:41,  2.42it/s, loss=0.000267, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   5%|▌         | 130/2539 [00:53<16:35,  2.42it/s, loss=0.000267, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   5%|▌         | 130/2539 [00:53<16:36,  2.42it/s, loss=0.000311, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   6%|▌         | 140/2539 [00:57<16:31,  2.42it/s, loss=0.000311, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   6%|▌         | 140/2539 [00:57<16:31,  2.42it/s, loss=0.000229, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   6%|▌         | 150/2539 [01:02<16:28,  2.42it/s, loss=0.000229, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   6%|▌         | 150/2539 [01:02<16:29,  2.42it/s, loss=0.000738, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   6%|▋         | 160/2539 [01:06<16:23,  2.42it/s, loss=0.000738, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   6%|▋         | 160/2539 [01:06<16:24,  2.42it/s, loss=0.00123, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 19:   7%|▋         | 170/2539 [01:10<16:19,  2.42it/s, loss=0.00123, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   7%|▋         | 170/2539 [01:10<16:19,  2.42it/s, loss=0.000861, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   7%|▋         | 180/2539 [01:14<16:14,  2.42it/s, loss=0.000861, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   7%|▋         | 180/2539 [01:14<16:14,  2.42it/s, loss=0.000377, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   7%|▋         | 190/2539 [01:18<16:09,  2.42it/s, loss=0.000377, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   7%|▋         | 190/2539 [01:18<16:10,  2.42it/s, loss=0.000454, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   8%|▊         | 200/2539 [01:22<16:05,  2.42it/s, loss=0.000454, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   8%|▊         | 200/2539 [01:22<16:06,  2.42it/s, loss=0.000524, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   8%|▊         | 210/2539 [01:26<16:01,  2.42it/s, loss=0.000524, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   8%|▊         | 210/2539 [01:26<16:01,  2.42it/s, loss=0.000491, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   9%|▊         | 220/2539 [01:30<15:56,  2.42it/s, loss=0.000491, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   9%|▊         | 220/2539 [01:30<15:57,  2.42it/s, loss=0.000721, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   9%|▉         | 230/2539 [01:34<15:52,  2.42it/s, loss=0.000721, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   9%|▉         | 230/2539 [01:34<15:52,  2.42it/s, loss=0.000776, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   9%|▉         | 240/2539 [01:38<15:47,  2.43it/s, loss=0.000776, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:   9%|▉         | 240/2539 [01:38<15:48,  2.42it/s, loss=0.000664, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  10%|▉         | 250/2539 [01:43<15:45,  2.42it/s, loss=0.000664, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  10%|▉         | 250/2539 [01:43<15:45,  2.42it/s, loss=0.000962, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  10%|█         | 260/2539 [01:47<15:40,  2.42it/s, loss=0.000962, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  10%|█         | 260/2539 [01:47<15:40,  2.42it/s, loss=0.000845, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  11%|█         | 270/2539 [01:51<15:36,  2.42it/s, loss=0.000845, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  11%|█         | 270/2539 [01:51<15:36,  2.42it/s, loss=0.000339, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  11%|█         | 280/2539 [01:55<15:31,  2.42it/s, loss=0.000339, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  11%|█         | 280/2539 [01:55<15:31,  2.42it/s, loss=0.000278, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  11%|█▏        | 290/2539 [01:59<15:27,  2.43it/s, loss=0.000278, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  11%|█▏        | 290/2539 [01:59<15:27,  2.43it/s, loss=0.000644, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  12%|█▏        | 300/2539 [02:03<15:23,  2.42it/s, loss=0.000644, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  12%|█▏        | 300/2539 [02:03<15:23,  2.42it/s, loss=0.00153, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 19:  12%|█▏        | 310/2539 [02:07<15:19,  2.43it/s, loss=0.00153, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  12%|█▏        | 310/2539 [02:07<15:19,  2.43it/s, loss=0.0011, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 19:  13%|█▎        | 320/2539 [02:11<15:14,  2.43it/s, loss=0.0011, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  13%|█▎        | 320/2539 [02:11<15:14,  2.43it/s, loss=0.000927, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  13%|█▎        | 330/2539 [02:15<15:10,  2.43it/s, loss=0.000927, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  13%|█▎        | 330/2539 [02:16<15:10,  2.43it/s, loss=0.00137, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 19:  13%|█▎        | 340/2539 [02:20<15:06,  2.43it/s, loss=0.00137, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  13%|█▎        | 340/2539 [02:20<15:06,  2.43it/s, loss=0.00073, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  14%|█▍        | 350/2539 [02:24<15:03,  2.42it/s, loss=0.00073, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  14%|█▍        | 350/2539 [02:24<15:03,  2.42it/s, loss=0.000556, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  14%|█▍        | 360/2539 [02:28<14:58,  2.42it/s, loss=0.000556, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  14%|█▍        | 360/2539 [02:28<14:58,  2.42it/s, loss=0.000569, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  15%|█▍        | 370/2539 [02:32<14:54,  2.42it/s, loss=0.000569, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  15%|█▍        | 370/2539 [02:32<14:54,  2.42it/s, loss=0.00114, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 19:  15%|█▍        | 380/2539 [02:36<14:50,  2.42it/s, loss=0.00114, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  15%|█▍        | 380/2539 [02:36<14:50,  2.42it/s, loss=0.00205, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  15%|█▌        | 390/2539 [02:40<14:46,  2.43it/s, loss=0.00205, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  15%|█▌        | 390/2539 [02:40<14:46,  2.43it/s, loss=0.00159, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  16%|█▌        | 400/2539 [02:44<14:42,  2.42it/s, loss=0.00159, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  16%|█▌        | 400/2539 [02:44<14:42,  2.42it/s, loss=0.00102, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  16%|█▌        | 410/2539 [02:49<14:37,  2.43it/s, loss=0.00102, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  16%|█▌        | 410/2539 [02:49<14:37,  2.43it/s, loss=0.000613, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  17%|█▋        | 420/2539 [02:53<14:33,  2.43it/s, loss=0.000613, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  17%|█▋        | 420/2539 [02:53<14:33,  2.43it/s, loss=0.000375, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  17%|█▋        | 430/2539 [02:57<14:29,  2.43it/s, loss=0.000375, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  17%|█▋        | 430/2539 [02:57<14:29,  2.43it/s, loss=0.000496, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  17%|█▋        | 440/2539 [03:01<14:25,  2.43it/s, loss=0.000496, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  17%|█▋        | 440/2539 [03:01<14:25,  2.43it/s, loss=0.000476, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  18%|█▊        | 450/2539 [03:05<14:21,  2.42it/s, loss=0.000476, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  18%|█▊        | 450/2539 [03:05<14:21,  2.42it/s, loss=0.000889, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  18%|█▊        | 460/2539 [03:09<14:17,  2.42it/s, loss=0.000889, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  18%|█▊        | 460/2539 [03:09<14:17,  2.42it/s, loss=0.000865, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  19%|█▊        | 470/2539 [03:13<14:13,  2.43it/s, loss=0.000865, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  19%|█▊        | 470/2539 [03:13<14:13,  2.43it/s, loss=0.000785, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  19%|█▉        | 480/2539 [03:17<14:08,  2.43it/s, loss=0.000785, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  19%|█▉        | 480/2539 [03:17<14:08,  2.43it/s, loss=0.000676, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  19%|█▉        | 490/2539 [03:21<14:04,  2.43it/s, loss=0.000676, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  19%|█▉        | 490/2539 [03:21<14:04,  2.43it/s, loss=0.000319, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  20%|█▉        | 500/2539 [03:26<14:00,  2.43it/s, loss=0.000319, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  20%|█▉        | 500/2539 [03:26<14:00,  2.43it/s, loss=0.000323, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  20%|██        | 510/2539 [03:30<13:56,  2.43it/s, loss=0.000323, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  20%|██        | 510/2539 [03:30<13:56,  2.43it/s, loss=0.000458, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  20%|██        | 520/2539 [03:34<13:52,  2.43it/s, loss=0.000458, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  20%|██        | 520/2539 [03:34<13:52,  2.43it/s, loss=0.000532, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  21%|██        | 530/2539 [03:38<13:47,  2.43it/s, loss=0.000532, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  21%|██        | 530/2539 [03:38<13:47,  2.43it/s, loss=0.000318, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  21%|██▏       | 540/2539 [03:42<13:43,  2.43it/s, loss=0.000318, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  21%|██▏       | 540/2539 [03:42<13:43,  2.43it/s, loss=0.000203, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  22%|██▏       | 550/2539 [03:46<13:40,  2.43it/s, loss=0.000203, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  22%|██▏       | 550/2539 [03:46<13:40,  2.43it/s, loss=0.000426, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  22%|██▏       | 560/2539 [03:50<13:35,  2.43it/s, loss=0.000426, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  22%|██▏       | 560/2539 [03:50<13:35,  2.43it/s, loss=0.000774, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  22%|██▏       | 570/2539 [03:54<13:31,  2.43it/s, loss=0.000774, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  22%|██▏       | 570/2539 [03:54<13:31,  2.43it/s, loss=0.000566, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  23%|██▎       | 580/2539 [03:59<13:27,  2.43it/s, loss=0.000566, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  23%|██▎       | 580/2539 [03:59<13:27,  2.43it/s, loss=0.000278, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  23%|██▎       | 590/2539 [04:03<13:23,  2.43it/s, loss=0.000278, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  23%|██▎       | 590/2539 [04:03<13:23,  2.43it/s, loss=0.00031, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 19:  24%|██▎       | 600/2539 [04:07<13:19,  2.43it/s, loss=0.00031, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  24%|██▎       | 600/2539 [04:07<13:19,  2.43it/s, loss=0.000283, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  24%|██▍       | 610/2539 [04:11<13:15,  2.43it/s, loss=0.000283, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  24%|██▍       | 610/2539 [04:11<13:15,  2.43it/s, loss=0.000741, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  24%|██▍       | 620/2539 [04:15<13:10,  2.43it/s, loss=0.000741, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  24%|██▍       | 620/2539 [04:15<13:10,  2.43it/s, loss=0.000831, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  25%|██▍       | 630/2539 [04:19<13:06,  2.43it/s, loss=0.000831, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  25%|██▍       | 630/2539 [04:19<13:06,  2.43it/s, loss=0.000399, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  25%|██▌       | 640/2539 [04:23<13:02,  2.43it/s, loss=0.000399, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  25%|██▌       | 640/2539 [04:23<13:02,  2.43it/s, loss=0.000247, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  26%|██▌       | 650/2539 [04:27<12:58,  2.43it/s, loss=0.000247, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  26%|██▌       | 650/2539 [04:27<12:58,  2.43it/s, loss=0.000168, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  26%|██▌       | 660/2539 [04:32<12:54,  2.43it/s, loss=0.000168, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  26%|██▌       | 660/2539 [04:32<12:54,  2.43it/s, loss=0.000185, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  26%|██▋       | 670/2539 [04:36<12:50,  2.43it/s, loss=0.000185, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  26%|██▋       | 670/2539 [04:36<12:50,  2.43it/s, loss=0.000688, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  27%|██▋       | 680/2539 [04:40<12:46,  2.43it/s, loss=0.000688, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  27%|██▋       | 680/2539 [04:40<12:46,  2.43it/s, loss=0.000904, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  27%|██▋       | 690/2539 [04:44<12:41,  2.43it/s, loss=0.000904, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  27%|██▋       | 690/2539 [04:44<12:41,  2.43it/s, loss=0.000377, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  28%|██▊       | 700/2539 [04:48<12:37,  2.43it/s, loss=0.000377, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  28%|██▊       | 700/2539 [04:48<12:37,  2.43it/s, loss=0.000425, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  28%|██▊       | 710/2539 [04:52<12:33,  2.43it/s, loss=0.000425, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  28%|██▊       | 710/2539 [04:52<12:33,  2.43it/s, loss=0.00286, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 19:  28%|██▊       | 720/2539 [04:56<12:29,  2.43it/s, loss=0.00286, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  28%|██▊       | 720/2539 [04:56<12:29,  2.43it/s, loss=0.00318, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  29%|██▉       | 730/2539 [05:00<12:25,  2.43it/s, loss=0.00318, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  29%|██▉       | 730/2539 [05:00<12:25,  2.43it/s, loss=0.00115, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  29%|██▉       | 740/2539 [05:04<12:21,  2.43it/s, loss=0.00115, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  29%|██▉       | 740/2539 [05:04<12:21,  2.43it/s, loss=0.000562, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  30%|██▉       | 750/2539 [05:09<12:17,  2.43it/s, loss=0.000562, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  30%|██▉       | 750/2539 [05:09<12:17,  2.43it/s, loss=0.000661, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  30%|██▉       | 760/2539 [05:13<12:13,  2.43it/s, loss=0.000661, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  30%|██▉       | 760/2539 [05:13<12:13,  2.43it/s, loss=0.000683, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  30%|███       | 770/2539 [05:17<12:08,  2.43it/s, loss=0.000683, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  30%|███       | 770/2539 [05:17<12:08,  2.43it/s, loss=0.000543, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  31%|███       | 780/2539 [05:21<12:04,  2.43it/s, loss=0.000543, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  31%|███       | 780/2539 [05:21<12:04,  2.43it/s, loss=0.000836, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  31%|███       | 790/2539 [05:25<12:00,  2.43it/s, loss=0.000836, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  31%|███       | 790/2539 [05:25<12:00,  2.43it/s, loss=0.000498, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  32%|███▏      | 800/2539 [05:29<11:56,  2.43it/s, loss=0.000498, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  32%|███▏      | 800/2539 [05:29<11:56,  2.43it/s, loss=0.000267, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  32%|███▏      | 810/2539 [05:33<11:52,  2.43it/s, loss=0.000267, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  32%|███▏      | 810/2539 [05:33<11:52,  2.43it/s, loss=0.000213, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  32%|███▏      | 820/2539 [05:37<11:48,  2.43it/s, loss=0.000213, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  32%|███▏      | 820/2539 [05:37<11:48,  2.43it/s, loss=0.000243, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  33%|███▎      | 830/2539 [05:41<11:44,  2.43it/s, loss=0.000243, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  33%|███▎      | 830/2539 [05:41<11:44,  2.43it/s, loss=0.000301, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  33%|███▎      | 840/2539 [05:46<11:39,  2.43it/s, loss=0.000301, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  33%|███▎      | 840/2539 [05:46<11:39,  2.43it/s, loss=0.000411, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  33%|███▎      | 850/2539 [05:50<11:36,  2.43it/s, loss=0.000411, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  33%|███▎      | 850/2539 [05:50<11:36,  2.43it/s, loss=0.000578, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  34%|███▍      | 860/2539 [05:54<11:31,  2.43it/s, loss=0.000578, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  34%|███▍      | 860/2539 [05:54<11:31,  2.43it/s, loss=0.000728, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  34%|███▍      | 870/2539 [05:58<11:27,  2.43it/s, loss=0.000728, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  34%|███▍      | 870/2539 [05:58<11:27,  2.43it/s, loss=0.000746, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  35%|███▍      | 880/2539 [06:02<11:23,  2.43it/s, loss=0.000746, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  35%|███▍      | 880/2539 [06:02<11:23,  2.43it/s, loss=0.000624, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  35%|███▌      | 890/2539 [06:06<11:19,  2.43it/s, loss=0.000624, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  35%|███▌      | 890/2539 [06:06<11:19,  2.43it/s, loss=0.00071, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 19:  35%|███▌      | 900/2539 [06:10<11:15,  2.43it/s, loss=0.00071, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  35%|███▌      | 900/2539 [06:10<11:15,  2.43it/s, loss=0.000562, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  36%|███▌      | 910/2539 [06:14<11:11,  2.43it/s, loss=0.000562, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  36%|███▌      | 910/2539 [06:14<11:11,  2.43it/s, loss=0.000399, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  36%|███▌      | 920/2539 [06:18<11:06,  2.43it/s, loss=0.000399, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  36%|███▌      | 920/2539 [06:18<11:06,  2.43it/s, loss=0.000706, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  37%|███▋      | 930/2539 [06:23<11:02,  2.43it/s, loss=0.000706, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  37%|███▋      | 930/2539 [06:23<11:02,  2.43it/s, loss=0.000901, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  37%|███▋      | 940/2539 [06:27<10:58,  2.43it/s, loss=0.000901, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  37%|███▋      | 940/2539 [06:27<10:58,  2.43it/s, loss=0.000824, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  37%|███▋      | 950/2539 [06:31<10:54,  2.43it/s, loss=0.000824, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  37%|███▋      | 950/2539 [06:31<10:54,  2.43it/s, loss=0.000674, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  38%|███▊      | 960/2539 [06:35<10:50,  2.43it/s, loss=0.000674, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  38%|███▊      | 960/2539 [06:35<10:50,  2.43it/s, loss=0.000535, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  38%|███▊      | 970/2539 [06:39<10:46,  2.43it/s, loss=0.000535, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  38%|███▊      | 970/2539 [06:39<10:46,  2.43it/s, loss=0.000541, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  39%|███▊      | 980/2539 [06:43<10:42,  2.43it/s, loss=0.000541, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  39%|███▊      | 980/2539 [06:43<10:42,  2.43it/s, loss=0.000445, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  39%|███▉      | 990/2539 [06:47<10:38,  2.43it/s, loss=0.000445, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  39%|███▉      | 990/2539 [06:47<10:38,  2.43it/s, loss=0.000272, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  39%|███▉      | 1000/2539 [06:51<10:33,  2.43it/s, loss=0.000272, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  39%|███▉      | 1000/2539 [06:51<10:33,  2.43it/s, loss=0.000429, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  40%|███▉      | 1010/2539 [06:56<10:29,  2.43it/s, loss=0.000429, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  40%|███▉      | 1010/2539 [06:56<10:29,  2.43it/s, loss=0.00104, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 19:  40%|████      | 1020/2539 [07:00<10:25,  2.43it/s, loss=0.00104, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  40%|████      | 1020/2539 [07:00<10:25,  2.43it/s, loss=0.0013, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 19:  41%|████      | 1030/2539 [07:04<10:21,  2.43it/s, loss=0.0013, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  41%|████      | 1030/2539 [07:04<10:21,  2.43it/s, loss=0.00105, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  41%|████      | 1040/2539 [07:08<10:17,  2.43it/s, loss=0.00105, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  41%|████      | 1040/2539 [07:08<10:17,  2.43it/s, loss=0.000696, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  41%|████▏     | 1050/2539 [07:12<10:13,  2.43it/s, loss=0.000696, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  41%|████▏     | 1050/2539 [07:12<10:13,  2.43it/s, loss=0.00028, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 19:  42%|████▏     | 1060/2539 [07:16<10:09,  2.43it/s, loss=0.00028, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  42%|████▏     | 1060/2539 [07:16<10:09,  2.43it/s, loss=0.00036, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  42%|████▏     | 1070/2539 [07:20<10:05,  2.43it/s, loss=0.00036, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  42%|████▏     | 1070/2539 [07:20<10:05,  2.43it/s, loss=0.000696, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  43%|████▎     | 1080/2539 [07:24<10:00,  2.43it/s, loss=0.000696, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  43%|████▎     | 1080/2539 [07:24<10:00,  2.43it/s, loss=0.000601, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  43%|████▎     | 1090/2539 [07:28<09:56,  2.43it/s, loss=0.000601, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  43%|████▎     | 1090/2539 [07:28<09:56,  2.43it/s, loss=0.000679, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  43%|████▎     | 1100/2539 [07:33<09:52,  2.43it/s, loss=0.000679, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  43%|████▎     | 1100/2539 [07:33<09:52,  2.43it/s, loss=0.000615, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  44%|████▎     | 1110/2539 [07:37<09:48,  2.43it/s, loss=0.000615, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  44%|████▎     | 1110/2539 [07:37<09:48,  2.43it/s, loss=0.000314, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  44%|████▍     | 1120/2539 [07:41<09:44,  2.43it/s, loss=0.000314, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  44%|████▍     | 1120/2539 [07:41<09:44,  2.43it/s, loss=0.000335, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  45%|████▍     | 1130/2539 [07:45<09:40,  2.43it/s, loss=0.000335, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  45%|████▍     | 1130/2539 [07:45<09:40,  2.43it/s, loss=0.000382, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  45%|████▍     | 1140/2539 [07:49<09:36,  2.43it/s, loss=0.000382, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  45%|████▍     | 1140/2539 [07:49<09:36,  2.43it/s, loss=0.000443, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  45%|████▌     | 1150/2539 [07:53<09:32,  2.43it/s, loss=0.000443, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  45%|████▌     | 1150/2539 [07:53<09:32,  2.43it/s, loss=0.00036, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 19:  46%|████▌     | 1160/2539 [07:57<09:27,  2.43it/s, loss=0.00036, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  46%|████▌     | 1160/2539 [07:57<09:27,  2.43it/s, loss=0.000274, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  46%|████▌     | 1170/2539 [08:01<09:23,  2.43it/s, loss=0.000274, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  46%|████▌     | 1170/2539 [08:01<09:23,  2.43it/s, loss=0.000626, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  46%|████▋     | 1180/2539 [08:05<09:19,  2.43it/s, loss=0.000626, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  46%|████▋     | 1180/2539 [08:05<09:19,  2.43it/s, loss=0.000552, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  47%|████▋     | 1190/2539 [08:10<09:15,  2.43it/s, loss=0.000552, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  47%|████▋     | 1190/2539 [08:10<09:15,  2.43it/s, loss=0.000112, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  47%|████▋     | 1200/2539 [08:14<09:11,  2.43it/s, loss=0.000112, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  47%|████▋     | 1200/2539 [08:14<09:11,  2.43it/s, loss=0.000275, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  48%|████▊     | 1210/2539 [08:18<09:07,  2.43it/s, loss=0.000275, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  48%|████▊     | 1210/2539 [08:18<09:07,  2.43it/s, loss=0.000575, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  48%|████▊     | 1220/2539 [08:22<09:03,  2.43it/s, loss=0.000575, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  48%|████▊     | 1220/2539 [08:22<09:03,  2.43it/s, loss=0.00062, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 19:  48%|████▊     | 1230/2539 [08:26<08:59,  2.43it/s, loss=0.00062, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  48%|████▊     | 1230/2539 [08:26<08:59,  2.43it/s, loss=0.000495, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  49%|████▉     | 1240/2539 [08:30<08:54,  2.43it/s, loss=0.000495, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  49%|████▉     | 1240/2539 [08:30<08:54,  2.43it/s, loss=0.000631, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  49%|████▉     | 1250/2539 [08:34<08:50,  2.43it/s, loss=0.000631, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  49%|████▉     | 1250/2539 [08:34<08:50,  2.43it/s, loss=0.000771, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  50%|████▉     | 1260/2539 [08:38<08:46,  2.43it/s, loss=0.000771, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  50%|████▉     | 1260/2539 [08:38<08:46,  2.43it/s, loss=0.000455, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  50%|█████     | 1270/2539 [08:43<08:42,  2.43it/s, loss=0.000455, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  50%|█████     | 1270/2539 [08:43<08:42,  2.43it/s, loss=0.000144, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  50%|█████     | 1280/2539 [08:47<08:38,  2.43it/s, loss=0.000144, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  50%|█████     | 1280/2539 [08:47<08:38,  2.43it/s, loss=0.000503, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  51%|█████     | 1290/2539 [08:51<08:34,  2.43it/s, loss=0.000503, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  51%|█████     | 1290/2539 [08:51<08:34,  2.43it/s, loss=0.000979, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  51%|█████     | 1300/2539 [08:55<08:30,  2.43it/s, loss=0.000979, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  51%|█████     | 1300/2539 [08:55<08:30,  2.43it/s, loss=0.00185, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 19:  52%|█████▏    | 1310/2539 [08:59<08:26,  2.43it/s, loss=0.00185, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  52%|█████▏    | 1310/2539 [08:59<08:26,  2.43it/s, loss=0.00151, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  52%|█████▏    | 1320/2539 [09:03<08:21,  2.43it/s, loss=0.00151, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  52%|█████▏    | 1320/2539 [09:03<08:22,  2.43it/s, loss=0.000278, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  52%|█████▏    | 1330/2539 [09:07<08:17,  2.43it/s, loss=0.000278, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  52%|█████▏    | 1330/2539 [09:07<08:17,  2.43it/s, loss=0.000942, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  53%|█████▎    | 1340/2539 [09:11<08:13,  2.43it/s, loss=0.000942, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  53%|█████▎    | 1340/2539 [09:11<08:13,  2.43it/s, loss=0.00194, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 19:  53%|█████▎    | 1350/2539 [09:16<08:09,  2.43it/s, loss=0.00194, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  53%|█████▎    | 1350/2539 [09:16<08:09,  2.43it/s, loss=0.00185, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  54%|█████▎    | 1360/2539 [09:20<08:05,  2.43it/s, loss=0.00185, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  54%|█████▎    | 1360/2539 [09:20<08:05,  2.43it/s, loss=0.00143, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  54%|█████▍    | 1370/2539 [09:24<08:01,  2.43it/s, loss=0.00143, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  54%|█████▍    | 1370/2539 [09:24<08:01,  2.43it/s, loss=0.000777, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  54%|█████▍    | 1380/2539 [09:28<07:57,  2.43it/s, loss=0.000777, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  54%|█████▍    | 1380/2539 [09:28<07:57,  2.43it/s, loss=0.000221, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  55%|█████▍    | 1390/2539 [09:32<07:53,  2.43it/s, loss=0.000221, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  55%|█████▍    | 1390/2539 [09:32<07:53,  2.43it/s, loss=0.00017, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 19:  55%|█████▌    | 1400/2539 [09:36<07:49,  2.43it/s, loss=0.00017, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  55%|█████▌    | 1400/2539 [09:36<07:49,  2.43it/s, loss=0.000185, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  56%|█████▌    | 1410/2539 [09:40<07:44,  2.43it/s, loss=0.000185, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  56%|█████▌    | 1410/2539 [09:40<07:44,  2.43it/s, loss=0.000243, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  56%|█████▌    | 1420/2539 [09:44<07:40,  2.43it/s, loss=0.000243, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  56%|█████▌    | 1420/2539 [09:44<07:40,  2.43it/s, loss=0.000445, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  56%|█████▋    | 1430/2539 [09:48<07:36,  2.43it/s, loss=0.000445, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  56%|█████▋    | 1430/2539 [09:48<07:36,  2.43it/s, loss=0.000526, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  57%|█████▋    | 1440/2539 [09:52<07:32,  2.43it/s, loss=0.000526, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  57%|█████▋    | 1440/2539 [09:52<07:32,  2.43it/s, loss=0.000776, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  57%|█████▋    | 1450/2539 [09:57<07:28,  2.43it/s, loss=0.000776, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  57%|█████▋    | 1450/2539 [09:57<07:28,  2.43it/s, loss=0.000739, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  58%|█████▊    | 1460/2539 [10:01<07:24,  2.43it/s, loss=0.000739, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  58%|█████▊    | 1460/2539 [10:01<07:24,  2.43it/s, loss=0.000591, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  58%|█████▊    | 1470/2539 [10:05<07:20,  2.43it/s, loss=0.000591, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  58%|█████▊    | 1470/2539 [10:05<07:20,  2.43it/s, loss=0.000761, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  58%|█████▊    | 1480/2539 [10:09<07:16,  2.43it/s, loss=0.000761, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  58%|█████▊    | 1480/2539 [10:09<07:16,  2.43it/s, loss=0.000402, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  59%|█████▊    | 1490/2539 [10:13<07:11,  2.43it/s, loss=0.000402, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  59%|█████▊    | 1490/2539 [10:13<07:11,  2.43it/s, loss=0.000207, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  59%|█████▉    | 1500/2539 [10:17<07:07,  2.43it/s, loss=0.000207, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  59%|█████▉    | 1500/2539 [10:17<07:07,  2.43it/s, loss=0.00134, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 19:  59%|█████▉    | 1510/2539 [10:21<07:03,  2.43it/s, loss=0.00134, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  59%|█████▉    | 1510/2539 [10:21<07:03,  2.43it/s, loss=0.00131, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  60%|█████▉    | 1520/2539 [10:25<06:59,  2.43it/s, loss=0.00131, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  60%|█████▉    | 1520/2539 [10:25<06:59,  2.43it/s, loss=0.000257, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  60%|██████    | 1530/2539 [10:29<06:55,  2.43it/s, loss=0.000257, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  60%|██████    | 1530/2539 [10:29<06:55,  2.43it/s, loss=0.000398, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  61%|██████    | 1540/2539 [10:34<06:51,  2.43it/s, loss=0.000398, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  61%|██████    | 1540/2539 [10:34<06:51,  2.43it/s, loss=0.00074, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 19:  61%|██████    | 1550/2539 [10:38<06:47,  2.43it/s, loss=0.00074, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  61%|██████    | 1550/2539 [10:38<06:47,  2.43it/s, loss=0.00151, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  61%|██████▏   | 1560/2539 [10:42<06:43,  2.43it/s, loss=0.00151, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  61%|██████▏   | 1560/2539 [10:42<06:43,  2.43it/s, loss=0.00123, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  62%|██████▏   | 1570/2539 [10:46<06:38,  2.43it/s, loss=0.00123, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  62%|██████▏   | 1570/2539 [10:46<06:39,  2.43it/s, loss=0.000282, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  62%|██████▏   | 1580/2539 [10:50<06:34,  2.43it/s, loss=0.000282, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  62%|██████▏   | 1580/2539 [10:50<06:34,  2.43it/s, loss=0.000281, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  63%|██████▎   | 1590/2539 [10:54<06:30,  2.43it/s, loss=0.000281, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  63%|██████▎   | 1590/2539 [10:54<06:30,  2.43it/s, loss=0.000346, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  63%|██████▎   | 1600/2539 [10:58<06:26,  2.43it/s, loss=0.000346, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  63%|██████▎   | 1600/2539 [10:58<06:26,  2.43it/s, loss=0.000251, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  63%|██████▎   | 1610/2539 [11:02<06:22,  2.43it/s, loss=0.000251, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  63%|██████▎   | 1610/2539 [11:02<06:22,  2.43it/s, loss=0.000194, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  64%|██████▍   | 1620/2539 [11:06<06:18,  2.43it/s, loss=0.000194, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  64%|██████▍   | 1620/2539 [11:07<06:18,  2.43it/s, loss=0.000456, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  64%|██████▍   | 1630/2539 [11:11<06:14,  2.43it/s, loss=0.000456, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  64%|██████▍   | 1630/2539 [11:11<06:14,  2.43it/s, loss=0.000429, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  65%|██████▍   | 1640/2539 [11:15<06:10,  2.43it/s, loss=0.000429, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  65%|██████▍   | 1640/2539 [11:15<06:10,  2.43it/s, loss=0.000569, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  65%|██████▍   | 1650/2539 [11:19<06:06,  2.43it/s, loss=0.000569, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  65%|██████▍   | 1650/2539 [11:19<06:06,  2.43it/s, loss=0.000554, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  65%|██████▌   | 1660/2539 [11:23<06:01,  2.43it/s, loss=0.000554, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  65%|██████▌   | 1660/2539 [11:23<06:01,  2.43it/s, loss=0.000528, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  66%|██████▌   | 1670/2539 [11:27<05:57,  2.43it/s, loss=0.000528, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  66%|██████▌   | 1670/2539 [11:27<05:57,  2.43it/s, loss=0.000966, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  66%|██████▌   | 1680/2539 [11:31<05:53,  2.43it/s, loss=0.000966, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  66%|██████▌   | 1680/2539 [11:31<05:53,  2.43it/s, loss=0.000883, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  67%|██████▋   | 1690/2539 [11:35<05:49,  2.43it/s, loss=0.000883, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  67%|██████▋   | 1690/2539 [11:35<05:49,  2.43it/s, loss=0.000542, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  67%|██████▋   | 1700/2539 [11:39<05:45,  2.43it/s, loss=0.000542, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  67%|██████▋   | 1700/2539 [11:39<05:45,  2.43it/s, loss=0.00034, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 19:  67%|██████▋   | 1710/2539 [11:44<05:41,  2.43it/s, loss=0.00034, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  67%|██████▋   | 1710/2539 [11:44<05:41,  2.43it/s, loss=0.000222, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  68%|██████▊   | 1720/2539 [11:48<05:37,  2.43it/s, loss=0.000222, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  68%|██████▊   | 1720/2539 [11:48<05:37,  2.43it/s, loss=0.000286, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  68%|██████▊   | 1730/2539 [11:52<05:33,  2.43it/s, loss=0.000286, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  68%|██████▊   | 1730/2539 [11:52<05:33,  2.43it/s, loss=0.00125, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 19:  69%|██████▊   | 1740/2539 [11:56<05:28,  2.43it/s, loss=0.00125, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  69%|██████▊   | 1740/2539 [11:56<05:28,  2.43it/s, loss=0.00115, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  69%|██████▉   | 1750/2539 [12:00<05:24,  2.43it/s, loss=0.00115, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  69%|██████▉   | 1750/2539 [12:00<05:24,  2.43it/s, loss=0.000796, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  69%|██████▉   | 1760/2539 [12:04<05:20,  2.43it/s, loss=0.000796, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  69%|██████▉   | 1760/2539 [12:04<05:20,  2.43it/s, loss=0.000789, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  70%|██████▉   | 1770/2539 [12:08<05:16,  2.43it/s, loss=0.000789, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  70%|██████▉   | 1770/2539 [12:08<05:16,  2.43it/s, loss=0.000856, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  70%|███████   | 1780/2539 [12:12<05:12,  2.43it/s, loss=0.000856, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  70%|███████   | 1780/2539 [12:12<05:12,  2.43it/s, loss=0.001, v_num=3, val_loss=0.306, val_f1=63.60]   Epoch 19:  71%|███████   | 1790/2539 [12:16<05:08,  2.43it/s, loss=0.001, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  71%|███████   | 1790/2539 [12:16<05:08,  2.43it/s, loss=0.000384, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  71%|███████   | 1800/2539 [12:21<05:04,  2.43it/s, loss=0.000384, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  71%|███████   | 1800/2539 [12:21<05:04,  2.43it/s, loss=0.000186, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  71%|███████▏  | 1810/2539 [12:25<05:00,  2.43it/s, loss=0.000186, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  71%|███████▏  | 1810/2539 [12:25<05:00,  2.43it/s, loss=0.000337, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  72%|███████▏  | 1820/2539 [12:29<04:56,  2.43it/s, loss=0.000337, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  72%|███████▏  | 1820/2539 [12:29<04:56,  2.43it/s, loss=0.00105, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 19:  72%|███████▏  | 1830/2539 [12:33<04:51,  2.43it/s, loss=0.00105, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  72%|███████▏  | 1830/2539 [12:33<04:51,  2.43it/s, loss=0.00156, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  72%|███████▏  | 1840/2539 [12:37<04:47,  2.43it/s, loss=0.00156, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  72%|███████▏  | 1840/2539 [12:37<04:47,  2.43it/s, loss=0.00104, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  73%|███████▎  | 1850/2539 [12:41<04:43,  2.43it/s, loss=0.00104, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  73%|███████▎  | 1850/2539 [12:41<04:43,  2.43it/s, loss=0.000675, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  73%|███████▎  | 1860/2539 [12:45<04:39,  2.43it/s, loss=0.000675, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  73%|███████▎  | 1860/2539 [12:45<04:39,  2.43it/s, loss=0.000609, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  74%|███████▎  | 1870/2539 [12:49<04:35,  2.43it/s, loss=0.000609, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  74%|███████▎  | 1870/2539 [12:49<04:35,  2.43it/s, loss=0.00049, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 19:  74%|███████▍  | 1880/2539 [12:54<04:31,  2.43it/s, loss=0.00049, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  74%|███████▍  | 1880/2539 [12:54<04:31,  2.43it/s, loss=0.000351, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  74%|███████▍  | 1890/2539 [12:58<04:27,  2.43it/s, loss=0.000351, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  74%|███████▍  | 1890/2539 [12:58<04:27,  2.43it/s, loss=0.000624, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  75%|███████▍  | 1900/2539 [13:02<04:23,  2.43it/s, loss=0.000624, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  75%|███████▍  | 1900/2539 [13:02<04:23,  2.43it/s, loss=0.000649, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  75%|███████▌  | 1910/2539 [13:06<04:18,  2.43it/s, loss=0.000649, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  75%|███████▌  | 1910/2539 [13:06<04:18,  2.43it/s, loss=0.000151, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  76%|███████▌  | 1920/2539 [13:10<04:14,  2.43it/s, loss=0.000151, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  76%|███████▌  | 1920/2539 [13:10<04:14,  2.43it/s, loss=0.00029, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 19:  76%|███████▌  | 1930/2539 [13:14<04:10,  2.43it/s, loss=0.00029, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  76%|███████▌  | 1930/2539 [13:14<04:10,  2.43it/s, loss=0.000306, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  76%|███████▋  | 1940/2539 [13:18<04:06,  2.43it/s, loss=0.000306, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  76%|███████▋  | 1940/2539 [13:18<04:06,  2.43it/s, loss=0.00122, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 19:  77%|███████▋  | 1950/2539 [13:22<04:02,  2.43it/s, loss=0.00122, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  77%|███████▋  | 1950/2539 [13:22<04:02,  2.43it/s, loss=0.00118, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  77%|███████▋  | 1960/2539 [13:26<03:58,  2.43it/s, loss=0.00118, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  77%|███████▋  | 1960/2539 [13:26<03:58,  2.43it/s, loss=0.000207, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  78%|███████▊  | 1970/2539 [13:31<03:54,  2.43it/s, loss=0.000207, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  78%|███████▊  | 1970/2539 [13:31<03:54,  2.43it/s, loss=0.000355, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  78%|███████▊  | 1980/2539 [13:35<03:50,  2.43it/s, loss=0.000355, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  78%|███████▊  | 1980/2539 [13:35<03:50,  2.43it/s, loss=0.000406, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  78%|███████▊  | 1990/2539 [13:39<03:46,  2.43it/s, loss=0.000406, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  78%|███████▊  | 1990/2539 [13:39<03:46,  2.43it/s, loss=0.000545, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  79%|███████▉  | 2000/2539 [13:43<03:41,  2.43it/s, loss=0.000545, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  79%|███████▉  | 2000/2539 [13:43<03:41,  2.43it/s, loss=0.00049, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 19:  79%|███████▉  | 2010/2539 [13:47<03:37,  2.43it/s, loss=0.00049, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  79%|███████▉  | 2010/2539 [13:47<03:37,  2.43it/s, loss=0.000388, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  80%|███████▉  | 2020/2539 [13:51<03:33,  2.43it/s, loss=0.000388, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  80%|███████▉  | 2020/2539 [13:51<03:33,  2.43it/s, loss=0.000579, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  80%|███████▉  | 2030/2539 [13:55<03:29,  2.43it/s, loss=0.000579, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  80%|███████▉  | 2030/2539 [13:55<03:29,  2.43it/s, loss=0.000498, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  80%|████████  | 2040/2539 [13:59<03:25,  2.43it/s, loss=0.000498, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  80%|████████  | 2040/2539 [13:59<03:25,  2.43it/s, loss=0.000252, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  81%|████████  | 2050/2539 [14:04<03:21,  2.43it/s, loss=0.000252, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  81%|████████  | 2050/2539 [14:04<03:21,  2.43it/s, loss=0.000178, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  81%|████████  | 2060/2539 [14:08<03:17,  2.43it/s, loss=0.000178, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  81%|████████  | 2060/2539 [14:08<03:17,  2.43it/s, loss=0.000728, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  82%|████████▏ | 2070/2539 [14:12<03:13,  2.43it/s, loss=0.000728, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  82%|████████▏ | 2070/2539 [14:12<03:13,  2.43it/s, loss=0.000932, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  82%|████████▏ | 2080/2539 [14:16<03:08,  2.43it/s, loss=0.000932, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  82%|████████▏ | 2080/2539 [14:16<03:08,  2.43it/s, loss=0.000342, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  82%|████████▏ | 2090/2539 [14:20<03:04,  2.43it/s, loss=0.000342, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  82%|████████▏ | 2090/2539 [14:20<03:04,  2.43it/s, loss=0.000107, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  83%|████████▎ | 2100/2539 [14:24<03:00,  2.43it/s, loss=0.000107, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  83%|████████▎ | 2100/2539 [14:24<03:00,  2.43it/s, loss=0.000518, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  83%|████████▎ | 2110/2539 [14:28<02:56,  2.43it/s, loss=0.000518, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  83%|████████▎ | 2110/2539 [14:28<02:56,  2.43it/s, loss=0.000785, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  83%|████████▎ | 2120/2539 [14:32<02:52,  2.43it/s, loss=0.000785, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  83%|████████▎ | 2120/2539 [14:32<02:52,  2.43it/s, loss=0.000393, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  84%|████████▍ | 2130/2539 [14:36<02:48,  2.43it/s, loss=0.000393, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  84%|████████▍ | 2130/2539 [14:36<02:48,  2.43it/s, loss=0.000215, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  84%|████████▍ | 2140/2539 [14:40<02:44,  2.43it/s, loss=0.000215, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  84%|████████▍ | 2140/2539 [14:40<02:44,  2.43it/s, loss=0.000376, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  85%|████████▍ | 2150/2539 [14:45<02:40,  2.43it/s, loss=0.000376, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  85%|████████▍ | 2150/2539 [14:45<02:40,  2.43it/s, loss=0.00037, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 19:  85%|████████▌ | 2160/2539 [14:49<02:36,  2.43it/s, loss=0.00037, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  85%|████████▌ | 2160/2539 [14:49<02:36,  2.43it/s, loss=0.000839, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  85%|████████▌ | 2170/2539 [14:53<02:31,  2.43it/s, loss=0.000839, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  85%|████████▌ | 2170/2539 [14:53<02:31,  2.43it/s, loss=0.0011, v_num=3, val_loss=0.306, val_f1=63.60]  Epoch 19:  86%|████████▌ | 2180/2539 [14:57<02:27,  2.43it/s, loss=0.0011, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  86%|████████▌ | 2180/2539 [14:57<02:27,  2.43it/s, loss=0.000499, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  86%|████████▋ | 2190/2539 [15:01<02:23,  2.43it/s, loss=0.000499, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  86%|████████▋ | 2190/2539 [15:01<02:23,  2.43it/s, loss=0.00028, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 19:  87%|████████▋ | 2200/2539 [15:05<02:19,  2.43it/s, loss=0.00028, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  87%|████████▋ | 2200/2539 [15:05<02:19,  2.43it/s, loss=0.000395, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  87%|████████▋ | 2210/2539 [15:09<02:15,  2.43it/s, loss=0.000395, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  87%|████████▋ | 2210/2539 [15:09<02:15,  2.43it/s, loss=0.000541, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  87%|████████▋ | 2220/2539 [15:13<02:11,  2.43it/s, loss=0.000541, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  87%|████████▋ | 2220/2539 [15:13<02:11,  2.43it/s, loss=0.000408, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  88%|████████▊ | 2230/2539 [15:18<02:07,  2.43it/s, loss=0.000408, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  88%|████████▊ | 2230/2539 [15:18<02:07,  2.43it/s, loss=0.000219, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  88%|████████▊ | 2240/2539 [15:22<02:03,  2.43it/s, loss=0.000219, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  88%|████████▊ | 2240/2539 [15:22<02:03,  2.43it/s, loss=0.000374, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  89%|████████▊ | 2250/2539 [15:26<01:58,  2.43it/s, loss=0.000374, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  89%|████████▊ | 2250/2539 [15:26<01:58,  2.43it/s, loss=0.000316, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  89%|████████▉ | 2260/2539 [15:30<01:54,  2.43it/s, loss=0.000316, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  89%|████████▉ | 2260/2539 [15:30<01:54,  2.43it/s, loss=0.00127, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 19:  89%|████████▉ | 2270/2539 [15:34<01:50,  2.43it/s, loss=0.00127, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  89%|████████▉ | 2270/2539 [15:34<01:50,  2.43it/s, loss=0.00128, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  90%|████████▉ | 2280/2539 [15:38<01:46,  2.43it/s, loss=0.00128, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  90%|████████▉ | 2280/2539 [15:38<01:46,  2.43it/s, loss=0.000501, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  90%|█████████ | 2290/2539 [15:42<01:42,  2.43it/s, loss=0.000501, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  90%|█████████ | 2290/2539 [15:42<01:42,  2.43it/s, loss=0.000567, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  91%|█████████ | 2300/2539 [15:46<01:38,  2.43it/s, loss=0.000567, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  91%|█████████ | 2300/2539 [15:46<01:38,  2.43it/s, loss=0.000789, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  91%|█████████ | 2310/2539 [15:50<01:34,  2.43it/s, loss=0.000789, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  91%|█████████ | 2310/2539 [15:51<01:34,  2.43it/s, loss=0.00131, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 19:  91%|█████████▏| 2320/2539 [15:55<01:30,  2.43it/s, loss=0.00131, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  91%|█████████▏| 2320/2539 [15:55<01:30,  2.43it/s, loss=0.000746, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  92%|█████████▏| 2330/2539 [15:59<01:26,  2.43it/s, loss=0.000746, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  92%|█████████▏| 2330/2539 [15:59<01:26,  2.43it/s, loss=0.000232, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  92%|█████████▏| 2340/2539 [16:03<01:21,  2.43it/s, loss=0.000232, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  92%|█████████▏| 2340/2539 [16:03<01:21,  2.43it/s, loss=0.000207, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  93%|█████████▎| 2350/2539 [16:07<01:17,  2.43it/s, loss=0.000207, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  93%|█████████▎| 2350/2539 [16:07<01:17,  2.43it/s, loss=0.000192, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  93%|█████████▎| 2360/2539 [16:11<01:13,  2.43it/s, loss=0.000192, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  93%|█████████▎| 2360/2539 [16:11<01:13,  2.43it/s, loss=0.000638, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  93%|█████████▎| 2370/2539 [16:15<01:09,  2.43it/s, loss=0.000638, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  93%|█████████▎| 2370/2539 [16:15<01:09,  2.43it/s, loss=0.000637, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  94%|█████████▎| 2380/2539 [16:19<01:05,  2.43it/s, loss=0.000637, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  94%|█████████▎| 2380/2539 [16:19<01:05,  2.43it/s, loss=0.000713, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  94%|█████████▍| 2390/2539 [16:23<01:01,  2.43it/s, loss=0.000713, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  94%|█████████▍| 2390/2539 [16:23<01:01,  2.43it/s, loss=0.000875, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  95%|█████████▍| 2400/2539 [16:28<00:57,  2.43it/s, loss=0.000875, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  95%|█████████▍| 2400/2539 [16:28<00:57,  2.43it/s, loss=0.00071, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 19:  95%|█████████▍| 2410/2539 [16:32<00:53,  2.43it/s, loss=0.00071, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  95%|█████████▍| 2410/2539 [16:32<00:53,  2.43it/s, loss=0.000662, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  95%|█████████▌| 2420/2539 [16:36<00:48,  2.43it/s, loss=0.000662, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  95%|█████████▌| 2420/2539 [16:36<00:48,  2.43it/s, loss=0.000347, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  96%|█████████▌| 2430/2539 [16:40<00:44,  2.43it/s, loss=0.000347, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  96%|█████████▌| 2430/2539 [16:40<00:44,  2.43it/s, loss=0.0003, v_num=3, val_loss=0.306, val_f1=63.60]  Epoch 19:  96%|█████████▌| 2440/2539 [16:44<00:40,  2.43it/s, loss=0.0003, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  96%|█████████▌| 2440/2539 [16:44<00:40,  2.43it/s, loss=0.000351, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  96%|█████████▋| 2450/2539 [16:48<00:36,  2.43it/s, loss=0.000351, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  96%|█████████▋| 2450/2539 [16:48<00:36,  2.43it/s, loss=0.000777, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  97%|█████████▋| 2460/2539 [16:52<00:32,  2.43it/s, loss=0.000777, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  97%|█████████▋| 2460/2539 [16:52<00:32,  2.43it/s, loss=0.00072, v_num=3, val_loss=0.306, val_f1=63.60] Epoch 19:  97%|█████████▋| 2470/2539 [16:56<00:28,  2.43it/s, loss=0.00072, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  97%|█████████▋| 2470/2539 [16:56<00:28,  2.43it/s, loss=0.000492, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  98%|█████████▊| 2480/2539 [17:01<00:24,  2.43it/s, loss=0.000492, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  98%|█████████▊| 2480/2539 [17:01<00:24,  2.43it/s, loss=0.000892, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  98%|█████████▊| 2490/2539 [17:05<00:20,  2.43it/s, loss=0.000892, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  98%|█████████▊| 2490/2539 [17:05<00:20,  2.43it/s, loss=0.000646, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  98%|█████████▊| 2500/2539 [17:09<00:16,  2.43it/s, loss=0.000646, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  98%|█████████▊| 2500/2539 [17:09<00:16,  2.43it/s, loss=0.000294, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  99%|█████████▉| 2510/2539 [17:13<00:11,  2.43it/s, loss=0.000294, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  99%|█████████▉| 2510/2539 [17:13<00:11,  2.43it/s, loss=0.000218, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  99%|█████████▉| 2520/2539 [17:17<00:07,  2.43it/s, loss=0.000218, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19:  99%|█████████▉| 2520/2539 [17:17<00:07,  2.43it/s, loss=0.000286, v_num=3, val_loss=0.306, val_f1=63.60]
Validation: 0it [00:00, ?it/s][A
Validation:   0%|          | 0/15 [00:00<?, ?it/s][A
Validation DataLoader 0:   0%|          | 0/15 [00:00<?, ?it/s][Anumber of gold spans: 106, predicted spans: 102, hit: 75
number of gold spans: 102, predicted spans: 105, hit: 61
number of gold spans: 94, predicted spans: 102, hit: 62
number of gold spans: 100, predicted spans: 103, hit: 73
number of gold spans: 113, predicted spans: 114, hit: 78
number of gold spans: 98, predicted spans: 99, hit: 66
Epoch 19: 100%|█████████▉| 2530/2539 [17:59<00:03,  2.34it/s, loss=0.000286, v_num=3, val_loss=0.306, val_f1=63.60]number of gold spans: 104, predicted spans: 102, hit: 71
number of gold spans: 90, predicted spans: 99, hit: 55
number of gold spans: 98, predicted spans: 96, hit: 56
number of gold spans: 95, predicted spans: 90, hit: 62

Validation DataLoader 0:  67%|██████▋   | 10/15 [01:04<00:32,  6.48s/it][Anumber of gold spans: 99, predicted spans: 102, hit: 70
number of gold spans: 109, predicted spans: 102, hit: 65
number of gold spans: 95, predicted spans: 94, hit: 54
number of gold spans: 94, predicted spans: 93, hit: 56
number of gold spans: 4, predicted spans: 3, hit: 3

Validation DataLoader 0: 100%|██████████| 15/15 [01:28<00:00,  5.92s/it][AEpoch 19: 100%|██████████| 2539/2539 [18:48<00:00,  2.25it/s, loss=0.000286, v_num=3, val_loss=0.306, val_f1=63.60]Epoch 19: 100%|██████████| 2539/2539 [18:48<00:00,  2.25it/s, loss=0.000269, v_num=3, val_loss=0.394, val_f1=64.50]
                                                                        [AEpoch 19: 100%|██████████| 2539/2539 [18:48<00:00,  2.25it/s, loss=0.000269, v_num=3, val_loss=0.394, val_f1=64.50]Epoch 19: 100%|██████████| 2539/2539 [18:48<00:00,  2.25it/s, loss=0.000269, v_num=3, val_loss=0.394, val_f1=64.50]
Finish training and saving the model!

****** Conduct inference on trained checkpoint ******
Load trained model from ../outputs/unified/top5_seed5
Note that a pretrained model is required and `do_true` should be False
seed: 5, beam: 1, constrained: True

Total examples = 328
Total examples = 328
Ori sent size: 328
Input size: 1640 1640
Examples:
[['aste', ':', 'laptop14', ':', 'boot', 'time', 'is', 'super', 'fast', ',', 'around', 'anywhere', 'from', '35', 'seconds', 'to', '1', 'minute', '.', '[O]', '[A]', '[S]'], ['aste', ':', 'laptop14', ':', 'boot', 'time', 'is', 'super', 'fast', ',', 'around', 'anywhere', 'from', '35', 'seconds', 'to', '1', 'minute', '.', '[A]', '[O]', '[S]'], ['aste', ':', 'laptop14', ':', 'boot', 'time', 'is', 'super', 'fast', ',', 'around', 'anywhere', 'from', '35', 'seconds', 'to', '1', 'minute', '.', '[O]', '[S]', '[A]'], ['aste', ':', 'laptop14', ':', 'boot', 'time', 'is', 'super', 'fast', ',', 'around', 'anywhere', 'from', '35', 'seconds', 'to', '1', 'minute', '.', '[A]', '[S]', '[O]'], ['aste', ':', 'laptop14', ':', 'boot', 'time', 'is', 'super', 'fast', ',', 'around', 'anywhere', 'from', '35', 'seconds', 'to', '1', 'minute', '.', '[S]', '[O]', '[A]'], ['aste', ':', 'laptop14', ':', 'tech', 'support', 'would', 'not', 'fix', 'the', 'problem', 'unless', 'i', 'bought', 'your', 'plan', 'for', '$', '150', 'plus', '.', '[O]', '[A]', '[S]'], ['aste', ':', 'laptop14', ':', 'tech', 'support', 'would', 'not', 'fix', 'the', 'problem', 'unless', 'i', 'bought', 'your', 'plan', 'for', '$', '150', 'plus', '.', '[A]', '[O]', '[S]'], ['aste', ':', 'laptop14', ':', 'tech', 'support', 'would', 'not', 'fix', 'the', 'problem', 'unless', 'i', 'bought', 'your', 'plan', 'for', '$', '150', 'plus', '.', '[O]', '[S]', '[A]'], ['aste', ':', 'laptop14', ':', 'tech', 'support', 'would', 'not', 'fix', 'the', 'problem', 'unless', 'i', 'bought', 'your', 'plan', 'for', '$', '150', 'plus', '.', '[A]', '[S]', '[O]'], ['aste', ':', 'laptop14', ':', 'tech', 'support', 'would', 'not', 'fix', 'the', 'problem', 'unless', 'i', 'bought', 'your', 'plan', 'for', '$', '150', 'plus', '.', '[S]', '[O]', '[A]']]
['[O] fast [A] boot time [S] great', '[A] boot time [O] fast [S] great', '[O] fast [S] great [A] boot time', '[A] boot time [S] great [O] fast', '[S] great [O] fast [A] boot time', '[O] not fix [A] tech support [S] bad', '[A] tech support [O] not fix [S] bad', '[O] not fix [S] bad [A] tech support', '[A] tech support [S] bad [O] not fix', '[S] bad [O] not fix [A] tech support']
task, data: aste laptop14
target: [('null', 'tech support', 'bad', 'not fix')]
output: ['[A] tech support [O] would not fix [S] bad']
sent: ['tech', 'support', 'would', 'not', 'fix', 'the', 'problem', 'unless', 'I', 'bought', 'your', 'plan', 'for', '$', '150', 'plus', '.']
counter: {('null', 'tech support', 'bad', 'would not fix'): 5}
output quads: ['[A] tech support [O] would not fix [S] bad']
multi_path: ['[O] would not fix [A] tech support [S] bad', '[A] tech support [O] would not fix [S] bad', '[O] would not fix [S] bad [A] tech support', '[A] tech support [S] bad [O] would not fix', '[S] bad [O] would not fix [A] tech support']

task, data: aste laptop14
target: [('null', 'internal speakers', 'bad', 'lousy')]
output: ["[A] click pads [O] don't like [S] bad", '[A] internal speakers [O] lousy [S] bad']
sent: ['Other', 'than', 'not', 'being', 'a', 'fan', 'of', 'click', 'pads', '(', 'industry', 'standard', 'these', 'days', ')', 'and', 'the', 'lousy', 'internal', 'speakers', ',', 'it', "'s", 'hard', 'for', 'me', 'to', 'find', 'things', 'about', 'this', 'notebook', 'I', 'do', "n't", 'like', ',', 'especially', 'considering', 'the', '$', '350', 'price', 'tag', '.']
counter: {('null', 'click pads', 'bad', "don't like"): 5, ('null', 'internal speakers', 'bad', 'lousy'): 5}
output quads: ["[A] click pads [O] don't like [S] bad", '[A] internal speakers [O] lousy [S] bad']
multi_path: ["[O] don't like [A] click pads [S] bad [SSEP] [O] lousy [A] internal speakers [S] bad", "[A] click pads [O] don't like [S] bad [SSEP] [A] internal speakers [O] lousy [S] bad", "[O] don't like [S] bad [A] click pads [SSEP] [O] lousy [S] bad [A] internal speakers", "[A] click pads [S] bad [O] don't like [SSEP] [A] internal speakers [S] bad [O] lousy", "[S] bad [O] don't like [A] click pads [SSEP] [S] bad [O] lousy [A] internal speakers"]

task, data: aste laptop14
target: [('null', 'use', 'great', 'fast'), ('null', 'use', 'great', 'light'), ('null', 'use', 'great', 'simple')]
output: ['[A] use [O] simple [S] great']
sent: ['It', "'s", 'fast', ',', 'light', ',', 'and', 'simple', 'to', 'use', '.']
counter: {('null', 'use', 'great', 'simple'): 5}
output quads: ['[A] use [O] simple [S] great']
multi_path: ['[O] simple [A] use [S] great', '[A] use [O] simple [S] great', '[O] simple [S] great [A] use', '[A] use [S] great [O] simple', '[S] great [O] simple [A] use']

task, data: aste laptop14
target: [('null', 'apple os', 'great', 'happy'), ('null', 'works', 'great', 'well')]
output: ['[A] os [O] happy [S] great', '[A] works [O] well [S] great']
sent: ['Works', 'well', ',', 'and', 'I', 'am', 'extremely', 'happy', 'to', 'be', 'back', 'to', 'an', 'apple', 'OS', '.']
counter: {('null', 'works', 'great', 'well'): 5, ('null', 'os', 'great', 'happy'): 5}
output quads: ['[A] works [O] well [S] great', '[A] os [O] happy [S] great']
multi_path: ['[O] well [A] works [S] great [SSEP] [O] happy [A] os [S] great', '[A] works [O] well [S] great [SSEP] [A] os [O] happy [S] great', '[O] well [S] great [A] works [SSEP] [O] happy [S] great [A] os', '[A] works [S] great [O] well [SSEP] [A] os [S] great [O] happy', '[S] great [O] well [A] works [SSEP] [S] great [O] happy [A] os']

task, data: aste laptop14
target: [('null', 'features', 'great', 'not light and slim')]
output: ['[A] features [O] make up for it [S] great']
sent: ['Sure', 'it', "'s", 'not', 'light', 'and', 'slim', 'but', 'the', 'features', 'make', 'up', 'for', 'it', '100', '%', '.']
counter: {('null', 'features', 'great', 'make up for it'): 5, ('null', 'features', 'bad', 'make up for it'): 1}
output quads: ['[A] features [O] make up for it [S] great']
multi_path: ['[O] make up for it [A] features [S] great', '[A] features [O] make up for it [S] great', '[O] make up for it [S] great [A] features', '[A] features [S] great [O] make up for it [SSEP] [A] features [S] bad [O] make up for it', '[S] great [O] make up for it [A] features']

task, data: aste laptop14
target: [('null', 'battery life', 'great', 'long'), ('null', 'battery life', 'great', 'pleased'), ('null', 'log on', 'great', 'fast'), ('null', 'log on', 'great', 'pleased'), ('null', 'wifi connection', 'great', 'pleased'), ('null', 'wifi connection', 'great', 'speedy')]
output: ['[A] battery life [O] long [S] great', '[A] log on [O] fast [S] great', '[A] wifi connection [O] speedy [S] great']
sent: ['I', 'am', 'pleased', 'with', 'the', 'fast', 'log', 'on', ',', 'speedy', 'WiFi', 'connection', 'and', 'the', 'long', 'battery', 'life', '(', '>', '6', 'hrs', ')', '.']
counter: {('null', 'log on', 'great', 'fast'): 5, ('null', 'wifi connection', 'great', 'speedy'): 5, ('null', 'battery life', 'great', 'long'): 5}
output quads: ['[A] log on [O] fast [S] great', '[A] wifi connection [O] speedy [S] great', '[A] battery life [O] long [S] great']
multi_path: ['[O] fast [A] log on [S] great [SSEP] [O] speedy [A] wifi connection [S] great [SSEP] [O] long [A] battery life [S] great', '[A] log on [O] fast [S] great [SSEP] [A] wifi connection [O] speedy [S] great [SSEP] [A] battery life [O] long [S] great', '[O] fast [S] great [A] log on [SSEP] [O] speedy [S] great [A] wifi connection [SSEP] [O] long [S] great [A] battery life', '[A] log on [S] great [O] fast [SSEP] [A] wifi connection [S] great [O] speedy [SSEP] [A] battery life [S] great [O] long', '[S] great [O] fast [A] log on [SSEP] [S] great [O] speedy [A] wifi connection [SSEP] [S] great [O] long [A] battery life']

task, data: aste laptop14
target: [('null', 'build', 'great', 'strong'), ('null', 'durability', 'great', 'strong')]
output: ['[A] build [O] strong [S] great', '[A] durability [O] adds [S] great']
sent: ['Strong', 'build', 'though', 'which', 'really', 'adds', 'to', 'its', 'durability', '.']
counter: {('null', 'build', 'great', 'strong'): 5, ('null', 'durability', 'great', 'adds'): 5}
output quads: ['[A] build [O] strong [S] great', '[A] durability [O] adds [S] great']
multi_path: ['[O] strong [A] build [S] great [SSEP] [O] adds [A] durability [S] great', '[A] build [O] strong [S] great [SSEP] [A] durability [O] adds [S] great', '[O] strong [S] great [A] build [SSEP] [O] adds [S] great [A] durability', '[A] build [S] great [O] strong [SSEP] [A] durability [S] great [O] adds', '[S] great [O] strong [A] build [SSEP] [S] great [O] adds [A] durability']

task, data: aste laptop14
target: [('null', 'screen', 'great', 'sharp'), ('null', 'speed', 'great', 'much more')]
output: ['[A] screen [O] sharp [S] great', '[A] speed [O] more [S] great']
sent: ['It', 'has', 'so', 'much', 'more', 'speed', 'and', 'the', 'screen', 'is', 'very', 'sharp', '.']
counter: {('null', 'speed', 'great', 'more'): 5, ('null', 'screen', 'great', 'sharp'): 5}
output quads: ['[A] speed [O] more [S] great', '[A] screen [O] sharp [S] great']
multi_path: ['[O] more [A] speed [S] great [SSEP] [O] sharp [A] screen [S] great', '[A] speed [O] more [S] great [SSEP] [A] screen [O] sharp [S] great', '[O] more [S] great [A] speed [SSEP] [O] sharp [S] great [A] screen', '[A] speed [S] great [O] more [SSEP] [A] screen [S] great [O] sharp', '[S] great [O] more [A] speed [SSEP] [S] great [O] sharp [A] screen']

task, data: aste laptop14
target: [('null', 'set up', 'great', 'easy'), ('null', 'works', 'great', 'always')]
output: ['[A] set up [O] easy [S] great']
sent: ['This', 'thing', 'is', 'awesome', ',', 'everything', 'always', 'works', ',', 'everything', 'is', 'always', 'easy', 'to', 'set', 'up', ',', 'everything', 'is', 'compatible', ',', 'its', 'literally', 'everything', 'I', 'could', 'ask', 'for', '.']
counter: {('null', 'set up', 'great', 'easy'): 5, ('null', 'set up', 'great', 'compatible'): 1}
output quads: ['[A] set up [O] easy [S] great']
multi_path: ['[O] easy [A] set up [S] great [SSEP] [O] compatible [A] set up [S] great', '[A] set up [O] easy [S] great', '[O] easy [S] great [A] set up', '[A] set up [S] great [O] easy', '[S] great [O] easy [A] set up']

task, data: aste laptop14
target: [('null', 'keyboard', 'great', 'responds well')]
output: ['[A] keyboard [O] well [S] great']
sent: ['Keyboard', 'responds', 'well', 'to', 'presses', '.']
counter: {('null', 'keyboard', 'great', 'well'): 5}
output quads: ['[A] keyboard [O] well [S] great']
multi_path: ['[O] well [A] keyboard [S] great', '[A] keyboard [O] well [S] great', '[O] well [S] great [A] keyboard', '[A] keyboard [S] great [O] well', '[S] great [O] well [A] keyboard']

task, data: aste laptop14
target: [('null', 'configure', 'great', 'easy'), ('null', 'configure', 'great', 'intuitive'), ('null', 'setup', 'great', 'easy'), ('null', 'setup', 'great', 'intuitive')]
output: ['[A] setup [O] easy [S] great', '[A] setup [O] intuitive [S] great']
sent: ['Everything', 'is', 'so', 'easy', 'and', 'intuitive', 'to', 'setup', 'or', 'configure', '.']
counter: {('null', 'setup', 'great', 'easy'): 5, ('null', 'setup', 'great', 'intuitive'): 5}
output quads: ['[A] setup [O] easy [S] great', '[A] setup [O] intuitive [S] great']
multi_path: ['[O] easy [A] setup [S] great [SSEP] [O] intuitive [A] setup [S] great', '[A] setup [O] easy [S] great [SSEP] [A] setup [O] intuitive [S] great', '[O] easy [S] great [A] setup [SSEP] [O] intuitive [S] great [A] setup', '[A] setup [S] great [O] easy [SSEP] [A] setup [S] great [O] intuitive', '[S] great [O] easy [A] setup [SSEP] [S] great [O] intuitive [A] setup']

task, data: aste laptop14
target: [('null', 'portable computing', 'great', 'recommend'), ('null', 'portable computing', 'great', 'truly')]
output: ['[A] computing [O] waned [S] bad']
sent: ['The', 'criticism', 'has', 'waned', ',', 'and', 'now', 'I', "'d", 'be', 'the', 'first', 'to', 'recommend', 'an', 'Air', 'for', 'truly', 'portable', 'computing', '.']
counter: {('null', 'computing', 'bad', 'waned'): 3, ('null', 'computing', 'bad', 'recommend'): 1, ('null', 'criticism', 'bad', 'waned'): 1}
output quads: ['[A] computing [O] waned [S] bad']
multi_path: ['[O] waned [A] computing [S] bad', '[A] computing [O] waned [S] bad', '[O] waned [S] bad [A] computing', '[A] computing [S] bad [O] recommend', '[S] bad [O] waned [A] criticism']

task, data: aste laptop14
target: [('null', 'performance', 'bad', 'disappointment')]
output: ['[A] performance [O] huge disappointment [S] bad']
sent: ['But', 'the', 'performance', 'of', 'Mac', 'Mini', 'is', 'a', 'huge', 'disappointment', '.']
counter: {('null', 'performance', 'bad', 'disappointment'): 2, ('null', 'performance', 'bad', 'huge disappointment'): 3}
output quads: ['[A] performance [O] huge disappointment [S] bad']
multi_path: ['[O] disappointment [A] performance [S] bad', '[A] performance [O] huge disappointment [S] bad', '[O] disappointment [S] bad [A] performance', '[A] performance [S] bad [O] huge disappointment', '[S] bad [O] huge disappointment [A] performance']

task, data: aste laptop14
target: [('null', 'lit up keys', 'great', 'clear'), ('null', 'lit up keys', 'great', 'fast'), ('null', 'lit up keys', 'great', 'love'), ('null', 'screen display', 'great', 'clear'), ('null', 'screen display', 'great', 'fast'), ('null', 'screen display', 'great', 'love')]
output: ['[A] lit up keys [O] love [S] great', '[A] screen display [O] love [S] great']
sent: ['I', 'have', 'had', 'it', 'over', 'a', 'year', 'now', 'with', 'out', 'a', 'Glitch', 'of', 'any', 'kind..I', 'love', 'the', 'lit', 'up', 'keys', 'and', 'screen', 'display', '...', 'this', 'thing', 'is', 'Fast', 'and', 'clear', 'as', 'can', 'be', '.']
counter: {('null', 'lit up keys', 'great', 'love'): 5, ('null', 'screen display', 'great', 'love'): 5}
output quads: ['[A] lit up keys [O] love [S] great', '[A] screen display [O] love [S] great']
multi_path: ['[O] love [A] lit up keys [S] great [SSEP] [O] love [A] screen display [S] great', '[A] lit up keys [O] love [S] great [SSEP] [A] screen display [O] love [S] great', '[O] love [S] great [A] lit up keys [SSEP] [O] love [S] great [A] screen display', '[A] lit up keys [S] great [O] love [SSEP] [A] screen display [S] great [O] love', '[S] great [O] love [A] lit up keys [SSEP] [S] great [O] love [A] screen display']

task, data: aste laptop14
target: [('null', 'microsoft windows', 'ok', 'familiar'), ('null', 'mountain lion os', 'great', 'not hard')]
output: ['[A] mountain lion os [O] not hard [S] great']
sent: ['The', 'Mountain', 'Lion', 'OS', 'is', 'not', 'hard', 'to', 'figure', 'out', 'if', 'you', 'are', 'familiar', 'with', 'Microsoft', 'Windows', '.']
counter: {('null', 'mountain lion os', 'great', 'not hard'): 4, ('null', 'mountain lion os', 'great', 'not hard to figure out'): 1}
output quads: ['[A] mountain lion os [O] not hard [S] great']
multi_path: ['[O] not hard [A] mountain lion os [S] great', '[A] mountain lion os [O] not hard [S] great', '[O] not hard [S] great [A] mountain lion os', '[A] mountain lion os [S] great [O] not hard to figure out', '[S] great [O] not hard [A] mountain lion os']

task, data: aste laptop14
target: [('null', 'osx', 'bad', 'fast')]
output: ['[A] osx [O] fast [S] great']
sent: ['However', ',', 'I', 'can', 'refute', 'that', 'OSX', 'is', '``', 'FAST', "''", '.']
counter: {('null', 'osx', 'bad', 'fast'): 1, ('null', 'osx', 'great', 'fast'): 4}
output quads: ['[A] osx [O] fast [S] great']
multi_path: ['[O] fast [A] osx [S] bad', '[A] osx [O] fast [S] great', '[O] fast [S] great [A] osx', '[A] osx [S] great [O] fast', '[S] great [O] fast [A] osx']

task, data: aste laptop14
target: [('null', 'operating system', 'great', 'beats')]
output: ['[A] multi touch gestures [O] beats [S] great', '[A] operating system [O] beats [S] great', '[A] speed [O] beats [S] great']
sent: ['From', 'the', 'speed', 'to', 'the', 'multi', 'touch', 'gestures', 'this', 'operating', 'system', 'beats', 'Windows', 'easily', '.']
counter: {('null', 'speed', 'great', 'beats'): 5, ('null', 'multi touch gestures', 'great', 'beats'): 5, ('null', 'operating system', 'great', 'beats'): 5}
output quads: ['[A] speed [O] beats [S] great', '[A] multi touch gestures [O] beats [S] great', '[A] operating system [O] beats [S] great']
multi_path: ['[O] beats [A] speed [S] great [SSEP] [O] beats [A] multi touch gestures [S] great [SSEP] [O] beats [A] operating system [S] great', '[A] speed [O] beats [S] great [SSEP] [A] multi touch gestures [O] beats [S] great [SSEP] [A] operating system [O] beats [S] great', '[O] beats [S] great [A] speed [SSEP] [O] beats [S] great [A] multi touch gestures [SSEP] [O] beats [S] great [A] operating system', '[A] speed [S] great [O] beats [SSEP] [A] multi touch gestures [S] great [O] beats [SSEP] [A] operating system [S] great [O] beats', '[S] great [O] beats [A] speed [SSEP] [S] great [O] beats [A] multi touch gestures [SSEP] [S] great [O] beats [A] operating system']

task, data: aste laptop14
target: [('null', 'applecare', 'bad', 'not covered'), ('null', 'squaretrade 3-year computer accidental protection warranty', 'great', 'support')]
output: ['[A] squaretrade 3-year computer accidental protection warranty [O] support [S] great']
sent: ['I', 'opted', 'for', 'the', 'SquareTrade', '3-Year', 'Computer', 'Accidental', 'Protection', 'Warranty', '(', '$', '1500-2000', ')', 'which', 'also', 'support', '``', 'accidents', "''", 'like', 'drops', 'and', 'spills', 'that', 'are', 'NOT', 'covered', 'by', 'AppleCare', '.']
counter: {('null', 'squaretrade 3-year computer accidental protection warranty', 'great', 'support'): 4, ('null', 'squaretrade 3-year computer accidental protection warranty ( $ 1500-2000 )', 'great', 'support'): 1, ('null', 'applecare', 'ok', 'not covered'): 1, ('null', 'applecare', 'great', 'support'): 1}
output quads: ['[A] squaretrade 3-year computer accidental protection warranty [O] support [S] great']
multi_path: ['[O] support [A] squaretrade 3-year computer accidental protection warranty [S] great', '[A] squaretrade 3-year computer accidental protection warranty [O] support [S] great', '[O] support [S] great [A] squaretrade 3-year computer accidental protection warranty ( $ 1500-2000 )', '[A] squaretrade 3-year computer accidental protection warranty [S] great [O] support [SSEP] [A] applecare [S] ok [O] not covered', '[S] great [O] support [A] squaretrade 3-year computer accidental protection warranty [SSEP] [S] great [O] support [A] applecare']

task, data: aste laptop14
target: [('null', 'transport', 'great', 'easy'), ('null', 'transport', 'great', 'light')]
output: ['[A] transport [O] easy [S] great']
sent: ['It', "'s", 'light', 'and', 'easy', 'to', 'transport', '.']
counter: {('null', 'transport', 'great', 'easy'): 5}
output quads: ['[A] transport [O] easy [S] great']
multi_path: ['[O] easy [A] transport [S] great', '[A] transport [O] easy [S] great', '[O] easy [S] great [A] transport', '[A] transport [S] great [O] easy', '[S] great [O] easy [A] transport']

task, data: aste laptop14
target: [('null', 'integrate bluetooth devices', 'great', 'easy'), ('null', 'usb devices', 'great', 'instantly')]
output: ['[A] bluetooth devices [O] easy [S] great', '[A] usb devices [O] recognized [S] great']
sent: ['It', 'is', 'very', 'easy', 'to', 'integrate', 'bluetooth', 'devices', ',', 'and', 'USB', 'devices', 'are', 'recognized', 'almost', 'instantly', '.']
counter: {('null', 'bluetooth devices', 'great', 'easy'): 3, ('null', 'usb devices', 'great', 'recognized'): 4, ('null', 'integrate', 'great', 'easy'): 2, ('null', 'usb devices', 'great', 'recognized instantly'): 1}
output quads: ['[A] bluetooth devices [O] easy [S] great', '[A] usb devices [O] recognized [S] great']
multi_path: ['[O] easy [A] bluetooth devices [S] great [SSEP] [O] recognized [A] usb devices [S] great', '[A] bluetooth devices [O] easy [S] great [SSEP] [A] usb devices [O] recognized [S] great', '[O] easy [S] great [A] integrate [SSEP] [O] recognized [S] great [A] usb devices', '[A] bluetooth devices [S] great [O] easy [SSEP] [A] usb devices [S] great [O] recognized instantly', '[S] great [O] easy [A] integrate [SSEP] [S] great [O] recognized [A] usb devices']

task, data: aste laptop14
target: [('null', 'dvd drive firewire port', 'ok', 'removed'), ('null', 'sdxc slot', 'bad', 'silly')]
output: ['[A] dvd drive firewire port [O] removed [S] bad', '[A] sdxc slot [O] silly [S] bad']
sent: ['Apple', 'removed', 'the', 'DVD', 'drive', 'Firewire', 'port', '(', 'will', 'work', 'with', 'adapter', ')', 'and', 'put', 'the', 'SDXC', 'slot', 'in', 'a', 'silly', 'position', 'on', 'the', 'back', '.']
counter: {('null', 'dvd drive firewire port', 'bad', 'removed'): 5, ('null', 'sdxc slot', 'bad', 'silly'): 5}
output quads: ['[A] dvd drive firewire port [O] removed [S] bad', '[A] sdxc slot [O] silly [S] bad']
multi_path: ['[O] removed [A] dvd drive firewire port [S] bad [SSEP] [O] silly [A] sdxc slot [S] bad', '[A] dvd drive firewire port [O] removed [S] bad [SSEP] [A] sdxc slot [O] silly [S] bad', '[O] removed [S] bad [A] dvd drive firewire port [SSEP] [O] silly [S] bad [A] sdxc slot', '[A] dvd drive firewire port [S] bad [O] removed [SSEP] [A] sdxc slot [S] bad [O] silly', '[S] bad [O] removed [A] dvd drive firewire port [SSEP] [S] bad [O] silly [A] sdxc slot']

task, data: aste laptop14
target: [('null', 'designed', 'great', 'well')]
output: ['[A] designed [O] fast [S] great', '[A] designed [O] well [S] great']
sent: ['Well', 'designed', 'and', 'fast', '.']
counter: {('null', 'designed', 'great', 'well'): 5, ('null', 'designed', 'great', 'fast'): 5}
output quads: ['[A] designed [O] well [S] great', '[A] designed [O] fast [S] great']
multi_path: ['[O] well [A] designed [S] great [SSEP] [O] fast [A] designed [S] great', '[A] designed [O] well [S] great [SSEP] [A] designed [O] fast [S] great', '[O] well [S] great [A] designed [SSEP] [O] fast [S] great [A] designed', '[A] designed [S] great [O] well [SSEP] [A] designed [S] great [O] fast', '[S] great [O] well [A] designed [SSEP] [S] great [O] fast [A] designed']

task, data: aste laptop14
target: [('null', 'aesthetics', 'great', 'unmatched'), ('null', 'craftmanship', 'great', 'unmatched'), ('null', 'customer service', 'great', 'unmatched'), ('null', 'product quality', 'great', 'unmatched')]
output: ['[A] aesthetics [O] unmatched [S] great', '[A] craftmanship [O] craftmanship [S] great', '[A] customer service [O] unmatched [S] great', '[A] quality [O] unmatched [S] great']
sent: ['Apple', 'is', 'unmatched', 'in', 'product', 'quality', ',', 'aesthetics', ',', 'craftmanship', ',', 'and', 'customer', 'service', '.']
counter: {('null', 'quality', 'great', 'unmatched'): 5, ('null', 'aesthetics', 'great', 'unmatched'): 5, ('null', 'craftmanship', 'great', 'craftmanship'): 5, ('null', 'customer service', 'great', 'unmatched'): 5}
output quads: ['[A] quality [O] unmatched [S] great', '[A] aesthetics [O] unmatched [S] great', '[A] craftmanship [O] craftmanship [S] great', '[A] customer service [O] unmatched [S] great']
multi_path: ['[O] unmatched [A] quality [S] great [SSEP] [O] unmatched [A] aesthetics [S] great [SSEP] [O] craftmanship [A] craftmanship [S] great [SSEP] [O] unmatched [A] customer service [S] great', '[A] quality [O] unmatched [S] great [SSEP] [A] aesthetics [O] unmatched [S] great [SSEP] [A] craftmanship [O] craftmanship [S] great [SSEP] [A] customer service [O] unmatched [S] great', '[O] unmatched [S] great [A] quality [SSEP] [O] unmatched [S] great [A] aesthetics [SSEP] [O] craftmanship [S] great [A] craftmanship [SSEP] [O] unmatched [S] great [A] customer service', '[A] quality [S] great [O] unmatched [SSEP] [A] aesthetics [S] great [O] unmatched [SSEP] [A] craftmanship [S] great [O] craftmanship [SSEP] [A] customer service [S] great [O] unmatched', '[S] great [O] unmatched [A] quality [SSEP] [S] great [O] unmatched [A] aesthetics [SSEP] [S] great [O] craftmanship [A] craftmanship [SSEP] [S] great [O] unmatched [A] customer service']

task, data: aste laptop14
target: [('null', 'windows 8', 'bad', 'not like')]
output: ['[A] windows 8 [O] not like too much [S] bad']
sent: ['I', 'do', 'not', 'like', 'too', 'much', 'Windows', '8', '.']
counter: {('null', 'windows 8', 'bad', 'not like too much'): 5}
output quads: ['[A] windows 8 [O] not like too much [S] bad']
multi_path: ['[O] not like too much [A] windows 8 [S] bad', '[A] windows 8 [O] not like too much [S] bad', '[O] not like too much [S] bad [A] windows 8', '[A] windows 8 [S] bad [O] not like too much', '[S] bad [O] not like too much [A] windows 8']

task, data: aste laptop14
target: [('null', 'colors', 'great', 'stunning')]
output: ['[A] colors [O] stunning [S] great', '[A] speedy [O] speedy [S] great']
sent: ['Also', 'stunning', 'colors', 'and', 'speedy']
counter: {('null', 'colors', 'great', 'stunning'): 5, ('null', 'colors', 'great', 'speedy'): 2, ('null', 'speedy', 'great', 'speedy'): 3}
output quads: ['[A] colors [O] stunning [S] great', '[A] speedy [O] speedy [S] great']
multi_path: ['[O] stunning [A] colors [S] great [SSEP] [O] speedy [A] colors [S] great', '[A] colors [O] stunning [S] great [SSEP] [A] speedy [O] speedy [S] great', '[O] stunning [S] great [A] colors [SSEP] [O] speedy [S] great [A] speedy', '[A] colors [S] great [O] stunning [SSEP] [A] speedy [S] great [O] speedy', '[S] great [O] stunning [A] colors [SSEP] [S] great [O] speedy [A] colors']

task, data: aste laptop14
target: [('null', 'battery', 'ok', 'thick')]
output: ['[A] battery [O] thick [S] bad']
sent: ['It', 'is', 'really', 'thick', 'around', 'the', 'battery', '.']
counter: {('null', 'battery', 'bad', 'thick'): 5}
output quads: ['[A] battery [O] thick [S] bad']
multi_path: ['[O] thick [A] battery [S] bad', '[A] battery [O] thick [S] bad', '[O] thick [S] bad [A] battery', '[A] battery [S] bad [O] thick', '[S] bad [O] thick [A] battery']

task, data: aste laptop14
target: [('null', 'osx', 'bad', 'overbearing'), ('null', 'support for games', 'bad', 'lack')]
output: ['[A] osx [O] overbearing [S] bad', '[A] price [O] overbearing [S] bad', '[A] support [O] lack [S] bad']
sent: ['I', 'had', 'the', 'same', 'reasons', 'as', 'most', 'PC', 'users', ':', 'the', 'price', ',', 'the', 'overbearing', 'restrictions', 'of', 'OSX', 'and', 'lack', 'of', 'support', 'for', 'games', '.']
counter: {('null', 'price', 'bad', 'overbearing'): 5, ('null', 'osx', 'bad', 'overbearing'): 5, ('null', 'support', 'bad', 'lack'): 5}
output quads: ['[A] price [O] overbearing [S] bad', '[A] osx [O] overbearing [S] bad', '[A] support [O] lack [S] bad']
multi_path: ['[O] overbearing [A] price [S] bad [SSEP] [O] overbearing [A] osx [S] bad [SSEP] [O] lack [A] support [S] bad', '[A] price [O] overbearing [S] bad [SSEP] [A] osx [O] overbearing [S] bad [SSEP] [A] support [O] lack [S] bad', '[O] overbearing [S] bad [A] price [SSEP] [O] overbearing [S] bad [A] osx [SSEP] [O] lack [S] bad [A] support', '[A] price [S] bad [O] overbearing [SSEP] [A] osx [S] bad [O] overbearing [SSEP] [A] support [S] bad [O] lack', '[S] bad [O] overbearing [A] price [SSEP] [S] bad [O] overbearing [A] osx [SSEP] [S] bad [O] lack [A] support']

task, data: aste laptop14
target: [('null', 'track pad', 'great', 'impressed'), ('null', 'track pad', 'great', 'slim')]
output: ['[A] track pad [O] impressed [S] great']
sent: ['It', 'is', 'very', 'slim', ',', 'the', 'track', 'pad', 'is', 'very', 'much', 'impressed', 'with', 'me', '.']
counter: {('null', 'track pad', 'great', 'impressed'): 5}
output quads: ['[A] track pad [O] impressed [S] great']
multi_path: ['[O] impressed [A] track pad [S] great', '[A] track pad [O] impressed [S] great', '[O] impressed [S] great [A] track pad', '[A] track pad [S] great [O] impressed', '[S] great [O] impressed [A] track pad']

task, data: aste laptop14
target: [('null', 'openoffice', 'great', 'goodness')]
output: ['[A] openoffice [O] thank goodness [S] great']
sent: ['Thank', 'goodness', 'for', 'OpenOffice', '!']
counter: {('null', 'openoffice', 'great', 'thank goodness'): 5}
output quads: ['[A] openoffice [O] thank goodness [S] great']
multi_path: ['[O] thank goodness [A] openoffice [S] great', '[A] openoffice [O] thank goodness [S] great', '[O] thank goodness [S] great [A] openoffice', '[A] openoffice [S] great [O] thank goodness', '[S] great [O] thank goodness [A] openoffice']

task, data: aste laptop14
target: [('null', 'mavericks', 'great', 'impressed')]
output: ['[A] o mavericks [O] impressed [S] great']
sent: ['I', "'ve", 'already', 'upgraded', 'o', 'Mavericks', 'and', 'I', 'am', 'impressed', 'with', 'everything', 'about', 'this', 'computer', '.']
counter: {('null', 'o mavericks', 'great', 'impressed'): 5}
output quads: ['[A] o mavericks [O] impressed [S] great']
multi_path: ['[O] impressed [A] o mavericks [S] great', '[A] o mavericks [O] impressed [S] great', '[O] impressed [S] great [A] o mavericks', '[A] o mavericks [S] great [O] impressed', '[S] great [O] impressed [A] o mavericks']

task, data: aste laptop14
target: [('null', 'i5', 'bad', 'not as fast')]
output: ['[A] i5 [O] fast [S] bad']
sent: ['Not', 'as', 'fast', 'as', 'I', 'would', 'have', 'expect', 'for', 'an', 'i5', '.']
counter: {('null', 'i5', 'bad', 'fast'): 5}
output quads: ['[A] i5 [O] fast [S] bad']
multi_path: ['[O] fast [A] i5 [S] bad', '[A] i5 [O] fast [S] bad', '[O] fast [S] bad [A] i5', '[A] i5 [S] bad [O] fast', '[S] bad [O] fast [A] i5']

task, data: aste laptop14
target: [('null', 'samsung 830 ssd', 'great', 'recommend')]
output: ['[A] hard drive [O] recommend [S] ok']
sent: ['I', 'did', 'swap', 'out', 'the', 'hard', 'drive', 'for', 'a', 'Samsung', '830', 'SSD', 'which', 'I', 'highly', 'recommend', '.']
counter: {('null', 'hard drive', 'ok', 'recommend'): 4, ('null', 'hard drive', 'ok', 'swap out'): 1, ('null', 'samsung 830 ssd', 'great', 'recommend'): 1}
output quads: ['[A] hard drive [O] recommend [S] ok']
multi_path: ['[O] recommend [A] hard drive [S] ok', '[A] hard drive [O] recommend [S] ok', '[O] recommend [S] ok [A] hard drive', '[A] hard drive [S] ok [O] swap out [SSEP] [A] samsung 830 ssd [S] great [O] recommend', '[S] ok [O] recommend [A] hard drive']

task, data: aste laptop14
target: [('null', 'battery', 'great', 'long'), ('null', 'battery', 'great', 'nice')]
output: ['[A] battery [O] long [S] great']
sent: ['It', "'s", 'so', 'nice', 'that', 'the', 'battery', 'last', 'so', 'long', 'and', 'that', 'this', 'machine', 'has', 'the', 'snow', 'lion', '!']
counter: {('null', 'battery', 'great', 'long'): 5}
output quads: ['[A] battery [O] long [S] great']
multi_path: ['[O] long [A] battery [S] great', '[A] battery [O] long [S] great', '[O] long [S] great [A] battery', '[A] battery [S] great [O] long', '[S] great [O] long [A] battery']

task, data: aste laptop14
target: [('null', 'features', 'great', 'new'), ('null', 'features', 'great', 'wanted')]
output: ['[A] features [O] new [S] great']
sent: ['it', "'s", 'exactly', 'what', 'i', 'wanted', ',', 'and', 'it', 'has', 'all', 'the', 'new', 'features', 'and', 'whatnot', '.']
counter: {('null', 'features', 'great', 'new'): 5}
output quads: ['[A] features [O] new [S] great']
multi_path: ['[O] new [A] features [S] great', '[A] features [O] new [S] great', '[O] new [S] great [A] features', '[A] features [S] great [O] new', '[S] great [O] new [A] features']

task, data: aste laptop14
target: [('null', 'sound quality', 'bad', 'isnt superb')]
output: ['[A] sound quality [O] crashes [S] bad', '[A] sound quality [O] isnt superb [S] bad']
sent: ['Though', 'please', 'note', 'that', 'sometimes', 'it', 'crashes', ',', 'and', 'the', 'sound', 'quality', 'isnt', 'superb', '.']
counter: {('null', 'sound quality', 'bad', 'crashes'): 5, ('null', 'sound quality', 'bad', 'isnt superb'): 5}
output quads: ['[A] sound quality [O] crashes [S] bad', '[A] sound quality [O] isnt superb [S] bad']
multi_path: ['[O] crashes [A] sound quality [S] bad [SSEP] [O] isnt superb [A] sound quality [S] bad', '[A] sound quality [O] crashes [S] bad [SSEP] [A] sound quality [O] isnt superb [S] bad', '[O] crashes [S] bad [A] sound quality [SSEP] [O] isnt superb [S] bad [A] sound quality', '[A] sound quality [S] bad [O] crashes [SSEP] [A] sound quality [S] bad [O] isnt superb', '[S] bad [O] crashes [A] sound quality [SSEP] [S] bad [O] isnt superb [A] sound quality']

task, data: aste laptop14
target: [('null', 'battery life', 'great', 'wonderful')]
output: ['[A] battery life [O] happier [S] great', '[A] battery life [O] wonderful [S] great']
sent: ['Does', 'everything', 'I', 'need', 'it', 'to', ',', 'has', 'a', 'wonderful', 'battery', 'life', 'and', 'I', 'could', "n't", 'be', 'happier', '.']
counter: {('null', 'battery life', 'great', 'wonderful'): 5, ('null', 'battery life', 'great', 'happier'): 5}
output quads: ['[A] battery life [O] wonderful [S] great', '[A] battery life [O] happier [S] great']
multi_path: ['[O] wonderful [A] battery life [S] great [SSEP] [O] happier [A] battery life [S] great', '[A] battery life [O] wonderful [S] great [SSEP] [A] battery life [O] happier [S] great', '[O] wonderful [S] great [A] battery life [SSEP] [O] happier [S] great [A] battery life', '[A] battery life [S] great [O] wonderful [SSEP] [A] battery life [S] great [O] happier', '[S] great [O] wonderful [A] battery life [SSEP] [S] great [O] happier [A] battery life']

task, data: aste laptop14
target: [('null', 'material', 'bad', 'cheap')]
output: ['[A] charging cables [O] cheap [S] bad', '[A] restore disks [O] does not come with [S] bad']
sent: ['One', 'more', 'thing', ',', 'this', 'mac', 'does', 'NOT', 'come', 'with', 'restore', 'disks', 'and', 'I', 'am', 'not', 'sure', 'if', 'you', 'can', 'make', 'them', 'direct', 'from', 'the', 'mac', 'like', 'you', 'can', 'with', 'newer', 'PC', "'s", ',', 'also', 'the', 'charging', 'cables', 'are', 'made', 'of', 'the', 'same', 'cheap', 'material', 'as', 'the', 'iPhone/iPod', 'touch', 'cables', '.']
counter: {('null', 'restore disks', 'bad', 'does not come with'): 5, ('null', 'charging cables', 'bad', 'cheap'): 5}
output quads: ['[A] restore disks [O] does not come with [S] bad', '[A] charging cables [O] cheap [S] bad']
multi_path: ['[O] does not come with [A] restore disks [S] bad [SSEP] [O] cheap [A] charging cables [S] bad', '[A] restore disks [O] does not come with [S] bad [SSEP] [A] charging cables [O] cheap [S] bad', '[O] does not come with [S] bad [A] restore disks [SSEP] [O] cheap [S] bad [A] charging cables', '[A] restore disks [S] bad [O] does not come with [SSEP] [A] charging cables [S] bad [O] cheap', '[S] bad [O] does not come with [A] restore disks [SSEP] [S] bad [O] cheap [A] charging cables']

task, data: aste laptop14
target: [('null', 'works', 'great', 'as anticipated')]
output: ['[A] works [O] no problems [S] great']
sent: ['I', 'have', 'experienced', 'no', 'problems', ',', 'works', 'as', 'anticipated', '.']
counter: {('null', 'works', 'great', 'no problems'): 3, ('null', 'works', 'great', 'as anticipated'): 2}
output quads: ['[A] works [O] no problems [S] great']
multi_path: ['[O] no problems [A] works [S] great', '[A] works [O] as anticipated [S] great', '[O] no problems [S] great [A] works', '[A] works [S] great [O] as anticipated', '[S] great [O] no problems [A] works']

task, data: aste laptop14
target: [('null', 'create your own bookmarks', 'great', 'easy'), ('null', 'customize setting', 'great', 'easy')]
output: ['[A] bookmarks [O] easy [S] great', '[A] setting [O] easy [S] great']
sent: ['Easy', 'to', 'customize', 'setting', 'and', 'even', 'create', 'your', 'own', 'bookmarks', '.']
counter: {('null', 'setting', 'great', 'easy'): 5, ('null', 'bookmarks', 'great', 'easy'): 3}
output quads: ['[A] setting [O] easy [S] great', '[A] bookmarks [O] easy [S] great']
multi_path: ['[O] easy [A] setting [S] great', '[A] setting [O] easy [S] great', '[O] easy [S] great [A] setting [SSEP] [O] easy [S] great [A] bookmarks', '[A] setting [S] great [O] easy [SSEP] [A] bookmarks [S] great [O] easy', '[S] great [O] easy [A] setting [SSEP] [S] great [O] easy [A] bookmarks']

task, data: aste laptop14
target: [('null', 'price', 'great', 'good'), ('null', 'working', 'great', 'well')]
output: ['[A] features [O] good [S] great', '[A] price [O] good [S] great', '[A] working [O] well [S] great']
sent: ['it', 'has', 'all', 'the', 'features', 'that', 'we', 'expected', 'and', 'the', 'price', 'was', 'good', ',', 'working', 'well', 'so', 'far', '.']
counter: {('null', 'features', 'great', 'good'): 5, ('null', 'price', 'great', 'good'): 5, ('null', 'working', 'great', 'well'): 5}
output quads: ['[A] features [O] good [S] great', '[A] price [O] good [S] great', '[A] working [O] well [S] great']
multi_path: ['[O] good [A] features [S] great [SSEP] [O] good [A] price [S] great [SSEP] [O] well [A] working [S] great', '[A] features [O] good [S] great [SSEP] [A] price [O] good [S] great [SSEP] [A] working [O] well [S] great', '[O] good [S] great [A] features [SSEP] [O] good [S] great [A] price [SSEP] [O] well [S] great [A] working', '[A] features [S] great [O] good [SSEP] [A] price [S] great [O] good [SSEP] [A] working [S] great [O] well', '[S] great [O] good [A] features [SSEP] [S] great [O] good [A] price [SSEP] [S] great [O] well [A] working']

task, data: aste laptop14
target: [('null', 'operating system', 'great', 'new')]
output: ['[A] ipad [O] super [S] great', '[A] operating system [O] new [S] great']
sent: ['The', 'new', 'operating', 'system', 'makes', 'this', 'computer', 'into', 'a', 'super', 'iPad', '.']
counter: {('null', 'operating system', 'great', 'new'): 5, ('null', 'ipad', 'great', 'super ipad'): 1, ('null', 'ipad', 'great', 'super'): 4}
output quads: ['[A] operating system [O] new [S] great', '[A] ipad [O] super [S] great']
multi_path: ['[O] new [A] operating system [S] great [SSEP] [O] super ipad [A] ipad [S] great', '[A] operating system [O] new [S] great [SSEP] [A] ipad [O] super [S] great', '[O] new [S] great [A] operating system [SSEP] [O] super [S] great [A] ipad', '[A] operating system [S] great [O] new [SSEP] [A] ipad [S] great [O] super', '[S] great [O] new [A] operating system [SSEP] [S] great [O] super [A] ipad']

task, data: aste laptop14
target: [('null', 'surfing', 'great', 'pleasurable'), ('null', 'working', 'great', 'pleasurable')]
output: ['[A] surfing [O] pleasurable [S] great', '[A] working [O] pleasurable [S] great', '[A] working [O] quick [S] great']
sent: ['It', "'s", 'so', 'quick', 'and', 'responsive', 'that', 'it', 'makes', 'working', '/', 'surfing', 'on', 'a', 'computer', 'so', 'much', 'more', 'pleasurable', '!']
counter: {('null', 'and responsive', 'great', 'quick'): 1, ('null', 'working', 'great', 'pleasurable'): 3, ('null', 'surfing', 'great', 'pleasurable'): 5, ('null', 'working', 'great', 'quick'): 4, ('null', 'surfing', 'great', 'responsive'): 2, ('null', 'working', 'great', 'responsive'): 2}
output quads: ['[A] working [O] pleasurable [S] great', '[A] surfing [O] pleasurable [S] great', '[A] working [O] quick [S] great']
multi_path: ['[O] quick [A] and responsive [S] great [SSEP] [O] pleasurable [A] working [S] great [SSEP] [O] pleasurable [A] surfing [S] great', '[A] working [O] quick [S] great [SSEP] [A] surfing [O] responsive [S] great [SSEP] [A] working [O] pleasurable [S] great [SSEP] [A] surfing [O] pleasurable [S] great', '[O] quick [S] great [A] working [SSEP] [O] responsive [S] great [A] working [SSEP] [O] pleasurable [S] great [A] surfing', '[A] working [S] great [O] quick [SSEP] [A] surfing [S] great [O] responsive [SSEP] [A] working [S] great [O] pleasurable [SSEP] [A] surfing [S] great [O] pleasurable', '[S] great [O] quick [A] working [SSEP] [S] great [O] responsive [A] working [SSEP] [S] great [O] pleasurable [A] surfing']

task, data: aste laptop14
target: [('null', 'software', 'great', 'well'), ('null', 'works', 'great', 'fine')]
output: ['[A] run [O] well [S] great', '[A] software [O] well [S] great', '[A] works [O] fine [S] great']
sent: ['It', 'works', 'fine', ',', 'and', 'all', 'the', 'software', 'seems', 'to', 'run', 'pretty', 'well', '.']
counter: {('null', 'works', 'great', 'fine'): 5, ('null', 'software', 'great', 'well'): 5, ('null', 'run', 'great', 'well'): 5}
output quads: ['[A] works [O] fine [S] great', '[A] software [O] well [S] great', '[A] run [O] well [S] great']
multi_path: ['[O] fine [A] works [S] great [SSEP] [O] well [A] software [S] great [SSEP] [O] well [A] run [S] great', '[A] works [O] fine [S] great [SSEP] [A] software [O] well [S] great [SSEP] [A] run [O] well [S] great', '[O] fine [S] great [A] works [SSEP] [O] well [S] great [A] software [SSEP] [O] well [S] great [A] run', '[A] works [S] great [O] fine [SSEP] [A] software [S] great [O] well [SSEP] [A] run [S] great [O] well', '[S] great [O] fine [A] works [SSEP] [S] great [O] well [A] software [SSEP] [S] great [O] well [A] run']

task, data: aste laptop14
target: [('null', 'performance', 'ok', 'great')]
output: ['[A] performance [O] great [S] great']
sent: ['I', 'wanted', 'a', 'computer', 'that', 'was', 'quite', ',', 'fast', ',', 'and', 'that', 'had', 'overall', 'great', 'performance', '.']
counter: {('null', 'performance', 'great', 'great'): 5}
output quads: ['[A] performance [O] great [S] great']
multi_path: ['[O] great [A] performance [S] great', '[A] performance [O] great [S] great', '[O] great [S] great [A] performance', '[A] performance [S] great [O] great', '[S] great [O] great [A] performance']

task, data: aste laptop14
target: [('null', 'instructions', 'bad', 'lack')]
output: ['[A] instructions [O] complaint [S] bad', '[A] instructions [O] lack [S] bad']
sent: ['My', 'only', 'complaint', 'is', 'the', 'total', 'lack', 'of', 'instructions', 'that', 'come', 'with', 'the', 'mac', 'mini', '.']
counter: {('null', 'instructions', 'bad', 'complaint'): 5, ('null', 'instructions', 'bad', 'lack'): 5}
output quads: ['[A] instructions [O] complaint [S] bad', '[A] instructions [O] lack [S] bad']
multi_path: ['[O] complaint [A] instructions [S] bad [SSEP] [O] lack [A] instructions [S] bad', '[A] instructions [O] complaint [S] bad [SSEP] [A] instructions [O] lack [S] bad', '[O] complaint [S] bad [A] instructions [SSEP] [O] lack [S] bad [A] instructions', '[A] instructions [S] bad [O] complaint [SSEP] [A] instructions [S] bad [O] lack', '[S] bad [O] complaint [A] instructions [SSEP] [S] bad [O] lack [A] instructions']

task, data: aste laptop14
target: [('null', 'gaming', 'bad', 'not be good')]
output: ['[A] integrated intel 4000 graphics [O] well [S] great']
sent: ['The', 'only', 'task', 'that', 'this', 'computer', 'would', 'not', 'be', 'good', 'enough', 'for', 'would', 'be', 'gaming', ',', 'otherwise', 'the', 'integrated', 'Intel', '4000', 'graphics', 'work', 'well', 'for', 'other', 'tasks', '.']
counter: {('null', 'integrated intel 4000 graphics', 'great', 'well'): 5}
output quads: ['[A] integrated intel 4000 graphics [O] well [S] great']
multi_path: ['[O] well [A] integrated intel 4000 graphics [S] great', '[A] integrated intel 4000 graphics [O] well [S] great', '[O] well [S] great [A] integrated intel 4000 graphics', '[A] integrated intel 4000 graphics [S] great [O] well', '[S] great [O] well [A] integrated intel 4000 graphics']

task, data: aste laptop14
target: [('null', 'audio', 'great', 'reliable'), ('null', 'photo editing', 'great', 'reliable'), ('null', 'video', 'great', 'reliable')]
output: ['[A] content creation [O] reliable [S] ok']
sent: ['I', 'use', 'it', 'mostly', 'for', 'content', 'creation', '(', 'Audio', ',', 'video', ',', 'photo', 'editing', ')', 'and', 'its', 'reliable', '.']
counter: {('null', 'content creation', 'great', 'reliable'): 2, ('null', 'content creation', 'ok', 'reliable'): 3, ('null', 'audio', 'ok', 'reliable'): 1, ('null', 'video', 'ok', 'reliable'): 1, ('null', 'photo editing', 'ok', 'reliable'): 1}
output quads: ['[A] content creation [O] reliable [S] ok']
multi_path: ['[O] reliable [A] content creation [S] great', '[A] content creation [O] reliable [S] ok [SSEP] [A] audio [O] reliable [S] ok [SSEP] [A] video [O] reliable [S] ok [SSEP] [A] photo editing [O] reliable [S] ok', '[O] reliable [S] great [A] content creation', '[A] content creation [S] ok [O] reliable', '[S] ok [O] reliable [A] content creation']

task, data: aste laptop14
target: [('null', 'built in features', 'great', 'great help')]
output: ['[A] features [O] great [S] great', '[A] features [O] intuitive [S] great']
sent: ['I', 'have', 'been', 'PC', 'for', 'years', 'but', 'this', 'computer', 'is', 'intuitive', 'and', 'its', 'built', 'in', 'features', 'are', 'a', 'great', 'help']
counter: {('null', 'features', 'great', 'intuitive'): 3, ('null', 'features', 'great', 'great'): 5}
output quads: ['[A] features [O] intuitive [S] great', '[A] features [O] great [S] great']
multi_path: ['[O] intuitive [A] features [S] great [SSEP] [O] great [A] features [S] great', '[A] features [O] great [S] great', '[O] intuitive [S] great [A] features [SSEP] [O] great [S] great [A] features', '[A] features [S] great [O] great', '[S] great [O] intuitive [A] features [SSEP] [S] great [O] great [A] features']

task, data: aste laptop14
target: [('null', 'delivery', 'great', 'amazed'), ('null', 'delivery', 'great', 'fast')]
output: ['[A] delivery [O] fast [S] great']
sent: ['I', 'was', 'amazed', 'at', 'how', 'fast', 'the', 'delivery', 'was', '.']
counter: {('null', 'delivery', 'great', 'fast'): 5}
output quads: ['[A] delivery [O] fast [S] great']
multi_path: ['[O] fast [A] delivery [S] great', '[A] delivery [O] fast [S] great', '[O] fast [S] great [A] delivery', '[A] delivery [S] great [O] fast', '[S] great [O] fast [A] delivery']

task, data: aste laptop14
target: [('null', 'works', 'great', 'great')]
output: ['[A] works [O] great [S] great', '[A] works [O] happy [S] great']
sent: ['It', 'works', 'great', 'and', 'I', 'am', 'so', 'happy', 'I', 'bought', 'it', '.']
counter: {('null', 'works', 'great', 'great'): 5, ('null', 'works', 'great', 'happy'): 5}
output quads: ['[A] works [O] great [S] great', '[A] works [O] happy [S] great']
multi_path: ['[O] great [A] works [S] great [SSEP] [O] happy [A] works [S] great', '[A] works [O] great [S] great [SSEP] [A] works [O] happy [S] great', '[O] great [S] great [A] works [SSEP] [O] happy [S] great [A] works', '[A] works [S] great [O] great [SSEP] [A] works [S] great [O] happy', '[S] great [O] great [A] works [SSEP] [S] great [O] happy [A] works']

task, data: aste laptop14
target: [('null', 'design', 'great', 'like'), ('null', 'keyboard', 'great', 'ease of use'), ('null', 'keyboard', 'great', 'like'), ('null', 'ports', 'great', 'plenty')]
output: ['[A] design [O] like [S] great', '[A] ports [O] plenty of [S] great', '[A] use [O] ease [S] great']
sent: ['I', 'like', 'the', 'design', 'and', 'ease', 'of', 'use', 'with', 'the', 'keyboard', ',', 'plenty', 'of', 'ports', '.']
counter: {('null', 'design', 'great', 'like'): 5, ('null', 'use', 'great', 'ease'): 5, ('null', 'ports', 'great', 'plenty of'): 4, ('null', 'keyboard', 'great', 'ease'): 2, ('null', 'ports', 'great', 'plenty'): 1}
output quads: ['[A] design [O] like [S] great', '[A] use [O] ease [S] great', '[A] ports [O] plenty of [S] great']
multi_path: ['[O] like [A] design [S] great [SSEP] [O] ease [A] use [S] great [SSEP] [O] plenty of [A] ports [S] great', '[A] design [O] like [S] great [SSEP] [A] use [O] ease [S] great [SSEP] [A] keyboard [O] ease [S] great [SSEP] [A] ports [O] plenty of [S] great', '[O] like [S] great [A] design [SSEP] [O] ease [S] great [A] use [SSEP] [O] plenty of [S] great [A] ports', '[A] design [S] great [O] like [SSEP] [A] use [S] great [O] ease [SSEP] [A] keyboard [S] great [O] ease [SSEP] [A] ports [S] great [O] plenty', '[S] great [O] like [A] design [SSEP] [S] great [O] ease [A] use [SSEP] [S] great [O] plenty of [A] ports']

task, data: aste laptop14
target: [('null', 'operation', 'bad', 'slow')]
output: ['[A] operation [O] crashes [S] bad', '[A] operation [O] slow [S] bad']
sent: ['I', "'ve", 'lived', 'with', 'the', 'crashes', 'and', 'slow', 'operation', 'and', 'restarts', '.']
counter: {('null', 'operation', 'bad', 'crashes'): 4, ('null', 'operation', 'bad', 'slow'): 5}
output quads: ['[A] operation [O] crashes [S] bad', '[A] operation [O] slow [S] bad']
multi_path: ['[O] crashes [A] operation [S] bad [SSEP] [O] slow [A] operation [S] bad', '[A] operation [O] slow [S] bad', '[O] crashes [S] bad [A] operation [SSEP] [O] slow [S] bad [A] operation', '[A] operation [S] bad [O] crashes [SSEP] [A] operation [S] bad [O] slow', '[S] bad [O] crashes [A] operation [SSEP] [S] bad [O] slow [A] operation']

task, data: aste laptop14
target: [('null', 'usb3 peripherals', 'great', 'less expensive')]
output: ['[A] usb3 peripherals [O] noticably less expensive [S] great']
sent: ['USB3', 'Peripherals', 'are', 'noticably', 'less', 'expensive', 'than', 'the', 'ThunderBolt', 'ones', '.']
counter: {('null', 'usb3 peripherals', 'great', 'noticably less expensive'): 5}
output quads: ['[A] usb3 peripherals [O] noticably less expensive [S] great']
multi_path: ['[O] noticably less expensive [A] usb3 peripherals [S] great', '[A] usb3 peripherals [O] noticably less expensive [S] great', '[O] noticably less expensive [S] great [A] usb3 peripherals', '[A] usb3 peripherals [S] great [O] noticably less expensive', '[S] great [O] noticably less expensive [A] usb3 peripherals']

task, data: aste laptop14
target: [('null', 'user experience', 'great', 'elegant')]
output: ['[A] battery [O] lasts [S] great', '[A] user experience [O] elegant [S] great']
sent: ['The', 'battery', 'lasts', 'as', 'advertised', '(', 'give', 'or', 'take', '15-20', 'minutes', ')', ',', 'and', 'the', 'entire', 'user', 'experience', 'is', 'very', 'elegant', '.']
counter: {('null', 'battery', 'great', 'lasts'): 5, ('null', 'user experience', 'great', 'elegant'): 5}
output quads: ['[A] battery [O] lasts [S] great', '[A] user experience [O] elegant [S] great']
multi_path: ['[O] lasts [A] battery [S] great [SSEP] [O] elegant [A] user experience [S] great', '[A] battery [O] lasts [S] great [SSEP] [A] user experience [O] elegant [S] great', '[O] lasts [S] great [A] battery [SSEP] [O] elegant [S] great [A] user experience', '[A] battery [S] great [O] lasts [SSEP] [A] user experience [S] great [O] elegant', '[S] great [O] lasts [A] battery [SSEP] [S] great [O] elegant [A] user experience']

task, data: aste laptop14
target: [('null', 'size', 'great', 'bonus'), ('null', 'size', 'great', 'smaller')]
output: ['[A] size [O] smaller [S] great', '[A] space [O] bonus [S] bad']
sent: ['The', 'smaller', 'size', 'was', 'a', 'bonus', 'because', 'of', 'space', 'restrictions', '.']
counter: {('null', 'size', 'great', 'smaller'): 5, ('null', 'space', 'bad', 'bonus'): 3, ('null', 'space restrictions', 'great', 'bonus'): 1, ('null', 'space restrictions', 'bad', 'bonus'): 1}
output quads: ['[A] size [O] smaller [S] great', '[A] space [O] bonus [S] bad']
multi_path: ['[O] smaller [A] size [S] great [SSEP] [O] bonus [A] space [S] bad', '[A] size [O] smaller [S] great [SSEP] [A] space [O] bonus [S] bad', '[O] smaller [S] great [A] size [SSEP] [O] bonus [S] great [A] space restrictions', '[A] size [S] great [O] smaller [SSEP] [A] space [S] bad [O] bonus', '[S] great [O] smaller [A] size [SSEP] [S] bad [O] bonus [A] space restrictions']

task, data: aste laptop14
target: [('null', 'support', 'bad', 'dropping'), ('null', 'support', 'bad', 'unfortunately'), ('null', 'xp', 'ok', 'unfortunately')]
output: ['[A] support [O] dropping [S] bad', '[A] xp [O] unfortunately [S] bad']
sent: ['Unfortunately', ',', 'it', 'runs', 'XP', 'and', 'Microsoft', 'is', 'dropping', 'support', 'next', 'April', '.']
counter: {('null', 'xp', 'bad', 'unfortunately'): 3, ('null', 'support', 'bad', 'dropping'): 5, ('null', 'runs xp', 'bad', 'unfortunately'): 2}
output quads: ['[A] xp [O] unfortunately [S] bad', '[A] support [O] dropping [S] bad']
multi_path: ['[O] unfortunately [A] xp [S] bad [SSEP] [O] dropping [A] support [S] bad', '[A] xp [O] unfortunately [S] bad [SSEP] [A] support [O] dropping [S] bad', '[O] unfortunately [S] bad [A] runs xp [SSEP] [O] dropping [S] bad [A] support', '[A] xp [S] bad [O] unfortunately [SSEP] [A] support [S] bad [O] dropping', '[S] bad [O] unfortunately [A] runs xp [SSEP] [S] bad [O] dropping [A] support']

task, data: aste laptop14
target: [('null', 'keyboard', 'great', 'best'), ('null', 'os', 'great', 'easy'), ('null', 'os', 'great', 'like'), ('null', 'overall build', 'great', 'great')]
output: ['[A] build [O] great [S] great', '[A] keyboard [O] best [S] great', '[A] os [O] easy [S] great']
sent: ['First', 'off', ',', 'I', 'really', 'do', 'like', 'my', 'MBP', '...', 'once', 'used', 'to', 'the', 'OS', 'it', 'is', 'pretty', 'easy', 'to', 'get', 'around', ',', 'and', 'the', 'overall', 'build', 'is', 'great', '...', 'eg', 'the', 'keyboard', 'is', 'one', 'of', 'the', 'best', 'to', 'type', 'on', '.']
counter: {('null', 'os', 'great', 'easy'): 5, ('null', 'build', 'great', 'great'): 5, ('null', 'keyboard', 'great', 'best'): 5}
output quads: ['[A] os [O] easy [S] great', '[A] build [O] great [S] great', '[A] keyboard [O] best [S] great']
multi_path: ['[O] easy [A] os [S] great [SSEP] [O] great [A] build [S] great [SSEP] [O] best [A] keyboard [S] great', '[A] os [O] easy [S] great [SSEP] [A] build [O] great [S] great [SSEP] [A] keyboard [O] best [S] great', '[O] easy [S] great [A] os [SSEP] [O] great [S] great [A] build [SSEP] [O] best [S] great [A] keyboard', '[A] os [S] great [O] easy [SSEP] [A] build [S] great [O] great [SSEP] [A] keyboard [S] great [O] best', '[S] great [O] easy [A] os [SSEP] [S] great [O] great [A] build [SSEP] [S] great [O] best [A] keyboard']

task, data: aste laptop14
target: [('null', 'construction', 'great', 'solid')]
output: ['[A] construction [O] solid [S] great', '[A] system [O] solid [S] ok']
sent: ['It', 'is', 'made', 'of', 'such', 'solid', 'construction', 'and', 'since', 'I', 'have', 'never', 'had', 'a', 'Mac', 'using', 'my', 'iPhone', 'helped', 'me', 'get', 'used', 'to', 'the', 'system', 'a', 'bit', '.']
counter: {('null', 'construction', 'great', 'solid'): 5, ('null', 'system', 'ok', 'solid'): 5}
output quads: ['[A] construction [O] solid [S] great', '[A] system [O] solid [S] ok']
multi_path: ['[O] solid [A] construction [S] great [SSEP] [O] solid [A] system [S] ok', '[A] construction [O] solid [S] great [SSEP] [A] system [O] solid [S] ok', '[O] solid [S] great [A] construction [SSEP] [O] solid [S] ok [A] system', '[A] construction [S] great [O] solid [SSEP] [A] system [S] ok [O] solid', '[S] great [O] solid [A] construction [SSEP] [S] ok [O] solid [A] system']

task, data: aste laptop14
target: [('null', 'disk drive', 'ok', "doesn't have")]
output: ["[A] disk drive [O] doesn't have [S] bad"]
sent: ['It', "'s", 'ok', 'but', 'does', "n't", 'have', 'a', 'disk', 'drive', 'which', 'I', 'did', "n't", 'know', 'until', 'after', 'I', 'bought', 'it', '.']
counter: {('null', 'disk drive', 'bad', "doesn't have"): 5}
output quads: ["[A] disk drive [O] doesn't have [S] bad"]
multi_path: ["[O] doesn't have [A] disk drive [S] bad", "[A] disk drive [O] doesn't have [S] bad", "[O] doesn't have [S] bad [A] disk drive", "[A] disk drive [S] bad [O] doesn't have", "[S] bad [O] doesn't have [A] disk drive"]

task, data: aste laptop14
target: [('null', 'hdmi receptacle', 'ok', 'no'), ('null', 'sd card slot', 'ok', 'nor')]
output: ['[A] hdmi receptacle [O] no [S] bad', '[A] sd card slot [O] no [S] bad']
sent: ['There', 'is', 'no', 'HDMI', 'receptacle', ',', 'nor', 'is', 'there', 'an', 'SD', 'card', 'slot', 'located', 'anywhere', 'on', 'the', 'device', '.']
counter: {('null', 'hdmi receptacle', 'bad', 'no'): 5, ('null', 'sd card slot', 'bad', 'no'): 5}
output quads: ['[A] hdmi receptacle [O] no [S] bad', '[A] sd card slot [O] no [S] bad']
multi_path: ['[O] no [A] hdmi receptacle [S] bad [SSEP] [O] no [A] sd card slot [S] bad', '[A] hdmi receptacle [O] no [S] bad [SSEP] [A] sd card slot [O] no [S] bad', '[O] no [S] bad [A] hdmi receptacle [SSEP] [O] no [S] bad [A] sd card slot', '[A] hdmi receptacle [S] bad [O] no [SSEP] [A] sd card slot [S] bad [O] no', '[S] bad [O] no [A] hdmi receptacle [SSEP] [S] bad [O] no [A] sd card slot']

task, data: aste laptop14
target: [('null', 'design app', 'ok', "don't have")]
output: ["[A] design app [O] don't have [S] bad"]
sent: ['It', 'should', "n't", 'happen', 'like', 'that', ',', 'I', 'do', "n't", 'have', 'any', 'design', 'app', 'open', 'or', 'anything', '.']
counter: {('null', 'design app', 'bad', "don't have"): 5}
output quads: ["[A] design app [O] don't have [S] bad"]
multi_path: ["[O] don't have [A] design app [S] bad", "[A] design app [O] don't have [S] bad", "[O] don't have [S] bad [A] design app", "[A] design app [S] bad [O] don't have", "[S] bad [O] don't have [A] design app"]

task, data: aste laptop14
target: [('null', 'feels', 'great', 'solid'), ('null', 'finish', 'great', 'flawless'), ('null', 'looks', 'great', 'solid')]
output: ['[A] finish [O] flawless [S] great', '[A] finish [O] solid [S] great']
sent: ['It', 'looks', 'and', 'feels', 'solid', ',', 'with', 'a', 'flawless', 'finish', '.']
counter: {('null', 'finish', 'great', 'solid'): 3, ('null', 'finish', 'great', 'flawless'): 5}
output quads: ['[A] finish [O] solid [S] great', '[A] finish [O] flawless [S] great']
multi_path: ['[O] solid [A] finish [S] great [SSEP] [O] flawless [A] finish [S] great', '[A] finish [O] flawless [S] great', '[O] solid [S] great [A] finish [SSEP] [O] flawless [S] great [A] finish', '[A] finish [S] great [O] flawless', '[S] great [O] solid [A] finish [SSEP] [S] great [O] flawless [A] finish']

task, data: aste laptop14
target: [('null', 'power down', 'bad', 'not'), ('null', 'system', 'bad', 'not power down')]
output: ['[A] system [O] forced [S] bad']
sent: ['Then', 'the', 'system', 'would', 'many', 'times', 'not', 'power', 'down', 'without', 'a', 'forced', 'power-off', '.']
counter: {('null', 'system', 'bad', 'forced'): 5}
output quads: ['[A] system [O] forced [S] bad']
multi_path: ['[O] forced [A] system [S] bad', '[A] system [O] forced [S] bad', '[O] forced [S] bad [A] system', '[A] system [S] bad [O] forced', '[S] bad [O] forced [A] system']

task, data: aste laptop14
target: [('null', 'trackpad', 'great', 'love'), ('null', 'use', 'great', 'easy')]
output: ['[A] looks [O] easy [S] great', '[A] trackpad [O] love [S] great', '[A] use [O] easy [S] great']
sent: ['Its', 'the', 'best', ',', 'its', 'got', 'the', 'looks', ',', 'super', 'easy', 'to', 'use', 'and', 'love', 'all', 'you', 'can', 'do', 'with', 'the', 'trackpad', '!', '..']
counter: {('null', 'use', 'great', 'easy'): 4, ('null', 'trackpad', 'great', 'love'): 5, ('null', 'looks', 'great', 'easy'): 3}
output quads: ['[A] use [O] easy [S] great', '[A] trackpad [O] love [S] great', '[A] looks [O] easy [S] great']
multi_path: ['[O] easy [A] use [S] great [SSEP] [O] love [A] trackpad [S] great', '[A] looks [O] easy [S] great [SSEP] [A] use [O] easy [S] great [SSEP] [A] trackpad [O] love [S] great', '[O] easy [S] great [A] looks [SSEP] [O] love [S] great [A] trackpad', '[A] looks [S] great [O] easy [SSEP] [A] use [S] great [O] easy [SSEP] [A] trackpad [S] great [O] love', '[S] great [O] easy [A] use [SSEP] [S] great [O] love [A] trackpad']

task, data: aste laptop14
target: [('null', 'battery lifetime', 'bad', 'shortening'), ('null', 'hardware ( keyboard )', 'bad', 'issues'), ('null', 'hardware ( keyboard )', 'bad', 'suffering'), ('null', 'performance', 'bad', 'slow')]
output: ['[A] battery lifetime [O] shortening [S] bad', '[A] hardware [O] issues [S] bad', '[A] keyboard [O] issues [S] bad', '[A] performance [O] slow [S] bad']
sent: ['It', 'was', 'also', 'suffering', 'from', 'hardware', '(', 'keyboard', ')', 'issues', ',', 'relatively', 'slow', 'performance', 'and', 'shortening', 'battery', 'lifetime', '.']
counter: {('null', 'hardware', 'bad', 'issues'): 5, ('null', 'keyboard', 'bad', 'issues'): 5, ('null', 'performance', 'bad', 'slow'): 5, ('null', 'battery lifetime', 'bad', 'shortening'): 5}
output quads: ['[A] hardware [O] issues [S] bad', '[A] keyboard [O] issues [S] bad', '[A] performance [O] slow [S] bad', '[A] battery lifetime [O] shortening [S] bad']
multi_path: ['[O] issues [A] hardware [S] bad [SSEP] [O] issues [A] keyboard [S] bad [SSEP] [O] slow [A] performance [S] bad [SSEP] [O] shortening [A] battery lifetime [S] bad', '[A] hardware [O] issues [S] bad [SSEP] [A] keyboard [O] issues [S] bad [SSEP] [A] performance [O] slow [S] bad [SSEP] [A] battery lifetime [O] shortening [S] bad', '[O] issues [S] bad [A] hardware [SSEP] [O] issues [S] bad [A] keyboard [SSEP] [O] slow [S] bad [A] performance [SSEP] [O] shortening [S] bad [A] battery lifetime', '[A] hardware [S] bad [O] issues [SSEP] [A] keyboard [S] bad [O] issues [SSEP] [A] performance [S] bad [O] slow [SSEP] [A] battery lifetime [S] bad [O] shortening', '[S] bad [O] issues [A] hardware [SSEP] [S] bad [O] issues [A] keyboard [SSEP] [S] bad [O] slow [A] performance [SSEP] [S] bad [O] shortening [A] battery lifetime']

task, data: aste laptop14
target: [('null', 'runs', 'great', 'good')]
output: ['[A] runs [O] does the job [S] great', '[A] runs [O] good [S] great']
sent: ['Runs', 'good', 'and', 'does', 'the', 'job', ',', 'ca', "n't", 'complain', 'about', 'that', '!']
counter: {('null', 'runs', 'great', 'good'): 5, ('null', 'runs', 'great', 'does the job'): 3, ('null', 'job', 'great', 'does the job'): 1, ('null', 'does the job', 'great', 'does the job'): 1}
output quads: ['[A] runs [O] good [S] great', '[A] runs [O] does the job [S] great']
multi_path: ['[O] good [A] runs [S] great [SSEP] [O] does the job [A] runs [S] great', '[A] runs [O] good [S] great [SSEP] [A] job [O] does the job [S] great', '[O] good [S] great [A] runs [SSEP] [O] does the job [S] great [A] runs', '[A] runs [S] great [O] good [SSEP] [A] does the job [S] great [O] does the job', '[S] great [O] good [A] runs [SSEP] [S] great [O] does the job [A] runs']

task, data: aste laptop14
target: [('null', 'footprint', 'great', 'small')]
output: ['[A] footprint [O] small [S] bad']
sent: ['It', "'s", 'silent', 'and', 'has', 'a', 'very', 'small', 'footprint', 'on', 'my', 'desk', '.']
counter: {('null', 'footprint', 'bad', 'small'): 5}
output quads: ['[A] footprint [O] small [S] bad']
multi_path: ['[O] small [A] footprint [S] bad', '[A] footprint [O] small [S] bad', '[O] small [S] bad [A] footprint', '[A] footprint [S] bad [O] small', '[S] bad [O] small [A] footprint']

task, data: aste laptop14
target: [('null', 'design', 'ok', 'defective'), ('null', 'intel 4000 graphics chipset', 'ok', 'defective')]
output: ['[A] design [O] defective [S] bad', '[A] intel 4000 graphics chipset [O] defective [S] bad', '[A] stock [O] old [S] bad']
sent: ['Apple', 'is', 'aware', 'of', 'this', 'issue', 'and', 'this', 'is', 'either', 'old', 'stock', 'or', 'a', 'defective', 'design', 'involving', 'the', 'intel', '4000', 'graphics', 'chipset', '.']
counter: {('null', 'stock', 'bad', 'old'): 5, ('null', 'design', 'bad', 'defective'): 5, ('null', 'intel 4000 graphics chipset', 'bad', 'defective'): 5}
output quads: ['[A] stock [O] old [S] bad', '[A] design [O] defective [S] bad', '[A] intel 4000 graphics chipset [O] defective [S] bad']
multi_path: ['[O] old [A] stock [S] bad [SSEP] [O] defective [A] design [S] bad [SSEP] [O] defective [A] intel 4000 graphics chipset [S] bad', '[A] stock [O] old [S] bad [SSEP] [A] design [O] defective [S] bad [SSEP] [A] intel 4000 graphics chipset [O] defective [S] bad', '[O] old [S] bad [A] stock [SSEP] [O] defective [S] bad [A] design [SSEP] [O] defective [S] bad [A] intel 4000 graphics chipset', '[A] stock [S] bad [O] old [SSEP] [A] design [S] bad [O] defective [SSEP] [A] intel 4000 graphics chipset [S] bad [O] defective', '[S] bad [O] old [A] stock [SSEP] [S] bad [O] defective [A] design [SSEP] [S] bad [O] defective [A] intel 4000 graphics chipset']

task, data: aste laptop14
target: [('null', 'performed', 'great', 'admirably')]
output: ['[A] asus [O] admirably [S] great']
sent: ['My', 'last', 'laptop', 'was', 'a', '17', "''", 'ASUS', 'gaming', 'machine', ',', 'which', 'performed', 'admirably', ',', 'but', 'having', 'since', 'built', 'my', 'own', 'desktop', 'and', 'really', 'settling', 'into', 'the', 'college', 'life', ',', 'I', 'found', 'myself', 'wanting', 'something', 'smaller', 'and', 'less', 'cumbersome', ',', 'not', 'to', 'mention', 'that', 'the', 'ASUS', 'had', 'been', 'slowly', 'developing', 'problems', 'ever', 'since', 'I', 'bought', 'it', 'about', '4', 'years', 'ago', '.']
counter: {('null', 'asus', 'great', 'admirably'): 5}
output quads: ['[A] asus [O] admirably [S] great']
multi_path: ['[O] admirably [A] asus [S] great', '[A] asus [O] admirably [S] great', '[O] admirably [S] great [A] asus', '[A] asus [S] great [O] admirably', '[S] great [O] admirably [A] asus']

task, data: aste laptop14
target: [('null', 'battery cycle count', 'great', 'surprised'), ('null', 'battery cycle count', 'great', 'zero'), ('null', 'hardware', 'great', 'perfectly')]
output: ['[A] hardware [O] perfectly [S] great']
sent: ['However', ',', 'it', 'did', 'not', 'have', 'any', 'scratches', ',', 'ZERO', 'battery', 'cycle', 'count', '(', 'pretty', 'surprised', ')', ',', 'and', 'all', 'the', 'hardware', 'seemed', 'to', 'be', 'working', 'perfectly', '.']
counter: {('null', 'hardware', 'great', 'perfectly'): 5, ('null', 'battery cycle count', 'great', 'surprised'): 2, ('null', 'battery cycle count', 'great', 'zero'): 2}
output quads: ['[A] hardware [O] perfectly [S] great']
multi_path: ['[O] perfectly [A] hardware [S] great', '[A] battery cycle count [O] surprised [S] great [SSEP] [A] hardware [O] perfectly [S] great', '[O] zero [S] great [A] battery cycle count [SSEP] [O] perfectly [S] great [A] hardware', '[A] battery cycle count [S] great [O] surprised [SSEP] [A] hardware [S] great [O] perfectly', '[S] great [O] zero [A] battery cycle count [SSEP] [S] great [O] perfectly [A] hardware']

task, data: aste laptop14
target: [('null', 'screen', 'ok', 'nice'), ('null', 'storage', 'ok', 'big')]
output: ['[A] screen [O] fast [S] great', '[A] screen [O] nice [S] great', '[A] storage [O] big [S] great']
sent: ['I', 'needed', 'a', 'laptop', 'with', 'big', 'storage', ',', 'a', 'nice', 'screen', 'and', 'fast', 'so', 'I', 'can', 'photoshop', 'without', 'any', 'problem', '.']
counter: {('null', 'storage', 'great', 'big'): 5, ('null', 'screen', 'great', 'nice'): 5, ('null', 'screen', 'great', 'fast'): 5}
output quads: ['[A] storage [O] big [S] great', '[A] screen [O] nice [S] great', '[A] screen [O] fast [S] great']
multi_path: ['[O] big [A] storage [S] great [SSEP] [O] nice [A] screen [S] great [SSEP] [O] fast [A] screen [S] great', '[A] storage [O] big [S] great [SSEP] [A] screen [O] nice [S] great [SSEP] [A] screen [O] fast [S] great', '[O] big [S] great [A] storage [SSEP] [O] nice [S] great [A] screen [SSEP] [O] fast [S] great [A] screen', '[A] storage [S] great [O] big [SSEP] [A] screen [S] great [O] nice [SSEP] [A] screen [S] great [O] fast', '[S] great [O] big [A] storage [SSEP] [S] great [O] nice [A] screen [SSEP] [S] great [O] fast [A] screen']

task, data: aste laptop14
target: [('null', 'mac os', 'great', 'like'), ('null', 'speaker quality', 'bad', 'lacking')]
output: ['[A] speaker quality [O] lacking [S] bad']
sent: ['I', 'like', 'coming', 'back', 'to', 'Mac', 'OS', 'but', 'this', 'laptop', 'is', 'lacking', 'in', 'speaker', 'quality', 'compared', 'to', 'my', '$', '400', 'old', 'HP', 'laptop', '.']
counter: {('null', 'speaker quality', 'bad', 'lacking'): 5}
output quads: ['[A] speaker quality [O] lacking [S] bad']
multi_path: ['[O] lacking [A] speaker quality [S] bad', '[A] speaker quality [O] lacking [S] bad', '[O] lacking [S] bad [A] speaker quality', '[A] speaker quality [S] bad [O] lacking', '[S] bad [O] lacking [A] speaker quality']

task, data: aste laptop14
target: [('null', 'entertainment uses', 'great', 'great'), ('null', 'streaming video', 'great', 'great')]
output: ['[A] entertainment [O] great [S] great', '[A] streaming video [O] great [S] great']
sent: ['It', "'s", 'great', 'for', 'streaming', 'video', 'and', 'other', 'entertainment', 'uses', '.']
counter: {('null', 'streaming video', 'great', 'great'): 5, ('null', 'entertainment', 'great', 'great'): 5}
output quads: ['[A] streaming video [O] great [S] great', '[A] entertainment [O] great [S] great']
multi_path: ['[O] great [A] streaming video [S] great [SSEP] [O] great [A] entertainment [S] great', '[A] streaming video [O] great [S] great [SSEP] [A] entertainment [O] great [S] great', '[O] great [S] great [A] streaming video [SSEP] [O] great [S] great [A] entertainment', '[A] streaming video [S] great [O] great [SSEP] [A] entertainment [S] great [O] great', '[S] great [O] great [A] streaming video [SSEP] [S] great [O] great [A] entertainment']

task, data: aste laptop14
target: [('null', 'design', 'great', 'like'), ('null', 'features', 'great', 'needs to be improved')]
output: ['[A] design [O] like [S] great', '[A] features [O] like [S] great']
sent: ['I', 'like', 'the', 'design', 'and', 'its', 'features', 'but', 'there', 'are', 'somethings', 'I', 'think', 'needs', 'to', 'be', 'improved', '.']
counter: {('null', 'design', 'great', 'like'): 5, ('null', 'features', 'great', 'like'): 5}
output quads: ['[A] design [O] like [S] great', '[A] features [O] like [S] great']
multi_path: ['[O] like [A] design [S] great [SSEP] [O] like [A] features [S] great', '[A] design [O] like [S] great [SSEP] [A] features [O] like [S] great', '[O] like [S] great [A] design [SSEP] [O] like [S] great [A] features', '[A] design [S] great [O] like [SSEP] [A] features [S] great [O] like', '[S] great [O] like [A] design [SSEP] [S] great [O] like [A] features']

task, data: aste laptop14
target: [('null', 'mac office', 'bad', 'problems')]
output: ['[A] mac office [O] small problems [S] bad']
sent: ['There', 'were', 'small', 'problems', 'with', 'Mac', 'office', '.']
counter: {('null', 'mac office', 'bad', 'small problems'): 4, ('null', 'mac office', 'bad', 'problems'): 1}
output quads: ['[A] mac office [O] small problems [S] bad']
multi_path: ['[O] small problems [A] mac office [S] bad', '[A] mac office [O] small problems [S] bad', '[O] problems [S] bad [A] mac office', '[A] mac office [S] bad [O] small problems', '[S] bad [O] small problems [A] mac office']

task, data: aste laptop14
target: [('null', 'spec', 'bad', 'disappointed')]
output: ["[A] 27 '' imacs [O] disappointed [S] ok", '[A] spec [O] disappointed [S] bad']
sent: ['I', 'ordered', 'my', '2012', 'mac', 'mini', 'after', 'being', 'disappointed', 'with', 'spec', 'of', 'the', 'new', '27', "''", 'Imacs', '.']
counter: {('null', 'spec', 'bad', 'disappointed'): 5, ('null', "27 '' imacs", 'ok', 'disappointed'): 4, ('null', "27 '' imacs", 'bad', 'disappointed'): 1}
output quads: ['[A] spec [O] disappointed [S] bad', "[A] 27 '' imacs [O] disappointed [S] ok"]
multi_path: ["[O] disappointed [A] spec [S] bad [SSEP] [O] disappointed [A] 27 '' imacs [S] ok", "[A] spec [O] disappointed [S] bad [SSEP] [A] 27 '' imacs [O] disappointed [S] ok", "[O] disappointed [S] bad [A] spec [SSEP] [O] disappointed [S] ok [A] 27 '' imacs", "[A] spec [S] bad [O] disappointed [SSEP] [A] 27 '' imacs [S] bad [O] disappointed", "[S] bad [O] disappointed [A] spec [SSEP] [S] ok [O] disappointed [A] 27 '' imacs"]

task, data: aste laptop14
target: [('null', 'looks', 'great', 'great'), ('null', 'use', 'great', 'easy')]
output: ['[A] use [O] easy [S] great', '[A] use [O] great [S] great']
sent: ['Its', 'fast', ',', 'easy', 'to', 'use', 'and', 'it', 'looks', 'great', '.']
counter: {('null', 'use', 'great', 'easy'): 5, ('null', 'use', 'great', 'great'): 3, ('null', 'looks', 'great', 'great'): 2}
output quads: ['[A] use [O] easy [S] great', '[A] use [O] great [S] great']
multi_path: ['[O] easy [A] use [S] great [SSEP] [O] great [A] use [S] great', '[A] use [O] easy [S] great [SSEP] [A] use [O] great [S] great', '[O] easy [S] great [A] use [SSEP] [O] great [S] great [A] looks', '[A] use [S] great [O] easy [SSEP] [A] use [S] great [O] great', '[S] great [O] easy [A] use [SSEP] [S] great [O] great [A] looks']

task, data: aste laptop14
target: [('null', 'performance', 'great', 'better'), ('null', 'ssd', 'great', 'better')]
output: ['[A] performance [O] better [S] great']
sent: ['Performance', 'is', 'much', 'much', 'better', 'on', 'the', 'Pro', ',', 'especially', 'if', 'you', 'install', 'an', 'SSD', 'on', 'it', '.']
counter: {('null', 'performance', 'great', 'better'): 5}
output quads: ['[A] performance [O] better [S] great']
multi_path: ['[O] better [A] performance [S] great', '[A] performance [O] better [S] great', '[O] better [S] great [A] performance', '[A] performance [S] great [O] better', '[S] great [O] better [A] performance']

task, data: aste laptop14
target: [('null', 'magsafe 2 connection', 'bad', 'not work'), ('null', 'magsafe accessories', 'ok', 'not work')]
output: ['[A] magsafe accessories [O] not work [S] bad']
sent: ['Note', ',', 'however', ',', 'that', 'any', 'existing', 'MagSafe', 'accessories', 'you', 'have', 'will', 'not', 'work', 'with', 'the', 'MagSafe', '2', 'connection', '.']
counter: {('null', 'magsafe accessories', 'bad', 'not work'): 5, ('null', 'magsafe 2 connection', 'ok', 'not work'): 1}
output quads: ['[A] magsafe accessories [O] not work [S] bad']
multi_path: ['[O] not work [A] magsafe accessories [S] bad', '[A] magsafe accessories [O] not work [S] bad', '[O] not work [S] bad [A] magsafe accessories', '[A] magsafe accessories [S] bad [O] not work [SSEP] [A] magsafe 2 connection [S] ok [O] not work', '[S] bad [O] not work [A] magsafe accessories']

task, data: aste laptop14
target: [('null', 'mouse', 'ok', 'recommend'), ('null', 'touchpad', 'bad', 'dislike'), ('null', 'touchpad', 'bad', 'unresponsive')]
output: ['[A] touchpad [O] dislike [S] bad', '[A] touchpad [O] unresponsive [S] bad']
sent: ['The', 'only', 'thing', 'I', 'dislike', 'is', 'the', 'touchpad', ',', 'alot', 'of', 'the', 'times', 'its', 'unresponsive', 'and', 'does', 'things', 'I', 'dont', 'want', 'it', 'too', ',', 'I', 'would', 'recommend', 'using', 'a', 'mouse', 'with', 'it', '.']
counter: {('null', 'touchpad', 'bad', 'dislike'): 5, ('null', 'touchpad', 'bad', 'unresponsive'): 5, ('null', 'mouse', 'great', 'recommend'): 1}
output quads: ['[A] touchpad [O] dislike [S] bad', '[A] touchpad [O] unresponsive [S] bad']
multi_path: ['[O] dislike [A] touchpad [S] bad [SSEP] [O] unresponsive [A] touchpad [S] bad', '[A] touchpad [O] dislike [S] bad [SSEP] [A] touchpad [O] unresponsive [S] bad', '[O] dislike [S] bad [A] touchpad [SSEP] [O] unresponsive [S] bad [A] touchpad [SSEP] [O] recommend [S] great [A] mouse', '[A] touchpad [S] bad [O] dislike [SSEP] [A] touchpad [S] bad [O] unresponsive', '[S] bad [O] dislike [A] touchpad [SSEP] [S] bad [O] unresponsive [A] touchpad']

task, data: aste laptop14
target: [('null', 'fans', 'great', "aren't audible"), ('null', 'runs', 'great', 'quiet')]
output: ['[A] runs [O] quiet [S] great']
sent: ['The', 'Mac', 'mini', 'is', 'about', '8x', 'smaller', 'than', 'my', 'old', 'computer', 'which', 'is', 'a', 'huge', 'bonus', 'and', 'runs', 'very', 'quiet', ',', 'actually', 'the', 'fans', 'are', "n't", 'audible', 'unlike', 'my', 'old', 'pc']
counter: {('null', 'runs', 'great', 'quiet'): 4, ('null', 'fans', 'great', "aren't audible"): 1}
output quads: ['[A] runs [O] quiet [S] great']
multi_path: ['[O] quiet [A] runs [S] great', '[A] runs [O] quiet [S] great', "[O] aren't audible [S] great [A] fans", '[A] runs [S] great [O] quiet', '[S] great [O] quiet [A] runs']

task, data: aste laptop14
target: [('null', 'mac ecosystem', 'ok', 'take some time')]
output: ['[A] mac ecosystem [O] difficult [S] ok']
sent: ['I', 'thought', 'the', 'transition', 'would', 'be', 'difficult', 'at', 'best', 'and', 'would', 'take', 'some', 'time', 'to', 'fully', 'familiarize', 'myself', 'with', 'the', 'new', 'Mac', 'ecosystem', '.']
counter: {('null', 'mac ecosystem', 'ok', 'difficult'): 5}
output quads: ['[A] mac ecosystem [O] difficult [S] ok']
multi_path: ['[O] difficult [A] mac ecosystem [S] ok', '[A] mac ecosystem [O] difficult [S] ok', '[O] difficult [S] ok [A] mac ecosystem', '[A] mac ecosystem [S] ok [O] difficult', '[S] ok [O] difficult [A] mac ecosystem']

task, data: aste laptop14
target: [('null', 'appearance', 'great', 'please'), ('null', 'functionality', 'great', 'please'), ('null', 'use', 'great', 'ease'), ('null', 'use', 'great', 'please')]
output: ['[A] appearance [O] ready [S] great', '[A] functionality [O] ease [S] great', '[A] use [O] ease [S] great']
sent: ['I', 'am', 'please', 'with', 'the', 'products', 'ease', 'of', 'use', ';', 'out', 'of', 'the', 'box', 'ready', ';', 'appearance', 'and', 'functionality', '.']
counter: {('null', 'use', 'great', 'ease'): 5, ('null', 'appearance', 'great', 'ready'): 5, ('null', 'functionality', 'great', 'ease'): 3, ('null', 'functionality', 'great', 'please'): 2}
output quads: ['[A] use [O] ease [S] great', '[A] appearance [O] ready [S] great', '[A] functionality [O] ease [S] great']
multi_path: ['[O] ease [A] use [S] great [SSEP] [O] ready [A] appearance [S] great [SSEP] [O] ease [A] functionality [S] great', '[A] use [O] ease [S] great [SSEP] [A] appearance [O] ready [S] great [SSEP] [A] functionality [O] please [S] great', '[O] ease [S] great [A] use [SSEP] [O] ready [S] great [A] appearance [SSEP] [O] ease [S] great [A] functionality', '[A] use [S] great [O] ease [SSEP] [A] appearance [S] great [O] ready [SSEP] [A] functionality [S] great [O] please', '[S] great [O] ease [A] use [SSEP] [S] great [O] ready [A] appearance [SSEP] [S] great [O] ease [A] functionality']

task, data: aste laptop14
target: [('null', 'start up', 'great', 'love')]
output: ['[A] start up [O] love [S] great', '[A] start up [O] quick [S] great']
sent: ['I', 'love', 'the', 'quick', 'start', 'up', '.']
counter: {('null', 'start up', 'great', 'love'): 5, ('null', 'start up', 'great', 'quick'): 5}
output quads: ['[A] start up [O] love [S] great', '[A] start up [O] quick [S] great']
multi_path: ['[O] love [A] start up [S] great [SSEP] [O] quick [A] start up [S] great', '[A] start up [O] love [S] great [SSEP] [A] start up [O] quick [S] great', '[O] love [S] great [A] start up [SSEP] [O] quick [S] great [A] start up', '[A] start up [S] great [O] love [SSEP] [A] start up [S] great [O] quick', '[S] great [O] love [A] start up [SSEP] [S] great [O] quick [A] start up']

task, data: aste laptop14
target: [('null', 'build quality', 'great', 'confident'), ('null', 'unibody construction', 'great', "can't beat")]
output: ['[A] build quality [O] confident [S] great']
sent: ['Here', 'are', 'the', 'things', 'that', 'made', 'me', 'confident', 'with', 'my', 'purchase', ':', 'Build', 'Quality', '-', 'Seriously', ',', 'you', 'ca', "n't", 'beat', 'a', 'unibody', 'construction', '.']
counter: {('null', 'build quality', 'great', 'confident'): 5}
output quads: ['[A] build quality [O] confident [S] great']
multi_path: ['[O] confident [A] build quality [S] great', '[A] build quality [O] confident [S] great', '[O] confident [S] great [A] build quality', '[A] build quality [S] great [O] confident', '[S] great [O] confident [A] build quality']

task, data: aste laptop14
target: [('null', 'flexibility for connectivity', 'great', 'more')]
output: ['[A] connectivity [O] flexibility [S] great']
sent: ['It', 'provides', 'much', 'more', 'flexibility', 'for', 'connectivity', '.']
counter: {('null', 'connectivity', 'great', 'flexibility'): 5}
output quads: ['[A] connectivity [O] flexibility [S] great']
multi_path: ['[O] flexibility [A] connectivity [S] great', '[A] connectivity [O] flexibility [S] great', '[O] flexibility [S] great [A] connectivity', '[A] connectivity [S] great [O] flexibility', '[S] great [O] flexibility [A] connectivity']

task, data: aste laptop14
target: [('null', 'mac tutorials', 'great', 'help')]
output: ['[A] tutorials [O] help [S] great']
sent: ['Mac', 'tutorials', 'do', 'help', '.']
counter: {('null', 'tutorials', 'great', 'help'): 5}
output quads: ['[A] tutorials [O] help [S] great']
multi_path: ['[O] help [A] tutorials [S] great', '[A] tutorials [O] help [S] great', '[O] help [S] great [A] tutorials', '[A] tutorials [S] great [O] help', '[S] great [O] help [A] tutorials']

task, data: aste laptop14
target: [('null', 'adapter', 'ok', 'new'), ('null', 'adapter', 'ok', 'no change')]
output: ['[A] adapter [O] new [S] ok']
sent: ['I', 'got', 'the', 'new', 'adapter', 'and', 'there', 'was', 'no', 'change', '.']
counter: {('null', 'adapter', 'ok', 'new'): 5}
output quads: ['[A] adapter [O] new [S] ok']
multi_path: ['[O] new [A] adapter [S] ok', '[A] adapter [O] new [S] ok', '[O] new [S] ok [A] adapter', '[A] adapter [S] ok [O] new', '[S] ok [O] new [A] adapter']

task, data: aste laptop14
target: [('null', 'logic board', 'great', 'cried'), ('null', 'logic board', 'great', 'died'), ('null', 'logic board', 'great', 'laid down'), ('null', 'logic board', 'great', 'utterly fried')]
output: ['[A] logic board [O] died [S] bad', '[A] logic board [O] fried [S] bad']
sent: ['Logic', 'board', 'utterly', 'fried', ',', 'cried', ',', 'and', 'laid', 'down', 'and', 'died', '.']
counter: {('null', 'logic board', 'bad', 'fried'): 5, ('null', 'logic board', 'bad', 'died'): 5, ('null', 'logic board', 'bad', 'cried'): 1}
output quads: ['[A] logic board [O] fried [S] bad', '[A] logic board [O] died [S] bad']
multi_path: ['[O] fried [A] logic board [S] bad [SSEP] [O] died [A] logic board [S] bad', '[A] logic board [O] fried [S] bad [SSEP] [A] logic board [O] died [S] bad', '[O] fried [S] bad [A] logic board [SSEP] [O] cried [S] bad [A] logic board [SSEP] [O] died [S] bad [A] logic board', '[A] logic board [S] bad [O] fried [SSEP] [A] logic board [S] bad [O] died', '[S] bad [O] fried [A] logic board [SSEP] [S] bad [O] died [A] logic board']

task, data: aste laptop14
target: [('null', 'sound', 'bad', 'crappy'), ('null', 'volume', 'bad', 'crappy')]
output: ['[A] sound [O] crappy [S] bad']
sent: ['The', 'sound', 'was', 'crappy', 'even', 'when', 'you', 'turn', 'up', 'the', 'volume', 'still', 'the', 'same', 'results', '.']
counter: {('null', 'sound', 'bad', 'crappy'): 5}
output quads: ['[A] sound [O] crappy [S] bad']
multi_path: ['[O] crappy [A] sound [S] bad', '[A] sound [O] crappy [S] bad', '[O] crappy [S] bad [A] sound', '[A] sound [S] bad [O] crappy', '[S] bad [O] crappy [A] sound']

task, data: aste laptop14
target: [('null', 'osx lion', 'great', 'fast'), ('null', 'osx lion', 'great', 'great'), ('null', 'osx lion', 'great', 'reliable')]
output: ['[A] osx lion [O] great [S] great', '[A] osx lion [O] reliable [S] great', '[A] performer [O] fast [S] great']
sent: ['OSX', 'Lion', 'is', 'a', 'great', 'performer..extremely', 'fast', 'and', 'reliable', '.']
counter: {('null', 'osx lion', 'great', 'great'): 5, ('null', 'performer', 'great', 'fast'): 5, ('null', 'osx lion', 'great', 'reliable'): 5}
output quads: ['[A] osx lion [O] great [S] great', '[A] performer [O] fast [S] great', '[A] osx lion [O] reliable [S] great']
multi_path: ['[O] great [A] osx lion [S] great [SSEP] [O] fast [A] performer [S] great [SSEP] [O] reliable [A] osx lion [S] great', '[A] osx lion [O] great [S] great [SSEP] [A] performer [O] fast [S] great [SSEP] [A] osx lion [O] reliable [S] great', '[O] great [S] great [A] osx lion [SSEP] [O] fast [S] great [A] performer [SSEP] [O] reliable [S] great [A] osx lion', '[A] osx lion [S] great [O] great [SSEP] [A] performer [S] great [O] fast [SSEP] [A] osx lion [S] great [O] reliable', '[S] great [O] great [A] osx lion [SSEP] [S] great [O] fast [A] performer [SSEP] [S] great [O] reliable [A] osx lion']

task, data: aste laptop14
target: [('null', 'body', 'great', 'good'), ('null', 'body', 'great', "hasn't changed")]
output: ["[A] body [O] hasn't changed [S] great"]
sent: ['The', 'Mini', "'s", 'body', 'has', "n't", 'changed', 'since', 'late', '2010-', 'and', 'for', 'a', 'good', 'reason', '.']
counter: {('null', 'body', 'great', "hasn't changed"): 5}
output quads: ["[A] body [O] hasn't changed [S] great"]
multi_path: ["[O] hasn't changed [A] body [S] great", "[A] body [O] hasn't changed [S] great", "[O] hasn't changed [S] great [A] body", "[A] body [S] great [O] hasn't changed", "[S] great [O] hasn't changed [A] body"]

task, data: aste laptop14
target: [('null', '3d rendering', 'bad', 'slows it down')]
output: ['[A] 3d rendering [O] slows [S] bad']
sent: ['3D', 'rendering', 'slows', 'it', 'down', 'considerably', '.']
counter: {('null', '3d rendering', 'bad', 'slows'): 4, ('null', '3d rendering', 'bad', 'slows down'): 1}
output quads: ['[A] 3d rendering [O] slows [S] bad']
multi_path: ['[O] slows [A] 3d rendering [S] bad', '[A] 3d rendering [O] slows [S] bad', '[O] slows [S] bad [A] 3d rendering', '[A] 3d rendering [S] bad [O] slows down', '[S] bad [O] slows [A] 3d rendering']

task, data: aste laptop14
target: [('null', 'apps', 'great', 'beautiful'), ('null', 'screen', 'great', 'fast'), ('null', 'screen', 'great', 'great')]
output: ['[A] apps [O] beautiful [S] great', '[A] screen [O] great [S] great']
sent: ['fast', ',', 'great', 'screen', ',', 'beautiful', 'apps', 'for', 'a', 'laptop', ';', 'priced', 'at', '1100', 'on', 'the', 'apple', 'website', ';', 'amazon', 'had', 'it', 'for', '1098+', 'tax', '-', 'plus', 'i', 'had', 'a', '10', '%', 'off', 'coupon', 'from', 'amazon-cost', 'me', '998', 'plus', 'tax-', '1070-', 'OTD', '!']
counter: {('null', 'screen', 'great', 'great'): 5, ('null', 'apps', 'great', 'beautiful'): 5, ('null', 'screen', 'great', 'fast'): 1}
output quads: ['[A] screen [O] great [S] great', '[A] apps [O] beautiful [S] great']
multi_path: ['[O] great [A] screen [S] great [SSEP] [O] beautiful [A] apps [S] great', '[A] screen [O] great [S] great [SSEP] [A] apps [O] beautiful [S] great', '[O] great [S] great [A] screen [SSEP] [O] beautiful [S] great [A] apps', '[A] screen [S] great [O] fast [SSEP] [A] screen [S] great [O] great [SSEP] [A] apps [S] great [O] beautiful', '[S] great [O] great [A] screen [SSEP] [S] great [O] beautiful [A] apps']

task, data: aste laptop14
target: [('null', 'ports', 'ok', 'much needed')]
output: ['[A] ports [O] needed [S] great']
sent: ['All', 'the', 'ports', 'are', 'much', 'needed', 'since', 'this', 'is', 'my', 'main', 'computer', '.']
counter: {('null', 'ports', 'great', 'needed'): 5}
output quads: ['[A] ports [O] needed [S] great']
multi_path: ['[O] needed [A] ports [S] great', '[A] ports [O] needed [S] great', '[O] needed [S] great [A] ports', '[A] ports [S] great [O] needed', '[S] great [O] needed [A] ports']

task, data: aste laptop14
target: [('null', 'package', 'great', 'neat'), ('null', 'package', 'great', 'nice')]
output: ['[A] mouse [O] nice [S] great', '[A] wireless apple keyboard [O] neat [S] great']
sent: ['The', 'Like', 'New', 'condition', 'of', 'the', 'iMac', 'MC309LL/A', 'on', 'Amazon', 'is', 'at', '$', '900+', 'level', 'only', ',', 'and', 'it', 'is', 'a', 'Quad-Core', '2.5', 'GHz', 'CPU', '(', 'similar', 'to', 'the', '$', '799', 'Mini', ')', ',', 'with', 'Radeon', 'HD', '6750M', '512MB', 'graphic', 'card', '(', 'this', 'mini', 'is', 'integrated', 'Intel', '4000', 'card', ')', ',', 'and', 'it', 'even', 'comes', 'with', 'wireless', 'Apple', 'Keyboard', 'and', 'Mouse', ',', 'all', 'put', 'together', 'in', 'neat', 'and', 'nice', 'package', '.']
counter: {('null', 'imac mc309ll/a', 'great', 'like new'): 2, ('null', 'quad-core 2.5 ghz cpu', 'great', 'quad-core 2.5 ghz cpu'): 2, ('null', 'graphic card', 'great', 'like new'): 2, ('null', 'intel 4000 card', 'ok', 'integrated'): 1, ('null', 'wireless apple keyboard', 'great', 'neat'): 5, ('null', 'mouse', 'great', 'nice'): 5, ('null', 'quad-core 2.5 ghz cpu', 'great', 'new'): 2, ('null', 'radeon hd 6750m 512mb graphic card', 'great', 'new'): 2, ('null', 'quad-core 2.5 ghz cpu', 'great', 'like new'): 1, ('null', 'radeon hd 6750m 512mb graphic card', 'great', 'like new'): 1}
output quads: ['[A] wireless apple keyboard [O] neat [S] great', '[A] mouse [O] nice [S] great']
multi_path: ['[O] like new [A] imac mc309ll/a [S] great [SSEP] [O] quad-core 2.5 ghz cpu [A] quad-core 2.5 ghz cpu [S] great [SSEP] [O] like new [A] graphic card [S] great [SSEP] [O] integrated [A] intel 4000 card [S] ok [SSEP] [O] neat [A] wireless apple keyboard [S] great [SSEP] [O] nice [A] mouse [S] great', '[A] quad-core 2.5 ghz cpu [O] new [S] great [SSEP] [A] radeon hd 6750m 512mb graphic card [O] new [S] great [SSEP] [A] wireless apple keyboard [O] neat [S] great [SSEP] [A] mouse [O] nice [S] great', '[O] like new [S] great [A] quad-core 2.5 ghz cpu [SSEP] [O] like new [S] great [A] radeon hd 6750m 512mb graphic card [SSEP] [O] neat [S] great [A] wireless apple keyboard [SSEP] [O] nice [S] great [A] mouse', '[A] quad-core 2.5 ghz cpu [S] great [O] new [SSEP] [A] radeon hd 6750m 512mb graphic card [S] great [O] new [SSEP] [A] wireless apple keyboard [S] great [O] neat [SSEP] [A] mouse [S] great [O] nice', '[S] great [O] like new [A] imac mc309ll/a [SSEP] [S] great [O] quad-core 2.5 ghz cpu [A] quad-core 2.5 ghz cpu [SSEP] [S] great [O] like new [A] graphic card [SSEP] [S] great [O] neat [A] wireless apple keyboard [SSEP] [S] great [O] nice [A] mouse']

task, data: aste laptop14
target: [('null', 'cover', 'ok', 'a little better'), ('null', 'cover', 'ok', 'complaint')]
output: ['[A] cover [O] better [S] great', '[A] cover [O] complaint [S] bad']
sent: ['Put', 'a', 'cover', 'on', 'it', 'and', 'is', 'a', 'little', 'better', 'but', 'that', 'is', 'my', 'only', 'complaint', '.']
counter: {('null', 'cover', 'great', 'better'): 5, ('null', 'cover', 'great', 'complaint'): 2, ('null', 'cover', 'bad', 'complaint'): 3}
output quads: ['[A] cover [O] better [S] great', '[A] cover [O] complaint [S] bad']
multi_path: ['[O] better [A] cover [S] great [SSEP] [O] complaint [A] cover [S] great', '[A] cover [O] better [S] great [SSEP] [A] cover [O] complaint [S] great', '[O] better [S] great [A] cover [SSEP] [O] complaint [S] bad [A] cover', '[A] cover [S] great [O] better [SSEP] [A] cover [S] bad [O] complaint', '[S] great [O] better [A] cover [SSEP] [S] bad [O] complaint [A] cover']

task, data: aste laptop14
target: [('null', 'gestures', 'great', 'unconsciously')]
output: ['[A] gestures [O] unconsciously [S] bad']
sent: ['Within', 'a', 'few', 'hours', 'I', 'was', 'using', 'the', 'gestures', 'unconsciously', '.']
counter: {('null', 'gestures', 'bad', 'unconsciously'): 5}
output quads: ['[A] gestures [O] unconsciously [S] bad']
multi_path: ['[O] unconsciously [A] gestures [S] bad', '[A] gestures [O] unconsciously [S] bad', '[O] unconsciously [S] bad [A] gestures', '[A] gestures [S] bad [O] unconsciously', '[S] bad [O] unconsciously [A] gestures']

task, data: aste laptop14
target: [('null', 'cable', 'great', 'nice')]
output: ['[A] extender cable [O] nice [S] ok']
sent: ['This', 'mac', 'does', 'come', 'with', 'an', 'extender', 'cable', 'and', 'I', "'m", 'using', 'mine', 'right', 'now', 'hoping', 'the', 'cable', 'will', 'stay', 'nice', 'for', 'the', 'many', 'years', 'I', 'plan', 'on', 'using', 'this', 'mac', '.']
counter: {('null', 'extender cable', 'ok', 'nice'): 5}
output quads: ['[A] extender cable [O] nice [S] ok']
multi_path: ['[O] nice [A] extender cable [S] ok', '[A] extender cable [O] nice [S] ok', '[O] nice [S] ok [A] extender cable', '[A] extender cable [S] ok [O] nice', '[S] ok [O] nice [A] extender cable']

task, data: aste laptop14
target: [('null', '2.9ghz dual-core i7 chip', 'great', 'really')]
output: ['[A] dual-core i7 chip [O] out does [S] great']
sent: ['The', '2.9ghz', 'dual-core', 'i7', 'chip', 'really', 'out', 'does', 'itself', '.']
counter: {('null', 'dual-core i7 chip', 'great', 'out does'): 3, ('null', '2.9ghz dual-core i7 chip', 'great', 'out does'): 1, ('null', '2.9ghz dual-core i7 chip', 'great', 'out does itself'): 1}
output quads: ['[A] dual-core i7 chip [O] out does [S] great']
multi_path: ['[O] out does [A] dual-core i7 chip [S] great', '[A] 2.9ghz dual-core i7 chip [O] out does [S] great', '[O] out does [S] great [A] dual-core i7 chip', '[A] 2.9ghz dual-core i7 chip [S] great [O] out does itself', '[S] great [O] out does [A] dual-core i7 chip']

task, data: aste laptop14
target: [('null', 'windows 8', 'ok', 'not sure')]
output: ['[A] windows 8 [O] not sure [S] bad']
sent: ['Not', 'sure', 'on', 'Windows', '8', '.']
counter: {('null', 'windows 8', 'bad', 'not sure'): 5}
output quads: ['[A] windows 8 [O] not sure [S] bad']
multi_path: ['[O] not sure [A] windows 8 [S] bad', '[A] windows 8 [O] not sure [S] bad', '[O] not sure [S] bad [A] windows 8', '[A] windows 8 [S] bad [O] not sure', '[S] bad [O] not sure [A] windows 8']

task, data: aste laptop14
target: [('null', 'hard drive', 'ok', 'no'), ('null', 'network lights', 'ok', 'no')]
output: ['[A] hard drive [O] no [S] bad', '[A] network lights [O] no [S] bad']
sent: ['This', 'newer', 'netbook', 'has', 'no', 'hard', 'drive', 'or', 'network', 'lights', '.']
counter: {('null', 'hard drive', 'bad', 'no'): 5, ('null', 'network lights', 'bad', 'no'): 5}
output quads: ['[A] hard drive [O] no [S] bad', '[A] network lights [O] no [S] bad']
multi_path: ['[O] no [A] hard drive [S] bad [SSEP] [O] no [A] network lights [S] bad', '[A] hard drive [O] no [S] bad [SSEP] [A] network lights [O] no [S] bad', '[O] no [S] bad [A] hard drive [SSEP] [O] no [S] bad [A] network lights', '[A] hard drive [S] bad [O] no [SSEP] [A] network lights [S] bad [O] no', '[S] bad [O] no [A] hard drive [SSEP] [S] bad [O] no [A] network lights']

task, data: aste laptop14
target: [('null', 'ports', 'great', 'enough'), ('null', 'storage', 'great', 'enough')]
output: ['[A] ports [O] many [S] great', '[A] storage [O] enough [S] great']
sent: ['Not', 'too', 'expense', 'and', 'has', 'enough', 'storage', 'for', 'most', 'users', 'and', 'many', 'ports', '.']
counter: {('null', 'storage', 'great', 'enough'): 5, ('null', 'ports', 'great', 'many'): 5}
output quads: ['[A] storage [O] enough [S] great', '[A] ports [O] many [S] great']
multi_path: ['[O] enough [A] storage [S] great [SSEP] [O] many [A] ports [S] great', '[A] storage [O] enough [S] great [SSEP] [A] ports [O] many [S] great', '[O] enough [S] great [A] storage [SSEP] [O] many [S] great [A] ports', '[A] storage [S] great [O] enough [SSEP] [A] ports [S] great [O] many', '[S] great [O] enough [A] storage [SSEP] [S] great [O] many [A] ports']

task, data: aste laptop14
target: [('null', 'capabilities', 'great', 'wonderful')]
output: ['[A] capabilities [O] beautiful [S] great', '[A] capabilities [O] wonderful [S] great']
sent: ['The', 'MBP', 'is', 'beautiful', 'has', 'many', 'wonderful', 'capabilities', '.']
counter: {('null', 'capabilities', 'great', 'beautiful'): 3, ('null', 'capabilities', 'great', 'wonderful'): 5}
output quads: ['[A] capabilities [O] beautiful [S] great', '[A] capabilities [O] wonderful [S] great']
multi_path: ['[O] beautiful [A] capabilities [S] great [SSEP] [O] wonderful [A] capabilities [S] great', '[A] capabilities [O] wonderful [S] great', '[O] beautiful [S] great [A] capabilities [SSEP] [O] wonderful [S] great [A] capabilities', '[A] capabilities [S] great [O] wonderful', '[S] great [O] beautiful [A] capabilities [SSEP] [S] great [O] wonderful [A] capabilities']

task, data: aste laptop14
target: [('null', 'boot-up', 'bad', 'slowed'), ('null', 'windows updates', 'bad', 'slowed')]
output: ['[A] boot-up [O] slowed [S] bad']
sent: ['Boot-up', 'slowed', 'significantly', 'after', 'all', 'Windows', 'updates', 'were', 'installed', '.']
counter: {('null', 'boot-up', 'bad', 'slowed'): 5}
output quads: ['[A] boot-up [O] slowed [S] bad']
multi_path: ['[O] slowed [A] boot-up [S] bad', '[A] boot-up [O] slowed [S] bad', '[O] slowed [S] bad [A] boot-up', '[A] boot-up [S] bad [O] slowed', '[S] bad [O] slowed [A] boot-up']

task, data: aste laptop14
target: [('null', 'gaming', 'great', 'powerful'), ('null', 'graphic design', 'great', 'powerful'), ('null', 'internet', 'great', 'powerful'), ('null', 'word processing', 'great', 'powerful')]
output: ['[A] gaming [O] powerful [S] great', '[A] graphic design [O] powerful [S] great', '[A] word processing [O] powerful [S] great']
sent: ['It', 'was', 'important', 'that', 'it', 'was', 'powerful', 'enough', 'to', 'do', 'all', 'of', 'the', 'tasks', 'he', 'needed', 'on', 'the', 'internet', ',', 'word', 'processing', ',', 'graphic', 'design', 'and', 'gaming', '.']
counter: {('null', 'word processing', 'great', 'powerful'): 5, ('null', 'graphic design', 'great', 'powerful'): 5, ('null', 'gaming', 'great', 'powerful'): 5}
output quads: ['[A] word processing [O] powerful [S] great', '[A] graphic design [O] powerful [S] great', '[A] gaming [O] powerful [S] great']
multi_path: ['[O] powerful [A] word processing [S] great [SSEP] [O] powerful [A] graphic design [S] great [SSEP] [O] powerful [A] gaming [S] great', '[A] word processing [O] powerful [S] great [SSEP] [A] graphic design [O] powerful [S] great [SSEP] [A] gaming [O] powerful [S] great', '[O] powerful [S] great [A] word processing [SSEP] [O] powerful [S] great [A] graphic design [SSEP] [O] powerful [S] great [A] gaming', '[A] word processing [S] great [O] powerful [SSEP] [A] graphic design [S] great [O] powerful [SSEP] [A] gaming [S] great [O] powerful', '[S] great [O] powerful [A] word processing [SSEP] [S] great [O] powerful [A] graphic design [SSEP] [S] great [O] powerful [A] gaming']

task, data: aste laptop14
target: [('null', 'install', 'great', 'easy'), ('null', 'install', 'great', 'like'), ('null', 'setup', 'great', 'easy'), ('null', 'setup', 'great', 'like')]
output: ['[A] right mouse click menu [O] easy [S] ok', '[A] setup [O] easy [S] great']
sent: ['I', 'like', 'the', 'Mini', 'Mac', 'it', 'was', 'easy', 'to', 'setup', 'and', 'install', ',', 'but', 'I', 'am', 'learning', 'as', 'I', 'go', 'and', 'could', 'use', 'a', 'tutorial', 'to', 'learn', 'how', 'to', 'use', 'some', 'of', 'the', 'features', 'I', 'was', 'use', 'to', 'on', 'the', 'PC', 'especially', 'the', 'right', 'mouse', 'click', 'menu', '.']
counter: {('null', 'setup', 'great', 'easy'): 5, ('null', 'right mouse click menu', 'ok', 'easy'): 5}
output quads: ['[A] setup [O] easy [S] great', '[A] right mouse click menu [O] easy [S] ok']
multi_path: ['[O] easy [A] setup [S] great [SSEP] [O] easy [A] right mouse click menu [S] ok', '[A] setup [O] easy [S] great [SSEP] [A] right mouse click menu [O] easy [S] ok', '[O] easy [S] great [A] setup [SSEP] [O] easy [S] ok [A] right mouse click menu', '[A] setup [S] great [O] easy [SSEP] [A] right mouse click menu [S] ok [O] easy', '[S] great [O] easy [A] setup [SSEP] [S] ok [O] easy [A] right mouse click menu']

task, data: aste laptop14
target: [('null', 'profile', 'bad', 'critical'), ('null', 'profile', 'bad', 'slim')]
output: ['[A] slim profile [O] critical [S] bad']
sent: ['Since', 'the', 'machine', "'s", 'slim', 'profile', 'is', 'critical', 'to', 'me', ',', 'that', 'was', 'a', 'problem', '.']
counter: {('null', 'slim profile', 'bad', 'critical'): 3, ('null', 'profile', 'bad', 'critical'): 2}
output quads: ['[A] slim profile [O] critical [S] bad']
multi_path: ['[O] critical [A] slim profile [S] bad', '[A] profile [O] critical [S] bad', '[O] critical [S] bad [A] slim profile', '[A] profile [S] bad [O] critical', '[S] bad [O] critical [A] slim profile']

task, data: aste laptop14
target: [('null', 'disk drive', 'great', 'required'), ('null', 'usb ports', 'great', 'required'), ('null', 'wifi capability', 'great', 'required')]
output: ['[A] disk drive [O] required [S] ok', '[A] usb ports [O] required [S] ok', '[A] wifi capability [O] required [S] ok']
sent: ['WiFi', 'capability', ',', 'disk', 'drive', 'and', 'multiple', 'USB', 'ports', 'to', 'connect', 'scale', 'and', 'printers', 'was', 'all', 'that', 'was', 'required', '.']
counter: {('null', 'wifi capability', 'ok', 'required'): 5, ('null', 'disk drive', 'ok', 'required'): 5, ('null', 'usb ports', 'ok', 'required'): 3, ('null', 'usb ports', 'ok', 'multiple'): 2}
output quads: ['[A] wifi capability [O] required [S] ok', '[A] disk drive [O] required [S] ok', '[A] usb ports [O] required [S] ok']
multi_path: ['[O] required [A] wifi capability [S] ok [SSEP] [O] required [A] disk drive [S] ok [SSEP] [O] required [A] usb ports [S] ok', '[A] wifi capability [O] required [S] ok [SSEP] [A] disk drive [O] required [S] ok [SSEP] [A] usb ports [O] multiple [S] ok', '[O] required [S] ok [A] wifi capability [SSEP] [O] required [S] ok [A] disk drive [SSEP] [O] required [S] ok [A] usb ports', '[A] wifi capability [S] ok [O] required [SSEP] [A] disk drive [S] ok [O] required [SSEP] [A] usb ports [S] ok [O] multiple', '[S] ok [O] required [A] wifi capability [SSEP] [S] ok [O] required [A] disk drive [SSEP] [S] ok [O] required [A] usb ports']

task, data: aste laptop14
target: [('null', 'nail slot on the card', 'bad', 'can not be accessed'), ('null', 'sd card reader', 'bad', 'recessed'), ('null', 'sd card reader', 'bad', 'upside down'), ('null', 'slot', 'bad', 'issue')]
output: ['[A] nail slot [O] can not be accessed [S] bad', '[A] sd card reader [O] recessed [S] bad', '[A] sd card reader [O] upside down [S] bad']
sent: ['The', 'SD', 'card', 'reader', 'is', 'slightly', 'recessed', 'and', 'upside', 'down', '(', 'the', 'nail', 'slot', 'on', 'the', 'card', 'can', 'not', 'be', 'accessed', ')', ',', 'if', 'this', 'was', 'a', 'self', 'ejecting', 'slot', 'this', 'would', 'not', 'be', 'an', 'issue', ',', 'but', 'its', 'not', '.']
counter: {('null', 'sd card reader', 'bad', 'recessed'): 5, ('null', 'sd card reader', 'bad', 'upside down'): 5, ('null', 'nail slot', 'bad', 'can not be accessed'): 5}
output quads: ['[A] sd card reader [O] recessed [S] bad', '[A] sd card reader [O] upside down [S] bad', '[A] nail slot [O] can not be accessed [S] bad']
multi_path: ['[O] recessed [A] sd card reader [S] bad [SSEP] [O] upside down [A] sd card reader [S] bad [SSEP] [O] can not be accessed [A] nail slot [S] bad', '[A] sd card reader [O] recessed [S] bad [SSEP] [A] sd card reader [O] upside down [S] bad [SSEP] [A] nail slot [O] can not be accessed [S] bad', '[O] recessed [S] bad [A] sd card reader [SSEP] [O] upside down [S] bad [A] sd card reader [SSEP] [O] can not be accessed [S] bad [A] nail slot', '[A] sd card reader [S] bad [O] recessed [SSEP] [A] sd card reader [S] bad [O] upside down [SSEP] [A] nail slot [S] bad [O] can not be accessed', '[S] bad [O] recessed [A] sd card reader [SSEP] [S] bad [O] upside down [A] sd card reader [SSEP] [S] bad [O] can not be accessed [A] nail slot']

task, data: aste laptop14
target: [('null', 'anodized aluminum', 'great', 'no flaws'), ('null', 'anodized aluminum', 'great', 'precision'), ('null', 'touch', 'great', 'soft')]
output: ['[A] anodized aluminum [O] soft [S] great', '[A] precision [O] laser cut precision [S] great']
sent: ['Soft', 'touch', ',', 'anodized', 'aluminum', 'with', 'laser', 'cut', 'precision', 'and', 'no', 'flaws', '.']
counter: {('null', 'anodized aluminum', 'great', 'soft'): 5, ('null', 'precision', 'great', 'laser cut precision'): 3, ('null', 'laser cut precision', 'great', 'no flaws'): 2}
output quads: ['[A] anodized aluminum [O] soft [S] great', '[A] precision [O] laser cut precision [S] great']
multi_path: ['[O] soft [A] anodized aluminum [S] great [SSEP] [O] laser cut precision [A] precision [S] great', '[A] anodized aluminum [O] soft [S] great [SSEP] [A] laser cut precision [O] no flaws [S] great', '[O] soft [S] great [A] anodized aluminum [SSEP] [O] laser cut precision [S] great [A] precision', '[A] anodized aluminum [S] great [O] soft [SSEP] [A] laser cut precision [S] great [O] no flaws', '[S] great [O] soft [A] anodized aluminum [SSEP] [S] great [O] laser cut precision [A] precision']

task, data: aste laptop14
target: [('null', 'aluminium', 'great', 'crafted'), ('null', 'glass', 'great', 'blow away')]
output: ['[A] aluminium [O] crafted [S] great', '[A] details [O] simple [S] great', '[A] glass [O] real [S] great']
sent: ['Simple', 'details', ',', 'crafted', 'aluminium', 'and', 'real', 'glass', 'make', 'this', 'laptop', 'blow', 'away', 'the', 'other', 'plastic', 'ridden', ',', 'bulky', 'sticker', 'filled', 'laptops', '.']
counter: {('null', 'details', 'great', 'simple'): 3, ('null', 'aluminium', 'great', 'crafted'): 3, ('null', 'glass', 'great', 'real'): 5, ('null', 'aluminium', 'great', 'simple'): 2, ('null', 'plastic ridden', 'bad', 'bulky'): 1, ('null', 'sticker filled', 'bad', 'bulky'): 1}
output quads: ['[A] details [O] simple [S] great', '[A] aluminium [O] crafted [S] great', '[A] glass [O] real [S] great']
multi_path: ['[O] simple [A] details [S] great [SSEP] [O] crafted [A] aluminium [S] great [SSEP] [O] real [A] glass [S] great', '[A] aluminium [O] simple [S] great [SSEP] [A] glass [O] real [S] great [SSEP] [A] plastic ridden [O] bulky [S] bad [SSEP] [A] sticker filled [O] bulky [S] bad', '[O] simple [S] great [A] details [SSEP] [O] crafted [S] great [A] aluminium [SSEP] [O] real [S] great [A] glass', '[A] aluminium [S] great [O] simple [SSEP] [A] glass [S] great [O] real', '[S] great [O] simple [A] details [SSEP] [S] great [O] crafted [A] aluminium [SSEP] [S] great [O] real [A] glass']

task, data: aste laptop14
target: [('null', 'aluminum', 'great', 'nice')]
output: ['[A] brushed aluminum [O] nice [S] great']
sent: ['First', 'of', 'all', 'yes', 'this', 'is', 'a', 'mac', 'and', 'it', 'has', 'that', 'nice', 'brushed', 'aluminum', '.']
counter: {('null', 'brushed aluminum', 'great', 'nice'): 5}
output quads: ['[A] brushed aluminum [O] nice [S] great']
multi_path: ['[O] nice [A] brushed aluminum [S] great', '[A] brushed aluminum [O] nice [S] great', '[O] nice [S] great [A] brushed aluminum', '[A] brushed aluminum [S] great [O] nice', '[S] great [O] nice [A] brushed aluminum']

task, data: aste laptop14
target: [('null', 'hdmi port', 'ok', 'no')]
output: ['[A] hdmi port [O] no [S] bad']
sent: ['No', 'HDMI', 'port', '.']
counter: {('null', 'hdmi port', 'bad', 'no'): 5}
output quads: ['[A] hdmi port [O] no [S] bad']
multi_path: ['[O] no [A] hdmi port [S] bad', '[A] hdmi port [O] no [S] bad', '[O] no [S] bad [A] hdmi port', '[A] hdmi port [S] bad [O] no', '[S] bad [O] no [A] hdmi port']

task, data: aste laptop14
target: [('null', 'right click button', 'ok', 'intuitive'), ('null', 'two finger clicking', 'great', 'surprisingly')]
output: ['[A] two finger clicking [O] intuitive [S] great']
sent: ['Plus', 'two', 'finger', 'clicking', 'as', 'a', 'replacement', 'for', 'the', 'right', 'click', 'button', 'is', 'surprisingly', 'intuitive', '.']
counter: {('null', 'two finger clicking', 'great', 'intuitive'): 5}
output quads: ['[A] two finger clicking [O] intuitive [S] great']
multi_path: ['[O] intuitive [A] two finger clicking [S] great', '[A] two finger clicking [O] intuitive [S] great', '[O] intuitive [S] great [A] two finger clicking', '[A] two finger clicking [S] great [O] intuitive', '[S] great [O] intuitive [A] two finger clicking']

task, data: aste laptop14
target: [('null', 'usb 2 ports', 'ok', 'not have')]
output: ['[A] usb 2 ports [O] did not have [S] bad']
sent: ['Which', 'it', 'did', 'not', 'have', ',', 'only', '3', 'USB', '2', 'ports', '.']
counter: {('null', 'usb 2 ports', 'bad', 'did not have'): 4, ('null', 'usb 2 ports', 'bad', 'only'): 1}
output quads: ['[A] usb 2 ports [O] did not have [S] bad']
multi_path: ['[O] did not have [A] usb 2 ports [S] bad', '[A] usb 2 ports [O] did not have [S] bad', '[O] did not have [S] bad [A] usb 2 ports', '[A] usb 2 ports [S] bad [O] did not have', '[S] bad [O] only [A] usb 2 ports']

task, data: aste laptop14
target: [('null', 'startup disk', 'ok', 'fault'), ('null', 'startup disk', 'ok', 'no'), ('null', 'startup disk', 'ok', 'not included')]
output: ['[A] startup disk [O] not included [S] bad']
sent: ['No', 'startup', 'disk', 'was', 'not', 'included', 'but', 'that', 'may', 'be', 'my', 'fault', '.']
counter: {('null', 'startup disk', 'bad', 'not included'): 5}
output quads: ['[A] startup disk [O] not included [S] bad']
multi_path: ['[O] not included [A] startup disk [S] bad', '[A] startup disk [O] not included [S] bad', '[O] not included [S] bad [A] startup disk', '[A] startup disk [S] bad [O] not included', '[S] bad [O] not included [A] startup disk']

task, data: aste laptop14
target: [('null', 'word program', 'bad', 'except for')]
output: ['[A] word program [O] fast [S] great']
sent: ['It', 'is', 'very', 'fast', 'and', 'has', 'everything', 'that', 'I', 'need', 'except', 'for', 'a', 'word', 'program', '.']
counter: {('null', 'word program', 'great', 'fast'): 3, ('null', 'word program', 'great', 'except'): 2}
output quads: ['[A] word program [O] fast [S] great']
multi_path: ['[O] fast [A] word program [S] great', '[A] word program [O] except [S] great', '[O] fast [S] great [A] word program', '[A] word program [S] great [O] except', '[S] great [O] fast [A] word program']

task, data: aste laptop14
target: [('null', 'power switch', 'bad', 'bigger')]
output: ['[A] cd/dvd drive [O] needs [S] bad', '[A] power switch [O] bigger [S] bad']
sent: ['Needs', 'a', 'CD/DVD', 'drive', 'and', 'a', 'bigger', 'power', 'switch', '.']
counter: {('null', 'cd/dvd drive', 'bad', 'needs'): 5, ('null', 'power switch', 'bad', 'bigger'): 5}
output quads: ['[A] cd/dvd drive [O] needs [S] bad', '[A] power switch [O] bigger [S] bad']
multi_path: ['[O] needs [A] cd/dvd drive [S] bad [SSEP] [O] bigger [A] power switch [S] bad', '[A] cd/dvd drive [O] needs [S] bad [SSEP] [A] power switch [O] bigger [S] bad', '[O] needs [S] bad [A] cd/dvd drive [SSEP] [O] bigger [S] bad [A] power switch', '[A] cd/dvd drive [S] bad [O] needs [SSEP] [A] power switch [S] bad [O] bigger', '[S] bad [O] needs [A] cd/dvd drive [SSEP] [S] bad [O] bigger [A] power switch']

task, data: aste laptop14
target: [('null', 'windows 7', 'bad', 'crashed'), ('null', 'windows 8', 'bad', 'not want')]
output: ['[A] windows 7 [O] crashed [S] ok', '[A] windows 8 [O] not want [S] ok']
sent: ['My', 'laptop', 'with', 'Windows', '7', 'crashed', 'and', 'I', 'did', 'not', 'want', 'Windows', '8', '.']
counter: {('null', 'windows 7', 'ok', 'crashed'): 3, ('null', 'windows 8', 'ok', 'not want'): 3, ('null', 'windows 7', 'bad', 'crashed'): 2, ('null', 'windows 8', 'bad', 'not want'): 2}
output quads: ['[A] windows 7 [O] crashed [S] ok', '[A] windows 8 [O] not want [S] ok']
multi_path: ['[O] crashed [A] windows 7 [S] ok [SSEP] [O] not want [A] windows 8 [S] ok', '[A] windows 7 [O] crashed [S] ok [SSEP] [A] windows 8 [O] not want [S] ok', '[O] crashed [S] bad [A] windows 7 [SSEP] [O] not want [S] bad [A] windows 8', '[A] windows 7 [S] ok [O] crashed [SSEP] [A] windows 8 [S] ok [O] not want', '[S] bad [O] crashed [A] windows 7 [SSEP] [S] bad [O] not want [A] windows 8']

task, data: aste laptop14
target: [('null', 'configure for adsl cable or wifi', 'great', 'easy'), ('null', 'install', 'great', 'easy')]
output: ['[A] adsl cable [O] easy [S] great', '[A] install [O] easy [S] great', '[A] wifi [O] easy [S] great']
sent: ['Easy', 'to', 'install', 'also', 'small', 'to', 'leave', 'anywhere', 'at', 'your', 'bedroom', 'also', 'very', 'easy', 'to', 'configure', 'for', 'ADSl', 'cable', 'or', 'wifi', '.']
counter: {('null', 'install', 'great', 'easy'): 5, ('null', 'adsl cable or wifi', 'great', 'easy'): 2, ('null', 'adsl cable', 'great', 'easy'): 3, ('null', 'wifi', 'great', 'easy'): 3}
output quads: ['[A] install [O] easy [S] great', '[A] adsl cable [O] easy [S] great', '[A] wifi [O] easy [S] great']
multi_path: ['[O] easy [A] install [S] great [SSEP] [O] easy [A] adsl cable or wifi [S] great', '[A] install [O] easy [S] great [SSEP] [A] adsl cable or wifi [O] easy [S] great', '[O] easy [S] great [A] install [SSEP] [O] easy [S] great [A] adsl cable [SSEP] [O] easy [S] great [A] wifi', '[A] install [S] great [O] easy [SSEP] [A] adsl cable [S] great [O] easy [SSEP] [A] wifi [S] great [O] easy', '[S] great [O] easy [A] install [SSEP] [S] great [O] easy [A] adsl cable [SSEP] [S] great [O] easy [A] wifi']

task, data: aste laptop14
target: [('null', 'windows', 'great', 'miss')]
output: ['[A] windows [O] miss [S] bad']
sent: ['I', 'switched', 'to', 'this', 'because', 'I', 'wanted', 'something', 'different', ',', 'even', 'though', 'I', 'miss', 'windows', '.']
counter: {('null', 'windows', 'bad', 'miss'): 5}
output quads: ['[A] windows [O] miss [S] bad']
multi_path: ['[O] miss [A] windows [S] bad', '[A] windows [O] miss [S] bad', '[O] miss [S] bad [A] windows', '[A] windows [S] bad [O] miss', '[S] bad [O] miss [A] windows']

task, data: aste laptop14
target: [('null', 'idvd', 'bad', 'no longer includes')]
output: ['[A] idvd [O] no longer [S] bad']
sent: ['Apple', 'no', 'longer', 'includes', 'iDVD', 'with', 'the', 'computer', 'and', 'furthermore', ',', 'Apple', 'does', "n't", 'even', 'offer', 'it', 'anymore', '!']
counter: {('null', 'idvd', 'bad', 'no longer'): 4, ('null', 'idvd', 'bad', "doesn't even offer"): 1, ('null', 'idvd', 'bad', 'no longer includes'): 1}
output quads: ['[A] idvd [O] no longer [S] bad']
multi_path: ["[O] no longer [A] idvd [S] bad [SSEP] [O] doesn't even offer [A] idvd [S] bad", '[A] idvd [O] no longer [S] bad', '[O] no longer [S] bad [A] idvd', '[A] idvd [S] bad [O] no longer includes', '[S] bad [O] no longer [A] idvd']

task, data: aste laptop14
target: [('null', 'os', 'ok', 'cool'), ('null', 'software', 'great', 'cool'), ('null', 'works', 'great', 'out of the box')]
output: ['[A] os [O] cool [S] great', '[A] software [O] cool [S] great']
sent: ['It', 'just', 'works', 'out', 'of', 'the', 'box', 'and', 'you', 'have', 'a', 'lot', 'of', 'cool', 'software', 'included', 'with', 'the', 'OS', '.']
counter: {('null', 'software', 'great', 'cool'): 5, ('null', 'os', 'great', 'cool'): 5}
output quads: ['[A] software [O] cool [S] great', '[A] os [O] cool [S] great']
multi_path: ['[O] cool [A] software [S] great [SSEP] [O] cool [A] os [S] great', '[A] software [O] cool [S] great [SSEP] [A] os [O] cool [S] great', '[O] cool [S] great [A] software [SSEP] [O] cool [S] great [A] os', '[A] software [S] great [O] cool [SSEP] [A] os [S] great [O] cool', '[S] great [O] cool [A] software [SSEP] [S] great [O] cool [A] os']

task, data: aste laptop14
target: [('null', 'os', 'ok', 'premium'), ('null', 'price', 'great', 'premium')]
output: ['[A] os [O] premium [S] great', '[A] price [O] premium [S] great']
sent: ['Premium', 'price', 'for', 'the', 'OS', 'more', 'than', 'anything', 'else', '.']
counter: {('null', 'os', 'great', 'premium'): 5, ('null', 'price', 'great', 'premium'): 3}
output quads: ['[A] os [O] premium [S] great', '[A] price [O] premium [S] great']
multi_path: ['[O] premium [A] os [S] great', '[A] price [O] premium [S] great [SSEP] [A] os [O] premium [S] great', '[O] premium [S] great [A] price [SSEP] [O] premium [S] great [A] os', '[A] price [S] great [O] premium [SSEP] [A] os [S] great [O] premium', '[S] great [O] premium [A] os']

task, data: aste laptop14
target: [('null', 'touch pad', 'great', 'concerned'), ('null', 'touch pad', 'great', 'fine')]
output: ['[A] touch pad [O] fine [S] bad']
sent: ['I', 'was', 'a', 'little', 'concerned', 'about', 'the', 'touch', 'pad', 'based', 'on', 'reviews', ',', 'but', 'I', "'ve", 'found', 'it', 'fine', 'to', 'work', 'with', '.']
counter: {('null', 'touch pad', 'ok', 'fine'): 2, ('null', 'touch pad', 'bad', 'fine'): 3}
output quads: ['[A] touch pad [O] fine [S] bad']
multi_path: ['[O] fine [A] touch pad [S] ok', '[A] touch pad [O] fine [S] bad', '[O] fine [S] ok [A] touch pad', '[A] touch pad [S] bad [O] fine', '[S] bad [O] fine [A] touch pad']

task, data: aste laptop14
target: [('null', 'os', 'great', 'great'), ('null', 'os', 'great', 'not become unstable')]
output: ['[A] os [O] great [S] great', '[A] os [O] unstable [S] great']
sent: ['However', ',', 'the', 'experience', 'was', 'great', 'since', 'the', 'OS', 'does', 'not', 'become', 'unstable', 'and', 'the', 'application', 'will', 'simply', 'shutdown', 'and', 'reopen', '.']
counter: {('null', 'os', 'great', 'great'): 5, ('null', 'os', 'great', 'unstable'): 3, ('null', 'application', 'ok', 'shutdown'): 2, ('null', 'application', 'ok', 'reopen'): 2, ('null', 'application', 'great', 'unstable'): 1, ('null', 'application', 'great', 'shutdown'): 2, ('null', 'application', 'great', 'reopen'): 2}
output quads: ['[A] os [O] great [S] great', '[A] os [O] unstable [S] great']
multi_path: ['[O] great [A] os [S] great [SSEP] [O] unstable [A] os [S] great [SSEP] [O] shutdown [A] application [S] ok [SSEP] [O] reopen [A] application [S] ok', '[A] os [O] great [S] great [SSEP] [A] application [O] unstable [S] great', '[O] great [S] great [A] os [SSEP] [O] unstable [S] great [A] os [SSEP] [O] shutdown [S] ok [A] application [SSEP] [O] reopen [S] ok [A] application', '[A] os [S] great [O] great [SSEP] [A] application [S] great [O] shutdown [SSEP] [A] application [S] great [O] reopen', '[S] great [O] great [A] os [SSEP] [S] great [O] unstable [A] os [SSEP] [S] great [O] shutdown [A] application [SSEP] [S] great [O] reopen [A] application']

task, data: aste laptop14
target: [('null', 'compact computing', 'great', 'simplest')]
output: ['[A] computing [O] compact [S] great']
sent: ['The', 'Mac', 'Mini', 'is', 'probably', 'the', 'simplest', 'example', 'of', 'compact', 'computing', 'out', 'there', '.']
counter: {('null', 'computing', 'great', 'compact'): 5}
output quads: ['[A] computing [O] compact [S] great']
multi_path: ['[O] compact [A] computing [S] great', '[A] computing [O] compact [S] great', '[O] compact [S] great [A] computing', '[A] computing [S] great [O] compact', '[S] great [O] compact [A] computing']

task, data: aste laptop14
target: [('null', 'playing steam games', 'ok', 'hot'), ('null', 'ventilation system', 'bad', 'barely'), ('null', 'ventilation system', 'bad', 'hot'), ('null', 'watching videos', 'ok', 'hot'), ('null', 'watching videos', 'ok', 'simple')]
output: ['[A] steam games [O] impossible [S] bad', '[A] ventilation system [O] barely [S] bad']
sent: ['Additionally', ',', 'there', 'is', 'barely', 'a', 'ventilation', 'system', 'in', 'the', 'computer', ',', 'and', 'even', 'the', 'simple', 'activity', 'of', 'watching', 'videos', 'let', 'alone', 'playing', 'steam', 'games', 'causes', 'the', 'laptop', 'to', 'get', 'very', 'very', 'hot', ',', 'and', 'in', 'fact', 'impossible', 'to', 'keep', 'on', 'lap', '.']
counter: {('null', 'ventilation system', 'bad', 'barely'): 5, ('null', 'steam games', 'bad', 'impossible'): 4, ('null', 'watching videos', 'bad', 'impossible'): 1, ('null', 'playing steam games', 'bad', 'impossible'): 1}
output quads: ['[A] ventilation system [O] barely [S] bad', '[A] steam games [O] impossible [S] bad']
multi_path: ['[O] barely [A] ventilation system [S] bad [SSEP] [O] impossible [A] steam games [S] bad', '[A] ventilation system [O] barely [S] bad [SSEP] [A] steam games [O] impossible [S] bad', '[O] barely [S] bad [A] ventilation system [SSEP] [O] impossible [S] bad [A] watching videos [SSEP] [O] impossible [S] bad [A] playing steam games', '[A] ventilation system [S] bad [O] barely [SSEP] [A] steam games [S] bad [O] impossible', '[S] bad [O] barely [A] ventilation system [SSEP] [S] bad [O] impossible [A] steam games']

task, data: aste laptop14
target: [('null', 'operating system files', 'ok', 'corrupted')]
output: ['[A] operating system files [O] corrupted [S] bad']
sent: ['Chatting', 'with', 'Acer', 'support', ',', 'I', 'was', 'advised', 'the', 'problem', 'was', 'corrupted', 'operating', 'system', 'files', '.']
counter: {('null', 'operating system files', 'bad', 'corrupted'): 5}
output quads: ['[A] operating system files [O] corrupted [S] bad']
multi_path: ['[O] corrupted [A] operating system files [S] bad', '[A] operating system files [O] corrupted [S] bad', '[O] corrupted [S] bad [A] operating system files', '[A] operating system files [S] bad [O] corrupted', '[S] bad [O] corrupted [A] operating system files']

task, data: aste laptop14
target: [('null', 'keys', 'ok', 'struggle')]
output: ['[A] keys [O] struggle [S] bad']
sent: ['It', "'s", 'been', 'a', 'couple', 'weeks', 'since', 'the', 'purchase', 'and', 'I', "'m", 'struggle', 'with', 'finding', 'the', 'correct', 'keys', '(', 'but', 'that', 'was', 'expected', ')', '.']
counter: {('null', 'keys', 'bad', 'struggle'): 5}
output quads: ['[A] keys [O] struggle [S] bad']
multi_path: ['[O] struggle [A] keys [S] bad', '[A] keys [O] struggle [S] bad', '[O] struggle [S] bad [A] keys', '[A] keys [S] bad [O] struggle', '[S] bad [O] struggle [A] keys']

task, data: aste laptop14
target: [('null', 'lion', 'great', 'upgraded'), ('null', 'mac os', 'great', 'happier')]
output: ['[A] mac os [O] happier [S] great']
sent: ['Now', 'that', 'I', 'have', 'upgraded', 'to', 'Lion', 'I', 'am', 'much', 'happier', 'about', 'MAC', 'OS', 'and', 'have', 'just', 'bought', 'an', 'iMac', 'for', 'office', '.']
counter: {('null', 'mac os', 'great', 'happier'): 5}
output quads: ['[A] mac os [O] happier [S] great']
multi_path: ['[O] happier [A] mac os [S] great', '[A] mac os [O] happier [S] great', '[O] happier [S] great [A] mac os', '[A] mac os [S] great [O] happier', '[S] great [O] happier [A] mac os']

task, data: aste laptop14
target: [('null', 'cd/dvd player', 'great', 'wanted')]
output: ['[A] cd/dvd player [O] wanted [S] ok']
sent: ['But', 'I', 'wanted', 'the', 'Pro', 'for', 'the', 'CD/DVD', 'player', '.']
counter: {('null', 'cd/dvd player', 'ok', 'wanted'): 5}
output quads: ['[A] cd/dvd player [O] wanted [S] ok']
multi_path: ['[O] wanted [A] cd/dvd player [S] ok', '[A] cd/dvd player [O] wanted [S] ok', '[O] wanted [S] ok [A] cd/dvd player', '[A] cd/dvd player [S] ok [O] wanted', '[S] ok [O] wanted [A] cd/dvd player']

task, data: aste laptop14
target: [('null', 'os.x', 'ok', 'worry')]
output: ['[A] os.x [O] worry [S] ok', '[A] windows [O] second nature [S] great']
sent: ['I', 'was', 'a', 'little', 'worry', 'at', 'first', 'because', 'I', 'do', "n't", 'have', 'a', 'lot', 'of', 'experience', 'with', 'os.x', 'and', 'windows', 'has', 'always', 'been', 'second', 'nature', 'to', 'me', 'after', 'many', 'years', 'of', 'using', 'windows', '.']
counter: {('null', 'os.x', 'ok', 'worry'): 5, ('null', 'windows', 'great', 'second nature'): 5}
output quads: ['[A] os.x [O] worry [S] ok', '[A] windows [O] second nature [S] great']
multi_path: ['[O] worry [A] os.x [S] ok [SSEP] [O] second nature [A] windows [S] great', '[A] os.x [O] worry [S] ok [SSEP] [A] windows [O] second nature [S] great', '[O] worry [S] ok [A] os.x [SSEP] [O] second nature [S] great [A] windows', '[A] os.x [S] ok [O] worry [SSEP] [A] windows [S] great [O] second nature', '[S] ok [O] worry [A] os.x [SSEP] [S] great [O] second nature [A] windows']

task, data: aste laptop14
target: [('null', 'os', 'ok', 'better'), ('null', 'softwares', 'ok', 'better')]
output: ['[A] os [O] better [S] great', '[A] softwares [O] better [S] great']
sent: ['With', 'the', 'softwares', 'supporting', 'the', 'use', 'of', 'other', 'OS', 'makes', 'it', 'much', 'better', '.']
counter: {('null', 'softwares', 'great', 'better'): 5, ('null', 'os', 'great', 'better'): 5}
output quads: ['[A] softwares [O] better [S] great', '[A] os [O] better [S] great']
multi_path: ['[O] better [A] softwares [S] great [SSEP] [O] better [A] os [S] great', '[A] softwares [O] better [S] great [SSEP] [A] os [O] better [S] great', '[O] better [S] great [A] softwares [SSEP] [O] better [S] great [A] os', '[A] softwares [S] great [O] better [SSEP] [A] os [S] great [O] better', '[S] great [O] better [A] softwares [SSEP] [S] great [O] better [A] os']

task, data: aste laptop14
target: [('null', 'performance', 'great', 'powerful')]
output: ['[A] performance [O] convenient [S] great', '[A] performance [O] powerful [S] great']
sent: ['I', 'was', 'considering', 'buying', 'the', 'Air', ',', 'but', 'in', 'reality', ',', 'this', 'one', 'has', 'a', 'more', 'powerful', 'performance', 'and', 'seems', 'much', 'more', 'convenient', ',', 'even', 'though', 'it', "'s", 'about', '.20', 'inch', 'thicker', 'and', '2', 'lbs', 'heavier', '.']
counter: {('null', 'performance', 'great', 'powerful'): 5, ('null', 'performance', 'great', 'convenient'): 5}
output quads: ['[A] performance [O] powerful [S] great', '[A] performance [O] convenient [S] great']
multi_path: ['[O] powerful [A] performance [S] great [SSEP] [O] convenient [A] performance [S] great', '[A] performance [O] powerful [S] great [SSEP] [A] performance [O] convenient [S] great', '[O] powerful [S] great [A] performance [SSEP] [O] convenient [S] great [A] performance', '[A] performance [S] great [O] powerful [SSEP] [A] performance [S] great [O] convenient', '[S] great [O] powerful [A] performance [SSEP] [S] great [O] convenient [A] performance']

task, data: aste laptop14
target: [('null', 'built in screen size', 'ok', 'not terribly important')]
output: ['[A] screen size [O] not terribly important [S] ok']
sent: ['At', 'home', 'and', 'the', 'office', 'it', 'gets', 'plugged', 'into', 'an', 'external', '24', "''", 'LCD', 'screen', ',', 'so', 'built', 'in', 'screen', 'size', 'is', 'not', 'terribly', 'important', '.']
counter: {('null', 'screen size', 'ok', 'not terribly important'): 5}
output quads: ['[A] screen size [O] not terribly important [S] ok']
multi_path: ['[O] not terribly important [A] screen size [S] ok', '[A] screen size [O] not terribly important [S] ok', '[O] not terribly important [S] ok [A] screen size', '[A] screen size [S] ok [O] not terribly important', '[S] ok [O] not terribly important [A] screen size']

task, data: aste laptop14
target: [('null', 'dvd slot', 'ok', 'no')]
output: ['[A] dvd slot [O] no [S] bad']
sent: ['Just', 'beware', 'no', 'DVD', 'slot', 'so', 'when', 'I', 'went', 'to', 'install', 'software', 'I', 'had', 'on', 'CD', 'I', 'could', "n't", '.']
counter: {('null', 'dvd slot', 'bad', 'no'): 5}
output quads: ['[A] dvd slot [O] no [S] bad']
multi_path: ['[O] no [A] dvd slot [S] bad', '[A] dvd slot [O] no [S] bad', '[O] no [S] bad [A] dvd slot', '[A] dvd slot [S] bad [O] no', '[S] bad [O] no [A] dvd slot']

task, data: aste laptop14
target: [('null', 'cd rom', 'ok', 'no'), ('null', 'features', 'bad', 'less')]
output: ['[A] cd rom [O] no [S] bad', '[A] features [O] less [S] bad']
sent: ['No', 'Cd', 'Rom', 'in', 'the', 'new', 'version', 'there', "'s", 'no', 'way', 'I', "'m", 'spending', 'that', 'kind', 'of', 'money', 'on', 'something', 'has', 'less', 'features', 'than', 'the', 'older', 'version', '.']
counter: {('null', 'cd rom', 'bad', 'no'): 5, ('null', 'features', 'bad', 'less'): 5}
output quads: ['[A] cd rom [O] no [S] bad', '[A] features [O] less [S] bad']
multi_path: ['[O] no [A] cd rom [S] bad [SSEP] [O] less [A] features [S] bad', '[A] cd rom [O] no [S] bad [SSEP] [A] features [O] less [S] bad', '[O] no [S] bad [A] cd rom [SSEP] [O] less [S] bad [A] features', '[A] cd rom [S] bad [O] no [SSEP] [A] features [S] bad [O] less', '[S] bad [O] no [A] cd rom [SSEP] [S] bad [O] less [A] features']

task, data: aste laptop14
target: [('null', 'volume', 'bad', 'hate'), ('null', 'volume', 'bad', 'low')]
output: ['[A] volume [O] low [S] bad']
sent: ['the', 'volume', 'is', 'really', 'low', 'to', 'low', 'for', 'a', 'laptopwas', 'not', 'expectin', 't', 'volume', 'to', 'be', 'so', 'lowan', 'i', 'hate', 'that', 'about', 'this', 'computer']
counter: {('null', 'volume', 'bad', 'low'): 5}
output quads: ['[A] volume [O] low [S] bad']
multi_path: ['[O] low [A] volume [S] bad', '[A] volume [O] low [S] bad', '[O] low [S] bad [A] volume', '[A] volume [S] bad [O] low', '[S] bad [O] low [A] volume']

task, data: aste laptop14
target: [('null', 'log into the system', 'bad', 'frustrating')]
output: ['[A] system [O] frustrating [S] bad']
sent: ['Every', 'time', 'I', 'log', 'into', 'the', 'system', 'after', 'a', 'few', 'hours', ',', 'there', 'is', 'this', 'endlessly', 'frustrating', 'process', 'that', 'I', 'have', 'to', 'go', 'through', '.']
counter: {('null', 'system', 'bad', 'frustrating'): 5}
output quads: ['[A] system [O] frustrating [S] bad']
multi_path: ['[O] frustrating [A] system [S] bad', '[A] system [O] frustrating [S] bad', '[O] frustrating [S] bad [A] system', '[A] system [S] bad [O] frustrating', '[S] bad [O] frustrating [A] system']

task, data: aste laptop14
target: [('null', 'case', 'bad', 'larger'), ('null', 'external power supply', 'ok', 'lack')]
output: ['[A] case [O] larger [S] bad', '[A] external power supply [O] lack [S] bad', '[A] size [O] small [S] bad']
sent: ['The', 'case', 'is', 'now', 'slightly', 'larger', 'than', 'the', 'previous', 'generation', ',', 'but', 'the', 'lack', 'of', 'an', 'external', 'power', 'supply', 'justifies', 'the', 'small', 'increase', 'in', 'size', '.']
counter: {('null', 'case', 'bad', 'larger'): 5, ('null', 'external power supply', 'bad', 'lack'): 5, ('null', 'size', 'bad', 'small'): 5}
output quads: ['[A] case [O] larger [S] bad', '[A] external power supply [O] lack [S] bad', '[A] size [O] small [S] bad']
multi_path: ['[O] larger [A] case [S] bad [SSEP] [O] lack [A] external power supply [S] bad [SSEP] [O] small [A] size [S] bad', '[A] case [O] larger [S] bad [SSEP] [A] external power supply [O] lack [S] bad [SSEP] [A] size [O] small [S] bad', '[O] larger [S] bad [A] case [SSEP] [O] lack [S] bad [A] external power supply [SSEP] [O] small [S] bad [A] size', '[A] case [S] bad [O] larger [SSEP] [A] external power supply [S] bad [O] lack [SSEP] [A] size [S] bad [O] small', '[S] bad [O] larger [A] case [SSEP] [S] bad [O] lack [A] external power supply [SSEP] [S] bad [O] small [A] size']

task, data: aste laptop14
target: [('null', 'pad', 'bad', 'hate'), ('null', 'works', 'great', 'great')]
output: []
sent: ['I', 'had', 'to', 'buy', 'a', 'wireless', 'mouse', 'to', 'go', 'with', 'it', ',', 'as', 'I', 'am', 'old', 'school', 'and', 'hate', 'the', 'pad', ',', 'but', 'knew', 'that', 'before', 'I', 'bought', 'it', ',', 'now', 'it', 'works', 'great', ',', 'need', 'to', 'get', 'adjusted', 'to', 'the', 'key', 'board', ',', 'as', 'I', 'am', 'used', 'to', 'a', 'bigger', 'one', 'and', 'pounding', '.']
counter: {('null', 'pad', 'bad', 'great'): 1, ('null', 'wireless mouse', 'ok', 'hate'): 2, ('null', 'key board', 'bad', 'great'): 2, ('null', 'pad', 'ok', 'great'): 2}
output quads: []
multi_path: ['[O] great [A] pad [S] bad', '[A] wireless mouse [O] hate [S] ok [SSEP] [A] key board [O] great [S] bad', '[O] great [S] ok [A] pad', '[A] wireless mouse [S] ok [O] hate [SSEP] [A] key board [S] bad [O] great', '[S] ok [O] great [A] pad']

task, data: aste laptop14
target: [('null', 'ethernet', 'ok', 'wanted'), ('null', 'features', 'great', 'wanted'), ('null', 'hdmi', 'ok', 'wanted'), ('null', 'usb ports', 'ok', 'wanted'), ('null', 'vga port', 'ok', 'wanted')]
output: ['[A] ethernet [O] wanted [S] ok', '[A] features [O] wanted [S] great', '[A] hdmi [O] wanted [S] ok', '[A] usb ports [O] wanted [S] great', '[A] vga port [O] wanted [S] ok']
sent: ['Has', 'all', 'the', 'other', 'features', 'I', 'wanted', 'including', 'a', 'VGA', 'port', ',', 'HDMI', ',', 'ethernet', 'and', '3', 'USB', 'ports', '.']
counter: {('null', 'features', 'great', 'wanted'): 5, ('null', 'vga port', 'ok', 'wanted'): 3, ('null', 'hdmi', 'ok', 'wanted'): 3, ('null', 'ethernet', 'ok', 'wanted'): 3, ('null', 'usb ports', 'ok', 'wanted'): 2, ('null', 'usb ports', 'great', 'wanted'): 3, ('null', 'vga port', 'great', 'wanted'): 2, ('null', 'hdmi', 'great', 'wanted'): 2, ('null', 'ethernet', 'great', 'wanted'): 2}
output quads: ['[A] features [O] wanted [S] great', '[A] vga port [O] wanted [S] ok', '[A] hdmi [O] wanted [S] ok', '[A] ethernet [O] wanted [S] ok', '[A] usb ports [O] wanted [S] great']
multi_path: ['[O] wanted [A] features [S] great [SSEP] [O] wanted [A] vga port [S] ok [SSEP] [O] wanted [A] hdmi [S] ok [SSEP] [O] wanted [A] ethernet [S] ok [SSEP] [O] wanted [A] usb ports [S] ok', '[A] features [O] wanted [S] great [SSEP] [A] vga port [O] wanted [S] ok [SSEP] [A] hdmi [O] wanted [S] ok [SSEP] [A] ethernet [O] wanted [S] ok [SSEP] [A] usb ports [O] wanted [S] great', '[O] wanted [S] great [A] features [SSEP] [O] wanted [S] great [A] vga port [SSEP] [O] wanted [S] great [A] hdmi [SSEP] [O] wanted [S] great [A] ethernet [SSEP] [O] wanted [S] great [A] usb ports', '[A] features [S] great [O] wanted [SSEP] [A] vga port [S] ok [O] wanted [SSEP] [A] hdmi [S] ok [O] wanted [SSEP] [A] ethernet [S] ok [O] wanted [SSEP] [A] usb ports [S] ok [O] wanted', '[S] great [O] wanted [A] features [SSEP] [S] great [O] wanted [A] vga port [SSEP] [S] great [O] wanted [A] hdmi [SSEP] [S] great [O] wanted [A] ethernet [SSEP] [S] great [O] wanted [A] usb ports']

task, data: aste laptop14
target: [('null', 'price', 'ok', 'decent')]
output: ['[A] price [O] decent [S] great']
sent: ['It', "'s", 'a', 'decent', 'computer', 'for', 'the', 'price', 'and', 'hopefully', 'it', 'will', 'last', 'a', 'long', 'time', '.']
counter: {('null', 'price', 'great', 'decent'): 5}
output quads: ['[A] price [O] decent [S] great']
multi_path: ['[O] decent [A] price [S] great', '[A] price [O] decent [S] great', '[O] decent [S] great [A] price', '[A] price [S] great [O] decent', '[S] great [O] decent [A] price']

task, data: aste laptop14
target: [('null', 'heat output', 'great', 'low'), ('null', 'heat output', 'great', 'nicest'), ('null', 'operation', 'great', 'nicest'), ('null', 'operation', 'great', 'quiet')]
output: ['[A] heat output [O] low [S] great', '[A] heat output [O] nicest [S] great', '[A] operation [O] quiet [S] great']
sent: ['The', 'nicest', 'part', 'is', 'the', 'low', 'heat', 'output', 'and', 'ultra', 'quiet', 'operation', '.']
counter: {('null', 'heat output', 'great', 'nicest'): 5, ('null', 'heat output', 'great', 'low'): 3, ('null', 'operation', 'great', 'quiet'): 5, ('null', 'operation', 'great', 'low'): 1}
output quads: ['[A] heat output [O] nicest [S] great', '[A] heat output [O] low [S] great', '[A] operation [O] quiet [S] great']
multi_path: ['[O] nicest [A] heat output [S] great [SSEP] [O] low [A] heat output [S] great [SSEP] [O] quiet [A] operation [S] great', '[A] heat output [O] nicest [S] great [SSEP] [A] operation [O] low [S] great [SSEP] [A] operation [O] quiet [S] great', '[O] nicest [S] great [A] heat output [SSEP] [O] low [S] great [A] heat output [SSEP] [O] quiet [S] great [A] operation', '[A] heat output [S] great [O] nicest [SSEP] [A] operation [S] great [O] quiet', '[S] great [O] nicest [A] heat output [SSEP] [S] great [O] low [A] heat output [SSEP] [S] great [O] quiet [A] operation']

task, data: aste laptop14
target: [('null', 'built-in mic', 'ok', 'not have'), ('null', 'mac os 10.9', 'bad', 'not handle')]
output: ['[A] built-in mic [O] does not have [S] bad']
sent: ['this', 'Mac', 'Mini', 'does', 'not', 'have', 'a', 'built-in', 'mic', ',', 'and', 'it', 'would', 'seem', 'that', 'its', 'Mac', 'OS', '10.9', 'does', 'not', 'handle', 'external', 'microphones', 'properly', '.']
counter: {('null', 'built-in mic', 'bad', 'does not have'): 5, ('null', 'external microphones', 'bad', 'not handle'): 2, ('null', 'mac os 10.9', 'bad', 'does not handle'): 2, ('null', 'microphones', 'bad', 'properly'): 2, ('null', 'mac os 10.9', 'bad', 'not handle'): 1, ('null', 'external microphones', 'bad', 'properly'): 1}
output quads: ['[A] built-in mic [O] does not have [S] bad']
multi_path: ['[O] does not have [A] built-in mic [S] bad [SSEP] [O] not handle [A] external microphones [S] bad', '[A] built-in mic [O] does not have [S] bad [SSEP] [A] mac os 10.9 [O] does not handle [S] bad [SSEP] [A] microphones [O] properly [S] bad', '[O] does not have [S] bad [A] built-in mic [SSEP] [O] not handle [S] bad [A] mac os 10.9 [SSEP] [O] properly [S] bad [A] external microphones', '[A] built-in mic [S] bad [O] does not have [SSEP] [A] mac os 10.9 [S] bad [O] does not handle [SSEP] [A] microphones [S] bad [O] properly', '[S] bad [O] does not have [A] built-in mic [SSEP] [S] bad [O] not handle [A] external microphones']

task, data: aste laptop14
target: [('null', 'features', 'ok', 'lot of'), ('null', 'shortcuts', 'ok', 'lot of')]
output: ['[A] features [O] a lot of [S] great', '[A] shortcuts [O] a lot of [S] great']
sent: ['A', 'lot', 'of', 'features', 'and', 'shortcuts', 'on', 'the', 'MBP', 'that', 'I', 'was', 'never', 'exposed', 'to', 'on', 'a', 'normal', 'PC', '.']
counter: {('null', 'features', 'great', 'a lot of'): 5, ('null', 'shortcuts', 'great', 'a lot of'): 5}
output quads: ['[A] features [O] a lot of [S] great', '[A] shortcuts [O] a lot of [S] great']
multi_path: ['[O] a lot of [A] features [S] great [SSEP] [O] a lot of [A] shortcuts [S] great', '[A] features [O] a lot of [S] great [SSEP] [A] shortcuts [O] a lot of [S] great', '[O] a lot of [S] great [A] features [SSEP] [O] a lot of [S] great [A] shortcuts', '[A] features [S] great [O] a lot of [SSEP] [A] shortcuts [S] great [O] a lot of', '[S] great [O] a lot of [A] features [SSEP] [S] great [O] a lot of [A] shortcuts']

task, data: aste laptop14
target: [('null', 'fonts', 'bad', 'small'), ('null', 'resolution', 'great', 'higher')]
output: ['[A] air [O] higher [S] great', '[A] fonts [O] small [S] bad']
sent: ['air', 'has', 'higher', 'resolution', 'but', 'the', 'fonts', 'are', 'small', '.']
counter: {('null', 'air', 'great', 'higher'): 5, ('null', 'fonts', 'bad', 'small'): 5}
output quads: ['[A] air [O] higher [S] great', '[A] fonts [O] small [S] bad']
multi_path: ['[O] higher [A] air [S] great [SSEP] [O] small [A] fonts [S] bad', '[A] air [O] higher [S] great [SSEP] [A] fonts [O] small [S] bad', '[O] higher [S] great [A] air [SSEP] [O] small [S] bad [A] fonts', '[A] air [S] great [O] higher [SSEP] [A] fonts [S] bad [O] small', '[S] great [O] higher [A] air [SSEP] [S] bad [O] small [A] fonts']

task, data: aste laptop14
target: [('null', 'features', 'great', 'cool'), ('null', 'working', 'great', 'easier')]
output: ['[A] features [O] cool [S] great', '[A] working with mac [O] easier [S] great']
sent: ['working', 'with', 'Mac', 'is', 'so', 'much', 'easier', ',', 'so', 'many', 'cool', 'features', '.']
counter: {('null', 'working with mac', 'great', 'easier'): 3, ('null', 'features', 'great', 'cool'): 5, ('null', 'working', 'great', 'easier'): 2}
output quads: ['[A] working with mac [O] easier [S] great', '[A] features [O] cool [S] great']
multi_path: ['[O] easier [A] working with mac [S] great [SSEP] [O] cool [A] features [S] great', '[A] working with mac [O] easier [S] great [SSEP] [A] features [O] cool [S] great', '[O] easier [S] great [A] working [SSEP] [O] cool [S] great [A] features', '[A] working with mac [S] great [O] easier [SSEP] [A] features [S] great [O] cool', '[S] great [O] easier [A] working [SSEP] [S] great [O] cool [A] features']

task, data: aste laptop14
target: [('null', 'cd/dvd player', 'ok', 'wish')]
output: ['[A] cd/dvd player [O] wish [S] bad']
sent: ['I', 'only', 'wish', 'this', 'mac', 'had', 'a', 'CD/DVD', 'player', 'built', 'in', '.']
counter: {('null', 'cd/dvd player', 'bad', 'wish'): 5}
output quads: ['[A] cd/dvd player [O] wish [S] bad']
multi_path: ['[O] wish [A] cd/dvd player [S] bad', '[A] cd/dvd player [O] wish [S] bad', '[O] wish [S] bad [A] cd/dvd player', '[A] cd/dvd player [S] bad [O] wish', '[S] bad [O] wish [A] cd/dvd player']

task, data: aste laptop14
target: [('null', 'backlit keys', 'bad', 'miss')]
output: ['[A] backlit keys [O] miss [S] great']
sent: ['The', 'only', 'thing', 'I', 'miss', 'is', 'that', 'my', 'old', 'Alienware', 'laptop', 'had', 'backlit', 'keys', '.']
counter: {('null', 'backlit keys', 'great', 'miss'): 5}
output quads: ['[A] backlit keys [O] miss [S] great']
multi_path: ['[O] miss [A] backlit keys [S] great', '[A] backlit keys [O] miss [S] great', '[O] miss [S] great [A] backlit keys', '[A] backlit keys [S] great [O] miss', '[S] great [O] miss [A] backlit keys']

task, data: aste laptop14
target: [('null', 'microsoft word', 'ok', 'wish')]
output: ['[A] microsoft word [O] wish [S] bad']
sent: ['So', 'happy', 'with', 'this', 'purchase', ',', 'I', 'just', 'wish', 'it', 'came', 'with', 'Microsoft', 'Word', '.']
counter: {('null', 'microsoft word', 'bad', 'wish'): 5}
output quads: ['[A] microsoft word [O] wish [S] bad']
multi_path: ['[O] wish [A] microsoft word [S] bad', '[A] microsoft word [O] wish [S] bad', '[O] wish [S] bad [A] microsoft word', '[A] microsoft word [S] bad [O] wish', '[S] bad [O] wish [A] microsoft word']

task, data: aste laptop14
target: [('null', 'operating system', 'great', 'smoothness')]
output: ['[A] operating system [O] smoothness [S] great', '[A] screen [O] smoothness [S] great', '[A] software [O] smoothness [S] great']
sent: ['The', 'screen', ',', 'the', 'software', 'and', 'the', 'smoothness', 'of', 'the', 'operating', 'system', '.']
counter: {('null', 'screen', 'great', 'smoothness'): 5, ('null', 'software', 'great', 'smoothness'): 5, ('null', 'operating system', 'great', 'smoothness'): 5}
output quads: ['[A] screen [O] smoothness [S] great', '[A] software [O] smoothness [S] great', '[A] operating system [O] smoothness [S] great']
multi_path: ['[O] smoothness [A] screen [S] great [SSEP] [O] smoothness [A] software [S] great [SSEP] [O] smoothness [A] operating system [S] great', '[A] screen [O] smoothness [S] great [SSEP] [A] software [O] smoothness [S] great [SSEP] [A] operating system [O] smoothness [S] great', '[O] smoothness [S] great [A] screen [SSEP] [O] smoothness [S] great [A] software [SSEP] [O] smoothness [S] great [A] operating system', '[A] screen [S] great [O] smoothness [SSEP] [A] software [S] great [O] smoothness [SSEP] [A] operating system [S] great [O] smoothness', '[S] great [O] smoothness [A] screen [SSEP] [S] great [O] smoothness [A] software [SSEP] [S] great [O] smoothness [A] operating system']

task, data: aste laptop14
target: [('null', 'bluetooth interface', 'bad', 'sloppy'), ('null', 'mac os', 'bad', 'courtesy'), ('null', 'range', 'bad', 'poor')]
output: ['[A] bluetooth interface [O] sloppy [S] bad', '[A] range [O] poor [S] bad']
sent: ['Further', ',', 'this', 'Mac', 'Mini', 'has', 'a', 'sloppy', 'Bluetooth', 'interface', '(', 'courtesy', 'of', 'the', 'Mac', 'OS', ')', 'and', 'the', 'range', 'is', 'poor', '.']
counter: {('null', 'bluetooth interface', 'bad', 'sloppy'): 5, ('null', 'range', 'bad', 'poor'): 5}
output quads: ['[A] bluetooth interface [O] sloppy [S] bad', '[A] range [O] poor [S] bad']
multi_path: ['[O] sloppy [A] bluetooth interface [S] bad [SSEP] [O] poor [A] range [S] bad', '[A] bluetooth interface [O] sloppy [S] bad [SSEP] [A] range [O] poor [S] bad', '[O] sloppy [S] bad [A] bluetooth interface [SSEP] [O] poor [S] bad [A] range', '[A] bluetooth interface [S] bad [O] sloppy [SSEP] [A] range [S] bad [O] poor', '[S] bad [O] sloppy [A] bluetooth interface [SSEP] [S] bad [O] poor [A] range']

task, data: aste laptop14
target: [('null', 'touch screen', 'ok', 'fine')]
output: ['[A] touch screen [O] fine [S] great']
sent: ['Fine', 'if', 'you', 'have', 'a', 'touch', 'screen', '.']
counter: {('null', 'touch screen', 'great', 'fine'): 5}
output quads: ['[A] touch screen [O] fine [S] great']
multi_path: ['[O] fine [A] touch screen [S] great', '[A] touch screen [O] fine [S] great', '[O] fine [S] great [A] touch screen', '[A] touch screen [S] great [O] fine', '[S] great [O] fine [A] touch screen']

task, data: aste laptop14
target: [('null', 'firewire 800', 'great', 'better'), ('null', 'firewire 800', 'great', 'veryimportant'), ('null', 'mac os', 'bad', 'inferior')]
output: ['[A] firewire 800 [O] better [S] great']
sent: ['A', 'veryimportant', 'feature', 'is', 'Firewire', '800', 'which', 'in', 'my', 'experience', 'works', 'better', 'then', 'USB3', '(', 'in', 'PC', 'enabled', 'with', 'USB3', ')', 'I', 'was', 'not', 'originally', 'sold', 'on', 'the', 'MAC', 'OS', 'I', 'felt', 'it', 'was', 'inferior', 'in', 'many', 'ways', 'To', 'Windows', '7', '.']
counter: {('null', 'firewire 800', 'great', 'mportant'): 1, ('null', 'firewire 800', 'great', 'better'): 5, ('null', 'feature', 'great', 'mportant'): 2}
output quads: ['[A] firewire 800 [O] better [S] great']
multi_path: ['[O]important [A] firewire 800 [S] great [SSEP] [O] better [A] firewire 800 [S] great', '[A] firewire 800 [O] better [S] great', '[O]important [S] great [A] feature [SSEP] [O] better [S] great [A] firewire 800', '[A] firewire 800 [S] great [O] better', '[S] great [O]important [A] feature [SSEP] [S] great [O] better [A] firewire 800']

task, data: aste laptop14
target: [('null', 'graphics stuff', 'great', 'nice'), ('null', 'itunes', 'great', 'like'), ('null', 'security', 'great', 'apparent')]
output: ['[A] apparent security [O] like [S] great', '[A] graphics stuff [O] nice [S] great', '[A] itunes [O] like [S] great', '[A] mini form factor [O] like [S] great']
sent: ['I', 'like', 'iTunes', ',', 'the', 'apparent', 'security', ',', 'the', 'Mini', 'form', 'factor', ',', 'all', 'the', 'nice', 'graphics', 'stuff', '.']
counter: {('null', 'itunes', 'great', 'like'): 5, ('null', 'apparent security', 'great', 'like'): 3, ('null', 'mini form factor', 'great', 'like'): 5, ('null', 'graphics stuff', 'great', 'nice'): 5, ('null', 'security', 'great', 'like'): 2}
output quads: ['[A] itunes [O] like [S] great', '[A] apparent security [O] like [S] great', '[A] mini form factor [O] like [S] great', '[A] graphics stuff [O] nice [S] great']
multi_path: ['[O] like [A] itunes [S] great [SSEP] [O] like [A] apparent security [S] great [SSEP] [O] like [A] mini form factor [S] great [SSEP] [O] nice [A] graphics stuff [S] great', '[A] itunes [O] like [S] great [SSEP] [A] security [O] like [S] great [SSEP] [A] mini form factor [O] like [S] great [SSEP] [A] graphics stuff [O] nice [S] great', '[O] like [S] great [A] itunes [SSEP] [O] like [S] great [A] apparent security [SSEP] [O] like [S] great [A] mini form factor [SSEP] [O] nice [S] great [A] graphics stuff', '[A] itunes [S] great [O] like [SSEP] [A] security [S] great [O] like [SSEP] [A] mini form factor [S] great [O] like [SSEP] [A] graphics stuff [S] great [O] nice', '[S] great [O] like [A] itunes [SSEP] [S] great [O] like [A] apparent security [SSEP] [S] great [O] like [A] mini form factor [SSEP] [S] great [O] nice [A] graphics stuff']

task, data: aste laptop14
target: [('null', 'ssd drive', 'great', 'flying')]
output: ['[A] spinning hard disk [O] replacing [S] ok', '[A] ssd drive [O] flying [S] great']
sent: ['After', 'replacing', 'the', 'spinning', 'hard', 'disk', 'with', 'an', 'ssd', 'drive', ',', 'my', 'mac', 'is', 'just', 'flying', '.']
counter: {('null', 'spinning hard disk', 'ok', 'replacing'): 5, ('null', 'ssd drive', 'great', 'flying'): 5}
output quads: ['[A] spinning hard disk [O] replacing [S] ok', '[A] ssd drive [O] flying [S] great']
multi_path: ['[O] replacing [A] spinning hard disk [S] ok [SSEP] [O] flying [A] ssd drive [S] great', '[A] spinning hard disk [O] replacing [S] ok [SSEP] [A] ssd drive [O] flying [S] great', '[O] replacing [S] ok [A] spinning hard disk [SSEP] [O] flying [S] great [A] ssd drive', '[A] spinning hard disk [S] ok [O] replacing [SSEP] [A] ssd drive [S] great [O] flying', '[S] ok [O] replacing [A] spinning hard disk [SSEP] [S] great [O] flying [A] ssd drive']

task, data: aste laptop14
target: [('null', 'hdmi', 'ok', 'complained')]
output: ['[A] hdmi [O] complained [S] bad']
sent: ['I', 'know', 'some', 'people', 'complained', 'about', 'HDMI', 'issues', 'but', 'they', 'released', 'a', 'firmware', 'patch', 'to', 'address', 'that', 'issue', '.']
counter: {('null', 'hdmi', 'bad', 'complained'): 5}
output quads: ['[A] hdmi [O] complained [S] bad']
multi_path: ['[O] complained [A] hdmi [S] bad', '[A] hdmi [O] complained [S] bad', '[O] complained [S] bad [A] hdmi', '[A] hdmi [S] bad [O] complained', '[S] bad [O] complained [A] hdmi']

task, data: aste laptop14
target: [('null', 'specs', 'ok', 'best')]
output: ['[A] specs [O] best [S] great']
sent: ['With', 'the', 'needs', 'of', 'a', 'professional', 'photographer', 'I', 'generally', 'need', 'to', 'keep', 'up', 'with', 'the', 'best', 'specs', '.']
counter: {('null', 'specs', 'great', 'best'): 5}
output quads: ['[A] specs [O] best [S] great']
multi_path: ['[O] best [A] specs [S] great', '[A] specs [O] best [S] great', '[O] best [S] great [A] specs', '[A] specs [S] great [O] best', '[S] great [O] best [A] specs']

task, data: aste laptop14
target: [('null', 'mother boards', 'ok', 'issues')]
output: ['[A] mother boards [O] issues [S] bad']
sent: ['I', 'called', 'Toshiba', 'where', 'I', 'gave', 'them', 'the', 'serial', 'number', 'and', 'they', 'informed', 'me', 'that', 'they', 'were', 'having', 'issues', 'with', 'the', 'mother', 'boards', '.']
counter: {('null', 'mother boards', 'bad', 'issues'): 5}
output quads: ['[A] mother boards [O] issues [S] bad']
multi_path: ['[O] issues [A] mother boards [S] bad', '[A] mother boards [O] issues [S] bad', '[O] issues [S] bad [A] mother boards', '[A] mother boards [S] bad [O] issues', '[S] bad [O] issues [A] mother boards']

task, data: aste laptop14
target: [('null', 'graphics card', 'bad', 'faulty'), ('null', 'mother board', 'bad', 'faulty')]
output: ['[A] graphics card [O] faulty [S] bad', '[A] mother board [O] problems [S] bad']
sent: ['I', 'seem', 'to', 'be', 'having', 'repeat', 'problems', 'as', 'the', 'Mother', 'Board', 'in', 'this', 'one', 'is', 'diagnosed', 'as', 'faulty', ',', 'related', 'to', 'the', 'graphics', 'card', '.']
counter: {('null', 'mother board', 'bad', 'problems'): 5, ('null', 'graphics card', 'bad', 'faulty'): 5}
output quads: ['[A] mother board [O] problems [S] bad', '[A] graphics card [O] faulty [S] bad']
multi_path: ['[O] problems [A] mother board [S] bad [SSEP] [O] faulty [A] graphics card [S] bad', '[A] mother board [O] problems [S] bad [SSEP] [A] graphics card [O] faulty [S] bad', '[O] problems [S] bad [A] mother board [SSEP] [O] faulty [S] bad [A] graphics card', '[A] mother board [S] bad [O] problems [SSEP] [A] graphics card [S] bad [O] faulty', '[S] bad [O] problems [A] mother board [SSEP] [S] bad [O] faulty [A] graphics card']

task, data: aste laptop14
target: [('null', 'performs', 'great', 'better')]
output: ['[A] ram [O] better [S] ok']
sent: ['It', 'also', 'comes', 'with', '4G', 'of', 'RAM', 'but', 'if', 'you', "'re", 'like', 'me', 'you', 'want', 'to', 'max', 'that', 'out', 'so', 'I', 'immediately', 'put', '8G', 'of', 'RAM', 'in', 'her', 'and', 'I', "'ve", 'never', 'used', 'a', 'computer', 'that', 'performs', 'better', '.']
counter: {('null', 'ram', 'ok', 'better'): 5}
output quads: ['[A] ram [O] better [S] ok']
multi_path: ['[O] better [A] ram [S] ok', '[A] ram [O] better [S] ok', '[O] better [S] ok [A] ram', '[A] ram [S] ok [O] better', '[S] ok [O] better [A] ram']

task, data: aste laptop14
target: [('null', 'virtual home schooling', 'great', 'awesome')]
output: ['[A] home schooling [O] awesome [S] great']
sent: ['This', 'computer', 'is', 'also', 'awesome', 'for', 'my', 'sons', 'virtual', 'home', 'schooling', '.']
counter: {('null', 'home schooling', 'great', 'awesome'): 5}
output quads: ['[A] home schooling [O] awesome [S] great']
multi_path: ['[O] awesome [A] home schooling [S] great', '[A] home schooling [O] awesome [S] great', '[O] awesome [S] great [A] home schooling', '[A] home schooling [S] great [O] awesome', '[S] great [O] awesome [A] home schooling']

task, data: aste laptop14
target: [('null', 'durability of the battery', 'great', 'excellent'), ('null', 'functions provided by the trackpad', 'great', 'unmatched'), ('null', 'mobility', 'great', 'optimal'), ('null', 'operating system', 'great', 'excellent'), ('null', 'size', 'great', 'excellent'), ('null', 'weight', 'great', 'excellent')]
output: ['[A] durability of the battery [O] excellent [S] great', '[A] functions [O] unmatched [S] great', '[A] operating system [O] excellent [S] great', '[A] size [O] optimal [S] great', '[A] trackpad [O] unmatched [S] great', '[A] weight [O] optimal [S] great']
sent: ['also', '...', '-', 'excellent', 'operating', 'system', '--', 'size', 'and', 'weight', 'for', 'optimal', 'mobility', '--', 'excellent', 'durability', 'of', 'the', 'battery', '--', 'the', 'functions', 'provided', 'by', 'the', 'trackpad', 'is', 'unmatched', 'by', 'any', 'other', 'brand-']
counter: {('null', 'operating system', 'great', 'excellent'): 5, ('null', 'size', 'great', 'optimal'): 5, ('null', 'weight', 'great', 'optimal'): 5, ('null', 'durability of the battery', 'great', 'excellent'): 5, ('null', 'functions', 'great', 'unmatched'): 4, ('null', 'trackpad', 'great', 'unmatched'): 3, ('null', 'functions of the trackpad', 'great', 'unmatched'): 1}
output quads: ['[A] operating system [O] excellent [S] great', '[A] size [O] optimal [S] great', '[A] weight [O] optimal [S] great', '[A] durability of the battery [O] excellent [S] great', '[A] functions [O] unmatched [S] great', '[A] trackpad [O] unmatched [S] great']
multi_path: ['[O] excellent [A] operating system [S] great [SSEP] [O] optimal [A] size [S] great [SSEP] [O] optimal [A] weight [S] great [SSEP] [O] excellent [A] durability of the battery [S] great [SSEP] [O] unmatched [A] functions [S] great [SSEP] [O] unmatched [A] trackpad [S] great', '[A] operating system [O] excellent [S] great [SSEP] [A] size [O] optimal [S] great [SSEP] [A] weight [O] optimal [S] great [SSEP] [A] durability of the battery [O] excellent [S] great [SSEP] [A] functions [O] unmatched [S] great [SSEP] [A] trackpad [O] unmatched [S] great', '[O] excellent [S] great [A] operating system [SSEP] [O] optimal [S] great [A] size [SSEP] [O] optimal [S] great [A] weight [SSEP] [O] excellent [S] great [A] durability of the battery [SSEP] [O] unmatched [S] great [A] functions [SSEP] [O] unmatched [S] great [A] trackpad', '[A] operating system [S] great [O] excellent [SSEP] [A] size [S] great [O] optimal [SSEP] [A] weight [S] great [O] optimal [SSEP] [A] durability of the battery [S] great [O] excellent [SSEP] [A] functions [S] great [O] unmatched', '[S] great [O] excellent [A] operating system [SSEP] [S] great [O] optimal [A] size [SSEP] [S] great [O] optimal [A] weight [SSEP] [S] great [O] excellent [A] durability of the battery [SSEP] [S] great [O] unmatched [A] functions of the trackpad']

task, data: aste laptop14
target: [('null', 'software', 'ok', 'no issues'), ('null', 'updates', 'ok', 'no issues')]
output: ['[A] software [O] no issues [S] great', '[A] updates [O] no issues [S] great']
sent: ['I', "'ve", 'had', 'it', 'for', 'about', '2', 'months', 'now', 'and', 'found', 'no', 'issues', 'with', 'software', 'or', 'updates', '.']
counter: {('null', 'software', 'great', 'no issues'): 5, ('null', 'updates', 'great', 'no issues'): 5}
output quads: ['[A] software [O] no issues [S] great', '[A] updates [O] no issues [S] great']
multi_path: ['[O] no issues [A] software [S] great [SSEP] [O] no issues [A] updates [S] great', '[A] software [O] no issues [S] great [SSEP] [A] updates [O] no issues [S] great', '[O] no issues [S] great [A] software [SSEP] [O] no issues [S] great [A] updates', '[A] software [S] great [O] no issues [SSEP] [A] updates [S] great [O] no issues', '[S] great [O] no issues [A] software [SSEP] [S] great [O] no issues [A] updates']

task, data: aste laptop14
target: [('null', 'disc drive', 'ok', 'not have')]
output: ['[A] disc drive [O] does not [S] bad']
sent: ['the', 'latest', 'version', 'does', 'not', 'have', 'a', 'disc', 'drive', '.']
counter: {('null', 'disc drive', 'bad', 'does not'): 5}
output quads: ['[A] disc drive [O] does not [S] bad']
multi_path: ['[O] does not [A] disc drive [S] bad', '[A] disc drive [O] does not [S] bad', '[O] does not [S] bad [A] disc drive', '[A] disc drive [S] bad [O] does not', '[S] bad [O] does not [A] disc drive']

task, data: aste laptop14
target: [('null', 'res', 'great', 'low'), ('null', 'res', 'great', 'ridiculous'), ('null', 'screen', 'great', 'complain'), ('null', 'screen', 'great', 'ridiculous')]
output: ['[A] res [O] low [S] bad']
sent: ['Screen', '-', 'although', 'some', 'people', 'might', 'complain', 'about', 'low', 'res', 'which', 'I', 'think', 'is', 'ridiculous', '.']
counter: {('null', 'res', 'bad', 'low'): 5, ('null', 'res', 'bad', 'ridiculous'): 1}
output quads: ['[A] res [O] low [S] bad']
multi_path: ['[O] low [A] res [S] bad', '[A] res [O] low [S] bad', '[O] low [S] bad [A] res', '[A] res [S] bad [O] low', '[S] bad [O] low [A] res [SSEP] [S] bad [O] ridiculous [A] res']

pred labels count Counter({1: 193, 2: 99, 3: 29, 4: 5, 5: 1, 6: 1})
gold  [O] fast [A] boot time [S] great
pred  [A] boot time [O] fast [S] great

gold  [O] not fix [A] tech support [S] bad
pred  [A] tech support [O] would not fix [S] bad

gold  [O] easy [A] set up [S] great
pred  [A] set up [O] easy [S] great

gold  [O] not enjoy [A] windows 8 [S] bad [SSEP] [O] not enjoy [A] touchscreen functions [S] bad
pred  [A] windows 8 [O] not enjoy [S] bad [SSEP] [A] touchscreen functions [O] not enjoy [S] bad

gold  [O] lousy [A] internal speakers [S] bad
pred  [A] click pads [O] don't like [S] bad [SSEP] [A] internal speakers [O] lousy [S] bad

gold  [O] fast [A] use [S] great [SSEP] [O] light [A] use [S] great [SSEP] [O] simple [A] use [S] great
pred  [A] use [O] simple [S] great

gold  [O] well [A] works [S] great [SSEP] [O] happy [A] apple os [S] great
pred  [A] works [O] well [S] great [SSEP] [A] os [O] happy [S] great

gold  [O] not light and slim [A] features [S] great
pred  [A] features [O] make up for it [S] great

gold  [O] pleased [A] log on [S] great [SSEP] [O] fast [A] log on [S] great [SSEP] [O] pleased [A] wifi connection [S] great [SSEP] [O] speedy [A] wifi connection [S] great [SSEP] [O] pleased [A] battery life [S] great [SSEP] [O] long [A] battery life [S] great
pred  [A] log on [O] fast [S] great [SSEP] [A] wifi connection [O] speedy [S] great [SSEP] [A] battery life [O] long [S] great

gold  [O] not yet discovered [A] delete key [S] bad
pred  [A] delete key [O] not yet discovered [S] bad

number of gold spans: 541, predicted spans: 509, hit: 335
aste laptop14 {'precision': 65.81532416502947, 'recall': 61.92236598890942, 'f1': 63.80952380952382}
Total examples = 492
Total examples = 492
Ori sent size: 492
Input size: 2460 2460
Examples:
[['aste', ':', 'rest14', ':', 'the', 'bread', 'is', 'top', 'notch', 'as', 'well', '.', '[O]', '[A]', '[S]'], ['aste', ':', 'rest14', ':', 'the', 'bread', 'is', 'top', 'notch', 'as', 'well', '.', '[O]', '[S]', '[A]'], ['aste', ':', 'rest14', ':', 'the', 'bread', 'is', 'top', 'notch', 'as', 'well', '.', '[A]', '[O]', '[S]'], ['aste', ':', 'rest14', ':', 'the', 'bread', 'is', 'top', 'notch', 'as', 'well', '.', '[A]', '[S]', '[O]'], ['aste', ':', 'rest14', ':', 'the', 'bread', 'is', 'top', 'notch', 'as', 'well', '.', '[S]', '[O]', '[A]'], ['aste', ':', 'rest14', ':', 'i', 'have', 'to', 'say', 'they', 'have', 'one', 'of', 'the', 'fastest', 'delivery', 'times', 'in', 'the', 'city', '.', '[O]', '[A]', '[S]'], ['aste', ':', 'rest14', ':', 'i', 'have', 'to', 'say', 'they', 'have', 'one', 'of', 'the', 'fastest', 'delivery', 'times', 'in', 'the', 'city', '.', '[O]', '[S]', '[A]'], ['aste', ':', 'rest14', ':', 'i', 'have', 'to', 'say', 'they', 'have', 'one', 'of', 'the', 'fastest', 'delivery', 'times', 'in', 'the', 'city', '.', '[A]', '[O]', '[S]'], ['aste', ':', 'rest14', ':', 'i', 'have', 'to', 'say', 'they', 'have', 'one', 'of', 'the', 'fastest', 'delivery', 'times', 'in', 'the', 'city', '.', '[A]', '[S]', '[O]'], ['aste', ':', 'rest14', ':', 'i', 'have', 'to', 'say', 'they', 'have', 'one', 'of', 'the', 'fastest', 'delivery', 'times', 'in', 'the', 'city', '.', '[S]', '[O]', '[A]']]
['[O] top notch [A] bread [S] great', '[O] top notch [S] great [A] bread', '[A] bread [O] top notch [S] great', '[A] bread [S] great [O] top notch', '[S] great [O] top notch [A] bread', '[O] fastest [A] delivery times [S] great', '[O] fastest [S] great [A] delivery times', '[A] delivery times [O] fastest [S] great', '[A] delivery times [S] great [O] fastest', '[S] great [O] fastest [A] delivery times']
task, data: aste rest14
target: [('null', 'place', 'great', 'clean')]
output: ['[A] place [O] clean [S] great', '[A] place [O] sterile [S] great', '[A] sushi [O] fresh [S] great', '[A] sushi [O] not the best [S] bad']
sent: ['Certainly', 'not', 'the', 'best', 'sushi', 'in', 'New', 'York', ',', 'however', ',', 'it', 'is', 'always', 'fresh', ',', 'and', 'the', 'place', 'is', 'very', 'clean', ',', 'sterile', '.']
counter: {('null', 'sushi', 'bad', 'not the best'): 4, ('null', 'sushi', 'great', 'fresh'): 5, ('null', 'place', 'great', 'clean'): 5, ('null', 'place', 'great', 'sterile'): 5, ('null', 'sushi', 'great', 'not the best'): 1}
output quads: ['[A] sushi [O] not the best [S] bad', '[A] sushi [O] fresh [S] great', '[A] place [O] clean [S] great', '[A] place [O] sterile [S] great']
multi_path: ['[O] not the best [A] sushi [S] bad [SSEP] [O] fresh [A] sushi [S] great [SSEP] [O] clean [A] place [S] great [SSEP] [O] sterile [A] place [S] great', '[O] not the best [S] bad [A] sushi [SSEP] [O] fresh [S] great [A] sushi [SSEP] [O] clean [S] great [A] place [SSEP] [O] sterile [S] great [A] place', '[A] sushi [O] not the best [S] bad [SSEP] [A] sushi [O] fresh [S] great [SSEP] [A] place [O] clean [S] great [SSEP] [A] place [O] sterile [S] great', '[A] sushi [S] bad [O] not the best [SSEP] [A] sushi [S] great [O] fresh [SSEP] [A] place [S] great [O] clean [SSEP] [A] place [S] great [O] sterile', '[S] great [O] not the best [A] sushi [SSEP] [S] great [O] fresh [A] sushi [SSEP] [S] great [O] clean [A] place [SSEP] [S] great [O] sterile [A] place']

task, data: aste rest14
target: [('null', 'people', 'great', 'trust')]
output: ['[A] people [O] never disappoints [S] great']
sent: ['I', 'trust', 'the', 'people', 'at', 'Go', 'Sushi', ',', 'it', 'never', 'disappoints', '.']
counter: {('null', 'people', 'great', 'never disappoints'): 5}
output quads: ['[A] people [O] never disappoints [S] great']
multi_path: ['[O] never disappoints [A] people [S] great', '[O] never disappoints [S] great [A] people', '[A] people [O] never disappoints [S] great', '[A] people [S] great [O] never disappoints', '[S] great [O] never disappoints [A] people']

task, data: aste rest14
target: [('null', 'asian salad', 'great', 'great'), ('null', 'spicy tuna roll', 'great', 'best')]
output: ['[A] asian salad [O] great [S] great', '[A] tuna roll [O] best [S] great']
sent: ['BEST', 'spicy', 'tuna', 'roll', ',', 'great', 'asian', 'salad', '.']
counter: {('null', 'tuna roll', 'great', 'best'): 5, ('null', 'asian salad', 'great', 'great'): 5}
output quads: ['[A] tuna roll [O] best [S] great', '[A] asian salad [O] great [S] great']
multi_path: ['[O] best [A] tuna roll [S] great [SSEP] [O] great [A] asian salad [S] great', '[O] best [S] great [A] tuna roll [SSEP] [O] great [S] great [A] asian salad', '[A] tuna roll [O] best [S] great [SSEP] [A] asian salad [O] great [S] great', '[A] tuna roll [S] great [O] best [SSEP] [A] asian salad [S] great [O] great', '[S] great [O] best [A] tuna roll [SSEP] [S] great [O] great [A] asian salad']

task, data: aste rest14
target: [('null', 'parking', 'great', 'convenient'), ('null', 'staff memebers', 'great', 'friendly')]
output: ['[A] boat [O] easy [S] great', '[A] parking [O] convenient [S] great', '[A] staff [O] friendly [S] great']
sent: ['From', 'the', 'beginning', ',', 'we', 'were', 'met', 'by', 'friendly', 'staff', 'memebers', ',', 'and', 'the', 'convenient', 'parking', 'at', 'Chelsea', 'Piers', 'made', 'it', 'easy', 'for', 'us', 'to', 'get', 'to', 'the', 'boat', '.']
counter: {('null', 'staff', 'great', 'friendly'): 5, ('null', 'parking', 'great', 'convenient'): 5, ('null', 'boat', 'great', 'easy'): 3, ('null', 'boat', 'ok', 'easy'): 2}
output quads: ['[A] staff [O] friendly [S] great', '[A] parking [O] convenient [S] great', '[A] boat [O] easy [S] great']
multi_path: ['[O] friendly [A] staff [S] great [SSEP] [O] convenient [A] parking [S] great [SSEP] [O] easy [A] boat [S] great', '[O] friendly [S] great [A] staff [SSEP] [O] convenient [S] great [A] parking [SSEP] [O] easy [S] great [A] boat', '[A] staff [O] friendly [S] great [SSEP] [A] parking [O] convenient [S] great [SSEP] [A] boat [O] easy [S] ok', '[A] staff [S] great [O] friendly [SSEP] [A] parking [S] great [O] convenient [SSEP] [A] boat [S] ok [O] easy', '[S] great [O] friendly [A] staff [SSEP] [S] great [O] convenient [A] parking [SSEP] [S] great [O] easy [A] boat']

task, data: aste rest14
target: [('null', 'desserts', 'great', 'incredible'), ('null', 'tart of the day', 'great', 'favorite')]
output: ['[A] desserts [O] incredible [S] great', '[A] tart [O] favorite [S] great']
sent: ['Desserts', 'are', 'almost', 'incredible', ':', 'my', 'personal', 'favorite', 'is', 'their', 'Tart', 'of', 'the', 'Day', '.']
counter: {('null', 'desserts', 'great', 'incredible'): 5, ('null', 'tart', 'great', 'favorite'): 5}
output quads: ['[A] desserts [O] incredible [S] great', '[A] tart [O] favorite [S] great']
multi_path: ['[O] incredible [A] desserts [S] great [SSEP] [O] favorite [A] tart [S] great', '[O] incredible [S] great [A] desserts [SSEP] [O] favorite [S] great [A] tart', '[A] desserts [O] incredible [S] great [SSEP] [A] tart [O] favorite [S] great', '[A] desserts [S] great [O] incredible [SSEP] [A] tart [S] great [O] favorite', '[S] great [O] incredible [A] desserts [SSEP] [S] great [O] favorite [A] tart']

task, data: aste rest14
target: [('null', 'array of sushi', 'great', 'freshest'), ('null', 'array of sushi', 'great', 'most delicious')]
output: ['[A] array of sushi [O] delicious [S] great', '[A] array of sushi [O] freshest [S] great']
sent: ['Harumi', 'Sushi', 'has', 'the', 'freshest', 'and', 'most', 'delicious', 'array', 'of', 'sushi', 'in', 'NYC', '.']
counter: {('null', 'array of sushi', 'great', 'freshest'): 5, ('null', 'array of sushi', 'great', 'delicious'): 5}
output quads: ['[A] array of sushi [O] freshest [S] great', '[A] array of sushi [O] delicious [S] great']
multi_path: ['[O] freshest [A] array of sushi [S] great [SSEP] [O] delicious [A] array of sushi [S] great', '[O] freshest [S] great [A] array of sushi [SSEP] [O] delicious [S] great [A] array of sushi', '[A] array of sushi [O] freshest [S] great [SSEP] [A] array of sushi [O] delicious [S] great', '[A] array of sushi [S] great [O] freshest [SSEP] [A] array of sushi [S] great [O] delicious', '[S] great [O] freshest [A] array of sushi [SSEP] [S] great [O] delicious [A] array of sushi']

task, data: aste rest14
target: [('null', 'dinners', 'bad', 'power'), ('null', 'lunch', 'bad', 'power')]
output: ['[A] dinners [O] inappropriate [S] bad', '[A] lunch [O] pretentious [S] bad']
sent: ['How', 'pretentious', 'and', 'inappropriate', 'for', 'MJ', 'Grill', 'to', 'claim', 'that', 'it', 'provides', 'power', 'lunch', 'and', 'dinners', '!']
counter: {('null', 'lunch', 'bad', 'pretentious'): 5, ('null', 'dinners', 'bad', 'inappropriate'): 5}
output quads: ['[A] lunch [O] pretentious [S] bad', '[A] dinners [O] inappropriate [S] bad']
multi_path: ['[O] pretentious [A] lunch [S] bad [SSEP] [O] inappropriate [A] dinners [S] bad', '[O] pretentious [S] bad [A] lunch [SSEP] [O] inappropriate [S] bad [A] dinners', '[A] lunch [O] pretentious [S] bad [SSEP] [A] dinners [O] inappropriate [S] bad', '[A] lunch [S] bad [O] pretentious [SSEP] [A] dinners [S] bad [O] inappropriate', '[S] bad [O] pretentious [A] lunch [SSEP] [S] bad [O] inappropriate [A] dinners']

task, data: aste rest14
target: [('null', 'steaks', 'bad', 'wasted')]
output: ['[A] steaks [O] crime [S] bad', '[A] steaks [O] wasted [S] bad']
sent: ['Two', 'wasted', 'steaks', '--', 'what', 'a', 'crime', '!']
counter: {('null', 'steaks', 'bad', 'wasted'): 5, ('null', 'steaks', 'bad', 'crime'): 4}
output quads: ['[A] steaks [O] wasted [S] bad', '[A] steaks [O] crime [S] bad']
multi_path: ['[O] wasted [A] steaks [S] bad [SSEP] [O] crime [A] steaks [S] bad', '[O] wasted [S] bad [A] steaks [SSEP] [O] crime [S] bad [A] steaks', '[A] steaks [O] wasted [S] bad [SSEP] [A] steaks [O] crime [S] bad', '[A] steaks [S] bad [O] wasted', '[S] bad [O] wasted [A] steaks [SSEP] [S] bad [O] crime [A] steaks']

task, data: aste rest14
target: [('null', 'staff', 'bad', 'friendly')]
output: ['[A] staff [O] friendly [S] great']
sent: ['The', 'staff', 'should', 'be', 'a', 'bit', 'more', 'friendly', '.']
counter: {('null', 'staff', 'great', 'friendly'): 5}
output quads: ['[A] staff [O] friendly [S] great']
multi_path: ['[O] friendly [A] staff [S] great', '[O] friendly [S] great [A] staff', '[A] staff [O] friendly [S] great', '[A] staff [S] great [O] friendly', '[S] great [O] friendly [A] staff']

task, data: aste rest14
target: [('null', 'food', 'great', 'tasty'), ('null', 'lobster risotto', 'great', 'recommend'), ('null', 'portion size', 'great', 'large'), ('null', 'portobello/gorgonzola/sausage appetizer', 'great', 'recommend'), ('null', 'staff', 'great', 'pleasant')]
output: ['[A] food [O] large [S] great', '[A] food [O] tasty [S] great', '[A] lobster risotto [O] recommend [S] great', '[A] portobello/gorgonzola/sausage appetizer [O] recommend [S] great', '[A] staff [O] pleasant [S] great']
sent: ['Had', 'a', 'great', 'experience', 'at', 'Trio', '...', 'staff', 'was', 'pleasant', ';', 'food', 'was', 'tasty', 'and', 'large', 'in', 'portion', 'size', '-', 'I', 'would', 'highly', 'recommend', 'the', 'portobello/gorgonzola/sausage', 'appetizer', 'and', 'the', 'lobster', 'risotto', '.']
counter: {('null', 'staff', 'great', 'pleasant'): 5, ('null', 'food', 'great', 'tasty'): 5, ('null', 'food', 'great', 'large'): 5, ('null', 'portobello/gorgonzola/sausage appetizer', 'great', 'recommend'): 5, ('null', 'lobster risotto', 'great', 'recommend'): 5}
output quads: ['[A] staff [O] pleasant [S] great', '[A] food [O] tasty [S] great', '[A] food [O] large [S] great', '[A] portobello/gorgonzola/sausage appetizer [O] recommend [S] great', '[A] lobster risotto [O] recommend [S] great']
multi_path: ['[O] pleasant [A] staff [S] great [SSEP] [O] tasty [A] food [S] great [SSEP] [O] large [A] food [S] great [SSEP] [O] recommend [A] portobello/gorgonzola/sausage appetizer [S] great [SSEP] [O] recommend [A] lobster risotto [S] great', '[O] pleasant [S] great [A] staff [SSEP] [O] tasty [S] great [A] food [SSEP] [O] large [S] great [A] food [SSEP] [O] recommend [S] great [A] portobello/gorgonzola/sausage appetizer [SSEP] [O] recommend [S] great [A] lobster risotto', '[A] staff [O] pleasant [S] great [SSEP] [A] food [O] tasty [S] great [SSEP] [A] food [O] large [S] great [SSEP] [A] portobello/gorgonzola/sausage appetizer [O] recommend [S] great [SSEP] [A] lobster risotto [O] recommend [S] great', '[A] staff [S] great [O] pleasant [SSEP] [A] food [S] great [O] tasty [SSEP] [A] food [S] great [O] large [SSEP] [A] portobello/gorgonzola/sausage appetizer [S] great [O] recommend [SSEP] [A] lobster risotto [S] great [O] recommend', '[S] great [O] pleasant [A] staff [SSEP] [S] great [O] tasty [A] food [SSEP] [S] great [O] large [A] food [SSEP] [S] great [O] recommend [A] portobello/gorgonzola/sausage appetizer [SSEP] [S] great [O] recommend [A] lobster risotto']

task, data: aste rest14
target: [('null', 'atmosphere', 'great', 'great'), ('null', 'beer', 'great', 'best'), ('null', 'beer', 'great', 'great'), ('null', 'food', 'great', 'great'), ('null', 'waitstaff', 'great', 'great')]
output: ['[A] atmosphere [O] great [S] great', '[A] beer [O] great [S] great', '[A] food [O] great [S] great', '[A] waitstaff [O] great [S] great']
sent: ['Great', 'food', ',', 'great', 'waitstaff', ',', 'great', 'atmosphere', ',', 'and', 'best', 'of', 'all', 'GREAT', 'beer', '!']
counter: {('null', 'food', 'great', 'great'): 5, ('null', 'waitstaff', 'great', 'great'): 5, ('null', 'atmosphere', 'great', 'great'): 5, ('null', 'beer', 'great', 'great'): 5}
output quads: ['[A] food [O] great [S] great', '[A] waitstaff [O] great [S] great', '[A] atmosphere [O] great [S] great', '[A] beer [O] great [S] great']
multi_path: ['[O] great [A] food [S] great [SSEP] [O] great [A] waitstaff [S] great [SSEP] [O] great [A] atmosphere [S] great [SSEP] [O] great [A] beer [S] great', '[O] great [S] great [A] food [SSEP] [O] great [S] great [A] waitstaff [SSEP] [O] great [S] great [A] atmosphere [SSEP] [O] great [S] great [A] beer', '[A] food [O] great [S] great [SSEP] [A] waitstaff [O] great [S] great [SSEP] [A] atmosphere [O] great [S] great [SSEP] [A] beer [O] great [S] great', '[A] food [S] great [O] great [SSEP] [A] waitstaff [S] great [O] great [SSEP] [A] atmosphere [S] great [O] great [SSEP] [A] beer [S] great [O] great', '[S] great [O] great [A] food [SSEP] [S] great [O] great [A] waitstaff [SSEP] [S] great [O] great [A] atmosphere [SSEP] [S] great [O] great [A] beer']

task, data: aste rest14
target: [('null', 'food', 'bad', 'utterly disappointed')]
output: ['[A] food [O] disappointed [S] bad']
sent: ['However', ',', 'being', 'foodies', ',', 'we', 'were', 'utterly', 'disappointed', 'with', 'the', 'food', '.']
counter: {('null', 'food', 'bad', 'disappointed'): 5}
output quads: ['[A] food [O] disappointed [S] bad']
multi_path: ['[O] disappointed [A] food [S] bad', '[O] disappointed [S] bad [A] food', '[A] food [O] disappointed [S] bad', '[A] food [S] bad [O] disappointed', '[S] bad [O] disappointed [A] food']

task, data: aste rest14
target: [('null', 'curried casseroles', 'bad', 'harsh')]
output: ['[A] curried casseroles [O] caveat [S] bad', '[A] curried casseroles [O] trifle harsh [S] bad']
sent: ['One', 'caveat', ':', 'Some', 'of', 'the', 'curried', 'casseroles', 'can', 'be', 'a', 'trifle', 'harsh', '.']
counter: {('null', 'curried casseroles', 'bad', 'caveat'): 5, ('null', 'curried casseroles', 'bad', 'trifle harsh'): 5}
output quads: ['[A] curried casseroles [O] caveat [S] bad', '[A] curried casseroles [O] trifle harsh [S] bad']
multi_path: ['[O] caveat [A] curried casseroles [S] bad [SSEP] [O] trifle harsh [A] curried casseroles [S] bad', '[O] caveat [S] bad [A] curried casseroles [SSEP] [O] trifle harsh [S] bad [A] curried casseroles', '[A] curried casseroles [O] caveat [S] bad [SSEP] [A] curried casseroles [O] trifle harsh [S] bad', '[A] curried casseroles [S] bad [O] caveat [SSEP] [A] curried casseroles [S] bad [O] trifle harsh', '[S] bad [O] caveat [A] curried casseroles [SSEP] [S] bad [O] trifle harsh [A] curried casseroles']

task, data: aste rest14
target: [('null', 'seafood', 'great', 'great')]
output: ['[A] cuisine [O] chosen [S] great', '[A] seafood [O] great [S] great', '[A] space [O] nice [S] great']
sent: ['A', 'nice', 'space', ',', 'as', 'long', 'as', 'it', 'does', "n't", 'get', 'too', 'crowded', 'and', 'a', 'singleminded', 'devotion', 'to', 'its', 'chosen', 'cuisine', 'make', 'Mare', 'a', 'great', 'choice', 'for', 'seafood', 'lovers', '.']
counter: {('null', 'space', 'great', 'nice'): 5, ('null', 'cuisine', 'great', 'chosen'): 3, ('null', 'seafood', 'great', 'great'): 5, ('null', 'cuisine', 'great', 'singleminded devotion'): 2}
output quads: ['[A] space [O] nice [S] great', '[A] cuisine [O] chosen [S] great', '[A] seafood [O] great [S] great']
multi_path: ['[O] nice [A] space [S] great [SSEP] [O] chosen [A] cuisine [S] great [SSEP] [O] great [A] seafood [S] great', '[O] nice [S] great [A] space [SSEP] [O] singleminded devotion [S] great [A] cuisine [SSEP] [O] great [S] great [A] seafood', '[A] space [O] nice [S] great [SSEP] [A] cuisine [O] chosen [S] great [SSEP] [A] seafood [O] great [S] great', '[A] space [S] great [O] nice [SSEP] [A] cuisine [S] great [O] chosen [SSEP] [A] seafood [S] great [O] great', '[S] great [O] nice [A] space [SSEP] [S] great [O] singleminded devotion [A] cuisine [SSEP] [S] great [O] great [A] seafood']

task, data: aste rest14
target: [('null', 'burgers', 'great', 'classic successes'), ('null', 'lemon-dressed cobb', 'great', 'classic successes'), ('null', 'salads', 'great', 'classic successes'), ('null', 'sandwiches', 'great', 'classic successes')]
output: ['[A] burgers [O] successes [S] great', '[A] lemon-dressed cobb [O] successes [S] great', '[A] salads [O] successes [S] great', '[A] sandwiches [O] successes [S] great']
sent: ['Sandwiches', ',', 'burgers', 'and', 'salads', ',', 'like', 'the', 'lemon-dressed', 'cobb', ',', 'are', 'classic', 'successes', '.']
counter: {('null', 'sandwiches', 'great', 'successes'): 5, ('null', 'burgers', 'great', 'successes'): 5, ('null', 'salads', 'great', 'successes'): 5, ('null', 'lemon-dressed cobb', 'great', 'successes'): 5}
output quads: ['[A] sandwiches [O] successes [S] great', '[A] burgers [O] successes [S] great', '[A] salads [O] successes [S] great', '[A] lemon-dressed cobb [O] successes [S] great']
multi_path: ['[O] successes [A] sandwiches [S] great [SSEP] [O] successes [A] burgers [S] great [SSEP] [O] successes [A] salads [S] great [SSEP] [O] successes [A] lemon-dressed cobb [S] great', '[O] successes [S] great [A] sandwiches [SSEP] [O] successes [S] great [A] burgers [SSEP] [O] successes [S] great [A] salads [SSEP] [O] successes [S] great [A] lemon-dressed cobb', '[A] sandwiches [O] successes [S] great [SSEP] [A] burgers [O] successes [S] great [SSEP] [A] salads [O] successes [S] great [SSEP] [A] lemon-dressed cobb [O] successes [S] great', '[A] sandwiches [S] great [O] successes [SSEP] [A] burgers [S] great [O] successes [SSEP] [A] salads [S] great [O] successes [SSEP] [A] lemon-dressed cobb [S] great [O] successes', '[S] great [O] successes [A] sandwiches [SSEP] [S] great [O] successes [A] burgers [SSEP] [S] great [O] successes [A] salads [SSEP] [S] great [O] successes [A] lemon-dressed cobb']

task, data: aste rest14
target: [('null', 'atmosphere', 'great', 'artsy'), ('null', 'atmosphere', 'great', 'sexy'), ('null', 'atmosphere', 'great', 'warm')]
output: ['[A] atmosphere [O] artsy [S] great', '[A] atmosphere [O] comfortable [S] great', '[A] atmosphere [O] sexy [S] great', '[A] atmosphere [O] warm [S] great']
sent: ['The', 'atmosphere', 'is', 'warm', ',', 'comfortable', ',', 'artsy', 'and', 'sexy', '.']
counter: {('null', 'atmosphere', 'great', 'warm'): 5, ('null', 'atmosphere', 'great', 'comfortable'): 5, ('null', 'atmosphere', 'great', 'artsy'): 5, ('null', 'atmosphere', 'great', 'sexy'): 5}
output quads: ['[A] atmosphere [O] warm [S] great', '[A] atmosphere [O] comfortable [S] great', '[A] atmosphere [O] artsy [S] great', '[A] atmosphere [O] sexy [S] great']
multi_path: ['[O] warm [A] atmosphere [S] great [SSEP] [O] comfortable [A] atmosphere [S] great [SSEP] [O] artsy [A] atmosphere [S] great [SSEP] [O] sexy [A] atmosphere [S] great', '[O] warm [S] great [A] atmosphere [SSEP] [O] comfortable [S] great [A] atmosphere [SSEP] [O] artsy [S] great [A] atmosphere [SSEP] [O] sexy [S] great [A] atmosphere', '[A] atmosphere [O] warm [S] great [SSEP] [A] atmosphere [O] comfortable [S] great [SSEP] [A] atmosphere [O] artsy [S] great [SSEP] [A] atmosphere [O] sexy [S] great', '[A] atmosphere [S] great [O] warm [SSEP] [A] atmosphere [S] great [O] comfortable [SSEP] [A] atmosphere [S] great [O] artsy [SSEP] [A] atmosphere [S] great [O] sexy', '[S] great [O] warm [A] atmosphere [SSEP] [S] great [O] comfortable [A] atmosphere [SSEP] [S] great [O] artsy [A] atmosphere [SSEP] [S] great [O] sexy [A] atmosphere']

task, data: aste rest14
target: [('null', 'dessert', 'bad', 'overpriced'), ('null', 'taste', 'bad', 'short')]
output: ['[A] dessert [O] overpriced [S] bad', '[A] dessert [O] skip [S] bad', '[A] taste [O] short [S] bad']
sent: ['Only', 'suggestion', 'is', 'that', 'you', 'skip', 'the', 'dessert', ',', 'it', 'was', 'overpriced', 'and', 'fell', 'short', 'on', 'taste', '.']
counter: {('null', 'dessert', 'bad', 'skip'): 5, ('null', 'dessert', 'bad', 'overpriced'): 5, ('null', 'taste', 'bad', 'short'): 5}
output quads: ['[A] dessert [O] skip [S] bad', '[A] dessert [O] overpriced [S] bad', '[A] taste [O] short [S] bad']
multi_path: ['[O] skip [A] dessert [S] bad [SSEP] [O] overpriced [A] dessert [S] bad [SSEP] [O] short [A] taste [S] bad', '[O] skip [S] bad [A] dessert [SSEP] [O] overpriced [S] bad [A] dessert [SSEP] [O] short [S] bad [A] taste', '[A] dessert [O] skip [S] bad [SSEP] [A] dessert [O] overpriced [S] bad [SSEP] [A] taste [O] short [S] bad', '[A] dessert [S] bad [O] skip [SSEP] [A] dessert [S] bad [O] overpriced [SSEP] [A] taste [S] bad [O] short', '[S] bad [O] skip [A] dessert [SSEP] [S] bad [O] overpriced [A] dessert [SSEP] [S] bad [O] short [A] taste']

task, data: aste rest14
target: [('null', 'food', 'great', 'decent'), ('null', 'food', 'great', 'not great')]
output: ['[A] food [O] decent [S] ok', '[A] food [O] not great [S] ok']
sent: ['Food', 'was', 'decent', ',', 'but', 'not', 'great', '.']
counter: {('null', 'food', 'ok', 'decent'): 5, ('null', 'food', 'ok', 'not great'): 5}
output quads: ['[A] food [O] decent [S] ok', '[A] food [O] not great [S] ok']
multi_path: ['[O] decent [A] food [S] ok [SSEP] [O] not great [A] food [S] ok', '[O] decent [S] ok [A] food [SSEP] [O] not great [S] ok [A] food', '[A] food [O] decent [S] ok [SSEP] [A] food [O] not great [S] ok', '[A] food [S] ok [O] decent [SSEP] [A] food [S] ok [O] not great', '[S] ok [O] decent [A] food [SSEP] [S] ok [O] not great [A] food']

task, data: aste rest14
target: [('null', 'atmosphere', 'great', 'nice')]
output: ['[A] atmosphere [O] nice [S] great', '[A] atmosphere [O] welcome [S] great']
sent: ['the', 'atmosphere', 'is', 'very', 'nice', ',', 'and', 'a', 'welcome', 'escape', 'from', 'the', 'rest', 'of', 'the', 'SI', 'mall', '.']
counter: {('null', 'atmosphere', 'great', 'nice'): 5, ('null', 'atmosphere', 'great', 'welcome'): 5}
output quads: ['[A] atmosphere [O] nice [S] great', '[A] atmosphere [O] welcome [S] great']
multi_path: ['[O] nice [A] atmosphere [S] great [SSEP] [O] welcome [A] atmosphere [S] great', '[O] nice [S] great [A] atmosphere [SSEP] [O] welcome [S] great [A] atmosphere', '[A] atmosphere [O] nice [S] great [SSEP] [A] atmosphere [O] welcome [S] great', '[A] atmosphere [S] great [O] nice [SSEP] [A] atmosphere [S] great [O] welcome', '[S] great [O] nice [A] atmosphere [SSEP] [S] great [O] welcome [A] atmosphere']

task, data: aste rest14
target: [('null', 'food', 'great', 'more expensive then typical')]
output: ['[A] food [O] expensive [S] ok']
sent: ['Yes', ',', 'they', "'re", 'a', 'bit', 'more', 'expensive', 'then', 'typical', ',', 'but', 'then', 'again', ',', 'so', 'is', 'their', 'food', '.']
counter: {('null', 'food', 'ok', 'expensive'): 5}
output quads: ['[A] food [O] expensive [S] ok']
multi_path: ['[O] expensive [A] food [S] ok', '[O] expensive [S] ok [A] food', '[A] food [O] expensive [S] ok', '[A] food [S] ok [O] expensive', '[S] ok [O] expensive [A] food']

task, data: aste rest14
target: [('null', 'burgers', 'great', 'fresh'), ('null', 'burgers', 'great', 'tasty'), ('null', 'mango margareta', 'great', 'well worth'), ('null', 'salads', 'great', 'fresh'), ('null', 'salads', 'great', 'tasty'), ('null', 'wraps', 'great', 'fresh'), ('null', 'wraps', 'great', 'tasty')]
output: ['[A] burgers [O] fresh [S] great', '[A] burgers [O] tasty [S] great', '[A] mango margareta [O] well worth [S] great', '[A] salads [O] fresh [S] great', '[A] wraps [O] fresh [S] great', '[A] wraps [O] tasty [S] great']
sent: ['I', 'can', 'say', 'that', 'the', 'wraps', ',', 'burgers', 'and', 'salads', 'were', 'all', 'fresh', ',', 'tasty', 'and', 'the', 'mango', 'margareta', 'at', '$', '9', 'was', 'WELL', 'WORTH', 'the', 'money', '.']
counter: {('null', 'wraps', 'great', 'fresh'): 5, ('null', 'burgers', 'great', 'fresh'): 5, ('null', 'salads', 'great', 'fresh'): 5, ('null', 'wraps', 'great', 'tasty'): 5, ('null', 'burgers', 'great', 'tasty'): 5, ('null', 'mango margareta', 'great', 'well worth'): 5, ('null', 'salads', 'great', 'tasty'): 2}
output quads: ['[A] wraps [O] fresh [S] great', '[A] burgers [O] fresh [S] great', '[A] salads [O] fresh [S] great', '[A] wraps [O] tasty [S] great', '[A] burgers [O] tasty [S] great', '[A] mango margareta [O] well worth [S] great']
multi_path: ['[O] fresh [A] wraps [S] great [SSEP] [O] fresh [A] burgers [S] great [SSEP] [O] fresh [A] salads [S] great [SSEP] [O] tasty [A] wraps [S] great [SSEP] [O] tasty [A] burgers [S] great [SSEP] [O] well worth [A] mango margareta [S] great', '[O] fresh [S] great [A] wraps [SSEP] [O] fresh [S] great [A] burgers [SSEP] [O] fresh [S] great [A] salads [SSEP] [O] tasty [S] great [A] wraps [SSEP] [O] tasty [S] great [A] burgers [SSEP] [O] well worth [S] great [A] mango margareta', '[A] wraps [O] fresh [S] great [SSEP] [A] burgers [O] fresh [S] great [SSEP] [A] salads [O] fresh [S] great [SSEP] [A] wraps [O] tasty [S] great [SSEP] [A] burgers [O] tasty [S] great [SSEP] [A] salads [O] tasty [S] great [SSEP] [A] mango margareta [O] well worth [S] great', '[A] wraps [S] great [O] fresh [SSEP] [A] burgers [S] great [O] fresh [SSEP] [A] salads [S] great [O] fresh [SSEP] [A] wraps [S] great [O] tasty [SSEP] [A] burgers [S] great [O] tasty [SSEP] [A] salads [S] great [O] tasty [SSEP] [A] mango margareta [S] great [O] well worth', '[S] great [O] fresh [A] wraps [SSEP] [S] great [O] fresh [A] burgers [SSEP] [S] great [O] fresh [A] salads [SSEP] [S] great [O] tasty [A] wraps [SSEP] [S] great [O] tasty [A] burgers [SSEP] [S] great [O] well worth [A] mango margareta']

task, data: aste rest14
target: [('null', 'waiter', 'great', 'friendly')]
output: ['[A] staff [O] shame [S] bad', '[A] staff [O] supportive [S] great', '[A] waiter [O] friendly [S] great']
sent: ['Our', 'waiter', 'was', 'friendly', 'and', 'it', 'is', 'a', 'shame', 'that', 'he', 'didnt', 'have', 'a', 'supportive', 'staff', 'to', 'work', 'with', '.']
counter: {('null', 'waiter', 'great', 'friendly'): 5, ('null', 'staff', 'bad', 'shame'): 5, ('null', 'staff', 'great', 'supportive'): 5}
output quads: ['[A] waiter [O] friendly [S] great', '[A] staff [O] shame [S] bad', '[A] staff [O] supportive [S] great']
multi_path: ['[O] friendly [A] waiter [S] great [SSEP] [O] shame [A] staff [S] bad [SSEP] [O] supportive [A] staff [S] great', '[O] friendly [S] great [A] waiter [SSEP] [O] shame [S] bad [A] staff [SSEP] [O] supportive [S] great [A] staff', '[A] waiter [O] friendly [S] great [SSEP] [A] staff [O] shame [S] bad [SSEP] [A] staff [O] supportive [S] great', '[A] waiter [S] great [O] friendly [SSEP] [A] staff [S] bad [O] shame [SSEP] [A] staff [S] great [O] supportive', '[S] great [O] friendly [A] waiter [SSEP] [S] bad [O] shame [A] staff [SSEP] [S] great [O] supportive [A] staff']

task, data: aste rest14
target: [('null', 'food', 'great', 'good'), ('null', 'vegan options', 'great', 'many')]
output: ['[A] food [O] good [S] great', '[A] vegan options [O] pleasantly surprised [S] great']
sent: ['The', 'food', 'was', 'very', 'good', 'and', 'I', 'was', 'pleasantly', 'surprised', 'to', 'see', 'so', 'many', 'vegan', 'options', '.']
counter: {('null', 'food', 'great', 'good'): 5, ('null', 'vegan options', 'great', 'pleasantly surprised'): 5}
output quads: ['[A] food [O] good [S] great', '[A] vegan options [O] pleasantly surprised [S] great']
multi_path: ['[O] good [A] food [S] great [SSEP] [O] pleasantly surprised [A] vegan options [S] great', '[O] good [S] great [A] food [SSEP] [O] pleasantly surprised [S] great [A] vegan options', '[A] food [O] good [S] great [SSEP] [A] vegan options [O] pleasantly surprised [S] great', '[A] food [S] great [O] good [SSEP] [A] vegan options [S] great [O] pleasantly surprised', '[S] great [O] good [A] food [SSEP] [S] great [O] pleasantly surprised [A] vegan options']

task, data: aste rest14
target: [('null', 'food', 'great', 'right on target'), ('null', 'service', 'great', 'right on target')]
output: ['[A] food [O] right [S] great', '[A] service [O] right [S] great']
sent: ['Even', 'when', 'the', 'chef', 'is', 'not', 'in', 'the', 'house', ',', 'the', 'food', 'and', 'service', 'are', 'right', 'on', 'target', '.']
counter: {('null', 'food', 'great', 'right'): 5, ('null', 'service', 'great', 'right'): 5}
output quads: ['[A] food [O] right [S] great', '[A] service [O] right [S] great']
multi_path: ['[O] right [A] food [S] great [SSEP] [O] right [A] service [S] great', '[O] right [S] great [A] food [SSEP] [O] right [S] great [A] service', '[A] food [O] right [S] great [SSEP] [A] service [O] right [S] great', '[A] food [S] great [O] right [SSEP] [A] service [S] great [O] right', '[S] great [O] right [A] food [SSEP] [S] great [O] right [A] service']

task, data: aste rest14
target: [('null', 'portions', 'bad', 'small')]
output: ['[A] portions [O] crazy [S] bad', '[A] portions [O] small [S] bad']
sent: ['I', 'was', 'starving', 'and', 'the', 'small', 'portions', 'were', 'driving', 'me', 'crazy', '!']
counter: {('null', 'portions', 'bad', 'small'): 5, ('null', 'portions', 'bad', 'crazy'): 5}
output quads: ['[A] portions [O] small [S] bad', '[A] portions [O] crazy [S] bad']
multi_path: ['[O] small [A] portions [S] bad [SSEP] [O] crazy [A] portions [S] bad', '[O] small [S] bad [A] portions [SSEP] [O] crazy [S] bad [A] portions', '[A] portions [O] small [S] bad [SSEP] [A] portions [O] crazy [S] bad', '[A] portions [S] bad [O] small [SSEP] [A] portions [S] bad [O] crazy', '[S] bad [O] small [A] portions [SSEP] [S] bad [O] crazy [A] portions']

task, data: aste rest14
target: [('null', 'service', 'great', 'great'), ('null', 'soup', 'great', 'great'), ('null', 'soup', 'great', 'hot')]
output: ['[A] service [O] great [S] great', '[A] soup [O] hot [S] great', '[A] soup [O] nice [S] great']
sent: ['The', 'service', 'is', 'great', ',', 'my', 'soup', 'always', 'arrives', 'nice', 'and', 'hot', '.']
counter: {('null', 'service', 'great', 'great'): 5, ('null', 'soup', 'great', 'nice'): 5, ('null', 'soup', 'great', 'hot'): 5}
output quads: ['[A] service [O] great [S] great', '[A] soup [O] nice [S] great', '[A] soup [O] hot [S] great']
multi_path: ['[O] great [A] service [S] great [SSEP] [O] nice [A] soup [S] great [SSEP] [O] hot [A] soup [S] great', '[O] great [S] great [A] service [SSEP] [O] nice [S] great [A] soup [SSEP] [O] hot [S] great [A] soup', '[A] service [O] great [S] great [SSEP] [A] soup [O] nice [S] great [SSEP] [A] soup [O] hot [S] great', '[A] service [S] great [O] great [SSEP] [A] soup [S] great [O] nice [SSEP] [A] soup [S] great [O] hot', '[S] great [O] great [A] service [SSEP] [S] great [O] nice [A] soup [SSEP] [S] great [O] hot [A] soup']

task, data: aste rest14
target: [('null', 'apple tart', 'great', 'thin'), ('null', 'creme brulee', 'great', 'silken'), ('null', 'desserts', 'great', 'good')]
output: ['[A] desserts [O] good [S] great', '[A] paper -- thin apple tart [O] good [S] great', '[A] silken creme brulee [O] good [S] great']
sent: ['Montparnasse', "'s", 'desserts', '--', 'especially', 'the', 'silken', 'creme', 'brulee', 'and', 'paper', '--', 'thin', 'apple', 'tart', '--', 'are', 'good', 'enough', 'on', 'their', 'own', 'to', 'make', 'the', 'restaurant', 'worth', 'the', 'trip', '.']
counter: {('null', 'desserts', 'great', 'good'): 5, ('null', 'silken creme brulee', 'great', 'good'): 5, ('null', 'paper -- thin apple tart', 'great', 'good'): 5}
output quads: ['[A] desserts [O] good [S] great', '[A] silken creme brulee [O] good [S] great', '[A] paper -- thin apple tart [O] good [S] great']
multi_path: ['[O] good [A] desserts [S] great [SSEP] [O] good [A] silken creme brulee [S] great [SSEP] [O] good [A] paper -- thin apple tart [S] great', '[O] good [S] great [A] desserts [SSEP] [O] good [S] great [A] silken creme brulee [SSEP] [O] good [S] great [A] paper -- thin apple tart', '[A] desserts [O] good [S] great [SSEP] [A] silken creme brulee [O] good [S] great [SSEP] [A] paper -- thin apple tart [O] good [S] great', '[A] desserts [S] great [O] good [SSEP] [A] silken creme brulee [S] great [O] good [SSEP] [A] paper -- thin apple tart [S] great [O] good', '[S] great [O] good [A] desserts [SSEP] [S] great [O] good [A] silken creme brulee [SSEP] [S] great [O] good [A] paper -- thin apple tart']

task, data: aste rest14
target: [('null', 'beef', 'great', 'try'), ('null', 'ribs', 'great', 'try')]
output: ['[A] beef [O] sizzling [S] great', '[A] beef [O] try [S] great', '[A] coconut rice [O] couple [S] great', '[A] ribs [O] try [S] great']
sent: ['Try', 'the', 'ribs', ',', 'sizzling', 'beef', 'and', 'couple', 'it', 'with', 'coconut', 'rice', '.']
counter: {('null', 'ribs', 'great', 'try'): 5, ('null', 'beef', 'great', 'try'): 5, ('null', 'beef', 'great', 'sizzling'): 3, ('null', 'coconut rice', 'great', 'couple'): 4, ('null', 'coconut rice', 'great', 'coconut rice'): 1}
output quads: ['[A] ribs [O] try [S] great', '[A] beef [O] try [S] great', '[A] beef [O] sizzling [S] great', '[A] coconut rice [O] couple [S] great']
multi_path: ['[O] try [A] ribs [S] great [SSEP] [O] try [A] beef [S] great [SSEP] [O] sizzling [A] beef [S] great [SSEP] [O] couple [A] coconut rice [S] great', '[O] try [S] great [A] ribs [SSEP] [O] try [S] great [A] beef [SSEP] [O] sizzling [S] great [A] beef [SSEP] [O] couple [S] great [A] coconut rice', '[A] ribs [O] try [S] great [SSEP] [A] beef [O] try [S] great [SSEP] [A] coconut rice [O] couple [S] great', '[A] ribs [S] great [O] try [SSEP] [A] beef [S] great [O] try [SSEP] [A] coconut rice [S] great [O] coconut rice', '[S] great [O] try [A] ribs [SSEP] [S] great [O] try [A] beef [SSEP] [S] great [O] sizzling [A] beef [SSEP] [S] great [O] couple [A] coconut rice']

task, data: aste rest14
target: [('null', 'food', 'great', 'artfully'), ('null', 'food', 'great', 'delicious'), ('null', 'food', 'great', 'wonderful')]
output: ['[A] food [O] artfully done [S] great', '[A] food [O] delicious [S] great', '[A] food [O] wonderful [S] great']
sent: ['The', 'food', 'is', 'wonderful', ',', 'artfully', 'done', 'and', 'simply', 'delicious', '.']
counter: {('null', 'food', 'great', 'wonderful'): 5, ('null', 'food', 'great', 'artfully done'): 5, ('null', 'food', 'great', 'delicious'): 5}
output quads: ['[A] food [O] wonderful [S] great', '[A] food [O] artfully done [S] great', '[A] food [O] delicious [S] great']
multi_path: ['[O] wonderful [A] food [S] great [SSEP] [O] artfully done [A] food [S] great [SSEP] [O] delicious [A] food [S] great', '[O] wonderful [S] great [A] food [SSEP] [O] artfully done [S] great [A] food [SSEP] [O] delicious [S] great [A] food', '[A] food [O] wonderful [S] great [SSEP] [A] food [O] artfully done [S] great [SSEP] [A] food [O] delicious [S] great', '[A] food [S] great [O] wonderful [SSEP] [A] food [S] great [O] artfully done [SSEP] [A] food [S] great [O] delicious', '[S] great [O] wonderful [A] food [SSEP] [S] great [O] artfully done [A] food [SSEP] [S] great [O] delicious [A] food']

task, data: aste rest14
target: [('null', 'appetizers', 'ok', 'perfect'), ('null', 'atmosphere', 'great', 'beautiful'), ('null', 'drinks', 'ok', 'perfect')]
output: ['[A] appetizers [O] perfect [S] great', '[A] atmosphere [O] beautiful [S] great', '[A] drinks [O] perfect [S] great']
sent: ['A', 'beautiful', 'atmosphere', ',', 'perfect', 'for', 'drinks', 'and/or', 'appetizers', '.']
counter: {('null', 'atmosphere', 'great', 'beautiful'): 5, ('null', 'drinks', 'great', 'perfect'): 5, ('null', 'appetizers', 'great', 'perfect'): 5}
output quads: ['[A] atmosphere [O] beautiful [S] great', '[A] drinks [O] perfect [S] great', '[A] appetizers [O] perfect [S] great']
multi_path: ['[O] beautiful [A] atmosphere [S] great [SSEP] [O] perfect [A] drinks [S] great [SSEP] [O] perfect [A] appetizers [S] great', '[O] beautiful [S] great [A] atmosphere [SSEP] [O] perfect [S] great [A] drinks [SSEP] [O] perfect [S] great [A] appetizers', '[A] atmosphere [O] beautiful [S] great [SSEP] [A] drinks [O] perfect [S] great [SSEP] [A] appetizers [O] perfect [S] great', '[A] atmosphere [S] great [O] beautiful [SSEP] [A] drinks [S] great [O] perfect [SSEP] [A] appetizers [S] great [O] perfect', '[S] great [O] beautiful [A] atmosphere [SSEP] [S] great [O] perfect [A] drinks [SSEP] [S] great [O] perfect [A] appetizers']

task, data: aste rest14
target: [('null', 'beer list', 'great', 'extensive'), ('null', 'food', 'great', 'better than average'), ('null', 'service', 'great', 'comforting')]
output: ['[A] beer list [O] dynamic [S] great', '[A] beer list [O] extensive [S] great', '[A] food [O] better [S] great', '[A] service [O] comforting [S] great']
sent: ['What', 'a', 'difference', ',', 'the', 'service', 'was', 'very', 'comforting', 'and', 'the', 'food', 'was', 'better', 'than', 'average', ',', 'but', 'what', 'really', 'standed', 'out', 'was', 'such', 'a', 'dynamic', 'and', 'extensive', 'beer', 'list', '.']
counter: {('null', 'service', 'great', 'comforting'): 5, ('null', 'food', 'great', 'better'): 4, ('null', 'beer list', 'great', 'dynamic'): 5, ('null', 'beer list', 'great', 'extensive'): 5, ('null', 'food', 'great', 'better than average'): 1}
output quads: ['[A] service [O] comforting [S] great', '[A] food [O] better [S] great', '[A] beer list [O] dynamic [S] great', '[A] beer list [O] extensive [S] great']
multi_path: ['[O] comforting [A] service [S] great [SSEP] [O] better [A] food [S] great [SSEP] [O] dynamic [A] beer list [S] great [SSEP] [O] extensive [A] beer list [S] great', '[O] comforting [S] great [A] service [SSEP] [O] better [S] great [A] food [SSEP] [O] dynamic [S] great [A] beer list [SSEP] [O] extensive [S] great [A] beer list', '[A] service [O] comforting [S] great [SSEP] [A] food [O] better than average [S] great [SSEP] [A] beer list [O] dynamic [S] great [SSEP] [A] beer list [O] extensive [S] great', '[A] service [S] great [O] comforting [SSEP] [A] food [S] great [O] better [SSEP] [A] beer list [S] great [O] dynamic [SSEP] [A] beer list [S] great [O] extensive', '[S] great [O] comforting [A] service [SSEP] [S] great [O] better [A] food [SSEP] [S] great [O] dynamic [A] beer list [SSEP] [S] great [O] extensive [A] beer list']

task, data: aste rest14
target: [('null', 'music', 'bad', 'too heavy')]
output: ['[A] music [O] heavy [S] bad']
sent: ['The', 'music', 'which', 'is', 'sometimes', 'a', 'little', 'too', 'heavy', 'for', 'my', 'taste', '.']
counter: {('null', 'music', 'bad', 'heavy'): 5}
output quads: ['[A] music [O] heavy [S] bad']
multi_path: ['[O] heavy [A] music [S] bad', '[O] heavy [S] bad [A] music', '[A] music [O] heavy [S] bad', '[A] music [S] bad [O] heavy', '[S] bad [O] heavy [A] music']

task, data: aste rest14
target: [('null', 'bartenders', 'great', 'nice'), ('null', 'decor', 'great', 'comfy'), ('null', 'decor', 'great', 'laid-back'), ('null', 'managers', 'great', 'nice')]
output: ['[A] bartenders [O] nice [S] great', '[A] decor [O] comfy [S] great', '[A] decor [O] laid-back [S] great', '[A] decor [O] trendy [S] great', '[A] managers [O] nice [S] great']
sent: ['The', 'bartenders', 'and', 'the', 'managers', 'are', 'really', 'nice', 'and', 'the', 'decor', 'is', 'very', 'comfy', 'and', 'laid-back', ',', 'all', 'the', 'while', 'being', 'trendy', '.']
counter: {('null', 'bartenders', 'great', 'nice'): 5, ('null', 'managers', 'great', 'nice'): 5, ('null', 'decor', 'great', 'comfy'): 5, ('null', 'decor', 'great', 'laid-back'): 5, ('null', 'decor', 'great', 'trendy'): 5}
output quads: ['[A] bartenders [O] nice [S] great', '[A] managers [O] nice [S] great', '[A] decor [O] comfy [S] great', '[A] decor [O] laid-back [S] great', '[A] decor [O] trendy [S] great']
multi_path: ['[O] nice [A] bartenders [S] great [SSEP] [O] nice [A] managers [S] great [SSEP] [O] comfy [A] decor [S] great [SSEP] [O] laid-back [A] decor [S] great [SSEP] [O] trendy [A] decor [S] great', '[O] nice [S] great [A] bartenders [SSEP] [O] nice [S] great [A] managers [SSEP] [O] comfy [S] great [A] decor [SSEP] [O] laid-back [S] great [A] decor [SSEP] [O] trendy [S] great [A] decor', '[A] bartenders [O] nice [S] great [SSEP] [A] managers [O] nice [S] great [SSEP] [A] decor [O] comfy [S] great [SSEP] [A] decor [O] laid-back [S] great [SSEP] [A] decor [O] trendy [S] great', '[A] bartenders [S] great [O] nice [SSEP] [A] managers [S] great [O] nice [SSEP] [A] decor [S] great [O] comfy [SSEP] [A] decor [S] great [O] laid-back [SSEP] [A] decor [S] great [O] trendy', '[S] great [O] nice [A] bartenders [SSEP] [S] great [O] nice [A] managers [SSEP] [S] great [O] comfy [A] decor [SSEP] [S] great [O] laid-back [A] decor [SSEP] [S] great [O] trendy [A] decor']

task, data: aste rest14
target: [('null', 'hot and sour soup', 'great', 'try'), ('null', 'soup and sandwich meal', 'great', 'savory')]
output: ['[A] sandwich meal [O] savory [S] great', '[A] soup [O] hot and sour [S] great', '[A] soup [O] savory [S] great', '[A] soup and sandwich meal [O] savory [S] great']
sent: ['For', 'a', 'savory', 'take', 'on', 'the', 'soup', 'and', 'sandwich', 'meal', ',', 'try', 'the', 'hot', 'and', 'sour', 'soup', '.']
counter: {('null', 'soup and sandwich meal', 'great', 'savory'): 4, ('null', 'soup', 'great', 'savory'): 3, ('null', 'sandwich meal', 'great', 'savory'): 3, ('null', 'soup', 'great', 'hot and sour'): 3, ('null', 'hot and sour soup', 'great', 'savory'): 2}
output quads: ['[A] soup and sandwich meal [O] savory [S] great', '[A] soup [O] savory [S] great', '[A] sandwich meal [O] savory [S] great', '[A] soup [O] hot and sour [S] great']
multi_path: ['[O] savory [A] soup and sandwich meal [S] great [SSEP] [O] savory [A] soup [S] great [SSEP] [O] savory [A] sandwich meal [S] great [SSEP] [O] hot and sour [A] soup [S] great', '[O] savory [S] great [A] soup and sandwich meal [SSEP] [O] savory [S] great [A] hot and sour soup', '[A] soup and sandwich meal [O] savory [S] great [SSEP] [A] soup [O] savory [S] great [SSEP] [A] sandwich meal [O] savory [S] great [SSEP] [A] soup [O] hot and sour [S] great', '[A] soup [S] great [O] savory [SSEP] [A] sandwich meal [S] great [O] savory [SSEP] [A] soup [S] great [O] hot and sour', '[S] great [O] savory [A] soup and sandwich meal [SSEP] [S] great [O] savory [A] hot and sour soup']

task, data: aste rest14
target: [('null', 'service', 'bad', 'bad')]
output: ['[A] back talk [O] snotty [S] bad', '[A] service [O] bad [S] bad', '[A] smirks [O] obnoxious [S] bad']
sent: ['Finally', ',', 'I', 'got', 'sick', 'of', 'the', 'bad', 'service', ',', 'obnoxious', 'smirks', ',', 'and', 'snotty', 'back', 'talk', '.']
counter: {('null', 'service', 'bad', 'bad'): 5, ('null', 'smirks', 'bad', 'obnoxious'): 5, ('null', 'back talk', 'bad', 'snotty'): 5}
output quads: ['[A] service [O] bad [S] bad', '[A] smirks [O] obnoxious [S] bad', '[A] back talk [O] snotty [S] bad']
multi_path: ['[O] bad [A] service [S] bad [SSEP] [O] obnoxious [A] smirks [S] bad [SSEP] [O] snotty [A] back talk [S] bad', '[O] bad [S] bad [A] service [SSEP] [O] obnoxious [S] bad [A] smirks [SSEP] [O] snotty [S] bad [A] back talk', '[A] service [O] bad [S] bad [SSEP] [A] smirks [O] obnoxious [S] bad [SSEP] [A] back talk [O] snotty [S] bad', '[A] service [S] bad [O] bad [SSEP] [A] smirks [S] bad [O] obnoxious [SSEP] [A] back talk [S] bad [O] snotty', '[S] bad [O] bad [A] service [SSEP] [S] bad [O] obnoxious [A] smirks [SSEP] [S] bad [O] snotty [A] back talk']

task, data: aste rest14
target: [('null', 'soft shell crab sandwich with fries', 'great', 'like')]
output: ['[A] shell crab sandwich with fries [O] like [S] great', '[A] shell crab sandwich with fries [O] soft [S] great']
sent: ['i', 'especially', 'like', 'their', 'soft', 'shell', 'crab', 'sandwich', 'with', 'fries', '.']
counter: {('null', 'shell crab sandwich with fries', 'great', 'like'): 5, ('null', 'shell crab sandwich with fries', 'great', 'soft'): 4}
output quads: ['[A] shell crab sandwich with fries [O] like [S] great', '[A] shell crab sandwich with fries [O] soft [S] great']
multi_path: ['[O] like [A] shell crab sandwich with fries [S] great [SSEP] [O] soft [A] shell crab sandwich with fries [S] great', '[O] like [S] great [A] shell crab sandwich with fries [SSEP] [O] soft [S] great [A] shell crab sandwich with fries', '[A] shell crab sandwich with fries [O] like [S] great [SSEP] [A] shell crab sandwich with fries [O] soft [S] great', '[A] shell crab sandwich with fries [S] great [O] like', '[S] great [O] like [A] shell crab sandwich with fries [SSEP] [S] great [O] soft [A] shell crab sandwich with fries']

task, data: aste rest14
target: [('null', 'hong kong-style food', 'great', 'authentic')]
output: ['[A] food [O] authentic [S] great']
sent: ['if', 'you', "'re", 'looking', 'for', 'authentic', 'hong', 'kong-style', 'food', ',', 'look', 'no', 'further', '.']
counter: {('null', 'food', 'great', 'authentic'): 5}
output quads: ['[A] food [O] authentic [S] great']
multi_path: ['[O] authentic [A] food [S] great', '[O] authentic [S] great [A] food', '[A] food [O] authentic [S] great', '[A] food [S] great [O] authentic', '[S] great [O] authentic [A] food']

task, data: aste rest14
target: [('null', 'food', 'great', 'good'), ('null', 'rolls', 'great', 'excellent')]
output: ['[A] food [O] good [S] great', '[A] rolls [O] excellent [S] great', '[A] sushi/sashimi [O] not quite on the same level [S] bad']
sent: ['The', 'food', 'is', 'all-around', 'good', ',', 'with', 'the', 'rolls', 'usually', 'excellent', 'and', 'the', 'sushi/sashimi', 'not', 'quite', 'on', 'the', 'same', 'level', '.']
counter: {('null', 'food', 'great', 'good'): 5, ('null', 'rolls', 'great', 'excellent'): 5, ('null', 'sushi/sashimi', 'bad', 'not quite on the same level'): 5}
output quads: ['[A] food [O] good [S] great', '[A] rolls [O] excellent [S] great', '[A] sushi/sashimi [O] not quite on the same level [S] bad']
multi_path: ['[O] good [A] food [S] great [SSEP] [O] excellent [A] rolls [S] great [SSEP] [O] not quite on the same level [A] sushi/sashimi [S] bad', '[O] good [S] great [A] food [SSEP] [O] excellent [S] great [A] rolls [SSEP] [O] not quite on the same level [S] bad [A] sushi/sashimi', '[A] food [O] good [S] great [SSEP] [A] rolls [O] excellent [S] great [SSEP] [A] sushi/sashimi [O] not quite on the same level [S] bad', '[A] food [S] great [O] good [SSEP] [A] rolls [S] great [O] excellent [SSEP] [A] sushi/sashimi [S] bad [O] not quite on the same level', '[S] great [O] good [A] food [SSEP] [S] great [O] excellent [A] rolls [SSEP] [S] bad [O] not quite on the same level [A] sushi/sashimi']

task, data: aste rest14
target: [('null', 'bartender', 'bad', 'rude'), ('null', 'drinks', 'ok', 'waiting'), ('null', 'manager', 'bad', 'graceless'), ('null', 'waiting', 'bad', 'rude')]
output: ['[A] bartender [O] rude [S] bad', '[A] manager [O] graceless [S] bad']
sent: ['Well', ',', 'it', 'happened', 'because', 'of', 'a', 'graceless', 'manager', 'and', 'a', 'rude', 'bartender', 'who', 'had', 'us', 'waiting', '20', 'minutes', 'for', 'drinks', ',', 'and', 'then', 'tells', 'us', 'to', 'chill', 'out', '.']
counter: {('null', 'manager', 'bad', 'graceless'): 5, ('null', 'bartender', 'bad', 'rude'): 5}
output quads: ['[A] manager [O] graceless [S] bad', '[A] bartender [O] rude [S] bad']
multi_path: ['[O] graceless [A] manager [S] bad [SSEP] [O] rude [A] bartender [S] bad', '[O] graceless [S] bad [A] manager [SSEP] [O] rude [S] bad [A] bartender', '[A] manager [O] graceless [S] bad [SSEP] [A] bartender [O] rude [S] bad', '[A] manager [S] bad [O] graceless [SSEP] [A] bartender [S] bad [O] rude', '[S] bad [O] graceless [A] manager [SSEP] [S] bad [O] rude [A] bartender']

task, data: aste rest14
target: [('null', 'atmosphere', 'great', 'comfortable'), ('null', 'atmosphere', 'great', 'romantic'), ('null', 'service', 'great', 'great')]
output: ['[A] atmosphere [O] comfortable [S] great', '[A] atmosphere [O] romantic [S] great', '[A] service [O] great [S] great', '[A] table [O] easy [S] great']
sent: ['Not', 'only', 'is', 'the', 'service', 'great', ',', 'but', 'forming', 'conversation', 'around', 'a', 'table', 'is', 'so', 'easy', 'beacuse', 'the', 'atmosphere', 'can', 'be', 'both', 'romantic', 'and', 'comfortable', '.']
counter: {('null', 'service', 'great', 'great'): 5, ('null', 'table', 'great', 'easy'): 5, ('null', 'atmosphere', 'great', 'romantic'): 5, ('null', 'atmosphere', 'great', 'comfortable'): 5}
output quads: ['[A] service [O] great [S] great', '[A] table [O] easy [S] great', '[A] atmosphere [O] romantic [S] great', '[A] atmosphere [O] comfortable [S] great']
multi_path: ['[O] great [A] service [S] great [SSEP] [O] easy [A] table [S] great [SSEP] [O] romantic [A] atmosphere [S] great [SSEP] [O] comfortable [A] atmosphere [S] great', '[O] great [S] great [A] service [SSEP] [O] easy [S] great [A] table [SSEP] [O] romantic [S] great [A] atmosphere [SSEP] [O] comfortable [S] great [A] atmosphere', '[A] service [O] great [S] great [SSEP] [A] table [O] easy [S] great [SSEP] [A] atmosphere [O] romantic [S] great [SSEP] [A] atmosphere [O] comfortable [S] great', '[A] service [S] great [O] great [SSEP] [A] table [S] great [O] easy [SSEP] [A] atmosphere [S] great [O] romantic [SSEP] [A] atmosphere [S] great [O] comfortable', '[S] great [O] great [A] service [SSEP] [S] great [O] easy [A] table [SSEP] [S] great [O] romantic [A] atmosphere [SSEP] [S] great [O] comfortable [A] atmosphere']

task, data: aste rest14
target: [('null', 'dish', 'bad', 'edible'), ('null', 'green chillis', 'bad', 'not edible')]
output: ['[A] green chillis [O] blazing [S] bad', '[A] green chillis [O] not edible [S] bad']
sent: ['When', 'the', 'dish', 'arrived', 'it', 'was', 'blazing', 'with', 'green', 'chillis', ',', 'definitely', 'not', 'edible', 'by', 'a', 'human', '.']
counter: {('null', 'green chillis', 'bad', 'blazing'): 5, ('null', 'green chillis', 'bad', 'not edible'): 5}
output quads: ['[A] green chillis [O] blazing [S] bad', '[A] green chillis [O] not edible [S] bad']
multi_path: ['[O] blazing [A] green chillis [S] bad [SSEP] [O] not edible [A] green chillis [S] bad', '[O] blazing [S] bad [A] green chillis [SSEP] [O] not edible [S] bad [A] green chillis', '[A] green chillis [O] blazing [S] bad [SSEP] [A] green chillis [O] not edible [S] bad', '[A] green chillis [S] bad [O] blazing [SSEP] [A] green chillis [S] bad [O] not edible', '[S] bad [O] blazing [A] green chillis [SSEP] [S] bad [O] not edible [A] green chillis']

task, data: aste rest14
target: [('null', 'fresh juice concoctions', 'great', 'fresh')]
output: ['[A] juice concoctions [O] fresh [S] great']
sent: ['Be', 'sure', 'to', 'accompany', 'your', 'food', 'with', 'one', 'of', 'their', 'fresh', 'juice', 'concoctions', '.']
counter: {('null', 'juice concoctions', 'great', 'fresh'): 5}
output quads: ['[A] juice concoctions [O] fresh [S] great']
multi_path: ['[O] fresh [A] juice concoctions [S] great', '[O] fresh [S] great [A] juice concoctions', '[A] juice concoctions [O] fresh [S] great', '[A] juice concoctions [S] great [O] fresh', '[S] great [O] fresh [A] juice concoctions']

task, data: aste rest14
target: [('null', 'chicken with avocado', 'great', 'good'), ('null', 'tuna', 'great', 'good')]
output: ['[A] avocado [O] good [S] great', '[A] chicken [O] good [S] great', '[A] tuna [O] good [S] great']
sent: ['They', 'have', 'a', 'very', 'good', 'chicken', 'with', 'avocado', 'and', 'good', 'tuna', 'as', 'well', '.']
counter: {('null', 'chicken', 'great', 'good'): 5, ('null', 'avocado', 'great', 'good'): 5, ('null', 'tuna', 'great', 'good'): 5}
output quads: ['[A] chicken [O] good [S] great', '[A] avocado [O] good [S] great', '[A] tuna [O] good [S] great']
multi_path: ['[O] good [A] chicken [S] great [SSEP] [O] good [A] avocado [S] great [SSEP] [O] good [A] tuna [S] great', '[O] good [S] great [A] chicken [SSEP] [O] good [S] great [A] avocado [SSEP] [O] good [S] great [A] tuna', '[A] chicken [O] good [S] great [SSEP] [A] avocado [O] good [S] great [SSEP] [A] tuna [O] good [S] great', '[A] chicken [S] great [O] good [SSEP] [A] avocado [S] great [O] good [SSEP] [A] tuna [S] great [O] good', '[S] great [O] good [A] chicken [SSEP] [S] great [O] good [A] avocado [SSEP] [S] great [O] good [A] tuna']

task, data: aste rest14
target: [('null', 'meal', 'bad', 'terrible')]
output: ['[A] meal [O] terrible [S] bad', '[A] money [O] too much [S] bad']
sent: ['Way', 'too', 'much', 'money', 'for', 'such', 'a', 'terrible', 'meal', '.']
counter: {('null', 'money', 'bad', 'too much'): 5, ('null', 'meal', 'bad', 'terrible'): 5}
output quads: ['[A] money [O] too much [S] bad', '[A] meal [O] terrible [S] bad']
multi_path: ['[O] too much [A] money [S] bad [SSEP] [O] terrible [A] meal [S] bad', '[O] too much [S] bad [A] money [SSEP] [O] terrible [S] bad [A] meal', '[A] money [O] too much [S] bad [SSEP] [A] meal [O] terrible [S] bad', '[A] money [S] bad [O] too much [SSEP] [A] meal [S] bad [O] terrible', '[S] bad [O] too much [A] money [SSEP] [S] bad [O] terrible [A] meal']

task, data: aste rest14
target: [('null', 'disco pop duo', 'bad', 'awful'), ('null', 'food', 'bad', 'overpriced'), ('null', 'lighting', 'bad', 'unattractive')]
output: ['[A] disco pop duo [O] awful [S] bad', '[A] escargot [O] crawl off the plate [S] bad', '[A] food [O] overpriced [S] bad', '[A] lighting [O] unattractive [S] bad']
sent: ['The', 'unattractive', 'lighting', 'made', 'me', 'want', 'to', 'gag', ',', 'the', 'food', 'was', 'overpriced', ',', 'there', 'was', 'the', 'most', 'awful', 'disco', 'pop', 'duo', 'performing-and', 'my', 'escargot', 'looked', 'like', 'it', 'might', 'crawl', 'off', 'the', 'plate', '.']
counter: {('null', 'lighting', 'bad', 'unattractive'): 5, ('null', 'food', 'bad', 'overpriced'): 5, ('null', 'disco pop duo', 'bad', 'awful'): 5, ('null', 'escargot', 'bad', 'crawl off the plate'): 4}
output quads: ['[A] lighting [O] unattractive [S] bad', '[A] food [O] overpriced [S] bad', '[A] disco pop duo [O] awful [S] bad', '[A] escargot [O] crawl off the plate [S] bad']
multi_path: ['[O] unattractive [A] lighting [S] bad [SSEP] [O] overpriced [A] food [S] bad [SSEP] [O] awful [A] disco pop duo [S] bad [SSEP] [O] crawl off the plate [A] escargot [S] bad', '[O] unattractive [S] bad [A] lighting [SSEP] [O] overpriced [S] bad [A] food [SSEP] [O] awful [S] bad [A] disco pop duo [SSEP] [O] crawl off the plate [S] bad [A] escargot', '[A] lighting [O] unattractive [S] bad [SSEP] [A] food [O] overpriced [S] bad [SSEP] [A] disco pop duo [O] awful [S] bad [SSEP] [A] escargot [O] crawl off the plate [S] bad', '[A] lighting [S] bad [O] unattractive [SSEP] [A] food [S] bad [O] overpriced [SSEP] [A] disco pop duo [S] bad [O] awful [SSEP] [A] escargot [S] bad [O] crawl off the plate', '[S] bad [O] unattractive [A] lighting [SSEP] [S] bad [O] overpriced [A] food [SSEP] [S] bad [O] awful [A] disco pop duo']

task, data: aste rest14
target: [('null', 'food', 'great', 'great')]
output: ['[A] food [O] great [S] great', '[A] food [O] treat [S] great']
sent: ['The', 'food', 'here', 'was', 'great', ',', 'a', 'treat', 'from', 'beginning', 'to', 'end', '.']
counter: {('null', 'food', 'great', 'great'): 5, ('null', 'food', 'great', 'treat'): 5}
output quads: ['[A] food [O] great [S] great', '[A] food [O] treat [S] great']
multi_path: ['[O] great [A] food [S] great [SSEP] [O] treat [A] food [S] great', '[O] great [S] great [A] food [SSEP] [O] treat [S] great [A] food', '[A] food [O] great [S] great [SSEP] [A] food [O] treat [S] great', '[A] food [S] great [O] great [SSEP] [A] food [S] great [O] treat', '[S] great [O] great [A] food [SSEP] [S] great [O] treat [A] food']

task, data: aste rest14
target: [('null', 'host ( owner )', 'great', 'caring'), ('null', 'host ( owner )', 'great', 'personable'), ('null', 'servers', 'great', 'caring'), ('null', 'servers', 'great', 'personable')]
output: ['[A] host [O] caring [S] great', '[A] host [O] personable [S] great', '[A] servers [O] caring [S] great', '[A] servers [O] personable [S] great']
sent: ['The', 'host', '(', 'owner', ')', 'and', 'servers', 'are', 'personable', 'and', 'caring', '.']
counter: {('null', 'host', 'great', 'personable'): 5, ('null', 'servers', 'great', 'personable'): 5, ('null', 'host', 'great', 'caring'): 5, ('null', 'servers', 'great', 'caring'): 4}
output quads: ['[A] host [O] personable [S] great', '[A] servers [O] personable [S] great', '[A] host [O] caring [S] great', '[A] servers [O] caring [S] great']
multi_path: ['[O] personable [A] host [S] great [SSEP] [O] personable [A] servers [S] great [SSEP] [O] caring [A] host [S] great [SSEP] [O] caring [A] servers [S] great', '[O] personable [S] great [A] host [SSEP] [O] personable [S] great [A] servers [SSEP] [O] caring [S] great [A] host [SSEP] [O] caring [S] great [A] servers', '[A] host [O] personable [S] great [SSEP] [A] servers [O] personable [S] great [SSEP] [A] host [O] caring [S] great', '[A] host [S] great [O] personable [SSEP] [A] servers [S] great [O] personable [SSEP] [A] host [S] great [O] caring [SSEP] [A] servers [S] great [O] caring', '[S] great [O] personable [A] host [SSEP] [S] great [O] personable [A] servers [SSEP] [S] great [O] caring [A] host [SSEP] [S] great [O] caring [A] servers']

task, data: aste rest14
target: [('null', 'hostess', 'great', 'gracious'), ('null', 'hostess', 'great', 'kind')]
output: ['[A] hostess [O] gracious [S] great']
sent: ['It', "'s", 'just', 'everything', '...', 'the', 'food', ',', 'the', 'atmosphere', '...', 'the', 'incrediby', 'kind', 'and', 'gracious', 'hostess', '.']
counter: {('null', 'hostess', 'great', 'incrediby kind'): 2, ('null', 'hostess', 'great', 'gracious'): 4, ('null', 'food', 'great', 'incrediby kind'): 1, ('null', 'atmosphere', 'great', 'gracious'): 1, ('null', 'food', 'great', 'the'): 2, ('null', 'atmosphere', 'great', 'the'): 2, ('null', 'hostess', 'great', 'kind'): 2}
output quads: ['[A] hostess [O] gracious [S] great']
multi_path: ['[O] incrediby kind [A] hostess [S] great [SSEP] [O] gracious [A] hostess [S] great', '[O] incrediby kind [S] great [A] food [SSEP] [O] gracious [S] great [A] atmosphere', '[A] food [O] the [S] great [SSEP] [A] atmosphere [O] the [S] great [SSEP] [A] hostess [O] kind [S] great [SSEP] [A] hostess [O] gracious [S] great', '[A] food [S] great [O] the [SSEP] [A] atmosphere [S] great [O] the [SSEP] [A] hostess [S] great [O] kind [SSEP] [A] hostess [S] great [O] gracious', '[S] great [O] incrediby kind [A] hostess [SSEP] [S] great [O] gracious [A] hostess']

task, data: aste rest14
target: [('null', 'interior', 'great', 'charming'), ('null', 'service', 'great', 'attentive'), ('null', 'service', 'great', 'friendly')]
output: ['[A] interior [O] charming [S] great', '[A] interior [O] intimate [S] great', '[A] service [O] attentive [S] great', '[A] service [O] friendly [S] great']
sent: ['Intimate', 'but', 'charming', 'interior', 'with', 'extremely', 'friendly', 'and', 'attentive', 'service', '.']
counter: {('null', 'interior', 'great', 'intimate'): 5, ('null', 'interior', 'great', 'charming'): 5, ('null', 'service', 'great', 'friendly'): 5, ('null', 'service', 'great', 'attentive'): 5}
output quads: ['[A] interior [O] intimate [S] great', '[A] interior [O] charming [S] great', '[A] service [O] friendly [S] great', '[A] service [O] attentive [S] great']
multi_path: ['[O] intimate [A] interior [S] great [SSEP] [O] charming [A] interior [S] great [SSEP] [O] friendly [A] service [S] great [SSEP] [O] attentive [A] service [S] great', '[O] intimate [S] great [A] interior [SSEP] [O] charming [S] great [A] interior [SSEP] [O] friendly [S] great [A] service [SSEP] [O] attentive [S] great [A] service', '[A] interior [O] intimate [S] great [SSEP] [A] interior [O] charming [S] great [SSEP] [A] service [O] friendly [S] great [SSEP] [A] service [O] attentive [S] great', '[A] interior [S] great [O] intimate [SSEP] [A] interior [S] great [O] charming [SSEP] [A] service [S] great [O] friendly [SSEP] [A] service [S] great [O] attentive', '[S] great [O] intimate [A] interior [SSEP] [S] great [O] charming [A] interior [SSEP] [S] great [O] friendly [A] service [SSEP] [S] great [O] attentive [A] service']

task, data: aste rest14
target: [('null', 'port', 'great', 'quality'), ('null', 'portuguese cheese cart', 'great', 'perfect')]
output: ['[A] iberian ending [O] perfect [S] great', '[A] port [O] quality [S] great', '[A] portuguese cheese cart [O] skillfully chosen [S] great']
sent: ['The', 'skillfully', 'chosen', 'Portuguese', 'cheese', 'cart', 'paired', 'with', 'quality', 'port', 'provides', 'the', 'perfect', 'Iberian', 'ending', '.']
counter: {('null', 'portuguese cheese cart', 'great', 'skillfully chosen'): 5, ('null', 'port', 'great', 'quality'): 5, ('null', 'iberian ending', 'great', 'perfect'): 5}
output quads: ['[A] portuguese cheese cart [O] skillfully chosen [S] great', '[A] port [O] quality [S] great', '[A] iberian ending [O] perfect [S] great']
multi_path: ['[O] skillfully chosen [A] portuguese cheese cart [S] great [SSEP] [O] quality [A] port [S] great [SSEP] [O] perfect [A] iberian ending [S] great', '[O] skillfully chosen [S] great [A] portuguese cheese cart [SSEP] [O] quality [S] great [A] port [SSEP] [O] perfect [S] great [A] iberian ending', '[A] portuguese cheese cart [O] skillfully chosen [S] great [SSEP] [A] port [O] quality [S] great [SSEP] [A] iberian ending [O] perfect [S] great', '[A] portuguese cheese cart [S] great [O] skillfully chosen [SSEP] [A] port [S] great [O] quality [SSEP] [A] iberian ending [S] great [O] perfect', '[S] great [O] skillfully chosen [A] portuguese cheese cart [SSEP] [S] great [O] quality [A] port [SSEP] [S] great [O] perfect [A] iberian ending']

task, data: aste rest14
target: [('null', 'food', 'great', 'wonderful'), ('null', 'waitstaff', 'great', 'friendly'), ('null', 'waitstaff', 'great', 'solicitous')]
output: ['[A] food [O] wonderful [S] great', '[A] waitstaff [O] friendly [S] great', '[A] waitstaff [O] glad [S] great', '[A] waitstaff [O] solicitous [S] great']
sent: ['The', 'waitstaff', 'is', 'solicitous', 'and', 'friendly', 'and', 'always', 'seems', 'glad', 'to', 'see', 'us', ',', 'and', 'the', 'food', 'is', 'wonderful', ',', 'if', 'not', 'stunningly', 'creative', '.']
counter: {('null', 'waitstaff', 'great', 'solicitous'): 5, ('null', 'waitstaff', 'great', 'friendly'): 5, ('null', 'waitstaff', 'great', 'glad'): 5, ('null', 'food', 'great', 'wonderful'): 5}
output quads: ['[A] waitstaff [O] solicitous [S] great', '[A] waitstaff [O] friendly [S] great', '[A] waitstaff [O] glad [S] great', '[A] food [O] wonderful [S] great']
multi_path: ['[O] solicitous [A] waitstaff [S] great [SSEP] [O] friendly [A] waitstaff [S] great [SSEP] [O] glad [A] waitstaff [S] great [SSEP] [O] wonderful [A] food [S] great', '[O] solicitous [S] great [A] waitstaff [SSEP] [O] friendly [S] great [A] waitstaff [SSEP] [O] glad [S] great [A] waitstaff [SSEP] [O] wonderful [S] great [A] food', '[A] waitstaff [O] solicitous [S] great [SSEP] [A] waitstaff [O] friendly [S] great [SSEP] [A] waitstaff [O] glad [S] great [SSEP] [A] food [O] wonderful [S] great', '[A] waitstaff [S] great [O] solicitous [SSEP] [A] waitstaff [S] great [O] friendly [SSEP] [A] waitstaff [S] great [O] glad [SSEP] [A] food [S] great [O] wonderful', '[S] great [O] solicitous [A] waitstaff [SSEP] [S] great [O] friendly [A] waitstaff [SSEP] [S] great [O] glad [A] waitstaff [SSEP] [S] great [O] wonderful [A] food']

task, data: aste rest14
target: [('null', 'service', 'great', 'excellent'), ('null', 'wait', 'great', 'no')]
output: ['[A] price [O] lot [S] great', '[A] service [O] excellent [S] great', '[A] wait [O] no wait [S] great']
sent: ['Service', 'is', 'excellent', ',', 'no', 'wait', ',', 'and', 'you', 'get', 'a', 'lot', 'for', 'the', 'price', '.']
counter: {('null', 'service', 'great', 'excellent'): 5, ('null', 'wait', 'great', 'no wait'): 3, ('null', 'price', 'great', 'lot'): 5, ('null', 'wait', 'great', 'no'): 2}
output quads: ['[A] service [O] excellent [S] great', '[A] wait [O] no wait [S] great', '[A] price [O] lot [S] great']
multi_path: ['[O] excellent [A] service [S] great [SSEP] [O] no wait [A] wait [S] great [SSEP] [O] lot [A] price [S] great', '[O] excellent [S] great [A] service [SSEP] [O] no wait [S] great [A] wait [SSEP] [O] lot [S] great [A] price', '[A] service [O] excellent [S] great [SSEP] [A] wait [O] no [S] great [SSEP] [A] price [O] lot [S] great', '[A] service [S] great [O] excellent [SSEP] [A] wait [S] great [O] no [SSEP] [A] price [S] great [O] lot', '[S] great [O] excellent [A] service [SSEP] [S] great [O] no wait [A] wait [SSEP] [S] great [O] lot [A] price']

task, data: aste rest14
target: [('null', 'crust', 'bad', 'burnt'), ('null', 'crust', 'bad', 'dry')]
output: ['[A] crust [O] burnt [S] bad', '[A] crust [O] cold [S] bad', '[A] crust [O] dry [S] bad', '[A] crust [O] raw [S] bad']
sent: ['Then', 'they', 'somehow', 'made', 'a', 'dry', 'and', 'burnt', 'crust', ',', 'around', 'a', 'raw', 'and', 'cold', 'inside', '.']
counter: {('null', 'crust', 'bad', 'dry'): 5, ('null', 'crust', 'bad', 'burnt'): 5, ('null', 'crust', 'bad', 'raw'): 5, ('null', 'crust', 'bad', 'cold'): 5}
output quads: ['[A] crust [O] dry [S] bad', '[A] crust [O] burnt [S] bad', '[A] crust [O] raw [S] bad', '[A] crust [O] cold [S] bad']
multi_path: ['[O] dry [A] crust [S] bad [SSEP] [O] burnt [A] crust [S] bad [SSEP] [O] raw [A] crust [S] bad [SSEP] [O] cold [A] crust [S] bad', '[O] dry [S] bad [A] crust [SSEP] [O] burnt [S] bad [A] crust [SSEP] [O] raw [S] bad [A] crust [SSEP] [O] cold [S] bad [A] crust', '[A] crust [O] dry [S] bad [SSEP] [A] crust [O] burnt [S] bad [SSEP] [A] crust [O] raw [S] bad [SSEP] [A] crust [O] cold [S] bad', '[A] crust [S] bad [O] dry [SSEP] [A] crust [S] bad [O] burnt [SSEP] [A] crust [S] bad [O] raw [SSEP] [A] crust [S] bad [O] cold', '[S] bad [O] dry [A] crust [SSEP] [S] bad [O] burnt [A] crust [SSEP] [S] bad [O] raw [A] crust [SSEP] [S] bad [O] cold [A] crust']

task, data: aste rest14
target: [('null', 'cake', 'bad', 'average')]
output: ['[A] cake [O] average [S] great']
sent: ['Average', 'cake', 'thats', 'been', 'courted', 'by', 'a', 'LOT', 'of', 'hype', '.']
counter: {('null', 'cake', 'great', 'average'): 5}
output quads: ['[A] cake [O] average [S] great']
multi_path: ['[O] average [A] cake [S] great', '[O] average [S] great [A] cake', '[A] cake [O] average [S] great', '[A] cake [S] great [O] average', '[S] great [O] average [A] cake']

task, data: aste rest14
target: [('null', 'dinner', 'ok', 'wonderful')]
output: ['[A] bistro [O] wonderful [S] great']
sent: ['My', 'wife', 'and', 'I', 'recently', 'visited', 'the', 'bistro', 'for', 'dinner', 'and', 'had', 'a', 'wonderful', 'experience', '.']
counter: {('null', 'bistro', 'great', 'wonderful'): 5}
output quads: ['[A] bistro [O] wonderful [S] great']
multi_path: ['[O] wonderful [A] bistro [S] great', '[O] wonderful [S] great [A] bistro', '[A] bistro [O] wonderful [S] great', '[A] bistro [S] great [O] wonderful', '[S] great [O] wonderful [A] bistro']

task, data: aste rest14
target: [('null', 'delmonico steak', 'bad', 'not cooked')]
output: ['[A] delmonico steak [O] not cooked to order [S] bad']
sent: ['The', '$', '72', 'Delmonico', 'steak', 'had', 'to', 'be', 'sent', 'back', 'because', 'it', 'was', 'not', 'cooked', 'to', 'order', '.']
counter: {('null', 'delmonico steak', 'bad', 'not cooked to order'): 3, ('null', 'delmonico steak', 'bad', 'sent back'): 2, ('null', 'cooked to order', 'bad', 'not cooked to order'): 2}
output quads: ['[A] delmonico steak [O] not cooked to order [S] bad']
multi_path: ['[O] not cooked to order [A] delmonico steak [S] bad', '[O] not cooked to order [S] bad [A] delmonico steak', '[A] delmonico steak [O] sent back [S] bad [SSEP] [A] cooked to order [O] not cooked to order [S] bad', '[A] delmonico steak [S] bad [O] sent back [SSEP] [A] cooked to order [S] bad [O] not cooked to order', '[S] bad [O] not cooked to order [A] delmonico steak']

task, data: aste rest14
target: [('null', 'falafel', 'great', 'delicious'), ('null', 'humus', 'great', 'delicious'), ('null', 'mediterranean delights', 'great', 'delicious'), ('null', 'mediterranean delights', 'great', 'inexpensive'), ('null', 'tabouleh', 'great', 'delicious')]
output: ['[A] falafel [O] delicious [S] great', '[A] humus [O] delicious [S] great', '[A] mediterranean delights [O] inexpensive [S] great', '[A] tabouleh [O] delicious [S] great']
sent: ['Casablanca', 'servces', 'delicious', 'falafel', ',', 'tabouleh', ',', 'humus', 'and', 'other', 'Mediterranean', 'delights', ',', 'which', 'are', 'all', 'very', 'inexpensive', '.']
counter: {('null', 'falafel', 'great', 'delicious'): 5, ('null', 'tabouleh', 'great', 'delicious'): 5, ('null', 'humus', 'great', 'delicious'): 5, ('null', 'mediterranean delights', 'great', 'inexpensive'): 5}
output quads: ['[A] falafel [O] delicious [S] great', '[A] tabouleh [O] delicious [S] great', '[A] humus [O] delicious [S] great', '[A] mediterranean delights [O] inexpensive [S] great']
multi_path: ['[O] delicious [A] falafel [S] great [SSEP] [O] delicious [A] tabouleh [S] great [SSEP] [O] delicious [A] humus [S] great [SSEP] [O] inexpensive [A] mediterranean delights [S] great', '[O] delicious [S] great [A] falafel [SSEP] [O] delicious [S] great [A] tabouleh [SSEP] [O] delicious [S] great [A] humus [SSEP] [O] inexpensive [S] great [A] mediterranean delights', '[A] falafel [O] delicious [S] great [SSEP] [A] tabouleh [O] delicious [S] great [SSEP] [A] humus [O] delicious [S] great [SSEP] [A] mediterranean delights [O] inexpensive [S] great', '[A] falafel [S] great [O] delicious [SSEP] [A] tabouleh [S] great [O] delicious [SSEP] [A] humus [S] great [O] delicious [SSEP] [A] mediterranean delights [S] great [O] inexpensive', '[S] great [O] delicious [A] falafel [SSEP] [S] great [O] delicious [A] tabouleh [SSEP] [S] great [O] delicious [A] humus [SSEP] [S] great [O] inexpensive [A] mediterranean delights']

task, data: aste rest14
target: [('null', "pizza's", 'great', 'crispy'), ('null', "pizza's", 'great', 'fresh'), ('null', "pizza's", 'great', 'ready to serve')]
output: ['[A] pizza [O] crispy [S] great', '[A] pizza [O] fresh [S] great', '[A] serve [O] ready [S] great']
sent: ['The', 'pizza', "'s", 'are', 'made', 'fresh', ',', 'crispy', ',', 'and', 'ready', 'to', 'serve', '.']
counter: {('null', 'pizza', 'great', 'fresh'): 5, ('null', 'pizza', 'great', 'crispy'): 5, ('null', 'serve', 'great', 'ready'): 5}
output quads: ['[A] pizza [O] fresh [S] great', '[A] pizza [O] crispy [S] great', '[A] serve [O] ready [S] great']
multi_path: ['[O] fresh [A] pizza [S] great [SSEP] [O] crispy [A] pizza [S] great [SSEP] [O] ready [A] serve [S] great', '[O] fresh [S] great [A] pizza [SSEP] [O] crispy [S] great [A] pizza [SSEP] [O] ready [S] great [A] serve', '[A] pizza [O] fresh [S] great [SSEP] [A] pizza [O] crispy [S] great [SSEP] [A] serve [O] ready [S] great', '[A] pizza [S] great [O] fresh [SSEP] [A] pizza [S] great [O] crispy [SSEP] [A] serve [S] great [O] ready', '[S] great [O] fresh [A] pizza [SSEP] [S] great [O] crispy [A] pizza [SSEP] [S] great [O] ready [A] serve']

task, data: aste rest14
target: [('null', 'server', 'great', 'friendly'), ('null', 'service', 'great', 'prompt')]
output: ['[A] server [O] friendly [S] great', '[A] service [O] positive [S] great', '[A] service [O] prompt [S] great']
sent: ['The', 'one', 'positive', 'thing', 'I', 'can', 'say', 'is', 'that', 'the', 'service', 'was', 'prompt', ',', 'we', 'got', 'seated', 'right', 'away', 'and', 'the', 'server', 'was', 'very', 'friendly', '.']
counter: {('null', 'service', 'great', 'positive'): 5, ('null', 'service', 'great', 'prompt'): 5, ('null', 'server', 'great', 'friendly'): 5}
output quads: ['[A] service [O] positive [S] great', '[A] service [O] prompt [S] great', '[A] server [O] friendly [S] great']
multi_path: ['[O] positive [A] service [S] great [SSEP] [O] prompt [A] service [S] great [SSEP] [O] friendly [A] server [S] great', '[O] positive [S] great [A] service [SSEP] [O] prompt [S] great [A] service [SSEP] [O] friendly [S] great [A] server', '[A] service [O] positive [S] great [SSEP] [A] service [O] prompt [S] great [SSEP] [A] server [O] friendly [S] great', '[A] service [S] great [O] positive [SSEP] [A] service [S] great [O] prompt [SSEP] [A] server [S] great [O] friendly', '[S] great [O] positive [A] service [SSEP] [S] great [O] prompt [A] service [SSEP] [S] great [O] friendly [A] server']

task, data: aste rest14
target: [('null', 'food', 'great', 'excellent'), ('null', 'staff', 'great', 'warmly')]
output: ['[A] food [O] excellent [S] great', '[A] seated [O] promptly [S] great', '[A] staff [O] warmly [S] great']
sent: ['The', 'staff', 'greeted', 'me', 'warmly', 'at', 'the', 'door', 'and', 'I', 'was', 'seated', 'promptly', 'and', 'the', 'food', 'was', 'excellent', '.']
counter: {('null', 'staff', 'great', 'warmly'): 5, ('null', 'seated', 'great', 'promptly'): 3, ('null', 'food', 'great', 'excellent'): 5, ('null', 'door', 'ok', 'promptly'): 2}
output quads: ['[A] staff [O] warmly [S] great', '[A] seated [O] promptly [S] great', '[A] food [O] excellent [S] great']
multi_path: ['[O] warmly [A] staff [S] great [SSEP] [O] promptly [A] seated [S] great [SSEP] [O] excellent [A] food [S] great', '[O] warmly [S] great [A] staff [SSEP] [O] promptly [S] great [A] seated [SSEP] [O] excellent [S] great [A] food', '[A] staff [O] warmly [S] great [SSEP] [A] door [O] promptly [S] ok [SSEP] [A] food [O] excellent [S] great', '[A] staff [S] great [O] warmly [SSEP] [A] door [S] ok [O] promptly [SSEP] [A] food [S] great [O] excellent', '[S] great [O] warmly [A] staff [SSEP] [S] great [O] promptly [A] seated [SSEP] [S] great [O] excellent [A] food']

task, data: aste rest14
target: [('null', 'host', 'bad', 'rude'), ('null', 'hostess', 'bad', 'rude')]
output: ['[A] host [O] rude [S] bad']
sent: ['Host', 'and', 'Hostess', 'was', 'quite', 'rude', '.']
counter: {('null', 'host', 'bad', 'rude'): 5}
output quads: ['[A] host [O] rude [S] bad']
multi_path: ['[O] rude [A] host [S] bad', '[O] rude [S] bad [A] host', '[A] host [O] rude [S] bad', '[A] host [S] bad [O] rude', '[S] bad [O] rude [A] host']

task, data: aste rest14
target: [('null', 'menu', 'ok', 'changes')]
output: ['[A] menu [O] changes seasonally [S] ok']
sent: ['The', 'menu', ',', 'which', 'changes', 'seasonally', ',', 'shows', 'both', 'regional', 'and', 'international', 'influences', '.']
counter: {('null', 'menu', 'ok', 'changes seasonally'): 5}
output quads: ['[A] menu [O] changes seasonally [S] ok']
multi_path: ['[O] changes seasonally [A] menu [S] ok', '[O] changes seasonally [S] ok [A] menu', '[A] menu [O] changes seasonally [S] ok', '[A] menu [S] ok [O] changes seasonally', '[S] ok [O] changes seasonally [A] menu']

task, data: aste rest14
target: [('null', 'jazz singer', 'great', 'nice')]
output: ['[A] voice [O] nice [S] great']
sent: ['jazz', 'singer', 'had', 'a', 'nice', 'voice', '+', 'she', 'made', 'us', 'all', 'get', 'up', 'to', 'dance', 'to', 'shake', 'some', 'cals', 'to', 'eat', 'some', 'more', '.']
counter: {('null', 'voice', 'great', 'nice'): 3, ('null', 'jazz singer', 'great', 'nice'): 2}
output quads: ['[A] voice [O] nice [S] great']
multi_path: ['[O] nice [A] voice [S] great', '[O] nice [S] great [A] voice', '[A] jazz singer [O] nice [S] great', '[A] jazz singer [S] great [O] nice', '[S] great [O] nice [A] voice']

task, data: aste rest14
target: [('null', 'breakfast food', 'ok', 'average'), ('null', 'food', 'ok', 'average'), ('null', 'salads', 'ok', 'average'), ('null', 'sandwiches', 'ok', 'average'), ('null', 'soups', 'ok', 'average')]
output: ['[A] food [O] average [S] ok']
sent: ['The', 'food', 'is', 'average', ':', 'breakfast', 'food', ',', 'soups', ',', 'salads', ',', 'sandwiches', ',', 'etc', '.']
counter: {('null', 'food', 'ok', 'average'): 5}
output quads: ['[A] food [O] average [S] ok']
multi_path: ['[O] average [A] food [S] ok', '[O] average [S] ok [A] food', '[A] food [O] average [S] ok', '[A] food [S] ok [O] average', '[S] ok [O] average [A] food']

task, data: aste rest14
target: [('null', 'food', 'great', 'good')]
output: ['[A] food [O] good [S] great', "[A] price [O] couldn't justify [S] bad"]
sent: ['The', 'food', 'was', 'definitely', 'good', ',', 'but', 'when', 'all', 'was', 'said', 'and', 'done', ',', 'I', 'just', 'could', "n't", 'justify', 'it', 'for', 'the', 'price', '(', 'including', '2', 'drinks', ',', '$', '100/person', ')', '...']
counter: {('null', 'food', 'great', 'good'): 5, ('null', 'price', 'bad', "couldn't justify"): 5}
output quads: ['[A] food [O] good [S] great', "[A] price [O] couldn't justify [S] bad"]
multi_path: ["[O] good [A] food [S] great [SSEP] [O] couldn't justify [A] price [S] bad", "[O] good [S] great [A] food [SSEP] [O] couldn't justify [S] bad [A] price", "[A] food [O] good [S] great [SSEP] [A] price [O] couldn't justify [S] bad", "[A] food [S] great [O] good [SSEP] [A] price [S] bad [O] couldn't justify", "[S] great [O] good [A] food [SSEP] [S] bad [O] couldn't justify [A] price"]

task, data: aste rest14
target: [('null', 'beer selection', 'great', 'great'), ('null', 'beers', 'ok', 'great')]
output: ['[A] beer selection [O] great [S] great']
sent: ['Great', 'beer', 'selection', 'too', ',', 'something', 'like', '50', 'beers', '.']
counter: {('null', 'beer selection', 'great', 'great'): 5}
output quads: ['[A] beer selection [O] great [S] great']
multi_path: ['[O] great [A] beer selection [S] great', '[O] great [S] great [A] beer selection', '[A] beer selection [O] great [S] great', '[A] beer selection [S] great [O] great', '[S] great [O] great [A] beer selection']

task, data: aste rest14
target: [('null', 'delivary', 'bad', 'wary')]
output: ['[A] delivary [O] wary [S] ok']
sent: ['Not', 'to', 'sound', 'too', 'negative', 'but', 'be', 'wary', 'of', 'the', 'delivary', '.']
counter: {('null', 'delivary', 'ok', 'wary'): 5}
output quads: ['[A] delivary [O] wary [S] ok']
multi_path: ['[O] wary [A] delivary [S] ok', '[O] wary [S] ok [A] delivary', '[A] delivary [O] wary [S] ok', '[A] delivary [S] ok [O] wary', '[S] ok [O] wary [A] delivary']

task, data: aste rest14
target: [('null', 'food', 'great', 'good'), ('null', 'food', 'great', 'much less expensive'), ('null', 'owner', 'great', 'good')]
output: ['[A] food [O] good [S] great', '[A] food [O] less expensive [S] great']
sent: ['I', 'found', 'the', 'food', 'to', 'be', 'just', 'as', 'good', 'as', 'its', 'owner', ',', 'Da', 'Silvano', ',', 'just', 'much', 'less', 'expensive', '.']
counter: {('null', 'food', 'great', 'good'): 5, ('null', 'food', 'great', 'less expensive'): 5}
output quads: ['[A] food [O] good [S] great', '[A] food [O] less expensive [S] great']
multi_path: ['[O] good [A] food [S] great [SSEP] [O] less expensive [A] food [S] great', '[O] good [S] great [A] food [SSEP] [O] less expensive [S] great [A] food', '[A] food [O] good [S] great [SSEP] [A] food [O] less expensive [S] great', '[A] food [S] great [O] good [SSEP] [A] food [S] great [O] less expensive', '[S] great [O] good [A] food [SSEP] [S] great [O] less expensive [A] food']

task, data: aste rest14
target: [('null', 'gnocchi', 'great', 'recommend'), ('null', 'gnocchi', 'great', 'yum')]
output: ['[A] gnocchi [O] recommend [S] great', '[A] pastas [O] homemade [S] great']
sent: ['They', 'have', 'homemade', 'pastas', 'of', 'all', 'kinds', '--', 'I', 'recommend', 'the', 'gnocchi', '--', 'yum', '!']
counter: {('null', 'pastas', 'great', 'homemade'): 5, ('null', 'gnocchi', 'great', 'recommend'): 5}
output quads: ['[A] pastas [O] homemade [S] great', '[A] gnocchi [O] recommend [S] great']
multi_path: ['[O] homemade [A] pastas [S] great [SSEP] [O] recommend [A] gnocchi [S] great', '[O] homemade [S] great [A] pastas [SSEP] [O] recommend [S] great [A] gnocchi', '[A] pastas [O] homemade [S] great [SSEP] [A] gnocchi [O] recommend [S] great', '[A] pastas [S] great [O] homemade [SSEP] [A] gnocchi [S] great [O] recommend', '[S] great [O] homemade [A] pastas [SSEP] [S] great [O] recommend [A] gnocchi']

task, data: aste rest14
target: [('null', 'homemade sorbets', 'great', 'out of this world'), ('null', 'pizza', 'great', 'amazing'), ('null', 'sandwiches', 'great', 'amazing'), ('null', 'soup', 'great', 'amazing')]
output: ['[A] pizza [O] amazing [S] great', '[A] sandwiches [O] amazing [S] great', '[A] sorbets [O] out of this world [S] great', '[A] soup [O] amazing [S] great']
sent: ['Not', 'only', 'did', 'they', 'have', 'amazing', ',', 'sandwiches', ',', 'soup', ',', 'pizza', 'etc', ',', 'but', 'their', 'homemade', 'sorbets', 'are', 'out', 'of', 'this', 'world', '!']
counter: {('null', 'sandwiches', 'great', 'amazing'): 5, ('null', 'soup', 'great', 'amazing'): 5, ('null', 'pizza', 'great', 'amazing'): 5, ('null', 'sorbets', 'great', 'out of this world'): 5}
output quads: ['[A] sandwiches [O] amazing [S] great', '[A] soup [O] amazing [S] great', '[A] pizza [O] amazing [S] great', '[A] sorbets [O] out of this world [S] great']
multi_path: ['[O] amazing [A] sandwiches [S] great [SSEP] [O] amazing [A] soup [S] great [SSEP] [O] amazing [A] pizza [S] great [SSEP] [O] out of this world [A] sorbets [S] great', '[O] amazing [S] great [A] sandwiches [SSEP] [O] amazing [S] great [A] soup [SSEP] [O] amazing [S] great [A] pizza [SSEP] [O] out of this world [S] great [A] sorbets', '[A] sandwiches [O] amazing [S] great [SSEP] [A] soup [O] amazing [S] great [SSEP] [A] pizza [O] amazing [S] great [SSEP] [A] sorbets [O] out of this world [S] great', '[A] sandwiches [S] great [O] amazing [SSEP] [A] soup [S] great [O] amazing [SSEP] [A] pizza [S] great [O] amazing [SSEP] [A] sorbets [S] great [O] out of this world', '[S] great [O] amazing [A] sandwiches [SSEP] [S] great [O] amazing [A] soup [SSEP] [S] great [O] amazing [A] pizza [SSEP] [S] great [O] out of this world [A] sorbets']

task, data: aste rest14
target: [('null', 'deserts', 'great', 'amazing'), ('null', 'entree', 'great', 'unbelievable'), ('null', 'homemade guacamole', 'great', 'amazing'), ('null', 'homemade guacamole', 'great', 'unbelievable')]
output: ['[A] deserts [O] amazing [S] great', '[A] entree [O] unbelievable [S] great', '[A] guacamole [O] homemade [S] great']
sent: ['the', 'homemade', 'Guacamole', ',', 'the', 'unbelievable', 'entree', ',', 'and', 'thee', 'most', 'amazing', 'deserts', '.']
counter: {('null', 'guacamole', 'great', 'homemade'): 5, ('null', 'entree', 'great', 'unbelievable'): 5, ('null', 'deserts', 'great', 'amazing'): 5}
output quads: ['[A] guacamole [O] homemade [S] great', '[A] entree [O] unbelievable [S] great', '[A] deserts [O] amazing [S] great']
multi_path: ['[O] homemade [A] guacamole [S] great [SSEP] [O] unbelievable [A] entree [S] great [SSEP] [O] amazing [A] deserts [S] great', '[O] homemade [S] great [A] guacamole [SSEP] [O] unbelievable [S] great [A] entree [SSEP] [O] amazing [S] great [A] deserts', '[A] guacamole [O] homemade [S] great [SSEP] [A] entree [O] unbelievable [S] great [SSEP] [A] deserts [O] amazing [S] great', '[A] guacamole [S] great [O] homemade [SSEP] [A] entree [S] great [O] unbelievable [SSEP] [A] deserts [S] great [O] amazing', '[S] great [O] homemade [A] guacamole [SSEP] [S] great [O] unbelievable [A] entree [SSEP] [S] great [O] amazing [A] deserts']

task, data: aste rest14
target: [('null', 'setting', 'great', 'cozy'), ('null', 'traditional italian items', 'great', 'cheap'), ('null', 'traditional italian items', 'great', 'great')]
output: ['[A] italian items [O] cheap [S] great', '[A] setting [O] cozy [S] great', '[A] traditional italian items [O] great [S] great']
sent: ['The', 'traditional', 'Italian', 'items', 'are', 'great', '-', 'cheap', 'and', 'served', 'in', 'a', 'cozy', 'setting', '.']
counter: {('null', 'traditional italian items', 'great', 'great'): 5, ('null', 'italian items', 'great', 'cheap'): 4, ('null', 'setting', 'great', 'cozy'): 3, ('null', 'traditional italian items', 'great', 'traditional'): 1, ('null', 'served', 'great', 'cheap'): 1, ('null', 'served', 'great', 'cozy'): 2}
output quads: ['[A] traditional italian items [O] great [S] great', '[A] italian items [O] cheap [S] great', '[A] setting [O] cozy [S] great']
multi_path: ['[O] great [A] traditional italian items [S] great [SSEP] [O] cheap [A] italian items [S] great [SSEP] [O] cozy [A] setting [S] great', '[O] traditional [S] great [A] traditional italian items [SSEP] [O] great [S] great [A] traditional italian items [SSEP] [O] cheap [S] great [A] served [SSEP] [O] cozy [S] great [A] setting', '[A] traditional italian items [O] great [S] great [SSEP] [A] italian items [O] cheap [S] great [SSEP] [A] served [O] cozy [S] great', '[A] traditional italian items [S] great [O] great [SSEP] [A] italian items [S] great [O] cheap [SSEP] [A] served [S] great [O] cozy', '[S] great [O] great [A] traditional italian items [SSEP] [S] great [O] cheap [A] italian items [SSEP] [S] great [O] cozy [A] setting']

task, data: aste rest14
target: [('null', "pizza's", 'great', 'great'), ('null', "pizza's", 'great', 'mouth watering'), ('null', "pizza's", 'great', 'tasty')]
output: ['[A] pizza [O] mouth watering [S] great', '[A] pizza [O] tasty [S] great']
sent: ['El', 'Nidos', 'one', 'of', 'the', 'best', 'restaurants', 'in', 'New', 'York', 'which', 'I', "'ve", 'ever', 'been', 'to', ',', 'has', 'a', 'great', 'variety', 'of', 'tasty', ',', 'mouth', 'watering', 'pizza', "'s", '.']
counter: {('null', 'pizza', 'great', 'great variety'): 1, ('null', 'pizza', 'great', 'tasty'): 3, ('null', 'pizza', 'great', 'mouth watering'): 5, ('null', 'variety of tasty', 'great', 'great variety'): 1, ('null', 'variety of pizza', 'great', 'great'): 2, ('null', 'variety of tasty', 'great', 'great'): 1}
output quads: ['[A] pizza [O] tasty [S] great', '[A] pizza [O] mouth watering [S] great']
multi_path: ['[O] great variety [A] pizza [S] great [SSEP] [O] tasty [A] pizza [S] great [SSEP] [O] mouth watering [A] pizza [S] great', '[O] great variety [S] great [A] variety of tasty [SSEP] [O] mouth watering [S] great [A] pizza', '[A] variety of pizza [O] great [S] great [SSEP] [A] pizza [O] tasty [S] great [SSEP] [A] pizza [O] mouth watering [S] great', '[A] variety of pizza [S] great [O] great [SSEP] [A] pizza [S] great [O] tasty [SSEP] [A] pizza [S] great [O] mouth watering', '[S] great [O] great [A] variety of tasty [SSEP] [S] great [O] mouth watering [A] pizza']

task, data: aste rest14
target: [('null', 'kompot', 'great', 'refreshing'), ('null', 'odessa stew', 'great', 'good'), ('null', 'rabbit stew', 'great', 'good'), ('null', 'salads', 'great', 'good')]
output: ['[A] kompot [O] refreshing [S] great', '[A] odessa stew [O] try [S] great', '[A] rabbit stew [O] good [S] great', '[A] salads [O] good [S] great']
sent: ['You', 'must', 'try', 'Odessa', 'stew', 'or', 'Rabbit', 'stew', ';', 'salads', '-all', 'good', ';', 'and', 'kompot', 'is', 'soo', 'refreshing', 'during', 'the', 'hot', 'summer', 'day', '(', 'they', 'make', 'it', 'the', 'way', 'my', 'mom', 'does', ',', 'reminds', 'me', 'of', 'home', 'a', 'lot', ')', '.']
counter: {('null', 'odessa stew', 'great', 'try'): 5, ('null', 'rabbit stew', 'great', 'good'): 5, ('null', 'salads', 'great', 'good'): 4, ('null', 'kompot', 'great', 'refreshing'): 5}
output quads: ['[A] odessa stew [O] try [S] great', '[A] rabbit stew [O] good [S] great', '[A] salads [O] good [S] great', '[A] kompot [O] refreshing [S] great']
multi_path: ['[O] try [A] odessa stew [S] great [SSEP] [O] good [A] rabbit stew [S] great [SSEP] [O] good [A] salads [S] great [SSEP] [O] refreshing [A] kompot [S] great', '[O] try [S] great [A] odessa stew [SSEP] [O] good [S] great [A] rabbit stew [SSEP] [O] good [S] great [A] salads [SSEP] [O] refreshing [S] great [A] kompot', '[A] odessa stew [O] try [S] great [SSEP] [A] rabbit stew [O] good [S] great [SSEP] [A] salads [O] good [S] great [SSEP] [A] kompot [O] refreshing [S] great', '[A] odessa stew [S] great [O] try [SSEP] [A] rabbit stew [S] great [O] good [SSEP] [A] salads [S] great [O] good [SSEP] [A] kompot [S] great [O] refreshing', '[S] great [O] try [A] odessa stew [SSEP] [S] great [O] good [A] rabbit stew [SSEP] [S] great [O] refreshing [A] kompot']

task, data: aste rest14
target: [('null', 'quality of the meat', 'bad', 'on par')]
output: ['[A] quality of the meat [O] on par [S] ok']
sent: ['The', 'quality', 'of', 'the', 'meat', 'was', 'on', 'par', 'with', 'your', 'local', 'grocery', 'store', '.']
counter: {('null', 'quality of the meat', 'ok', 'on par'): 5}
output quads: ['[A] quality of the meat [O] on par [S] ok']
multi_path: ['[O] on par [A] quality of the meat [S] ok', '[O] on par [S] ok [A] quality of the meat', '[A] quality of the meat [O] on par [S] ok', '[A] quality of the meat [S] ok [O] on par', '[S] ok [O] on par [A] quality of the meat']

task, data: aste rest14
target: [('null', 'black roasted codfish', 'great', 'best'), ('null', 'black roasted codfish', 'great', 'recommend'), ('null', 'dish', 'great', 'best')]
output: ['[A] black roasted codfish [O] recommend [S] great', '[A] dish [O] best [S] great']
sent: ['I', 'recommend', 'the', 'black', 'roasted', 'codfish', ',', 'it', 'was', 'the', 'best', 'dish', 'of', 'the', 'evening', '.']
counter: {('null', 'black roasted codfish', 'great', 'recommend'): 5, ('null', 'dish', 'great', 'best'): 5}
output quads: ['[A] black roasted codfish [O] recommend [S] great', '[A] dish [O] best [S] great']
multi_path: ['[O] recommend [A] black roasted codfish [S] great [SSEP] [O] best [A] dish [S] great', '[O] recommend [S] great [A] black roasted codfish [SSEP] [O] best [S] great [A] dish', '[A] black roasted codfish [O] recommend [S] great [SSEP] [A] dish [O] best [S] great', '[A] black roasted codfish [S] great [O] recommend [SSEP] [A] dish [S] great [O] best', '[S] great [O] recommend [A] black roasted codfish [SSEP] [S] great [O] best [A] dish']

task, data: aste rest14
target: [('null', 'waiter', 'bad', 'annoyed')]
output: ['[A] resturant [O] annoyed [S] bad', '[A] waiter [O] annoyed [S] bad']
sent: ['The', 'manager', 'then', 'told', 'us', 'we', 'could', 'order', 'from', 'whatever', 'menu', 'we', 'wanted', 'but', 'by', 'that', 'time', 'we', 'were', 'so', 'annoyed', 'with', 'the', 'waiter', 'and', 'the', 'resturant', 'that', 'we', 'let', 'and', 'went', 'some', 'place', 'else', '.']
counter: {('null', 'waiter', 'bad', 'annoyed'): 5, ('null', 'resturant', 'bad', 'annoyed'): 5}
output quads: ['[A] waiter [O] annoyed [S] bad', '[A] resturant [O] annoyed [S] bad']
multi_path: ['[O] annoyed [A] waiter [S] bad [SSEP] [O] annoyed [A] resturant [S] bad', '[O] annoyed [S] bad [A] waiter [SSEP] [O] annoyed [S] bad [A] resturant', '[A] waiter [O] annoyed [S] bad [SSEP] [A] resturant [O] annoyed [S] bad', '[A] waiter [S] bad [O] annoyed [SSEP] [A] resturant [S] bad [O] annoyed', '[S] bad [O] annoyed [A] waiter [SSEP] [S] bad [O] annoyed [A] resturant']

task, data: aste rest14
target: [('null', 'chicken', 'bad', 'dark'), ('null', 'taste', 'bad', 'microwave')]
output: ['[A] dark chicken [O] nothing [S] bad', '[A] microwave taste [O] warmed up [S] bad']
sent: ['In', 'mi', 'burrito', ',', 'here', 'was', 'nothing', 'but', 'dark', 'chicken', 'that', 'had', 'that', 'cooked', 'last', 'week', 'and', 'just', 'warmed', 'up', 'in', 'a', 'microwave', 'taste', '.']
counter: {('null', 'dark chicken', 'bad', 'nothing'): 5, ('null', 'microwave taste', 'bad', 'warmed up'): 5}
output quads: ['[A] dark chicken [O] nothing [S] bad', '[A] microwave taste [O] warmed up [S] bad']
multi_path: ['[O] nothing [A] dark chicken [S] bad [SSEP] [O] warmed up [A] microwave taste [S] bad', '[O] nothing [S] bad [A] dark chicken [SSEP] [O] warmed up [S] bad [A] microwave taste', '[A] dark chicken [O] nothing [S] bad [SSEP] [A] microwave taste [O] warmed up [S] bad', '[A] dark chicken [S] bad [O] nothing [SSEP] [A] microwave taste [S] bad [O] warmed up', '[S] bad [O] nothing [A] dark chicken [SSEP] [S] bad [O] warmed up [A] microwave taste']

task, data: aste rest14
target: [('null', 'brunch', 'ok', 'impressed')]
output: ['[A] common stock [O] impressed [S] great']
sent: ['I', 'went', 'to', 'Common', 'Stock', 'for', 'brunch', 'and', 'I', 'was', 'so', 'impressed', '.']
counter: {('null', 'common stock', 'great', 'impressed'): 5}
output quads: ['[A] common stock [O] impressed [S] great']
multi_path: ['[O] impressed [A] common stock [S] great', '[O] impressed [S] great [A] common stock', '[A] common stock [O] impressed [S] great', '[A] common stock [S] great [O] impressed', '[S] great [O] impressed [A] common stock']

task, data: aste rest14
target: [('null', 'dining experience', 'great', 'fantastic')]
output: ['[A] dining [O] fantastic [S] great']
sent: ['It', 'was', 'such', 'a', 'fantastic', 'dining', 'experience', ',', 'that', 'I', 'returned', 'again', 'the', 'same', 'week', '.']
counter: {('null', 'dining', 'great', 'fantastic'): 3, ('null', 'dining experience', 'great', 'fantastic'): 2}
output quads: ['[A] dining [O] fantastic [S] great']
multi_path: ['[O] fantastic [A] dining [S] great', '[O] fantastic [S] great [A] dining', '[A] dining experience [O] fantastic [S] great', '[A] dining experience [S] great [O] fantastic', '[S] great [O] fantastic [A] dining']

task, data: aste rest14
target: [('null', 'food', 'great', 'good'), ('null', 'service', 'great', 'attentative'), ('null', 'service', 'great', 'busy'), ('null', 'service', 'great', 'quick')]
output: ['[A] food [O] good [S] great', '[A] service [O] attentative [S] great', '[A] service [O] quick [S] great']
sent: ['To', 'be', 'fair', ',', 'the', 'food', 'still', 'is', 'good', 'and', 'the', 'service', 'is', 'quick', 'and', 'attentative', 'even', 'though', 'its', 'usually', 'very', 'busy', '.']
counter: {('null', 'food', 'great', 'good'): 5, ('null', 'service', 'great', 'quick'): 5, ('null', 'service', 'great', 'attentative'): 5}
output quads: ['[A] food [O] good [S] great', '[A] service [O] quick [S] great', '[A] service [O] attentative [S] great']
multi_path: ['[O] good [A] food [S] great [SSEP] [O] quick [A] service [S] great [SSEP] [O] attentative [A] service [S] great', '[O] good [S] great [A] food [SSEP] [O] quick [S] great [A] service [SSEP] [O] attentative [S] great [A] service', '[A] food [O] good [S] great [SSEP] [A] service [O] quick [S] great [SSEP] [A] service [O] attentative [S] great', '[A] food [S] great [O] good [SSEP] [A] service [S] great [O] quick [SSEP] [A] service [S] great [O] attentative', '[S] great [O] good [A] food [SSEP] [S] great [O] quick [A] service [SSEP] [S] great [O] attentative [A] service']

task, data: aste rest14
target: [('null', 'atmosphere', 'great', 'cool')]
output: ['[A] atmosphere [O] cool [S] great', '[A] atmosphere [O] let down [S] bad']
sent: ['Cool', 'atmosphere', 'but', 'such', 'a', 'let', 'down', '.']
counter: {('null', 'atmosphere', 'great', 'cool'): 5, ('null', 'atmosphere', 'bad', 'let down'): 5}
output quads: ['[A] atmosphere [O] cool [S] great', '[A] atmosphere [O] let down [S] bad']
multi_path: ['[O] cool [A] atmosphere [S] great [SSEP] [O] let down [A] atmosphere [S] bad', '[O] cool [S] great [A] atmosphere [SSEP] [O] let down [S] bad [A] atmosphere', '[A] atmosphere [O] cool [S] great [SSEP] [A] atmosphere [O] let down [S] bad', '[A] atmosphere [S] great [O] cool [SSEP] [A] atmosphere [S] bad [O] let down', '[S] great [O] cool [A] atmosphere [SSEP] [S] bad [O] let down [A] atmosphere']

task, data: aste rest14
target: [('null', 'artifical lobster meat', 'bad', 'artifical'), ('null', 'artifical lobster meat', 'bad', "didn't like"), ('null', 'sashimi portion', 'great', 'big')]
output: ["[A] lobster meat [O] didn't like [S] bad", '[A] sashimi portion [O] big [S] great']
sent: ['The', 'Sashimi', 'portion', 'are', 'big', 'enough', 'to', 'appease', 'most', 'people', ',', 'but', 'I', 'did', "n't", 'like', 'the', 'fact', 'they', 'used', 'artifical', 'lobster', 'meat', '.']
counter: {('null', 'sashimi portion', 'great', 'big'): 5, ('null', 'lobster meat', 'bad', "didn't like"): 5}
output quads: ['[A] sashimi portion [O] big [S] great', "[A] lobster meat [O] didn't like [S] bad"]
multi_path: ["[O] big [A] sashimi portion [S] great [SSEP] [O] didn't like [A] lobster meat [S] bad", "[O] big [S] great [A] sashimi portion [SSEP] [O] didn't like [S] bad [A] lobster meat", "[A] sashimi portion [O] big [S] great [SSEP] [A] lobster meat [O] didn't like [S] bad", "[A] sashimi portion [S] great [O] big [SSEP] [A] lobster meat [S] bad [O] didn't like", "[S] great [O] big [A] sashimi portion [SSEP] [S] bad [O] didn't like [A] lobster meat"]

task, data: aste rest14
target: [('null', 'ingredients', 'great', 'fresh'), ('null', 'ingredients', 'great', 'yummy')]
output: ['[A] ingredients [O] yummy [S] great', '[A] wheat crusted pizza [O] fresh [S] great']
sent: ['They', 'have', 'wheat', 'crusted', 'pizza', 'made', 'with', 'really', 'fresh', 'and', 'yummy', 'ingredients', '.']
counter: {('null', 'wheat crusted pizza', 'great', 'fresh'): 3, ('null', 'ingredients', 'great', 'yummy'): 5, ('null', 'ingredients', 'great', 'fresh'): 2}
output quads: ['[A] wheat crusted pizza [O] fresh [S] great', '[A] ingredients [O] yummy [S] great']
multi_path: ['[O] fresh [A] wheat crusted pizza [S] great [SSEP] [O] yummy [A] ingredients [S] great', '[O] fresh [S] great [A] wheat crusted pizza [SSEP] [O] yummy [S] great [A] ingredients', '[A] ingredients [O] fresh [S] great [SSEP] [A] ingredients [O] yummy [S] great', '[A] ingredients [S] great [O] fresh [SSEP] [A] ingredients [S] great [O] yummy', '[S] great [O] fresh [A] wheat crusted pizza [SSEP] [S] great [O] yummy [A] ingredients']

task, data: aste rest14
target: [('null', 'dinner', 'great', 'lovely'), ('null', 'food', 'great', 'well-prepared and -presented'), ('null', 'service', 'great', 'pleasant'), ('null', 'service', 'great', 'prompt')]
output: ['[A] dinner [O] lovely [S] great', '[A] food [O] well-prepared [S] great', '[A] food [O] well-presented [S] great', '[A] service [O] pleasant [S] great', '[A] service [O] prompt [S] great']
sent: ['Had', 'a', 'lovely', 'dinner', 'in', 'this', 'dedicated', 'seafood', 'joint', ',', 'food', 'was', 'well-prepared', 'and', '-presented', 'and', 'the', 'service', 'was', 'pleasant', 'and', 'prompt', '.']
counter: {('null', 'dinner', 'great', 'lovely'): 5, ('null', 'food', 'great', 'well-prepared'): 5, ('null', 'food', 'great', 'well-presented'): 5, ('null', 'service', 'great', 'pleasant'): 5, ('null', 'service', 'great', 'prompt'): 5}
output quads: ['[A] dinner [O] lovely [S] great', '[A] food [O] well-prepared [S] great', '[A] food [O] well-presented [S] great', '[A] service [O] pleasant [S] great', '[A] service [O] prompt [S] great']
multi_path: ['[O] lovely [A] dinner [S] great [SSEP] [O] well-prepared [A] food [S] great [SSEP] [O] well-presented [A] food [S] great [SSEP] [O] pleasant [A] service [S] great [SSEP] [O] prompt [A] service [S] great', '[O] lovely [S] great [A] dinner [SSEP] [O] well-prepared [S] great [A] food [SSEP] [O] well-presented [S] great [A] food [SSEP] [O] pleasant [S] great [A] service [SSEP] [O] prompt [S] great [A] service', '[A] dinner [O] lovely [S] great [SSEP] [A] food [O] well-prepared [S] great [SSEP] [A] food [O] well-presented [S] great [SSEP] [A] service [O] pleasant [S] great [SSEP] [A] service [O] prompt [S] great', '[A] dinner [S] great [O] lovely [SSEP] [A] food [S] great [O] well-prepared [SSEP] [A] food [S] great [O] well-presented [SSEP] [A] service [S] great [O] pleasant [SSEP] [A] service [S] great [O] prompt', '[S] great [O] lovely [A] dinner [SSEP] [S] great [O] well-prepared [A] food [SSEP] [S] great [O] well-presented [A] food [SSEP] [S] great [O] pleasant [A] service [SSEP] [S] great [O] prompt [A] service']

task, data: aste rest14
target: [('null', 'cake', 'great', 'creamy'), ('null', 'cake', 'great', 'fluffy'), ('null', 'cake', 'great', 'light'), ('null', 'cake', 'great', 'not ultra sweet')]
output: ['[A] cake [O] creamy [S] great', '[A] cake [O] light [S] great', '[A] icing [O] fluffy [S] bad']
sent: ['the', 'icing', 'MADE', 'this', 'cake', ',', 'it', 'was', 'fluffy', ',', 'not', 'ultra', 'sweet', ',', 'creamy', 'and', 'light', '.']
counter: {('null', 'icing', 'bad', 'fluffy'): 3, ('null', 'cake', 'bad', 'not ultra sweet'): 1, ('null', 'icing', 'bad', 'creamy'): 1, ('null', 'cake', 'great', 'light'): 5, ('null', 'icing', 'ok', 'fluffy'): 2, ('null', 'icing', 'ok', 'not ultra sweet'): 1, ('null', 'cake', 'great', 'creamy'): 4, ('null', 'icing', 'bad', 'not ultra sweet'): 2, ('null', 'icing', 'great', 'not ultra sweet'): 1}
output quads: ['[A] icing [O] fluffy [S] bad', '[A] cake [O] light [S] great', '[A] cake [O] creamy [S] great']
multi_path: ['[O] fluffy [A] icing [S] bad [SSEP] [O] not ultra sweet [A] cake [S] bad [SSEP] [O] creamy [A] icing [S] bad [SSEP] [O] light [A] cake [S] great', '[O] fluffy [S] ok [A] icing [SSEP] [O] not ultra sweet [S] ok [A] icing [SSEP] [O] creamy [S] great [A] cake [SSEP] [O] light [S] great [A] cake', '[A] icing [O] fluffy [S] bad [SSEP] [A] icing [O] not ultra sweet [S] bad [SSEP] [A] cake [O] creamy [S] great [SSEP] [A] cake [O] light [S] great', '[A] icing [S] bad [O] fluffy [SSEP] [A] icing [S] bad [O] not ultra sweet [SSEP] [A] cake [S] great [O] creamy [SSEP] [A] cake [S] great [O] light', '[S] ok [O] fluffy [A] icing [SSEP] [S] great [O] not ultra sweet [A] icing [SSEP] [S] great [O] creamy [A] cake [SSEP] [S] great [O] light [A] cake']

task, data: aste rest14
target: [('null', 'wait staff', 'bad', 'ignored')]
output: ['[A] rest of the restaurant [O] empty [S] ok', '[A] wait staff [O] ignored [S] bad']
sent: ['We', 'ended', 'up', 'having', 'to', 'just', 'leave', 'because', 'we', 'were', 'essentially', 'being', 'ignored', 'by', 'the', 'wait', 'staff', '--', 'even', 'though', 'the', 'rest', 'of', 'the', 'restaurant', 'was', 'largely', 'empty', '.']
counter: {('null', 'wait staff', 'bad', 'ignored'): 5, ('null', 'rest of the restaurant', 'ok', 'empty'): 5}
output quads: ['[A] wait staff [O] ignored [S] bad', '[A] rest of the restaurant [O] empty [S] ok']
multi_path: ['[O] ignored [A] wait staff [S] bad [SSEP] [O] empty [A] rest of the restaurant [S] ok', '[O] ignored [S] bad [A] wait staff [SSEP] [O] empty [S] ok [A] rest of the restaurant', '[A] wait staff [O] ignored [S] bad [SSEP] [A] rest of the restaurant [O] empty [S] ok', '[A] wait staff [S] bad [O] ignored [SSEP] [A] rest of the restaurant [S] ok [O] empty', '[S] bad [O] ignored [A] wait staff [SSEP] [S] ok [O] empty [A] rest of the restaurant']

task, data: aste rest14
target: [('null', 'priced', 'great', 'well'), ('null', 'wine list', 'great', 'extensive')]
output: ['[A] priced [O] well [S] great', '[A] regions [O] well [S] great', '[A] wine list [O] extensive [S] great']
sent: ['The', 'wine', 'list', 'is', 'extensive', ',', 'well', 'priced', 'and', 'covers', 'alot', 'of', 'regions', '.']
counter: {('null', 'wine list', 'great', 'extensive'): 5, ('null', 'priced', 'great', 'well'): 5, ('null', 'regions', 'great', 'well'): 3, ('null', 'wine list', 'great', 'well'): 2}
output quads: ['[A] wine list [O] extensive [S] great', '[A] priced [O] well [S] great', '[A] regions [O] well [S] great']
multi_path: ['[O] extensive [A] wine list [S] great [SSEP] [O] well [A] priced [S] great [SSEP] [O] well [A] regions [S] great', '[O] extensive [S] great [A] wine list [SSEP] [O] well [S] great [A] priced [SSEP] [O] well [S] great [A] regions', '[A] wine list [O] extensive [S] great [SSEP] [A] wine list [O] well [S] great [SSEP] [A] priced [O] well [S] great', '[A] wine list [S] great [O] extensive [SSEP] [A] wine list [S] great [O] well [SSEP] [A] priced [S] great [O] well', '[S] great [O] extensive [A] wine list [SSEP] [S] great [O] well [A] priced [SSEP] [S] great [O] well [A] regions']

task, data: aste rest14
target: [('null', 'bathroom', 'great', 'adorable')]
output: ['[A] bathroom [O] adorable [S] great', '[A] place [O] adorable [S] great']
sent: ['Everything', 'about', 'this', 'place', 'is', 'adorable', '-', 'even', 'the', 'bathroom', '!']
counter: {('null', 'place', 'great', 'adorable'): 5, ('null', 'bathroom', 'great', 'adorable'): 5}
output quads: ['[A] place [O] adorable [S] great', '[A] bathroom [O] adorable [S] great']
multi_path: ['[O] adorable [A] place [S] great [SSEP] [O] adorable [A] bathroom [S] great', '[O] adorable [S] great [A] place [SSEP] [O] adorable [S] great [A] bathroom', '[A] place [O] adorable [S] great [SSEP] [A] bathroom [O] adorable [S] great', '[A] place [S] great [O] adorable [SSEP] [A] bathroom [S] great [O] adorable', '[S] great [O] adorable [A] place [SSEP] [S] great [O] adorable [A] bathroom']

task, data: aste rest14
target: [('null', 'italian meal', 'ok', 'authentic')]
output: ['[A] meal [O] authentic [S] great']
sent: ['IT', 'WAS', 'OUR', 'ONLY', 'OPPORTUNITY', 'TO', 'VISIT', 'AND', 'WANTED', 'AN', 'AUTHENTIC', 'ITALIAN', 'MEAL', '.']
counter: {('null', 'italian meal', 'great', 'authentic'): 2, ('null', 'meal', 'great', 'authentic'): 3}
output quads: ['[A] meal [O] authentic [S] great']
multi_path: ['[O] authentic [A] italian meal [S] great', '[O] authentic [S] great [A] meal', '[A] meal [O] authentic [S] great', '[A] meal [S] great [O] authentic', '[S] great [O] authentic [A] italian meal']

task, data: aste rest14
target: [('null', 'pizza', 'great', 'worth the wait')]
output: ['[A] wait [O] worth [S] bad']
sent: ['It', 'took', '100', 'years', 'for', 'Parisi', 'to', 'get', 'around', 'to', 'making', 'pizza', '(', 'at', 'least', 'I', 'do', "n't", 'think', 'they', 'ever', 'made', 'it', 'before', 'this', 'year', ')', '...', 'but', 'it', 'was', 'worth', 'the', 'wait', '.']
counter: {('null', 'wait', 'bad', 'worth'): 4, ('null', 'wait', 'great', 'worth'): 1}
output quads: ['[A] wait [O] worth [S] bad']
multi_path: ['[O] worth [A] wait [S] bad', '[O] worth [S] great [A] wait', '[A] wait [O] worth [S] bad', '[A] wait [S] bad [O] worth', '[S] bad [O] worth [A] wait']

task, data: aste rest14
target: [('null', 'dish', 'great', 'popular'), ('null', 'jerusalem market-style falafel wraps', 'great', 'equally scrumptious'), ('null', 'organic grilled burgers', 'great', 'generously garnished'), ('null', 'organic grilled burgers', 'great', 'popular')]
output: ['[A] beets [O] scrumptious [S] great', '[A] grilled burgers [O] generously garnished [S] great', '[A] grilled burgers [O] popular [S] great', '[A] jerusalem market-style falafel wraps [O] scrumptious [S] great', '[A] mediterranean salads [O] scrumptious [S] great', '[A] walnuts [O] scrumptious [S] great']
sent: ['Generously', 'garnished', ',', 'organic', 'grilled', 'burgers', 'are', 'the', 'most', 'popular', 'dish', ',', 'but', 'the', 'Jerusalem', 'market-style', 'falafel', 'wraps', 'and', 'Mediterranean', 'salads', '--', 'layered', 'with', 'beets', ',', 'goat', 'cheese', 'and', 'walnuts', '--', 'are', 'equally', 'scrumptious', '.']
counter: {('null', 'grilled burgers', 'great', 'generously garnished'): 5, ('null', 'grilled burgers', 'great', 'popular'): 5, ('null', 'jerusalem market-style falafel wraps', 'great', 'scrumptious'): 5, ('null', 'mediterranean salads', 'great', 'scrumptious'): 5, ('null', 'beets', 'great', 'scrumptious'): 5, ('null', 'walnuts', 'great', 'scrumptious'): 5}
output quads: ['[A] grilled burgers [O] generously garnished [S] great', '[A] grilled burgers [O] popular [S] great', '[A] jerusalem market-style falafel wraps [O] scrumptious [S] great', '[A] mediterranean salads [O] scrumptious [S] great', '[A] beets [O] scrumptious [S] great', '[A] walnuts [O] scrumptious [S] great']
multi_path: ['[O] generously garnished [A] grilled burgers [S] great [SSEP] [O] popular [A] grilled burgers [S] great [SSEP] [O] scrumptious [A] jerusalem market-style falafel wraps [S] great [SSEP] [O] scrumptious [A] mediterranean salads [S] great [SSEP] [O] scrumptious [A] beets [S] great [SSEP] [O] scrumptious [A] walnuts [S] great', '[O] generously garnished [S] great [A] grilled burgers [SSEP] [O] popular [S] great [A] grilled burgers [SSEP] [O] scrumptious [S] great [A] jerusalem market-style falafel wraps [SSEP] [O] scrumptious [S] great [A] mediterranean salads [SSEP] [O] scrumptious [S] great [A] beets [SSEP] [O] scrumptious [S] great [A] walnuts', '[A] grilled burgers [O] generously garnished [S] great [SSEP] [A] grilled burgers [O] popular [S] great [SSEP] [A] jerusalem market-style falafel wraps [O] scrumptious [S] great [SSEP] [A] mediterranean salads [O] scrumptious [S] great [SSEP] [A] beets [O] scrumptious [S] great [SSEP] [A] walnuts [O] scrumptious [S] great', '[A] grilled burgers [S] great [O] generously garnished [SSEP] [A] grilled burgers [S] great [O] popular [SSEP] [A] jerusalem market-style falafel wraps [S] great [O] scrumptious [SSEP] [A] mediterranean salads [S] great [O] scrumptious [SSEP] [A] beets [S] great [O] scrumptious [SSEP] [A] walnuts [S] great [O] scrumptious', '[S] great [O] generously garnished [A] grilled burgers [SSEP] [S] great [O] popular [A] grilled burgers [SSEP] [S] great [O] scrumptious [A] jerusalem market-style falafel wraps [SSEP] [S] great [O] scrumptious [A] mediterranean salads [SSEP] [S] great [O] scrumptious [A] beets [SSEP] [S] great [O] scrumptious [A] walnuts']

task, data: aste rest14
target: [('null', 'hint of cocoa', 'great', 'nice'), ('null', 'texture', 'great', 'great'), ('null', 'texture', 'great', 'soft'), ('null', 'texture', 'great', 'velvety')]
output: ['[A] cocoa [O] nice [S] great', '[A] texture [O] great [S] great', '[A] texture [O] soft [S] great', '[A] texture [O] velvety [S] great']
sent: ['Result', '(', 'red', 'velvet', ')', ':', 'Great', 'texture', ',', 'soft', 'and', 'velvety', ',', 'nice', 'hint', 'of', 'cocoa', '.']
counter: {('null', 'texture', 'great', 'great'): 5, ('null', 'texture', 'great', 'soft'): 5, ('null', 'texture', 'great', 'velvety'): 5, ('null', 'cocoa', 'great', 'nice'): 5}
output quads: ['[A] texture [O] great [S] great', '[A] texture [O] soft [S] great', '[A] texture [O] velvety [S] great', '[A] cocoa [O] nice [S] great']
multi_path: ['[O] great [A] texture [S] great [SSEP] [O] soft [A] texture [S] great [SSEP] [O] velvety [A] texture [S] great [SSEP] [O] nice [A] cocoa [S] great', '[O] great [S] great [A] texture [SSEP] [O] soft [S] great [A] texture [SSEP] [O] velvety [S] great [A] texture [SSEP] [O] nice [S] great [A] cocoa', '[A] texture [O] great [S] great [SSEP] [A] texture [O] soft [S] great [SSEP] [A] texture [O] velvety [S] great [SSEP] [A] cocoa [O] nice [S] great', '[A] texture [S] great [O] great [SSEP] [A] texture [S] great [O] soft [SSEP] [A] texture [S] great [O] velvety [SSEP] [A] cocoa [S] great [O] nice', '[S] great [O] great [A] texture [SSEP] [S] great [O] soft [A] texture [SSEP] [S] great [O] velvety [A] texture [SSEP] [S] great [O] nice [A] cocoa']

task, data: aste rest14
target: [('null', 'sales people', 'bad', 'rude'), ('null', 'service', 'bad', 'rude')]
output: ['[A] service [O] rude [S] bad']
sent: ['I', 'love', 'the', 'Little', 'Pie', 'Company', 'as', 'much', 'as', 'anyone', 'else', 'who', 'has', 'written', 'reviews', ',', 'but', 'must', 'discourage', 'anyone', 'from', 'visiting', 'the', 'Grand', 'Central', 'location', 'due', 'to', 'their', 'RUDE', 'service', 'from', 'two', 'sales', 'people', '.']
counter: {('null', 'service', 'bad', 'rude'): 5}
output quads: ['[A] service [O] rude [S] bad']
multi_path: ['[O] rude [A] service [S] bad', '[O] rude [S] bad [A] service', '[A] service [O] rude [S] bad', '[A] service [S] bad [O] rude', '[S] bad [O] rude [A] service']

task, data: aste rest14
target: [('null', 'food', 'great', 'great'), ('null', 'place', 'great', 'not-crowded'), ('null', 'service', 'great', 'great')]
output: ['[A] food [O] great [S] great', '[A] service [O] great [S] great']
sent: ['The', 'other', 'times', 'I', "'ve", 'gone', 'it', "'s", 'romantic', 'date', 'heaven', ',', 'you', 'can', 'walk', 'in', 'get', 'a', 'booth', 'by', 'the', 'windows', ',', 'be', 'treated', 'like', 'a', 'VIP', 'in', 'a', 'not-crowded', 'place', ',', 'with', 'great', 'food', 'and', 'service', '.']
counter: {('null', 'food', 'great', 'great'): 5, ('null', 'service', 'great', 'great'): 5}
output quads: ['[A] food [O] great [S] great', '[A] service [O] great [S] great']
multi_path: ['[O] great [A] food [S] great [SSEP] [O] great [A] service [S] great', '[O] great [S] great [A] food [SSEP] [O] great [S] great [A] service', '[A] food [O] great [S] great [SSEP] [A] service [O] great [S] great', '[A] food [S] great [O] great [SSEP] [A] service [S] great [O] great', '[S] great [O] great [A] food [SSEP] [S] great [O] great [A] service']

task, data: aste rest14
target: [('null', 'food', 'bad', 'nasty high priced'), ('null', 'priced', 'bad', 'high')]
output: ['[A] ghetto scenery [O] cheap [S] great', '[A] priced [O] nasty high [S] bad']
sent: ['If', 'your', 'looking', 'for', 'nasty', 'high', 'priced', 'food', 'with', 'a', 'dash', 'of', 'ghetto', 'scenery', 'cheap', 'BX', 'A', '$', '$', 'this', 'is', 'the', 'place', 'to', 'be', '!', '!']
counter: {('null', 'priced', 'bad', 'nasty high'): 3, ('null', 'ghetto scenery', 'great', 'cheap'): 3, ('null', 'food', 'bad', 'nasty high'): 2, ('null', 'priced', 'bad', 'high'): 1, ('null', 'scenery', 'great', 'cheap'): 1}
output quads: ['[A] priced [O] nasty high [S] bad', '[A] ghetto scenery [O] cheap [S] great']
multi_path: ['[O] nasty high [A] priced [S] bad [SSEP] [O] cheap [A] ghetto scenery [S] great', '[O] nasty high [S] bad [A] priced [SSEP] [O] cheap [S] great [A] ghetto scenery', '[A] food [O] nasty high [S] bad [SSEP] [A] priced [O] high [S] bad', '[A] food [S] bad [O] nasty high [SSEP] [A] scenery [S] great [O] cheap', '[S] bad [O] nasty high [A] priced [SSEP] [S] great [O] cheap [A] ghetto scenery']

task, data: aste rest14
target: [('null', 'big mac', 'bad', 'better than'), ('null', 'new hamburger with special sauce', 'great', 'ok')]
output: ['[A] hamburger with special sauce [O] better [S] great', '[A] hamburger with special sauce [O] ok [S] great']
sent: ['new', 'hamburger', 'with', 'special', 'sauce', 'is', 'ok', '-', 'at', 'least', 'better', 'than', 'big', 'mac', '!']
counter: {('null', 'hamburger with special sauce', 'great', 'ok'): 5, ('null', 'hamburger with special sauce', 'great', 'better'): 5}
output quads: ['[A] hamburger with special sauce [O] ok [S] great', '[A] hamburger with special sauce [O] better [S] great']
multi_path: ['[O] ok [A] hamburger with special sauce [S] great [SSEP] [O] better [A] hamburger with special sauce [S] great', '[O] ok [S] great [A] hamburger with special sauce [SSEP] [O] better [S] great [A] hamburger with special sauce', '[A] hamburger with special sauce [O] ok [S] great [SSEP] [A] hamburger with special sauce [O] better [S] great', '[A] hamburger with special sauce [S] great [O] ok [SSEP] [A] hamburger with special sauce [S] great [O] better', '[S] great [O] ok [A] hamburger with special sauce [SSEP] [S] great [O] better [A] hamburger with special sauce']

task, data: aste rest14
target: [('null', 'pasta', 'great', 'perfectly'), ('null', 'portions', 'great', 'generous'), ('null', 'sauce', 'ok', 'not drowned in')]
output: ['[A] pasta [O] perfectly [S] great', '[A] portions [O] generous [S] great', '[A] sauce [O] not drowned [S] great']
sent: ['Perfectly', 'al', 'dente', 'pasta', ',', 'not', 'drowned', 'in', 'sauce', '--', 'generous', 'portions', '.']
counter: {('null', 'pasta', 'great', 'perfectly'): 5, ('null', 'sauce', 'great', 'not drowned'): 5, ('null', 'portions', 'great', 'generous'): 5}
output quads: ['[A] pasta [O] perfectly [S] great', '[A] sauce [O] not drowned [S] great', '[A] portions [O] generous [S] great']
multi_path: ['[O] perfectly [A] pasta [S] great [SSEP] [O] not drowned [A] sauce [S] great [SSEP] [O] generous [A] portions [S] great', '[O] perfectly [S] great [A] pasta [SSEP] [O] not drowned [S] great [A] sauce [SSEP] [O] generous [S] great [A] portions', '[A] pasta [O] perfectly [S] great [SSEP] [A] sauce [O] not drowned [S] great [SSEP] [A] portions [O] generous [S] great', '[A] pasta [S] great [O] perfectly [SSEP] [A] sauce [S] great [O] not drowned [SSEP] [A] portions [S] great [O] generous', '[S] great [O] perfectly [A] pasta [SSEP] [S] great [O] not drowned [A] sauce [SSEP] [S] great [O] generous [A] portions']

task, data: aste rest14
target: [('null', 'owners', 'great', 'good')]
output: ['[A] owners [O] good [S] great', '[A] place [O] keeper [S] great']
sent: ['To', 'the', 'owners', ';', 'good', 'job', 'guys', ',', 'this', 'place', 'is', 'a', 'keeper', '!']
counter: {('null', 'owners', 'great', 'good'): 5, ('null', 'place', 'great', 'good'): 2, ('null', 'place', 'great', 'keeper'): 3}
output quads: ['[A] owners [O] good [S] great', '[A] place [O] keeper [S] great']
multi_path: ['[O] good [A] owners [S] great [SSEP] [O] good [A] place [S] great', '[O] good [S] great [A] owners [SSEP] [O] good [S] great [A] place', '[A] owners [O] good [S] great [SSEP] [A] place [O] keeper [S] great', '[A] owners [S] great [O] good [SSEP] [A] place [S] great [O] keeper', '[S] great [O] good [A] owners [SSEP] [S] great [O] keeper [A] place']

task, data: aste rest14
target: [('null', 'meal', 'great', 'perfect'), ('null', 'meal', 'great', 'quick')]
output: ['[A] meal [O] quick [S] great']
sent: ['perfect', 'for', 'a', 'quick', 'meal', '.']
counter: {('null', 'meal', 'great', 'quick'): 5}
output quads: ['[A] meal [O] quick [S] great']
multi_path: ['[O] quick [A] meal [S] great', '[O] quick [S] great [A] meal', '[A] meal [O] quick [S] great', '[A] meal [S] great [O] quick', '[S] great [O] quick [A] meal']

task, data: aste rest14
target: [('null', 'food', 'great', 'authentic')]
output: ['[A] food [O] authentic [S] great', '[A] staff [O] authentic [S] great']
sent: ['The', 'staff', 'is', '100', '%', 'Italian', 'and', 'the', 'food', 'is', 'as', 'authentic', 'as', 'it', 'gets', '.']
counter: {('null', 'staff', 'great', 'authentic'): 5, ('null', 'food', 'great', 'authentic'): 5}
output quads: ['[A] staff [O] authentic [S] great', '[A] food [O] authentic [S] great']
multi_path: ['[O] authentic [A] staff [S] great [SSEP] [O] authentic [A] food [S] great', '[O] authentic [S] great [A] staff [SSEP] [O] authentic [S] great [A] food', '[A] staff [O] authentic [S] great [SSEP] [A] food [O] authentic [S] great', '[A] staff [S] great [O] authentic [SSEP] [A] food [S] great [O] authentic', '[S] great [O] authentic [A] staff [SSEP] [S] great [O] authentic [A] food']

task, data: aste rest14
target: [('null', 'sushi lunch', 'great', 'good'), ('null', 'sushi lunch', 'great', 'quick')]
output: ['[A] sushi lunch [O] quick [S] great']
sent: ['Good', 'for', 'a', 'quick', 'sushi', 'lunch', '.']
counter: {('null', 'sushi lunch', 'great', 'quick'): 5}
output quads: ['[A] sushi lunch [O] quick [S] great']
multi_path: ['[O] quick [A] sushi lunch [S] great', '[O] quick [S] great [A] sushi lunch', '[A] sushi lunch [O] quick [S] great', '[A] sushi lunch [S] great [O] quick', '[S] great [O] quick [A] sushi lunch']

task, data: aste rest14
target: [('null', 'service', 'bad', 'dreadfully slow')]
output: ['[A] service [O] slow [S] bad']
sent: ['The', 'service', 'was', 'dreadfully', 'slow', '(', 'the', 'place', 'was', 'only', 'half', 'full', ')', 'and', 'a', 'smile', 'would', 'have', 'been', 'nice', '...']
counter: {('null', 'service', 'bad', 'slow'): 5, ('null', 'place', 'bad', 'full'): 1}
output quads: ['[A] service [O] slow [S] bad']
multi_path: ['[O] slow [A] service [S] bad', '[O] slow [S] bad [A] service', '[A] service [O] slow [S] bad', '[A] service [S] bad [O] slow [SSEP] [A] place [S] bad [O] full', '[S] bad [O] slow [A] service']

task, data: aste rest14
target: [('null', 'meal', 'great', 'excellent')]
output: ['[A] braised lamb shank with mashed potatoes [O] excellent [S] great', '[A] meal [O] excellent [S] great']
sent: ['I', 'went', 'this', 'past', 'Saturday', 'and', 'had', 'a', 'excellent', 'meal', 'of', 'consisting', 'of', 'a', 'braised', 'lamb', 'shank', 'with', 'mashed', 'potatoes', '.']
counter: {('null', 'meal', 'great', 'excellent'): 5, ('null', 'braised lamb shank with mashed potatoes', 'great', 'excellent'): 5}
output quads: ['[A] meal [O] excellent [S] great', '[A] braised lamb shank with mashed potatoes [O] excellent [S] great']
multi_path: ['[O] excellent [A] meal [S] great [SSEP] [O] excellent [A] braised lamb shank with mashed potatoes [S] great', '[O] excellent [S] great [A] meal [SSEP] [O] excellent [S] great [A] braised lamb shank with mashed potatoes', '[A] meal [O] excellent [S] great [SSEP] [A] braised lamb shank with mashed potatoes [O] excellent [S] great', '[A] meal [S] great [O] excellent [SSEP] [A] braised lamb shank with mashed potatoes [S] great [O] excellent', '[S] great [O] excellent [A] meal [SSEP] [S] great [O] excellent [A] braised lamb shank with mashed potatoes']

task, data: aste rest14
target: [('null', 'french fries -- with the kalmata dip', 'great', 'terrific')]
output: ['[A] french fries [O] terrific [S] great', '[A] kalmata dip [O] terrific [S] great']
sent: ['The', 'french', 'fries', '--', 'with', 'the', 'kalmata', 'dip', 'were', 'terrific', '!']
counter: {('null', 'french fries', 'great', 'terrific'): 5, ('null', 'kalmata dip', 'great', 'terrific'): 5}
output quads: ['[A] french fries [O] terrific [S] great', '[A] kalmata dip [O] terrific [S] great']
multi_path: ['[O] terrific [A] french fries [S] great [SSEP] [O] terrific [A] kalmata dip [S] great', '[O] terrific [S] great [A] french fries [SSEP] [O] terrific [S] great [A] kalmata dip', '[A] french fries [O] terrific [S] great [SSEP] [A] kalmata dip [O] terrific [S] great', '[A] french fries [S] great [O] terrific [SSEP] [A] kalmata dip [S] great [O] terrific', '[S] great [O] terrific [A] french fries [SSEP] [S] great [O] terrific [A] kalmata dip']

task, data: aste rest14
target: [('null', 'boutique selection of wines', 'ok', 'wide')]
output: ['[A] selection of wines [O] boutique [S] great', '[A] variety [O] wide [S] great']
sent: ['The', 'boutique', 'selection', 'of', 'wines', 'covers', 'a', 'wide', 'variety', 'without', 'being', 'imposeing', '.']
counter: {('null', 'selection of wines', 'great', 'boutique'): 5, ('null', 'variety', 'great', 'wide'): 5}
output quads: ['[A] selection of wines [O] boutique [S] great', '[A] variety [O] wide [S] great']
multi_path: ['[O] boutique [A] selection of wines [S] great [SSEP] [O] wide [A] variety [S] great', '[O] boutique [S] great [A] selection of wines [SSEP] [O] wide [S] great [A] variety', '[A] selection of wines [O] boutique [S] great [SSEP] [A] variety [O] wide [S] great', '[A] selection of wines [S] great [O] boutique [SSEP] [A] variety [S] great [O] wide', '[S] great [O] boutique [A] selection of wines [SSEP] [S] great [O] wide [A] variety']

task, data: aste rest14
target: [('null', 'assortment of wraps', 'great', 'great'), ('null', 'traditional mediterranean fare', 'ok', 'great')]
output: ['[A] assortment of wraps [O] great [S] great']
sent: ['They', 'also', 'have', 'a', 'great', 'assortment', 'of', 'wraps', 'if', 'your', 'not', 'in', 'the', 'mood', 'for', 'traditional', 'Mediterranean', 'fare', '.']
counter: {('null', 'assortment of wraps', 'great', 'great'): 5}
output quads: ['[A] assortment of wraps [O] great [S] great']
multi_path: ['[O] great [A] assortment of wraps [S] great', '[O] great [S] great [A] assortment of wraps', '[A] assortment of wraps [O] great [S] great', '[A] assortment of wraps [S] great [O] great', '[S] great [O] great [A] assortment of wraps']

task, data: aste rest14
target: [('null', 'cheese', 'great', 'delicious'), ('null', 'cheese baclava', 'great', 'delicious'), ('null', 'falafel', 'great', 'delicious'), ('null', 'fish', 'great', 'delicious'), ('null', 'fooood', 'great', 'delicious'), ('null', 'fresh veggies', 'great', 'delicious'), ('null', 'fresh veggies', 'great', 'fresh'), ('null', 'lamb kebabs', 'great', 'delicious'), ('null', 'middle eastern spreads', 'great', 'delicious'), ('null', 'rice', 'great', 'delicious'), ('null', 'rice medley', 'great', 'delicious'), ('null', 'root vegetables', 'great', 'delicious'), ('null', 'soup', 'great', 'delicious'), ('null', 'spinach thing', 'great', 'delicious')]
output: ['[A] cheese [O] delicious [S] great', '[A] cheese baclava [O] delicious [S] great', '[A] falafel [O] delicious [S] great', '[A] fish [O] delicious [S] great', '[A] lamb kebabs [O] delicious [S] great', '[A] middle eastern spreads [O] delicious [S] great', '[A] rice [O] delicious [S] great', '[A] rice medley [O] delicious [S] great', '[A] veggies [O] fresh [S] great']
sent: ['Fresh', 'veggies', ',', 'all', 'sorts', 'of', 'middle', 'eastern', 'spreads', ',', 'cheese', 'and', 'falafel', ',', 'soup', ',', 'fish', ',', 'rice', ',', 'root', 'vegetables', ',', 'a', 'rice', 'medley', ',', 'some', 'spinach', 'thing', ',', 'lamb', 'kebabs', ',', 'cheese', 'baclava', '...', 'soooo', 'much', 'fooood', ',', 'and', 'all', 'of', 'it', 'delicious', '.']
counter: {('null', 'veggies', 'great', 'fresh'): 5, ('null', 'middle eastern spreads', 'great', 'delicious'): 4, ('null', 'cheese', 'great', 'delicious'): 5, ('null', 'falafel', 'great', 'delicious'): 5, ('null', 'fish', 'great', 'delicious'): 3, ('null', 'rice', 'great', 'delicious'): 5, ('null', 'rice medley', 'great', 'delicious'): 5, ('null', 'lamb kebabs', 'great', 'delicious'): 5, ('null', 'cheese baclava', 'great', 'delicious'): 5, ('null', 'middle eastern spreads', 'great', 'fresh'): 1, ('null', 'fish', 'great', 'fresh'): 2}
output quads: ['[A] veggies [O] fresh [S] great', '[A] middle eastern spreads [O] delicious [S] great', '[A] cheese [O] delicious [S] great', '[A] falafel [O] delicious [S] great', '[A] fish [O] delicious [S] great', '[A] rice [O] delicious [S] great', '[A] rice medley [O] delicious [S] great', '[A] lamb kebabs [O] delicious [S] great', '[A] cheese baclava [O] delicious [S] great']
multi_path: ['[O] fresh [A] veggies [S] great [SSEP] [O] delicious [A] middle eastern spreads [S] great [SSEP] [O] delicious [A] cheese [S] great [SSEP] [O] delicious [A] falafel [S] great [SSEP] [O] delicious [A] fish [S] great [SSEP] [O] delicious [A] rice [S] great [SSEP] [O] delicious [A] rice medley [S] great [SSEP] [O] delicious [A] lamb kebabs [S] great [SSEP] [O] delicious [A] cheese baclava [S] great', '[O] fresh [S] great [A] veggies [SSEP] [O] delicious [S] great [A] middle eastern spreads [SSEP] [O] delicious [S] great [A] cheese [SSEP] [O] delicious [S] great [A] falafel [SSEP] [O] delicious [S] great [A] fish [SSEP] [O] delicious [S] great [A] rice [SSEP] [O] delicious [S] great [A] rice medley [SSEP] [O] delicious [S] great [A] lamb kebabs [SSEP] [O] delicious [S] great [A] cheese baclava', '[A] veggies [O] fresh [S] great [SSEP] [A] middle eastern spreads [O] fresh [S] great [SSEP] [A] cheese [O] delicious [S] great [SSEP] [A] falafel [O] delicious [S] great [SSEP] [A] fish [O] fresh [S] great [SSEP] [A] rice [O] delicious [S] great [SSEP] [A] rice medley [O] delicious [S] great [SSEP] [A] lamb kebabs [O] delicious [S] great [SSEP] [A] cheese baclava [O] delicious [S] great', '[A] veggies [S] great [O] fresh [SSEP] [A] middle eastern spreads [S] great [O] delicious [SSEP] [A] cheese [S] great [O] delicious [SSEP] [A] falafel [S] great [O] delicious [SSEP] [A] fish [S] great [O] fresh [SSEP] [A] rice [S] great [O] delicious [SSEP] [A] rice medley [S] great [O] delicious [SSEP] [A] lamb kebabs [S] great [O] delicious [SSEP] [A] cheese baclava [S] great [O] delicious', '[S] great [O] fresh [A] veggies [SSEP] [S] great [O] delicious [A] middle eastern spreads [SSEP] [S] great [O] delicious [A] cheese [SSEP] [S] great [O] delicious [A] falafel [SSEP] [S] great [O] delicious [A] fish [SSEP] [S] great [O] delicious [A] rice [SSEP] [S] great [O] delicious [A] rice medley [SSEP] [S] great [O] delicious [A] lamb kebabs [SSEP] [S] great [O] delicious [A] cheese baclava']

task, data: aste rest14
target: [('null', 'bar menu', 'bad', 'disappointingly'), ('null', 'saketini', 'great', 'wonderful')]
output: ['[A] bar menu [O] taken off [S] bad', '[A] saketini [O] wonderful [S] bad']
sent: ['Disappointingly', ',', 'their', 'wonderful', 'Saketini', 'has', 'been', 'taken', 'off', 'the', 'bar', 'menu', '.']
counter: {('null', 'saketini', 'bad', 'wonderful'): 5, ('null', 'bar menu', 'bad', 'taken off'): 3, ('null', 'bar menu', 'bad', 'disappointingly'): 2}
output quads: ['[A] saketini [O] wonderful [S] bad', '[A] bar menu [O] taken off [S] bad']
multi_path: ['[O] wonderful [A] saketini [S] bad [SSEP] [O] taken off [A] bar menu [S] bad', '[O] wonderful [S] bad [A] saketini [SSEP] [O] taken off [S] bad [A] bar menu', '[A] saketini [O] wonderful [S] bad [SSEP] [A] bar menu [O] disappointingly [S] bad', '[A] saketini [S] bad [O] wonderful [SSEP] [A] bar menu [S] bad [O] disappointingly', '[S] bad [O] wonderful [A] saketini [SSEP] [S] bad [O] taken off [A] bar menu']

task, data: aste rest14
target: [('null', 'happy hour', 'great', 'cheap')]
output: ['[A] atmosphere [O] not reflect [S] bad', '[A] happy hour [O] cheap [S] great', '[A] service [O] not reflect [S] bad']
sent: ['The', 'happy', 'hour', 'is', 'so', 'cheap', ',', 'but', 'that', 'does', 'not', 'reflect', 'the', 'service', 'or', 'the', 'atmosphere', '.']
counter: {('null', 'happy hour', 'great', 'cheap'): 5, ('null', 'service', 'bad', 'not reflect'): 4, ('null', 'atmosphere', 'bad', 'not reflect'): 4, ('null', 'service', 'bad', 'does not reflect'): 1, ('null', 'atmosphere', 'bad', 'does not reflect'): 1}
output quads: ['[A] happy hour [O] cheap [S] great', '[A] service [O] not reflect [S] bad', '[A] atmosphere [O] not reflect [S] bad']
multi_path: ['[O] cheap [A] happy hour [S] great [SSEP] [O] not reflect [A] service [S] bad [SSEP] [O] not reflect [A] atmosphere [S] bad', '[O] cheap [S] great [A] happy hour [SSEP] [O] not reflect [S] bad [A] service [SSEP] [O] not reflect [S] bad [A] atmosphere', '[A] happy hour [O] cheap [S] great [SSEP] [A] service [O] does not reflect [S] bad [SSEP] [A] atmosphere [O] does not reflect [S] bad', '[A] happy hour [S] great [O] cheap [SSEP] [A] service [S] bad [O] not reflect [SSEP] [A] atmosphere [S] bad [O] not reflect', '[S] great [O] cheap [A] happy hour [SSEP] [S] bad [O] not reflect [A] service [SSEP] [S] bad [O] not reflect [A] atmosphere']

task, data: aste rest14
target: [('null', 'atmosphere', 'great', 'above'), ('null', 'quaility', 'great', 'above')]
output: ['[A] atmosphere [O] nice [S] great']
sent: ['With', 'all', 'the', 'mundane', 'or', 'mediocre', 'places', 'on', '8th', 'avenue', 'it', 'is', 'nice', 'to', 'have', 'one', 'that', 'is', 'a', 'step', 'above', 'in', 'quaility', 'and', 'atmosphere', '.']
counter: {('null', 'atmosphere', 'great', 'nice'): 5}
output quads: ['[A] atmosphere [O] nice [S] great']
multi_path: ['[O] nice [A] atmosphere [S] great', '[O] nice [S] great [A] atmosphere', '[A] atmosphere [O] nice [S] great', '[A] atmosphere [S] great [O] nice', '[S] great [O] nice [A] atmosphere']

task, data: aste rest14
target: [('null', 'prices', 'great', 'dirt-cheap'), ('null', 'space', 'bad', 'quick'), ('null', 'space', 'bad', 'tasty'), ('null', 'treats', 'great', 'tasty')]
output: ['[A] prices [O] dirt-cheap [S] great', '[A] treats [O] quick [S] great', '[A] treats [O] tasty [S] great']
sent: ['A', 'mix', 'of', 'students', 'and', 'area', 'residents', 'crowd', 'into', 'this', 'narrow', ',', 'barely', 'there', 'space', 'for', 'its', 'quick', ',', 'tasty', 'treats', 'at', 'dirt-cheap', 'prices', '.']
counter: {('null', 'treats', 'great', 'quick'): 5, ('null', 'treats', 'great', 'tasty'): 5, ('null', 'prices', 'great', 'dirt-cheap'): 5, ('null', 'space', 'great', 'narrow'): 2}
output quads: ['[A] treats [O] quick [S] great', '[A] treats [O] tasty [S] great', '[A] prices [O] dirt-cheap [S] great']
multi_path: ['[O] quick [A] treats [S] great [SSEP] [O] tasty [A] treats [S] great [SSEP] [O] dirt-cheap [A] prices [S] great', '[O] quick [S] great [A] treats [SSEP] [O] tasty [S] great [A] treats [SSEP] [O] dirt-cheap [S] great [A] prices', '[A] space [O] narrow [S] great [SSEP] [A] treats [O] quick [S] great [SSEP] [A] treats [O] tasty [S] great [SSEP] [A] prices [O] dirt-cheap [S] great', '[A] space [S] great [O] narrow [SSEP] [A] treats [S] great [O] quick [SSEP] [A] treats [S] great [O] tasty [SSEP] [A] prices [S] great [O] dirt-cheap', '[S] great [O] quick [A] treats [SSEP] [S] great [O] tasty [A] treats [SSEP] [S] great [O] dirt-cheap [A] prices']

task, data: aste rest14
target: [('null', 'menu', 'ok', 'typical french'), ('null', 'menu', 'ok', 'varied')]
output: ['[A] menu [O] typical [S] great', '[A] menu [O] varied [S] great']
sent: ['Give', 'it', 'a', 'try', ',', 'menu', 'is', 'typical', 'French', 'but', 'varied', '.']
counter: {('null', 'menu', 'great', 'typical'): 5, ('null', 'menu', 'great', 'varied'): 5}
output quads: ['[A] menu [O] typical [S] great', '[A] menu [O] varied [S] great']
multi_path: ['[O] typical [A] menu [S] great [SSEP] [O] varied [A] menu [S] great', '[O] typical [S] great [A] menu [SSEP] [O] varied [S] great [A] menu', '[A] menu [O] typical [S] great [SSEP] [A] menu [O] varied [S] great', '[A] menu [S] great [O] typical [SSEP] [A] menu [S] great [O] varied', '[S] great [O] typical [A] menu [SSEP] [S] great [O] varied [A] menu']

task, data: aste rest14
target: [('null', 'attitude', 'great', 'positive'), ('null', 'food', 'great', 'top quality')]
output: ['[A] food [O] top quality [S] bad']
sent: ['the', 'negative', 'reviews', 'on', 'city', 'search', 'are', 'probably', 'from', 'jealous', 'competing', 'restaurants', 'who', 'realize', 'they', 'ca', "n't", 'compete', 'with', 'Temple', "'s", 'entire', 'positive', 'attitude', 'about', 'the', 'proper', 'way', 'to', 'treat', 'their', 'customers', 'and', 'deliver', 'top', 'quality', 'food', '.']
counter: {('null', 'food', 'bad', 'top quality'): 4, ('null', 'quality', 'bad', 'top'): 1}
output quads: ['[A] food [O] top quality [S] bad']
multi_path: ['[O] top quality [A] food [S] bad', '[O] top quality [S] bad [A] food', '[A] food [O] top quality [S] bad', '[A] food [S] bad [O] top quality', '[S] bad [O] top [A] quality']

task, data: aste rest14
target: [('null', 'food', 'great', 'excellent'), ('null', 'price', 'great', 'good')]
output: ['[A] price [O] good [S] great', '[A] quality [O] excellent [S] great']
sent: ['Food', 'is', 'excellent', 'quality', 'for', 'a', 'good', 'restaurant', 'price', '.']
counter: {('null', 'quality', 'great', 'excellent'): 5, ('null', 'price', 'great', 'good'): 5}
output quads: ['[A] quality [O] excellent [S] great', '[A] price [O] good [S] great']
multi_path: ['[O] excellent [A] quality [S] great [SSEP] [O] good [A] price [S] great', '[O] excellent [S] great [A] quality [SSEP] [O] good [S] great [A] price', '[A] quality [O] excellent [S] great [SSEP] [A] price [O] good [S] great', '[A] quality [S] great [O] excellent [SSEP] [A] price [S] great [O] good', '[S] great [O] excellent [A] quality [SSEP] [S] great [O] good [A] price']

task, data: aste rest14
target: [('null', 'burrito', 'great', 'gigantic'), ('null', 'tacos', 'great', 'gigantic')]
output: ['[A] burrito [O] gigantic [S] great', '[A] dessert [O] gigantic [S] great', '[A] margarita [O] gigantic [S] great', '[A] tacos [O] gigantic [S] great']
sent: ['for', 'about', 'eleven', 'bucks', 'you', 'get', 'a', 'gigantic', 'burrito', '(', 'or', 'tacos', ')', ',', 'margarita', ',', 'and', 'dessert', '.']
counter: {('null', 'burrito', 'great', 'gigantic'): 5, ('null', 'tacos', 'great', 'gigantic'): 5, ('null', 'margarita', 'great', 'gigantic'): 5, ('null', 'dessert', 'great', 'gigantic'): 5}
output quads: ['[A] burrito [O] gigantic [S] great', '[A] tacos [O] gigantic [S] great', '[A] margarita [O] gigantic [S] great', '[A] dessert [O] gigantic [S] great']
multi_path: ['[O] gigantic [A] burrito [S] great [SSEP] [O] gigantic [A] tacos [S] great [SSEP] [O] gigantic [A] margarita [S] great [SSEP] [O] gigantic [A] dessert [S] great', '[O] gigantic [S] great [A] burrito [SSEP] [O] gigantic [S] great [A] tacos [SSEP] [O] gigantic [S] great [A] margarita [SSEP] [O] gigantic [S] great [A] dessert', '[A] burrito [O] gigantic [S] great [SSEP] [A] tacos [O] gigantic [S] great [SSEP] [A] margarita [O] gigantic [S] great [SSEP] [A] dessert [O] gigantic [S] great', '[A] burrito [S] great [O] gigantic [SSEP] [A] tacos [S] great [O] gigantic [SSEP] [A] margarita [S] great [O] gigantic [SSEP] [A] dessert [S] great [O] gigantic', '[S] great [O] gigantic [A] burrito [SSEP] [S] great [O] gigantic [A] tacos [SSEP] [S] great [O] gigantic [A] margarita [SSEP] [S] great [O] gigantic [A] dessert']

task, data: aste rest14
target: [('null', 'space', 'ok', 'traditional')]
output: ['[A] space [O] traditional [S] great']
sent: ['The', 'space', 'is', 'traditional', 'in', 'feel', '.']
counter: {('null', 'space', 'great', 'traditional'): 3, ('null', 'space', 'ok', 'traditional'): 2}
output quads: ['[A] space [O] traditional [S] great']
multi_path: ['[O] traditional [A] space [S] great', '[O] traditional [S] great [A] space', '[A] space [O] traditional [S] ok', '[A] space [S] great [O] traditional', '[S] ok [O] traditional [A] space']

task, data: aste rest14
target: [('null', 'food', 'bad', 'mediocre'), ('null', 'interior', 'bad', 'average'), ('null', 'interior', 'bad', 'small'), ('null', 'owners', 'bad', 'rude'), ('null', 'owners', 'bad', 'snotty'), ('null', 'owners', 'bad', 'unpleasantries')]
output: ['[A] food [O] mediocre [S] ok', '[A] interior [O] average [S] bad', '[A] interior [O] small [S] bad', '[A] owners [O] rude [S] bad', '[A] owners [O] snotty [S] bad']
sent: ['the', 'food', 'was', 'mediocre', 'to', 'be', 'kind', '-', 'the', 'interior', 'is', 'small', 'and', 'average', '-', 'the', 'owners', 'are', 'a', 'tag-team', 'of', 'unpleasantries', '-', 'so', 'rude', 'and', 'snotty', 'i', 'actually', 'let', 'out', 'a', 'hearty', 'guffaw', 'whilst', 'dining', '.']
counter: {('null', 'food', 'ok', 'mediocre'): 5, ('null', 'interior', 'bad', 'small'): 5, ('null', 'interior', 'bad', 'average'): 5, ('null', 'owners', 'bad', 'rude'): 5, ('null', 'owners', 'bad', 'snotty'): 5}
output quads: ['[A] food [O] mediocre [S] ok', '[A] interior [O] small [S] bad', '[A] interior [O] average [S] bad', '[A] owners [O] rude [S] bad', '[A] owners [O] snotty [S] bad']
multi_path: ['[O] mediocre [A] food [S] ok [SSEP] [O] small [A] interior [S] bad [SSEP] [O] average [A] interior [S] bad [SSEP] [O] rude [A] owners [S] bad [SSEP] [O] snotty [A] owners [S] bad', '[O] mediocre [S] ok [A] food [SSEP] [O] small [S] bad [A] interior [SSEP] [O] average [S] bad [A] interior [SSEP] [O] rude [S] bad [A] owners [SSEP] [O] snotty [S] bad [A] owners', '[A] food [O] mediocre [S] ok [SSEP] [A] interior [O] small [S] bad [SSEP] [A] interior [O] average [S] bad [SSEP] [A] owners [O] rude [S] bad [SSEP] [A] owners [O] snotty [S] bad', '[A] food [S] ok [O] mediocre [SSEP] [A] interior [S] bad [O] small [SSEP] [A] interior [S] bad [O] average [SSEP] [A] owners [S] bad [O] rude [SSEP] [A] owners [S] bad [O] snotty', '[S] ok [O] mediocre [A] food [SSEP] [S] bad [O] small [A] interior [SSEP] [S] bad [O] average [A] interior [SSEP] [S] bad [O] rude [A] owners [SSEP] [S] bad [O] snotty [A] owners']

task, data: aste rest14
target: [('null', 'food', 'great', 'great'), ('null', 'service', 'great', 'good'), ('null', 'value', 'great', 'good'), ('null', 'wait', 'great', 'never')]
output: ['[A] food [O] great [S] great', '[A] service [O] good [S] great', '[A] value [O] good [S] great']
sent: ['Good', 'service', ',', 'great', 'food', ',', 'good', 'value', ',', 'and', 'never', 'have', 'to', 'wait', 'in', 'line', '!']
counter: {('null', 'service', 'great', 'good'): 5, ('null', 'food', 'great', 'great'): 5, ('null', 'value', 'great', 'good'): 5}
output quads: ['[A] service [O] good [S] great', '[A] food [O] great [S] great', '[A] value [O] good [S] great']
multi_path: ['[O] good [A] service [S] great [SSEP] [O] great [A] food [S] great [SSEP] [O] good [A] value [S] great', '[O] good [S] great [A] service [SSEP] [O] great [S] great [A] food [SSEP] [O] good [S] great [A] value', '[A] service [O] good [S] great [SSEP] [A] food [O] great [S] great [SSEP] [A] value [O] good [S] great', '[A] service [S] great [O] good [SSEP] [A] food [S] great [O] great [SSEP] [A] value [S] great [O] good', '[S] great [O] good [A] service [SSEP] [S] great [O] great [A] food [SSEP] [S] great [O] good [A] value']

task, data: aste rest14
target: [('null', 'egg mcmuffin sandwich', 'ok', 'available'), ('null', 'hot cakes', 'ok', 'available')]
output: ['[A] egg mcmuffin sandwich [O] available [S] great', '[A] hot cakes [O] available [S] great']
sent: ['Offerings', 'like', 'hot', 'cakes', 'and', 'the', 'Egg', 'McMuffin', 'sandwich', 'are', 'available', 'for', 'breakfast', '.']
counter: {('null', 'hot cakes', 'great', 'available'): 5, ('null', 'egg mcmuffin sandwich', 'great', 'available'): 5}
output quads: ['[A] hot cakes [O] available [S] great', '[A] egg mcmuffin sandwich [O] available [S] great']
multi_path: ['[O] available [A] hot cakes [S] great [SSEP] [O] available [A] egg mcmuffin sandwich [S] great', '[O] available [S] great [A] hot cakes [SSEP] [O] available [S] great [A] egg mcmuffin sandwich', '[A] hot cakes [O] available [S] great [SSEP] [A] egg mcmuffin sandwich [O] available [S] great', '[A] hot cakes [S] great [O] available [SSEP] [A] egg mcmuffin sandwich [S] great [O] available', '[S] great [O] available [A] hot cakes [SSEP] [S] great [O] available [A] egg mcmuffin sandwich']

task, data: aste rest14
target: [('null', 'bartender', 'great', 'superb'), ('null', 'drinks', 'great', 'superb'), ('null', 'music', 'great', 'fascinating')]
output: ['[A] music [O] fascinating [S] great']
sent: ['The', 'music', 'was', 'fascinating', ',', 'but', 'left', 'room', 'for', 'conversation', ',', 'and', 'the', 'bartender', 'made', 'superb', 'drinks', '.']
counter: {('null', 'music', 'great', 'fascinating'): 5, ('null', 'drinks', 'great', 'superb'): 1, ('null', 'drinks', 'ok', 'superb'): 2, ('null', 'room', 'ok', 'superb'): 1, ('null', 'room', 'ok', 'left'): 1, ('null', 'bartender', 'great', 'superb'): 1}
output quads: ['[A] music [O] fascinating [S] great']
multi_path: ['[O] fascinating [A] music [S] great [SSEP] [O] superb [A] drinks [S] great', '[O] fascinating [S] great [A] music [SSEP] [O] superb [S] ok [A] drinks', '[A] music [O] fascinating [S] great [SSEP] [A] room [O] superb [S] ok', '[A] music [S] great [O] fascinating [SSEP] [A] room [S] ok [O] left [SSEP] [A] bartender [S] great [O] superb', '[S] great [O] fascinating [A] music [SSEP] [S] ok [O] superb [A] drinks']

task, data: aste rest14
target: [('null', 'ice drink', 'great', 'refreshing')]
output: ['[A] ice drink [O] refreshing [S] great', '[A] noodle dishes [O] rarely exceed $ 5 [S] great', '[A] rice dishes [O] rarely exceed $ 5 [S] great']
sent: ['rice', 'dishes', 'and', 'noodle', 'dishes', 'rarely', 'exceed', '$', '5', 'and', 'add', 'on', 'a', 'refreshing', 'ice', 'drink', 'for', '$', '2', 'and', 'you', "'re", 'set', 'for', 'the', 'night', '!']
counter: {('null', 'rice dishes', 'great', 'rarely exceed $ 5'): 5, ('null', 'noodle dishes', 'great', 'rarely exceed $ 5'): 5, ('null', 'ice drink', 'great', 'refreshing'): 5}
output quads: ['[A] rice dishes [O] rarely exceed $ 5 [S] great', '[A] noodle dishes [O] rarely exceed $ 5 [S] great', '[A] ice drink [O] refreshing [S] great']
multi_path: ['[O] rarely exceed $ 5 [A] rice dishes [S] great [SSEP] [O] rarely exceed $ 5 [A] noodle dishes [S] great [SSEP] [O] refreshing [A] ice drink [S] great', '[O] rarely exceed $ 5 [S] great [A] rice dishes [SSEP] [O] rarely exceed $ 5 [S] great [A] noodle dishes [SSEP] [O] refreshing [S] great [A] ice drink', '[A] rice dishes [O] rarely exceed $ 5 [S] great [SSEP] [A] noodle dishes [O] rarely exceed $ 5 [S] great [SSEP] [A] ice drink [O] refreshing [S] great', '[A] rice dishes [S] great [O] rarely exceed $ 5 [SSEP] [A] noodle dishes [S] great [O] rarely exceed $ 5 [SSEP] [A] ice drink [S] great [O] refreshing', '[S] great [O] rarely exceed $ 5 [A] rice dishes [SSEP] [S] great [O] rarely exceed $ 5 [A] noodle dishes [SSEP] [S] great [O] refreshing [A] ice drink']

task, data: aste rest14
target: [('null', 'bistro menu', 'ok', 'unexpected'), ('null', 'dishes', 'great', 'creative'), ('null', 'fettuccine with grilled seafood in a rosemary-orange sauce', 'great', 'unexpected'), ('null', 'king crab salad with passion fruit vinaigrette', 'great', 'creative')]
output: ['[A] bistro menu [O] predictable [S] great', '[A] dishes [O] creative [S] great', '[A] fettuccine with grilled seafood in a rosemary-orange sauce [O] unexpected [S] great', '[A] king crab salad with passion fruit vinaigrette [O] creative [S] great']
sent: ['Creative', 'dishes', 'like', 'king', 'crab', 'salad', 'with', 'passion', 'fruit', 'vinaigrette', 'and', 'fettuccine', 'with', 'grilled', 'seafood', 'in', 'a', 'rosemary-orange', 'sauce', 'are', 'unexpected', 'elements', 'on', 'an', 'otherwise', 'predictable', 'bistro', 'menu', '.']
counter: {('null', 'dishes', 'great', 'creative'): 5, ('null', 'king crab salad with passion fruit vinaigrette', 'great', 'unexpected'): 2, ('null', 'fettuccine with grilled seafood in a rosemary-orange sauce', 'great', 'unexpected'): 5, ('null', 'bistro menu', 'great', 'predictable'): 5, ('null', 'king crab salad with passion fruit vinaigrette', 'great', 'creative'): 3}
output quads: ['[A] dishes [O] creative [S] great', '[A] fettuccine with grilled seafood in a rosemary-orange sauce [O] unexpected [S] great', '[A] bistro menu [O] predictable [S] great', '[A] king crab salad with passion fruit vinaigrette [O] creative [S] great']
multi_path: ['[O] creative [A] dishes [S] great [SSEP] [O] unexpected [A] king crab salad with passion fruit vinaigrette [S] great [SSEP] [O] unexpected [A] fettuccine with grilled seafood in a rosemary-orange sauce [S] great [SSEP] [O] predictable [A] bistro menu [S] great', '[O] creative [S] great [A] dishes [SSEP] [O] unexpected [S] great [A] king crab salad with passion fruit vinaigrette [SSEP] [O] unexpected [S] great [A] fettuccine with grilled seafood in a rosemary-orange sauce [SSEP] [O] predictable [S] great [A] bistro menu', '[A] dishes [O] creative [S] great [SSEP] [A] king crab salad with passion fruit vinaigrette [O] creative [S] great [SSEP] [A] fettuccine with grilled seafood in a rosemary-orange sauce [O] unexpected [S] great [SSEP] [A] bistro menu [O] predictable [S] great', '[A] dishes [S] great [O] creative [SSEP] [A] king crab salad with passion fruit vinaigrette [S] great [O] creative [SSEP] [A] fettuccine with grilled seafood in a rosemary-orange sauce [S] great [O] unexpected [SSEP] [A] bistro menu [S] great [O] predictable', '[S] great [O] creative [A] dishes [SSEP] [S] great [O] creative [A] king crab salad with passion fruit vinaigrette [SSEP] [S] great [O] unexpected [A] fettuccine with grilled seafood in a rosemary-orange sauce [SSEP] [S] great [O] predictable [A] bistro menu']

task, data: aste rest14
target: [('null', 'dishes', 'great', 'tried-and-true'), ('null', 'macadamia-crusted mahi mahi', 'great', 'tried-and-true'), ('null', 'recipes', 'great', 'tried-and-true'), ('null', 'sweet honey-mustard beef short ribs', 'great', 'sweet'), ('null', 'sweet honey-mustard beef short ribs', 'great', 'tried-and-true')]
output: ['[A] dishes [O] tried-and-true [S] great', '[A] honey-mustard beef short ribs [O] sweet [S] great', '[A] recipes [O] tried-and-true [S] great']
sent: ['Dishes', 'denoted', 'as', '``', 'Roy', "'s", 'Classics', "''", '(', 'marked', 'on', 'the', 'menu', 'with', 'asterisks', ')', 'are', 'tried-and-true', 'recipes', ',', 'such', 'as', 'macadamia-crusted', 'mahi', 'mahi', ',', 'or', 'subtly', 'sweet', 'honey-mustard', 'beef', 'short', 'ribs', '.']
counter: {('null', 'recipes', 'great', 'tried-and-true'): 4, ('null', 'macadamia-crusted mahi mahi', 'great', 'tried-and-true'): 2, ('null', 'honey-mustard beef short ribs', 'great', 'sweet'): 5, ('null', 'dishes', 'great', 'tried-and-true'): 4, ('null', 'macadamia-crusted mahi mahi', 'great', 'macadamia-crusted'): 2, ('null', 'macadamia-crusted mahi mahi', 'great', 'sweet'): 1}
output quads: ['[A] recipes [O] tried-and-true [S] great', '[A] honey-mustard beef short ribs [O] sweet [S] great', '[A] dishes [O] tried-and-true [S] great']
multi_path: ['[O] tried-and-true [A] recipes [S] great [SSEP] [O] tried-and-true [A] macadamia-crusted mahi mahi [S] great [SSEP] [O] sweet [A] honey-mustard beef short ribs [S] great', '[O] tried-and-true [S] great [A] dishes [SSEP] [O] tried-and-true [S] great [A] recipes [SSEP] [O] macadamia-crusted [S] great [A] macadamia-crusted mahi mahi [SSEP] [O] sweet [S] great [A] honey-mustard beef short ribs', '[A] dishes [O] tried-and-true [S] great [SSEP] [A] recipes [O] tried-and-true [S] great [SSEP] [A] macadamia-crusted mahi mahi [O] sweet [S] great [SSEP] [A] honey-mustard beef short ribs [O] sweet [S] great', '[A] dishes [S] great [O] tried-and-true [SSEP] [A] macadamia-crusted mahi mahi [S] great [O] tried-and-true [SSEP] [A] honey-mustard beef short ribs [S] great [O] sweet', '[S] great [O] tried-and-true [A] dishes [SSEP] [S] great [O] tried-and-true [A] recipes [SSEP] [S] great [O] macadamia-crusted [A] macadamia-crusted mahi mahi [SSEP] [S] great [O] sweet [A] honey-mustard beef short ribs']

task, data: aste rest14
target: [('null', 'food', 'bad', 'marginally so-so')]
output: ['[A] food [O] freezing [S] bad', '[A] food [O] marginally so-so [S] bad']
sent: ['I', 'came', 'to', 'fresh', 'expecting', 'a', 'great', 'meal', ',', 'and', 'all', 'I', 'got', 'was', 'marginally', 'so-so', 'food', 'served', 'in', 'a', 'restaurant', 'that', 'was', 'just', 'so', 'freezing', 'we', 'could', "n't", 'enjoy', 'eating', '.']
counter: {('null', 'food', 'bad', 'marginally so-so'): 5, ('null', 'food', 'bad', 'freezing'): 4, ('null', 'food', 'bad', "couldn't enjoy"): 1}
output quads: ['[A] food [O] marginally so-so [S] bad', '[A] food [O] freezing [S] bad']
multi_path: ['[O] marginally so-so [A] food [S] bad [SSEP] [O] freezing [A] food [S] bad', '[O] marginally so-so [S] bad [A] food [SSEP] [O] freezing [S] bad [A] food', '[A] food [O] marginally so-so [S] bad [SSEP] [A] food [O] freezing [S] bad', '[A] food [S] bad [O] marginally so-so [SSEP] [A] food [S] bad [O] freezing', "[S] bad [O] marginally so-so [A] food [SSEP] [S] bad [O] couldn't enjoy [A] food"]

task, data: aste rest14
target: [('null', 'fennel flavored italian sausage', 'bad', 'heavy')]
output: ['[A] fennel flavored italian sausage [O] heavy [S] bad', '[A] lone argentine chorizo appetizer [O] heavy [S] bad']
sent: ['The', 'lone', 'argentine', 'chorizo', 'appetizer', 'at', '$', '8.95', 'was', 'a', 'heavy', 'fennel', 'flavored', 'Italian', 'sausage', 'like', 'the', 'ones', 'that', 'sell', 'for', '$', '2.99/lb', 'at', 'the', 'store', '.']
counter: {('null', 'argentine chorizo appetizer', 'bad', 'heavy'): 2, ('null', 'fennel flavored italian sausage', 'bad', 'heavy'): 5, ('null', 'lone argentine chorizo appetizer', 'bad', 'heavy'): 3}
output quads: ['[A] fennel flavored italian sausage [O] heavy [S] bad', '[A] lone argentine chorizo appetizer [O] heavy [S] bad']
multi_path: ['[O] heavy [A] argentine chorizo appetizer [S] bad [SSEP] [O] heavy [A] fennel flavored italian sausage [S] bad', '[O] heavy [S] bad [A] lone argentine chorizo appetizer [SSEP] [O] heavy [S] bad [A] fennel flavored italian sausage', '[A] argentine chorizo appetizer [O] heavy [S] bad [SSEP] [A] fennel flavored italian sausage [O] heavy [S] bad', '[A] lone argentine chorizo appetizer [S] bad [O] heavy [SSEP] [A] fennel flavored italian sausage [S] bad [O] heavy', '[S] bad [O] heavy [A] lone argentine chorizo appetizer [SSEP] [S] bad [O] heavy [A] fennel flavored italian sausage']

task, data: aste rest14
target: [('null', 'dinner', 'great', 'nice')]
output: ['[A] dinner [O] nice [S] ok']
sent: ['I', 'went', 'to', 'Swiftys', 'with', 'some', 'friends', 'of', 'the', 'family', 'and', 'we', 'had', 'a', 'very', 'nice', 'dinner', ',', 'but', 'nothing', 'amazing', '.']
counter: {('null', 'dinner', 'ok', 'nice'): 5}
output quads: ['[A] dinner [O] nice [S] ok']
multi_path: ['[O] nice [A] dinner [S] ok', '[O] nice [S] ok [A] dinner', '[A] dinner [O] nice [S] ok', '[A] dinner [S] ok [O] nice', '[S] ok [O] nice [A] dinner']

task, data: aste rest14
target: [('null', 'sandwiches', 'great', 'good')]
output: ['[A] soy mayonaise [O] good [S] great']
sent: ['Most', 'of', 'the', 'sandwiches', 'are', 'made', 'with', 'soy', 'mayonaise', 'which', 'is', 'actually', 'pretty', 'good', '.']
counter: {('null', 'soy mayonaise', 'great', 'good'): 5}
output quads: ['[A] soy mayonaise [O] good [S] great']
multi_path: ['[O] good [A] soy mayonaise [S] great', '[O] good [S] great [A] soy mayonaise', '[A] soy mayonaise [O] good [S] great', '[A] soy mayonaise [S] great [O] good', '[S] great [O] good [A] soy mayonaise']

task, data: aste rest14
target: [('null', 'food', 'great', 'authentic'), ('null', 'staff', 'great', 'hip'), ('null', 'staff', 'great', 'off-the-boat'), ('null', 'staff', 'great', 'young')]
output: ['[A] food [O] authentic [S] great', '[A] staff [O] hip [S] great', '[A] staff [O] young [S] great']
sent: ['Not', 'only', 'is', 'the', 'food', 'authentic', ',', 'but', 'the', 'staff', 'here', 'are', 'practically', 'off-the-boat', ',', 'they', 'are', 'young', 'and', 'hip', 'and', 'know', 'what', 'they', 'are', 'doing', 'when', 'it', 'comes', 'to', 'food', 'and', 'wine', '.']
counter: {('null', 'food', 'great', 'authentic'): 5, ('null', 'staff', 'great', 'young'): 5, ('null', 'staff', 'great', 'hip'): 5}
output quads: ['[A] food [O] authentic [S] great', '[A] staff [O] young [S] great', '[A] staff [O] hip [S] great']
multi_path: ['[O] authentic [A] food [S] great [SSEP] [O] young [A] staff [S] great [SSEP] [O] hip [A] staff [S] great', '[O] authentic [S] great [A] food [SSEP] [O] young [S] great [A] staff [SSEP] [O] hip [S] great [A] staff', '[A] food [O] authentic [S] great [SSEP] [A] staff [O] young [S] great [SSEP] [A] staff [O] hip [S] great', '[A] food [S] great [O] authentic [SSEP] [A] staff [S] great [O] young [SSEP] [A] staff [S] great [O] hip', '[S] great [O] authentic [A] food [SSEP] [S] great [O] young [A] staff [SSEP] [S] great [O] hip [A] staff']

task, data: aste rest14
target: [('null', 'clientele', 'great', 'lowkey hip'), ('null', 'music', 'great', 'good'), ('null', 'selection of wines ( primarily spanish )', 'great', 'interesting'), ('null', 'tapas', 'great', 'nice')]
output: ['[A] clientele [O] lowkey [S] great', '[A] music [O] good [S] great', '[A] selection of wines [O] interesting [S] great', '[A] tapas [O] nice [S] great']
sent: ['It', 'has', 'good', 'music', ',', 'nice', 'tapas', ',', 'an', 'interesting', 'selection', 'of', 'wines', '(', 'primarily', 'Spanish', ')', 'and', 'a', 'lowkey', 'hip', 'neighborhood', 'clientele', '.']
counter: {('null', 'music', 'great', 'good'): 5, ('null', 'tapas', 'great', 'nice'): 5, ('null', 'selection of wines', 'great', 'interesting'): 5, ('null', 'clientele', 'great', 'lowkey'): 3, ('null', 'spanish', 'great', 'interesting'): 2, ('null', 'selection of wines', 'great', 'spanish'): 1}
output quads: ['[A] music [O] good [S] great', '[A] tapas [O] nice [S] great', '[A] selection of wines [O] interesting [S] great', '[A] clientele [O] lowkey [S] great']
multi_path: ['[O] good [A] music [S] great [SSEP] [O] nice [A] tapas [S] great [SSEP] [O] interesting [A] selection of wines [S] great [SSEP] [O] lowkey [A] clientele [S] great', '[O] good [S] great [A] music [SSEP] [O] nice [S] great [A] tapas [SSEP] [O] interesting [S] great [A] selection of wines [SSEP] [O] lowkey [S] great [A] clientele', '[A] music [O] good [S] great [SSEP] [A] tapas [O] nice [S] great [SSEP] [A] selection of wines [O] interesting [S] great [SSEP] [A] spanish [O] interesting [S] great', '[A] music [S] great [O] good [SSEP] [A] tapas [S] great [O] nice [SSEP] [A] selection of wines [S] great [O] interesting [SSEP] [A] spanish [S] great [O] interesting', '[S] great [O] good [A] music [SSEP] [S] great [O] nice [A] tapas [SSEP] [S] great [O] interesting [A] selection of wines [SSEP] [S] great [O] lowkey [A] clientele [SSEP] [S] great [O] spanish [A] selection of wines']

task, data: aste rest14
target: [('null', 'place', 'great', 'fun')]
output: ['[A] conversations [O] fun [S] great']
sent: ['It', "'s", 'the', 'conversations', 'that', 'make', 'this', 'a', 'fun', 'place', 'to', 'be', '.']
counter: {('null', 'conversations', 'great', 'fun'): 5}
output quads: ['[A] conversations [O] fun [S] great']
multi_path: ['[O] fun [A] conversations [S] great', '[O] fun [S] great [A] conversations', '[A] conversations [O] fun [S] great', '[A] conversations [S] great [O] fun', '[S] great [O] fun [A] conversations']

task, data: aste rest14
target: [('null', 'atmosphere', 'great', 'perfect'), ('null', 'atmosphere', 'great', 'quiet'), ('null', 'tapas', 'great', 'delightful'), ('null', 'wine list', 'great', 'superb')]
output: ['[A] atmosphere [O] quiet [S] great', '[A] conversation [O] good [S] great', '[A] tapas [O] delightful [S] great', '[A] wine list [O] superb [S] great']
sent: ['The', 'wine', 'list', 'was', 'superb', ',', 'our', 'tapas', 'delightful', ',', 'and', 'the', 'quiet', 'atmosphere', 'perfect', 'for', 'good', 'conversation', '.']
counter: {('null', 'wine list', 'great', 'superb'): 5, ('null', 'tapas', 'great', 'delightful'): 5, ('null', 'atmosphere', 'great', 'quiet'): 5, ('null', 'conversation', 'great', 'good'): 5}
output quads: ['[A] wine list [O] superb [S] great', '[A] tapas [O] delightful [S] great', '[A] atmosphere [O] quiet [S] great', '[A] conversation [O] good [S] great']
multi_path: ['[O] superb [A] wine list [S] great [SSEP] [O] delightful [A] tapas [S] great [SSEP] [O] quiet [A] atmosphere [S] great [SSEP] [O] good [A] conversation [S] great', '[O] superb [S] great [A] wine list [SSEP] [O] delightful [S] great [A] tapas [SSEP] [O] quiet [S] great [A] atmosphere [SSEP] [O] good [S] great [A] conversation', '[A] wine list [O] superb [S] great [SSEP] [A] tapas [O] delightful [S] great [SSEP] [A] atmosphere [O] quiet [S] great [SSEP] [A] conversation [O] good [S] great', '[A] wine list [S] great [O] superb [SSEP] [A] tapas [S] great [O] delightful [SSEP] [A] atmosphere [S] great [O] quiet [SSEP] [A] conversation [S] great [O] good', '[S] great [O] superb [A] wine list [SSEP] [S] great [O] delightful [A] tapas [SSEP] [S] great [O] quiet [A] atmosphere [SSEP] [S] great [O] good [A] conversation']

task, data: aste rest14
target: [('null', 'food', 'great', 'gourmet')]
output: ['[A] gourmet food [O] gourmet [S] great', '[A] price [O] fast [S] great']
sent: ['You', 'can', 'eat', 'gourmet', 'food', 'at', 'a', 'fast', 'food', 'price', '.']
counter: {('null', 'gourmet food', 'great', 'gourmet'): 4, ('null', 'price', 'great', 'fast'): 5, ('null', 'food', 'great', 'gourmet'): 1}
output quads: ['[A] gourmet food [O] gourmet [S] great', '[A] price [O] fast [S] great']
multi_path: ['[O] gourmet [A] gourmet food [S] great [SSEP] [O] fast [A] price [S] great', '[O] gourmet [S] great [A] gourmet food [SSEP] [O] fast [S] great [A] price', '[A] gourmet food [O] gourmet [S] great [SSEP] [A] price [O] fast [S] great', '[A] gourmet food [S] great [O] gourmet [SSEP] [A] price [S] great [O] fast', '[S] great [O] gourmet [A] food [SSEP] [S] great [O] fast [A] price']

task, data: aste rest14
target: [('null', 'dinner menu', 'great', 'great'), ('null', 'dinner menu', 'great', 'variety'), ('null', 'entrees', 'great', 'great'), ('null', 'seafood', 'great', 'fresh'), ('null', 'steaks', 'great', 'huge')]
output: ['[A] dinner menu [O] great [S] great', '[A] entrees [O] great [S] great', '[A] seafood [O] fresh [S] great', '[A] steaks [O] huge [S] great']
sent: ['the', 'dinner', 'menu', 'offers', 'a', 'variety', 'of', 'great', 'entrees', ',', 'including', 'fresh', 'seafood', 'and', 'huge', 'steaks', ',', 'there', "'s", 'also', 'a', 'couple', 'of', 'non-meat', 'alternatives', '.']
counter: {('null', 'dinner menu', 'great', 'great'): 5, ('null', 'entrees', 'great', 'great'): 5, ('null', 'seafood', 'great', 'fresh'): 5, ('null', 'steaks', 'great', 'huge'): 5}
output quads: ['[A] dinner menu [O] great [S] great', '[A] entrees [O] great [S] great', '[A] seafood [O] fresh [S] great', '[A] steaks [O] huge [S] great']
multi_path: ['[O] great [A] dinner menu [S] great [SSEP] [O] great [A] entrees [S] great [SSEP] [O] fresh [A] seafood [S] great [SSEP] [O] huge [A] steaks [S] great', '[O] great [S] great [A] dinner menu [SSEP] [O] great [S] great [A] entrees [SSEP] [O] fresh [S] great [A] seafood [SSEP] [O] huge [S] great [A] steaks', '[A] dinner menu [O] great [S] great [SSEP] [A] entrees [O] great [S] great [SSEP] [A] seafood [O] fresh [S] great [SSEP] [A] steaks [O] huge [S] great', '[A] dinner menu [S] great [O] great [SSEP] [A] entrees [S] great [O] great [SSEP] [A] seafood [S] great [O] fresh [SSEP] [A] steaks [S] great [O] huge', '[S] great [O] great [A] dinner menu [SSEP] [S] great [O] great [A] entrees [SSEP] [S] great [O] fresh [A] seafood [SSEP] [S] great [O] huge [A] steaks']

task, data: aste rest14
target: [('null', 'entree', 'ok', 'wrong')]
output: ['[A] entree [O] wrong [S] bad']
sent: ['What', 'can', 'you', 'say', 'about', 'a', 'place', 'where', 'the', 'waitress', 'brings', 'out', 'the', 'wrong', 'entree', ',', 'then', 'verbally', 'assaults', 'your', '80', 'year', 'old', 'grandmother', 'and', 'gives', 'her', 'lip', 'about', 'sending', 'it', 'back', '(', 'which', 'she', 'did', 'politely', ',', 'by', 'the', 'way', ')', '.']
counter: {('null', 'entree', 'bad', 'wrong'): 5}
output quads: ['[A] entree [O] wrong [S] bad']
multi_path: ['[O] wrong [A] entree [S] bad', '[O] wrong [S] bad [A] entree', '[A] entree [O] wrong [S] bad', '[A] entree [S] bad [O] wrong', '[S] bad [O] wrong [A] entree']

task, data: aste rest14
target: [('null', 'prices', 'great', 'not terrible')]
output: ['[A] prices [O] not terrible [S] ok']
sent: ['The', 'prices', 'are', 'not', 'terrible', '.']
counter: {('null', 'prices', 'ok', 'not terrible'): 5}
output quads: ['[A] prices [O] not terrible [S] ok']
multi_path: ['[O] not terrible [A] prices [S] ok', '[O] not terrible [S] ok [A] prices', '[A] prices [O] not terrible [S] ok', '[A] prices [S] ok [O] not terrible', '[S] ok [O] not terrible [A] prices']

task, data: aste rest14
target: [('null', 'halibut cheek appetizer', 'ok', 'positive'), ('null', 'portion of foie gras', 'great', 'generous')]
output: ['[A] foie gras [O] generous [S] great', '[A] meal [O] positive [S] great']
sent: ['The', 'halibut', 'cheek', 'appetizer', 'came', 'with', 'a', 'generous', 'portion', 'of', 'foie', 'gras', ',', 'but', 'that', "'s", 'about', 'the', 'only', 'positive', 'thing', 'I', 'can', 'say', 'about', 'the', 'meal', '.']
counter: {('null', 'foie gras', 'great', 'generous'): 5, ('null', 'meal', 'great', 'positive'): 5}
output quads: ['[A] foie gras [O] generous [S] great', '[A] meal [O] positive [S] great']
multi_path: ['[O] generous [A] foie gras [S] great [SSEP] [O] positive [A] meal [S] great', '[O] generous [S] great [A] foie gras [SSEP] [O] positive [S] great [A] meal', '[A] foie gras [O] generous [S] great [SSEP] [A] meal [O] positive [S] great', '[A] foie gras [S] great [O] generous [SSEP] [A] meal [S] great [O] positive', '[S] great [O] generous [A] foie gras [SSEP] [S] great [O] positive [A] meal']

task, data: aste rest14
target: [('null', 'afternoon snack', 'great', 'good'), ('null', 'empenadas', 'great', 'excellent'), ('null', 'food', 'great', 'excellent'), ('null', 'plaintains', 'great', 'good')]
output: ['[A] empenadas [O] good [S] great', '[A] food [O] excellent [S] great', '[A] plaintains [O] good [S] great']
sent: ['Food', 'is', 'excellent', 'and', 'they', 'also', 'have', 'empenadas', 'and', 'plaintains', 'which', 'are', 'good', 'for', 'an', 'afternoon', 'snack', '.']
counter: {('null', 'food', 'great', 'excellent'): 5, ('null', 'empenadas', 'great', 'good'): 5, ('null', 'plaintains', 'great', 'good'): 5}
output quads: ['[A] food [O] excellent [S] great', '[A] empenadas [O] good [S] great', '[A] plaintains [O] good [S] great']
multi_path: ['[O] excellent [A] food [S] great [SSEP] [O] good [A] empenadas [S] great [SSEP] [O] good [A] plaintains [S] great', '[O] excellent [S] great [A] food [SSEP] [O] good [S] great [A] empenadas [SSEP] [O] good [S] great [A] plaintains', '[A] food [O] excellent [S] great [SSEP] [A] empenadas [O] good [S] great [SSEP] [A] plaintains [O] good [S] great', '[A] food [S] great [O] excellent [SSEP] [A] empenadas [S] great [O] good [SSEP] [A] plaintains [S] great [O] good', '[S] great [O] excellent [A] food [SSEP] [S] great [O] good [A] empenadas [SSEP] [S] great [O] good [A] plaintains']

task, data: aste rest14
target: [('null', 'big mac', 'great', 'favorites'), ('null', 'chicken mcnuggets', 'great', 'favorites'), ('null', 'entree-sized salads', 'ok', 'lighter options'), ('null', 'filet-o-fish sandwich', 'great', 'favorites'), ('null', "mcdonald's famous french fries", 'great', 'favorites')]
output: ['[A] big mac [O] favorites [S] great', '[A] chicken mcnuggets [O] favorites [S] great', '[A] entree-sized salads [O] lighter [S] great', '[A] filet-o-fish sandwich [O] favorites [S] great', "[A] mcdonald's famous french fries [O] favorites [S] great"]
sent: ['All-time', 'favorites', 'include', 'the', 'Big', 'Mac', ',', 'Chicken', 'McNuggets', ',', 'Filet-O-Fish', 'sandwich', 'and', 'McDonald', "'s", 'famous', 'french', 'fries', ';', 'lighter', 'options', 'like', 'entree-sized', 'salads', 'are', 'also', 'available', '.']
counter: {('null', 'big mac', 'great', 'favorites'): 5, ('null', 'chicken mcnuggets', 'great', 'favorites'): 5, ('null', 'filet-o-fish sandwich', 'great', 'favorites'): 5, ('null', "mcdonald's famous french fries", 'great', 'favorites'): 5, ('null', 'entree-sized salads', 'great', 'lighter'): 5}
output quads: ['[A] big mac [O] favorites [S] great', '[A] chicken mcnuggets [O] favorites [S] great', '[A] filet-o-fish sandwich [O] favorites [S] great', "[A] mcdonald's famous french fries [O] favorites [S] great", '[A] entree-sized salads [O] lighter [S] great']
multi_path: ["[O] favorites [A] big mac [S] great [SSEP] [O] favorites [A] chicken mcnuggets [S] great [SSEP] [O] favorites [A] filet-o-fish sandwich [S] great [SSEP] [O] favorites [A] mcdonald's famous french fries [S] great [SSEP] [O] lighter [A] entree-sized salads [S] great", "[O] favorites [S] great [A] big mac [SSEP] [O] favorites [S] great [A] chicken mcnuggets [SSEP] [O] favorites [S] great [A] filet-o-fish sandwich [SSEP] [O] favorites [S] great [A] mcdonald's famous french fries [SSEP] [O] lighter [S] great [A] entree-sized salads", "[A] big mac [O] favorites [S] great [SSEP] [A] chicken mcnuggets [O] favorites [S] great [SSEP] [A] filet-o-fish sandwich [O] favorites [S] great [SSEP] [A] mcdonald's famous french fries [O] favorites [S] great [SSEP] [A] entree-sized salads [O] lighter [S] great", "[A] big mac [S] great [O] favorites [SSEP] [A] chicken mcnuggets [S] great [O] favorites [SSEP] [A] filet-o-fish sandwich [S] great [O] favorites [SSEP] [A] mcdonald's famous french fries [S] great [O] favorites [SSEP] [A] entree-sized salads [S] great [O] lighter", "[S] great [O] favorites [A] big mac [SSEP] [S] great [O] favorites [A] chicken mcnuggets [SSEP] [S] great [O] favorites [A] filet-o-fish sandwich [SSEP] [S] great [O] favorites [A] mcdonald's famous french fries [SSEP] [S] great [O] lighter [A] entree-sized salads"]

task, data: aste rest14
target: [('null', 'pizza', 'great', 'go for')]
output: ['[A] pizza [O] not much to look at [S] ok']
sent: ['It', "'s", 'a', 'basic', 'pizza', 'joint', ',', 'not', 'much', 'to', 'look', 'at', ',', 'but', 'the', 'pizza', 'is', 'what', 'I', 'go', 'for', '.']
counter: {('null', 'pizza', 'ok', 'not much to look at'): 4, ('null', 'pizza', 'ok', 'basic'): 1, ('null', 'pizza', 'great', 'not much to look at'): 1}
output quads: ['[A] pizza [O] not much to look at [S] ok']
multi_path: ['[O] not much to look at [A] pizza [S] ok', '[O] not much to look at [S] ok [A] pizza', '[A] pizza [O] not much to look at [S] ok', '[A] pizza [S] ok [O] basic [SSEP] [A] pizza [S] great [O] not much to look at', '[S] ok [O] not much to look at [A] pizza']

task, data: aste rest14
target: [('null', 'tables', 'bad', 'close')]
output: ['[A] tables [O] close [S] ok']
sent: ['Tables', 'are', 'close', ',', 'so', 'you', 'better', 'be', 'comfortable', 'bumping', 'elbows', 'with', 'other', 'patrons', '.']
counter: {('null', 'tables', 'ok', 'close'): 5}
output quads: ['[A] tables [O] close [S] ok']
multi_path: ['[O] close [A] tables [S] ok', '[O] close [S] ok [A] tables', '[A] tables [O] close [S] ok', '[A] tables [S] ok [O] close', '[S] ok [O] close [A] tables']

task, data: aste rest14
target: [('null', 'carrots', 'great', 'distinctive'), ('null', 'chickpeas', 'great', 'distinctive'), ('null', 'spices', 'great', 'distinctive'), ('null', 'vegetables', 'great', 'distinctive'), ('null', 'veggie burger', 'great', 'extraordinary')]
output: ['[A] blend of chickpeas [O] distinctive [S] great', '[A] carrots [O] distinctive [S] great', '[A] vegetables [O] distinctive [S] great', '[A] veggie burger [O] extraordinary [S] great']
sent: ['Meat-phobes', 'are', 'in', 'luck', 'with', 'the', 'extraordinary', 'veggie', 'burger', ',', 'made', 'from', 'a', 'distinctive', 'blend', 'of', 'chickpeas', ',', 'carrots', 'and', 'other', 'vegetables', 'and', 'spices', '.']
counter: {('null', 'veggie burger', 'great', 'extraordinary'): 5, ('null', 'blend of chickpeas', 'great', 'distinctive'): 5, ('null', 'carrots', 'great', 'distinctive'): 5, ('null', 'vegetables', 'great', 'distinctive'): 3, ('null', 'spices', 'great', 'distinctive'): 1, ('null', 'vegetables and spices', 'great', 'distinctive'): 2}
output quads: ['[A] veggie burger [O] extraordinary [S] great', '[A] blend of chickpeas [O] distinctive [S] great', '[A] carrots [O] distinctive [S] great', '[A] vegetables [O] distinctive [S] great']
multi_path: ['[O] extraordinary [A] veggie burger [S] great [SSEP] [O] distinctive [A] blend of chickpeas [S] great [SSEP] [O] distinctive [A] carrots [S] great [SSEP] [O] distinctive [A] vegetables [S] great [SSEP] [O] distinctive [A] spices [S] great', '[O] extraordinary [S] great [A] veggie burger [SSEP] [O] distinctive [S] great [A] blend of chickpeas [SSEP] [O] distinctive [S] great [A] carrots [SSEP] [O] distinctive [S] great [A] vegetables and spices', '[A] veggie burger [O] extraordinary [S] great [SSEP] [A] blend of chickpeas [O] distinctive [S] great [SSEP] [A] carrots [O] distinctive [S] great [SSEP] [A] vegetables [O] distinctive [S] great', '[A] veggie burger [S] great [O] extraordinary [SSEP] [A] blend of chickpeas [S] great [O] distinctive [SSEP] [A] carrots [S] great [O] distinctive [SSEP] [A] vegetables [S] great [O] distinctive', '[S] great [O] extraordinary [A] veggie burger [SSEP] [S] great [O] distinctive [A] blend of chickpeas [SSEP] [S] great [O] distinctive [A] carrots [SSEP] [S] great [O] distinctive [A] vegetables and spices']

task, data: aste rest14
target: [('null', 'menus', 'ok', 'seasonal')]
output: ['[A] menus [O] seasonal [S] great']
sent: ['Menus', 'feature', 'seasonal', 'picks', ',', 'like', 'sweet', 'corn-foie', 'gras', 'brulee', '.']
counter: {('null', 'menus', 'great', 'seasonal'): 5, ('null', 'sweet corn-foie gras brulee', 'great', 'sweet corn-foie gras brulee'): 1, ('null', 'null', 'null', 'sweet corn-foie gras brulee'): 1, ('null', 'sweet corn-foie gras brulee', 'great', 'seasonal'): 2, ('null', 'null', 'great', 'sweet corn-foie gras brulee'): 1}
output quads: ['[A] menus [O] seasonal [S] great']
multi_path: ['[O] seasonal [A] menus [S] great [SSEP] [O] sweet corn-foie gras brulee [A] sweet corn-foie gras brulee [S] great', '[O] seasonal [S] great [A] menus [SSEP] [O] sweet corn-foie gras brulee', '[A] menus [O] seasonal [S] great [SSEP] [A] sweet corn-foie gras brulee [O] seasonal [S] great', '[A] menus [S] great [O] seasonal [SSEP] [A] sweet corn-foie gras brulee [S] great [O] seasonal', '[S] great [O] seasonal [A] menus [SSEP] [S] great [O] sweet corn-foie gras brulee']

task, data: aste rest14
target: [('null', 'carinthia cheese ravioli with wild mushrooms', 'great', 'simple'), ('null', 'green spinach-vodka sauce', 'great', 'bright')]
output: ['[A] carinthia cheese ravioli with wild mushrooms [O] simple [S] great', '[A] caviar-topped sturgeon [O] beautifully matched [S] great', '[A] spinach-vodka sauce [O] bright green [S] great']
sent: ['Innovations', 'are', 'just', 'as', 'assured', ',', 'from', 'the', 'simple', 'Carinthia', 'cheese', 'ravioli', 'with', 'wild', 'mushrooms', 'to', 'the', 'caviar-topped', 'sturgeon', ',', 'beautifully', 'matched', 'with', 'a', 'bright', 'green', 'spinach-vodka', 'sauce', '.']
counter: {('null', 'carinthia cheese ravioli with wild mushrooms', 'great', 'simple'): 5, ('null', 'caviar-topped sturgeon', 'great', 'beautifully matched'): 5, ('null', 'spinach-vodka sauce', 'great', 'bright green'): 3, ('null', 'spinach-vodka sauce', 'great', 'beautifully matched'): 1}
output quads: ['[A] carinthia cheese ravioli with wild mushrooms [O] simple [S] great', '[A] caviar-topped sturgeon [O] beautifully matched [S] great', '[A] spinach-vodka sauce [O] bright green [S] great']
multi_path: ['[O] simple [A] carinthia cheese ravioli with wild mushrooms [S] great [SSEP] [O] beautifully matched [A] caviar-topped sturgeon [S] great', '[O] simple [S] great [A] carinthia cheese ravioli with wild mushrooms [SSEP] [O] beautifully matched [S] great [A] caviar-topped sturgeon [SSEP] [O] bright green [S] great [A] spinach-vodka sauce', '[A] carinthia cheese ravioli with wild mushrooms [O] simple [S] great [SSEP] [A] caviar-topped sturgeon [O] beautifully matched [S] great [SSEP] [A] spinach-vodka sauce [O] beautifully matched [S] great', '[A] carinthia cheese ravioli with wild mushrooms [S] great [O] simple [SSEP] [A] caviar-topped sturgeon [S] great [O] beautifully matched [SSEP] [A] spinach-vodka sauce [S] great [O] bright green', '[S] great [O] simple [A] carinthia cheese ravioli with wild mushrooms [SSEP] [S] great [O] beautifully matched [A] caviar-topped sturgeon [SSEP] [S] great [O] bright green [A] spinach-vodka sauce']

task, data: aste rest14
target: [('null', 'burgers', 'great', 'small'), ('null', 'burgers', 'great', 'wimpy fast food type'), ('null', 'patties', 'great', 'full sized'), ('null', 'patties', 'great', 'real')]
output: ['[A] patties [O] full sized [S] great', '[A] patties [O] real [S] great']
sent: ['And', 'these', 'are', 'not', 'small', ',', 'wimpy', 'fast', 'food', 'type', 'burgers', '-', 'these', 'are', 'real', ',', 'full', 'sized', 'patties', '.']
counter: {('null', 'patties', 'great', 'real'): 5, ('null', 'patties', 'great', 'full sized'): 5}
output quads: ['[A] patties [O] real [S] great', '[A] patties [O] full sized [S] great']
multi_path: ['[O] real [A] patties [S] great [SSEP] [O] full sized [A] patties [S] great', '[O] real [S] great [A] patties [SSEP] [O] full sized [S] great [A] patties', '[A] patties [O] real [S] great [SSEP] [A] patties [O] full sized [S] great', '[A] patties [S] great [O] real [SSEP] [A] patties [S] great [O] full sized', '[S] great [O] real [A] patties [SSEP] [S] great [O] full sized [A] patties']

task, data: aste rest14
target: [('null', 'delivery service', 'great', 'fast'), ('null', 'lunch', 'ok', 'perfect')]
output: ['[A] delivery service [O] fast [S] great', '[A] lunch [O] perfect [S] great']
sent: ['There', 'restaurant', 'is', 'very', 'casual', ',', 'but', 'perfect', 'for', 'lunch', ',', 'and', 'their', 'delivery', 'service', 'is', 'always', 'very', 'fast', '.']
counter: {('null', 'delivery service', 'great', 'fast'): 5, ('null', 'lunch', 'great', 'perfect'): 3}
output quads: ['[A] delivery service [O] fast [S] great', '[A] lunch [O] perfect [S] great']
multi_path: ['[O] fast [A] delivery service [S] great', '[O] fast [S] great [A] delivery service', '[A] lunch [O] perfect [S] great [SSEP] [A] delivery service [O] fast [S] great', '[A] lunch [S] great [O] perfect [SSEP] [A] delivery service [S] great [O] fast', '[S] great [O] perfect [A] lunch [SSEP] [S] great [O] fast [A] delivery service']

task, data: aste rest14
target: [('null', 'salmon', 'bad', 'stay away'), ('null', 'specials', 'great', 'go with')]
output: ['[A] salmon [O] stay away [S] bad', '[A] specials [O] go with the specials [S] great']
sent: ['Go', 'with', 'the', 'specials', ',', 'and', 'stay', 'away', 'from', 'the', 'salmon', '.']
counter: {('null', 'specials', 'great', 'go with the specials'): 3, ('null', 'salmon', 'bad', 'stay away'): 5, ('null', 'specials', 'great', 'go with'): 2}
output quads: ['[A] specials [O] go with the specials [S] great', '[A] salmon [O] stay away [S] bad']
multi_path: ['[O] go with the specials [A] specials [S] great [SSEP] [O] stay away [A] salmon [S] bad', '[O] go with the specials [S] great [A] specials [SSEP] [O] stay away [S] bad [A] salmon', '[A] specials [O] go with [S] great [SSEP] [A] salmon [O] stay away [S] bad', '[A] specials [S] great [O] go with [SSEP] [A] salmon [S] bad [O] stay away', '[S] great [O] go with the specials [A] specials [SSEP] [S] bad [O] stay away [A] salmon']

task, data: aste rest14
target: [('null', 'food', 'great', 'love'), ('null', 'food', 'great', 'respect'), ('null', 'food', 'great', 'simplicity'), ('null', 'staff', 'great', 'freindly'), ('null', 'staff', 'great', 'knowledgable'), ('null', 'staff', 'great', 'love')]
output: ['[A] food [O] love [S] great', '[A] food [O] simplicity [S] great', '[A] staff [O] freindly [S] great', '[A] staff [O] knowledgable [S] great']
sent: ['I', 'love', 'the', 'simplicity', 'and', 'respect', 'which', 'was', 'given', 'to', 'the', 'food', ',', 'as', 'well', 'the', 'staff', 'was', 'freindly', 'and', 'knowledgable', '.']
counter: {('null', 'food', 'great', 'love'): 5, ('null', 'food', 'great', 'simplicity'): 5, ('null', 'staff', 'great', 'freindly'): 5, ('null', 'staff', 'great', 'knowledgable'): 5}
output quads: ['[A] food [O] love [S] great', '[A] food [O] simplicity [S] great', '[A] staff [O] freindly [S] great', '[A] staff [O] knowledgable [S] great']
multi_path: ['[O] love [A] food [S] great [SSEP] [O] simplicity [A] food [S] great [SSEP] [O] freindly [A] staff [S] great [SSEP] [O] knowledgable [A] staff [S] great', '[O] love [S] great [A] food [SSEP] [O] simplicity [S] great [A] food [SSEP] [O] freindly [S] great [A] staff [SSEP] [O] knowledgable [S] great [A] staff', '[A] food [O] love [S] great [SSEP] [A] food [O] simplicity [S] great [SSEP] [A] staff [O] freindly [S] great [SSEP] [A] staff [O] knowledgable [S] great', '[A] food [S] great [O] love [SSEP] [A] food [S] great [O] simplicity [SSEP] [A] staff [S] great [O] freindly [SSEP] [A] staff [S] great [O] knowledgable', '[S] great [O] love [A] food [SSEP] [S] great [O] simplicity [A] food [SSEP] [S] great [O] freindly [A] staff [SSEP] [S] great [O] knowledgable [A] staff']

task, data: aste rest14
target: [('null', 'branzini', 'ok', 'average'), ('null', 'fish', 'bad', 'average')]
output: ['[A] fish [O] average [S] ok']
sent: ['MY', 'date', 'and', 'I', 'both', 'ordered', 'the', 'Branzini', 'and', 'both', 'felt', 'the', 'fish', 'was', 'very', 'average', '.']
counter: {('null', 'fish', 'ok', 'average'): 5, ('null', 'branzini', 'ok', 'average'): 1}
output quads: ['[A] fish [O] average [S] ok']
multi_path: ['[O] average [A] fish [S] ok', '[O] average [S] ok [A] fish', '[A] fish [O] average [S] ok', '[A] branzini [S] ok [O] average [SSEP] [A] fish [S] ok [O] average', '[S] ok [O] average [A] fish']

task, data: aste rest14
target: [('null', 'ambiance', 'great', 'warm inviting'), ('null', 'menu', 'great', 'wonderful'), ('null', 'service', 'great', 'great')]
output: ['[A] ambiance [O] warm inviting [S] great', '[A] food [O] great [S] great', '[A] menu [O] wonderful [S] great', '[A] service [O] great [S] great']
sent: ['Wonderful', 'menu', ',', 'warm', 'inviting', 'ambiance', ',', 'great', 'service', 'the', 'FOOD', 'keeps', 'me', 'coming', 'back', '!']
counter: {('null', 'menu', 'great', 'wonderful'): 5, ('null', 'ambiance', 'great', 'warm inviting'): 5, ('null', 'service', 'great', 'great'): 5, ('null', 'food', 'great', 'great'): 5}
output quads: ['[A] menu [O] wonderful [S] great', '[A] ambiance [O] warm inviting [S] great', '[A] service [O] great [S] great', '[A] food [O] great [S] great']
multi_path: ['[O] wonderful [A] menu [S] great [SSEP] [O] warm inviting [A] ambiance [S] great [SSEP] [O] great [A] service [S] great [SSEP] [O] great [A] food [S] great', '[O] wonderful [S] great [A] menu [SSEP] [O] warm inviting [S] great [A] ambiance [SSEP] [O] great [S] great [A] service [SSEP] [O] great [S] great [A] food', '[A] menu [O] wonderful [S] great [SSEP] [A] ambiance [O] warm inviting [S] great [SSEP] [A] service [O] great [S] great [SSEP] [A] food [O] great [S] great', '[A] menu [S] great [O] wonderful [SSEP] [A] ambiance [S] great [O] warm inviting [SSEP] [A] service [S] great [O] great [SSEP] [A] food [S] great [O] great', '[S] great [O] wonderful [A] menu [SSEP] [S] great [O] warm inviting [A] ambiance [SSEP] [S] great [O] great [A] service [SSEP] [S] great [O] great [A] food']

task, data: aste rest14
target: [('null', 'pizzas', 'great', 'excellent')]
output: ['[A] appetizers [O] excellent [S] great', '[A] main courses [O] excellent [S] great', '[A] pizzas [O] excellent [S] great']
sent: ['Pizzas', 'were', 'excellent', 'in', 'addition', 'to', 'appetizers', 'and', 'main', 'courses', '.']
counter: {('null', 'pizzas', 'great', 'excellent'): 5, ('null', 'appetizers', 'great', 'excellent'): 5, ('null', 'main courses', 'great', 'excellent'): 5}
output quads: ['[A] pizzas [O] excellent [S] great', '[A] appetizers [O] excellent [S] great', '[A] main courses [O] excellent [S] great']
multi_path: ['[O] excellent [A] pizzas [S] great [SSEP] [O] excellent [A] appetizers [S] great [SSEP] [O] excellent [A] main courses [S] great', '[O] excellent [S] great [A] pizzas [SSEP] [O] excellent [S] great [A] appetizers [SSEP] [O] excellent [S] great [A] main courses', '[A] pizzas [O] excellent [S] great [SSEP] [A] appetizers [O] excellent [S] great [SSEP] [A] main courses [O] excellent [S] great', '[A] pizzas [S] great [O] excellent [SSEP] [A] appetizers [S] great [O] excellent [SSEP] [A] main courses [S] great [O] excellent', '[S] great [O] excellent [A] pizzas [SSEP] [S] great [O] excellent [A] appetizers [SSEP] [S] great [O] excellent [A] main courses']

task, data: aste rest14
target: [('null', 'calamari', 'great', 'try'), ('null', 'pasta', 'great', 'try'), ('null', 'sliced steak entree', 'great', 'try')]
output: ['[A] calamari [O] try [S] great', '[A] pasta [O] try [S] great', '[A] steak entree [O] try [S] great']
sent: ['Definitely', 'try', 'the', 'calamari', ',', 'any', 'pasta', ',', 'or', 'even', 'the', 'Sliced', 'steak', 'entree', '.']
counter: {('null', 'calamari', 'great', 'try'): 5, ('null', 'pasta', 'great', 'try'): 5, ('null', 'steak entree', 'great', 'try'): 5}
output quads: ['[A] calamari [O] try [S] great', '[A] pasta [O] try [S] great', '[A] steak entree [O] try [S] great']
multi_path: ['[O] try [A] calamari [S] great [SSEP] [O] try [A] pasta [S] great [SSEP] [O] try [A] steak entree [S] great', '[O] try [S] great [A] calamari [SSEP] [O] try [S] great [A] pasta [SSEP] [O] try [S] great [A] steak entree', '[A] calamari [O] try [S] great [SSEP] [A] pasta [O] try [S] great [SSEP] [A] steak entree [O] try [S] great', '[A] calamari [S] great [O] try [SSEP] [A] pasta [S] great [O] try [SSEP] [A] steak entree [S] great [O] try', '[S] great [O] try [A] calamari [SSEP] [S] great [O] try [A] pasta [SSEP] [S] great [O] try [A] steak entree']

task, data: aste rest14
target: [('null', 'prices', 'great', 'great'), ('null', 'tapas', 'great', 'excellent')]
output: ['[A] prices [O] excellent [S] great', '[A] prices [O] great [S] great', '[A] tapas [O] excellent [S] great', '[A] tapas [O] not overly crowed [S] great', '[A] tapas [O] romantic [S] great', '[A] tapas [O] small [S] great']
sent: ['excellent', 'tapas', 'at', 'great', 'prices', ',', 'romantic', ',', 'small', 'but', 'not', 'overly', 'crowed', ',', 'excellent']
counter: {('null', 'tapas', 'great', 'excellent'): 5, ('null', 'prices', 'great', 'great'): 5, ('null', 'tapas', 'great', 'romantic'): 3, ('null', 'tapas', 'great', 'small'): 5, ('null', 'tapas', 'great', 'not overly crowed'): 5, ('null', 'prices', 'great', 'excellent'): 4}
output quads: ['[A] tapas [O] excellent [S] great', '[A] prices [O] great [S] great', '[A] tapas [O] romantic [S] great', '[A] tapas [O] small [S] great', '[A] tapas [O] not overly crowed [S] great', '[A] prices [O] excellent [S] great']
multi_path: ['[O] excellent [A] tapas [S] great [SSEP] [O] great [A] prices [S] great [SSEP] [O] romantic [A] tapas [S] great [SSEP] [O] small [A] tapas [S] great [SSEP] [O] not overly crowed [A] tapas [S] great [SSEP] [O] excellent [A] prices [S] great', '[O] excellent [S] great [A] tapas [SSEP] [O] great [S] great [A] prices [SSEP] [O] small [S] great [A] tapas [SSEP] [O] not overly crowed [S] great [A] tapas [SSEP] [O] excellent [S] great [A] prices', '[A] tapas [O] excellent [S] great [SSEP] [A] prices [O] great [S] great [SSEP] [A] tapas [O] romantic [S] great [SSEP] [A] tapas [O] small [S] great [SSEP] [A] tapas [O] not overly crowed [S] great [SSEP] [A] prices [O] excellent [S] great', '[A] tapas [S] great [O] excellent [SSEP] [A] prices [S] great [O] great [SSEP] [A] tapas [S] great [O] romantic [SSEP] [A] tapas [S] great [O] small [SSEP] [A] tapas [S] great [O] not overly crowed', '[S] great [O] excellent [A] tapas [SSEP] [S] great [O] great [A] prices [SSEP] [S] great [O] small [A] tapas [SSEP] [S] great [O] not overly crowed [A] tapas [SSEP] [S] great [O] excellent [A] prices']

task, data: aste rest14
target: [('null', 'chocolate raspberry cake', 'great', 'full of flavor'), ('null', 'chocolate raspberry cake', 'great', 'heavenly'), ('null', 'chocolate raspberry cake', 'great', 'not too sweet'), ('null', 'flavor', 'great', 'full')]
output: ['[A] chocolate raspberry cake [O] heavenly [S] great', '[A] chocolate raspberry cake [O] not too sweet [S] great', '[A] flavor [O] full [S] great']
sent: ['The', 'chocolate', 'raspberry', 'cake', 'is', 'heavenly', '--', 'not', 'too', 'sweet', ',', 'but', 'full', 'of', 'flavor', '.']
counter: {('null', 'chocolate raspberry cake', 'great', 'heavenly'): 5, ('null', 'chocolate raspberry cake', 'great', 'not too sweet'): 5, ('null', 'flavor', 'great', 'full of flavor'): 2, ('null', 'flavor', 'great', 'full'): 3}
output quads: ['[A] chocolate raspberry cake [O] heavenly [S] great', '[A] chocolate raspberry cake [O] not too sweet [S] great', '[A] flavor [O] full [S] great']
multi_path: ['[O] heavenly [A] chocolate raspberry cake [S] great [SSEP] [O] not too sweet [A] chocolate raspberry cake [S] great [SSEP] [O] full of flavor [A] flavor [S] great', '[O] heavenly [S] great [A] chocolate raspberry cake [SSEP] [O] not too sweet [S] great [A] chocolate raspberry cake [SSEP] [O] full [S] great [A] flavor', '[A] chocolate raspberry cake [O] heavenly [S] great [SSEP] [A] chocolate raspberry cake [O] not too sweet [S] great [SSEP] [A] flavor [O] full [S] great', '[A] chocolate raspberry cake [S] great [O] heavenly [SSEP] [A] chocolate raspberry cake [S] great [O] not too sweet [SSEP] [A] flavor [S] great [O] full', '[S] great [O] heavenly [A] chocolate raspberry cake [SSEP] [S] great [O] not too sweet [A] chocolate raspberry cake [SSEP] [S] great [O] full of flavor [A] flavor']

task, data: aste rest14
target: [('null', 'dining experience', 'great', 'lovely')]
output: ['[A] dining [O] lovely [S] great']
sent: ['Really', 'Lovely', 'dining', 'experience', 'in', 'the', 'midst', 'of', 'buzzing', 'midtown', 'area', '.']
counter: {('null', 'dining', 'great', 'lovely'): 5}
output quads: ['[A] dining [O] lovely [S] great']
multi_path: ['[O] lovely [A] dining [S] great', '[O] lovely [S] great [A] dining', '[A] dining [O] lovely [S] great', '[A] dining [S] great [O] lovely', '[S] great [O] lovely [A] dining']

task, data: aste rest14
target: [('null', 'waiter', 'great', 'efficient'), ('null', 'waiter', 'great', 'helpful')]
output: ['[A] waiter [O] courteous [S] great', '[A] waiter [O] efficient [S] great', '[A] waiter [O] helpful [S] great']
sent: ['Not', 'only', 'was', 'the', 'waiter', 'efficient', 'and', 'courteous', ',', 'but', 'also', 'extremely', 'helpful', '.']
counter: {('null', 'waiter', 'great', 'efficient'): 5, ('null', 'waiter', 'great', 'courteous'): 5, ('null', 'waiter', 'great', 'helpful'): 5}
output quads: ['[A] waiter [O] efficient [S] great', '[A] waiter [O] courteous [S] great', '[A] waiter [O] helpful [S] great']
multi_path: ['[O] efficient [A] waiter [S] great [SSEP] [O] courteous [A] waiter [S] great [SSEP] [O] helpful [A] waiter [S] great', '[O] efficient [S] great [A] waiter [SSEP] [O] courteous [S] great [A] waiter [SSEP] [O] helpful [S] great [A] waiter', '[A] waiter [O] efficient [S] great [SSEP] [A] waiter [O] courteous [S] great [SSEP] [A] waiter [O] helpful [S] great', '[A] waiter [S] great [O] efficient [SSEP] [A] waiter [S] great [O] courteous [SSEP] [A] waiter [S] great [O] helpful', '[S] great [O] efficient [A] waiter [SSEP] [S] great [O] courteous [A] waiter [SSEP] [S] great [O] helpful [A] waiter']

task, data: aste rest14
target: [('null', 'bill', 'bad', 'big')]
output: ['[A] room [O] enough [S] ok']
sent: ['But', 'make', 'sure', 'you', 'have', 'enough', 'room', 'on', 'your', 'credit', 'card', 'as', 'the', 'bill', 'will', 'leave', 'a', 'big', 'dent', 'in', 'your', 'wallet', '.']
counter: {('null', 'room', 'ok', 'enough'): 5, ('null', 'bill', 'bad', 'big dent'): 2}
output quads: ['[A] room [O] enough [S] ok']
multi_path: ['[O] enough [A] room [S] ok [SSEP] [O] big dent [A] bill [S] bad', '[O] enough [S] ok [A] room', '[A] room [O] enough [S] ok [SSEP] [A] bill [O] big dent [S] bad', '[A] room [S] ok [O] enough', '[S] ok [O] enough [A] room']

task, data: aste rest14
target: [('null', 'duck', 'great', 'try'), ('null', 'sushi', 'great', 'fresh')]
output: ['[A] duck [O] happy [S] great', '[A] entrees [O] happy [S] great', '[A] sushi [O] fresh [S] great']
sent: ['Not', 'only', 'was', 'the', 'sushi', 'fresh', ',', 'they', 'also', 'served', 'other', 'entrees', 'allowed', 'each', 'guest', 'something', 'to', 'choose', 'from', 'and', 'we', 'all', 'left', 'happy', '(', 'try', 'the', 'duck', '!']
counter: {('null', 'sushi', 'great', 'fresh'): 5, ('null', 'entrees', 'great', 'happy'): 5, ('null', 'duck', 'great', 'happy'): 3, ('null', 'duck', 'great', 'try'): 2}
output quads: ['[A] sushi [O] fresh [S] great', '[A] entrees [O] happy [S] great', '[A] duck [O] happy [S] great']
multi_path: ['[O] fresh [A] sushi [S] great [SSEP] [O] happy [A] entrees [S] great [SSEP] [O] happy [A] duck [S] great', '[O] fresh [S] great [A] sushi [SSEP] [O] happy [S] great [A] entrees [SSEP] [O] happy [S] great [A] duck', '[A] sushi [O] fresh [S] great [SSEP] [A] entrees [O] happy [S] great [SSEP] [A] duck [O] try [S] great', '[A] sushi [S] great [O] fresh [SSEP] [A] entrees [S] great [O] happy [SSEP] [A] duck [S] great [O] try', '[S] great [O] fresh [A] sushi [SSEP] [S] great [O] happy [A] entrees [SSEP] [S] great [O] happy [A] duck']

task, data: aste rest14
target: [('null', 'anchovy dressing', 'ok', 'no'), ('null', 'egg', 'ok', 'no'), ('null', 'green beans', 'ok', 'no'), ('null', 'nicoise olives', 'ok', 'no'), ('null', 'red onion', 'ok', 'no')]
output: ['[A] anchovy dressing [O] no [S] bad', '[A] egg [O] no [S] bad', '[A] green beans [O] no [S] bad', '[A] nicoise olives [O] no [S] bad', '[A] red onion [O] no [S] bad']
sent: ['No', 'green', 'beans', ',', 'no', 'egg', ',', 'no', 'anchovy', 'dressing', ',', 'no', 'nicoise', 'olives', ',', 'no', 'red', 'onion', '.']
counter: {('null', 'green beans', 'bad', 'no'): 5, ('null', 'egg', 'bad', 'no'): 5, ('null', 'anchovy dressing', 'bad', 'no'): 5, ('null', 'nicoise olives', 'bad', 'no'): 5, ('null', 'red onion', 'bad', 'no'): 5}
output quads: ['[A] green beans [O] no [S] bad', '[A] egg [O] no [S] bad', '[A] anchovy dressing [O] no [S] bad', '[A] nicoise olives [O] no [S] bad', '[A] red onion [O] no [S] bad']
multi_path: ['[O] no [A] green beans [S] bad [SSEP] [O] no [A] egg [S] bad [SSEP] [O] no [A] anchovy dressing [S] bad [SSEP] [O] no [A] nicoise olives [S] bad [SSEP] [O] no [A] red onion [S] bad', '[O] no [S] bad [A] green beans [SSEP] [O] no [S] bad [A] egg [SSEP] [O] no [S] bad [A] anchovy dressing [SSEP] [O] no [S] bad [A] nicoise olives [SSEP] [O] no [S] bad [A] red onion', '[A] green beans [O] no [S] bad [SSEP] [A] egg [O] no [S] bad [SSEP] [A] anchovy dressing [O] no [S] bad [SSEP] [A] nicoise olives [O] no [S] bad [SSEP] [A] red onion [O] no [S] bad', '[A] green beans [S] bad [O] no [SSEP] [A] egg [S] bad [O] no [SSEP] [A] anchovy dressing [S] bad [O] no [SSEP] [A] nicoise olives [S] bad [O] no [SSEP] [A] red onion [S] bad [O] no', '[S] bad [O] no [A] green beans [SSEP] [S] bad [O] no [A] egg [SSEP] [S] bad [O] no [A] anchovy dressing [SSEP] [S] bad [O] no [A] nicoise olives [SSEP] [S] bad [O] no [A] red onion']

task, data: aste rest14
target: [('null', 'chocolate frosty', 'great', 'cool'), ('null', 'chocolate frosty', 'great', 'ultra-thick'), ('null', 'fries', 'ok', 'thick')]
output: ['[A] baked potatoes [O] stuffed [S] great', '[A] chili [O] meaty [S] great', '[A] chocolate frosty [O] cool [S] great', '[A] chocolate frosty [O] ultra-thick [S] great', '[A] fries [O] thick [S] great']
sent: ['Thick', 'fries', ',', 'meaty', 'chili', 'and', 'stuffed', 'baked', 'potatoes', 'round', 'out', 'a', 'menu', 'that', 'includes', 'a', 'cool', ',', 'ultra-thick', 'chocolate', 'Frosty', '.']
counter: {('null', 'fries', 'great', 'thick'): 5, ('null', 'chili', 'great', 'meaty'): 5, ('null', 'baked potatoes', 'great', 'stuffed'): 5, ('null', 'chocolate frosty', 'great', 'cool'): 5, ('null', 'chocolate frosty', 'great', 'ultra-thick'): 5}
output quads: ['[A] fries [O] thick [S] great', '[A] chili [O] meaty [S] great', '[A] baked potatoes [O] stuffed [S] great', '[A] chocolate frosty [O] cool [S] great', '[A] chocolate frosty [O] ultra-thick [S] great']
multi_path: ['[O] thick [A] fries [S] great [SSEP] [O] meaty [A] chili [S] great [SSEP] [O] stuffed [A] baked potatoes [S] great [SSEP] [O] cool [A] chocolate frosty [S] great [SSEP] [O] ultra-thick [A] chocolate frosty [S] great', '[O] thick [S] great [A] fries [SSEP] [O] meaty [S] great [A] chili [SSEP] [O] stuffed [S] great [A] baked potatoes [SSEP] [O] cool [S] great [A] chocolate frosty [SSEP] [O] ultra-thick [S] great [A] chocolate frosty', '[A] fries [O] thick [S] great [SSEP] [A] chili [O] meaty [S] great [SSEP] [A] baked potatoes [O] stuffed [S] great [SSEP] [A] chocolate frosty [O] cool [S] great [SSEP] [A] chocolate frosty [O] ultra-thick [S] great', '[A] fries [S] great [O] thick [SSEP] [A] chili [S] great [O] meaty [SSEP] [A] baked potatoes [S] great [O] stuffed [SSEP] [A] chocolate frosty [S] great [O] cool [SSEP] [A] chocolate frosty [S] great [O] ultra-thick', '[S] great [O] thick [A] fries [SSEP] [S] great [O] meaty [A] chili [SSEP] [S] great [O] stuffed [A] baked potatoes [SSEP] [S] great [O] cool [A] chocolate frosty [SSEP] [S] great [O] ultra-thick [A] chocolate frosty']

task, data: aste rest14
target: [('null', 'mango chicken', 'great', 'fresh'), ('null', 'mango chicken', 'great', 'surprisingly sophisticated'), ('null', 'roti canai appetizer', 'great', 'delectable')]
output: ['[A] fried pancake served with pungent curry dipping sauce [O] delectable [S] great', '[A] mango chicken [O] fresh [S] great', '[A] mango chicken [O] sophisticated [S] great', '[A] roti canai appetizer [O] delectable [S] great']
sent: ['The', 'homage', 'to', 'India', 'is', 'most', 'evident', 'in', 'the', 'delectable', 'roti', 'canai', 'appetizer', ',', 'a', 'fried', 'pancake', 'served', 'with', 'pungent', 'curry', 'dipping', 'sauce', ',', 'while', 'the', 'mango', 'chicken', 'offers', 'a', 'surprisingly', 'sophisticated', ',', 'fresh', 'take', 'on', 'sweet-and-sour', '.']
counter: {('null', 'roti canai appetizer', 'great', 'delectable'): 5, ('null', 'fried pancake served with pungent curry dipping sauce', 'great', 'delectable'): 5, ('null', 'mango chicken', 'great', 'sophisticated'): 5, ('null', 'mango chicken', 'great', 'fresh'): 5}
output quads: ['[A] roti canai appetizer [O] delectable [S] great', '[A] fried pancake served with pungent curry dipping sauce [O] delectable [S] great', '[A] mango chicken [O] sophisticated [S] great', '[A] mango chicken [O] fresh [S] great']
multi_path: ['[O] delectable [A] roti canai appetizer [S] great [SSEP] [O] delectable [A] fried pancake served with pungent curry dipping sauce [S] great [SSEP] [O] sophisticated [A] mango chicken [S] great [SSEP] [O] fresh [A] mango chicken [S] great', '[O] delectable [S] great [A] roti canai appetizer [SSEP] [O] delectable [S] great [A] fried pancake served with pungent curry dipping sauce [SSEP] [O] sophisticated [S] great [A] mango chicken [SSEP] [O] fresh [S] great [A] mango chicken', '[A] roti canai appetizer [O] delectable [S] great [SSEP] [A] fried pancake served with pungent curry dipping sauce [O] delectable [S] great [SSEP] [A] mango chicken [O] sophisticated [S] great [SSEP] [A] mango chicken [O] fresh [S] great', '[A] roti canai appetizer [S] great [O] delectable [SSEP] [A] fried pancake served with pungent curry dipping sauce [S] great [O] delectable [SSEP] [A] mango chicken [S] great [O] sophisticated [SSEP] [A] mango chicken [S] great [O] fresh', '[S] great [O] delectable [A] roti canai appetizer [SSEP] [S] great [O] delectable [A] fried pancake served with pungent curry dipping sauce [SSEP] [S] great [O] sophisticated [A] mango chicken [SSEP] [S] great [O] fresh [A] mango chicken']

task, data: aste rest14
target: [('null', 'ground chickpea soup', 'bad', 'thin'), ('null', 'starter', 'ok', 'thin')]
output: ['[A] ground chickpea soup [O] thin [S] bad']
sent: ['The', 'ground', 'chickpea', 'soup', 'we', 'sampled', 'as', 'a', 'starter', 'tasted', 'somewhat', 'thin', '.']
counter: {('null', 'ground chickpea soup', 'bad', 'thin'): 5}
output quads: ['[A] ground chickpea soup [O] thin [S] bad']
multi_path: ['[O] thin [A] ground chickpea soup [S] bad', '[O] thin [S] bad [A] ground chickpea soup', '[A] ground chickpea soup [O] thin [S] bad', '[A] ground chickpea soup [S] bad [O] thin', '[S] bad [O] thin [A] ground chickpea soup']

task, data: aste rest14
target: [('null', 'bartenders', 'bad', 'horrible'), ('null', 'clientele', 'bad', 'loud-mouthed'), ('null', 'clientele', 'bad', 'rowdy'), ('null', 'service', 'bad', 'below'), ('null', 'staff', 'bad', 'bad')]
output: ['[A] bartenders [O] horrible [S] bad', '[A] service [O] below the quality of food [S] bad']
sent: ['The', 'service', ',', 'however', ',', 'is', 'a', 'peg', 'or', 'two', 'below', 'the', 'quality', 'of', 'food', '(', 'horrible', 'bartenders', ')', ',', 'and', 'the', 'clientele', ',', 'for', 'the', 'most', 'part', ',', 'are', 'rowdy', ',', 'loud-mouthed', 'commuters', '(', 'this', 'could', 'explain', 'the', 'bad', 'attitudes', 'from', 'the', 'staff', ')', 'getting', 'loaded', 'for', 'an', 'AC/DC', 'concert', 'or', 'a', 'Knicks', 'game', '.']
counter: {('null', 'service', 'bad', 'below the quality of food'): 4, ('null', 'bartenders', 'bad', 'horrible'): 5, ('null', 'service', 'bad', 'below'): 1}
output quads: ['[A] service [O] below the quality of food [S] bad', '[A] bartenders [O] horrible [S] bad']
multi_path: ['[O] below the quality of food [A] service [S] bad [SSEP] [O] horrible [A] bartenders [S] bad', '[O] below the quality of food [S] bad [A] service [SSEP] [O] horrible [S] bad [A] bartenders', '[A] service [O] below the quality of food [S] bad [SSEP] [A] bartenders [O] horrible [S] bad', '[A] service [S] bad [O] below [SSEP] [A] bartenders [S] bad [O] horrible', '[S] bad [O] below the quality of food [A] service [SSEP] [S] bad [O] horrible [A] bartenders']

task, data: aste rest14
target: [('null', 'ambience', 'great', 'beautiful'), ('null', 'catfish', 'great', 'delicious'), ('null', 'catfish', 'great', 'salty'), ('null', 'food', 'great', 'excellent'), ('null', 'service', 'great', 'attentive')]
output: ['[A] ambience [O] beautiful [S] great', '[A] catfish [O] delicious [S] great', '[A] food [O] excellent [S] great', '[A] service [O] attentive [S] great']
sent: ['Although', 'small', ',', 'it', 'has', 'beautiful', 'ambience', ',', 'excellent', 'food', '(', 'the', 'catfish', 'is', 'delicious', '-', 'if', 'ya', 'do', "n't", 'mind', 'it', 'a', 'lil', 'salty', ')', 'and', 'attentive', 'service', '.']
counter: {('null', 'ambience', 'great', 'beautiful'): 5, ('null', 'food', 'great', 'excellent'): 5, ('null', 'catfish', 'great', 'delicious'): 5, ('null', 'service', 'great', 'attentive'): 5}
output quads: ['[A] ambience [O] beautiful [S] great', '[A] food [O] excellent [S] great', '[A] catfish [O] delicious [S] great', '[A] service [O] attentive [S] great']
multi_path: ['[O] beautiful [A] ambience [S] great [SSEP] [O] excellent [A] food [S] great [SSEP] [O] delicious [A] catfish [S] great [SSEP] [O] attentive [A] service [S] great', '[O] beautiful [S] great [A] ambience [SSEP] [O] excellent [S] great [A] food [SSEP] [O] delicious [S] great [A] catfish [SSEP] [O] attentive [S] great [A] service', '[A] ambience [O] beautiful [S] great [SSEP] [A] food [O] excellent [S] great [SSEP] [A] catfish [O] delicious [S] great [SSEP] [A] service [O] attentive [S] great', '[A] ambience [S] great [O] beautiful [SSEP] [A] food [S] great [O] excellent [SSEP] [A] catfish [S] great [O] delicious [SSEP] [A] service [S] great [O] attentive', '[S] great [O] beautiful [A] ambience [SSEP] [S] great [O] excellent [A] food [SSEP] [S] great [O] delicious [A] catfish [SSEP] [S] great [O] attentive [A] service']

task, data: aste rest14
target: [('null', 'brisket', 'great', 'good'), ('null', 'cajun shrimp', 'ok', 'good'), ('null', 'ribs', 'great', 'good'), ('null', 'wings', 'great', 'good')]
output: ['[A] brisket [O] best [S] ok', '[A] brisket [O] not great [S] ok', '[A] cajun shrimp [O] good [S] ok', '[A] cajun shrimp [O] not great [S] ok', '[A] ribs [O] best [S] ok', '[A] ribs [O] not great [S] ok', '[A] wings [O] best [S] ok', '[A] wings [O] good [S] ok']
sent: ['Stick', 'to', 'the', 'items', 'the', 'place', 'does', 'best', ',', 'brisket', ',', 'ribs', ',', 'wings', ',', 'cajun', 'shrimp', 'is', 'good', ',', 'not', 'great', '.']
counter: {('null', 'brisket', 'ok', 'best'): 4, ('null', 'ribs', 'ok', 'best'): 4, ('null', 'wings', 'ok', 'best'): 4, ('null', 'cajun shrimp', 'ok', 'good'): 3, ('null', 'brisket', 'ok', 'not great'): 4, ('null', 'ribs', 'ok', 'not great'): 4, ('null', 'wings', 'ok', 'good'): 3, ('null', 'cajun shrimp', 'ok', 'not great'): 3, ('null', 'brisket', 'great', 'best'): 1, ('null', 'ribs', 'great', 'best'): 1, ('null', 'wings', 'great', 'best'): 1, ('null', 'cajun shrimp', 'great', 'good'): 2, ('null', 'brisket', 'great', 'not great'): 1, ('null', 'ribs', 'great', 'not great'): 1, ('null', 'wings', 'great', 'good'): 2, ('null', 'cajun shrimp', 'great', 'not great'): 2}
output quads: ['[A] brisket [O] best [S] ok', '[A] ribs [O] best [S] ok', '[A] wings [O] best [S] ok', '[A] cajun shrimp [O] good [S] ok', '[A] brisket [O] not great [S] ok', '[A] ribs [O] not great [S] ok', '[A] wings [O] good [S] ok', '[A] cajun shrimp [O] not great [S] ok']
multi_path: ['[O] best [A] brisket [S] ok [SSEP] [O] best [A] ribs [S] ok [SSEP] [O] best [A] wings [S] ok [SSEP] [O] good [A] cajun shrimp [S] ok [SSEP] [O] not great [A] brisket [S] ok [SSEP] [O] not great [A] ribs [S] ok [SSEP] [O] good [A] wings [S] ok [SSEP] [O] not great [A] cajun shrimp [S] ok', '[O] best [S] great [A] brisket [SSEP] [O] best [S] great [A] ribs [SSEP] [O] best [S] great [A] wings [SSEP] [O] good [S] great [A] cajun shrimp [SSEP] [O] not great [S] great [A] brisket [SSEP] [O] not great [S] great [A] ribs [SSEP] [O] good [S] great [A] wings [SSEP] [O] not great [S] great [A] cajun shrimp', '[A] brisket [O] best [S] ok [SSEP] [A] ribs [O] best [S] ok [SSEP] [A] wings [O] best [S] ok [SSEP] [A] cajun shrimp [O] good [S] ok [SSEP] [A] brisket [O] not great [S] ok [SSEP] [A] ribs [O] not great [S] ok [SSEP] [A] wings [O] good [S] ok [SSEP] [A] cajun shrimp [O] not great [S] ok', '[A] brisket [S] ok [O] best [SSEP] [A] ribs [S] ok [O] best [SSEP] [A] wings [S] ok [O] best [SSEP] [A] cajun shrimp [S] ok [O] good [SSEP] [A] brisket [S] ok [O] not great [SSEP] [A] ribs [S] ok [O] not great [SSEP] [A] wings [S] ok [O] good [SSEP] [A] cajun shrimp [S] ok [O] not great', '[S] ok [O] best [A] brisket [SSEP] [S] ok [O] best [A] ribs [SSEP] [S] ok [O] best [A] wings [SSEP] [S] great [O] good [A] cajun shrimp [SSEP] [S] ok [O] not great [A] brisket [SSEP] [S] ok [O] not great [A] ribs [SSEP] [S] great [O] good [A] wings [SSEP] [S] great [O] not great [A] cajun shrimp']

task, data: aste rest14
target: [('null', 'atmosphere', 'great', 'artsy'), ('null', 'atmosphere', 'great', 'laid-back')]
output: ['[A] atmosphere [O] artsy [S] great', '[A] atmosphere [O] laid-back [S] great', '[A] takeout and eat-in burger joint [O] israeli-style [S] great']
sent: ['Hip', 'boutiques', 'and', 'bars', 'on', 'Ludlow', 'add', 'to', 'the', 'artsy', ',', 'laid-back', 'atmosphere', 'at', 'this', 'Israeli-style', 'takeout', 'and', 'eat-in', 'burger', 'joint', '.']
counter: {('null', 'atmosphere', 'great', 'artsy'): 5, ('null', 'atmosphere', 'great', 'laid-back'): 5, ('null', 'takeout and eat-in burger joint', 'great', 'israeli-style'): 5}
output quads: ['[A] atmosphere [O] artsy [S] great', '[A] atmosphere [O] laid-back [S] great', '[A] takeout and eat-in burger joint [O] israeli-style [S] great']
multi_path: ['[O] artsy [A] atmosphere [S] great [SSEP] [O] laid-back [A] atmosphere [S] great [SSEP] [O] israeli-style [A] takeout and eat-in burger joint [S] great', '[O] artsy [S] great [A] atmosphere [SSEP] [O] laid-back [S] great [A] atmosphere [SSEP] [O] israeli-style [S] great [A] takeout and eat-in burger joint', '[A] atmosphere [O] artsy [S] great [SSEP] [A] atmosphere [O] laid-back [S] great [SSEP] [A] takeout and eat-in burger joint [O] israeli-style [S] great', '[A] atmosphere [S] great [O] artsy [SSEP] [A] atmosphere [S] great [O] laid-back [SSEP] [A] takeout and eat-in burger joint [S] great [O] israeli-style', '[S] great [O] artsy [A] atmosphere [SSEP] [S] great [O] laid-back [A] atmosphere [SSEP] [S] great [O] israeli-style [A] takeout and eat-in burger joint']

task, data: aste rest14
target: [('null', 'black cod with miso base', 'ok', 'modern'), ('null', 'black cod with miso base', 'ok', 'westernized'), ('null', 'foie gras unagi napolean', 'ok', 'modern'), ('null', 'foie gras unagi napolean', 'ok', 'westernized'), ('null', 'jap style hamburger steak', 'ok', 'modern'), ('null', 'jap style hamburger steak', 'ok', 'westernized'), ('null', 'japanese dishes', 'ok', 'modern'), ('null', 'japanese dishes', 'ok', 'westernized'), ('null', 'menu', 'great', 'creative'), ('null', 'menu', 'great', 'impressive'), ('null', 'rack of lamb in black truffle sauce', 'ok', 'modern'), ('null', 'rack of lamb in black truffle sauce', 'ok', 'westernized'), ('null', 'spicy cod roe spaghetti', 'ok', 'modern'), ('null', 'spicy cod roe spaghetti', 'ok', 'westernized')]
output: ['[A] black cod with miso base [O] spicy cod roe spaghetti [S] great', '[A] foie gras unagi napolean [O] modern [S] great', '[A] jap style hamburger steak [O] westernized [S] great', '[A] japanese dishes [O] modern [S] great', '[A] japanese dishes [O] westernized [S] great', '[A] menu [O] creative [S] great', '[A] menu [O] impressive [S] great', '[A] rack of lamb in black truffle sauce [O] modern [S] great']
sent: ['My', 'Chelsea', "'s", 'impressive', 'and', 'creative', 'menu', 'includes', 'modern', ',', 'Westernized', 'Japanese', 'dishes', 'such', 'as', 'Foie', 'Gras', 'Unagi', 'Napolean', ',', 'Jap', 'style', 'hamburger', 'steak', ',', 'spicy', 'cod', 'roe', 'spaghetti', ',', 'black', 'cod', 'with', 'miso', 'base', ',', 'and', 'rack', 'of', 'lamb', 'in', 'black', 'truffle', 'sauce', ',', 'to', 'name', 'a', 'few', '.']
counter: {('null', 'menu', 'great', 'impressive'): 5, ('null', 'menu', 'great', 'creative'): 5, ('null', 'japanese dishes', 'great', 'modern'): 5, ('null', 'japanese dishes', 'great', 'westernized'): 5, ('null', 'foie gras unagi napolean', 'great', 'modern'): 5, ('null', 'jap style hamburger steak', 'great', 'westernized'): 5, ('null', 'black cod with miso base', 'great', 'spicy cod roe spaghetti'): 3, ('null', 'rack of lamb in black truffle sauce', 'great', 'modern'): 3, ('null', 'spicy cod roe spaghetti', 'great', 'spicy'): 2, ('null', 'black cod with miso base', 'great', 'modern'): 1, ('null', 'rack of lamb in black truffle sauce', 'great', 'westernized'): 1, ('null', 'black cod with miso base', 'great', 'creative'): 1}
output quads: ['[A] menu [O] impressive [S] great', '[A] menu [O] creative [S] great', '[A] japanese dishes [O] modern [S] great', '[A] japanese dishes [O] westernized [S] great', '[A] foie gras unagi napolean [O] modern [S] great', '[A] jap style hamburger steak [O] westernized [S] great', '[A] black cod with miso base [O] spicy cod roe spaghetti [S] great', '[A] rack of lamb in black truffle sauce [O] modern [S] great']
multi_path: ['[O] impressive [A] menu [S] great [SSEP] [O] creative [A] menu [S] great [SSEP] [O] modern [A] japanese dishes [S] great [SSEP] [O] westernized [A] japanese dishes [S] great [SSEP] [O] modern [A] foie gras unagi napolean [S] great [SSEP] [O] westernized [A] jap style hamburger steak [S] great [SSEP] [O] spicy cod roe spaghetti [A] black cod with miso base [S] great [SSEP] [O] modern [A] rack of lamb in black truffle sauce [S] great', '[O] impressive [S] great [A] menu [SSEP] [O] creative [S] great [A] menu [SSEP] [O] modern [S] great [A] japanese dishes [SSEP] [O] westernized [S] great [A] japanese dishes [SSEP] [O] modern [S] great [A] foie gras unagi napolean [SSEP] [O] westernized [S] great [A] jap style hamburger steak [SSEP] [O] spicy cod roe spaghetti [S] great [A] black cod with miso base [SSEP] [O] modern [S] great [A] rack of lamb in black truffle sauce', '[A] menu [O] impressive [S] great [SSEP] [A] menu [O] creative [S] great [SSEP] [A] japanese dishes [O] modern [S] great [SSEP] [A] japanese dishes [O] westernized [S] great [SSEP] [A] foie gras unagi napolean [O] modern [S] great [SSEP] [A] jap style hamburger steak [O] westernized [S] great [SSEP] [A] spicy cod roe spaghetti [O] spicy [S] great [SSEP] [A] black cod with miso base [O] modern [S] great [SSEP] [A] rack of lamb in black truffle sauce [O] westernized [S] great', '[A] menu [S] great [O] impressive [SSEP] [A] menu [S] great [O] creative [SSEP] [A] japanese dishes [S] great [O] modern [SSEP] [A] japanese dishes [S] great [O] westernized [SSEP] [A] foie gras unagi napolean [S] great [O] modern [SSEP] [A] jap style hamburger steak [S] great [O] westernized [SSEP] [A] spicy cod roe spaghetti [S] great [O] spicy [SSEP] [A] black cod with miso base [S] great [O] creative', '[S] great [O] impressive [A] menu [SSEP] [S] great [O] creative [A] menu [SSEP] [S] great [O] modern [A] japanese dishes [SSEP] [S] great [O] westernized [A] japanese dishes [SSEP] [S] great [O] modern [A] foie gras unagi napolean [SSEP] [S] great [O] westernized [A] jap style hamburger steak [SSEP] [S] great [O] spicy cod roe spaghetti [A] black cod with miso base [SSEP] [S] great [O] modern [A] rack of lamb in black truffle sauce']

task, data: aste rest14
target: [('null', 'appetizers', 'great', 'not expensive'), ('null', 'food', 'great', 'excellent')]
output: ['[A] entrees [O] no [S] bad', '[A] food [O] excellent [S] great', '[A] food [O] not expensive [S] great']
sent: ['His', 'food', 'is', 'excellent', '(', 'and', 'not', 'expensive', 'by', 'NYC', 'standards-', 'no', 'entrees', 'over', '$', '30', ',', 'most', 'appetizers', '$', '12', 'to', '14', ')', '.']
counter: {('null', 'food', 'great', 'excellent'): 5, ('null', 'food', 'great', 'not expensive'): 5, ('null', 'entrees', 'bad', 'no'): 3, ('null', 'appetizers', 'bad', 'no'): 1, ('null', 'entrees', 'ok', 'no'): 2, ('null', 'appetizers', 'ok', 'no'): 2, ('null', 'appetizers', 'bad', 'not expensive'): 2}
output quads: ['[A] food [O] excellent [S] great', '[A] food [O] not expensive [S] great', '[A] entrees [O] no [S] bad']
multi_path: ['[O] excellent [A] food [S] great [SSEP] [O] not expensive [A] food [S] great [SSEP] [O] no [A] entrees [S] bad [SSEP] [O] no [A] appetizers [S] bad', '[O] excellent [S] great [A] food [SSEP] [O] not expensive [S] great [A] food [SSEP] [O] no [S] ok [A] entrees [SSEP] [O] no [S] ok [A] appetizers', '[A] food [O] excellent [S] great [SSEP] [A] food [O] not expensive [S] great [SSEP] [A] entrees [O] no [S] bad [SSEP] [A] appetizers [O] not expensive [S] bad', '[A] food [S] great [O] excellent [SSEP] [A] food [S] great [O] not expensive [SSEP] [A] entrees [S] bad [O] no [SSEP] [A] appetizers [S] bad [O] not expensive', '[S] great [O] excellent [A] food [SSEP] [S] great [O] not expensive [A] food [SSEP] [S] ok [O] no [A] entrees [SSEP] [S] ok [O] no [A] appetizers']

task, data: aste rest14
target: [('null', 'food', 'great', 'consistant'), ('null', 'food', 'great', 'good')]
output: ['[A] diner [O] best [S] great', '[A] food [O] consistant [S] great', '[A] food [O] good [S] great']
sent: ['The', 'food', 'is', 'consistant', 'and', 'good', 'but', 'how', 'it', 'got', 'name', 'Best', 'Diner', 'In', 'Manhattan', 'is', 'beyond', 'me', '.']
counter: {('null', 'food', 'great', 'consistant'): 5, ('null', 'food', 'great', 'good'): 5, ('null', 'diner', 'great', 'best'): 5}
output quads: ['[A] food [O] consistant [S] great', '[A] food [O] good [S] great', '[A] diner [O] best [S] great']
multi_path: ['[O] consistant [A] food [S] great [SSEP] [O] good [A] food [S] great [SSEP] [O] best [A] diner [S] great', '[O] consistant [S] great [A] food [SSEP] [O] good [S] great [A] food [SSEP] [O] best [S] great [A] diner', '[A] food [O] consistant [S] great [SSEP] [A] food [O] good [S] great [SSEP] [A] diner [O] best [S] great', '[A] food [S] great [O] consistant [SSEP] [A] food [S] great [O] good [SSEP] [A] diner [S] great [O] best', '[S] great [O] consistant [A] food [SSEP] [S] great [O] good [A] food [SSEP] [S] great [O] best [A] diner']

task, data: aste rest14
target: [('null', 'fresh veggies', 'great', 'lots'), ('null', 'pasta primavera', 'great', 'outstanding')]
output: ['[A] pasta primavera [O] outstanding [S] great', '[A] veggies [O] fresh [S] great']
sent: ['The', 'pasta', 'primavera', 'was', 'outstanding', 'as', 'well', ',', 'lots', 'of', 'fresh', 'veggies', '.']
counter: {('null', 'pasta primavera', 'great', 'outstanding'): 5, ('null', 'veggies', 'great', 'fresh'): 5}
output quads: ['[A] pasta primavera [O] outstanding [S] great', '[A] veggies [O] fresh [S] great']
multi_path: ['[O] outstanding [A] pasta primavera [S] great [SSEP] [O] fresh [A] veggies [S] great', '[O] outstanding [S] great [A] pasta primavera [SSEP] [O] fresh [S] great [A] veggies', '[A] pasta primavera [O] outstanding [S] great [SSEP] [A] veggies [O] fresh [S] great', '[A] pasta primavera [S] great [O] outstanding [SSEP] [A] veggies [S] great [O] fresh', '[S] great [O] outstanding [A] pasta primavera [SSEP] [S] great [O] fresh [A] veggies']

task, data: aste rest14
target: [('null', 'sushi', 'great', 'good'), ('null', 'sushi', 'great', 'not fantastic')]
output: ['[A] sushi [O] good [S] ok', '[A] sushi [O] not fantastic [S] ok']
sent: ['do', "n't", 'get', 'me', 'wrong', '-', 'sushi', 'was', 'good', ',', 'just', 'not', 'fantastic', '.']
counter: {('null', 'sushi', 'ok', 'good'): 5, ('null', 'sushi', 'ok', 'not fantastic'): 5}
output quads: ['[A] sushi [O] good [S] ok', '[A] sushi [O] not fantastic [S] ok']
multi_path: ['[O] good [A] sushi [S] ok [SSEP] [O] not fantastic [A] sushi [S] ok', '[O] good [S] ok [A] sushi [SSEP] [O] not fantastic [S] ok [A] sushi', '[A] sushi [O] good [S] ok [SSEP] [A] sushi [O] not fantastic [S] ok', '[A] sushi [S] ok [O] good [SSEP] [A] sushi [S] ok [O] not fantastic', '[S] ok [O] good [A] sushi [SSEP] [S] ok [O] not fantastic [A] sushi']

task, data: aste rest14
target: [('null', 'size', 'bad', 'busy')]
output: ['[A] size [O] busy [S] ok']
sent: ['Can', 'be', 'a', 'bit', 'busy', 'around', 'peak', 'times', 'because', 'of', 'the', 'size', '.']
counter: {('null', 'size', 'ok', 'busy'): 5}
output quads: ['[A] size [O] busy [S] ok']
multi_path: ['[O] busy [A] size [S] ok', '[O] busy [S] ok [A] size', '[A] size [O] busy [S] ok', '[A] size [S] ok [O] busy', '[S] ok [O] busy [A] size']

task, data: aste rest14
target: [('null', 'french dish', 'ok', 'classic'), ('null', 'place', 'great', 'good'), ('null', 'soup', 'ok', 'simple')]
output: ['[A] french dish [O] classic [S] great', '[A] place [O] good [S] great', '[A] soup [O] simple [S] great']
sent: ['good', 'place', 'to', 'hang', 'out', 'during', 'the', 'day', 'after', 'shopping', 'or', 'to', 'grab', 'a', 'simple', 'soup', 'or', 'classic', 'french', 'dish', 'over', 'a', 'glass', 'of', 'wine', '.']
counter: {('null', 'place', 'great', 'good'): 3, ('null', 'soup', 'great', 'simple'): 5, ('null', 'french dish', 'great', 'classic'): 5}
output quads: ['[A] place [O] good [S] great', '[A] soup [O] simple [S] great', '[A] french dish [O] classic [S] great']
multi_path: ['[O] good [A] place [S] great [SSEP] [O] simple [A] soup [S] great [SSEP] [O] classic [A] french dish [S] great', '[O] good [S] great [A] place [SSEP] [O] simple [S] great [A] soup [SSEP] [O] classic [S] great [A] french dish', '[A] soup [O] simple [S] great [SSEP] [A] french dish [O] classic [S] great', '[A] soup [S] great [O] simple [SSEP] [A] french dish [S] great [O] classic', '[S] great [O] good [A] place [SSEP] [S] great [O] simple [A] soup [SSEP] [S] great [O] classic [A] french dish']

task, data: aste rest14
target: [('null', 'casual drink', 'great', 'enjoying'), ('null', 'outdoors', 'great', 'great')]
output: ['[A] drink [O] casual [S] great', '[A] drink [O] enjoying [S] great', '[A] landscaping [O] great [S] great']
sent: ['However', ',', 'there', 'is', 'just', 'something', 'so', 'great', 'about', 'being', 'outdoors', ',', 'in', 'great', 'landscaping', ',', 'enjoying', 'a', 'casual', 'drink', 'that', 'makes', 'going', 'to', 'this', 'place', 'worthwhile', '.']
counter: {('null', 'landscaping', 'great', 'great'): 4, ('null', 'drink', 'great', 'enjoying'): 5, ('null', 'place', 'great', 'worthwhile'): 2, ('null', 'drink', 'great', 'casual'): 3}
output quads: ['[A] landscaping [O] great [S] great', '[A] drink [O] enjoying [S] great', '[A] drink [O] casual [S] great']
multi_path: ['[O] great [A] landscaping [S] great [SSEP] [O] enjoying [A] drink [S] great [SSEP] [O] worthwhile [A] place [S] great', '[O] great [S] great [A] landscaping [SSEP] [O] enjoying [S] great [A] drink [SSEP] [O] worthwhile [S] great [A] place', '[A] drink [O] enjoying [S] great [SSEP] [A] drink [O] casual [S] great', '[A] drink [S] great [O] enjoying [SSEP] [A] landscaping [S] great [O] great [SSEP] [A] drink [S] great [O] casual', '[S] great [O] great [A] landscaping [SSEP] [S] great [O] enjoying [A] drink [SSEP] [S] great [O] casual [A] drink']

task, data: aste rest14
target: [('null', 'dishes', 'great', 'good'), ('null', 'lamb entree', 'great', 'good'), ('null', 'salads ( avocado shrimp )', 'great', 'good')]
output: ['[A] avocado shrimp [O] good [S] great', '[A] dishes [O] good [S] great', '[A] fried foods [O] correct [S] great', '[A] lamb entree [O] good [S] great', '[A] salads [O] good [S] great']
sent: ['The', 'comments', 'about', 'fried', 'foods', 'is', 'correct', '(', 'below', ')', 'but', 'the', 'other', 'dishes', ',', 'including', 'the', 'lamb', 'entree', 'and', 'many', 'of', 'the', 'salads', '(', 'avocado', 'shrimp', ')', 'were', 'quite', 'good', '.']
counter: {('null', 'fried foods', 'great', 'correct'): 5, ('null', 'dishes', 'great', 'good'): 5, ('null', 'lamb entree', 'great', 'good'): 5, ('null', 'salads', 'great', 'good'): 5, ('null', 'avocado shrimp', 'great', 'good'): 5}
output quads: ['[A] fried foods [O] correct [S] great', '[A] dishes [O] good [S] great', '[A] lamb entree [O] good [S] great', '[A] salads [O] good [S] great', '[A] avocado shrimp [O] good [S] great']
multi_path: ['[O] correct [A] fried foods [S] great [SSEP] [O] good [A] dishes [S] great [SSEP] [O] good [A] lamb entree [S] great [SSEP] [O] good [A] salads [S] great [SSEP] [O] good [A] avocado shrimp [S] great', '[O] correct [S] great [A] fried foods [SSEP] [O] good [S] great [A] dishes [SSEP] [O] good [S] great [A] lamb entree [SSEP] [O] good [S] great [A] salads [SSEP] [O] good [S] great [A] avocado shrimp', '[A] fried foods [O] correct [S] great [SSEP] [A] dishes [O] good [S] great [SSEP] [A] lamb entree [O] good [S] great [SSEP] [A] salads [O] good [S] great [SSEP] [A] avocado shrimp [O] good [S] great', '[A] fried foods [S] great [O] correct [SSEP] [A] dishes [S] great [O] good [SSEP] [A] lamb entree [S] great [O] good [SSEP] [A] salads [S] great [O] good [SSEP] [A] avocado shrimp [S] great [O] good', '[S] great [O] correct [A] fried foods [SSEP] [S] great [O] good [A] dishes [SSEP] [S] great [O] good [A] lamb entree [SSEP] [S] great [O] good [A] salads [SSEP] [S] great [O] good [A] avocado shrimp']

task, data: aste rest14
target: [('null', 'sauce', 'great', 'excellent'), ('null', 'sauce', 'great', 'fresh')]
output: ['[A] mozzarella [O] real [S] great', '[A] sauce [O] excellent [S] great', '[A] sauce [O] fresh [S] great']
sent: ['The', 'sauce', 'is', 'excellent', '(', 'very', 'fresh', ')', 'with', 'dabs', 'of', 'real', 'mozzarella', '.']
counter: {('null', 'sauce', 'great', 'excellent'): 5, ('null', 'sauce', 'great', 'fresh'): 5, ('null', 'mozzarella', 'great', 'real'): 5}
output quads: ['[A] sauce [O] excellent [S] great', '[A] sauce [O] fresh [S] great', '[A] mozzarella [O] real [S] great']
multi_path: ['[O] excellent [A] sauce [S] great [SSEP] [O] fresh [A] sauce [S] great [SSEP] [O] real [A] mozzarella [S] great', '[O] excellent [S] great [A] sauce [SSEP] [O] fresh [S] great [A] sauce [SSEP] [O] real [S] great [A] mozzarella', '[A] sauce [O] excellent [S] great [SSEP] [A] sauce [O] fresh [S] great [SSEP] [A] mozzarella [O] real [S] great', '[A] sauce [S] great [O] excellent [SSEP] [A] sauce [S] great [O] fresh [SSEP] [A] mozzarella [S] great [O] real', '[S] great [O] excellent [A] sauce [SSEP] [S] great [O] fresh [A] sauce [SSEP] [S] great [O] real [A] mozzarella']

task, data: aste rest14
target: [('null', 'dining', 'bad', 'worst'), ('null', 'drinks', 'bad', 'awful'), ('null', 'people', 'bad', 'worst')]
output: ['[A] drinks [O] awful [S] bad', '[A] people [O] worst [S] bad']
sent: ['Do', "n't", 'ever', 'bother', '-', 'the', 'drinks', 'were', 'awful', ',', 'but', 'it', 'was', 'the', 'people', 'who', 'work', 'there', 'that', 'really', 'made', 'this', 'the', 'worst', 'experience', 'at', 'dining', '.']
counter: {('null', 'drinks', 'bad', 'awful'): 5, ('null', 'people', 'bad', 'worst'): 5}
output quads: ['[A] drinks [O] awful [S] bad', '[A] people [O] worst [S] bad']
multi_path: ['[O] awful [A] drinks [S] bad [SSEP] [O] worst [A] people [S] bad', '[O] awful [S] bad [A] drinks [SSEP] [O] worst [S] bad [A] people', '[A] drinks [O] awful [S] bad [SSEP] [A] people [O] worst [S] bad', '[A] drinks [S] bad [O] awful [SSEP] [A] people [S] bad [O] worst', '[S] bad [O] awful [A] drinks [SSEP] [S] bad [O] worst [A] people']

task, data: aste rest14
target: [('null', 'room', 'bad', 'plain')]
output: ['[A] place [O] exciting [S] bad', '[A] room [O] plain [S] bad']
sent: ['The', 'room', 'is', 'a', 'little', 'plain', ',', 'but', 'it', "'s", 'difficult', 'to', 'make', 'such', 'a', 'small', 'place', 'exciting', 'and', 'I', 'would', 'not', 'suggest', 'that', 'as', 'a', 'reason', 'not', 'to', 'go', '.']
counter: {('null', 'room', 'bad', 'plain'): 5, ('null', 'place', 'bad', 'exciting'): 4, ('null', 'place', 'bad', 'difficult'): 1}
output quads: ['[A] room [O] plain [S] bad', '[A] place [O] exciting [S] bad']
multi_path: ['[O] plain [A] room [S] bad [SSEP] [O] exciting [A] place [S] bad', '[O] plain [S] bad [A] room [SSEP] [O] difficult [S] bad [A] place', '[A] room [O] plain [S] bad [SSEP] [A] place [O] exciting [S] bad', '[A] room [S] bad [O] plain [SSEP] [A] place [S] bad [O] exciting', '[S] bad [O] plain [A] room [SSEP] [S] bad [O] exciting [A] place']

task, data: aste rest14
target: [('null', 'dessert', 'great', 'best')]
output: ['[A] chocolate and peanut butter tart [O] best [S] great', '[A] dessert [O] best [S] great']
sent: ['The', 'best', 'dessert', ',', 'a', 'chocolate', 'and', 'peanut', 'butter', 'tart', ',', 'is', "n't", 'particularly', 'Hawaiian', ',', 'but', 'it', "'s", 'a', 'small', 'world', 'when', 'it', 'comes', 'to', 'sweets', '.']
counter: {('null', 'dessert', 'great', 'best'): 4, ('null', 'chocolate and peanut butter tart', 'great', 'best'): 4, ('null', 'dessert', 'bad', 'best'): 1, ('null', 'chocolate and peanut butter tart', 'bad', 'best'): 1}
output quads: ['[A] dessert [O] best [S] great', '[A] chocolate and peanut butter tart [O] best [S] great']
multi_path: ['[O] best [A] dessert [S] great [SSEP] [O] best [A] chocolate and peanut butter tart [S] great', '[O] best [S] great [A] dessert [SSEP] [O] best [S] great [A] chocolate and peanut butter tart', '[A] dessert [O] best [S] great [SSEP] [A] chocolate and peanut butter tart [O] best [S] great', '[A] dessert [S] bad [O] best [SSEP] [A] chocolate and peanut butter tart [S] bad [O] best', '[S] great [O] best [A] dessert [SSEP] [S] great [O] best [A] chocolate and peanut butter tart']

task, data: aste rest14
target: [('null', 'appetizer', 'ok', 'winner'), ('null', 'calamari', 'great', 'winner')]
output: ['[A] calamari [O] winner [S] great']
sent: ['for', 'an', 'appetizer', ',', 'their', 'calamari', 'is', 'a', 'winner', '.']
counter: {('null', 'calamari', 'great', 'winner'): 5}
output quads: ['[A] calamari [O] winner [S] great']
multi_path: ['[O] winner [A] calamari [S] great', '[O] winner [S] great [A] calamari', '[A] calamari [O] winner [S] great', '[A] calamari [S] great [O] winner', '[S] great [O] winner [A] calamari']

task, data: aste rest14
target: [('null', 'bi-level space', 'great', 'gorgeous'), ('null', 'long bar', 'great', 'perfect'), ('null', 'room', 'great', 'gorgeous')]
output: ['[A] bar [O] long [S] great', '[A] drink [O] perfect [S] great', '[A] room [O] gorgeous [S] great', '[A] space [O] bi-level [S] great']
sent: ['The', 'room', 'is', 'a', 'gorgeous', ',', 'bi-level', 'space', 'and', 'the', 'long', 'bar', 'perfect', 'for', 'a', 'drink', '.']
counter: {('null', 'room', 'great', 'gorgeous'): 5, ('null', 'space', 'great', 'bi-level'): 5, ('null', 'bar', 'great', 'long'): 5, ('null', 'drink', 'great', 'perfect'): 4}
output quads: ['[A] room [O] gorgeous [S] great', '[A] space [O] bi-level [S] great', '[A] bar [O] long [S] great', '[A] drink [O] perfect [S] great']
multi_path: ['[O] gorgeous [A] room [S] great [SSEP] [O] bi-level [A] space [S] great [SSEP] [O] long [A] bar [S] great', '[O] gorgeous [S] great [A] room [SSEP] [O] bi-level [S] great [A] space [SSEP] [O] long [S] great [A] bar [SSEP] [O] perfect [S] great [A] drink', '[A] room [O] gorgeous [S] great [SSEP] [A] space [O] bi-level [S] great [SSEP] [A] bar [O] long [S] great [SSEP] [A] drink [O] perfect [S] great', '[A] room [S] great [O] gorgeous [SSEP] [A] space [S] great [O] bi-level [SSEP] [A] bar [S] great [O] long [SSEP] [A] drink [S] great [O] perfect', '[S] great [O] gorgeous [A] room [SSEP] [S] great [O] bi-level [A] space [SSEP] [S] great [O] long [A] bar [SSEP] [S] great [O] perfect [A] drink']

task, data: aste rest14
target: [('null', 'appetizer selection', 'bad', 'stinks')]
output: ['[A] appetizer selection [O] complaints [S] bad']
sent: ['Two', 'complaints-', 'their', 'appetizer', 'selection', 'stinks', ',', 'it', 'would', 'be', 'nice', 'to', 'get', 'some', 'mozzarella', 'sticks', 'on', 'the', 'menu', '.']
counter: {('null', 'appetizer selection', 'bad', 'complaints'): 5}
output quads: ['[A] appetizer selection [O] complaints [S] bad']
multi_path: ['[O] complaints [A] appetizer selection [S] bad', '[O] complaints [S] bad [A] appetizer selection', '[A] appetizer selection [O] complaints [S] bad', '[A] appetizer selection [S] bad [O] complaints', '[S] bad [O] complaints [A] appetizer selection']

task, data: aste rest14
target: [('null', 'service', 'great', 'friendly'), ('null', 'service', 'great', 'prompt')]
output: ['[A] service [O] friendly [S] great', '[A] service [O] prompt [S] great', '[A] waitstaff [O] above [S] great', '[A] waitstaff [O] beyond [S] great']
sent: ['I', 'was', 'especially', 'impressed', 'during', 'the', 'bday', 'party', 'when', 'the', 'waitstaff', 'went', 'above', 'and', 'beyond', 'in', 'helping', 'me', 'decorate', 'and', 'bring', 'out', 'a', 'bday', 'cake', 'as', 'well', 'as', 'offering', 'prompt', 'and', 'friendly', 'service', 'to', 'a', '15', 'person', 'party', '.']
counter: {('null', 'waitstaff', 'great', 'above'): 4, ('null', 'waitstaff', 'great', 'beyond'): 4, ('null', 'service', 'great', 'prompt'): 5, ('null', 'service', 'great', 'friendly'): 5, ('null', 'waitstaff', 'great', 'impressed'): 1}
output quads: ['[A] waitstaff [O] above [S] great', '[A] waitstaff [O] beyond [S] great', '[A] service [O] prompt [S] great', '[A] service [O] friendly [S] great']
multi_path: ['[O] above [A] waitstaff [S] great [SSEP] [O] beyond [A] waitstaff [S] great [SSEP] [O] prompt [A] service [S] great [SSEP] [O] friendly [A] service [S] great', '[O] above [S] great [A] waitstaff [SSEP] [O] beyond [S] great [A] waitstaff [SSEP] [O] prompt [S] great [A] service [SSEP] [O] friendly [S] great [A] service', '[A] waitstaff [O] above [S] great [SSEP] [A] waitstaff [O] beyond [S] great [SSEP] [A] service [O] prompt [S] great [SSEP] [A] service [O] friendly [S] great', '[A] waitstaff [S] great [O] impressed [SSEP] [A] service [S] great [O] prompt [SSEP] [A] service [S] great [O] friendly', '[S] great [O] above [A] waitstaff [SSEP] [S] great [O] beyond [A] waitstaff [SSEP] [S] great [O] prompt [A] service [SSEP] [S] great [O] friendly [A] service']

task, data: aste rest14
target: [('null', 'chicken and falafel platters', 'ok', 'nondescript'), ('null', 'fresh leaf salad', 'ok', 'fresh')]
output: ['[A] chicken [O] nondescript [S] bad', '[A] falafel platters [O] nondescript [S] bad', '[A] leaf salad [O] fresh [S] great']
sent: ['The', 'chicken', 'and', 'falafel', 'platters', 'were', 'nondescript', 'combinations', 'with', 'fresh', 'leaf', 'salad', '.']
counter: {('null', 'chicken', 'bad', 'nondescript'): 4, ('null', 'falafel platters', 'bad', 'nondescript'): 4, ('null', 'leaf salad', 'great', 'fresh'): 5, ('null', 'chicken', 'great', 'nondescript'): 1, ('null', 'falafel platters', 'great', 'nondescript'): 1}
output quads: ['[A] chicken [O] nondescript [S] bad', '[A] falafel platters [O] nondescript [S] bad', '[A] leaf salad [O] fresh [S] great']
multi_path: ['[O] nondescript [A] chicken [S] bad [SSEP] [O] nondescript [A] falafel platters [S] bad [SSEP] [O] fresh [A] leaf salad [S] great', '[O] nondescript [S] bad [A] chicken [SSEP] [O] nondescript [S] bad [A] falafel platters [SSEP] [O] fresh [S] great [A] leaf salad', '[A] chicken [O] nondescript [S] bad [SSEP] [A] falafel platters [O] nondescript [S] bad [SSEP] [A] leaf salad [O] fresh [S] great', '[A] chicken [S] bad [O] nondescript [SSEP] [A] falafel platters [S] bad [O] nondescript [SSEP] [A] leaf salad [S] great [O] fresh', '[S] great [O] nondescript [A] chicken [SSEP] [S] great [O] nondescript [A] falafel platters [SSEP] [S] great [O] fresh [A] leaf salad']

task, data: aste rest14
target: [('null', 'coffee', 'great', 'good'), ('null', 'desserts', 'great', 'excellent')]
output: ['[A] coffee [O] good [S] great', '[A] desserts [O] excellent [S] great', '[A] service [O] great [S] great']
sent: ['The', 'service', 'is', 'great', '(', 'maybe', 'even', 'borderline', 'nagging', 'but', 'at', 'least', 'you', 'get', 'attention', ')', ',', 'the', 'desserts', 'are', 'excellent', 'and', 'the', 'coffee', 'is', 'so', 'very', 'good', '...']
counter: {('null', 'service', 'great', 'great'): 5, ('null', 'desserts', 'great', 'excellent'): 5, ('null', 'coffee', 'great', 'good'): 5}
output quads: ['[A] service [O] great [S] great', '[A] desserts [O] excellent [S] great', '[A] coffee [O] good [S] great']
multi_path: ['[O] great [A] service [S] great [SSEP] [O] excellent [A] desserts [S] great [SSEP] [O] good [A] coffee [S] great', '[O] great [S] great [A] service [SSEP] [O] excellent [S] great [A] desserts [SSEP] [O] good [S] great [A] coffee', '[A] service [O] great [S] great [SSEP] [A] desserts [O] excellent [S] great [SSEP] [A] coffee [O] good [S] great', '[A] service [S] great [O] great [SSEP] [A] desserts [S] great [O] excellent [SSEP] [A] coffee [S] great [O] good', '[S] great [O] great [A] service [SSEP] [S] great [O] excellent [A] desserts [SSEP] [S] great [O] good [A] coffee']

task, data: aste rest14
target: [('null', 'focacchia bread', 'ok', 'die for')]
output: ['[A] focacchia bread [O] die for [S] great']
sent: ['They', 'are', 'served', 'on', 'Focacchia', 'bread', 'and', 'are', 'to', 'die', 'for', '.']
counter: {('null', 'focacchia bread', 'great', 'die for'): 5}
output quads: ['[A] focacchia bread [O] die for [S] great']
multi_path: ['[O] die for [A] focacchia bread [S] great', '[O] die for [S] great [A] focacchia bread', '[A] focacchia bread [O] die for [S] great', '[A] focacchia bread [S] great [O] die for', '[S] great [O] die for [A] focacchia bread']

task, data: aste rest14
target: [('null', 'fresh juices', 'great', 'best'), ('null', 'smoothies', 'bad', 'big')]
output: ['[A] juices [O] best [S] great', '[A] juices [O] fresh [S] great', '[A] smoothies [O] big [S] bad']
sent: ['While', 'the', 'smoothies', 'are', 'a', 'little', 'big', 'for', 'me', ',', 'the', 'fresh', 'juices', 'are', 'the', 'best', 'I', 'have', 'ever', 'had', '!']
counter: {('null', 'smoothies', 'bad', 'big'): 5, ('null', 'juices', 'great', 'fresh'): 4, ('null', 'juices', 'great', 'best'): 4, ('null', 'fresh juices', 'great', 'best'): 1}
output quads: ['[A] smoothies [O] big [S] bad', '[A] juices [O] fresh [S] great', '[A] juices [O] best [S] great']
multi_path: ['[O] big [A] smoothies [S] bad [SSEP] [O] fresh [A] juices [S] great [SSEP] [O] best [A] juices [S] great', '[O] big [S] bad [A] smoothies [SSEP] [O] fresh [S] great [A] juices [SSEP] [O] best [S] great [A] juices', '[A] smoothies [O] big [S] bad [SSEP] [A] juices [O] fresh [S] great [SSEP] [A] juices [O] best [S] great', '[A] smoothies [S] bad [O] big [SSEP] [A] fresh juices [S] great [O] best', '[S] bad [O] big [A] smoothies [SSEP] [S] great [O] fresh [A] juices [SSEP] [S] great [O] best [A] juices']

task, data: aste rest14
target: [('null', 'dish', 'great', 'good'), ('null', 'pialla', 'great', 'good')]
output: ['[A] food [O] okay [S] bad', '[A] pialla [O] good [S] great']
sent: ['The', 'food', 'is', 'just', 'OKAY', ',', 'and', 'it', "'s", 'almost', 'not', 'worth', 'going', 'unless', 'you', "'re", 'getting', 'the', 'pialla', ',', 'which', 'is', 'the', 'only', 'dish', 'that', "'s", 'really', 'good', '.']
counter: {('null', 'food', 'bad', 'okay'): 5, ('null', 'pialla', 'great', 'good'): 3, ('null', 'pialla', 'ok', 'good'): 1, ('null', 'pialla', 'bad', 'good'): 1}
output quads: ['[A] food [O] okay [S] bad', '[A] pialla [O] good [S] great']
multi_path: ['[O] okay [A] food [S] bad [SSEP] [O] good [A] pialla [S] great', '[O] okay [S] bad [A] food [SSEP] [O] good [S] ok [A] pialla', '[A] food [O] okay [S] bad [SSEP] [A] pialla [O] good [S] great', '[A] food [S] bad [O] okay [SSEP] [A] pialla [S] great [O] good', '[S] bad [O] okay [A] food [SSEP] [S] bad [O] good [A] pialla']

task, data: aste rest14
target: [('null', 'flavor', 'bad', 'lacking')]
output: ['[A] flavor [O] lacking [S] great', '[A] guac [O] fresh [S] great', '[A] salsa [O] fresh [S] great']
sent: ['The', 'guac', 'is', 'fresh', ',', 'yet', 'lacking', 'flavor', ',', 'we', 'like', 'to', 'add', 'our', 'fresh', 'salsa', 'into', 'it', '.']
counter: {('null', 'guac', 'great', 'fresh'): 5, ('null', 'flavor', 'great', 'lacking'): 3, ('null', 'salsa', 'great', 'fresh'): 5, ('null', 'guac', 'great', 'lacking flavor'): 2}
output quads: ['[A] guac [O] fresh [S] great', '[A] flavor [O] lacking [S] great', '[A] salsa [O] fresh [S] great']
multi_path: ['[O] fresh [A] guac [S] great [SSEP] [O] lacking [A] flavor [S] great [SSEP] [O] fresh [A] salsa [S] great', '[O] fresh [S] great [A] guac [SSEP] [O] lacking [S] great [A] flavor [SSEP] [O] fresh [S] great [A] salsa', '[A] guac [O] fresh [S] great [SSEP] [A] guac [O] lacking flavor [S] great [SSEP] [A] salsa [O] fresh [S] great', '[A] guac [S] great [O] fresh [SSEP] [A] guac [S] great [O] lacking flavor [SSEP] [A] salsa [S] great [O] fresh', '[S] great [O] fresh [A] guac [SSEP] [S] great [O] lacking [A] flavor [SSEP] [S] great [O] fresh [A] salsa']

task, data: aste rest14
target: [('null', 'new menu', 'great', 'creative'), ('null', 'prices', 'bad', 'raised')]
output: ['[A] items [O] creative [S] great', '[A] menu [O] new [S] great']
sent: ['The', 'new', 'menu', 'has', 'a', 'few', 'creative', 'items', ',', 'they', 'were', 'smart', 'enough', 'to', 'keep', 'some', 'of', 'the', 'old', 'favorites', '(', 'but', 'they', 'raised', 'the', 'prices', ')', ',', 'the', 'staff', 'is', 'friendly', 'most', 'of', 'the', 'time', ',', 'but', 'I', 'must', 'agree', 'with', 'the', 'person', 'that', 'wrote', 'about', 'their', 'favorite', 'words', ':', 'No', ',', 'ca', "n't", ',', 'sorry', '...', ',', 'boy', ',', 'they', 'wo', "n't", 'bend', 'the', 'rules', 'for', 'anyone', '.']
counter: {('null', 'menu', 'great', 'new'): 5, ('null', 'items', 'great', 'creative'): 4, ('null', 'prices', 'great', 'friendly'): 1}
output quads: ['[A] menu [O] new [S] great', '[A] items [O] creative [S] great']
multi_path: ['[O] new [A] menu [S] great [SSEP] [O] creative [A] items [S] great', '[O] new [S] great [A] menu [SSEP] [O] creative [S] great [A] items', '[A] menu [O] new [S] great [SSEP] [A] items [O] creative [S] great', '[A] menu [S] great [O] new [SSEP] [A] prices [S] great [O] friendly', '[S] great [O] new [A] menu [SSEP] [S] great [O] creative [A] items']

task, data: aste rest14
target: [('null', 'food', 'ok', 'mediocre'), ('null', 'prices', 'bad', 'exorbitant')]
output: ['[A] food [O] mediocre [S] bad', '[A] prices [O] exorbitant [S] bad']
sent: ['How', 'can', 'they', 'survive', 'serving', 'mediocre', 'food', 'at', 'exorbitant', 'prices', '?', '!']
counter: {('null', 'food', 'bad', 'mediocre'): 4, ('null', 'prices', 'bad', 'exorbitant'): 5, ('null', 'food', 'ok', 'mediocre'): 1}
output quads: ['[A] food [O] mediocre [S] bad', '[A] prices [O] exorbitant [S] bad']
multi_path: ['[O] mediocre [A] food [S] bad [SSEP] [O] exorbitant [A] prices [S] bad', '[O] mediocre [S] bad [A] food [SSEP] [O] exorbitant [S] bad [A] prices', '[A] food [O] mediocre [S] bad [SSEP] [A] prices [O] exorbitant [S] bad', '[A] food [S] ok [O] mediocre [SSEP] [A] prices [S] bad [O] exorbitant', '[S] bad [O] mediocre [A] food [SSEP] [S] bad [O] exorbitant [A] prices']

task, data: aste rest14
target: [('null', 'food', 'ok', 'mediocre'), ('null', 'service', 'bad', 'severely slow')]
output: ['[A] food [O] mediocre [S] bad', '[A] service [O] slow [S] bad']
sent: ['The', 'food', 'was', 'mediocre', 'and', 'the', 'service', 'was', 'severely', 'slow', '.']
counter: {('null', 'food', 'bad', 'mediocre'): 3, ('null', 'service', 'bad', 'slow'): 5, ('null', 'food', 'ok', 'mediocre'): 2}
output quads: ['[A] food [O] mediocre [S] bad', '[A] service [O] slow [S] bad']
multi_path: ['[O] mediocre [A] food [S] bad [SSEP] [O] slow [A] service [S] bad', '[O] mediocre [S] bad [A] food [SSEP] [O] slow [S] bad [A] service', '[A] food [O] mediocre [S] bad [SSEP] [A] service [O] slow [S] bad', '[A] food [S] ok [O] mediocre [SSEP] [A] service [S] bad [O] slow', '[S] ok [O] mediocre [A] food [SSEP] [S] bad [O] slow [A] service']

task, data: aste rest14
target: [('null', 'bartender', 'great', 'happy'), ('null', 'bartender', 'great', 'sweet')]
output: ['[A] bartender [O] happy [S] great']
sent: ['Sweet', 'Irish', 'bartender', 'is', 'always', 'happy', 'and', 'able', 'to', 'bring', 'a', 'smile', 'to', 'my', 'friends', 'a', 'my', 'face', '.']
counter: {('null', 'bartender', 'great', 'happy'): 5}
output quads: ['[A] bartender [O] happy [S] great']
multi_path: ['[O] happy [A] bartender [S] great', '[O] happy [S] great [A] bartender', '[A] bartender [O] happy [S] great', '[A] bartender [S] great [O] happy', '[S] great [O] happy [A] bartender']

task, data: aste rest14
target: [('null', 'drinks', 'ok', 'good'), ('null', 'service', 'bad', 'bad')]
output: ['[A] service [O] bad [S] bad']
sent: ['Its', 'good', 'to', 'go', 'there', 'for', 'drinks', 'if', 'you', 'do', "n't", 'want', 'to', 'get', 'drunk', 'because', 'you', "'ll", 'be', 'lucky', 'if', 'you', 'can', 'get', 'one', 'drink', 'an', 'hour', 'the', 'service', 'is', 'so', 'bad', '.']
counter: {('null', 'service', 'bad', 'bad'): 5, ('null', 'drinks', 'ok', 'good'): 2}
output quads: ['[A] service [O] bad [S] bad']
multi_path: ['[O] bad [A] service [S] bad', '[O] bad [S] bad [A] service', '[A] drinks [O] good [S] ok [SSEP] [A] service [O] bad [S] bad', '[A] drinks [S] ok [O] good [SSEP] [A] service [S] bad [O] bad', '[S] bad [O] bad [A] service']

task, data: aste rest14
target: [('null', 'creamy appetizers', 'great', 'creamy'), ('null', 'creamy appetizers', 'great', 'excellent'), ('null', 'eggplant salad', 'great', 'excellent'), ('null', 'greek yogurt ( with cuccumber, dill, and garlic )', 'great', 'excellent'), ('null', 'taramasalata', 'great', 'creamy'), ('null', 'warm pitas', 'ok', 'warm')]
output: ['[A] appetizers [O] creamy [S] great', '[A] cuccumber [O] excellent [S] great', '[A] dill [O] excellent [S] great', '[A] eggplant salad [O] excellent [S] great', '[A] garlic [O] excellent [S] great', '[A] greek yogurt [O] excellent [S] great', '[A] taramasalata [O] creamy [S] great']
sent: ['Creamy', 'appetizers', '--', 'taramasalata', ',', 'eggplant', 'salad', ',', 'and', 'Greek', 'yogurt', '(', 'with', 'cuccumber', ',', 'dill', ',', 'and', 'garlic', ')', 'taste', 'excellent', 'when', 'on', 'warm', 'pitas', '.']
counter: {('null', 'appetizers', 'great', 'creamy'): 5, ('null', 'taramasalata', 'great', 'creamy'): 5, ('null', 'eggplant salad', 'great', 'excellent'): 4, ('null', 'greek yogurt', 'great', 'excellent'): 5, ('null', 'cuccumber', 'great', 'excellent'): 5, ('null', 'dill', 'great', 'excellent'): 5, ('null', 'garlic', 'great', 'excellent'): 5, ('null', 'eggplant salad', 'great', 'creamy'): 1}
output quads: ['[A] appetizers [O] creamy [S] great', '[A] taramasalata [O] creamy [S] great', '[A] eggplant salad [O] excellent [S] great', '[A] greek yogurt [O] excellent [S] great', '[A] cuccumber [O] excellent [S] great', '[A] dill [O] excellent [S] great', '[A] garlic [O] excellent [S] great']
multi_path: ['[O] creamy [A] appetizers [S] great [SSEP] [O] creamy [A] taramasalata [S] great [SSEP] [O] excellent [A] eggplant salad [S] great [SSEP] [O] excellent [A] greek yogurt [S] great [SSEP] [O] excellent [A] cuccumber [S] great [SSEP] [O] excellent [A] dill [S] great [SSEP] [O] excellent [A] garlic [S] great', '[O] creamy [S] great [A] appetizers [SSEP] [O] creamy [S] great [A] taramasalata [SSEP] [O] excellent [S] great [A] eggplant salad [SSEP] [O] excellent [S] great [A] greek yogurt [SSEP] [O] excellent [S] great [A] cuccumber [SSEP] [O] excellent [S] great [A] dill [SSEP] [O] excellent [S] great [A] garlic', '[A] appetizers [O] creamy [S] great [SSEP] [A] taramasalata [O] creamy [S] great [SSEP] [A] eggplant salad [O] excellent [S] great [SSEP] [A] greek yogurt [O] excellent [S] great [SSEP] [A] cuccumber [O] excellent [S] great [SSEP] [A] dill [O] excellent [S] great [SSEP] [A] garlic [O] excellent [S] great', '[A] appetizers [S] great [O] creamy [SSEP] [A] taramasalata [S] great [O] creamy [SSEP] [A] eggplant salad [S] great [O] creamy [SSEP] [A] greek yogurt [S] great [O] excellent [SSEP] [A] cuccumber [S] great [O] excellent [SSEP] [A] dill [S] great [O] excellent [SSEP] [A] garlic [S] great [O] excellent', '[S] great [O] creamy [A] appetizers [SSEP] [S] great [O] creamy [A] taramasalata [SSEP] [S] great [O] excellent [A] eggplant salad [SSEP] [S] great [O] excellent [A] greek yogurt [SSEP] [S] great [O] excellent [A] cuccumber [SSEP] [S] great [O] excellent [A] dill [SSEP] [S] great [O] excellent [A] garlic']

pred labels count Counter({1: 192, 2: 163, 3: 78, 4: 37, 5: 14, 6: 4, 8: 2, 9: 1, 7: 1})
gold  [O] top notch [A] bread [S] great
pred  [A] bread [O] top notch [S] great

gold  [O] fastest [A] delivery times [S] great
pred  [A] delivery times [O] fastest [S] great

gold  [O] fresh [A] food [S] great [SSEP] [O] hot [A] food [S] great
pred  [A] food [O] fresh [S] great [SSEP] [A] food [O] hot [S] great

gold  [O] outstanding [A] coffee [S] great
pred  [A] coffee [O] outstanding [S] great

gold  [O] clean [A] place [S] great
pred  [A] sushi [O] not the best [S] bad [SSEP] [A] sushi [O] fresh [S] great [SSEP] [A] place [O] clean [S] great [SSEP] [A] place [O] sterile [S] great

gold  [O] trust [A] people [S] great
pred  [A] people [O] never disappoints [S] great

gold  [O] decent [A] japanese food [S] great
pred  [A] japanese food [O] decent [S] great

gold  [O] best [A] spicy tuna roll [S] great [SSEP] [O] great [A] asian salad [S] great
pred  [A] tuna roll [O] best [S] great [SSEP] [A] asian salad [O] great [S] great

gold  [O] try [A] rose roll [S] great
pred  [A] rose roll [O] try [S] great

gold  [O] love [A] drinks [S] great [SSEP] [O] love [A] lychee martini [S] great [SSEP] [O] good [A] food [S] great
pred  [A] drinks [O] love [S] great [SSEP] [A] lychee martini [O] love [S] great [SSEP] [A] food [O] good [S] great

number of gold spans: 994, predicted spans: 1026, hit: 766
aste rest14 {'precision': 74.6588693957115, 'recall': 77.06237424547284, 'f1': 75.84158415841586}
Total examples = 322
Total examples = 322
Ori sent size: 322
Input size: 1610 1610
Examples:
[['aste', ':', 'rest15', ':', 'love', 'al', 'di', 'la', '[A]', '[O]', '[S]'], ['aste', ':', 'rest15', ':', 'love', 'al', 'di', 'la', '[O]', '[A]', '[S]'], ['aste', ':', 'rest15', ':', 'love', 'al', 'di', 'la', '[O]', '[S]', '[A]'], ['aste', ':', 'rest15', ':', 'love', 'al', 'di', 'la', '[A]', '[S]', '[O]'], ['aste', ':', 'rest15', ':', 'love', 'al', 'di', 'la', '[S]', '[O]', '[A]'], ['aste', ':', 'rest15', ':', 'i', 'recommend', 'this', 'place', 'to', 'everyone', '.', '[A]', '[O]', '[S]'], ['aste', ':', 'rest15', ':', 'i', 'recommend', 'this', 'place', 'to', 'everyone', '.', '[O]', '[A]', '[S]'], ['aste', ':', 'rest15', ':', 'i', 'recommend', 'this', 'place', 'to', 'everyone', '.', '[O]', '[S]', '[A]'], ['aste', ':', 'rest15', ':', 'i', 'recommend', 'this', 'place', 'to', 'everyone', '.', '[A]', '[S]', '[O]'], ['aste', ':', 'rest15', ':', 'i', 'recommend', 'this', 'place', 'to', 'everyone', '.', '[S]', '[O]', '[A]']]
['[A] al di la [O] love [S] great', '[O] love [A] al di la [S] great', '[O] love [S] great [A] al di la', '[A] al di la [S] great [O] love', '[S] great [O] love [A] al di la', '[A] place [O] recommend [S] great', '[O] recommend [A] place [S] great', '[O] recommend [S] great [A] place', '[A] place [S] great [O] recommend', '[S] great [O] recommend [A] place']
task, data: aste rest15
target: [('null', 'dog', 'great', 'organic'), ('null', 'establishment', 'great', 'eco friendly')]
output: ['[A] organic dog [O] awesome [S] great']
sent: ['An', 'awesome', 'organic', 'dog', ',', 'and', 'a', 'conscious', 'eco', 'friendly', 'establishment', '.']
counter: {('null', 'organic dog', 'great', 'awesome'): 5, ('null', 'establishment', 'great', 'conscious'): 2}
output quads: ['[A] organic dog [O] awesome [S] great']
multi_path: ['[A] organic dog [O] awesome [S] great', '[O] awesome [A] organic dog [S] great', '[O] awesome [S] great [A] organic dog [SSEP] [O] conscious [S] great [A] establishment', '[A] organic dog [S] great [O] awesome', '[S] great [O] awesome [A] organic dog [SSEP] [S] great [O] conscious [A] establishment']

task, data: aste rest15
target: [('null', 'pizza', 'great', 'yummy')]
output: ['[A] pizza [O] super yummy [S] great']
sent: ['Super', 'YUMMY', 'Pizza', '!']
counter: {('null', 'pizza', 'great', 'super yummy'): 5}
output quads: ['[A] pizza [O] super yummy [S] great']
multi_path: ['[A] pizza [O] super yummy [S] great', '[O] super yummy [A] pizza [S] great', '[O] super yummy [S] great [A] pizza', '[A] pizza [S] great [O] super yummy', '[S] great [O] super yummy [A] pizza']

task, data: aste rest15
target: [('null', 'restaurant', 'great', 'inviting')]
output: ['[A] restaurant [O] inviting [S] great', '[A] restaurant [O] warm [S] great']
sent: ['I', 'was', 'visiting', 'New', 'York', 'City', 'with', 'a', 'friend', 'and', 'we', 'discovered', 'this', 'really', 'warm', 'and', 'inviting', 'restaurant', '.']
counter: {('null', 'restaurant', 'great', 'warm'): 5, ('null', 'restaurant', 'great', 'inviting'): 5}
output quads: ['[A] restaurant [O] warm [S] great', '[A] restaurant [O] inviting [S] great']
multi_path: ['[A] restaurant [O] warm [S] great [SSEP] [A] restaurant [O] inviting [S] great', '[O] warm [A] restaurant [S] great [SSEP] [O] inviting [A] restaurant [S] great', '[O] warm [S] great [A] restaurant [SSEP] [O] inviting [S] great [A] restaurant', '[A] restaurant [S] great [O] warm [SSEP] [A] restaurant [S] great [O] inviting', '[S] great [O] warm [A] restaurant [SSEP] [S] great [O] inviting [A] restaurant']

task, data: aste rest15
target: [('null', 'eggplant pizza', 'great', 'looove'), ('null', 'pastas', 'great', 'looove')]
output: ['[A] eggplant pizza [O] loove [S] great', '[A] pastas [O] loove [S] great']
sent: ['I', 'LOOOVE', 'their', 'eggplant', 'pizza', ',', 'as', 'well', 'as', 'their', 'pastas', '!']
counter: {('null', 'eggplant pizza', 'great', 'loove'): 5, ('null', 'pastas', 'great', 'loove'): 5}
output quads: ['[A] eggplant pizza [O] loove [S] great', '[A] pastas [O] loove [S] great']
multi_path: ['[A] eggplant pizza [O] loove [S] great [SSEP] [A] pastas [O] loove [S] great', '[O] loove [A] eggplant pizza [S] great [SSEP] [O] loove [A] pastas [S] great', '[O] loove [S] great [A] eggplant pizza [SSEP] [O] loove [S] great [A] pastas', '[A] eggplant pizza [S] great [O] loove [SSEP] [A] pastas [S] great [O] loove', '[S] great [O] loove [A] eggplant pizza [SSEP] [S] great [O] loove [A] pastas']

task, data: aste rest15
target: [('null', 'food', 'great', 'excellent'), ('null', 'interior', 'bad', 'help')]
output: ['[A] food [O] excellent [S] great']
sent: ['Excellent', 'food', ',', 'although', 'the', 'interior', 'could', 'use', 'some', 'help', '.']
counter: {('null', 'food', 'great', 'excellent'): 5}
output quads: ['[A] food [O] excellent [S] great']
multi_path: ['[A] food [O] excellent [S] great', '[O] excellent [A] food [S] great', '[O] excellent [S] great [A] food', '[A] food [S] great [O] excellent', '[S] great [O] excellent [A] food']

task, data: aste rest15
target: [('null', 'service', 'great', 'problem')]
output: ['[A] rice [O] missing [S] bad', '[A] service [O] never had a problem [S] great']
sent: ['Have', 'never', 'had', 'a', 'problem', 'with', 'service', 'save', 'a', 'missing', 'rice', 'once', '.']
counter: {('null', 'service', 'great', 'never had a problem'): 5, ('null', 'rice', 'bad', 'missing'): 5}
output quads: ['[A] service [O] never had a problem [S] great', '[A] rice [O] missing [S] bad']
multi_path: ['[A] service [O] never had a problem [S] great [SSEP] [A] rice [O] missing [S] bad', '[O] never had a problem [A] service [S] great [SSEP] [O] missing [A] rice [S] bad', '[O] never had a problem [S] great [A] service [SSEP] [O] missing [S] bad [A] rice', '[A] service [S] great [O] never had a problem [SSEP] [A] rice [S] bad [O] missing', '[S] great [O] never had a problem [A] service [SSEP] [S] bad [O] missing [A] rice']

task, data: aste rest15
target: [('null', 'delivery', 'bad', 'lacking')]
output: ['[A] delivery [O] lacking [S] bad', '[A] delivery [O] spot on [S] bad']
sent: ['Delivery', 'can', 'be', 'spot', 'on', 'or', 'lacking', 'depending', 'on', 'the', 'weather', 'and', 'the', 'day', 'of', 'the', 'week', '.']
counter: {('null', 'delivery', 'bad', 'spot on'): 5, ('null', 'delivery', 'bad', 'lacking'): 5}
output quads: ['[A] delivery [O] spot on [S] bad', '[A] delivery [O] lacking [S] bad']
multi_path: ['[A] delivery [O] spot on [S] bad [SSEP] [A] delivery [O] lacking [S] bad', '[O] spot on [A] delivery [S] bad [SSEP] [O] lacking [A] delivery [S] bad', '[O] spot on [S] bad [A] delivery [SSEP] [O] lacking [S] bad [A] delivery', '[A] delivery [S] bad [O] spot on [SSEP] [A] delivery [S] bad [O] lacking', '[S] bad [O] spot on [A] delivery [SSEP] [S] bad [O] lacking [A] delivery']

task, data: aste rest15
target: [('null', 'sushi', 'great', 'ruined')]
output: ['[A] place [O] ruined [S] bad']
sent: ['This', 'place', 'has', 'ruined', 'me', 'for', 'neighborhood', 'sushi', '.']
counter: {('null', 'place', 'bad', 'ruined'): 5}
output quads: ['[A] place [O] ruined [S] bad']
multi_path: ['[A] place [O] ruined [S] bad', '[O] ruined [A] place [S] bad', '[O] ruined [S] bad [A] place', '[A] place [S] bad [O] ruined', '[S] bad [O] ruined [A] place']

task, data: aste rest15
target: [('null', 'place', 'great', 'hidden away'), ('null', 'place', 'great', 'worth')]
output: ['[A] place [O] hidden away [S] bad', '[A] place [O] worth [S] great']
sent: ['The', 'place', 'is', 'a', 'bit', 'hidden', 'away', ',', 'but', 'once', 'you', 'get', 'there', ',', 'it', "'s", 'all', 'worth', 'it', '.']
counter: {('null', 'place', 'bad', 'hidden away'): 5, ('null', 'place', 'great', 'worth'): 5}
output quads: ['[A] place [O] hidden away [S] bad', '[A] place [O] worth [S] great']
multi_path: ['[A] place [O] hidden away [S] bad [SSEP] [A] place [O] worth [S] great', '[O] hidden away [A] place [S] bad [SSEP] [O] worth [A] place [S] great', '[O] hidden away [S] bad [A] place [SSEP] [O] worth [S] great [A] place', '[A] place [S] bad [O] hidden away [SSEP] [A] place [S] great [O] worth', '[S] bad [O] hidden away [A] place [SSEP] [S] great [O] worth [A] place']

task, data: aste rest15
target: [('null', 'chicken pasta', 'great', 'love')]
output: ['[A] chicken pasta [O] good [S] great', '[A] chicken pasta [O] love [S] great']
sent: ['i', 'love', 'their', 'chicken', 'pasta', 'cant', 'remember', 'the', 'name', 'but', 'is', 'sooo', 'good']
counter: {('null', 'chicken pasta', 'great', 'love'): 5, ('null', 'chicken pasta', 'great', 'good'): 5}
output quads: ['[A] chicken pasta [O] love [S] great', '[A] chicken pasta [O] good [S] great']
multi_path: ['[A] chicken pasta [O] love [S] great [SSEP] [A] chicken pasta [O] good [S] great', '[O] love [A] chicken pasta [S] great [SSEP] [O] good [A] chicken pasta [S] great', '[O] love [S] great [A] chicken pasta [SSEP] [O] good [S] great [A] chicken pasta', '[A] chicken pasta [S] great [O] love [SSEP] [A] chicken pasta [S] great [O] good', '[S] great [O] love [A] chicken pasta [SSEP] [S] great [O] good [A] chicken pasta']

task, data: aste rest15
target: [('null', 'place', 'great', 'fanatical')]
output: ['[A] place [O] fun [S] great']
sent: ['im', 'not', 'necessarily', 'fanatical', 'about', 'this', 'place', ',', 'but', 'it', 'was', 'a', 'fun', 'time', 'for', 'low', 'pirces', '.']
counter: {('null', 'place', 'great', 'fun'): 5}
output quads: ['[A] place [O] fun [S] great']
multi_path: ['[A] place [O] fun [S] great', '[O] fun [A] place [S] great', '[O] fun [S] great [A] place', '[A] place [S] great [O] fun', '[S] great [O] fun [A] place']

task, data: aste rest15
target: [('null', 'restaraunt', 'ok', 'five star')]
output: ['[A] place [O] fun [S] great']
sent: ['its', 'just', 'a', 'fun', 'place', 'to', 'go', ',', 'not', 'a', 'five', 'star', 'restaraunt', '.']
counter: {('null', 'place', 'great', 'fun'): 5}
output quads: ['[A] place [O] fun [S] great']
multi_path: ['[A] place [O] fun [S] great', '[O] fun [A] place [S] great', '[O] fun [S] great [A] place', '[A] place [S] great [O] fun', '[S] great [O] fun [A] place']

task, data: aste rest15
target: [('null', 'staff', 'bad', 'not attentive'), ('null', 'staff', 'bad', 'rude')]
output: ['[A] flavor [O] no flavor [S] bad', '[A] staff [O] not attentive [S] bad', '[A] staff [O] rude [S] bad']
sent: ['Had', 'no', 'flavor', 'and', 'the', 'staff', 'is', 'rude', 'and', 'not', 'attentive', '.']
counter: {('null', 'flavor', 'bad', 'no flavor'): 5, ('null', 'staff', 'bad', 'rude'): 5, ('null', 'staff', 'bad', 'not attentive'): 5}
output quads: ['[A] flavor [O] no flavor [S] bad', '[A] staff [O] rude [S] bad', '[A] staff [O] not attentive [S] bad']
multi_path: ['[A] flavor [O] no flavor [S] bad [SSEP] [A] staff [O] rude [S] bad [SSEP] [A] staff [O] not attentive [S] bad', '[O] no flavor [A] flavor [S] bad [SSEP] [O] rude [A] staff [S] bad [SSEP] [O] not attentive [A] staff [S] bad', '[O] no flavor [S] bad [A] flavor [SSEP] [O] rude [S] bad [A] staff [SSEP] [O] not attentive [S] bad [A] staff', '[A] flavor [S] bad [O] no flavor [SSEP] [A] staff [S] bad [O] rude [SSEP] [A] staff [S] bad [O] not attentive', '[S] bad [O] no flavor [A] flavor [SSEP] [S] bad [O] rude [A] staff [SSEP] [S] bad [O] not attentive [A] staff']

task, data: aste rest15
target: [('null', 'bartender', 'bad', 'immature'), ('null', 'food', 'bad', 'not fresh or warm'), ('null', 'service', 'bad', 'slowwwww'), ('null', 'waitresses', 'bad', 'werent very attentive')]
output: ['[A] bartender [O] immature [S] bad', '[A] food [O] not fresh or warm [S] bad', '[A] service [O] slowwwww [S] bad', '[A] waitresses [O] busy [S] bad']
sent: ['Very', 'immature', 'bartender', ',', 'didnt', 'know', 'how', 'to', 'make', 'specific', 'drinks', ',', 'service', 'was', 'so', 'slowwwww', ',', 'the', 'food', 'was', 'not', 'fresh', 'or', 'warm', ',', 'waitresses', 'were', 'busy', 'flirting', 'with', 'men', 'at', 'the', 'bar', 'and', 'werent', 'very', 'attentive', 'to', 'all', 'the', 'customers', '.']
counter: {('null', 'bartender', 'bad', 'immature'): 5, ('null', 'service', 'bad', 'slowwwww'): 5, ('null', 'food', 'bad', 'not fresh or warm'): 5, ('null', 'waitresses', 'bad', 'busy'): 5}
output quads: ['[A] bartender [O] immature [S] bad', '[A] service [O] slowwwww [S] bad', '[A] food [O] not fresh or warm [S] bad', '[A] waitresses [O] busy [S] bad']
multi_path: ['[A] bartender [O] immature [S] bad [SSEP] [A] service [O] slowwwww [S] bad [SSEP] [A] food [O] not fresh or warm [S] bad [SSEP] [A] waitresses [O] busy [S] bad', '[O] immature [A] bartender [S] bad [SSEP] [O] slowwwww [A] service [S] bad [SSEP] [O] not fresh or warm [A] food [S] bad [SSEP] [O] busy [A] waitresses [S] bad', '[O] immature [S] bad [A] bartender [SSEP] [O] slowwwww [S] bad [A] service [SSEP] [O] not fresh or warm [S] bad [A] food [SSEP] [O] busy [S] bad [A] waitresses', '[A] bartender [S] bad [O] immature [SSEP] [A] service [S] bad [O] slowwwww [SSEP] [A] food [S] bad [O] not fresh or warm [SSEP] [A] waitresses [S] bad [O] busy', '[S] bad [O] immature [A] bartender [SSEP] [S] bad [O] slowwwww [A] service [SSEP] [S] bad [O] not fresh or warm [A] food [SSEP] [S] bad [O] busy [A] waitresses']

task, data: aste rest15
target: [('null', 'japanese food', 'bad', 'overpriced'), ('null', 'service', 'ok', 'mediocre')]
output: ['[A] japanese food [O] overpriced [S] bad', '[A] service [O] mediocre [S] bad']
sent: ['overpriced', 'japanese', 'food', 'with', 'mediocre', 'service']
counter: {('null', 'japanese food', 'bad', 'overpriced'): 5, ('null', 'service', 'bad', 'mediocre'): 4, ('null', 'service', 'ok', 'mediocre'): 1}
output quads: ['[A] japanese food [O] overpriced [S] bad', '[A] service [O] mediocre [S] bad']
multi_path: ['[A] japanese food [O] overpriced [S] bad [SSEP] [A] service [O] mediocre [S] bad', '[O] overpriced [A] japanese food [S] bad [SSEP] [O] mediocre [A] service [S] bad', '[O] overpriced [S] bad [A] japanese food [SSEP] [O] mediocre [S] bad [A] service', '[A] japanese food [S] bad [O] overpriced [SSEP] [A] service [S] ok [O] mediocre', '[S] bad [O] overpriced [A] japanese food [SSEP] [S] bad [O] mediocre [A] service']

task, data: aste rest15
target: [('null', 'food', 'bad', 'luke warm')]
output: ['[A] food [O] luke warm [S] great']
sent: ['food', 'was', 'luke', 'warm', '.']
counter: {('null', 'food', 'great', 'luke warm'): 5}
output quads: ['[A] food [O] luke warm [S] great']
multi_path: ['[A] food [O] luke warm [S] great', '[O] luke warm [A] food [S] great', '[O] luke warm [S] great [A] food', '[A] food [S] great [O] luke warm', '[S] great [O] luke warm [A] food']

task, data: aste rest15
target: [('null', 'food', 'great', 'excellent'), ('null', 'service', 'great', 'excellent'), ('null', 'the four seasons', 'bad', 'dissappointed')]
output: ['[A] food [O] excellent [S] great', '[A] service [O] dissappointed [S] great']
sent: ['The', 'food', 'was', 'excellent', 'as', 'well', 'as', 'service', ',', 'however', ',', 'I', 'left', 'The', 'Four', 'Seasons', 'very', 'dissappointed', '.']
counter: {('null', 'food', 'great', 'excellent'): 5, ('null', 'service', 'great', 'dissappointed'): 4, ('null', 'service', 'bad', 'dissappointed'): 1}
output quads: ['[A] food [O] excellent [S] great', '[A] service [O] dissappointed [S] great']
multi_path: ['[A] food [O] excellent [S] great [SSEP] [A] service [O] dissappointed [S] great', '[O] excellent [A] food [S] great [SSEP] [O] dissappointed [A] service [S] great', '[O] excellent [S] great [A] food [SSEP] [O] dissappointed [S] bad [A] service', '[A] food [S] great [O] excellent [SSEP] [A] service [S] great [O] dissappointed', '[S] great [O] excellent [A] food [SSEP] [S] great [O] dissappointed [A] service']

task, data: aste rest15
target: [('null', 'japanese food', 'great', 'delicious'), ('null', 'japanese food', 'great', 'inventive'), ('null', 'rolls', 'great', 'creative')]
output: ['[A] japanese food [O] delicious [S] great', '[A] rolls [O] creative [S] great']
sent: ['The', 'rolls', 'are', 'creative', 'and', 'I', 'have', 'yet', 'to', 'find', 'another', 'sushi', 'place', 'that', 'serves', 'up', 'more', 'inventive', 'yet', 'delicious', 'japanese', 'food', '.']
counter: {('null', 'rolls', 'great', 'creative'): 5, ('null', 'japanese food', 'great', 'delicious'): 5}
output quads: ['[A] rolls [O] creative [S] great', '[A] japanese food [O] delicious [S] great']
multi_path: ['[A] rolls [O] creative [S] great [SSEP] [A] japanese food [O] delicious [S] great', '[O] creative [A] rolls [S] great [SSEP] [O] delicious [A] japanese food [S] great', '[O] creative [S] great [A] rolls [SSEP] [O] delicious [S] great [A] japanese food', '[A] rolls [S] great [O] creative [SSEP] [A] japanese food [S] great [O] delicious', '[S] great [O] creative [A] rolls [SSEP] [S] great [O] delicious [A] japanese food']

task, data: aste rest15
target: [('null', 'dancing, white river and millenium rolls', 'great', 'musts')]
output: ['[A] dancing [O] musts [S] great', '[A] white river and millenium rolls [O] musts [S] great']
sent: ['The', 'Dancing', ',', 'White', 'River', 'and', 'Millenium', 'rolls', 'are', 'musts', '.']
counter: {('null', 'dancing', 'great', 'musts'): 5, ('null', 'white river and millenium rolls', 'great', 'musts'): 5}
output quads: ['[A] dancing [O] musts [S] great', '[A] white river and millenium rolls [O] musts [S] great']
multi_path: ['[A] dancing [O] musts [S] great [SSEP] [A] white river and millenium rolls [O] musts [S] great', '[O] musts [A] dancing [S] great [SSEP] [O] musts [A] white river and millenium rolls [S] great', '[O] musts [S] great [A] dancing [SSEP] [O] musts [S] great [A] white river and millenium rolls', '[A] dancing [S] great [O] musts [SSEP] [A] white river and millenium rolls [S] great [O] musts', '[S] great [O] musts [A] dancing [SSEP] [S] great [O] musts [A] white river and millenium rolls']

task, data: aste rest15
target: [('null', 'food', 'great', 'great')]
output: ['[A] food [O] great [S] great', '[A] food [O] relaxing [S] great', '[A] spot [O] favorite [S] great']
sent: ['This', 'is', 'one', 'of', 'my', 'favorite', 'spot', ',', 'very', 'relaxing', 'the', 'food', 'is', 'great', 'all', 'the', 'times', ',', 'celebrated', 'my', 'engagement', 'and', 'my', 'wedding', 'here', ',', 'it', 'was', 'very', 'well', 'organized', '.']
counter: {('null', 'spot', 'great', 'favorite'): 5, ('null', 'food', 'great', 'relaxing'): 5, ('null', 'food', 'great', 'great'): 5}
output quads: ['[A] spot [O] favorite [S] great', '[A] food [O] relaxing [S] great', '[A] food [O] great [S] great']
multi_path: ['[A] spot [O] favorite [S] great [SSEP] [A] food [O] relaxing [S] great [SSEP] [A] food [O] great [S] great', '[O] favorite [A] spot [S] great [SSEP] [O] relaxing [A] food [S] great [SSEP] [O] great [A] food [S] great', '[O] favorite [S] great [A] spot [SSEP] [O] relaxing [S] great [A] food [SSEP] [O] great [S] great [A] food', '[A] spot [S] great [O] favorite [SSEP] [A] food [S] great [O] relaxing [SSEP] [A] food [S] great [O] great', '[S] great [O] favorite [A] spot [SSEP] [S] great [O] relaxing [A] food [SSEP] [S] great [O] great [A] food']

task, data: aste rest15
target: [('null', 'place', 'great', 'beautiful'), ('null', 'place', 'great', 'recommend')]
output: ['[A] place [O] beautiful [S] great']
sent: ['I', 'highly', 'recommend', 'this', 'beautiful', 'place', '.']
counter: {('null', 'place', 'great', 'beautiful'): 5}
output quads: ['[A] place [O] beautiful [S] great']
multi_path: ['[A] place [O] beautiful [S] great', '[O] beautiful [A] place [S] great', '[O] beautiful [S] great [A] place', '[A] place [S] great [O] beautiful', '[S] great [O] beautiful [A] place']

task, data: aste rest15
target: [('null', 'egyptian restaurant', 'great', 'dreamy')]
output: ['[A] egyptian restaurant [O] beautifully designed dreamy [S] great']
sent: ['A', 'beautifully', 'designed', 'dreamy', 'Egyptian', 'restaurant', 'that', 'gets', 'sceney', 'at', 'night', '.']
counter: {('null', 'egyptian restaurant', 'great', 'beautifully designed'): 1, ('null', 'egyptian restaurant', 'great', 'beautifully designed dreamy'): 4}
output quads: ['[A] egyptian restaurant [O] beautifully designed dreamy [S] great']
multi_path: ['[A] egyptian restaurant [O] beautifully designed [S] great', '[O] beautifully designed dreamy [A] egyptian restaurant [S] great', '[O] beautifully designed dreamy [S] great [A] egyptian restaurant', '[A] egyptian restaurant [S] great [O] beautifully designed dreamy', '[S] great [O] beautifully designed dreamy [A] egyptian restaurant']

task, data: aste rest15
target: [('null', 'baba ganoush', 'great', 'enjoy delicious'), ('null', 'belly dancers', 'great', 'talented')]
output: ['[A] baba ganoush [O] lemony than smoky [S] great', '[A] belly dancers [O] talented [S] great']
sent: ['Watch', 'the', 'talented', 'belly', 'dancers', 'as', 'you', 'enjoy', 'delicious', 'baba', 'ganoush', 'that', "'s", 'more', 'lemony', 'than', 'smoky', '.']
counter: {('null', 'belly dancers', 'great', 'talented'): 5, ('null', 'baba ganoush', 'great', 'lemony than smoky'): 5}
output quads: ['[A] belly dancers [O] talented [S] great', '[A] baba ganoush [O] lemony than smoky [S] great']
multi_path: ['[A] belly dancers [O] talented [S] great [SSEP] [A] baba ganoush [O] lemony than smoky [S] great', '[O] talented [A] belly dancers [S] great [SSEP] [O] lemony than smoky [A] baba ganoush [S] great', '[O] talented [S] great [A] belly dancers [SSEP] [O] lemony than smoky [S] great [A] baba ganoush', '[A] belly dancers [S] great [O] talented [SSEP] [A] baba ganoush [S] great [O] lemony than smoky', '[S] great [O] talented [A] belly dancers [SSEP] [S] great [O] lemony than smoky [A] baba ganoush']

task, data: aste rest15
target: [('null', 'raymond', 'great', 'rocks')]
output: ['[A] bartender [O] rocks [S] great']
sent: ['Raymond', 'the', 'bartender', 'rocks', '!']
counter: {('null', 'bartender', 'great', 'rocks'): 5}
output quads: ['[A] bartender [O] rocks [S] great']
multi_path: ['[A] bartender [O] rocks [S] great', '[O] rocks [A] bartender [S] great', '[O] rocks [S] great [A] bartender', '[A] bartender [S] great [O] rocks', '[S] great [O] rocks [A] bartender']

task, data: aste rest15
target: [('null', 'drinks', 'great', 'great'), ('null', 'raymond', 'great', 'great')]
output: ['[A] drinks [O] great [S] great']
sent: ['The', 'drinks', 'are', 'great', ',', 'especially', 'when', 'made', 'by', 'Raymond', '.']
counter: {('null', 'drinks', 'great', 'great'): 5}
output quads: ['[A] drinks [O] great [S] great']
multi_path: ['[A] drinks [O] great [S] great', '[O] great [A] drinks [S] great', '[O] great [S] great [A] drinks', '[A] drinks [S] great [O] great', '[S] great [O] great [A] drinks']

task, data: aste rest15
target: [('null', 'spinach', 'great', 'fresh')]
output: ['[A] spinach [O] fresh [S] great', '[A] spinach [O] not frozen [S] great']
sent: ['the', 'spinach', 'is', 'fresh', ',', 'definately', 'not', 'frozen', '...']
counter: {('null', 'spinach', 'great', 'fresh'): 5, ('null', 'spinach', 'great', 'not frozen'): 5}
output quads: ['[A] spinach [O] fresh [S] great', '[A] spinach [O] not frozen [S] great']
multi_path: ['[A] spinach [O] fresh [S] great [SSEP] [A] spinach [O] not frozen [S] great', '[O] fresh [A] spinach [S] great [SSEP] [O] not frozen [A] spinach [S] great', '[O] fresh [S] great [A] spinach [SSEP] [O] not frozen [S] great [A] spinach', '[A] spinach [S] great [O] fresh [SSEP] [A] spinach [S] great [O] not frozen', '[S] great [O] fresh [A] spinach [SSEP] [S] great [O] not frozen [A] spinach']

task, data: aste rest15
target: [('null', 'portobello and asparagus mole', 'bad', 'fan')]
output: ["[A] portobello and asparagus mole [O] wasn't a fan of [S] bad"]
sent: ['Also', ',', 'I', 'personally', 'was', "n't", 'a', 'fan', 'of', 'the', 'portobello', 'and', 'asparagus', 'mole', '.']
counter: {('null', 'portobello and asparagus mole', 'bad', "wasn't a fan of"): 4, ('null', 'portobello and asparagus mole', 'bad', "wasn't a fan"): 1}
output quads: ["[A] portobello and asparagus mole [O] wasn't a fan of [S] bad"]
multi_path: ["[A] portobello and asparagus mole [O] wasn't a fan of [S] bad", "[O] wasn't a fan of [A] portobello and asparagus mole [S] bad", "[O] wasn't a fan of [S] bad [A] portobello and asparagus mole", "[A] portobello and asparagus mole [S] bad [O] wasn't a fan", "[S] bad [O] wasn't a fan of [A] portobello and asparagus mole"]

task, data: aste rest15
target: [('null', 'food', 'great', 'decent'), ('null', 'people', 'great', 'friendly')]
output: ['[A] food [O] decent [S] great']
sent: ['Overall', ',', 'decent', 'food', 'at', 'a', 'good', 'price', ',', 'with', 'friendly', 'people', '.']
counter: {('null', 'food', 'great', 'decent'): 5}
output quads: ['[A] food [O] decent [S] great']
multi_path: ['[A] food [O] decent [S] great', '[O] decent [A] food [S] great', '[O] decent [S] great [A] food', '[A] food [S] great [O] decent', '[S] great [O] decent [A] food']

task, data: aste rest15
target: [('null', 'gyros', 'great', 'best')]
output: ['[A] astoria souvlaki spot [O] small [S] great']
sent: ['This', 'small', 'Astoria', 'souvlaki', 'spot', 'makes', 'what', 'many', 'consider', 'the', 'best', 'gyros', 'in', 'New', 'York', '.']
counter: {('null', 'astoria souvlaki spot', 'great', 'small'): 5}
output quads: ['[A] astoria souvlaki spot [O] small [S] great']
multi_path: ['[A] astoria souvlaki spot [O] small [S] great', '[O] small [A] astoria souvlaki spot [S] great', '[O] small [S] great [A] astoria souvlaki spot', '[A] astoria souvlaki spot [S] great [O] small', '[S] great [O] small [A] astoria souvlaki spot']

task, data: aste rest15
target: [('null', 'food', 'great', 'shine'), ('null', 'gyro meat', 'great', 'in-house'), ('null', 'ingredients', 'great', 'higher quality'), ('null', 'sausages', 'great', 'in-house')]
output: ['[A] food [O] aggressively seasoned [S] great', '[A] food [O] made in-house [S] great', '[A] ingredients [O] higher quality [S] great']
sent: ['What', 'really', 'makes', 'it', 'shine', 'is', 'the', 'food', ',', 'which', 'is', 'aggressively', 'seasoned', 'with', 'Cyrpriot', 'spices', ',', 'and', 'all', 'made', 'in-house', '(', 'even', 'the', 'gyro', 'meat', 'and', 'sausages', ')', ',', 'and', 'made', 'of', 'much', 'higher', 'quality', 'ingredients', 'that', 'might', 'otherwise', 'be', 'expected', '.']
counter: {('null', 'food', 'great', 'aggressively seasoned'): 5, ('null', 'ingredients', 'great', 'higher quality'): 5, ('null', 'food', 'great', 'made in-house'): 3, ('null', 'gyro meat and sausages', 'great', 'higher quality'): 1}
output quads: ['[A] food [O] aggressively seasoned [S] great', '[A] ingredients [O] higher quality [S] great', '[A] food [O] made in-house [S] great']
multi_path: ['[A] food [O] aggressively seasoned [S] great [SSEP] [A] ingredients [O] higher quality [S] great', '[O] aggressively seasoned [A] food [S] great [SSEP] [O] made in-house [A] food [S] great [SSEP] [O] higher quality [A] gyro meat and sausages [S] great [SSEP] [O] higher quality [A] ingredients [S] great', '[O] aggressively seasoned [S] great [A] food [SSEP] [O] made in-house [S] great [A] food [SSEP] [O] higher quality [S] great [A] ingredients', '[A] food [S] great [O] aggressively seasoned [SSEP] [A] ingredients [S] great [O] higher quality', '[S] great [O] aggressively seasoned [A] food [SSEP] [S] great [O] made in-house [A] food [SSEP] [S] great [O] higher quality [A] ingredients']

task, data: aste rest15
target: [('null', 'food', 'great', 'great'), ('null', 'place', 'great', 'class act'), ('null', 'service', 'great', 'amazing')]
output: ['[A] food [O] great [S] great', '[A] service [O] amazing [S] great']
sent: ['Great', 'food', ',', 'amazing', 'service', ',', 'this', 'place', 'is', 'a', 'class', 'act', '.']
counter: {('null', 'food', 'great', 'great'): 5, ('null', 'service', 'great', 'amazing'): 5}
output quads: ['[A] food [O] great [S] great', '[A] service [O] amazing [S] great']
multi_path: ['[A] food [O] great [S] great [SSEP] [A] service [O] amazing [S] great', '[O] great [A] food [S] great [SSEP] [O] amazing [A] service [S] great', '[O] great [S] great [A] food [SSEP] [O] amazing [S] great [A] service', '[A] food [S] great [O] great [SSEP] [A] service [S] great [O] amazing', '[S] great [O] great [A] food [SSEP] [S] great [O] amazing [A] service']

task, data: aste rest15
target: [('null', 'dish', 'bad', 'too-authentic-for-me'), ('null', 'dishes', 'great', 'enjoyed')]
output: ['[A] dishes [O] enjoyed [S] great']
sent: ['I', "'ve", 'enjoyed', '99', '%', 'of', 'the', 'dishes', 'we', "'ve", 'ordered', 'with', 'the', 'only', 'exceptions', 'being', 'the', 'occasional', 'too-authentic-for-me', 'dish', '(', 'I', "'m", 'a', 'daring', 'eater', 'but', 'not', 'THAT', 'daring', ')', '.']
counter: {('null', 'dishes', 'great', 'enjoyed'): 5}
output quads: ['[A] dishes [O] enjoyed [S] great']
multi_path: ['[A] dishes [O] enjoyed [S] great', '[O] enjoyed [A] dishes [S] great', '[O] enjoyed [S] great [A] dishes', '[A] dishes [S] great [O] enjoyed', '[S] great [O] enjoyed [A] dishes']

task, data: aste rest15
target: [('null', "water's edge", 'great', 'highest compliments')]
output: ['[A] wedding reception [O] highest compliments [S] great']
sent: ['My', 'daughter', "'s", 'wedding', 'reception', 'at', 'Water', "'s", 'Edge', 'received', 'the', 'highest', 'compliments', 'from', 'our', 'guests', '.']
counter: {('null', "water's edge", 'great', 'highest compliments'): 2, ('null', 'wedding reception', 'great', 'highest compliments'): 3}
output quads: ['[A] wedding reception [O] highest compliments [S] great']
multi_path: ["[A] water's edge [O] highest compliments [S] great", '[O] highest compliments [A] wedding reception [S] great', '[O] highest compliments [S] great [A] wedding reception', "[A] water's edge [S] great [O] highest compliments", '[S] great [O] highest compliments [A] wedding reception']

task, data: aste rest15
target: [('null', 'atmosphere', 'great', 'raved'), ('null', 'food', 'great', 'fabulous'), ('null', 'rooms', 'great', 'elegant'), ('null', 'views', 'great', 'incomparable')]
output: ['[A] food [O] fabulous [S] great', '[A] rooms [O] elegant [S] great', '[A] views [O] incomparable [S] great']
sent: ['Everyone', 'raved', 'about', 'the', 'atmosphere', '(', 'elegant', 'rooms', 'and', 'absolutely', 'incomparable', 'views', ')', 'and', 'the', 'fabulous', 'food', '!']
counter: {('null', 'atmosphere', 'great', 'elegant'): 2, ('null', 'views', 'great', 'incomparable'): 5, ('null', 'food', 'great', 'fabulous'): 5, ('null', 'rooms', 'great', 'elegant'): 3}
output quads: ['[A] views [O] incomparable [S] great', '[A] food [O] fabulous [S] great', '[A] rooms [O] elegant [S] great']
multi_path: ['[A] atmosphere [O] elegant [S] great [SSEP] [A] views [O] incomparable [S] great [SSEP] [A] food [O] fabulous [S] great', '[O] elegant [A] rooms [S] great [SSEP] [O] incomparable [A] views [S] great [SSEP] [O] fabulous [A] food [S] great', '[O] elegant [S] great [A] rooms [SSEP] [O] incomparable [S] great [A] views [SSEP] [O] fabulous [S] great [A] food', '[A] atmosphere [S] great [O] elegant [SSEP] [A] views [S] great [O] incomparable [SSEP] [A] food [S] great [O] fabulous', '[S] great [O] elegant [A] rooms [SSEP] [S] great [O] incomparable [A] views [SSEP] [S] great [O] fabulous [A] food']

task, data: aste rest15
target: [('null', 'paul', 'great', 'professional')]
output: ["[A] maitre d '. [O] professional [S] great"]
sent: ['Paul', ',', 'the', 'maitre', 'd', "'", ',', 'was', 'totally', 'professional', 'and', 'always', 'on', 'top', 'of', 'things', '.']
counter: {('null', "maitre d ',", 'great', 'professional'): 2, ('null', "maitre d '.", 'great', 'professional'): 3}
output quads: ["[A] maitre d '. [O] professional [S] great"]
multi_path: ["[A] maitre d ', [O] professional [S] great", "[O] professional [A] maitre d '. [S] great", "[O] professional [S] great [A] maitre d '.", "[A] maitre d ', [S] great [O] professional", "[S] great [O] professional [A] maitre d '."]

task, data: aste rest15
target: [('null', 'bar drinks', 'bad', 'ok')]
output: ['[A] bar drinks [O] ok [S] ok']
sent: ['The', 'bar', 'drinks', 'were', 'Eh', ',', 'ok', 'to', 'say', 'the', 'least', '.']
counter: {('null', 'bar drinks', 'ok', 'ok'): 5}
output quads: ['[A] bar drinks [O] ok [S] ok']
multi_path: ['[A] bar drinks [O] ok [S] ok', '[O] ok [A] bar drinks [S] ok', '[O] ok [S] ok [A] bar drinks', '[A] bar drinks [S] ok [O] ok', '[S] ok [O] ok [A] bar drinks']

task, data: aste rest15
target: [('null', 'appetizer of olives', 'ok', 'disappointing'), ('null', 'bread', 'bad', 'cold'), ('null', 'bread', 'bad', 'horrible'), ('null', 'bread', 'bad', 'rock hard')]
output: ['[A] appetizer of olives [O] disappointing [S] bad', '[A] bread [O] cold [S] bad', '[A] bread [O] hard [S] bad', '[A] bread [O] horrible [S] bad']
sent: ['The', 'bread', 'we', 'received', 'was', 'horrible', '-', 'rock', 'hard', 'and', 'cold', '-', 'and', 'the', '``', 'free', "''", 'appetizer', 'of', 'olives', 'was', 'disappointing', '.']
counter: {('null', 'bread', 'bad', 'horrible'): 5, ('null', 'bread', 'bad', 'hard'): 5, ('null', 'bread', 'bad', 'cold'): 5, ('null', 'appetizer of olives', 'bad', 'disappointing'): 5}
output quads: ['[A] bread [O] horrible [S] bad', '[A] bread [O] hard [S] bad', '[A] bread [O] cold [S] bad', '[A] appetizer of olives [O] disappointing [S] bad']
multi_path: ['[A] bread [O] horrible [S] bad [SSEP] [A] bread [O] hard [S] bad [SSEP] [A] bread [O] cold [S] bad [SSEP] [A] appetizer of olives [O] disappointing [S] bad', '[O] horrible [A] bread [S] bad [SSEP] [O] hard [A] bread [S] bad [SSEP] [O] cold [A] bread [S] bad [SSEP] [O] disappointing [A] appetizer of olives [S] bad', '[O] horrible [S] bad [A] bread [SSEP] [O] hard [S] bad [A] bread [SSEP] [O] cold [S] bad [A] bread [SSEP] [O] disappointing [S] bad [A] appetizer of olives', '[A] bread [S] bad [O] horrible [SSEP] [A] bread [S] bad [O] hard [SSEP] [A] bread [S] bad [O] cold [SSEP] [A] appetizer of olives [S] bad [O] disappointing', '[S] bad [O] horrible [A] bread [SSEP] [S] bad [O] hard [A] bread [SSEP] [S] bad [O] cold [A] bread [SSEP] [S] bad [O] disappointing [A] appetizer of olives']

task, data: aste rest15
target: [('null', 'pear torte', 'great', 'good'), ('null', 'staff', 'bad', 'unable to provide')]
output: ['[A] dessert [O] good [S] great', '[A] staff [O] unable to provide appropriate drink suggestions [S] bad']
sent: ['The', 'dessert', '(', 'we', 'had', 'a', 'pear', 'torte', ')', 'was', 'good', '-', 'but', ',', 'once', 'again', ',', 'the', 'staff', 'was', 'unable', 'to', 'provide', 'appropriate', 'drink', 'suggestions', '.']
counter: {('null', 'dessert', 'great', 'good'): 5, ('null', 'staff', 'bad', 'unable to provide appropriate drink suggestions'): 4}
output quads: ['[A] dessert [O] good [S] great', '[A] staff [O] unable to provide appropriate drink suggestions [S] bad']
multi_path: ['[A] dessert [O] good [S] great', '[O] good [A] dessert [S] great [SSEP] [O] unable to provide appropriate drink suggestions [A] staff [S] bad', '[O] good [S] great [A] dessert [SSEP] [O] unable to provide appropriate drink suggestions [S] bad [A] staff', '[A] dessert [S] great [O] good [SSEP] [A] staff [S] bad [O] unable to provide appropriate drink suggestions', '[S] great [O] good [A] dessert [SSEP] [S] bad [O] unable to provide appropriate drink suggestions [A] staff']

task, data: aste rest15
target: [('null', 'location', 'ok', 'expect')]
output: ['[A] location [O] not what i would expect [S] bad']
sent: ['Not', 'what', 'I', 'would', 'expect', 'for', 'the', 'price', 'and', 'prestige', 'of', 'this', 'location', '.']
counter: {('null', 'location', 'bad', 'not what i would expect'): 5}
output quads: ['[A] location [O] not what i would expect [S] bad']
multi_path: ['[A] location [O] not what i would expect [S] bad', '[O] not what i would expect [A] location [S] bad', '[O] not what i would expect [S] bad [A] location', '[A] location [S] bad [O] not what i would expect', '[S] bad [O] not what i would expect [A] location']

task, data: aste rest15
target: [('null', 'seating', 'great', 'great')]
output: ['[A] seating [O] cozy [S] great', '[A] seating [O] private [S] great', '[A] seating [O] romantic [S] great', '[A] seating [O] short [S] great', '[A] seating [O] sweet [S] great']
sent: ['short', 'and', 'sweet', '–', 'seating', 'is', 'great', ':', 'it', "'s", 'romantic', ',', 'cozy', 'and', 'private', '.']
counter: {('null', 'seating', 'great', 'short'): 5, ('null', 'seating', 'great', 'sweet'): 5, ('null', 'seating', 'great', 'romantic'): 5, ('null', 'seating', 'great', 'cozy'): 5, ('null', 'seating', 'great', 'private'): 5}
output quads: ['[A] seating [O] short [S] great', '[A] seating [O] sweet [S] great', '[A] seating [O] romantic [S] great', '[A] seating [O] cozy [S] great', '[A] seating [O] private [S] great']
multi_path: ['[A] seating [O] short [S] great [SSEP] [A] seating [O] sweet [S] great [SSEP] [A] seating [O] romantic [S] great [SSEP] [A] seating [O] cozy [S] great [SSEP] [A] seating [O] private [S] great', '[O] short [A] seating [S] great [SSEP] [O] sweet [A] seating [S] great [SSEP] [O] romantic [A] seating [S] great [SSEP] [O] cozy [A] seating [S] great [SSEP] [O] private [A] seating [S] great', '[O] short [S] great [A] seating [SSEP] [O] sweet [S] great [A] seating [SSEP] [O] romantic [S] great [A] seating [SSEP] [O] cozy [S] great [A] seating [SSEP] [O] private [S] great [A] seating', '[A] seating [S] great [O] short [SSEP] [A] seating [S] great [O] sweet [SSEP] [A] seating [S] great [O] romantic [SSEP] [A] seating [S] great [O] cozy [SSEP] [A] seating [S] great [O] private', '[S] great [O] short [A] seating [SSEP] [S] great [O] sweet [A] seating [SSEP] [S] great [O] romantic [A] seating [SSEP] [S] great [O] cozy [A] seating [SSEP] [S] great [O] private [A] seating']

task, data: aste rest15
target: [('null', 'boths', 'great', 'not as small'), ('null', 'boths', 'great', 'perfect')]
output: ['[A] boths [O] perfect [S] great']
sent: ['The', 'boths', 'are', 'not', 'as', 'small', 'as', 'some', 'of', 'the', 'reviews', 'make', 'them', 'out', 'to', 'look', 'they', "'re", 'perfect', 'for', '2', 'people', '.']
counter: {('null', 'boths', 'great', 'perfect'): 5}
output quads: ['[A] boths [O] perfect [S] great']
multi_path: ['[A] boths [O] perfect [S] great', '[O] perfect [A] boths [S] great', '[O] perfect [S] great [A] boths', '[A] boths [S] great [O] perfect', '[S] great [O] perfect [A] boths']

task, data: aste rest15
target: [('null', 'service', 'great', 'attentive'), ('null', 'service', 'great', 'fast'), ('null', 'service button', 'great', 'thanks to'), ('null', 'waiter', 'bad', 'barely understood')]
output: ['[A] service [O] attentive [S] great', '[A] service [O] fast [S] great']
sent: ['The', 'service', 'was', 'extremely', 'fast', 'and', 'attentive', '(', 'thanks', 'to', 'the', 'service', 'button', 'on', 'your', 'table', ')', 'but', 'I', 'barely', 'understood', '1', 'word', 'when', 'the', 'waiter', 'took', 'our', 'order', '.']
counter: {('null', 'service', 'great', 'fast'): 5, ('null', 'service', 'great', 'attentive'): 5}
output quads: ['[A] service [O] fast [S] great', '[A] service [O] attentive [S] great']
multi_path: ['[A] service [O] fast [S] great [SSEP] [A] service [O] attentive [S] great', '[O] fast [A] service [S] great [SSEP] [O] attentive [A] service [S] great', '[O] fast [S] great [A] service [SSEP] [O] attentive [S] great [A] service', '[A] service [S] great [O] fast [SSEP] [A] service [S] great [O] attentive', '[S] great [O] fast [A] service [SSEP] [S] great [O] attentive [A] service']

task, data: aste rest15
target: [('null', 'food', 'ok', 'fair'), ('null', 'food', 'ok', 'ok')]
output: ['[A] food [O] ok [S] ok']
sent: ['The', 'food', 'was', 'ok', 'and', 'fair', 'nothing', 'to', 'go', 'crazy', '.']
counter: {('null', 'food', 'ok', 'ok'): 5, ('null', 'food', 'ok', 'fair'): 1}
output quads: ['[A] food [O] ok [S] ok']
multi_path: ['[A] food [O] ok [S] ok [SSEP] [A] food [O] fair [S] ok', '[O] ok [A] food [S] ok', '[O] ok [S] ok [A] food', '[A] food [S] ok [O] ok', '[S] ok [O] ok [A] food']

task, data: aste rest15
target: [('null', 'looks', 'great', 'exceeds')]
output: []
sent: ['Over', 'all', 'the', 'looks', 'of', 'the', 'place', 'exceeds', 'the', 'actual', 'meals', '.']
counter: {('null', 'place', 'bad', 'exceeds'): 1, ('null', 'meals', 'great', 'exceeds'): 2, ('null', 'meals', 'bad', 'exceeds'): 1, ('null', 'place', 'great', 'exceeds'): 1}
output quads: []
multi_path: ['[A] place [O] exceeds [S] bad', '[O] exceeds [A] meals [S] great', '[O] exceeds [S] bad [A] meals', '[A] place [S] great [O] exceeds', '[S] great [O] exceeds [A] meals']

task, data: aste rest15
target: [('null', 'food', 'great', 'enjoy'), ('null', 'service', 'great', 'enjoy')]
output: ['[A] noodle pudding [O] enjoy [S] great']
sent: ['Noodle', 'pudding', 'is', 'exactly', 'the', 'type', 'of', 'service', 'and', 'food', 'I', 'enjoy', '.']
counter: {('null', 'noodle pudding', 'great', 'enjoy'): 5}
output quads: ['[A] noodle pudding [O] enjoy [S] great']
multi_path: ['[A] noodle pudding [O] enjoy [S] great', '[O] enjoy [A] noodle pudding [S] great', '[O] enjoy [S] great [A] noodle pudding', '[A] noodle pudding [S] great [O] enjoy', '[S] great [O] enjoy [A] noodle pudding']

task, data: aste rest15
target: [('null', 'greg', 'great', 'favorite')]
output: ['[A] servers [O] favorite [S] great']
sent: ['Servers', 'are', 'all', 'different', ',', 'Greg', 'is', 'my', 'favorite', '.']
counter: {('null', 'servers', 'great', 'favorite'): 5}
output quads: ['[A] servers [O] favorite [S] great']
multi_path: ['[A] servers [O] favorite [S] great', '[O] favorite [A] servers [S] great', '[O] favorite [S] great [A] servers', '[A] servers [S] great [O] favorite', '[S] great [O] favorite [A] servers']

task, data: aste rest15
target: [('null', 'servers', 'great', 'patient')]
output: ['[A] courses [O] like [S] great', '[A] servers [O] patient [S] great']
sent: ['I', 'go', 'out', 'to', 'eat', 'and', 'like', 'my', 'courses', ',', 'servers', 'are', 'patient', 'and', 'never', 'rush', 'courses', 'or', 'force', 'another', 'drink', '.']
counter: {('null', 'courses', 'great', 'like'): 5, ('null', 'servers', 'great', 'patient'): 5}
output quads: ['[A] courses [O] like [S] great', '[A] servers [O] patient [S] great']
multi_path: ['[A] courses [O] like [S] great [SSEP] [A] servers [O] patient [S] great', '[O] like [A] courses [S] great [SSEP] [O] patient [A] servers [S] great', '[O] like [S] great [A] courses [SSEP] [O] patient [S] great [A] servers', '[A] courses [S] great [O] like [SSEP] [A] servers [S] great [O] patient', '[S] great [O] like [A] courses [SSEP] [S] great [O] patient [A] servers']

task, data: aste rest15
target: [('null', 'dogs', 'great', 'amazing fresh'), ('null', 'toppings', 'great', 'best'), ('null', 'toppings', 'great', 'endless')]
output: ['[A] dogs [O] amazing fresh [S] great', '[A] toppings [O] best [S] great']
sent: ['amazing', 'fresh', 'dogs', 'but', 'best', 'of', 'all', 'endless', 'toppings', '!', '!', '!']
counter: {('null', 'dogs', 'great', 'amazing fresh'): 5, ('null', 'toppings', 'great', 'endless'): 2, ('null', 'toppings', 'great', 'best'): 3}
output quads: ['[A] dogs [O] amazing fresh [S] great', '[A] toppings [O] best [S] great']
multi_path: ['[A] dogs [O] amazing fresh [S] great [SSEP] [A] toppings [O] endless [S] great', '[O] amazing fresh [A] dogs [S] great [SSEP] [O] best [A] toppings [S] great', '[O] amazing fresh [S] great [A] dogs [SSEP] [O] best [S] great [A] toppings', '[A] dogs [S] great [O] amazing fresh [SSEP] [A] toppings [S] great [O] endless', '[S] great [O] amazing fresh [A] dogs [SSEP] [S] great [O] best [A] toppings']

task, data: aste rest15
target: [('null', 'casa la femme', 'great', 'true')]
output: ['[A] casa la femme [O] unlike any other [S] great']
sent: ['Stepping', 'into', 'Casa', 'La', 'Femme', 'last', 'night', 'was', 'a', 'true', 'experience', 'unlike', 'any', 'other', 'in', 'New', 'York', '!']
counter: {('null', 'casa la femme', 'great', 'unlike any other'): 3, ('null', 'casa la femme', 'great', 'true'): 2}
output quads: ['[A] casa la femme [O] unlike any other [S] great']
multi_path: ['[A] casa la femme [O] unlike any other [S] great', '[O] unlike any other [A] casa la femme [S] great', '[O] unlike any other [S] great [A] casa la femme', '[A] casa la femme [S] great [O] true', '[S] great [O] true [A] casa la femme']

task, data: aste rest15
target: [('null', 'decor', 'great', 'impressed'), ('null', 'food', 'great', 'impressed')]
output: ['[A] decor [O] impressed [S] great', '[A] food [O] impressed [S] great', '[A] hospitality [O] impressed [S] great']
sent: ['Highly', 'impressed', 'from', 'the', 'decor', 'to', 'the', 'food', 'to', 'the', 'hospitality', 'to', 'the', 'great', 'night', 'I', 'had', '!']
counter: {('null', 'decor', 'great', 'impressed'): 5, ('null', 'food', 'great', 'impressed'): 5, ('null', 'hospitality', 'great', 'impressed'): 5}
output quads: ['[A] decor [O] impressed [S] great', '[A] food [O] impressed [S] great', '[A] hospitality [O] impressed [S] great']
multi_path: ['[A] decor [O] impressed [S] great [SSEP] [A] food [O] impressed [S] great [SSEP] [A] hospitality [O] impressed [S] great', '[O] impressed [A] decor [S] great [SSEP] [O] impressed [A] food [S] great [SSEP] [O] impressed [A] hospitality [S] great', '[O] impressed [S] great [A] decor [SSEP] [O] impressed [S] great [A] food [SSEP] [O] impressed [S] great [A] hospitality', '[A] decor [S] great [O] impressed [SSEP] [A] food [S] great [O] impressed [SSEP] [A] hospitality [S] great [O] impressed', '[S] great [O] impressed [A] decor [SSEP] [S] great [O] impressed [A] food [SSEP] [S] great [O] impressed [A] hospitality']

task, data: aste rest15
target: [('null', 'food', 'great', 'worth')]
output: ['[A] food [O] worth waiting for [S] bad']
sent: ['Food', 'took', 'some', 'time', 'to', 'prepare', ',', 'all', 'worth', 'waiting', 'for', '.']
counter: {('null', 'food', 'bad', 'worth waiting for'): 5}
output quads: ['[A] food [O] worth waiting for [S] bad']
multi_path: ['[A] food [O] worth waiting for [S] bad', '[O] worth waiting for [A] food [S] bad', '[O] worth waiting for [S] bad [A] food', '[A] food [S] bad [O] worth waiting for', '[S] bad [O] worth waiting for [A] food']

task, data: aste rest15
target: [('null', 'belly dancing show', 'great', 'captivated')]
output: ['[A] belly dancing show [O] drawn [S] great']
sent: ['We', 'were', 'drawn', 'into', 'the', 'belly', 'dancing', 'show', 'that', 'captivated', 'the', 'crowd', '.']
counter: {('null', 'belly dancing show', 'great', 'drawn'): 5}
output quads: ['[A] belly dancing show [O] drawn [S] great']
multi_path: ['[A] belly dancing show [O] drawn [S] great', '[O] drawn [A] belly dancing show [S] great', '[O] drawn [S] great [A] belly dancing show', '[A] belly dancing show [S] great [O] drawn', '[S] great [O] drawn [A] belly dancing show']

task, data: aste rest15
target: [('null', 'restaurant', 'great', 'worth')]
output: ['[A] restaurant [O] worth commending [S] great']
sent: ['I', 'never', 'write', 'on', 'these', 'sites', 'but', 'this', 'restaurant', 'is', 'def', 'worth', 'commending', '!']
counter: {('null', 'restaurant', 'great', 'worth commending'): 5}
output quads: ['[A] restaurant [O] worth commending [S] great']
multi_path: ['[A] restaurant [O] worth commending [S] great', '[O] worth commending [A] restaurant [S] great', '[O] worth commending [S] great [A] restaurant', '[A] restaurant [S] great [O] worth commending', '[S] great [O] worth commending [A] restaurant']

task, data: aste rest15
target: [('null', 'food', 'ok', 'average'), ('null', 'waiter', 'great', 'nice')]
output: ['[A] menu [O] great [S] great', '[A] waiter [O] nice [S] great']
sent: ['The', 'menu', 'looked', 'great', ',', 'and', 'the', 'waiter', 'was', 'very', 'nice', ',', 'but', 'when', 'the', 'food', 'came', ',', 'it', 'was', 'average', '.']
counter: {('null', 'menu', 'great', 'great'): 5, ('null', 'waiter', 'great', 'nice'): 5}
output quads: ['[A] menu [O] great [S] great', '[A] waiter [O] nice [S] great']
multi_path: ['[A] menu [O] great [S] great [SSEP] [A] waiter [O] nice [S] great', '[O] great [A] menu [S] great [SSEP] [O] nice [A] waiter [S] great', '[O] great [S] great [A] menu [SSEP] [O] nice [S] great [A] waiter', '[A] menu [S] great [O] great [SSEP] [A] waiter [S] great [O] nice', '[S] great [O] great [A] menu [SSEP] [S] great [O] nice [A] waiter']

task, data: aste rest15
target: [('null', 'customer service', 'bad', 'intelligent'), ('null', 'restaurant', 'great', 'good reputation')]
output: ['[A] customer service [O] lack [S] bad']
sent: ['For', 'a', 'restaurant', 'with', 'such', 'a', 'good', 'reputation', 'and', 'that', 'is', 'usually', 'so', 'packed', ',', 'there', 'was', 'no', 'reason', 'for', 'such', 'a', 'lack', 'of', 'intelligent', 'customer', 'service', '.']
counter: {('null', 'customer service', 'bad', 'lack'): 5}
output quads: ['[A] customer service [O] lack [S] bad']
multi_path: ['[A] customer service [O] lack [S] bad', '[O] lack [A] customer service [S] bad', '[O] lack [S] bad [A] customer service', '[A] customer service [S] bad [O] lack', '[S] bad [O] lack [A] customer service']

task, data: aste rest15
target: [('null', 'rolls', 'great', 'good creative')]
output: ['[A] creative rolls [O] good [S] great']
sent: ['Good', 'creative', 'rolls', '!']
counter: {('null', 'creative rolls', 'great', 'good'): 5}
output quads: ['[A] creative rolls [O] good [S] great']
multi_path: ['[A] creative rolls [O] good [S] great', '[O] good [A] creative rolls [S] great', '[O] good [S] great [A] creative rolls', '[A] creative rolls [S] great [O] good', '[S] great [O] good [A] creative rolls']

task, data: aste rest15
target: [('null', 'rolls', 'great', 'great'), ('null', 'triple color and norwegetan rolls', 'great', 'awesome'), ('null', 'triple color and norwegetan rolls', 'great', 'filling')]
output: ['[A] rolls [O] filling [S] great', '[A] rolls [O] great [S] great', '[A] triple color and norwegetan rolls [O] awesome [S] great']
sent: ['They', 'have', 'great', 'rolls', ',', 'the', 'triple', 'color', 'and', 'norwegetan', 'rolls', ',', 'are', 'awesome', 'and', 'filling', '.']
counter: {('null', 'rolls', 'great', 'great'): 5, ('null', 'triple color and norwegetan rolls', 'great', 'awesome'): 5, ('null', 'rolls', 'great', 'filling'): 5}
output quads: ['[A] rolls [O] great [S] great', '[A] triple color and norwegetan rolls [O] awesome [S] great', '[A] rolls [O] filling [S] great']
multi_path: ['[A] rolls [O] great [S] great [SSEP] [A] triple color and norwegetan rolls [O] awesome [S] great [SSEP] [A] rolls [O] filling [S] great', '[O] great [A] rolls [S] great [SSEP] [O] awesome [A] triple color and norwegetan rolls [S] great [SSEP] [O] filling [A] rolls [S] great', '[O] great [S] great [A] rolls [SSEP] [O] awesome [S] great [A] triple color and norwegetan rolls [SSEP] [O] filling [S] great [A] rolls', '[A] rolls [S] great [O] great [SSEP] [A] triple color and norwegetan rolls [S] great [O] awesome [SSEP] [A] rolls [S] great [O] filling', '[S] great [O] great [A] rolls [SSEP] [S] great [O] awesome [A] triple color and norwegetan rolls [SSEP] [S] great [O] filling [A] rolls']

task, data: aste rest15
target: [('null', 'dessert', 'great', 'save room'), ('null', 'regular roll', 'great', 'enough'), ('null', 'special roll', 'great', 'enough')]
output: ['[A] regular roll [O] enough [S] great', '[A] special roll [O] enough [S] great']
sent: ['One', 'special', 'roll', 'and', 'one', 'regular', 'roll', 'is', 'enough', 'to', 'fill', 'you', 'up', ',', 'but', 'save', 'room', 'for', 'dessert', '!']
counter: {('null', 'special roll', 'great', 'enough'): 5, ('null', 'regular roll', 'great', 'enough'): 5}
output quads: ['[A] special roll [O] enough [S] great', '[A] regular roll [O] enough [S] great']
multi_path: ['[A] special roll [O] enough [S] great [SSEP] [A] regular roll [O] enough [S] great', '[O] enough [A] special roll [S] great [SSEP] [O] enough [A] regular roll [S] great', '[O] enough [S] great [A] special roll [SSEP] [O] enough [S] great [A] regular roll', '[A] special roll [S] great [O] enough [SSEP] [A] regular roll [S] great [O] enough', '[S] great [O] enough [A] special roll [SSEP] [S] great [O] enough [A] regular roll']

task, data: aste rest15
target: [('null', 'interior', 'bad', 'mazing')]
output: ['[A] interior [O] mazing [S] great']
sent: ['Mazing', 'interior', '.']
counter: {('null', 'interior', 'great', 'mazing'): 5}
output quads: ['[A] interior [O] mazing [S] great']
multi_path: ['[A] interior [O] mazing [S] great', '[O] mazing [A] interior [S] great', '[O] mazing [S] great [A] interior', '[A] interior [S] great [O] mazing', '[S] great [O] mazing [A] interior']

task, data: aste rest15
target: [('null', 'modern japanese', 'great', 'delivers')]
output: ['[A] spot [O] delivers [S] great']
sent: ['I', "'ve", 'had', 'my', 'fair', 'share', 'of', 'modern', 'Japanese', 'and', 'this', 'spot', 'delivers', '.']
counter: {('null', 'spot', 'great', 'delivers'): 5}
output quads: ['[A] spot [O] delivers [S] great']
multi_path: ['[A] spot [O] delivers [S] great', '[O] delivers [A] spot [S] great', '[O] delivers [S] great [A] spot', '[A] spot [S] great [O] delivers', '[S] great [O] delivers [A] spot']

task, data: aste rest15
target: [('null', 'atmosphere', 'bad', 'nice'), ('null', 'scheme of mirrors', 'bad', 'crazy')]
output: ['[A] atmosphere [O] lacking [S] bad', '[A] atmosphere [O] nice [S] great']
sent: ['The', 'atmosphere', 'was', 'pretty', 'nice', 'but', 'had', 'a', 'bit', 'lacking', ',', 'which', 'it', 'tries', 'to', 'make', 'up', 'for', 'with', 'a', 'crazy', 'scheme', 'of', 'mirrors', '.']
counter: {('null', 'atmosphere', 'great', 'nice'): 5, ('null', 'atmosphere', 'bad', 'lacking'): 4, ('null', 'atmosphere', 'great', 'lacking'): 1}
output quads: ['[A] atmosphere [O] nice [S] great', '[A] atmosphere [O] lacking [S] bad']
multi_path: ['[A] atmosphere [O] nice [S] great [SSEP] [A] atmosphere [O] lacking [S] bad', '[O] nice [A] atmosphere [S] great [SSEP] [O] lacking [A] atmosphere [S] bad', '[O] nice [S] great [A] atmosphere [SSEP] [O] lacking [S] bad [A] atmosphere', '[A] atmosphere [S] great [O] nice [SSEP] [A] atmosphere [S] bad [O] lacking', '[S] great [O] nice [A] atmosphere [SSEP] [S] great [O] lacking [A] atmosphere']

task, data: aste rest15
target: [('null', 'mirrors', 'bad', 'confusing'), ('null', 'modern japanese food', 'great', 'go-to for')]
output: ['[A] mirrors [O] confusing [S] bad']
sent: ['Despite', 'the', 'confusing', 'mirrors', 'this', 'will', 'likely', 'be', 'my', 'go-to', 'for', 'modern', 'Japanese', 'food', 'for', 'the', 'foreseeable', 'future', '.']
counter: {('null', 'mirrors', 'bad', 'confusing'): 5}
output quads: ['[A] mirrors [O] confusing [S] bad']
multi_path: ['[A] mirrors [O] confusing [S] bad', '[O] confusing [A] mirrors [S] bad', '[O] confusing [S] bad [A] mirrors', '[A] mirrors [S] bad [O] confusing', '[S] bad [O] confusing [A] mirrors']

task, data: aste rest15
target: [('null', 'chinese style indian food', 'great', 'good'), ('null', 'place', 'ok', 'fancy')]
output: ['[A] chinese style indian food [O] good [S] great', '[A] place [O] not a very fancy [S] bad']
sent: ['Not', 'a', 'very', 'fancy', 'place', 'but', 'very', 'good', 'Chinese', 'style', 'Indian', 'food', '.']
counter: {('null', 'place', 'bad', 'not a very fancy'): 4, ('null', 'chinese style indian food', 'great', 'good'): 5, ('null', 'place', 'great', 'not a very fancy'): 1}
output quads: ['[A] place [O] not a very fancy [S] bad', '[A] chinese style indian food [O] good [S] great']
multi_path: ['[A] place [O] not a very fancy [S] bad [SSEP] [A] chinese style indian food [O] good [S] great', '[O] not a very fancy [A] place [S] bad [SSEP] [O] good [A] chinese style indian food [S] great', '[O] not a very fancy [S] bad [A] place [SSEP] [O] good [S] great [A] chinese style indian food', '[A] place [S] bad [O] not a very fancy [SSEP] [A] chinese style indian food [S] great [O] good', '[S] great [O] not a very fancy [A] place [SSEP] [S] great [O] good [A] chinese style indian food']

task, data: aste rest15
target: [('null', 'chicken lollipop', 'great', 'favorite'), ('null', 'chilli chicken', 'bad', 'oily'), ('null', 'chilli chicken', 'bad', 'spicy'), ('null', 'dishes', 'bad', 'oily'), ('null', 'dishes', 'bad', 'spicy')]
output: ['[A] chicken lollipop [O] favorite [S] great', '[A] chilli chicken [O] spicy [S] great', '[A] dishes [O] oily [S] great', '[A] dishes [O] spicy [S] great']
sent: ['The', 'chicken', 'lollipop', 'is', 'my', 'favorite', ',', 'most', 'of', 'the', 'dishes', '(', 'I', 'have', 'to', 'agree', 'with', 'a', 'previous', 'reviewer', ')', 'are', 'quite', 'oily', 'and', 'very', 'spicy', ',', 'espeically', 'the', 'Chilli', 'Chicken', '.']
counter: {('null', 'chicken lollipop', 'great', 'favorite'): 5, ('null', 'dishes', 'great', 'oily'): 5, ('null', 'dishes', 'great', 'spicy'): 5, ('null', 'chilli chicken', 'great', 'spicy'): 5}
output quads: ['[A] chicken lollipop [O] favorite [S] great', '[A] dishes [O] oily [S] great', '[A] dishes [O] spicy [S] great', '[A] chilli chicken [O] spicy [S] great']
multi_path: ['[A] chicken lollipop [O] favorite [S] great [SSEP] [A] dishes [O] oily [S] great [SSEP] [A] dishes [O] spicy [S] great [SSEP] [A] chilli chicken [O] spicy [S] great', '[O] favorite [A] chicken lollipop [S] great [SSEP] [O] oily [A] dishes [S] great [SSEP] [O] spicy [A] dishes [S] great [SSEP] [O] spicy [A] chilli chicken [S] great', '[O] favorite [S] great [A] chicken lollipop [SSEP] [O] oily [S] great [A] dishes [SSEP] [O] spicy [S] great [A] dishes [SSEP] [O] spicy [S] great [A] chilli chicken', '[A] chicken lollipop [S] great [O] favorite [SSEP] [A] dishes [S] great [O] oily [SSEP] [A] dishes [S] great [O] spicy [SSEP] [A] chilli chicken [S] great [O] spicy', '[S] great [O] favorite [A] chicken lollipop [SSEP] [S] great [O] oily [A] dishes [SSEP] [S] great [O] spicy [A] dishes [SSEP] [S] great [O] spicy [A] chilli chicken']

task, data: aste rest15
target: [('null', 'food', 'bad', 'oily'), ('null', 'food', 'bad', 'spicy')]
output: ['[A] food [O] oily [S] bad', '[A] food [O] over the top spicy [S] bad']
sent: ['My', 'mom', 'originally', 'introduced', 'me', 'to', 'this', 'place', ',', 'but', 'even', 'she', '(', 'being', 'Indian', ')', 'feels', 'the', 'food', 'can', 'be', 'somewhat', 'over', 'the', 'top', 'spicy', 'and', 'far', 'too', 'oily', '.']
counter: {('null', 'food', 'bad', 'over the top spicy'): 5, ('null', 'food', 'bad', 'oily'): 5}
output quads: ['[A] food [O] over the top spicy [S] bad', '[A] food [O] oily [S] bad']
multi_path: ['[A] food [O] over the top spicy [S] bad [SSEP] [A] food [O] oily [S] bad', '[O] over the top spicy [A] food [S] bad [SSEP] [O] oily [A] food [S] bad', '[O] over the top spicy [S] bad [A] food [SSEP] [O] oily [S] bad [A] food', '[A] food [S] bad [O] over the top spicy [SSEP] [A] food [S] bad [O] oily', '[S] bad [O] over the top spicy [A] food [SSEP] [S] bad [O] oily [A] food']

task, data: aste rest15
target: [('null', 'food', 'bad', 'horrible'), ('null', 'food', 'bad', 'speechless')]
output: ['[A] food [O] horrible [S] bad']
sent: ['I', 'was', 'speechless', 'by', 'the', 'horrible', 'food', '.']
counter: {('null', 'food', 'bad', 'horrible'): 5}
output quads: ['[A] food [O] horrible [S] bad']
multi_path: ['[A] food [O] horrible [S] bad', '[O] horrible [A] food [S] bad', '[O] horrible [S] bad [A] food', '[A] food [S] bad [O] horrible', '[S] bad [O] horrible [A] food']

task, data: aste rest15
target: [('null', 'meal', 'great', 'never a bad'), ('null', 'service', 'great', 'never bad')]
output: ['[A] service [O] never bad [S] great']
sent: ['never', 'swaying', ',', 'never', 'a', 'bad', 'meal', ',', 'never', 'bad', 'service', '...']
counter: {('null', 'meal', 'great', 'never bad'): 2, ('null', 'service', 'great', 'never bad'): 5}
output quads: ['[A] service [O] never bad [S] great']
multi_path: ['[A] meal [O] never bad [S] great [SSEP] [A] service [O] never bad [S] great', '[O] never bad [A] service [S] great', '[O] never bad [S] great [A] service', '[A] meal [S] great [O] never bad [SSEP] [A] service [S] great [O] never bad', '[S] great [O] never bad [A] service']

task, data: aste rest15
target: [('null', 'food', 'great', 'great'), ('null', 'neighborhood', 'great', 'great'), ('null', 'service', 'great', 'great'), ('null', 'wine list', 'great', 'great')]
output: ['[A] food [O] great [S] great', '[A] service [O] great [S] great', '[A] wine list [O] great [S] great']
sent: ['great', 'food', ',', 'great', 'wine', 'list', ',', 'great', 'service', 'in', 'a', 'great', 'neighborhood', '...']
counter: {('null', 'food', 'great', 'great'): 5, ('null', 'wine list', 'great', 'great'): 5, ('null', 'service', 'great', 'great'): 5}
output quads: ['[A] food [O] great [S] great', '[A] wine list [O] great [S] great', '[A] service [O] great [S] great']
multi_path: ['[A] food [O] great [S] great [SSEP] [A] wine list [O] great [S] great [SSEP] [A] service [O] great [S] great', '[O] great [A] food [S] great [SSEP] [O] great [A] wine list [S] great [SSEP] [O] great [A] service [S] great', '[O] great [S] great [A] food [SSEP] [O] great [S] great [A] wine list [SSEP] [O] great [S] great [A] service', '[A] food [S] great [O] great [SSEP] [A] wine list [S] great [O] great [SSEP] [A] service [S] great [O] great', '[S] great [O] great [A] food [SSEP] [S] great [O] great [A] wine list [SSEP] [S] great [O] great [A] service']

task, data: aste rest15
target: [('null', "patsy's pizza", 'great', 'true love')]
output: ["[A] patsy's pizza [O] love [S] great"]
sent: ['Patsy', "'s", 'Pizza', '-', 'true', 'love']
counter: {('null', "patsy's pizza", 'great', 'love'): 5}
output quads: ["[A] patsy's pizza [O] love [S] great"]
multi_path: ["[A] patsy's pizza [O] love [S] great", "[O] love [A] patsy's pizza [S] great", "[O] love [S] great [A] patsy's pizza", "[A] patsy's pizza [S] great [O] love", "[S] great [O] love [A] patsy's pizza"]

task, data: aste rest15
target: [('null', 'hot dogs', 'great', 'juicy')]
output: ['[A] hot dogs [O] juicy [S] great', '[A] hot dogs [O] tender [S] great']
sent: ['the', 'hot', 'dogs', 'were', 'juicy', 'and', 'tender', 'inside', 'and', 'had', 'plenty', 'of', 'crunch', 'and', 'snap', 'on', 'the', 'outside', '.']
counter: {('null', 'hot dogs', 'great', 'juicy'): 5, ('null', 'hot dogs', 'great', 'tender'): 5}
output quads: ['[A] hot dogs [O] juicy [S] great', '[A] hot dogs [O] tender [S] great']
multi_path: ['[A] hot dogs [O] juicy [S] great [SSEP] [A] hot dogs [O] tender [S] great', '[O] juicy [A] hot dogs [S] great [SSEP] [O] tender [A] hot dogs [S] great', '[O] juicy [S] great [A] hot dogs [SSEP] [O] tender [S] great [A] hot dogs', '[A] hot dogs [S] great [O] juicy [SSEP] [A] hot dogs [S] great [O] tender', '[S] great [O] juicy [A] hot dogs [SSEP] [S] great [O] tender [A] hot dogs']

task, data: aste rest15
target: [('null', 'dishes', 'bad', 'oily')]
output: ['[A] dining experience [O] good [S] great', '[A] dishes [O] oily [S] bad']
sent: ['For', 'me', 'dishes', 'a', 'little', 'oily', ',', 'but', 'overall', 'dining', 'experience', 'good', '.']
counter: {('null', 'dishes', 'bad', 'oily'): 5, ('null', 'dining experience', 'great', 'good'): 5}
output quads: ['[A] dishes [O] oily [S] bad', '[A] dining experience [O] good [S] great']
multi_path: ['[A] dishes [O] oily [S] bad [SSEP] [A] dining experience [O] good [S] great', '[O] oily [A] dishes [S] bad [SSEP] [O] good [A] dining experience [S] great', '[O] oily [S] bad [A] dishes [SSEP] [O] good [S] great [A] dining experience', '[A] dishes [S] bad [O] oily [SSEP] [A] dining experience [S] great [O] good', '[S] bad [O] oily [A] dishes [SSEP] [S] great [O] good [A] dining experience']

task, data: aste rest15
target: [('null', 'food', 'great', 'superb')]
output: ['[A] food [O] superb [S] great', '[A] food [O] top notch [S] great', '[A] places [O] homey [S] great', '[A] places [O] intimate [S] great', '[A] wait [O] worth [S] great']
sent: ['Wish', 'NY', 'had', 'more', 'of', 'these', 'kind', 'of', 'places', ':', 'intimate', ',', 'superb', 'food', ',', 'homey', ',', 'top', 'notch', 'all', 'the', 'way', 'around', ',', 'certainly', 'worth', 'the', 'wait', '.']
counter: {('null', 'food', 'great', 'intimate'): 2, ('null', 'food', 'great', 'superb'): 5, ('null', 'food', 'great', 'homey'): 2, ('null', 'food', 'great', 'top notch'): 4, ('null', 'wait', 'great', 'worth'): 4, ('null', 'places', 'great', 'intimate'): 3, ('null', 'places', 'great', 'homey'): 3, ('null', 'places', 'great', 'top notch'): 1}
output quads: ['[A] food [O] superb [S] great', '[A] food [O] top notch [S] great', '[A] wait [O] worth [S] great', '[A] places [O] intimate [S] great', '[A] places [O] homey [S] great']
multi_path: ['[A] food [O] intimate [S] great [SSEP] [A] food [O] superb [S] great [SSEP] [A] food [O] homey [S] great [SSEP] [A] food [O] top notch [S] great [SSEP] [A] wait [O] worth [S] great', '[O] intimate [A] places [S] great [SSEP] [O] superb [A] food [S] great [SSEP] [O] homey [A] places [S] great [SSEP] [O] top notch [A] places [S] great [SSEP] [O] worth [A] wait [S] great', '[O] intimate [S] great [A] places [SSEP] [O] superb [S] great [A] food [SSEP] [O] homey [S] great [A] places [SSEP] [O] top notch [S] great [A] food [SSEP] [O] worth [S] great [A] wait', '[A] food [S] great [O] intimate [SSEP] [A] food [S] great [O] superb [SSEP] [A] food [S] great [O] homey [SSEP] [A] food [S] great [O] top notch', '[S] great [O] intimate [A] places [SSEP] [S] great [O] superb [A] food [SSEP] [S] great [O] homey [A] places [SSEP] [S] great [O] top notch [A] food [SSEP] [S] great [O] worth [A] wait']

task, data: aste rest15
target: [('null', 'place', 'bad', 'beautiful'), ('null', 'place', 'bad', 'classy')]
output: ['[A] place [O] beautiful [S] great', '[A] place [O] classy [S] great']
sent: ['Yes', ',', 'the', 'place', 'is', 'classy', 'and', 'beautiful', ',', 'but', 'they', 'most', 'certainly', 'target', 'the', 'uber', 'whealthy', 'Not', 'the', 'common', 'joe', 'that', 'wants', 'to', 'go', 'all', 'out', 'every', 'once', 'in', 'a', 'while', '.']
counter: {('null', 'place', 'great', 'classy'): 5, ('null', 'place', 'great', 'beautiful'): 5}
output quads: ['[A] place [O] classy [S] great', '[A] place [O] beautiful [S] great']
multi_path: ['[A] place [O] classy [S] great [SSEP] [A] place [O] beautiful [S] great', '[O] classy [A] place [S] great [SSEP] [O] beautiful [A] place [S] great', '[O] classy [S] great [A] place [SSEP] [O] beautiful [S] great [A] place', '[A] place [S] great [O] classy [SSEP] [A] place [S] great [O] beautiful', '[S] great [O] classy [A] place [SSEP] [S] great [O] beautiful [A] place']

task, data: aste rest15
target: [('null', 'environment', 'ok', 'upscale')]
output: ['[A] environment [O] upscale [S] great']
sent: ['The', 'environment', 'is', 'very', 'upscale', 'and', 'you', 'will', 'see', 'a', 'lot', 'of', 'rich', 'guys', 'with', 'trophy', 'wives', 'or', 'just', 'highly', 'paid', 'escorts', '.']
counter: {('null', 'environment', 'great', 'upscale'): 5}
output quads: ['[A] environment [O] upscale [S] great']
multi_path: ['[A] environment [O] upscale [S] great', '[O] upscale [A] environment [S] great', '[O] upscale [S] great [A] environment', '[A] environment [S] great [O] upscale', '[S] great [O] upscale [A] environment']

task, data: aste rest15
target: [('null', 'food', 'bad', 'worth')]
output: ['[A] food [O] not be worth [S] bad']
sent: ['If', 'you', 'are', 'going', 'for', 'the', 'food', ',', 'it', 'will', 'not', 'be', 'worth', 'it', '.']
counter: {('null', 'food', 'bad', 'not be worth'): 4, ('null', 'food', 'bad', 'not be worth it'): 1}
output quads: ['[A] food [O] not be worth [S] bad']
multi_path: ['[A] food [O] not be worth [S] bad', '[O] not be worth [A] food [S] bad', '[O] not be worth [S] bad [A] food', '[A] food [S] bad [O] not be worth it', '[S] bad [O] not be worth [A] food']

task, data: aste rest15
target: [('null', 'food', 'bad', 'good')]
output: ['[A] show [O] missed [S] bad']
sent: ['By', 'the', 'time', 'we', 'left', 'our', 'wallets', 'were', 'empy', 'and', 'so', 'were', 'our', 'stomachs', 'AND', 'we', 'missed', 'the', 'show', 'we', 'were', 'supposed', 'to', 'see', 'following', 'our', 'dinner', ',', 'which', 'would', 'have', 'been', 'acceptable', 'if', 'we', 'got', 'to', 'enjoy', 'the', 'experience', 'of', 'good', 'food', 'and', 'belly', 'dancers', '!']
counter: {('null', 'show', 'bad', 'missed'): 4, ('null', 'stomachs', 'bad', 'empy'): 1, ('null', 'wallets', 'bad', 'empy'): 2}
output quads: ['[A] show [O] missed [S] bad']
multi_path: ['[A] show [O] missed [S] bad', '[O] empy [A] stomachs [S] bad', '[O] empy [S] bad [A] wallets [SSEP] [O] missed [S] bad [A] show', '[A] show [S] bad [O] missed', '[S] bad [O] empy [A] wallets [SSEP] [S] bad [O] missed [A] show']

task, data: aste rest15
target: [('null', 'meal', 'bad', 'inedible')]
output: ['[A] dinner portion of my meal [O] inedible [S] bad']
sent: ['If', 'it', 'seemed', 'possible', 'to', 'do', 'so', 'while', 'there', 'I', 'would', 'have', 'fought', 'my', 'bill', 'since', 'my', 'dinner', 'portion', 'of', 'my', 'meal', 'was', 'inedible', '!']
counter: {('null', 'dinner portion of my meal', 'bad', 'inedible'): 5}
output quads: ['[A] dinner portion of my meal [O] inedible [S] bad']
multi_path: ['[A] dinner portion of my meal [O] inedible [S] bad', '[O] inedible [A] dinner portion of my meal [S] bad', '[O] inedible [S] bad [A] dinner portion of my meal', '[A] dinner portion of my meal [S] bad [O] inedible', '[S] bad [O] inedible [A] dinner portion of my meal']

task, data: aste rest15
target: [('null', 'restaurant', 'bad', 'abused')]
output: ['[A] restaurant [O] wasted [S] bad']
sent: ['I', 'have', 'never', 'left', 'a', 'restaurant', 'feeling', 'as', 'if', 'i', 'was', 'abused', ',', 'and', 'wasted', 'my', 'hard', 'earned', 'money', '.']
counter: {('null', 'restaurant', 'bad', 'wasted'): 4, ('null', 'restaurant', 'great', 'wasted'): 1}
output quads: ['[A] restaurant [O] wasted [S] bad']
multi_path: ['[A] restaurant [O] wasted [S] bad', '[O] wasted [A] restaurant [S] bad', '[O] wasted [S] bad [A] restaurant', '[A] restaurant [S] bad [O] wasted', '[S] great [O] wasted [A] restaurant']

task, data: aste rest15
target: [('null', 'menu', 'ok', 'simple')]
output: ['[A] menu [O] simple [S] great']
sent: ['The', 'menu', 'is', 'fairly', 'simple', 'without', 'much', 'descriptions', '.']
counter: {('null', 'menu', 'great', 'simple'): 5}
output quads: ['[A] menu [O] simple [S] great']
multi_path: ['[A] menu [O] simple [S] great', '[O] simple [A] menu [S] great', '[O] simple [S] great [A] menu', '[A] menu [S] great [O] simple', '[S] great [O] simple [A] menu']

task, data: aste rest15
target: [('null', 'beer', 'bad', 'disappointment')]
output: ['[A] tap beer [O] no [S] bad']
sent: ['There', 'was', 'no', 'tap', 'beer', 'that', 'evening', ',', 'which', 'was', 'a', 'disappointment', '.']
counter: {('null', 'tap beer', 'bad', 'no'): 5}
output quads: ['[A] tap beer [O] no [S] bad']
multi_path: ['[A] tap beer [O] no [S] bad', '[O] no [A] tap beer [S] bad', '[O] no [S] bad [A] tap beer', '[A] tap beer [S] bad [O] no', '[S] bad [O] no [A] tap beer']

task, data: aste rest15
target: [('null', 'selection of bottled beer', 'bad', 'not much')]
output: ['[A] bottled beer [O] not much of a selection of bottled beer [S] bad']
sent: ['Not', 'much', 'of', 'a', 'selection', 'of', 'bottled', 'beer', 'either', ',', 'we', 'went', 'with', 'Brahma', '.']
counter: {('null', 'bottled beer', 'bad', 'not much of a selection of'): 1, ('null', 'bottled beer', 'bad', 'not much of a selection of bottled beer'): 3, ('null', 'bottled beer', 'bad', 'not much of a selection'): 1}
output quads: ['[A] bottled beer [O] not much of a selection of bottled beer [S] bad']
multi_path: ['[A] bottled beer [O] not much of a selection of [S] bad', '[O] not much of a selection of bottled beer [A] bottled beer [S] bad', '[O] not much of a selection of bottled beer [S] bad [A] bottled beer', '[A] bottled beer [S] bad [O] not much of a selection', '[S] bad [O] not much of a selection of bottled beer [A] bottled beer']

task, data: aste rest15
target: [('null', 'fried oysters and clams', 'bad', 'delicious')]
output: ['[A] appetizers [O] quickly [S] great', '[A] fried oysters and clams [O] delicious [S] great', '[A] portion [O] tiny [S] bad']
sent: ['The', 'appetizers', 'we', 'ordered', 'were', 'served', 'quickly', '-', 'an', 'order', 'of', 'fried', 'oysters', 'and', 'clams', 'were', 'delicious', 'but', 'a', 'tiny', 'portion', '(', 'maybe', '3', 'of', 'each', ')', '.']
counter: {('null', 'appetizers', 'great', 'quickly'): 5, ('null', 'fried oysters and clams', 'great', 'delicious'): 3, ('null', 'portion', 'bad', 'tiny'): 4, ('null', 'fried oysters and clams', 'bad', 'tiny'): 1, ('null', 'fried oysters and clams', 'bad', 'delicious'): 1}
output quads: ['[A] appetizers [O] quickly [S] great', '[A] fried oysters and clams [O] delicious [S] great', '[A] portion [O] tiny [S] bad']
multi_path: ['[A] appetizers [O] quickly [S] great [SSEP] [A] fried oysters and clams [O] delicious [S] great [SSEP] [A] portion [O] tiny [S] bad', '[O] quickly [A] appetizers [S] great [SSEP] [O] tiny [A] fried oysters and clams [S] bad', '[O] quickly [S] great [A] appetizers [SSEP] [O] delicious [S] great [A] fried oysters and clams [SSEP] [O] tiny [S] bad [A] portion', '[A] appetizers [S] great [O] quickly [SSEP] [A] fried oysters and clams [S] great [O] delicious [SSEP] [A] portion [S] bad [O] tiny', '[S] great [O] quickly [A] appetizers [SSEP] [S] bad [O] delicious [A] fried oysters and clams [SSEP] [S] bad [O] tiny [A] portion']

task, data: aste rest15
target: [('null', 'lobster knuckles', 'bad', 'ok'), ('null', 'lobster knuckles', 'bad', 'tasteless')]
output: ['[A] lobster knuckles ( special of the day ) [O] ok [S] bad', '[A] lobster knuckles [O] tasteless [S] bad']
sent: ['The', 'lobster', 'knuckles', '(', 'special', 'of', 'the', 'day', ')', 'were', 'ok', ',', 'but', 'pretty', 'tasteless', '.']
counter: {('null', 'lobster knuckles ( special of the day )', 'bad', 'ok'): 3, ('null', 'lobster knuckles ( special of the day )', 'bad', 'tasteless'): 1, ('null', 'lobster knuckles', 'bad', 'tasteless'): 4, ('null', 'lobster knuckles', 'bad', 'ok'): 2}
output quads: ['[A] lobster knuckles ( special of the day ) [O] ok [S] bad', '[A] lobster knuckles [O] tasteless [S] bad']
multi_path: ['[A] lobster knuckles ( special of the day ) [O] ok [S] bad [SSEP] [A] lobster knuckles ( special of the day ) [O] tasteless [S] bad', '[O] ok [A] lobster knuckles ( special of the day ) [S] bad [SSEP] [O] tasteless [A] lobster knuckles [S] bad', '[O] ok [S] bad [A] lobster knuckles [SSEP] [O] tasteless [S] bad [A] lobster knuckles', '[A] lobster knuckles ( special of the day ) [S] bad [O] ok [SSEP] [A] lobster knuckles [S] bad [O] tasteless', '[S] bad [O] ok [A] lobster knuckles [SSEP] [S] bad [O] tasteless [A] lobster knuckles']

task, data: aste rest15
target: [('null', 'food', 'bad', 'expensive'), ('null', 'food', 'bad', 'fresh'), ('null', 'food', 'bad', 'good')]
output: ['[A] food [O] fresh [S] great', '[A] food [O] good [S] great']
sent: ['All', 'in', 'all', 'the', 'food', 'was', 'good', '-', 'a', 'little', 'on', 'the', 'expensive', 'side', ',', 'but', 'fresh', '.']
counter: {('null', 'food', 'great', 'good'): 5, ('null', 'food', 'great', 'fresh'): 5}
output quads: ['[A] food [O] good [S] great', '[A] food [O] fresh [S] great']
multi_path: ['[A] food [O] good [S] great [SSEP] [A] food [O] fresh [S] great', '[O] good [A] food [S] great [SSEP] [O] fresh [A] food [S] great', '[O] good [S] great [A] food [SSEP] [O] fresh [S] great [A] food', '[A] food [S] great [O] good [SSEP] [A] food [S] great [O] fresh', '[S] great [O] good [A] food [SSEP] [S] great [O] fresh [A] food']

task, data: aste rest15
target: [('null', 'service', 'bad', 'not the friendliest')]
output: ['[A] service [O] friendliest [S] bad']
sent: ['Service', 'not', 'the', 'friendliest', 'to', 'our', '``', 'large', 'party', "''", '!']
counter: {('null', 'service', 'bad', 'friendliest'): 5}
output quads: ['[A] service [O] friendliest [S] bad']
multi_path: ['[A] service [O] friendliest [S] bad', '[O] friendliest [A] service [S] bad', '[O] friendliest [S] bad [A] service', '[A] service [S] bad [O] friendliest', '[S] bad [O] friendliest [A] service']

task, data: aste rest15
target: [('null', 'food', 'great', 'amazing')]
output: ['[A] food [O] amazing [S] great', '[A] food [O] best [S] great', '[A] indian food [O] love [S] great']
sent: ['Food', 'was', 'amazing', '-', 'I', 'love', 'Indian', 'food', 'and', 'eat', 'it', 'quite', 'regularly', ',', 'but', 'I', 'can', 'say', 'this', 'is', 'one', 'of', 'the', 'best', 'I', "'ve", 'had', '.']
counter: {('null', 'food', 'great', 'amazing'): 5, ('null', 'indian food', 'great', 'love'): 5, ('null', 'food', 'great', 'best'): 4, ('null', 'indian food', 'great', 'best'): 1}
output quads: ['[A] food [O] amazing [S] great', '[A] indian food [O] love [S] great', '[A] food [O] best [S] great']
multi_path: ['[A] food [O] amazing [S] great [SSEP] [A] indian food [O] love [S] great [SSEP] [A] food [O] best [S] great', '[O] amazing [A] food [S] great [SSEP] [O] love [A] indian food [S] great [SSEP] [O] best [A] food [S] great', '[O] amazing [S] great [A] food [SSEP] [O] love [S] great [A] indian food [SSEP] [O] best [S] great [A] food', '[A] food [S] great [O] amazing [SSEP] [A] indian food [S] great [O] love [SSEP] [A] food [S] great [O] best', '[S] great [O] amazing [A] food [SSEP] [S] great [O] love [A] indian food [SSEP] [S] great [O] best [A] indian food']

task, data: aste rest15
target: [('null', 'indian food', 'great', 'normal'), ('null', 'indian food', 'great', 'well')]
output: ['[A] indian food [O] normal [S] great']
sent: ['Very', '``', 'normal', 'Indian', 'food', "''", ',', 'but', 'done', 'really', 'well', '.']
counter: {('null', 'indian food', 'great', 'normal'): 5}
output quads: ['[A] indian food [O] normal [S] great']
multi_path: ['[A] indian food [O] normal [S] great', '[O] normal [A] indian food [S] great', '[O] normal [S] great [A] indian food', '[A] indian food [S] great [O] normal', '[S] great [O] normal [A] indian food']

task, data: aste rest15
target: [('null', 'lunch buffet', 'great', 'expensive'), ('null', 'lunch buffet', 'great', 'worth')]
output: ['[A] lunch buffet [O] expensive [S] bad', '[A] lunch buffet [O] worth [S] great']
sent: ['The', 'lunch', 'buffet', 'is', 'expensive', 'but', 'is', 'deff', 'worth', 'it', '.']
counter: {('null', 'lunch buffet', 'bad', 'expensive'): 5, ('null', 'lunch buffet', 'great', 'worth'): 5}
output quads: ['[A] lunch buffet [O] expensive [S] bad', '[A] lunch buffet [O] worth [S] great']
multi_path: ['[A] lunch buffet [O] expensive [S] bad [SSEP] [A] lunch buffet [O] worth [S] great', '[O] expensive [A] lunch buffet [S] bad [SSEP] [O] worth [A] lunch buffet [S] great', '[O] expensive [S] bad [A] lunch buffet [SSEP] [O] worth [S] great [A] lunch buffet', '[A] lunch buffet [S] bad [O] expensive [SSEP] [A] lunch buffet [S] great [O] worth', '[S] bad [O] expensive [A] lunch buffet [SSEP] [S] great [O] worth [A] lunch buffet']

task, data: aste rest15
target: [('null', 'dinner', 'great', 'great quality'), ('null', 'service', 'great', 'great')]
output: ['[A] quality [O] great [S] great', '[A] service [O] great [S] great']
sent: ['We', 'have', 'gone', 'for', 'dinner', 'only', 'a', 'few', 'times', 'but', 'the', 'same', 'great', 'quality', 'and', 'service', 'is', 'given', '.']
counter: {('null', 'quality', 'great', 'great'): 5, ('null', 'service', 'great', 'great'): 5}
output quads: ['[A] quality [O] great [S] great', '[A] service [O] great [S] great']
multi_path: ['[A] quality [O] great [S] great [SSEP] [A] service [O] great [S] great', '[O] great [A] quality [S] great [SSEP] [O] great [A] service [S] great', '[O] great [S] great [A] quality [SSEP] [O] great [S] great [A] service', '[A] quality [S] great [O] great [SSEP] [A] service [S] great [O] great', '[S] great [O] great [A] quality [SSEP] [S] great [O] great [A] service']

task, data: aste rest15
target: [('null', 'bukhara', 'great', 'top')]
output: ['[A] bukhara [O] top 5 [S] great']
sent: ['Bukhara', 'is', 'on', 'my', 'top', '5', 'Indian', 'places', 'in', 'NYC']
counter: {('null', 'bukhara', 'great', 'top 5'): 3, ('null', 'bukhara', 'great', 'top'): 2}
output quads: ['[A] bukhara [O] top 5 [S] great']
multi_path: ['[A] bukhara [O] top 5 [S] great', '[O] top 5 [A] bukhara [S] great', '[O] top 5 [S] great [A] bukhara', '[A] bukhara [S] great [O] top', '[S] great [O] top [A] bukhara']

task, data: aste rest15
target: [('null', 'kimchee', 'bad', 'disgusting'), ('null', 'korean fair', 'bad', 'mediocre')]
output: ['[A] fish skin [O] bad [S] bad', '[A] fish skin [O] disgusting [S] bad', '[A] fish skin [O] slimy [S] bad', '[A] order [O] predictably mediocre [S] bad']
sent: ['However', ',', 'once', 'I', 'received', 'my', 'predictably', 'mediocre', 'order', 'of', 'what', 'Dokebi', 'thinks', 'passes', 'as', 'Korean', 'fair', ',', '(', 'sometimes', 'you', 'have', 'to', 'settle', 'when', 'it', "'s", 'your', 'only', 'option', ')', ',', 'I', 'got', 'through', 'about', 'half', 'my', 'kimchee', 'before', 'I', 'found', 'a', 'piece', 'of', 'random', 'lettuce', 'accompanied', 'by', 'a', 'far', 'more', 'disgusting', ',', 'slimy', ',', 'clearly', 'bad', 'piece', 'of', 'fish', 'skin', '.']
counter: {('null', 'kimchee', 'bad', 'predictably mediocre'): 2, ('null', 'fish skin', 'bad', 'disgusting'): 5, ('null', 'fish skin', 'bad', 'slimy'): 5, ('null', 'fish skin', 'bad', 'bad'): 5, ('null', 'order', 'bad', 'predictably mediocre'): 3}
output quads: ['[A] fish skin [O] disgusting [S] bad', '[A] fish skin [O] slimy [S] bad', '[A] fish skin [O] bad [S] bad', '[A] order [O] predictably mediocre [S] bad']
multi_path: ['[A] kimchee [O] predictably mediocre [S] bad [SSEP] [A] fish skin [O] disgusting [S] bad [SSEP] [A] fish skin [O] slimy [S] bad [SSEP] [A] fish skin [O] bad [S] bad', '[O] predictably mediocre [A] order [S] bad [SSEP] [O] disgusting [A] fish skin [S] bad [SSEP] [O] slimy [A] fish skin [S] bad [SSEP] [O] bad [A] fish skin [S] bad', '[O] predictably mediocre [S] bad [A] order [SSEP] [O] disgusting [S] bad [A] fish skin [SSEP] [O] slimy [S] bad [A] fish skin [SSEP] [O] bad [S] bad [A] fish skin', '[A] kimchee [S] bad [O] predictably mediocre [SSEP] [A] fish skin [S] bad [O] disgusting [SSEP] [A] fish skin [S] bad [O] slimy [SSEP] [A] fish skin [S] bad [O] bad', '[S] bad [O] predictably mediocre [A] order [SSEP] [S] bad [O] disgusting [A] fish skin [SSEP] [S] bad [O] slimy [A] fish skin [SSEP] [S] bad [O] bad [A] fish skin']

task, data: aste rest15
target: [('null', 'place', 'great', 'gorgeous'), ('null', 'place', 'great', 'ideal')]
output: ['[A] place [O] gorgeous [S] great']
sent: ['Gorgeous', 'place', 'ideal', 'for', 'a', 'romantic', 'dinner']
counter: {('null', 'place', 'great', 'gorgeous'): 5}
output quads: ['[A] place [O] gorgeous [S] great']
multi_path: ['[A] place [O] gorgeous [S] great', '[O] gorgeous [A] place [S] great', '[O] gorgeous [S] great [A] place', '[A] place [S] great [O] gorgeous', '[S] great [O] gorgeous [A] place']

task, data: aste rest15
target: [('null', 'side dishes', 'great', 'passable')]
output: ['[A] side dishes [O] passable [S] ok']
sent: ['The', 'side', 'dishes', 'were', 'passable', ',', 'and', 'I', 'did', 'get', 'a', 'refill', 'upon', 'request', '.']
counter: {('null', 'side dishes', 'ok', 'passable'): 5}
output quads: ['[A] side dishes [O] passable [S] ok']
multi_path: ['[A] side dishes [O] passable [S] ok', '[O] passable [A] side dishes [S] ok', '[O] passable [S] ok [A] side dishes', '[A] side dishes [S] ok [O] passable', '[S] ok [O] passable [A] side dishes']

task, data: aste rest15
target: [('null', 'service', 'bad', 'lack of')]
output: ['[A] service [O] lack [S] bad']
sent: ['The', 'real', 'problem', 'I', 'had', 'with', 'this', 'place', 'was', 'the', 'complete', 'lack', 'of', 'service', '.']
counter: {('null', 'service', 'bad', 'lack'): 5}
output quads: ['[A] service [O] lack [S] bad']
multi_path: ['[A] service [O] lack [S] bad', '[O] lack [A] service [S] bad', '[O] lack [S] bad [A] service', '[A] service [S] bad [O] lack', '[S] bad [O] lack [A] service']

task, data: aste rest15
target: [('null', 'east village pizza', 'great', 'love'), ('null', 'margherita pizza', 'great', 'looove')]
output: ['[A] margherita pizza [O] love [S] great']
sent: ['i', 'love', 'margherita', 'pizza', '–', 'i', 'looove', 'east', 'village', 'pizza']
counter: {('null', 'margherita pizza', 'great', 'love'): 5}
output quads: ['[A] margherita pizza [O] love [S] great']
multi_path: ['[A] margherita pizza [O] love [S] great', '[O] love [A] margherita pizza [S] great', '[O] love [S] great [A] margherita pizza', '[A] margherita pizza [S] great [O] love', '[S] great [O] love [A] margherita pizza']

task, data: aste rest15
target: [('null', 'slice of nyc pizza', 'ok', 'quintessential')]
output: ['[A] nyc pizza [O] quintessential [S] great']
sent: ['A', 'quintessential', 'slice', 'of', 'NYC', 'pizza', '.']
counter: {('null', 'nyc pizza', 'great', 'quintessential'): 5}
output quads: ['[A] nyc pizza [O] quintessential [S] great']
multi_path: ['[A] nyc pizza [O] quintessential [S] great', '[O] quintessential [A] nyc pizza [S] great', '[O] quintessential [S] great [A] nyc pizza', '[A] nyc pizza [S] great [O] quintessential', '[S] great [O] quintessential [A] nyc pizza']

task, data: aste rest15
target: [('null', 'cheese', 'great', 'great'), ('null', 'crust', 'great', 'good'), ('null', 'crust', 'great', 'great'), ('null', 'sauce', 'great', 'light')]
output: ['[A] crust [O] great [S] great', '[A] sauce [O] light [S] great', '[A] sauce [O] nice [S] great']
sent: ['The', 'crust', 'has', 'a', 'great', 'bite', 'and', 'a', 'good', 'chew', ',', 'the', 'sauce', 'is', 'light', 'with', 'a', 'nice', 'acidity', 'to', 'it', ',', 'the', 'salt', 'from', 'the', 'cheese', 'is', 'great', ',', 'really', 'heightens', 'the', 'flavor', 'of', 'all', 'the', 'other', 'components', '.']
counter: {('null', 'crust', 'great', 'great'): 5, ('null', 'bite', 'great', 'great'): 1, ('null', 'sauce', 'great', 'light'): 5, ('null', 'sauce', 'great', 'nice'): 5, ('null', 'crust', 'great', 'good chew'): 1}
output quads: ['[A] crust [O] great [S] great', '[A] sauce [O] light [S] great', '[A] sauce [O] nice [S] great']
multi_path: ['[A] crust [O] great [S] great [SSEP] [A] bite [O] great [S] great [SSEP] [A] sauce [O] light [S] great [SSEP] [A] sauce [O] nice [S] great', '[O] great [A] crust [S] great [SSEP] [O] good chew [A] crust [S] great [SSEP] [O] light [A] sauce [S] great [SSEP] [O] nice [A] sauce [S] great', '[O] great [S] great [A] crust [SSEP] [O] light [S] great [A] sauce [SSEP] [O] nice [S] great [A] sauce', '[A] crust [S] great [O] great [SSEP] [A] sauce [S] great [O] light [SSEP] [A] sauce [S] great [O] nice', '[S] great [O] great [A] crust [SSEP] [S] great [O] light [A] sauce [SSEP] [S] great [O] nice [A] sauce']

task, data: aste rest15
target: [('null', 'margherita pizza', 'great', 'like')]
output: ['[A] margherita pizza [O] good [S] great', '[A] margherita pizza [O] like [S] great']
sent: ['Personally', 'I', 'like', 'the', 'margherita', 'pizza', 'better', ',', 'but', 'they', 'are', 'all', 'good', '.']
counter: {('null', 'margherita pizza', 'great', 'like'): 5, ('null', 'margherita pizza', 'great', 'good'): 5}
output quads: ['[A] margherita pizza [O] like [S] great', '[A] margherita pizza [O] good [S] great']
multi_path: ['[A] margherita pizza [O] like [S] great [SSEP] [A] margherita pizza [O] good [S] great', '[O] like [A] margherita pizza [S] great [SSEP] [O] good [A] margherita pizza [S] great', '[O] like [S] great [A] margherita pizza [SSEP] [O] good [S] great [A] margherita pizza', '[A] margherita pizza [S] great [O] like [SSEP] [A] margherita pizza [S] great [O] good', '[S] great [O] like [A] margherita pizza [SSEP] [S] great [O] good [A] margherita pizza']

task, data: aste rest15
target: [('null', 'modern japanese brasserie', 'great', 'favorite'), ('null', 'modern japanese brasserie', 'great', 'romantic')]
output: ['[A] japanese brasserie [O] favorite [S] great']
sent: ['This', 'is', 'undoubtedly', 'my', 'favorite', 'modern', 'Japanese', 'brasserie', '(', 'that', 'don', '’', 't', 'serve', 'sushi', ')', ',', 'and', 'in', 'my', 'opinion', ',', 'one', 'of', 'the', 'most', 'romantic', 'restaurants', 'in', 'the', 'city', '!']
counter: {('null', 'japanese brasserie', 'great', 'favorite'): 5}
output quads: ['[A] japanese brasserie [O] favorite [S] great']
multi_path: ['[A] japanese brasserie [O] favorite [S] great', '[O] favorite [A] japanese brasserie [S] great', '[O] favorite [S] great [A] japanese brasserie', '[A] japanese brasserie [S] great [O] favorite', '[S] great [O] favorite [A] japanese brasserie']

task, data: aste rest15
target: [('null', 'décor', 'great', 'intimate'), ('null', 'spot', 'ok', 'hidden')]
output: ['[A] décor [O] intimate [S] great', '[A] spot [O] hidden [S] ok', '[A] unmarked wooden doors [O] unmarked wooden doors [S] great']
sent: ['Not', 'only', 'is', 'it', 'an', 'adventure', 'getting', 'to', 'this', 'somewhat', 'hidden', 'spot', ',', 'once', 'you', 'enter', 'the', 'unmarked', 'wooden', 'doors', ',', 'the', 'zen', 'and', 'intimate', 'décor', 'will', 'make', 'you', 'feel', 'like', 'you', '’', 're', 'no', 'longer', 'in', 'the', 'city', '.']
counter: {('null', 'spot', 'ok', 'hidden'): 5, ('null', 'unmarked wooden doors', 'great', 'unmarked'): 2, ('null', 'décor', 'great', 'intimate'): 5, ('null', 'unmarked wooden doors', 'great', 'unmarked wooden doors'): 3}
output quads: ['[A] spot [O] hidden [S] ok', '[A] décor [O] intimate [S] great', '[A] unmarked wooden doors [O] unmarked wooden doors [S] great']
multi_path: ['[A] spot [O] hidden [S] ok [SSEP] [A] unmarked wooden doors [O] unmarked [S] great [SSEP] [A] décor [O] intimate [S] great', '[O] hidden [A] spot [S] ok [SSEP] [O] unmarked wooden doors [A] unmarked wooden doors [S] great [SSEP] [O] intimate [A] décor [S] great', '[O] hidden [S] ok [A] spot [SSEP] [O] unmarked wooden doors [S] great [A] unmarked wooden doors [SSEP] [O] intimate [S] great [A] décor', '[A] spot [S] ok [O] hidden [SSEP] [A] unmarked wooden doors [S] great [O] unmarked [SSEP] [A] décor [S] great [O] intimate', '[S] ok [O] hidden [A] spot [SSEP] [S] great [O] unmarked wooden doors [A] unmarked wooden doors [SSEP] [S] great [O] intimate [A] décor']

task, data: aste rest15
target: [('null', 'private booths', 'great', 'ushered')]
output: []
sent: ['If', 'you', '’', 're', 'planning', 'to', 'come', 'here', ',', 'make', 'sure', 'that', 'your', 'date', 'is', 'someone', 'whom', 'you', 'really', 'like', 'since', 'you', '’', 'll', 'be', 'ushered', 'to', 'private', 'booths', 'where', 'there', 'will', 'be', 'no', 'people', 'or', 'food', 'watching', '(', 'choose', 'the', 'ones', 'on', 'the', 'ground', 'level', 'that', 'have', 'glass', 'ceilings', 'so', 'you', 'may', 'see', 'the', 'stars', 'in', 'the', 'sky', '!', ')', '.']
counter: {('null', 'booths', 'great', 'private'): 1, ('null', 'date', 'great', 'like'): 2, ('null', 'booths', 'ok', 'private'): 1, ('null', 'date', 'ok', 'like'): 1}
output quads: []
multi_path: ['[A] booths [O] private [S] great', '[O] like [A] date [S] great', '[O] like [S] great [A] date', '[A] booths [S] ok [O] private', '[S] ok [O] like [A] date']

task, data: aste rest15
target: [('null', 'frozen black sesame mousse', 'ok', 'extraordinary'), ('null', 'frozen black sesame mousse', 'ok', 'interesting'), ('null', 'matcha ( powdered green tea ) and blueberry cheesecake', 'great', 'phenomenal')]
output: ['[A] blueberry cheesecake [O] phenomenal [S] great', '[A] frozen black sesame mousse [O] frozen [S] great', '[A] frozen black sesame mousse [O] interesting [S] great', '[A] frozen black sesame mousse [O] not extraordinary [S] great', '[A] matcha ( powdered green tea ) [O] phenomenal [S] great']
sent: ['For', 'desserts', ',', 'we', 'tried', 'the', 'frozen', 'black', 'sesame', 'mousse', '(', 'interesting', 'but', 'not', 'extraordinary', ')', 'and', 'matcha', '(', 'powdered', 'green', 'tea', ')', 'and', 'blueberry', 'cheesecake', ',', 'which', 'was', 'phenomenal', '.']
counter: {('null', 'frozen black sesame mousse', 'great', 'interesting'): 5, ('null', 'frozen black sesame mousse', 'great', 'not extraordinary'): 5, ('null', 'matcha ( powdered green tea )', 'great', 'phenomenal'): 5, ('null', 'blueberry cheesecake', 'great', 'phenomenal'): 5, ('null', 'frozen black sesame mousse', 'great', 'frozen'): 3}
output quads: ['[A] frozen black sesame mousse [O] interesting [S] great', '[A] frozen black sesame mousse [O] not extraordinary [S] great', '[A] matcha ( powdered green tea ) [O] phenomenal [S] great', '[A] blueberry cheesecake [O] phenomenal [S] great', '[A] frozen black sesame mousse [O] frozen [S] great']
multi_path: ['[A] frozen black sesame mousse [O] interesting [S] great [SSEP] [A] frozen black sesame mousse [O] not extraordinary [S] great [SSEP] [A] matcha ( powdered green tea ) [O] phenomenal [S] great [SSEP] [A] blueberry cheesecake [O] phenomenal [S] great', '[O] frozen [A] frozen black sesame mousse [S] great [SSEP] [O] interesting [A] frozen black sesame mousse [S] great [SSEP] [O] not extraordinary [A] frozen black sesame mousse [S] great [SSEP] [O] phenomenal [A] matcha ( powdered green tea ) [S] great [SSEP] [O] phenomenal [A] blueberry cheesecake [S] great', '[O] frozen [S] great [A] frozen black sesame mousse [SSEP] [O] interesting [S] great [A] frozen black sesame mousse [SSEP] [O] not extraordinary [S] great [A] frozen black sesame mousse [SSEP] [O] phenomenal [S] great [A] matcha ( powdered green tea ) [SSEP] [O] phenomenal [S] great [A] blueberry cheesecake', '[A] frozen black sesame mousse [S] great [O] interesting [SSEP] [A] frozen black sesame mousse [S] great [O] not extraordinary [SSEP] [A] matcha ( powdered green tea ) [S] great [O] phenomenal [SSEP] [A] blueberry cheesecake [S] great [O] phenomenal', '[S] great [O] frozen [A] frozen black sesame mousse [SSEP] [S] great [O] interesting [A] frozen black sesame mousse [SSEP] [S] great [O] not extraordinary [A] frozen black sesame mousse [SSEP] [S] great [O] phenomenal [A] matcha ( powdered green tea ) [SSEP] [S] great [O] phenomenal [A] blueberry cheesecake']

task, data: aste rest15
target: [('null', 'brasserie', 'great', 'good')]
output: ['[A] brasserie [O] good [S] great', '[A] brasserie [O] great [S] great']
sent: ['Maybe', 'it', 'was', 'the', 'great', 'company', '(', 'I', 'had', 'friends', 'visiting', 'from', 'Philly', '–', 'yes', ',', 'it', 'was', 'not', 'a', 'date', 'this', 'time', ')', 'or', 'the', 'super', 'reasonable', 'price', 'point', ',', 'but', 'I', 'just', 'can', '’', 't', 'say', 'enough', 'good', 'things', 'about', 'this', 'brasserie', '.']
counter: {('null', 'brasserie', 'great', 'good'): 5, ('null', 'brasserie', 'great', 'great'): 3}
output quads: ['[A] brasserie [O] good [S] great', '[A] brasserie [O] great [S] great']
multi_path: ['[A] brasserie [O] good [S] great', '[O] great [A] brasserie [S] great [SSEP] [O] good [A] brasserie [S] great', '[O] great [S] great [A] brasserie [SSEP] [O] good [S] great [A] brasserie', '[A] brasserie [S] great [O] good', '[S] great [O] great [A] brasserie [SSEP] [S] great [O] good [A] brasserie']

task, data: aste rest15
target: [('null', 'service', 'bad', 'leaves much to be desired')]
output: ['[A] service [O] desired [S] bad']
sent: ['The', 'service', 'leaves', 'much', 'to', 'be', 'desired', ',', 'from', 'feeling', 'like', 'you', 'are', 'rushed', 'the', 'place', 'your', 'order', ',', 'to', 'being', 'ignored', 'the', 'rest', 'of', 'the', 'night', '.']
counter: {('null', 'service', 'bad', 'desired'): 5}
output quads: ['[A] service [O] desired [S] bad']
multi_path: ['[A] service [O] desired [S] bad', '[O] desired [A] service [S] bad', '[O] desired [S] bad [A] service', '[A] service [S] bad [O] desired', '[S] bad [O] desired [A] service']

task, data: aste rest15
target: [('null', 'service', 'bad', 'horrible')]
output: ['[A] service [O] rude [S] bad']
sent: ['They', 'are', 'extremely', 'rude', ',', 'not', 'even', 'apologizing', 'for', 'the', 'horrible', 'service', 'we', 'got', 'and', 'handing', 'us', 'a', 'bill', 'well', 'over', '$', '500', 'for', 'some', 'drinks', 'adn', 'their', 'pita', 'bread', '!']
counter: {('null', 'service', 'bad', 'rude'): 5}
output quads: ['[A] service [O] rude [S] bad']
multi_path: ['[A] service [O] rude [S] bad', '[O] rude [A] service [S] bad', '[O] rude [S] bad [A] service', '[A] service [S] bad [O] rude', '[S] bad [O] rude [A] service']

task, data: aste rest15
target: [('null', 'dishes', 'ok', "wasn't too impressed")]
output: ["[A] dishes [O] wasn't too impressed [S] bad"]
sent: ['I', 'tried', 'a', 'couple', 'other', 'dishes', 'but', 'was', "n't", 'too', 'impressed', '.']
counter: {('null', 'dishes', 'bad', "wasn't too impressed"): 5}
output quads: ["[A] dishes [O] wasn't too impressed [S] bad"]
multi_path: ["[A] dishes [O] wasn't too impressed [S] bad", "[O] wasn't too impressed [A] dishes [S] bad", "[O] wasn't too impressed [S] bad [A] dishes", "[A] dishes [S] bad [O] wasn't too impressed", "[S] bad [O] wasn't too impressed [A] dishes"]

task, data: aste rest15
target: [('null', 'kimchi', 'great', 'free'), ('null', 'meat', 'great', 'fresh'), ('null', 'salad', 'great', 'free'), ('null', 'sauces', 'great', 'great'), ('null', 'service', 'great', 'good')]
output: ['[A] kimchi [O] free [S] great', '[A] meat [O] fresh [S] great', '[A] sauces [O] great [S] great', '[A] service [O] good [S] great']
sent: ['The', 'meat', 'is', 'fresh', ',', 'the', 'sauces', 'are', 'great', ',', 'you', 'get', 'kimchi', 'and', 'a', 'salad', 'free', 'with', 'your', 'meal', 'and', 'service', 'is', 'good', 'too', '.']
counter: {('null', 'meat', 'great', 'fresh'): 5, ('null', 'sauces', 'great', 'great'): 5, ('null', 'kimchi', 'great', 'free'): 5, ('null', 'salad', 'great', 'free'): 2, ('null', 'service', 'great', 'good'): 5}
output quads: ['[A] meat [O] fresh [S] great', '[A] sauces [O] great [S] great', '[A] kimchi [O] free [S] great', '[A] service [O] good [S] great']
multi_path: ['[A] meat [O] fresh [S] great [SSEP] [A] sauces [O] great [S] great [SSEP] [A] kimchi [O] free [S] great [SSEP] [A] salad [O] free [S] great [SSEP] [A] service [O] good [S] great', '[O] fresh [A] meat [S] great [SSEP] [O] great [A] sauces [S] great [SSEP] [O] free [A] kimchi [S] great [SSEP] [O] good [A] service [S] great', '[O] fresh [S] great [A] meat [SSEP] [O] great [S] great [A] sauces [SSEP] [O] free [S] great [A] kimchi [SSEP] [O] good [S] great [A] service', '[A] meat [S] great [O] fresh [SSEP] [A] sauces [S] great [O] great [SSEP] [A] kimchi [S] great [O] free [SSEP] [A] salad [S] great [O] free [SSEP] [A] service [S] great [O] good', '[S] great [O] fresh [A] meat [SSEP] [S] great [O] great [A] sauces [SSEP] [S] great [O] free [A] kimchi [SSEP] [S] great [O] good [A] service']

task, data: aste rest15
target: [('null', 'fusion twists', 'great', 'classic'), ('null', 'korean food', 'great', 'classic'), ('null', 'pork belly tacos', 'great', 'classic')]
output: ['[A] dokebi [O] classic [S] great', '[A] korean food [O] classic [S] great', '[A] pork belly tacos [O] fusion twists [S] great']
sent: ['Dokebi', 'gives', 'Williamsburg', 'the', 'right', 'one-two', 'punch', 'of', 'classic', 'Korean', 'food', 'and', 'fusion', 'twists', 'like', 'pork', 'belly', 'tacos', '.']
counter: {('null', 'dokebi', 'great', 'classic'): 5, ('null', 'korean food', 'great', 'classic'): 5, ('null', 'pork belly tacos', 'great', 'fusion twists'): 5}
output quads: ['[A] dokebi [O] classic [S] great', '[A] korean food [O] classic [S] great', '[A] pork belly tacos [O] fusion twists [S] great']
multi_path: ['[A] dokebi [O] classic [S] great [SSEP] [A] korean food [O] classic [S] great [SSEP] [A] pork belly tacos [O] fusion twists [S] great', '[O] classic [A] dokebi [S] great [SSEP] [O] classic [A] korean food [S] great [SSEP] [O] fusion twists [A] pork belly tacos [S] great', '[O] classic [S] great [A] dokebi [SSEP] [O] classic [S] great [A] korean food [SSEP] [O] fusion twists [S] great [A] pork belly tacos', '[A] dokebi [S] great [O] classic [SSEP] [A] korean food [S] great [O] classic [SSEP] [A] pork belly tacos [S] great [O] fusion twists', '[S] great [O] classic [A] dokebi [SSEP] [S] great [O] classic [A] korean food [SSEP] [S] great [O] fusion twists [A] pork belly tacos']

task, data: aste rest15
target: [('null', 'bun', 'great', 'perfect'), ('null', 'hot dogs', 'great', 'good'), ('null', 'pork croquette sandwich', 'great', 'fantastic')]
output: ['[A] hot dogs [O] good [S] great', '[A] pork croquette sandwich [O] fantastic [S] great']
sent: ['The', 'hot', 'dogs', 'are', 'good', ',', 'yes', ',', 'but', 'the', 'reason', 'to', 'get', 'over', 'here', 'is', 'the', 'fantastic', 'pork', 'croquette', 'sandwich', ',', 'perfect', 'on', 'its', 'supermarket', 'squishy', 'bun', '.']
counter: {('null', 'hot dogs', 'great', 'good'): 5, ('null', 'pork croquette sandwich', 'great', 'fantastic'): 5}
output quads: ['[A] hot dogs [O] good [S] great', '[A] pork croquette sandwich [O] fantastic [S] great']
multi_path: ['[A] hot dogs [O] good [S] great [SSEP] [A] pork croquette sandwich [O] fantastic [S] great', '[O] good [A] hot dogs [S] great [SSEP] [O] fantastic [A] pork croquette sandwich [S] great', '[O] good [S] great [A] hot dogs [SSEP] [O] fantastic [S] great [A] pork croquette sandwich', '[A] hot dogs [S] great [O] good [SSEP] [A] pork croquette sandwich [S] great [O] fantastic', '[S] great [O] good [A] hot dogs [SSEP] [S] great [O] fantastic [A] pork croquette sandwich']

task, data: aste rest15
target: [('null', 'food', 'bad', 'good')]
output: ['[A] food [O] good [S] great', '[A] price [O] high [S] bad']
sent: ['Price', 'is', 'high', 'but', 'the', 'food', 'is', 'good', ',', 'so', 'I', 'would', 'come', 'back', 'again', '.']
counter: {('null', 'food', 'great', 'good'): 5, ('null', 'price', 'bad', 'high'): 3}
output quads: ['[A] food [O] good [S] great', '[A] price [O] high [S] bad']
multi_path: ['[A] food [O] good [S] great', '[O] high [A] price [S] bad [SSEP] [O] good [A] food [S] great', '[O] high [S] bad [A] price [SSEP] [O] good [S] great [A] food', '[A] food [S] great [O] good', '[S] bad [O] high [A] price [SSEP] [S] great [O] good [A] food']

task, data: aste rest15
target: [('null', 'decor', 'bad', 'weird'), ('null', 'mirrored walls', 'bad', 'delusional'), ('null', 'mirrored walls', 'bad', 'dizzy')]
output: ['[A] decor [O] weird [S] bad', '[A] stairs [O] weird [S] bad']
sent: ['This', 'place', 'has', 'totally', 'weird', 'decor', ',', 'stairs', 'going', 'up', 'with', 'mirrored', 'walls', '-', 'I', 'am', 'surprised', 'how', 'no', 'one', 'yet', 'broke', 'their', 'head', 'or', 'fall', 'off', 'the', 'stairs', '-', 'mirrored', 'walls', 'make', 'you', 'dizzy', 'and', 'delusional', '...']
counter: {('null', 'decor', 'bad', 'weird'): 5, ('null', 'stairs', 'bad', 'weird'): 3, ('null', 'mirrored walls', 'bad', 'delusional'): 1, ('null', 'stairs', 'great', 'weird'): 2, ('null', 'walls', 'bad', 'mirrored'): 2, ('null', 'walls', 'great', 'mirrored'): 1, ('null', 'mirrored walls', 'great', 'delusional'): 1}
output quads: ['[A] decor [O] weird [S] bad', '[A] stairs [O] weird [S] bad']
multi_path: ['[A] decor [O] weird [S] bad [SSEP] [A] stairs [O] weird [S] bad [SSEP] [A] mirrored walls [O] delusional [S] bad', '[O] weird [A] decor [S] bad [SSEP] [O] weird [A] stairs [S] great [SSEP] [O] mirrored [A] walls [S] bad', '[O] weird [S] bad [A] decor [SSEP] [O] weird [S] bad [A] stairs [SSEP] [O] mirrored [S] great [A] walls', '[A] decor [S] bad [O] weird [SSEP] [A] stairs [S] great [O] weird [SSEP] [A] mirrored walls [S] great [O] delusional', '[S] bad [O] weird [A] decor [SSEP] [S] bad [O] weird [A] stairs [SSEP] [S] bad [O] mirrored [A] walls']

task, data: aste rest15
target: [('null', 'food', 'great', 'great'), ('null', 'food', 'great', 'tasty'), ('null', 'sitting space', 'bad', 'too small')]
output: ['[A] food [O] great [S] great', '[A] food [O] tasty [S] great', '[A] sitting space [O] small [S] bad']
sent: ['The', 'food', 'was', 'great', 'and', 'tasty', ',', 'but', 'the', 'sitting', 'space', 'was', 'too', 'small', ',', 'I', 'do', "n't", 'like', 'being', 'cramp', 'in', 'a', 'corner', '.']
counter: {('null', 'food', 'great', 'great'): 5, ('null', 'food', 'great', 'tasty'): 5, ('null', 'sitting space', 'bad', 'small'): 5}
output quads: ['[A] food [O] great [S] great', '[A] food [O] tasty [S] great', '[A] sitting space [O] small [S] bad']
multi_path: ['[A] food [O] great [S] great [SSEP] [A] food [O] tasty [S] great [SSEP] [A] sitting space [O] small [S] bad', '[O] great [A] food [S] great [SSEP] [O] tasty [A] food [S] great [SSEP] [O] small [A] sitting space [S] bad', '[O] great [S] great [A] food [SSEP] [O] tasty [S] great [A] food [SSEP] [O] small [S] bad [A] sitting space', '[A] food [S] great [O] great [SSEP] [A] food [S] great [O] tasty [SSEP] [A] sitting space [S] bad [O] small', '[S] great [O] great [A] food [SSEP] [S] great [O] tasty [A] food [SSEP] [S] bad [O] small [A] sitting space']

task, data: aste rest15
target: [('null', 'waitress', 'ok', 'not especially warm or attentive'), ('null', 'waitress', 'ok', "wasn't mean")]
output: ['[A] waitress [O] not especially warm or attentive [S] bad', "[A] waitress [O] wasn't mean [S] bad"]
sent: ['Our', 'waitress', 'was', "n't", 'mean', ',', 'but', 'not', 'especially', 'warm', 'or', 'attentive', 'either', '.']
counter: {('null', 'waitress', 'bad', "wasn't mean"): 4, ('null', 'waitress', 'bad', 'not especially warm or attentive'): 5}
output quads: ["[A] waitress [O] wasn't mean [S] bad", '[A] waitress [O] not especially warm or attentive [S] bad']
multi_path: ["[A] waitress [O] wasn't mean [S] bad [SSEP] [A] waitress [O] not especially warm or attentive [S] bad", '[O] not especially warm or attentive [A] waitress [S] bad', "[O] wasn't mean [S] bad [A] waitress [SSEP] [O] not especially warm or attentive [S] bad [A] waitress", "[A] waitress [S] bad [O] wasn't mean [SSEP] [A] waitress [S] bad [O] not especially warm or attentive", "[S] bad [O] wasn't mean [A] waitress [SSEP] [S] bad [O] not especially warm or attentive [A] waitress"]

task, data: aste rest15
target: [('null', 'restaurant', 'great', 'bad')]
output: ['[A] restaurant [O] bad [S] bad']
sent: ['I', 'must', 'say', 'I', 'am', 'surprised', 'by', 'the', 'bad', 'reviews', 'of', 'the', 'restaurant', 'earlier', 'in', 'the', 'year', ',', 'though', '.']
counter: {('null', 'restaurant', 'bad', 'bad'): 5}
output quads: ['[A] restaurant [O] bad [S] bad']
multi_path: ['[A] restaurant [O] bad [S] bad', '[O] bad [A] restaurant [S] bad', '[O] bad [S] bad [A] restaurant', '[A] restaurant [S] bad [O] bad', '[S] bad [O] bad [A] restaurant']

task, data: aste rest15
target: [('null', 'servers', 'bad', 'perfected')]
output: ['[A] servers [O] ashamed [S] bad', '[A] servers [O] guilty [S] bad']
sent: ['The', 'servers', 'at', 'Flatbush', 'Farm', 'appear', 'to', 'have', 'perfected', 'that', 'ghastly', 'technique', 'of', 'making', 'you', 'feel', 'guilty', 'and', 'ashamed', 'for', 'deigning', 'to', 'attract', 'their', 'attention', '.']
counter: {('null', 'servers', 'bad', 'guilty'): 3, ('null', 'servers', 'bad', 'ashamed'): 3, ('null', 'servers', 'great', 'guilty'): 2, ('null', 'servers', 'great', 'ashamed'): 2}
output quads: ['[A] servers [O] guilty [S] bad', '[A] servers [O] ashamed [S] bad']
multi_path: ['[A] servers [O] guilty [S] bad [SSEP] [A] servers [O] ashamed [S] bad', '[O] guilty [A] servers [S] bad [SSEP] [O] ashamed [A] servers [S] bad', '[O] guilty [S] bad [A] servers [SSEP] [O] ashamed [S] bad [A] servers', '[A] servers [S] great [O] guilty [SSEP] [A] servers [S] great [O] ashamed', '[S] great [O] guilty [A] servers [SSEP] [S] great [O] ashamed [A] servers']

task, data: aste rest15
target: [('null', 'appetizer', 'great', 'delicious'), ('null', 'server', 'bad', 'enhanced')]
output: ['[A] server [O] different [S] great']
sent: ['A', 'different', 'server', 'enhanced', 'the', 'fun', ',', 'dumping', 'our', 'entrees', 'in', 'front', 'of', 'us', 'halfway', 'through', 'our', 'appetizer', '(', 'which', 'was', 'delicious', ')', '.']
counter: {('null', 'server', 'great', 'different'): 5}
output quads: ['[A] server [O] different [S] great']
multi_path: ['[A] server [O] different [S] great', '[O] different [A] server [S] great', '[O] different [S] great [A] server', '[A] server [S] great [O] different', '[S] great [O] different [A] server']

task, data: aste rest15
target: [('null', 'food', 'great', 'good')]
output: ['[A] food quality [O] good [S] great', '[A] salmon [O] better [S] great']
sent: ['Overall', 'the', 'food', 'quality', 'was', 'pretty', 'good', ',', 'though', 'I', 'hear', 'the', 'salmon', 'is', 'much', 'better', 'when', 'it', 'has', "n't", 'sat', 'cooling', 'in', 'front', 'of', 'the', 'guest', '.']
counter: {('null', 'food quality', 'great', 'good'): 5, ('null', 'salmon', 'great', 'better'): 5}
output quads: ['[A] food quality [O] good [S] great', '[A] salmon [O] better [S] great']
multi_path: ['[A] food quality [O] good [S] great [SSEP] [A] salmon [O] better [S] great', '[O] good [A] food quality [S] great [SSEP] [O] better [A] salmon [S] great', '[O] good [S] great [A] food quality [SSEP] [O] better [S] great [A] salmon', '[A] food quality [S] great [O] good [SSEP] [A] salmon [S] great [O] better', '[S] great [O] good [A] food quality [SSEP] [S] great [O] better [A] salmon']

task, data: aste rest15
target: [('null', 'meals', 'bad', 'good')]
output: ['[A] meals [O] good [S] great']
sent: ['Everything', 'was', 'going', 'good', 'until', 'we', 'got', 'our', 'meals', '.']
counter: {('null', 'meals', 'great', 'good'): 5}
output quads: ['[A] meals [O] good [S] great']
multi_path: ['[A] meals [O] good [S] great', '[O] good [A] meals [S] great', '[O] good [S] great [A] meals', '[A] meals [S] great [O] good', '[S] great [O] good [A] meals']

task, data: aste rest15
target: [('null', 'spinach', 'bad', 'undercooked')]
output: ['[A] spinach and mashed potatoes [O] undercooked [S] bad']
sent: ['It', 'was', 'served', 'with', 'skin', ',', 'over', 'a', 'bed', 'of', 'extremely', 'undercooked', 'spinach', 'and', 'mashed', 'potatoes', '.']
counter: {('null', 'spinach and mashed potatoes', 'bad', 'undercooked'): 5}
output quads: ['[A] spinach and mashed potatoes [O] undercooked [S] bad']
multi_path: ['[A] spinach and mashed potatoes [O] undercooked [S] bad', '[O] undercooked [A] spinach and mashed potatoes [S] bad', '[O] undercooked [S] bad [A] spinach and mashed potatoes', '[A] spinach and mashed potatoes [S] bad [O] undercooked', '[S] bad [O] undercooked [A] spinach and mashed potatoes']

task, data: aste rest15
target: [('null', 'appetizers', 'great', 'enjoy'), ('null', 'drinks', 'great', 'enjoy')]
output: ['[A] manager [O] enjoy [S] ok']
sent: ['The', 'manager', 'came', 'to', 'the', 'table', 'and', 'said', 'we', 'can', 'do', 'what', 'we', 'want', ',', 'so', 'we', 'paid', 'for', 'what', 'we', 'did', 'enjoy', ',', 'the', 'drinks', 'and', 'appetizers', ',', 'and', 'walked', 'out', '.']
counter: {('null', 'manager', 'ok', 'enjoy'): 3, ('null', 'manager', 'great', 'enjoy'): 1, ('null', 'manager', 'bad', 'enjoy'): 1}
output quads: ['[A] manager [O] enjoy [S] ok']
multi_path: ['[A] manager [O] enjoy [S] ok', '[O] enjoy [A] manager [S] great', '[O] enjoy [S] ok [A] manager', '[A] manager [S] bad [O] enjoy', '[S] ok [O] enjoy [A] manager']

task, data: aste rest15
target: [('null', 'margherita pizza', 'great', 'cirspy crust')]
output: ['[A] crust margherita pizza [O] cirspy [S] great']
sent: ['cirspy', 'crust', 'margherita', 'pizza']
counter: {('null', 'cirspy crust margherita pizza', 'great', 'cirspy'): 2, ('null', 'crust margherita pizza', 'great', 'cirspy'): 3}
output quads: ['[A] crust margherita pizza [O] cirspy [S] great']
multi_path: ['[A] cirspy crust margherita pizza [O] cirspy [S] great', '[O] cirspy [A] crust margherita pizza [S] great', '[O] cirspy [S] great [A] crust margherita pizza', '[A] cirspy crust margherita pizza [S] great [O] cirspy', '[S] great [O] cirspy [A] crust margherita pizza']

task, data: aste rest15
target: [('null', 'crust', 'great', 'cooked well'), ('null', 'pizza', 'great', 'fully loaded')]
output: ['[A] crust [O] imazingly cooked well [S] great', '[A] pizza [O] fully loaded [S] great']
sent: ['the', 'crust', 'was', 'imazingly', 'cooked', 'well', 'and', 'pizza', 'was', 'fully', 'loaded', ':', ')', ':', ')', ':', ')']
counter: {('null', 'crust', 'great', 'imazingly cooked well'): 5, ('null', 'pizza', 'great', 'fully loaded'): 5}
output quads: ['[A] crust [O] imazingly cooked well [S] great', '[A] pizza [O] fully loaded [S] great']
multi_path: ['[A] crust [O] imazingly cooked well [S] great [SSEP] [A] pizza [O] fully loaded [S] great', '[O] imazingly cooked well [A] crust [S] great [SSEP] [O] fully loaded [A] pizza [S] great', '[O] imazingly cooked well [S] great [A] crust [SSEP] [O] fully loaded [S] great [A] pizza', '[A] crust [S] great [O] imazingly cooked well [SSEP] [A] pizza [S] great [O] fully loaded', '[S] great [O] imazingly cooked well [A] crust [SSEP] [S] great [O] fully loaded [A] pizza']

task, data: aste rest15
target: [('null', 'decor', 'ok', 'distraction'), ('null', 'eggplant', 'bad', 'cold')]
output: ['[A] decor [O] distraction [S] bad']
sent: ['The', 'decor', 'however', 'seems', 'to', 'be', 'the', 'distraction', 'so', 'you', 'wo', "n't", 'notice', 'that', 'you', 'just', 'payed', '300', 'bucks', 'for', 'some', 'cold', 'eggplant', 'that', 'took', '2', 'FRICKIN', 'HOURS', 'TO', 'COME', '!', '!', '!', '!']
counter: {('null', 'decor', 'bad', 'distraction'): 5}
output quads: ['[A] decor [O] distraction [S] bad']
multi_path: ['[A] decor [O] distraction [S] bad', '[O] distraction [A] decor [S] bad', '[O] distraction [S] bad [A] decor', '[A] decor [S] bad [O] distraction', '[S] bad [O] distraction [A] decor']

task, data: aste rest15
target: [('null', 'hot dogs', 'great', 'top notch'), ('null', 'slamwich', 'great', 'amazing')]
output: ['[A] hot dogs [O] amazing [S] great', '[A] hot dogs [O] top notch [S] great']
sent: ['The', 'hot', 'dogs', 'are', 'top', 'notch', ',', 'and', 'they', "'re", 'Slamwich', 'is', 'amazing', '!']
counter: {('null', 'hot dogs', 'great', 'top notch'): 5, ('null', 'hot dogs', 'great', 'amazing'): 5}
output quads: ['[A] hot dogs [O] top notch [S] great', '[A] hot dogs [O] amazing [S] great']
multi_path: ['[A] hot dogs [O] top notch [S] great [SSEP] [A] hot dogs [O] amazing [S] great', '[O] top notch [A] hot dogs [S] great [SSEP] [O] amazing [A] hot dogs [S] great', '[O] top notch [S] great [A] hot dogs [SSEP] [O] amazing [S] great [A] hot dogs', '[A] hot dogs [S] great [O] top notch [SSEP] [A] hot dogs [S] great [O] amazing', '[S] great [O] top notch [A] hot dogs [SSEP] [S] great [O] amazing [A] hot dogs']

task, data: aste rest15
target: [('null', 'fish dishes', 'great', 'exceptional'), ('null', 'front of house staff', 'bad', 'hideous'), ('null', 'waiters', 'great', 'fantastic')]
output: ['[A] front of house staff [O] hideous [S] bad']
sent: ['Each', 'time', 'we', "'ve", 'been', ',', 'the', 'front', 'of', 'house', 'staff', '(', 'not', 'the', 'waiters', '-', 'they', "'re", 'fantastic', '-', 'but', 'the', 'people', 'who', 'greet', 'and', 'seat', 'you', ')', 'has', 'been', 'so', 'hideous', 'to', 'us', 'that', 'were', 'it', 'not', 'for', 'the', 'exceptional', 'fish', 'dishes', 'I', 'would', 'never', 'return', '.']
counter: {('null', 'front of house staff', 'bad', 'hideous'): 5, ('null', 'waiters', 'great', 'fantastic'): 2, ('null', 'people', 'great', 'hideous'): 2, ('null', 'waiters', 'great', 'exceptional'): 2, ('null', 'fish dishes', 'great', 'exceptional'): 1}
output quads: ['[A] front of house staff [O] hideous [S] bad']
multi_path: ['[A] front of house staff [O] hideous [S] bad [SSEP] [A] waiters [O] fantastic [S] great [SSEP] [A] people [O] hideous [S] great', '[O] hideous [A] front of house staff [S] bad [SSEP] [O] exceptional [A] waiters [S] great', '[O] hideous [S] bad [A] front of house staff [SSEP] [O] exceptional [S] great [A] waiters', '[A] front of house staff [S] bad [O] hideous [SSEP] [A] waiters [S] great [O] fantastic [SSEP] [A] people [S] great [O] hideous', '[S] bad [O] hideous [A] front of house staff [SSEP] [S] great [O] exceptional [A] fish dishes']

task, data: aste rest15
target: [('null', 'girl', 'bad', 'frizzy')]
output: ['[A] frizzy retro girl [O] yell [S] bad']
sent: ['The', 'frizzy', 'retro', 'girl', '(', 'with', 'winged/', 'Dame', 'Edna', 'glasses', ')', 'will', 'yell', 'at', 'you', 'if', 'you', 'try', 'to', 'order', 'a', 'drink', '.']
counter: {('null', 'frizzy retro girl', 'bad', 'yell'): 5}
output quads: ['[A] frizzy retro girl [O] yell [S] bad']
multi_path: ['[A] frizzy retro girl [O] yell [S] bad', '[O] yell [A] frizzy retro girl [S] bad', '[O] yell [S] bad [A] frizzy retro girl', '[A] frizzy retro girl [S] bad [O] yell', '[S] bad [O] yell [A] frizzy retro girl']

task, data: aste rest15
target: [('null', 'staff', 'bad', 'horrified')]
output: ['[A] staff [O] rudely [S] bad']
sent: ['I', "'d", 'be', 'horrified', 'if', 'my', 'staff', 'were', 'turning', 'away', 'customers', 'so', 'early', 'and', 'so', 'rudely', '!']
counter: {('null', 'staff', 'bad', 'rudely'): 5}
output quads: ['[A] staff [O] rudely [S] bad']
multi_path: ['[A] staff [O] rudely [S] bad', '[O] rudely [A] staff [S] bad', '[O] rudely [S] bad [A] staff', '[A] staff [S] bad [O] rudely', '[S] bad [O] rudely [A] staff']

task, data: aste rest15
target: [('null', 'service', 'bad', 'expect better')]
output: ['[A] service [O] better [S] bad']
sent: ['Considering', 'you', 'will', 'spend', 'at', 'least', '$', '60', 'a', 'head', ',', 'I', 'expect', 'better', 'service', '.']
counter: {('null', 'service', 'bad', 'better'): 5}
output quads: ['[A] service [O] better [S] bad']
multi_path: ['[A] service [O] better [S] bad', '[O] better [A] service [S] bad', '[O] better [S] bad [A] service', '[A] service [S] bad [O] better', '[S] bad [O] better [A] service']

task, data: aste rest15
target: [('null', 'frontman', 'bad', 'bad')]
output: ['[A] frontman [O] bad behavior [S] bad']
sent: ['This', 'guy', 'refused', 'to', 'seat', 'her', 'and', 'she', 'left', ',', 'followed', 'shortly', 'by', 'the', 'four', 'of', 'us', ',', 'but', 'not', 'before', 'I', 'told', 'him', 'that', 'in', 'my', '40', 'years', 'of', 'world', 'travel', ',', 'including', 'Paris', ',', 'that', 'I', 'had', 'never', 'seen', 'such', 'a', 'display', 'of', 'bad', 'behavior', 'by', 'a', 'frontman', 'in', 'a', 'restaurant', '.']
counter: {('null', 'frontman', 'bad', 'bad behavior'): 5}
output quads: ['[A] frontman [O] bad behavior [S] bad']
multi_path: ['[A] frontman [O] bad behavior [S] bad', '[O] bad behavior [A] frontman [S] bad', '[O] bad behavior [S] bad [A] frontman', '[A] frontman [S] bad [O] bad behavior', '[S] bad [O] bad behavior [A] frontman']

task, data: aste rest15
target: [('null', 'flank steak', 'great', 'good')]
output: ['[A] flank steak [O] good [S] great', '[A] swordfish [O] good [S] great']
sent: ['My', 'father', 'had', 'the', 'flank', 'steak', 'which', 'was', 'very', 'good', ',', 'and', 'my', 'mother', 'had', 'the', 'swordfish', '.']
counter: {('null', 'flank steak', 'great', 'good'): 5, ('null', 'swordfish', 'great', 'good'): 5}
output quads: ['[A] flank steak [O] good [S] great', '[A] swordfish [O] good [S] great']
multi_path: ['[A] flank steak [O] good [S] great [SSEP] [A] swordfish [O] good [S] great', '[O] good [A] flank steak [S] great [SSEP] [O] good [A] swordfish [S] great', '[O] good [S] great [A] flank steak [SSEP] [O] good [S] great [A] swordfish', '[A] flank steak [S] great [O] good [SSEP] [A] swordfish [S] great [O] good', '[S] great [O] good [A] flank steak [SSEP] [S] great [O] good [A] swordfish']

task, data: aste rest15
target: [('null', 'the four seasons restaurant', 'great', 'great')]
output: ['[A] four seasons restaurant [O] great [S] great']
sent: ['The', 'Four', 'Seasons', 'restaurant', 'is', 'a', 'great', 'experience', '.']
counter: {('null', 'four seasons restaurant', 'great', 'great'): 5}
output quads: ['[A] four seasons restaurant [O] great [S] great']
multi_path: ['[A] four seasons restaurant [O] great [S] great', '[O] great [A] four seasons restaurant [S] great', '[O] great [S] great [A] four seasons restaurant', '[A] four seasons restaurant [S] great [O] great', '[S] great [O] great [A] four seasons restaurant']

task, data: aste rest15
target: [('null', 'hot dog', 'great', 'elevated')]
output: ['[A] hot dog [O] real entree [S] great']
sent: ['Here', 'the', 'hot', 'dog', 'is', 'elevated', 'to', 'the', 'level', 'of', 'a', 'real', 'entree', 'with', 'numerous', 'variations', 'available', '.']
counter: {('null', 'hot dog', 'great', 'real entree'): 5}
output quads: ['[A] hot dog [O] real entree [S] great']
multi_path: ['[A] hot dog [O] real entree [S] great', '[O] real entree [A] hot dog [S] great', '[O] real entree [S] great [A] hot dog', '[A] hot dog [S] great [O] real entree', '[S] great [O] real entree [A] hot dog']

task, data: aste rest15
target: [('null', 'restaurant', 'bad', 'expensive')]
output: ['[A] nyc restaurant [O] disrespectful [S] bad']
sent: ['Can', '’', 't', 'believe', 'how', 'an', 'expensive', 'NYC', 'restaurant', 'can', 'be', 'so', 'disrespectful', 'to', 'its', 'clients', '.']
counter: {('null', 'nyc restaurant', 'bad', 'disrespectful'): 5}
output quads: ['[A] nyc restaurant [O] disrespectful [S] bad']
multi_path: ['[A] nyc restaurant [O] disrespectful [S] bad', '[O] disrespectful [A] nyc restaurant [S] bad', '[O] disrespectful [S] bad [A] nyc restaurant', '[A] nyc restaurant [S] bad [O] disrespectful', '[S] bad [O] disrespectful [A] nyc restaurant']

task, data: aste rest15
target: [('null', 'pasta', 'bad', 'well cooked')]
output: ['[A] pasta [O] well cooked [S] great', "[A] sauce [O] didn't have enough sauce [S] bad"]
sent: ['The', 'pasta', 'was', 'well', 'cooked', ',', 'did', "n't", 'have', 'enough', 'sauce', 'though', 'or', 'flavor', '.']
counter: {('null', 'pasta', 'great', 'well cooked'): 5, ('null', 'sauce', 'bad', "didn't have enough"): 2, ('null', 'sauce', 'bad', "didn't have enough sauce"): 3}
output quads: ['[A] pasta [O] well cooked [S] great', "[A] sauce [O] didn't have enough sauce [S] bad"]
multi_path: ["[A] pasta [O] well cooked [S] great [SSEP] [A] sauce [O] didn't have enough [S] bad", "[O] well cooked [A] pasta [S] great [SSEP] [O] didn't have enough sauce [A] sauce [S] bad", "[O] well cooked [S] great [A] pasta [SSEP] [O] didn't have enough sauce [S] bad [A] sauce", "[A] pasta [S] great [O] well cooked [SSEP] [A] sauce [S] bad [O] didn't have enough", "[S] great [O] well cooked [A] pasta [SSEP] [S] bad [O] didn't have enough sauce [A] sauce"]

task, data: aste rest15
target: [('null', 'customer service', 'bad', 'non-existent'), ('null', 'staff', 'bad', 'rude')]
output: ['[A] customer service [O] non-existent [S] bad', '[A] staff [O] horrible rude [S] bad']
sent: ['Shame', 'on', 'this', 'place', 'for', 'the', 'horrible', 'rude', 'staff', 'and', 'non-existent', 'customer', 'service', '.']
counter: {('null', 'staff', 'bad', 'horrible rude'): 5, ('null', 'customer service', 'bad', 'non-existent'): 5}
output quads: ['[A] staff [O] horrible rude [S] bad', '[A] customer service [O] non-existent [S] bad']
multi_path: ['[A] staff [O] horrible rude [S] bad [SSEP] [A] customer service [O] non-existent [S] bad', '[O] horrible rude [A] staff [S] bad [SSEP] [O] non-existent [A] customer service [S] bad', '[O] horrible rude [S] bad [A] staff [SSEP] [O] non-existent [S] bad [A] customer service', '[A] staff [S] bad [O] horrible rude [SSEP] [A] customer service [S] bad [O] non-existent', '[S] bad [O] horrible rude [A] staff [SSEP] [S] bad [O] non-existent [A] customer service']

task, data: aste rest15
target: [('null', 'space', 'great', 'good')]
output: ['[A] design of the space [O] good [S] great']
sent: ['The', 'design', 'of', 'the', 'space', 'is', 'good', '.']
counter: {('null', 'design of the space', 'great', 'good'): 5}
output quads: ['[A] design of the space [O] good [S] great']
multi_path: ['[A] design of the space [O] good [S] great', '[O] good [A] design of the space [S] great', '[O] good [S] great [A] design of the space', '[A] design of the space [S] great [O] good', '[S] great [O] good [A] design of the space']

pred labels count Counter({1: 210, 2: 78, 3: 22, 4: 8, 5: 4})
gold  [A] al di la [O] love [S] great
pred  [A] al di la [O] love [S] great

gold  [A] place [O] recommend [S] great
pred  [A] place [O] recommend [S] great

gold  [A] food [O] great [S] great
pred  [A] food [O] great [S] great

gold  [A] pastas [O] incredible [S] great [SSEP] [A] risottos [O] fantastic [S] great [SSEP] [A] sepia [O] fantastic [S] great [SSEP] [A] braised rabbit [O] amazing [S] great
pred  [A] pastas [O] incredible [S] great [SSEP] [A] risottos [O] fantastic [S] great [SSEP] [A] sepia [O] fantastic [S] great [SSEP] [A] braised rabbit [O] amazing [S] great

gold  [A] food [O] mediocre [S] bad
pred  [A] food [O] mediocre [S] bad

gold  [A] fish and chips [O] overpriced [S] bad
pred  [A] fish and chips [O] overpriced [S] bad

gold  [A] dog [O] tasty [S] great
pred  [A] dog [O] tasty [S] great

gold  [A] dog [O] organic [S] great [SSEP] [A] establishment [O] eco friendly [S] great
pred  [A] organic dog [O] awesome [S] great

gold  [A] pork souvlaki [O] best [S] great
pred  [A] pork souvlaki [O] best [S] great

gold  [A] pizza [O] yummy [S] great
pred  [A] pizza [O] super yummy [S] great

number of gold spans: 485, predicted spans: 484, hit: 335
aste rest15 {'precision': 69.21487603305785, 'recall': 69.0721649484536, 'f1': 69.14344685242519}
Total examples = 326
Total examples = 326
Ori sent size: 326
Input size: 1630 1630
Examples:
[['aste', ':', 'rest16', ':', 'serves', 'really', 'good', 'sushi', '.', '[O]', '[A]', '[S]'], ['aste', ':', 'rest16', ':', 'serves', 'really', 'good', 'sushi', '.', '[A]', '[O]', '[S]'], ['aste', ':', 'rest16', ':', 'serves', 'really', 'good', 'sushi', '.', '[O]', '[S]', '[A]'], ['aste', ':', 'rest16', ':', 'serves', 'really', 'good', 'sushi', '.', '[A]', '[S]', '[O]'], ['aste', ':', 'rest16', ':', 'serves', 'really', 'good', 'sushi', '.', '[S]', '[O]', '[A]'], ['aste', ':', 'rest16', ':', 'not', 'the', 'biggest', 'portions', 'but', 'adequate', '.', '[O]', '[A]', '[S]'], ['aste', ':', 'rest16', ':', 'not', 'the', 'biggest', 'portions', 'but', 'adequate', '.', '[A]', '[O]', '[S]'], ['aste', ':', 'rest16', ':', 'not', 'the', 'biggest', 'portions', 'but', 'adequate', '.', '[O]', '[S]', '[A]'], ['aste', ':', 'rest16', ':', 'not', 'the', 'biggest', 'portions', 'but', 'adequate', '.', '[A]', '[S]', '[O]'], ['aste', ':', 'rest16', ':', 'not', 'the', 'biggest', 'portions', 'but', 'adequate', '.', '[S]', '[O]', '[A]']]
['[O] good [A] sushi [S] great', '[A] sushi [O] good [S] great', '[O] good [S] great [A] sushi', '[A] sushi [S] great [O] good', '[S] great [O] good [A] sushi', '[O] not the biggest [A] portions [S] ok [SSEP] [O] adequate [A] portions [S] ok', '[A] portions [O] not the biggest [S] ok [SSEP] [A] portions [O] adequate [S] ok', '[O] not the biggest [S] ok [A] portions [SSEP] [O] adequate [S] ok [A] portions', '[A] portions [S] ok [O] not the biggest [SSEP] [A] portions [S] ok [O] adequate', '[S] ok [O] not the biggest [A] portions [SSEP] [S] ok [O] adequate [A] portions']
task, data: aste rest16
target: [('null', 'portions', 'ok', 'adequate'), ('null', 'portions', 'ok', 'not the biggest')]
output: ['[A] portions [O] adequate [S] great', '[A] portions [O] not the biggest [S] great']
sent: ['Not', 'the', 'biggest', 'portions', 'but', 'adequate', '.']
counter: {('null', 'portions', 'great', 'not the biggest'): 4, ('null', 'portions', 'great', 'adequate'): 4, ('null', 'portions', 'ok', 'not the biggest'): 1, ('null', 'portions', 'ok', 'adequate'): 1}
output quads: ['[A] portions [O] not the biggest [S] great', '[A] portions [O] adequate [S] great']
multi_path: ['[O] not the biggest [A] portions [S] great [SSEP] [O] adequate [A] portions [S] great', '[A] portions [O] not the biggest [S] great [SSEP] [A] portions [O] adequate [S] great', '[O] not the biggest [S] great [A] portions [SSEP] [O] adequate [S] great [A] portions', '[A] portions [S] great [O] not the biggest [SSEP] [A] portions [S] great [O] adequate', '[S] ok [O] not the biggest [A] portions [SSEP] [S] ok [O] adequate [A] portions']

task, data: aste rest16
target: [('null', 'honey walnut prawns', 'bad', 'not good'), ('null', 'lemon chicken', 'bad', 'sticky sweet')]
output: ['[A] lemon chicken [O] not good [S] bad']
sent: ['The', 'lemon', 'chicken', 'tasted', 'like', 'sticky', 'sweet', 'donuts', 'and', 'the', 'honey', 'walnut', 'prawns', ',', 'the', 'few', 'they', 'actually', 'give', 'you', '...', '..were', 'not', 'good', '.']
counter: {('null', 'lemon chicken', 'bad', 'not good'): 5}
output quads: ['[A] lemon chicken [O] not good [S] bad']
multi_path: ['[O] not good [A] lemon chicken [S] bad', '[A] lemon chicken [O] not good [S] bad', '[O] not good [S] bad [A] lemon chicken', '[A] lemon chicken [S] bad [O] not good', '[S] bad [O] not good [A] lemon chicken']

task, data: aste rest16
target: [('null', 'service', 'great', 'worst')]
output: ['[A] service [O] worst [S] bad']
sent: ['Worst', 'Service', 'I', 'Ever', 'Had']
counter: {('null', 'service', 'bad', 'worst'): 5}
output quads: ['[A] service [O] worst [S] bad']
multi_path: ['[O] worst [A] service [S] bad', '[A] service [O] worst [S] bad', '[O] worst [S] bad [A] service', '[A] service [S] bad [O] worst', '[S] bad [O] worst [A] service']

task, data: aste rest16
target: [('null', 'manager', 'bad', 'not even apologetic')]
output: ['[A] manager [O] complained [S] bad']
sent: ['I', 'complained', 'to', 'the', 'manager', ',', 'but', 'he', 'was', 'not', 'even', 'apologetic', '.']
counter: {('null', 'manager', 'bad', 'complained'): 5}
output quads: ['[A] manager [O] complained [S] bad']
multi_path: ['[O] complained [A] manager [S] bad', '[A] manager [O] complained [S] bad', '[O] complained [S] bad [A] manager', '[A] manager [S] bad [O] complained', '[S] bad [O] complained [A] manager']

task, data: aste rest16
target: [('null', 'wine list', 'great', 'wonderful')]
output: ['[A] food [O] wonderful [S] great', '[A] wine list [O] wonderful [S] great']
sent: ['The', 'wine', 'list', 'is', 'wonderful', 'and', 'the', 'food', 'reminds', 'me', 'of', 'my', 'recent', 'trip', 'to', 'Italy', '.']
counter: {('null', 'wine list', 'great', 'wonderful'): 5, ('null', 'food', 'great', 'wonderful'): 5}
output quads: ['[A] wine list [O] wonderful [S] great', '[A] food [O] wonderful [S] great']
multi_path: ['[O] wonderful [A] wine list [S] great [SSEP] [O] wonderful [A] food [S] great', '[A] wine list [O] wonderful [S] great [SSEP] [A] food [O] wonderful [S] great', '[O] wonderful [S] great [A] wine list [SSEP] [O] wonderful [S] great [A] food', '[A] wine list [S] great [O] wonderful [SSEP] [A] food [S] great [O] wonderful', '[S] great [O] wonderful [A] wine list [SSEP] [S] great [O] wonderful [A] food']

task, data: aste rest16
target: [('null', 'food', 'great', 'incredible'), ('null', 'staff', 'great', 'nice'), ('null', 'wine list', 'great', 'diverse'), ('null', 'wine list', 'great', 'extensive'), ('null', 'wine list', 'great', 'incredible')]
output: ['[A] food [O] incredible [S] great', '[A] staff [O] good [S] great', '[A] wine list [O] diverse [S] great', '[A] wine list [O] extensive [S] great', '[A] wine list [O] incredible [S] great']
sent: ['The', 'wine', 'list', 'is', 'incredible', 'and', 'extensive', 'and', 'diverse', ',', 'the', 'food', 'is', 'all', 'incredible', 'and', 'the', 'staff', 'was', 'all', 'very', 'nice', ',', 'good', 'at', 'their', 'jobs', 'and', 'cultured', '.']
counter: {('null', 'wine list', 'great', 'incredible'): 5, ('null', 'wine list', 'great', 'extensive'): 5, ('null', 'wine list', 'great', 'diverse'): 3, ('null', 'food', 'great', 'incredible'): 3, ('null', 'staff', 'great', 'good'): 5, ('null', 'food', 'great', 'diverse'): 2, ('null', 'staff', 'great', 'nice'): 2}
output quads: ['[A] wine list [O] incredible [S] great', '[A] wine list [O] extensive [S] great', '[A] wine list [O] diverse [S] great', '[A] food [O] incredible [S] great', '[A] staff [O] good [S] great']
multi_path: ['[O] incredible [A] wine list [S] great [SSEP] [O] extensive [A] wine list [S] great [SSEP] [O] diverse [A] wine list [S] great [SSEP] [O] incredible [A] food [S] great [SSEP] [O] good [A] staff [S] great', '[A] wine list [O] incredible [S] great [SSEP] [A] wine list [O] extensive [S] great [SSEP] [A] food [O] diverse [S] great [SSEP] [A] staff [O] nice [S] great [SSEP] [A] staff [O] good [S] great', '[O] incredible [S] great [A] wine list [SSEP] [O] extensive [S] great [A] wine list [SSEP] [O] diverse [S] great [A] wine list [SSEP] [O] incredible [S] great [A] food [SSEP] [O] good [S] great [A] staff', '[A] wine list [S] great [O] incredible [SSEP] [A] wine list [S] great [O] extensive [SSEP] [A] food [S] great [O] diverse [SSEP] [A] staff [S] great [O] nice [SSEP] [A] staff [S] great [O] good', '[S] great [O] incredible [A] wine list [SSEP] [S] great [O] extensive [A] wine list [SSEP] [S] great [O] diverse [A] wine list [SSEP] [S] great [O] incredible [A] food [SSEP] [S] great [O] good [A] staff']

task, data: aste rest16
target: [('null', 'food', 'great', 'finest quality'), ('null', 'place', 'great', 'relax')]
output: ['[A] food [O] finest quality [S] great']
sent: ['This', 'is', 'the', 'place', 'to', 'relax', 'and', 'enjoy', 'the', 'finest', 'quality', 'food', 'the', 'industry', 'can', 'offer', '.']
counter: {('null', 'food', 'great', 'finest quality'): 5}
output quads: ['[A] food [O] finest quality [S] great']
multi_path: ['[O] finest quality [A] food [S] great', '[A] food [O] finest quality [S] great', '[O] finest quality [S] great [A] food', '[A] food [S] great [O] finest quality', '[S] great [O] finest quality [A] food']

task, data: aste rest16
target: [('null', 'food', 'great', 'best'), ('null', 'food', 'great', 'real')]
output: ['[A] food [O] real [S] bad']
sent: ['Caution', '-', 'its', 'real', 'food', 'for', 'people', 'who', 'love', 'the', 'best', '.']
counter: {('null', 'food', 'bad', 'real'): 5}
output quads: ['[A] food [O] real [S] bad']
multi_path: ['[O] real [A] food [S] bad', '[A] food [O] real [S] bad', '[O] real [S] bad [A] food', '[A] food [S] bad [O] real', '[S] bad [O] real [A] food']

task, data: aste rest16
target: [('null', 'food', 'bad', 'okay')]
output: ['[A] food [O] okay [S] ok']
sent: ['I', 'may', 'not', 'be', 'a', 'sushi', 'guru', 'but', 'I', 'can', 'tell', 'you', 'that', 'the', 'food', 'here', 'is', 'just', 'okay', 'and', 'that', 'there', 'is', 'not', 'much', 'else', 'to', 'it', '.']
counter: {('null', 'food', 'ok', 'okay'): 5}
output quads: ['[A] food [O] okay [S] ok']
multi_path: ['[O] okay [A] food [S] ok', '[A] food [O] okay [S] ok', '[O] okay [S] ok [A] food', '[A] food [S] ok [O] okay', '[S] ok [O] okay [A] food']

task, data: aste rest16
target: [('null', 'rice', 'bad', 'too dry'), ('null', 'tuna', 'bad', "wasn't so fresh")]
output: ['[A] rice [O] dry [S] bad', "[A] tuna [O] wasn't so fresh [S] bad"]
sent: ['Rice', 'is', 'too', 'dry', ',', 'tuna', 'was', "n't", 'so', 'fresh', 'either', '.']
counter: {('null', 'rice', 'bad', 'dry'): 5, ('null', 'tuna', 'bad', "wasn't so fresh"): 5}
output quads: ['[A] rice [O] dry [S] bad', "[A] tuna [O] wasn't so fresh [S] bad"]
multi_path: ["[O] dry [A] rice [S] bad [SSEP] [O] wasn't so fresh [A] tuna [S] bad", "[A] rice [O] dry [S] bad [SSEP] [A] tuna [O] wasn't so fresh [S] bad", "[O] dry [S] bad [A] rice [SSEP] [O] wasn't so fresh [S] bad [A] tuna", "[A] rice [S] bad [O] dry [SSEP] [A] tuna [S] bad [O] wasn't so fresh", "[S] bad [O] dry [A] rice [SSEP] [S] bad [O] wasn't so fresh [A] tuna"]

task, data: aste rest16
target: [('null', 'fish', 'great', 'excellent')]
output: ['[A] quality [O] excellent [S] great', '[A] variety of the fish [O] excellent [S] great']
sent: ['I', 'have', 'eaten', 'here', 'three', 'times', 'and', 'have', 'found', 'the', 'quality', 'and', 'variety', 'of', 'the', 'fish', 'to', 'be', 'excellent', '.']
counter: {('null', 'quality', 'great', 'excellent'): 5, ('null', 'variety of the fish', 'great', 'excellent'): 5}
output quads: ['[A] quality [O] excellent [S] great', '[A] variety of the fish [O] excellent [S] great']
multi_path: ['[O] excellent [A] quality [S] great [SSEP] [O] excellent [A] variety of the fish [S] great', '[A] quality [O] excellent [S] great [SSEP] [A] variety of the fish [O] excellent [S] great', '[O] excellent [S] great [A] quality [SSEP] [O] excellent [S] great [A] variety of the fish', '[A] quality [S] great [O] excellent [SSEP] [A] variety of the fish [S] great [O] excellent', '[S] great [O] excellent [A] quality [SSEP] [S] great [O] excellent [A] variety of the fish']

task, data: aste rest16
target: [('null', 'service', 'bad', 'lacking')]
output: ['[A] service [O] lacking [S] bad', '[A] value [O] lacking [S] bad']
sent: ['However', ',', 'the', 'value', 'and', 'service', 'are', 'both', 'severely', 'lacking', '.']
counter: {('null', 'value', 'bad', 'lacking'): 5, ('null', 'service', 'bad', 'lacking'): 5}
output quads: ['[A] value [O] lacking [S] bad', '[A] service [O] lacking [S] bad']
multi_path: ['[O] lacking [A] value [S] bad [SSEP] [O] lacking [A] service [S] bad', '[A] value [O] lacking [S] bad [SSEP] [A] service [O] lacking [S] bad', '[O] lacking [S] bad [A] value [SSEP] [O] lacking [S] bad [A] service', '[A] value [S] bad [O] lacking [SSEP] [A] service [S] bad [O] lacking', '[S] bad [O] lacking [A] value [SSEP] [S] bad [O] lacking [A] service']

task, data: aste rest16
target: [('null', 'restaurant', 'great', 'love'), ('null', 'sushi', 'great', 'freshest')]
output: ['[A] sushi [O] freshest [S] great', '[A] sushi [O] love [S] great']
sent: ['Freshest', 'sushi', '–', 'I', 'love', 'this', 'restaurant', '.']
counter: {('null', 'sushi', 'great', 'freshest'): 5, ('null', 'sushi', 'great', 'love'): 3, ('null', 'restaurant', 'great', 'love'): 2}
output quads: ['[A] sushi [O] freshest [S] great', '[A] sushi [O] love [S] great']
multi_path: ['[O] freshest [A] sushi [S] great [SSEP] [O] love [A] sushi [S] great', '[A] sushi [O] freshest [S] great [SSEP] [A] sushi [O] love [S] great', '[O] freshest [S] great [A] sushi [SSEP] [O] love [S] great [A] restaurant', '[A] sushi [S] great [O] freshest [SSEP] [A] sushi [S] great [O] love', '[S] great [O] freshest [A] sushi [SSEP] [S] great [O] love [A] restaurant']

task, data: aste rest16
target: [('null', 'rolls', 'great', 'complex')]
output: ['[A] complex rolls [O] detail [S] great', '[A] miso soup [O] detail [S] great']
sent: ['They', 'pay', 'such', 'detail', 'to', 'everything', 'from', 'miso', 'soup', 'to', 'complex', 'rolls', '.']
counter: {('null', 'miso soup', 'great', 'detail'): 5, ('null', 'complex rolls', 'great', 'detail'): 3, ('null', 'rolls', 'great', 'detail'): 1, ('null', 'rolls', 'great', 'complex'): 1}
output quads: ['[A] miso soup [O] detail [S] great', '[A] complex rolls [O] detail [S] great']
multi_path: ['[O] detail [A] miso soup [S] great [SSEP] [O] detail [A] complex rolls [S] great', '[A] miso soup [O] detail [S] great [SSEP] [A] rolls [O] detail [S] great', '[O] detail [S] great [A] miso soup [SSEP] [O] detail [S] great [A] complex rolls', '[A] miso soup [S] great [O] detail [SSEP] [A] rolls [S] great [O] complex', '[S] great [O] detail [A] miso soup [SSEP] [S] great [O] detail [A] complex rolls']

task, data: aste rest16
target: [('null', 'place', 'bad', 'expensive')]
output: ['[A] place [O] expensive [S] bad', '[A] portions [O] small [S] bad']
sent: ['The', 'only', 'drawback', 'is', 'that', 'this', 'place', 'is', 'really', 'expensive', 'and', 'the', 'portions', 'are', 'on', 'the', 'small', 'side', '.']
counter: {('null', 'place', 'bad', 'expensive'): 5, ('null', 'portions', 'bad', 'small'): 5}
output quads: ['[A] place [O] expensive [S] bad', '[A] portions [O] small [S] bad']
multi_path: ['[O] expensive [A] place [S] bad [SSEP] [O] small [A] portions [S] bad', '[A] place [O] expensive [S] bad [SSEP] [A] portions [O] small [S] bad', '[O] expensive [S] bad [A] place [SSEP] [O] small [S] bad [A] portions', '[A] place [S] bad [O] expensive [SSEP] [A] portions [S] bad [O] small', '[S] bad [O] expensive [A] place [SSEP] [S] bad [O] small [A] portions']

task, data: aste rest16
target: [('null', 'food', 'great', 'fine')]
output: ['[A] food [O] fine [S] great', '[A] salsa [O] little-tastier-than-normal [S] great']
sent: ['food', 'was', 'fine', ',', 'with', 'a', 'some', 'little-tastier-than-normal', 'salsa', '.']
counter: {('null', 'food', 'great', 'fine'): 5, ('null', 'salsa', 'great', 'little-tastier-than-normal'): 5}
output quads: ['[A] food [O] fine [S] great', '[A] salsa [O] little-tastier-than-normal [S] great']
multi_path: ['[O] fine [A] food [S] great [SSEP] [O] little-tastier-than-normal [A] salsa [S] great', '[A] food [O] fine [S] great [SSEP] [A] salsa [O] little-tastier-than-normal [S] great', '[O] fine [S] great [A] food [SSEP] [O] little-tastier-than-normal [S] great [A] salsa', '[A] food [S] great [O] fine [SSEP] [A] salsa [S] great [O] little-tastier-than-normal', '[S] great [O] fine [A] food [SSEP] [S] great [O] little-tastier-than-normal [A] salsa']

task, data: aste rest16
target: [('null', 'food', 'great', 'great'), ('null', 'margaritas', 'great', 'great'), ('null', 'waitress', 'bad', 'too busy')]
output: ['[A] food [O] great [S] great', '[A] margaritas [O] great [S] great']
sent: ['the', 'food', 'was', 'great', ',', 'the', 'margaritas', 'too', 'but', 'the', 'waitress', 'was', 'too', 'busy', 'being', 'nice', 'to', 'her', 'other', 'larger', 'party', 'than', 'to', 'take', 'better', 'care', 'of', 'my', 'friend', 'and', 'me', '.']
counter: {('null', 'food', 'great', 'great'): 5, ('null', 'margaritas', 'great', 'great'): 4, ('null', 'waitress', 'bad', 'busy'): 1, ('null', 'margaritas', 'bad', 'great'): 1}
output quads: ['[A] food [O] great [S] great', '[A] margaritas [O] great [S] great']
multi_path: ['[O] great [A] food [S] great [SSEP] [O] great [A] margaritas [S] great', '[A] food [O] great [S] great [SSEP] [A] margaritas [O] great [S] great', '[O] great [S] great [A] food [SSEP] [O] great [S] great [A] margaritas', '[A] food [S] great [O] great [SSEP] [A] margaritas [S] great [O] great [SSEP] [A] waitress [S] bad [O] busy', '[S] great [O] great [A] food [SSEP] [S] bad [O] great [A] margaritas']

task, data: aste rest16
target: [('null', 'music', 'great', 'awesome'), ('null', 'staff', 'great', 'great')]
output: ['[A] music [O] awesome [S] great', '[A] staff [O] endless fun [S] great']
sent: ['Endless', 'fun', ',', 'awesome', 'music', ',', 'great', 'staff', '!', '!', '!']
counter: {('null', 'staff', 'great', 'endless fun'): 3, ('null', 'music', 'great', 'awesome'): 3, ('null', 'staff', 'great', 'great'): 2}
output quads: ['[A] staff [O] endless fun [S] great', '[A] music [O] awesome [S] great']
multi_path: ['[O] endless fun [A] staff [S] great [SSEP] [O] awesome [A] music [S] great', '[A] staff [O] great [S] great', '[O] endless fun [S] great [A] staff [SSEP] [O] awesome [S] great [A] music', '[A] staff [S] great [O] great', '[S] great [O] endless fun [A] staff [SSEP] [S] great [O] awesome [A] music']

task, data: aste rest16
target: [('null', 'draft and bottle selection', 'great', 'great')]
output: ['[A] bottle selection [O] great [S] great', '[A] draft [O] great [S] great', '[A] pizza [O] rocks [S] great']
sent: ['Great', 'draft', 'and', 'bottle', 'selection', 'and', 'the', 'pizza', 'rocks', '.']
counter: {('null', 'draft', 'great', 'great'): 5, ('null', 'bottle selection', 'great', 'great'): 5, ('null', 'pizza', 'great', 'rocks'): 5}
output quads: ['[A] draft [O] great [S] great', '[A] bottle selection [O] great [S] great', '[A] pizza [O] rocks [S] great']
multi_path: ['[O] great [A] draft [S] great [SSEP] [O] great [A] bottle selection [S] great [SSEP] [O] rocks [A] pizza [S] great', '[A] draft [O] great [S] great [SSEP] [A] bottle selection [O] great [S] great [SSEP] [A] pizza [O] rocks [S] great', '[O] great [S] great [A] draft [SSEP] [O] great [S] great [A] bottle selection [SSEP] [O] rocks [S] great [A] pizza', '[A] draft [S] great [O] great [SSEP] [A] bottle selection [S] great [O] great [SSEP] [A] pizza [S] great [O] rocks', '[S] great [O] great [A] draft [SSEP] [S] great [O] great [A] bottle selection [SSEP] [S] great [O] rocks [A] pizza']

task, data: aste rest16
target: [('null', "jukebox's", 'great', 'best')]
output: ['[A] jukebox [O] best [S] great']
sent: ['Definitely', 'has', 'one', 'of', 'the', 'best', 'jukebox', "'s", 'i', "'ve", 'seen', 'in', 'a', 'long', 'long', 'time', '.']
counter: {('null', 'jukebox', 'great', 'best'): 5}
output quads: ['[A] jukebox [O] best [S] great']
multi_path: ['[O] best [A] jukebox [S] great', '[A] jukebox [O] best [S] great', '[O] best [S] great [A] jukebox', '[A] jukebox [S] great [O] best', '[S] great [O] best [A] jukebox']

task, data: aste rest16
target: [('null', 'beer selection', 'great', 'worth staying for'), ('null', 'owners', 'great', 'great')]
output: ['[A] beer selection [O] worth staying for [S] great', '[A] owners [O] great fun [S] great']
sent: ['The', 'owners', 'are', 'great', 'fun', 'and', 'the', 'beer', 'selection', 'is', 'worth', 'staying', 'for', '.']
counter: {('null', 'owners', 'great', 'great fun'): 5, ('null', 'beer selection', 'great', 'worth staying for'): 4, ('null', 'beer selection', 'great', 'worth staying'): 1}
output quads: ['[A] owners [O] great fun [S] great', '[A] beer selection [O] worth staying for [S] great']
multi_path: ['[O] great fun [A] owners [S] great [SSEP] [O] worth staying for [A] beer selection [S] great', '[A] owners [O] great fun [S] great [SSEP] [A] beer selection [O] worth staying for [S] great', '[O] great fun [S] great [A] owners [SSEP] [O] worth staying [S] great [A] beer selection', '[A] owners [S] great [O] great fun [SSEP] [A] beer selection [S] great [O] worth staying for', '[S] great [O] great fun [A] owners [SSEP] [S] great [O] worth staying for [A] beer selection']

task, data: aste rest16
target: [('null', 'balconey', 'great', 'favorite')]
output: ['[A] smoking balconey [O] favorite [S] great']
sent: ['Not', 'alot', 'of', 'smoking', 'places', 'left', 'in', 'New', 'York', ',', 'but', 'I', 'have', 'found', 'my', 'favorite', 'smoking', 'balconey', 'in', 'the', 'city', '.']
counter: {('null', 'smoking balconey', 'great', 'favorite'): 5}
output quads: ['[A] smoking balconey [O] favorite [S] great']
multi_path: ['[O] favorite [A] smoking balconey [S] great', '[A] smoking balconey [O] favorite [S] great', '[O] favorite [S] great [A] smoking balconey', '[A] smoking balconey [S] great [O] favorite', '[S] great [O] favorite [A] smoking balconey']

task, data: aste rest16
target: [('null', 'fish', 'great', 'wide variety')]
output: ['[A] fish [O] wide [S] great']
sent: ['They', 'have', 'a', 'wide', 'variety', 'of', 'fish', 'and', 'they', 'even', 'list', 'which', 'oceans', 'they', 'come', 'from', ';', 'Atlantic', 'or', 'Pacific', '.']
counter: {('null', 'fish', 'great', 'wide'): 4, ('null', 'variety of fish', 'great', 'wide'): 1}
output quads: ['[A] fish [O] wide [S] great']
multi_path: ['[O] wide [A] fish [S] great', '[A] fish [O] wide [S] great', '[O] wide [S] great [A] fish', '[A] fish [S] great [O] wide', '[S] great [O] wide [A] variety of fish']

task, data: aste rest16
target: [('null', 'decor', 'ok', 'rustic'), ('null', 'decor', 'ok', 'traditional japanese')]
output: ['[A] decor [O] rustic [S] great', '[A] decor [O] traditional [S] great']
sent: ['The', 'decor', 'is', 'rustic', ',', 'traditional', 'Japanese', '.']
counter: {('null', 'decor', 'great', 'rustic'): 5, ('null', 'decor', 'great', 'traditional'): 5}
output quads: ['[A] decor [O] rustic [S] great', '[A] decor [O] traditional [S] great']
multi_path: ['[O] rustic [A] decor [S] great [SSEP] [O] traditional [A] decor [S] great', '[A] decor [O] rustic [S] great [SSEP] [A] decor [O] traditional [S] great', '[O] rustic [S] great [A] decor [SSEP] [O] traditional [S] great [A] decor', '[A] decor [S] great [O] rustic [SSEP] [A] decor [S] great [O] traditional', '[S] great [O] rustic [A] decor [SSEP] [S] great [O] traditional [A] decor']

task, data: aste rest16
target: [('null', 'food', 'ok', 'mediocre')]
output: ['[A] food [O] mediocre [S] bad']
sent: ['Mediocre', 'food']
counter: {('null', 'food', 'bad', 'mediocre'): 4, ('null', 'food', 'ok', 'mediocre'): 1}
output quads: ['[A] food [O] mediocre [S] bad']
multi_path: ['[O] mediocre [A] food [S] bad', '[A] food [O] mediocre [S] bad', '[O] mediocre [S] bad [A] food', '[A] food [S] bad [O] mediocre', '[S] ok [O] mediocre [A] food']

task, data: aste rest16
target: [('null', 'menu', 'ok', 'abbreviated')]
output: ['[A] outside patio area [O] abbreviated [S] ok']
sent: ['The', 'outside', 'patio', 'area', 'has', 'an', 'abbreviated', 'menu', '.']
counter: {('null', 'outside patio area', 'ok', 'abbreviated'): 5}
output quads: ['[A] outside patio area [O] abbreviated [S] ok']
multi_path: ['[O] abbreviated [A] outside patio area [S] ok', '[A] outside patio area [O] abbreviated [S] ok', '[O] abbreviated [S] ok [A] outside patio area', '[A] outside patio area [S] ok [O] abbreviated', '[S] ok [O] abbreviated [A] outside patio area']

task, data: aste rest16
target: [('null', 'food', 'bad', 'mediocre')]
output: ['[A] food [O] mediocre [S] ok']
sent: ['My', 'g/f', 'and', 'I', 'both', 'agreed', 'the', 'food', 'was', 'very', 'mediocre', 'especially', 'considering', 'the', 'price', '.']
counter: {('null', 'food', 'ok', 'mediocre'): 5}
output quads: ['[A] food [O] mediocre [S] ok']
multi_path: ['[O] mediocre [A] food [S] ok', '[A] food [O] mediocre [S] ok', '[O] mediocre [S] ok [A] food', '[A] food [S] ok [O] mediocre', '[S] ok [O] mediocre [A] food']

task, data: aste rest16
target: [('null', 'filet mignon on top of spinach and mashed potatoes', 'great', 'loved'), ('null', 'goat cheese gnocchi', 'great', 'loved'), ('null', 'pumpkin ravioli', 'great', 'loved')]
output: ['[A] goat cheese gnocchi [O] loved [S] great', '[A] pumpkin ravioli [O] loved [S] great']
sent: ['–', 'I', 'loved', 'the', 'pumpkin', 'ravioli', 'and', 'the', 'goat', 'cheese', 'gnocchi', '(', '5', 'big', 'ones', 'to', 'a', 'plate', 'instead', 'of', '20', 'or', 'so', 'little', 'gnocchis', ')', 'and', 'my', 'sister', 'loved', 'her', 'filet', 'mignon', 'on', 'top', 'of', 'spinach', 'and', 'mashed', 'potatoes', '.']
counter: {('null', 'pumpkin ravioli', 'great', 'loved'): 5, ('null', 'goat cheese gnocchi', 'great', 'loved'): 5}
output quads: ['[A] pumpkin ravioli [O] loved [S] great', '[A] goat cheese gnocchi [O] loved [S] great']
multi_path: ['[O] loved [A] pumpkin ravioli [S] great [SSEP] [O] loved [A] goat cheese gnocchi [S] great', '[A] pumpkin ravioli [O] loved [S] great [SSEP] [A] goat cheese gnocchi [O] loved [S] great', '[O] loved [S] great [A] pumpkin ravioli [SSEP] [O] loved [S] great [A] goat cheese gnocchi', '[A] pumpkin ravioli [S] great [O] loved [SSEP] [A] goat cheese gnocchi [S] great [O] loved', '[S] great [O] loved [A] pumpkin ravioli [SSEP] [S] great [O] loved [A] goat cheese gnocchi']

task, data: aste rest16
target: [('null', 'location', 'ok', 'not the greatest')]
output: ['[A] food [O] keeps me coming back [S] great']
sent: ['It', "'s", 'located', 'in', 'a', 'strip', 'mall', 'near', 'the', 'Beverly', 'Center', ',', 'not', 'the', 'greatest', 'location', ',', 'but', 'the', 'food', 'keeps', 'me', 'coming', 'back', 'for', 'more', '.']
counter: {('null', 'location', 'bad', 'not the greatest'): 2, ('null', 'food', 'great', 'keeps me coming back'): 3, ('null', 'food', 'great', 'not the greatest'): 2, ('null', 'location', 'great', 'not the greatest'): 1}
output quads: ['[A] food [O] keeps me coming back [S] great']
multi_path: ['[O] not the greatest [A] location [S] bad [SSEP] [O] keeps me coming back [A] food [S] great', '[A] food [O] not the greatest [S] great', '[O] not the greatest [S] bad [A] location [SSEP] [O] keeps me coming back [S] great [A] food', '[A] food [S] great [O] not the greatest', '[S] great [O] not the greatest [A] location [SSEP] [S] great [O] keeps me coming back [A] food']

task, data: aste rest16
target: [('null', 'service', 'great', 'great')]
output: ['[A] service [O] great [S] great', '[A] service [O] never too crowded [S] great']
sent: ['Never', 'too', 'crowded', 'and', 'always', 'great', 'service', '.']
counter: {('null', 'service', 'great', 'never too crowded'): 5, ('null', 'service', 'great', 'great'): 5}
output quads: ['[A] service [O] never too crowded [S] great', '[A] service [O] great [S] great']
multi_path: ['[O] never too crowded [A] service [S] great [SSEP] [O] great [A] service [S] great', '[A] service [O] never too crowded [S] great [SSEP] [A] service [O] great [S] great', '[O] never too crowded [S] great [A] service [SSEP] [O] great [S] great [A] service', '[A] service [S] great [O] never too crowded [SSEP] [A] service [S] great [O] great', '[S] great [O] never too crowded [A] service [SSEP] [S] great [O] great [A] service']

task, data: aste rest16
target: [('null', 'food', 'bad', 'good'), ('null', 'food', 'bad', 'too mild')]
output: ['[A] food [O] good [S] bad', '[A] food [O] mild [S] bad']
sent: ['The', 'food', 'was', 'all', 'good', 'but', 'it', 'was', 'way', 'too', 'mild', '.']
counter: {('null', 'food', 'bad', 'good'): 5, ('null', 'food', 'bad', 'mild'): 5}
output quads: ['[A] food [O] good [S] bad', '[A] food [O] mild [S] bad']
multi_path: ['[O] good [A] food [S] bad [SSEP] [O] mild [A] food [S] bad', '[A] food [O] good [S] bad [SSEP] [A] food [O] mild [S] bad', '[O] good [S] bad [A] food [SSEP] [O] mild [S] bad [A] food', '[A] food [S] bad [O] good [SSEP] [A] food [S] bad [O] mild', '[S] bad [O] good [A] food [SSEP] [S] bad [O] mild [A] food']

task, data: aste rest16
target: [('null', 'environment', 'great', 'cosy'), ('null', 'environment', 'great', 'warm')]
output: ['[A] environment [O] cosy [S] great', '[A] environment [O] love [S] great', '[A] environment [O] warm [S] great']
sent: ['I', 'love', 'the', 'warm', '&', 'cosy', 'environment', '.']
counter: {('null', 'environment', 'great', 'love'): 5, ('null', 'environment', 'great', 'warm'): 5, ('null', 'environment', 'great', 'cosy'): 5}
output quads: ['[A] environment [O] love [S] great', '[A] environment [O] warm [S] great', '[A] environment [O] cosy [S] great']
multi_path: ['[O] love [A] environment [S] great [SSEP] [O] warm [A] environment [S] great [SSEP] [O] cosy [A] environment [S] great', '[A] environment [O] love [S] great [SSEP] [A] environment [O] warm [S] great [SSEP] [A] environment [O] cosy [S] great', '[O] love [S] great [A] environment [SSEP] [O] warm [S] great [A] environment [SSEP] [O] cosy [S] great [A] environment', '[A] environment [S] great [O] love [SSEP] [A] environment [S] great [O] warm [SSEP] [A] environment [S] great [O] cosy', '[S] great [O] love [A] environment [SSEP] [S] great [O] warm [A] environment [SSEP] [S] great [O] cosy [A] environment']

task, data: aste rest16
target: [('null', 'customer service', 'great', 'great'), ('null', 'decor', 'great', 'great'), ('null', 'manager', 'great', 'friendly'), ('null', 'restaurant', 'great', 'best')]
output: ['[A] customer service [O] great [S] great', '[A] decor [O] great [S] great', '[A] manager [O] friendly [S] great']
sent: ['best', 'restaurant', 'in', 'the', 'world', ',', 'great', 'decor', ',', 'great', 'customer', 'service', ',', 'friendly', 'manager']
counter: {('null', 'decor', 'great', 'great'): 5, ('null', 'customer service', 'great', 'great'): 5, ('null', 'manager', 'great', 'friendly'): 5}
output quads: ['[A] decor [O] great [S] great', '[A] customer service [O] great [S] great', '[A] manager [O] friendly [S] great']
multi_path: ['[O] great [A] decor [S] great [SSEP] [O] great [A] customer service [S] great [SSEP] [O] friendly [A] manager [S] great', '[A] decor [O] great [S] great [SSEP] [A] customer service [O] great [S] great [SSEP] [A] manager [O] friendly [S] great', '[O] great [S] great [A] decor [SSEP] [O] great [S] great [A] customer service [SSEP] [O] friendly [S] great [A] manager', '[A] decor [S] great [O] great [SSEP] [A] customer service [S] great [O] great [SSEP] [A] manager [S] great [O] friendly', '[S] great [O] great [A] decor [SSEP] [S] great [O] great [A] customer service [SSEP] [S] great [O] friendly [A] manager']

task, data: aste rest16
target: [('null', 'mexican spot', 'great', 'great')]
output: ['[A] financial district mexican spot [O] great [S] great']
sent: ['–', 'Great', 'financial', 'district', 'mexican', 'spot', '.']
counter: {('null', 'financial district mexican spot', 'great', 'great'): 5}
output quads: ['[A] financial district mexican spot [O] great [S] great']
multi_path: ['[O] great [A] financial district mexican spot [S] great', '[A] financial district mexican spot [O] great [S] great', '[O] great [S] great [A] financial district mexican spot', '[A] financial district mexican spot [S] great [O] great', '[S] great [O] great [A] financial district mexican spot']

task, data: aste rest16
target: [('null', 'service', 'great', 'quick')]
output: ['[A] seating [O] good [S] great', '[A] service [O] quick [S] great']
sent: ['Always', 'busy', ',', 'but', 'they', 'are', 'good', 'at', 'seating', 'you', 'promptly', 'and', 'have', 'quick', 'service', '.']
counter: {('null', 'seating', 'great', 'good'): 3, ('null', 'service', 'great', 'quick'): 5}
output quads: ['[A] seating [O] good [S] great', '[A] service [O] quick [S] great']
multi_path: ['[O] good [A] seating [S] great [SSEP] [O] quick [A] service [S] great', '[A] service [O] quick [S] great', '[O] good [S] great [A] seating [SSEP] [O] quick [S] great [A] service', '[A] service [S] great [O] quick', '[S] great [O] good [A] seating [SSEP] [S] great [O] quick [A] service']

task, data: aste rest16
target: [('null', 'burritos', 'great', 'good'), ('null', 'enchiladas', 'great', 'good'), ('null', 'place', 'great', 'love'), ('null', 'taco salads', 'great', 'good')]
output: ['[A] burritos [O] love [S] great', '[A] enchiladas [O] love [S] great', '[A] taco salads [O] good [S] great']
sent: ['Everything', 'I', "'ve", 'had', 'here', 'is', 'good', ',', 'taco', 'salads', ',', 'burritos', ',', 'enchiladas', 'i', 'love', 'this', 'place', '.']
counter: {('null', 'taco salads', 'great', 'good'): 5, ('null', 'burritos', 'great', 'love'): 5, ('null', 'enchiladas', 'great', 'love'): 5}
output quads: ['[A] taco salads [O] good [S] great', '[A] burritos [O] love [S] great', '[A] enchiladas [O] love [S] great']
multi_path: ['[O] good [A] taco salads [S] great [SSEP] [O] love [A] burritos [S] great [SSEP] [O] love [A] enchiladas [S] great', '[A] taco salads [O] good [S] great [SSEP] [A] burritos [O] love [S] great [SSEP] [A] enchiladas [O] love [S] great', '[O] good [S] great [A] taco salads [SSEP] [O] love [S] great [A] burritos [SSEP] [O] love [S] great [A] enchiladas', '[A] taco salads [S] great [O] good [SSEP] [A] burritos [S] great [O] love [SSEP] [A] enchiladas [S] great [O] love', '[S] great [O] good [A] taco salads [SSEP] [S] great [O] love [A] burritos [SSEP] [S] great [O] love [A] enchiladas']

task, data: aste rest16
target: [('null', 'food', 'great', 'incredible')]
output: ['[A] food [O] incredible [S] great', '[A] quality [O] inconsistent [S] bad']
sent: ['–', 'The', 'food', 'is', 'here', 'is', 'incredible', ',', 'though', 'the', 'quality', 'is', 'inconsistent', 'during', 'lunch', '.']
counter: {('null', 'food', 'great', 'incredible'): 5, ('null', 'quality', 'bad', 'inconsistent'): 5}
output quads: ['[A] food [O] incredible [S] great', '[A] quality [O] inconsistent [S] bad']
multi_path: ['[O] incredible [A] food [S] great [SSEP] [O] inconsistent [A] quality [S] bad', '[A] food [O] incredible [S] great [SSEP] [A] quality [O] inconsistent [S] bad', '[O] incredible [S] great [A] food [SSEP] [O] inconsistent [S] bad [A] quality', '[A] food [S] great [O] incredible [SSEP] [A] quality [S] bad [O] inconsistent', '[S] great [O] incredible [A] food [SSEP] [S] bad [O] inconsistent [A] quality']

task, data: aste rest16
target: [('null', 'labne ( yogurt dip )', 'great', 'side of potatoes'), ('null', 'side of potatoes', 'great', 'die for')]
output: ['[A] labne ( yogurt dip ) [O] die for [S] great', '[A] side of potatoes [O] die for [S] great']
sent: ['The', 'side', 'of', 'potatoes', 'is', 'to', 'die', 'for', ',', 'as', 'is', 'the', 'labne', '(', 'yogurt', 'dip', ')', '.']
counter: {('null', 'side of potatoes', 'great', 'die for'): 5, ('null', 'labne ( yogurt dip )', 'great', 'die for'): 5}
output quads: ['[A] side of potatoes [O] die for [S] great', '[A] labne ( yogurt dip ) [O] die for [S] great']
multi_path: ['[O] die for [A] side of potatoes [S] great [SSEP] [O] die for [A] labne ( yogurt dip ) [S] great', '[A] side of potatoes [O] die for [S] great [SSEP] [A] labne ( yogurt dip ) [O] die for [S] great', '[O] die for [S] great [A] side of potatoes [SSEP] [O] die for [S] great [A] labne ( yogurt dip )', '[A] side of potatoes [S] great [O] die for [SSEP] [A] labne ( yogurt dip ) [S] great [O] die for', '[S] great [O] die for [A] side of potatoes [SSEP] [S] great [O] die for [A] labne ( yogurt dip )']

task, data: aste rest16
target: [('null', 'fried brie with fruit', 'great', 'good'), ('null', 'goat cheese pizza', 'great', 'good'), ('null', 'grilled asparagus', 'great', 'good'), ('null', 'shoe string onions', 'great', 'good')]
output: ['[A] fried brie with fruit [O] good [S] great', '[A] goat cheese pizza [O] good [S] great', '[A] grilled asparagus [O] good [S] great', '[A] shoe string onions [O] good [S] great', '[A] small plates [O] good [S] great']
sent: ['We', 'ordered', 'a', 'selection', 'of', 'the', 'small', 'plates', ',', 'and', 'the', 'shoe', 'string', 'onions', ',', 'goat', 'cheese', 'pizza', ',', 'grilled', 'asparagus', 'and', 'fried', 'brie', 'with', 'fruit', 'were', 'all', 'very', 'good', '.']
counter: {('null', 'small plates', 'great', 'good'): 5, ('null', 'shoe string onions', 'great', 'good'): 5, ('null', 'goat cheese pizza', 'great', 'good'): 5, ('null', 'grilled asparagus', 'great', 'good'): 5, ('null', 'fried brie with fruit', 'great', 'good'): 5}
output quads: ['[A] small plates [O] good [S] great', '[A] shoe string onions [O] good [S] great', '[A] goat cheese pizza [O] good [S] great', '[A] grilled asparagus [O] good [S] great', '[A] fried brie with fruit [O] good [S] great']
multi_path: ['[O] good [A] small plates [S] great [SSEP] [O] good [A] shoe string onions [S] great [SSEP] [O] good [A] goat cheese pizza [S] great [SSEP] [O] good [A] grilled asparagus [S] great [SSEP] [O] good [A] fried brie with fruit [S] great', '[A] small plates [O] good [S] great [SSEP] [A] shoe string onions [O] good [S] great [SSEP] [A] goat cheese pizza [O] good [S] great [SSEP] [A] grilled asparagus [O] good [S] great [SSEP] [A] fried brie with fruit [O] good [S] great', '[O] good [S] great [A] small plates [SSEP] [O] good [S] great [A] shoe string onions [SSEP] [O] good [S] great [A] goat cheese pizza [SSEP] [O] good [S] great [A] grilled asparagus [SSEP] [O] good [S] great [A] fried brie with fruit', '[A] small plates [S] great [O] good [SSEP] [A] shoe string onions [S] great [O] good [SSEP] [A] goat cheese pizza [S] great [O] good [SSEP] [A] grilled asparagus [S] great [O] good [SSEP] [A] fried brie with fruit [S] great [O] good', '[S] great [O] good [A] small plates [SSEP] [S] great [O] good [A] shoe string onions [SSEP] [S] great [O] good [A] goat cheese pizza [SSEP] [S] great [O] good [A] grilled asparagus [SSEP] [S] great [O] good [A] fried brie with fruit']

task, data: aste rest16
target: [('null', 'service', 'bad', 'worst')]
output: ['[A] food [O] worst [S] bad']
sent: ['The', 'food', 'is', 'not', 'what', 'it', 'once', 'was', '(', 'potions', 'have', 'seriously', 'seen', 'downsizing', ')', 'prices', 'have', 'gone', 'up', ',', 'and', 'the', 'service', 'is', 'the', 'worst', 'I', 'have', 'experienced', 'anywhere', '(', 'including', 'mainland', 'Europe', ')', '.']
counter: {('null', 'food', 'bad', 'worst'): 5}
output quads: ['[A] food [O] worst [S] bad']
multi_path: ['[O] worst [A] food [S] bad', '[A] food [O] worst [S] bad', '[O] worst [S] bad [A] food', '[A] food [S] bad [O] worst', '[S] bad [O] worst [A] food']

task, data: aste rest16
target: [('null', 'coffee', 'great', 'best'), ('null', 'pizza', 'great', 'best'), ('null', 'place', 'great', 'cool')]
output: ['[A] coffee [O] best [S] great', '[A] pizza [O] best [S] great', '[A] place [O] cool [S] great', '[A] place [O] open [S] great']
sent: ['Open', '&', 'Cool', 'Place', 'with', 'the', 'Best', 'Pizza', 'and', 'Coffee']
counter: {('null', 'place', 'great', 'open'): 5, ('null', 'place', 'great', 'cool'): 5, ('null', 'pizza', 'great', 'best'): 5, ('null', 'coffee', 'great', 'best'): 5}
output quads: ['[A] place [O] open [S] great', '[A] place [O] cool [S] great', '[A] pizza [O] best [S] great', '[A] coffee [O] best [S] great']
multi_path: ['[O] open [A] place [S] great [SSEP] [O] cool [A] place [S] great [SSEP] [O] best [A] pizza [S] great [SSEP] [O] best [A] coffee [S] great', '[A] place [O] open [S] great [SSEP] [A] place [O] cool [S] great [SSEP] [A] pizza [O] best [S] great [SSEP] [A] coffee [O] best [S] great', '[O] open [S] great [A] place [SSEP] [O] cool [S] great [A] place [SSEP] [O] best [S] great [A] pizza [SSEP] [O] best [S] great [A] coffee', '[A] place [S] great [O] open [SSEP] [A] place [S] great [O] cool [SSEP] [A] pizza [S] great [O] best [SSEP] [A] coffee [S] great [O] best', '[S] great [O] open [A] place [SSEP] [S] great [O] cool [A] place [SSEP] [S] great [O] best [A] pizza [SSEP] [S] great [O] best [A] coffee']

task, data: aste rest16
target: [('null', 'servers behind the counter', 'great', 'friendly'), ('null', 'servers behind the counter', 'great', 'helpful')]
output: ['[A] servers [O] friendly [S] great', '[A] servers [O] helpful [S] great']
sent: ['The', 'servers', 'behind', 'the', 'counter', 'are', 'always', 'friendly', 'and', 'helpful', '.']
counter: {('null', 'servers', 'great', 'friendly'): 5, ('null', 'servers', 'great', 'helpful'): 5}
output quads: ['[A] servers [O] friendly [S] great', '[A] servers [O] helpful [S] great']
multi_path: ['[O] friendly [A] servers [S] great [SSEP] [O] helpful [A] servers [S] great', '[A] servers [O] friendly [S] great [SSEP] [A] servers [O] helpful [S] great', '[O] friendly [S] great [A] servers [SSEP] [O] helpful [S] great [A] servers', '[A] servers [S] great [O] friendly [SSEP] [A] servers [S] great [O] helpful', '[S] great [O] friendly [A] servers [SSEP] [S] great [O] helpful [A] servers']

task, data: aste rest16
target: [('null', 'food', 'great', 'enjoy'), ('null', 'place', 'great', 'great')]
output: ['[A] place [O] great [S] great']
sent: ['It', "'s", 'a', 'great', 'place', 'to', 'enjoy', 'food', 'and', 'meet', 'friends', '.']
counter: {('null', 'place', 'great', 'great'): 5}
output quads: ['[A] place [O] great [S] great']
multi_path: ['[O] great [A] place [S] great', '[A] place [O] great [S] great', '[O] great [S] great [A] place', '[A] place [S] great [O] great', '[S] great [O] great [A] place']

task, data: aste rest16
target: [('null', 'eggs', 'great', 'delicious'), ('null', 'fresh fruit', 'great', 'delicious'), ('null', 'pancakes', 'great', 'delicious'), ('null', 'potatoes', 'great', 'delicious'), ('null', 'yogurt', 'great', 'delicious')]
output: ['[A] eggs [O] delicious [S] great', '[A] fruit [O] fresh [S] great', '[A] pancakes [O] delicious [S] great', '[A] potatoes [O] delicious [S] great', '[A] yogurt [O] delicious [S] great']
sent: ['–', 'Eggs', ',', 'pancakes', ',', 'potatoes', ',', 'fresh', 'fruit', 'and', 'yogurt', '--', 'everything', 'they', 'serve', 'is', 'delicious', '.']
counter: {('null', 'eggs', 'great', 'delicious'): 5, ('null', 'pancakes', 'great', 'delicious'): 5, ('null', 'potatoes', 'great', 'delicious'): 3, ('null', 'fruit', 'great', 'fresh'): 5, ('null', 'yogurt', 'great', 'delicious'): 5, ('null', 'potatoes', 'great', 'fresh'): 2}
output quads: ['[A] eggs [O] delicious [S] great', '[A] pancakes [O] delicious [S] great', '[A] potatoes [O] delicious [S] great', '[A] fruit [O] fresh [S] great', '[A] yogurt [O] delicious [S] great']
multi_path: ['[O] delicious [A] eggs [S] great [SSEP] [O] delicious [A] pancakes [S] great [SSEP] [O] delicious [A] potatoes [S] great [SSEP] [O] fresh [A] fruit [S] great [SSEP] [O] delicious [A] yogurt [S] great', '[A] eggs [O] delicious [S] great [SSEP] [A] pancakes [O] delicious [S] great [SSEP] [A] potatoes [O] fresh [S] great [SSEP] [A] fruit [O] fresh [S] great [SSEP] [A] yogurt [O] delicious [S] great', '[O] delicious [S] great [A] eggs [SSEP] [O] delicious [S] great [A] pancakes [SSEP] [O] delicious [S] great [A] potatoes [SSEP] [O] fresh [S] great [A] fruit [SSEP] [O] delicious [S] great [A] yogurt', '[A] eggs [S] great [O] delicious [SSEP] [A] pancakes [S] great [O] delicious [SSEP] [A] potatoes [S] great [O] fresh [SSEP] [A] fruit [S] great [O] fresh [SSEP] [A] yogurt [S] great [O] delicious', '[S] great [O] delicious [A] eggs [SSEP] [S] great [O] delicious [A] pancakes [SSEP] [S] great [O] delicious [A] potatoes [SSEP] [S] great [O] fresh [A] fruit [SSEP] [S] great [O] delicious [A] yogurt']

task, data: aste rest16
target: [('null', 'fish on the omikase platter', 'great', 'decadent'), ('null', 'fish on the omikase platter', 'great', 'perfect'), ('null', 'meal', 'great', 'great')]
output: ['[A] meal [O] great [S] great']
sent: ['great', 'meal', '–', 'the', 'fish', 'on', 'the', 'omikase', 'platter', 'was', 'absolutely', 'decadent', '--', 'there', 'was', 'none', 'of', 'the', 'stringiness', 'that', 'sometimes', 'accompanies', 'fair', 'sushi', '--', 'this', 'fish', 'was', 'perfect', '!', '!', '!', '!']
counter: {('null', 'meal', 'great', 'great'): 5}
output quads: ['[A] meal [O] great [S] great']
multi_path: ['[O] great [A] meal [S] great', '[A] meal [O] great [S] great', '[O] great [S] great [A] meal', '[A] meal [S] great [O] great', '[S] great [O] great [A] meal']

task, data: aste rest16
target: [('null', 'waitstaff', 'great', 'accomodating')]
output: ['[A] waitstaff [O] unbelievably accomodating [S] great']
sent: ['plus', ',', 'i', 'am', 'allergic', 'to', 'rice', ',', 'and', 'the', 'waitstaff', 'was', 'unbelievably', 'accomodating', '--', 'did', "n't", 'even', 'bat', 'an', 'eye', '!']
counter: {('null', 'waitstaff', 'great', 'unbelievably accomodating'): 5}
output quads: ['[A] waitstaff [O] unbelievably accomodating [S] great']
multi_path: ['[O] unbelievably accomodating [A] waitstaff [S] great', '[A] waitstaff [O] unbelievably accomodating [S] great', '[O] unbelievably accomodating [S] great [A] waitstaff', '[A] waitstaff [S] great [O] unbelievably accomodating', '[S] great [O] unbelievably accomodating [A] waitstaff']

task, data: aste rest16
target: [('null', 'sake', 'great', 'perfect')]
output: ['[A] waiter [O] perfect [S] great']
sent: ['and', 'the', 'waiter', 'suggested', 'a', 'perfect', 'sake', '!', '!']
counter: {('null', 'waiter', 'great', 'perfect'): 4, ('null', 'sake', 'great', 'perfect'): 1}
output quads: ['[A] waiter [O] perfect [S] great']
multi_path: ['[O] perfect [A] waiter [S] great', '[A] waiter [O] perfect [S] great', '[O] perfect [S] great [A] waiter', '[A] waiter [S] great [O] perfect', '[S] great [O] perfect [A] sake']

task, data: aste rest16
target: [('null', 'rolls', 'great', 'tasty')]
output: ['[A] nigiri [O] melt in your mouth [S] great', '[A] sashmi [O] tasty [S] great']
sent: ['Melt', 'in', 'your', 'mouth', 'nigiri', 'and', 'sashmi', ',', 'and', 'very', 'tasty', 'rolls', 'too', '.']
counter: {('null', 'nigiri', 'great', 'melt in your mouth'): 5, ('null', 'sashmi', 'great', 'tasty'): 5}
output quads: ['[A] nigiri [O] melt in your mouth [S] great', '[A] sashmi [O] tasty [S] great']
multi_path: ['[O] melt in your mouth [A] nigiri [S] great [SSEP] [O] tasty [A] sashmi [S] great', '[A] nigiri [O] melt in your mouth [S] great [SSEP] [A] sashmi [O] tasty [S] great', '[O] melt in your mouth [S] great [A] nigiri [SSEP] [O] tasty [S] great [A] sashmi', '[A] nigiri [S] great [O] melt in your mouth [SSEP] [A] sashmi [S] great [O] tasty', '[S] great [O] melt in your mouth [A] nigiri [SSEP] [S] great [O] tasty [A] sashmi']

task, data: aste rest16
target: [('null', 'sushi', 'bad', 'good')]
output: ['[A] sushi [O] good [S] bad', '[A] sushi [O] high [S] bad']
sent: ['Good', 'Sushi', ',', 'High', 'Price']
counter: {('null', 'sushi', 'bad', 'good'): 5, ('null', 'sushi', 'bad', 'high'): 5}
output quads: ['[A] sushi [O] good [S] bad', '[A] sushi [O] high [S] bad']
multi_path: ['[O] good [A] sushi [S] bad [SSEP] [O] high [A] sushi [S] bad', '[A] sushi [O] good [S] bad [SSEP] [A] sushi [O] high [S] bad', '[O] good [S] bad [A] sushi [SSEP] [O] high [S] bad [A] sushi', '[A] sushi [S] bad [O] good [SSEP] [A] sushi [S] bad [O] high', '[S] bad [O] good [A] sushi [SSEP] [S] bad [O] high [A] sushi']

task, data: aste rest16
target: [('null', 'food', 'great', 'freshly prepared')]
output: ['[A] brunch [O] die for [S] great', '[A] egg white omelet [O] specialty [S] great', '[A] food [O] freshly prepared [S] great']
sent: ['Brunch', 'at', 'Murphy', "'s", 'is', 'to', 'die', 'for', ',', 'my', 'specialty', '...', 'egg', 'white', 'omelet', ',', 'the', 'food', 'is', 'always', 'freshly', 'prepared', '.']
counter: {('null', 'brunch', 'great', 'die for'): 5, ('null', 'egg white omelet', 'great', 'specialty'): 5, ('null', 'food', 'great', 'freshly prepared'): 5}
output quads: ['[A] brunch [O] die for [S] great', '[A] egg white omelet [O] specialty [S] great', '[A] food [O] freshly prepared [S] great']
multi_path: ['[O] die for [A] brunch [S] great [SSEP] [O] specialty [A] egg white omelet [S] great [SSEP] [O] freshly prepared [A] food [S] great', '[A] brunch [O] die for [S] great [SSEP] [A] egg white omelet [O] specialty [S] great [SSEP] [A] food [O] freshly prepared [S] great', '[O] die for [S] great [A] brunch [SSEP] [O] specialty [S] great [A] egg white omelet [SSEP] [O] freshly prepared [S] great [A] food', '[A] brunch [S] great [O] die for [SSEP] [A] egg white omelet [S] great [O] specialty [SSEP] [A] food [S] great [O] freshly prepared', '[S] great [O] die for [A] brunch [SSEP] [S] great [O] specialty [A] egg white omelet [SSEP] [S] great [O] freshly prepared [A] food']

task, data: aste rest16
target: [('null', 'ambiance', 'great', "won't forget"), ('null', 'wine list', 'great', 'extensive')]
output: ['[A] ambiance [O] extensive [S] great', '[A] wine list [O] extensive [S] great']
sent: ['The', 'restaurant', 'offers', 'an', 'extensive', 'wine', 'list', 'and', 'an', 'ambiance', 'you', 'wo', "n't", 'forget', '!']
counter: {('null', 'wine list', 'great', 'extensive'): 5, ('null', 'ambiance', 'great', 'extensive'): 5}
output quads: ['[A] wine list [O] extensive [S] great', '[A] ambiance [O] extensive [S] great']
multi_path: ['[O] extensive [A] wine list [S] great [SSEP] [O] extensive [A] ambiance [S] great', '[A] wine list [O] extensive [S] great [SSEP] [A] ambiance [O] extensive [S] great', '[O] extensive [S] great [A] wine list [SSEP] [O] extensive [S] great [A] ambiance', '[A] wine list [S] great [O] extensive [SSEP] [A] ambiance [S] great [O] extensive', '[S] great [O] extensive [A] wine list [SSEP] [S] great [O] extensive [A] ambiance']

task, data: aste rest16
target: [('null', 'mexican place', 'great', 'best')]
output: ['[A] lunch [O] best [S] great']
sent: ['–', 'Best', 'Mexican', 'place', 'for', 'lunch', 'in', 'the', 'financial', 'district', '.']
counter: {('null', 'lunch', 'great', 'best'): 5}
output quads: ['[A] lunch [O] best [S] great']
multi_path: ['[O] best [A] lunch [S] great', '[A] lunch [O] best [S] great', '[O] best [S] great [A] lunch', '[A] lunch [S] great [O] best', '[S] great [O] best [A] lunch']

task, data: aste rest16
target: [('null', 'space', 'bad', 'limited')]
output: ['[A] food [O] made up for it [S] great', '[A] space [O] limited [S] bad']
sent: ['Space', 'was', 'limited', ',', 'but', 'the', 'food', 'made', 'up', 'for', 'it', '.']
counter: {('null', 'space', 'bad', 'limited'): 5, ('null', 'food', 'great', 'made up for it'): 5}
output quads: ['[A] space [O] limited [S] bad', '[A] food [O] made up for it [S] great']
multi_path: ['[O] limited [A] space [S] bad [SSEP] [O] made up for it [A] food [S] great', '[A] space [O] limited [S] bad [SSEP] [A] food [O] made up for it [S] great', '[O] limited [S] bad [A] space [SSEP] [O] made up for it [S] great [A] food', '[A] space [S] bad [O] limited [SSEP] [A] food [S] great [O] made up for it', '[S] bad [O] limited [A] space [SSEP] [S] great [O] made up for it [A] food']

task, data: aste rest16
target: [('null', 'caesar salad', 'bad', "couldn't eat")]
output: ['[A] caesar salad [O] much [S] bad']
sent: ['The', 'Caesar', 'salad', 'I', 'ordered', 'had', 'so', 'much', 'lemon', 'I', 'could', "n't", 'eat', 'it', '.']
counter: {('null', 'caesar salad', 'bad', 'much'): 5}
output quads: ['[A] caesar salad [O] much [S] bad']
multi_path: ['[O] much [A] caesar salad [S] bad', '[A] caesar salad [O] much [S] bad', '[O] much [S] bad [A] caesar salad', '[A] caesar salad [S] bad [O] much', '[S] bad [O] much [A] caesar salad']

task, data: aste rest16
target: [('null', 'service', 'great', 'quick')]
output: ['[A] service [O] quick [S] great']
sent: ['it', 'gets', 'really', 'busy', ',', 'so', 'get', 'there', 'on', 'the', 'early', 'side', 'so', 'you', 'can', 'grab', 'a', 'seat', ',', 'if', 'you', 'do', 'have', 'to', 'wait', ',', 'its', 'not', 'bad', 'because', 'the', 'service', 'is', 'quick', '!']
counter: {('null', 'null', 'great', 'busy'): 3, ('null', 'service', 'great', 'quick'): 5}
output quads: ['[A] service [O] quick [S] great']
multi_path: ['[O] busy [A] it [S] great [SSEP] [O] quick [A] service [S] great', '[A] service [O] quick [S] great', '[O] busy [S] great [A] it [SSEP] [O] quick [S] great [A] service', '[A] service [S] great [O] quick', '[S] great [O] busy [A] it [SSEP] [S] great [O] quick [A] service']

task, data: aste rest16
target: [('null', 'meal', 'great', 'bad')]
output: ['[A] meal [O] never had one bad [S] great']
sent: ['–', 'i', 'have', 'been', 'eating', 'at', 'this', 'place', 'for', 'over', '8', 'years', 'now', 'and', 'i', 'have', 'never', 'had', 'one', 'bad', 'meal', '.']
counter: {('null', 'meal', 'great', 'never had one bad'): 5}
output quads: ['[A] meal [O] never had one bad [S] great']
multi_path: ['[O] never had one bad [A] meal [S] great', '[A] meal [O] never had one bad [S] great', '[O] never had one bad [S] great [A] meal', '[A] meal [S] great [O] never had one bad', '[S] great [O] never had one bad [A] meal']

task, data: aste rest16
target: [('null', 'food', 'great', 'plenty of')]
output: ['[A] food [O] plenty [S] great']
sent: ['plenty', 'of', 'food', ',', 'trust', 'me', '.']
counter: {('null', 'food', 'great', 'plenty'): 5}
output quads: ['[A] food [O] plenty [S] great']
multi_path: ['[O] plenty [A] food [S] great', '[A] food [O] plenty [S] great', '[O] plenty [S] great [A] food', '[A] food [S] great [O] plenty', '[S] great [O] plenty [A] food']

task, data: aste rest16
target: [('null', 'selection', 'great', 'innovative'), ('null', 'sushi', 'great', 'nice'), ('null', 'sushi', 'great', 'traditional')]
output: ['[A] balance of traditional sushi [O] nice [S] great', '[A] selection [O] innovative [S] great']
sent: ['Not', 'only', 'can', 'the', 'selection', 'be', 'innovative', ',', 'but', 'there', "'s", 'a', 'nice', 'balance', 'of', 'traditional', 'sushi', 'as', 'well', '.']
counter: {('null', 'selection', 'great', 'innovative'): 5, ('null', 'balance of traditional sushi', 'great', 'nice'): 5}
output quads: ['[A] selection [O] innovative [S] great', '[A] balance of traditional sushi [O] nice [S] great']
multi_path: ['[O] innovative [A] selection [S] great [SSEP] [O] nice [A] balance of traditional sushi [S] great', '[A] selection [O] innovative [S] great [SSEP] [A] balance of traditional sushi [O] nice [S] great', '[O] innovative [S] great [A] selection [SSEP] [O] nice [S] great [A] balance of traditional sushi', '[A] selection [S] great [O] innovative [SSEP] [A] balance of traditional sushi [S] great [O] nice', '[S] great [O] innovative [A] selection [SSEP] [S] great [O] nice [A] balance of traditional sushi']

task, data: aste rest16
target: [('null', 'brunch food', 'ok', 'average')]
output: ['[A] brunch food [O] average [S] great']
sent: ['If', 'I', 'want', 'to', 'stand', 'in', 'line', 'on', 'Sunday', 'for', 'an', 'hour', 'to', 'get', 'average', 'brunch', 'food', ',', 'then', 'I', 'would', 'put', 'Murphy', "'s", 'at', 'the', 'top', 'of', 'the', 'list', '.']
counter: {('null', 'brunch food', 'great', 'average'): 5}
output quads: ['[A] brunch food [O] average [S] great']
multi_path: ['[O] average [A] brunch food [S] great', '[A] brunch food [O] average [S] great', '[O] average [S] great [A] brunch food', '[A] brunch food [S] great [O] average', '[S] great [O] average [A] brunch food']

task, data: aste rest16
target: [('null', 'regular menu', 'ok', 'above average'), ('null', 'regular menu', 'ok', 'not worth the snotty attitude')]
output: ['[A] regular menu [O] above average [S] bad', '[A] regular menu [O] not worth [S] bad']
sent: ['The', 'regular', 'menu', 'here', 'is', 'slightly', 'above', 'average', 'that', 'is', 'not', 'worth', 'the', 'snotty', 'attitude', 'that', 'you', 'receive', '.']
counter: {('null', 'regular menu', 'bad', 'above average'): 5, ('null', 'regular menu', 'bad', 'not worth'): 4, ('null', 'regular menu', 'bad', 'not worth the snotty attitude'): 1}
output quads: ['[A] regular menu [O] above average [S] bad', '[A] regular menu [O] not worth [S] bad']
multi_path: ['[O] above average [A] regular menu [S] bad [SSEP] [O] not worth [A] regular menu [S] bad', '[A] regular menu [O] above average [S] bad [SSEP] [A] regular menu [O] not worth [S] bad', '[O] above average [S] bad [A] regular menu [SSEP] [O] not worth [S] bad [A] regular menu', '[A] regular menu [S] bad [O] above average [SSEP] [A] regular menu [S] bad [O] not worth the snotty attitude', '[S] bad [O] above average [A] regular menu [SSEP] [S] bad [O] not worth [A] regular menu']

task, data: aste rest16
target: [('null', 'fish', 'great', 'love expertly cut'), ('null', 'sake', 'great', 'great'), ('null', 'soho location', 'great', 'killer')]
output: ['[A] fish [O] expertly cut [S] great', '[A] sake [O] great [S] great', '[A] salmon [O] killer [S] great', '[A] salmon [O] varity of toro [S] great', '[A] scallop [O] great [S] great', '[A] soho location [O] killer [S] great', '[A] tuna [O] great [S] great']
sent: ['Your', 'a', 'sushi', 'fan', ',', 'you', 'love', 'expertly', 'cut', 'fish', ',', 'great', 'sake', ',', 'a', 'killer', 'SOHO', 'location', ',', 'and', 'of', 'course', ':', 'Salmon', ',', 'Tuna', ',', 'Fluke', ',', 'Yellow', 'Tail', ',', 'Cod', ',', 'Mackeral', ',', 'Jellyfish', ',', 'Sea', 'Urchin', ',', 'Shrimp', ',', 'Lobster', ',', 'Sea', 'Bream', ',', 'Trout', ',', 'Milk', 'Fish', ',', 'Blue', 'Fin', 'Tuna', ',', 'Eel', ',', 'Crab', ',', 'Sardine', ',', 'Monk', 'Fish', ',', 'Roe', ',', 'Scallop', ',', 'Oysters', ',', 'and', 'a', 'varity', 'of', 'Toro', '.']
counter: {('null', 'fish', 'great', 'expertly cut'): 5, ('null', 'sake', 'great', 'great'): 5, ('null', 'soho location', 'great', 'killer'): 5, ('null', 'salmon', 'great', 'varity of toro'): 5, ('null', 'fish', 'great', 'varity of toro'): 1, ('null', 'salmon', 'great', 'love'): 1, ('null', 'tuna', 'great', 'great'): 3, ('null', 'yellow tail', 'great', 'love'): 1, ('null', 'jellyfish', 'great', 'killer'): 2, ('null', 'lobster', 'great', 'love'): 1, ('null', 'trout', 'great', 'love'): 1, ('null', 'crab', 'great', 'love'): 1, ('null', 'scallop', 'great', 'great'): 3, ('null', 'fluke', 'great', 'sas'): 1, ('null', 'fish', 'great', 'varity'): 1, ('null', 'trout', 'great', 'sardine'): 1, ('null', 'null', 'null', 'varity of toro'): 1, ('null', 'salmon', 'great', 'killer'): 3, ('null', 'yellow tail', 'great', 'killer'): 2, ('null', 'lobster', 'great', 'killer'): 2, ('null', 'trout', 'great', 'killer'): 2, ('null', 'crab', 'great', 'killer'): 1, ('null', 'eel', 'great', 'great'): 1}
output quads: ['[A] fish [O] expertly cut [S] great', '[A] sake [O] great [S] great', '[A] soho location [O] killer [S] great', '[A] salmon [O] varity of toro [S] great', '[A] tuna [O] great [S] great', '[A] scallop [O] great [S] great', '[A] salmon [O] killer [S] great']
multi_path: ['[O] expertly cut [A] fish [S] great [SSEP] [O] great [A] sake [S] great [SSEP] [O] killer [A] soho location [S] great [SSEP] [O] varity of toro [A] salmon [S] great [SSEP] [O] varity of toro [A] salmon [S] great [SSEP] [O] varity of toro [A] salmon [S] great [SSEP] [O] varity of toro [A] fish [S] great', '[A] fish [O] expertly cut [S] great [SSEP] [A] sake [O] great [S] great [SSEP] [A] soho location [O] killer [S] great [SSEP] [A] salmon [O] love [S] great [SSEP] [A] tuna [O] great [S] great [SSEP] [A] yellow tail [O] love [S] great [SSEP] [A] jellyfish [O] killer [S] great [SSEP] [A] lobster [O] love [S] great [SSEP] [A] trout [O] love [S] great [SSEP] [A] crab [O] love [S] great [SSEP] [A] scallop [O] great [S] great', '[O] expertly cut [S] great [A] fish [SSEP] [O] great [S] great [A] sake [SSEP] [O] killer [S] great [A] soho location [SSEP] [O] varity of toro [S] great [A] salmon [SSEP] [O] varity of toro [S] great [A] salmon [SSEP] [O] sas [S] great [A] fluke [SSEP] [O] varity [S] great [A] fish [SSEP] [O] sardine [S] great [A] trout [SSEP] [O] varity of toro', '[A] fish [S] great [O] expertly cut [SSEP] [A] sake [S] great [O] great [SSEP] [A] soho location [S] great [O] killer [SSEP] [A] salmon [S] great [O] killer [SSEP] [A] tuna [S] great [O] great [SSEP] [A] yellow tail [S] great [O] killer [SSEP] [A] jellyfish [S] great [O] killer [SSEP] [A] lobster [S] great [O] killer [SSEP] [A] trout [S] great [O] killer [SSEP] [A] crab [S] great [O] killer [SSEP] [A] scallop [S] great [O] great', '[S] great [O] expertly cut [A] fish [SSEP] [S] great [O] great [A] sake [SSEP] [S] great [O] killer [A] soho location [SSEP] [S] great [O] killer [A] salmon [SSEP] [S] great [O] great [A] tuna [SSEP] [S] great [O] killer [A] yellow tail [SSEP] [S] great [O] killer [A] lobster [SSEP] [S] great [O] killer [A] trout [SSEP] [S] great [O] killer [A] salmon [SSEP] [S] great [O] great [A] eel [SSEP] [S] great [O] great [A] scallop']

task, data: aste rest16
target: [('null', 'setting', 'great', 'nice'), ('null', 'sushi', 'great', 'great value'), ('null', 'sushi', 'great', 'high quality'), ('null', 'sushi', 'great', 'nice setting')]
output: ['[A] quality [O] high [S] great', '[A] setting [O] nice [S] great', '[A] sushi [O] great value [S] great']
sent: ['Great', 'value', 'sushi', 'with', 'high', 'quality', '&', 'nice', 'setting', '.']
counter: {('null', 'sushi', 'great', 'great value'): 5, ('null', 'quality', 'great', 'high'): 3, ('null', 'setting', 'great', 'nice'): 5, ('null', 'sushi', 'great', 'high quality'): 2}
output quads: ['[A] sushi [O] great value [S] great', '[A] quality [O] high [S] great', '[A] setting [O] nice [S] great']
multi_path: ['[O] great value [A] sushi [S] great [SSEP] [O] high [A] quality [S] great [SSEP] [O] nice [A] setting [S] great', '[A] sushi [O] great value [S] great [SSEP] [A] sushi [O] high quality [S] great [SSEP] [A] setting [O] nice [S] great', '[O] great value [S] great [A] sushi [SSEP] [O] high [S] great [A] quality [SSEP] [O] nice [S] great [A] setting', '[A] sushi [S] great [O] great value [SSEP] [A] sushi [S] great [O] high quality [SSEP] [A] setting [S] great [O] nice', '[S] great [O] great value [A] sushi [SSEP] [S] great [O] high [A] quality [SSEP] [S] great [O] nice [A] setting']

task, data: aste rest16
target: [('null', 'rolls', 'great', 'tasty'), ('null', 'smoked yellowtail', 'great', 'incredible')]
output: ["[A] chef's choice for sushi [O] try [S] great", '[A] rolls [O] tasty [S] great', '[A] smoked yellowtail [O] incredible [S] great']
sent: ['Try', 'the', 'Chef', "'s", 'Choice', 'for', 'sushi', 'as', 'the', 'smoked', 'yellowtail', 'was', 'incredible', 'and', 'the', 'rolls', 'were', 'also', 'tasty', '.']
counter: {('null', "chef's choice for sushi", 'great', 'try'): 5, ('null', 'smoked yellowtail', 'great', 'incredible'): 5, ('null', 'rolls', 'great', 'tasty'): 5}
output quads: ["[A] chef's choice for sushi [O] try [S] great", '[A] smoked yellowtail [O] incredible [S] great', '[A] rolls [O] tasty [S] great']
multi_path: ["[O] try [A] chef's choice for sushi [S] great [SSEP] [O] incredible [A] smoked yellowtail [S] great [SSEP] [O] tasty [A] rolls [S] great", "[A] chef's choice for sushi [O] try [S] great [SSEP] [A] smoked yellowtail [O] incredible [S] great [SSEP] [A] rolls [O] tasty [S] great", "[O] try [S] great [A] chef's choice for sushi [SSEP] [O] incredible [S] great [A] smoked yellowtail [SSEP] [O] tasty [S] great [A] rolls", "[A] chef's choice for sushi [S] great [O] try [SSEP] [A] smoked yellowtail [S] great [O] incredible [SSEP] [A] rolls [S] great [O] tasty", "[S] great [O] try [A] chef's choice for sushi [SSEP] [S] great [O] incredible [A] smoked yellowtail [SSEP] [S] great [O] tasty [A] rolls"]

task, data: aste rest16
target: [('null', 'pizza', 'bad', 'lacks quality and good taste')]
output: ["[A] mioposto's pizza [O] good taste [S] bad", "[A] mioposto's pizza [O] lacks quality [S] bad"]
sent: ['I', 'know', 'many', 'people', 'have', 'their', 'favorite', 'types', 'of', 'pizza', 'and', 'pizza', 'places', ',', 'but', 'Mioposto', "'s", 'pizza', 'lacks', 'quality', 'and', 'good', 'taste', '.']
counter: {('null', 'pizza', 'great', 'favorite'): 1, ('null', "mioposto's pizza", 'bad', 'lacks quality'): 3, ('null', "mioposto's pizza", 'bad', 'good taste'): 3, ('null', "mioposto's pizza", 'bad', 'favorite'): 2, ('null', 'quality', 'bad', 'lacks'): 2, ('null', 'taste', 'bad', 'good'): 2, ('null', 'pizza', 'bad', 'favorite'): 2}
output quads: ["[A] mioposto's pizza [O] lacks quality [S] bad", "[A] mioposto's pizza [O] good taste [S] bad"]
multi_path: ["[O] favorite [A] pizza [S] great [SSEP] [O] lacks quality [A] mioposto's pizza [S] bad [SSEP] [O] good taste [A] mioposto's pizza [S] bad", "[A] mioposto's pizza [O] favorite [S] bad [SSEP] [A] quality [O] lacks [S] bad [SSEP] [A] taste [O] good [S] bad", "[O] favorite [S] bad [A] pizza [SSEP] [O] lacks quality [S] bad [A] mioposto's pizza [SSEP] [O] good taste [S] bad [A] mioposto's pizza", "[A] mioposto's pizza [S] bad [O] favorite [SSEP] [A] quality [S] bad [O] lacks [SSEP] [A] taste [S] bad [O] good", "[S] bad [O] favorite [A] pizza [SSEP] [S] bad [O] lacks quality [A] mioposto's pizza [SSEP] [S] bad [O] good taste [A] mioposto's pizza"]

task, data: aste rest16
target: [('null', 'pizza', 'bad', 'better')]
output: ['[A] frozen pizza [O] better [S] bad']
sent: ['To', 'be', 'honest', ',', 'I', "'ve", 'had', 'better', 'frozen', 'pizza', '.']
counter: {('null', 'frozen pizza', 'bad', 'better'): 5}
output quads: ['[A] frozen pizza [O] better [S] bad']
multi_path: ['[O] better [A] frozen pizza [S] bad', '[A] frozen pizza [O] better [S] bad', '[O] better [S] bad [A] frozen pizza', '[A] frozen pizza [S] bad [O] better', '[S] bad [O] better [A] frozen pizza']

task, data: aste rest16
target: [('null', 'location', 'great', 'nice')]
output: ['[A] location [O] nice [S] great', '[A] mioposto [O] positive [S] great']
sent: ['The', 'only', 'positive', 'thing', 'about', 'Mioposto', 'is', 'the', 'nice', 'location', '.']
counter: {('null', 'mioposto', 'great', 'positive'): 5, ('null', 'location', 'great', 'nice'): 5}
output quads: ['[A] mioposto [O] positive [S] great', '[A] location [O] nice [S] great']
multi_path: ['[O] positive [A] mioposto [S] great [SSEP] [O] nice [A] location [S] great', '[A] mioposto [O] positive [S] great [SSEP] [A] location [O] nice [S] great', '[O] positive [S] great [A] mioposto [SSEP] [O] nice [S] great [A] location', '[A] mioposto [S] great [O] positive [SSEP] [A] location [S] great [O] nice', '[S] great [O] positive [A] mioposto [SSEP] [S] great [O] nice [A] location']

task, data: aste rest16
target: [('null', 'food', 'ok', 'ok'), ('null', 'service', 'bad', 'poor')]
output: ['[A] food [O] ok [S] bad', '[A] service [O] poor [S] bad']
sent: ['The', 'food', 'was', 'ok', ',', 'but', 'the', 'service', 'was', 'so', 'poor', 'that', 'the', 'food', 'was', 'cold', 'buy', 'the', 'time', 'everyone', 'in', 'my', 'party', 'was', 'served', '.']
counter: {('null', 'food', 'bad', 'ok'): 5, ('null', 'service', 'bad', 'poor'): 5}
output quads: ['[A] food [O] ok [S] bad', '[A] service [O] poor [S] bad']
multi_path: ['[O] ok [A] food [S] bad [SSEP] [O] poor [A] service [S] bad', '[A] food [O] ok [S] bad [SSEP] [A] service [O] poor [S] bad', '[O] ok [S] bad [A] food [SSEP] [O] poor [S] bad [A] service', '[A] food [S] bad [O] ok [SSEP] [A] service [S] bad [O] poor', '[S] bad [O] ok [A] food [SSEP] [S] bad [O] poor [A] service']

task, data: aste rest16
target: [('null', 'service', 'bad', 'without ever')]
output: ['[A] service [O] without ever getting service [S] bad']
sent: ['We', 'left', 'without', 'ever', 'getting', 'service', '.']
counter: {('null', 'service', 'bad', 'without ever getting service'): 3, ('null', 'service', 'bad', 'without ever getting'): 2}
output quads: ['[A] service [O] without ever getting service [S] bad']
multi_path: ['[O] without ever getting service [A] service [S] bad', '[A] service [O] without ever getting [S] bad', '[O] without ever getting service [S] bad [A] service', '[A] service [S] bad [O] without ever getting', '[S] bad [O] without ever getting service [A] service']

task, data: aste rest16
target: [('null', 'servers', 'bad', "don't like"), ('null', 'young woman', 'bad', "don't like")]
output: ["[A] servers [O] don't like [S] bad"]
sent: ['Prefer', 'to', 'order', 'it', 'and', 'pick', 'it', 'up', 'though', 'because', 'I', 'do', "n't", 'like', 'the', 'servers', ',', 'one', 'young', 'woman', 'in', 'particular', '.']
counter: {('null', 'servers', 'bad', "don't like"): 5}
output quads: ["[A] servers [O] don't like [S] bad"]
multi_path: ["[O] don't like [A] servers [S] bad", "[A] servers [O] don't like [S] bad", "[O] don't like [S] bad [A] servers", "[A] servers [S] bad [O] don't like", "[S] bad [O] don't like [A] servers"]

task, data: aste rest16
target: [('null', 'pizza', 'great', 'great'), ('null', 'service', 'bad', 'poor')]
output: ['[A] pizza [O] great [S] bad', '[A] service [O] poor [S] bad']
sent: ['Many', 'people', 'talk', 'about', 'the', 'great', 'pizza', 'and', 'poor', 'service', ',', 'so', 'it', 'ca', "n't", 'just', 'be', 'the', 'rantings', 'of', 'a', 'few', 'dissatisfied', 'customers', '.']
counter: {('null', 'pizza', 'bad', 'great'): 5, ('null', 'service', 'bad', 'poor'): 5}
output quads: ['[A] pizza [O] great [S] bad', '[A] service [O] poor [S] bad']
multi_path: ['[O] great [A] pizza [S] bad [SSEP] [O] poor [A] service [S] bad', '[A] pizza [O] great [S] bad [SSEP] [A] service [O] poor [S] bad', '[O] great [S] bad [A] pizza [SSEP] [O] poor [S] bad [A] service', '[A] pizza [S] bad [O] great [SSEP] [A] service [S] bad [O] poor', '[S] bad [O] great [A] pizza [SSEP] [S] bad [O] poor [A] service']

task, data: aste rest16
target: [('null', 'bloody mary', 'great', 'mean'), ('null', 'food', 'great', 'great')]
output: ['[A] food [O] great [S] great']
sent: ['The', 'food', 'is', 'great', 'and', 'they', 'make', 'a', 'mean', 'bloody', 'mary', '.']
counter: {('null', 'food', 'great', 'great'): 5}
output quads: ['[A] food [O] great [S] great']
multi_path: ['[O] great [A] food [S] great', '[A] food [O] great [S] great', '[O] great [S] great [A] food', '[A] food [S] great [O] great', '[S] great [O] great [A] food']

task, data: aste rest16
target: [('null', 'menu items', 'great', 'hit')]
output: ['[A] menu items [O] hit [S] great', '[A] mimosas [O] hit [S] great']
sent: ['All', 'their', 'menu', 'items', 'are', 'a', 'hit', ',', 'and', 'they', 'serve', 'mimosas', '.']
counter: {('null', 'menu items', 'great', 'hit'): 5, ('null', 'mimosas', 'great', 'hit'): 5}
output quads: ['[A] menu items [O] hit [S] great', '[A] mimosas [O] hit [S] great']
multi_path: ['[O] hit [A] menu items [S] great [SSEP] [O] hit [A] mimosas [S] great', '[A] menu items [O] hit [S] great [SSEP] [A] mimosas [O] hit [S] great', '[O] hit [S] great [A] menu items [SSEP] [O] hit [S] great [A] mimosas', '[A] menu items [S] great [O] hit [SSEP] [A] mimosas [S] great [O] hit', '[S] great [O] hit [A] menu items [SSEP] [S] great [O] hit [A] mimosas']

task, data: aste rest16
target: [('null', 'prawns', 'great', 'fresh'), ('null', 'prawns', 'great', 'nicely cooked'), ('null', 'scallops', 'great', 'fresh'), ('null', 'scallops', 'great', 'nicely cooked')]
output: ['[A] scallops and prawns [O] fresh [S] great', '[A] scallops and prawns [O] nicely cooked [S] great']
sent: ['i', 'would', 'normally', 'not', 'finish', 'the', 'brocolli', 'when', 'i', 'order', 'these', 'kinds', 'of', 'food', 'but', 'for', 'the', 'first', 'time', ',', 'every', 'piece', 'was', 'as', 'eventful', 'as', 'the', 'first', 'one', '...', 'the', 'scallops', 'and', 'prawns', 'was', 'so', 'fresh', 'and', 'nicely', 'cooked', '.']
counter: {('null', 'scallops and prawns', 'great', 'fresh'): 4, ('null', 'scallops and prawns', 'great', 'nicely cooked'): 5, ('null', 'brocolli', 'great', 'fresh'): 1, ('null', 'brocolli', 'great', 'eventful'): 1}
output quads: ['[A] scallops and prawns [O] fresh [S] great', '[A] scallops and prawns [O] nicely cooked [S] great']
multi_path: ['[O] fresh [A] scallops and prawns [S] great [SSEP] [O] nicely cooked [A] scallops and prawns [S] great', '[A] brocolli [O] fresh [S] great [SSEP] [A] scallops and prawns [O] nicely cooked [S] great', '[O] fresh [S] great [A] scallops and prawns [SSEP] [O] nicely cooked [S] great [A] scallops and prawns', '[A] brocolli [S] great [O] eventful [SSEP] [A] scallops and prawns [S] great [O] fresh [SSEP] [A] scallops and prawns [S] great [O] nicely cooked', '[S] great [O] fresh [A] scallops and prawns [SSEP] [S] great [O] nicely cooked [A] scallops and prawns']

task, data: aste rest16
target: [('null', 'portions', 'bad', 'chintzy')]
output: ['[A] portions [O] chintzy [S] great']
sent: ['Chintzy', 'portions']
counter: {('null', 'portions', 'great', 'chintzy'): 5}
output quads: ['[A] portions [O] chintzy [S] great']
multi_path: ['[O] chintzy [A] portions [S] great', '[A] portions [O] chintzy [S] great', '[O] chintzy [S] great [A] portions', '[A] portions [S] great [O] chintzy', '[S] great [O] chintzy [A] portions']

task, data: aste rest16
target: [('null', 'restaurant', 'bad', 'moderately priced'), ('null', 'sushi', 'bad', 'good')]
output: ['[A] slices of fish [O] larger [S] bad', '[A] sushi [O] perfectly good [S] great']
sent: ['–', 'The', 'sushi', 'here', 'is', 'perfectly', 'good', ',', 'but', 'for', '$', '5', 'a', 'piece', ',', 'either', 'the', 'slices', 'of', 'fish', 'should', 'be', 'larger', ',', 'or', 'there', 'should', 'be', 'no', 'pretense', 'that', 'this', 'is', 'a', 'moderately', 'priced', 'restaurant', '(', 'even', 'for', 'NYC', ')', '.']
counter: {('null', 'sushi', 'great', 'perfectly good'): 5, ('null', 'slices of fish', 'bad', 'larger'): 5}
output quads: ['[A] sushi [O] perfectly good [S] great', '[A] slices of fish [O] larger [S] bad']
multi_path: ['[O] perfectly good [A] sushi [S] great [SSEP] [O] larger [A] slices of fish [S] bad', '[A] sushi [O] perfectly good [S] great [SSEP] [A] slices of fish [O] larger [S] bad', '[O] perfectly good [S] great [A] sushi [SSEP] [O] larger [S] bad [A] slices of fish', '[A] sushi [S] great [O] perfectly good [SSEP] [A] slices of fish [S] bad [O] larger', '[S] great [O] perfectly good [A] sushi [SSEP] [S] bad [O] larger [A] slices of fish']

task, data: aste rest16
target: [('null', 'food', 'ok', 'ok'), ('null', 'service', 'bad', 'terrible')]
output: ['[A] food [O] ok [S] ok', '[A] service [O] pricey [S] bad', '[A] service [O] terrible [S] bad']
sent: ['Terrible', 'service', ',', 'food', 'ok', ',', 'pricey']
counter: {('null', 'service', 'bad', 'terrible'): 5, ('null', 'food', 'ok', 'ok'): 5, ('null', 'food', 'bad', 'pricey'): 2, ('null', 'service', 'bad', 'pricey'): 3}
output quads: ['[A] service [O] terrible [S] bad', '[A] food [O] ok [S] ok', '[A] service [O] pricey [S] bad']
multi_path: ['[O] terrible [A] service [S] bad [SSEP] [O] ok [A] food [S] ok [SSEP] [O] pricey [A] food [S] bad', '[A] service [O] terrible [S] bad [SSEP] [A] food [O] ok [S] ok [SSEP] [A] food [O] pricey [S] bad', '[O] terrible [S] bad [A] service [SSEP] [O] ok [S] ok [A] food [SSEP] [O] pricey [S] bad [A] service', '[A] service [S] bad [O] terrible [SSEP] [A] food [S] ok [O] ok [SSEP] [A] service [S] bad [O] pricey', '[S] bad [O] terrible [A] service [SSEP] [S] ok [O] ok [A] food [SSEP] [S] bad [O] pricey [A] service']

task, data: aste rest16
target: [('null', 'food', 'ok', 'ok'), ('null', 'food', 'ok', 'pricey'), ('null', 'restaurant', 'ok', "isn't a fancy")]
output: ['[A] food [O] ok [S] bad', '[A] food [O] pricey [S] bad']
sent: ['Food', 'wise', ',', 'its', 'ok', 'but', 'a', 'bit', 'pricey', 'for', 'what', 'you', 'get', 'considering', 'the', 'restaurant', 'is', "n't", 'a', 'fancy', 'place', '.']
counter: {('null', 'food', 'bad', 'ok'): 5, ('null', 'food', 'bad', 'pricey'): 5}
output quads: ['[A] food [O] ok [S] bad', '[A] food [O] pricey [S] bad']
multi_path: ['[O] ok [A] food [S] bad [SSEP] [O] pricey [A] food [S] bad', '[A] food [O] ok [S] bad [SSEP] [A] food [O] pricey [S] bad', '[O] ok [S] bad [A] food [SSEP] [O] pricey [S] bad [A] food', '[A] food [S] bad [O] ok [SSEP] [A] food [S] bad [O] pricey', '[S] bad [O] ok [A] food [SSEP] [S] bad [O] pricey [A] food']

task, data: aste rest16
target: [('null', 'feel', 'great', 'open'), ('null', 'feel', 'great', 'plus')]
output: ['[A] restaurant [O] plus [S] great']
sent: ['Another', 'plus', 'is', 'the', 'open', 'feel', 'of', 'the', 'restaurant', 'with', 'glass', 'walls', 'on', 'all', 'sides', '.']
counter: {('null', 'restaurant', 'great', 'plus'): 5}
output quads: ['[A] restaurant [O] plus [S] great']
multi_path: ['[O] plus [A] restaurant [S] great', '[A] restaurant [O] plus [S] great', '[O] plus [S] great [A] restaurant', '[A] restaurant [S] great [O] plus', '[S] great [O] plus [A] restaurant']

task, data: aste rest16
target: [('null', 'omikase', 'bad', "didn't disappoint"), ('null', 'omikase', 'bad', 'scored low on creativity and selection')]
output: ["[A] omikase [O] didn't disappoint [S] great"]
sent: ['As', 'usual', 'the', 'omikase', 'did', "n't", 'disappoint', 'in', 'freshness', ',', 'although', 'it', 'scored', 'low', 'on', 'creativity', 'and', 'selection', '.']
counter: {('null', 'omikase', 'bad', 'low'): 2, ('null', 'omikase', 'great', "didn't disappoint"): 3}
output quads: ["[A] omikase [O] didn't disappoint [S] great"]
multi_path: ['[O] low [A] omikase [S] bad', "[A] omikase [O] didn't disappoint [S] great", '[O] low [S] bad [A] omikase', "[A] omikase [S] great [O] didn't disappoint", "[S] great [O] didn't disappoint [A] omikase"]

task, data: aste rest16
target: [('null', 'sushi', 'great', "isn't the cheapest"), ('null', 'sushi', 'great', 'worth')]
output: []
sent: ['It', 'is', "n't", 'the', 'cheapest', 'sushi', 'but', 'has', 'been', 'worth', 'it', 'every', 'time', '.']
counter: {('null', 'sushi', 'great', "'t the cheapest"): 1, ('null', 'sushi', 'great', 'cheapest'): 2, ('null', 'sushi', 'bad', "'t the cheapest"): 1, ('null', 'sushi', 'great', 'worth'): 1, ('null', 'sushi', 'ok', 'cheapest'): 1}
output quads: []
multi_path: ["[O]n't the cheapest [A] sushi [S] great", '[A] sushi [O] cheapest [S] great', "[O]n't the cheapest [S] bad [A] sushi [SSEP] [O] worth [S] great [A] sushi", '[A] sushi [S] great [O] cheapest', '[S] ok [O] cheapest [A] sushi']

task, data: aste rest16
target: [('null', 'customer service', 'bad', 'poor')]
output: ['[A] food [O] average [S] ok', '[A] location [O] charming [S] great']
sent: ['–', 'Schooner', 'or', 'Later', "'s", 'charming', 'location', 'along', 'the', 'marina', 'in', 'Long', 'Beach', 'and', 'average', 'food', 'does', 'not', ',', 'unfortunately', ',', 'compensate', 'for', 'its', 'very', 'poor', 'customer', 'service', '.']
counter: {('null', 'location', 'great', 'charming'): 5, ('null', 'food', 'ok', 'average'): 5}
output quads: ['[A] location [O] charming [S] great', '[A] food [O] average [S] ok']
multi_path: ['[O] charming [A] location [S] great [SSEP] [O] average [A] food [S] ok', '[A] location [O] charming [S] great [SSEP] [A] food [O] average [S] ok', '[O] charming [S] great [A] location [SSEP] [O] average [S] ok [A] food', '[A] location [S] great [O] charming [SSEP] [A] food [S] ok [O] average', '[S] great [O] charming [A] location [SSEP] [S] ok [O] average [A] food']

task, data: aste rest16
target: [('null', 'food', 'great', 'good'), ('null', 'restaurant staff', 'bad', 'indifferent')]
output: ['[A] food [O] good [S] great', '[A] staff [O] indifferent [S] bad']
sent: ['While', 'this', 'diner', 'had', 'reasonably', 'good', 'food', ',', 'the', 'restaurant', 'staff', 'seemed', 'completely', 'indifferent', 'to', 'our', 'presence', ',', 'and', 'this', 'attitude', 'was', 'reflected', 'in', 'the', 'lack', 'of', 'service', '.']
counter: {('null', 'food', 'great', 'good'): 5, ('null', 'staff', 'bad', 'indifferent'): 4}
output quads: ['[A] food [O] good [S] great', '[A] staff [O] indifferent [S] bad']
multi_path: ['[O] good [A] food [S] great [SSEP] [O] indifferent [A] staff [S] bad', '[A] food [O] good [S] great [SSEP] [A] staff [O] indifferent [S] bad', '[O] good [S] great [A] food [SSEP] [O] indifferent [S] bad [A] staff', '[A] food [S] great [O] good [SSEP] [A] staff [S] bad [O] indifferent', '[S] great [O] good [A] food']

task, data: aste rest16
target: [('null', 'dessert of a port and chocolate tasting', 'great', 'yummy')]
output: ['[A] dessert [O] unusual [S] great', '[A] port and chocolate tasting [O] yummy [S] great']
sent: ['I', 'ended', 'the', 'meal', 'with', 'the', 'unusual', 'dessert', 'of', 'a', 'port', 'and', 'chocolate', 'tasting', '...', 'yummy', '!']
counter: {('null', 'dessert', 'great', 'unusual'): 5, ('null', 'port and chocolate tasting', 'great', 'yummy'): 5}
output quads: ['[A] dessert [O] unusual [S] great', '[A] port and chocolate tasting [O] yummy [S] great']
multi_path: ['[O] unusual [A] dessert [S] great [SSEP] [O] yummy [A] port and chocolate tasting [S] great', '[A] dessert [O] unusual [S] great [SSEP] [A] port and chocolate tasting [O] yummy [S] great', '[O] unusual [S] great [A] dessert [SSEP] [O] yummy [S] great [A] port and chocolate tasting', '[A] dessert [S] great [O] unusual [SSEP] [A] port and chocolate tasting [S] great [O] yummy', '[S] great [O] unusual [A] dessert [SSEP] [S] great [O] yummy [A] port and chocolate tasting']

task, data: aste rest16
target: [('null', 'b fast burritos', 'great', 'great'), ('null', 'coffee', 'great', 'great'), ('null', 'corn beef hash', 'great', 'great'), ('null', 'drinks', 'great', 'great'), ('null', 'menu', 'great', 'great')]
output: ['[A] b fast burritos [O] great [S] great', '[A] coffee [O] great [S] great', '[A] corn beef hash [O] great [S] great', '[A] drinks [O] great [S] great', '[A] menu [O] gluten free [S] great']
sent: ['–', 'Great', 'drinks', ',', 'corn', 'beef', 'hash', ',', 'coffee', ',', 'B', 'Fast', 'burritos', ',', 'Gluten', 'Free', 'menu', '.']
counter: {('null', 'drinks', 'great', 'great'): 5, ('null', 'corn beef hash', 'great', 'great'): 5, ('null', 'coffee', 'great', 'great'): 5, ('null', 'burritos', 'great', 'fast'): 2, ('null', 'menu', 'great', 'gluten free'): 5, ('null', 'b fast burritos', 'great', 'great'): 3}
output quads: ['[A] drinks [O] great [S] great', '[A] corn beef hash [O] great [S] great', '[A] coffee [O] great [S] great', '[A] menu [O] gluten free [S] great', '[A] b fast burritos [O] great [S] great']
multi_path: ['[O] great [A] drinks [S] great [SSEP] [O] great [A] corn beef hash [S] great [SSEP] [O] great [A] coffee [S] great [SSEP] [O] fast [A] burritos [S] great [SSEP] [O] gluten free [A] menu [S] great', '[A] drinks [O] great [S] great [SSEP] [A] corn beef hash [O] great [S] great [SSEP] [A] coffee [O] great [S] great [SSEP] [A] b fast burritos [O] great [S] great [SSEP] [A] menu [O] gluten free [S] great', '[O] great [S] great [A] drinks [SSEP] [O] great [S] great [A] corn beef hash [SSEP] [O] great [S] great [A] coffee [SSEP] [O] fast [S] great [A] burritos [SSEP] [O] gluten free [S] great [A] menu', '[A] drinks [S] great [O] great [SSEP] [A] corn beef hash [S] great [O] great [SSEP] [A] coffee [S] great [O] great [SSEP] [A] b fast burritos [S] great [O] great [SSEP] [A] menu [S] great [O] gluten free', '[S] great [O] great [A] drinks [SSEP] [S] great [O] great [A] corn beef hash [SSEP] [S] great [O] great [A] coffee [SSEP] [S] great [O] great [A] b fast burritos [SSEP] [S] great [O] gluten free [A] menu']

task, data: aste rest16
target: [('null', 'place', 'great', 'fun'), ('null', 'service', 'great', 'fantastic')]
output: ['[A] service [O] fantastic [S] great']
sent: ['The', 'service', 'is', 'fantastic', 'at', 'this', 'fun', 'place', '.']
counter: {('null', 'service', 'great', 'fantastic'): 5}
output quads: ['[A] service [O] fantastic [S] great']
multi_path: ['[O] fantastic [A] service [S] great', '[A] service [O] fantastic [S] great', '[O] fantastic [S] great [A] service', '[A] service [S] great [O] fantastic', '[S] great [O] fantastic [A] service']

task, data: aste rest16
target: [('null', 'subwoofer to the sound system', 'bad', 'annoying')]
output: ['[A] music playing [O] hip [S] great', '[A] subwoofer to the sound system [O] annoying [S] bad']
sent: ['The', 'music', 'playing', 'was', 'very', 'hip', ',', '20-30', 'something', 'pop', 'music', ',', 'but', 'the', 'subwoofer', 'to', 'the', 'sound', 'system', 'was', 'located', 'under', 'my', 'seat', ',', 'which', 'became', 'annoying', 'midway', 'through', 'dinner', '.']
counter: {('null', 'music playing', 'great', 'hip'): 3, ('null', 'subwoofer to the sound system', 'bad', 'annoying'): 3, ('null', 'subwoofer', 'bad', 'annoying'): 2, ('null', 'sound system', 'bad', 'annoying'): 1, ('null', 'music', 'great', 'hip'): 2}
output quads: ['[A] music playing [O] hip [S] great', '[A] subwoofer to the sound system [O] annoying [S] bad']
multi_path: ['[O] hip [A] music playing [S] great [SSEP] [O] annoying [A] subwoofer to the sound system [S] bad', '[A] music playing [O] hip [S] great [SSEP] [A] subwoofer [O] annoying [S] bad [SSEP] [A] sound system [O] annoying [S] bad', '[O] hip [S] great [A] music [SSEP] [O] annoying [S] bad [A] subwoofer to the sound system', '[A] music playing [S] great [O] hip [SSEP] [A] subwoofer [S] bad [O] annoying', '[S] great [O] hip [A] music [SSEP] [S] bad [O] annoying [A] subwoofer to the sound system']

task, data: aste rest16
target: [('null', 'seafood', 'ok', 'ok'), ('null', 'seafood', 'ok', "wasn't the freshest")]
output: ['[A] seafood [O] freshest [S] ok']
sent: ['It', 'was', "n't", 'the', 'freshest', 'seafood', 'ever', ',', 'but', 'the', 'taste', 'and', 'presentation', 'was', 'OK', '.']
counter: {('null', 'seafood', 'ok', 'freshest'): 5}
output quads: ['[A] seafood [O] freshest [S] ok']
multi_path: ['[O] freshest [A] seafood [S] ok', '[A] seafood [O] freshest [S] ok', '[O] freshest [S] ok [A] seafood', '[A] seafood [S] ok [O] freshest', '[S] ok [O] freshest [A] seafood']

task, data: aste rest16
target: [('null', 'peppercorn sauce', 'ok', 'indistinguishable'), ('null', 'red wine reduction', 'ok', 'indistinguishable')]
output: ['[A] peppercorn sauce [O] indistinguishable [S] great', '[A] red wine reduction [O] indistinguishable [S] great']
sent: ['It', '?', 's', 'served', 'with', 'either', 'a', 'peppercorn', 'sauce', 'or', 'red', 'wine', 'reduction', ',', 'though', 'both', 'were', 'indistinguishable', 'in', 'taste', '.']
counter: {('null', 'peppercorn sauce', 'great', 'indistinguishable'): 5, ('null', 'red wine reduction', 'great', 'indistinguishable'): 5}
output quads: ['[A] peppercorn sauce [O] indistinguishable [S] great', '[A] red wine reduction [O] indistinguishable [S] great']
multi_path: ['[O] indistinguishable [A] peppercorn sauce [S] great [SSEP] [O] indistinguishable [A] red wine reduction [S] great', '[A] peppercorn sauce [O] indistinguishable [S] great [SSEP] [A] red wine reduction [O] indistinguishable [S] great', '[O] indistinguishable [S] great [A] peppercorn sauce [SSEP] [O] indistinguishable [S] great [A] red wine reduction', '[A] peppercorn sauce [S] great [O] indistinguishable [SSEP] [A] red wine reduction [S] great [O] indistinguishable', '[S] great [O] indistinguishable [A] peppercorn sauce [SSEP] [S] great [O] indistinguishable [A] red wine reduction']

task, data: aste rest16
target: [('null', 'desert', 'great', 'perfect'), ('null', 'dinner', 'great', 'perfect')]
output: ['[A] desert [O] perfect [S] great']
sent: ['The', 'desert', 'was', 'the', 'perfect', 'ending', 'to', 'an', 'almost', 'perfect', 'dinner', '.']
counter: {('null', 'desert', 'great', 'perfect'): 5}
output quads: ['[A] desert [O] perfect [S] great']
multi_path: ['[O] perfect [A] desert [S] great', '[A] desert [O] perfect [S] great', '[O] perfect [S] great [A] desert', '[A] desert [S] great [O] perfect', '[S] great [O] perfect [A] desert']

task, data: aste rest16
target: [('null', 'servers', 'great', 'attentive'), ('null', 'servers', 'great', 'friendly')]
output: ['[A] servers [O] attentive [S] great']
sent: ['But', 'the', 'servers', 'were', 'extremely', 'attentive', 'and', 'very', 'friendly', '.']
counter: {('null', 'servers', 'great', 'attentive'): 5}
output quads: ['[A] servers [O] attentive [S] great']
multi_path: ['[O] attentive [A] servers [S] great', '[A] servers [O] attentive [S] great', '[O] attentive [S] great [A] servers', '[A] servers [S] great [O] attentive', '[S] great [O] attentive [A] servers']

task, data: aste rest16
target: [('null', 'sake', 'great', 'good')]
output: ['[A] server [O] good [S] great']
sent: ['Server', 'made', 'several', 'sake', 'suggestions', 'which', 'were', 'very', 'good', '.']
counter: {('null', 'server', 'great', 'good'): 5}
output quads: ['[A] server [O] good [S] great']
multi_path: ['[O] good [A] server [S] great', '[A] server [O] good [S] great', '[O] good [S] great [A] server', '[A] server [S] great [O] good', '[S] great [O] good [A] server']

task, data: aste rest16
target: [('null', 'feel', 'bad', 'crowded'), ('null', 'waiter', 'bad', 'unfriendly')]
output: ['[A] waiter [O] unfriendly [S] bad']
sent: ['The', 'waiter', 'was', 'a', 'bit', 'unfriendly', 'and', 'the', 'feel', 'of', 'the', 'restaurant', 'was', 'crowded', '.']
counter: {('null', 'waiter', 'bad', 'unfriendly'): 5}
output quads: ['[A] waiter [O] unfriendly [S] bad']
multi_path: ['[O] unfriendly [A] waiter [S] bad', '[A] waiter [O] unfriendly [S] bad', '[O] unfriendly [S] bad [A] waiter', '[A] waiter [S] bad [O] unfriendly', '[S] bad [O] unfriendly [A] waiter']

task, data: aste rest16
target: [('null', 'cooks', 'great', 'friendly')]
output: ['[A] cooks [O] friendly [S] great', '[A] wait staff [O] friendly [S] great']
sent: ['I', "'ve", 'always', 'found', 'the', 'wait', 'staff', 'and', ',', 'if', 'you', 'sit', 'at', 'the', 'bar', ',', 'the', 'cooks', 'very', 'friendly', '.']
counter: {('null', 'wait staff', 'great', 'friendly'): 5, ('null', 'cooks', 'great', 'friendly'): 5}
output quads: ['[A] wait staff [O] friendly [S] great', '[A] cooks [O] friendly [S] great']
multi_path: ['[O] friendly [A] wait staff [S] great [SSEP] [O] friendly [A] cooks [S] great', '[A] wait staff [O] friendly [S] great [SSEP] [A] cooks [O] friendly [S] great', '[O] friendly [S] great [A] wait staff [SSEP] [O] friendly [S] great [A] cooks', '[A] wait staff [S] great [O] friendly [SSEP] [A] cooks [S] great [O] friendly', '[S] great [O] friendly [A] wait staff [SSEP] [S] great [O] friendly [A] cooks']

task, data: aste rest16
target: [('null', 'decor', 'great', 'enjoy'), ('null', 'decor', 'great', 'simplicity'), ('null', 'feeling', 'great', 'intimate')]
output: ['[A] decor [O] enjoy [S] great', '[A] restaurant [O] intimate [S] great']
sent: ['I', 'also', 'really', 'enjoy', 'the', 'simplicity', 'of', 'the', 'decor', 'and', 'intimate', 'feeling', 'of', 'a', 'small', 'restaurant', '.']
counter: {('null', 'decor', 'great', 'enjoy'): 5, ('null', 'restaurant', 'great', 'intimate'): 5}
output quads: ['[A] decor [O] enjoy [S] great', '[A] restaurant [O] intimate [S] great']
multi_path: ['[O] enjoy [A] decor [S] great [SSEP] [O] intimate [A] restaurant [S] great', '[A] decor [O] enjoy [S] great [SSEP] [A] restaurant [O] intimate [S] great', '[O] enjoy [S] great [A] decor [SSEP] [O] intimate [S] great [A] restaurant', '[A] decor [S] great [O] enjoy [SSEP] [A] restaurant [S] great [O] intimate', '[S] great [O] enjoy [A] decor [SSEP] [S] great [O] intimate [A] restaurant']

task, data: aste rest16
target: [('null', 'menu', 'great', 'won ’ t be disappointed')]
output: ['[A] menu [O] ’ t be disappointed [S] great']
sent: ['You', 'won', '’', 't', 'be', 'disappointed', 'by', 'their', 'menu', '.']
counter: {('null', 'menu', 'great', '’ t be disappointed'): 5}
output quads: ['[A] menu [O] ’ t be disappointed [S] great']
multi_path: ['[O] ’ t be disappointed [A] menu [S] great', '[A] menu [O] ’ t be disappointed [S] great', '[O] ’ t be disappointed [S] great [A] menu', '[A] menu [S] great [O] ’ t be disappointed', '[S] great [O] ’ t be disappointed [A] menu']

task, data: aste rest16
target: [('null', 'menu', 'great', 'creative')]
output: ['[A] menu [O] creative [S] great', '[A] pizza ’ s [O] thin crust [S] great']
sent: ['The', 'pizza', '’', 's', 'are', 'thin', 'crust', 'and', 'the', 'menu', 'offers', 'very', 'creative', 'combinations', 'and', 'toppings', '.']
counter: {('null', 'pizza ’ s', 'great', 'thin crust'): 5, ('null', 'menu', 'great', 'creative'): 5}
output quads: ['[A] pizza ’ s [O] thin crust [S] great', '[A] menu [O] creative [S] great']
multi_path: ['[O] thin crust [A] pizza ’ s [S] great [SSEP] [O] creative [A] menu [S] great', '[A] pizza ’ s [O] thin crust [S] great [SSEP] [A] menu [O] creative [S] great', '[O] thin crust [S] great [A] pizza ’ s [SSEP] [O] creative [S] great [A] menu', '[A] pizza ’ s [S] great [O] thin crust [SSEP] [A] menu [S] great [O] creative', '[S] great [O] thin crust [A] pizza ’ s [SSEP] [S] great [O] creative [A] menu']

task, data: aste rest16
target: [('null', 'crust', 'ok', 'thin')]
output: ['[A] crust [O] thin [S] ok', '[A] pizza ’ s [O] not huge [S] ok']
sent: ['The', 'pizza', '’', 's', 'are', 'not', 'huge', 'and', 'the', 'crust', 'is', 'thin', '...', 'keep', 'that', 'in', 'mind', 'when', 'you', '’', 're', 'ordering', '.']
counter: {('null', 'pizza ’ s', 'ok', 'not huge'): 5, ('null', 'crust', 'ok', 'thin'): 5}
output quads: ['[A] pizza ’ s [O] not huge [S] ok', '[A] crust [O] thin [S] ok']
multi_path: ['[O] not huge [A] pizza ’ s [S] ok [SSEP] [O] thin [A] crust [S] ok', '[A] pizza ’ s [O] not huge [S] ok [SSEP] [A] crust [O] thin [S] ok', '[O] not huge [S] ok [A] pizza ’ s [SSEP] [O] thin [S] ok [A] crust', '[A] pizza ’ s [S] ok [O] not huge [SSEP] [A] crust [S] ok [O] thin', '[S] ok [O] not huge [A] pizza ’ s [SSEP] [S] ok [O] thin [A] crust']

task, data: aste rest16
target: [('null', 'food', 'great', 'sinful')]
output: ['[A] food [O] sinful [S] bad']
sent: ['The', 'food', 'is', 'sinful', '.']
counter: {('null', 'food', 'bad', 'sinful'): 5}
output quads: ['[A] food [O] sinful [S] bad']
multi_path: ['[O] sinful [A] food [S] bad', '[A] food [O] sinful [S] bad', '[O] sinful [S] bad [A] food', '[A] food [S] bad [O] sinful', '[S] bad [O] sinful [A] food']

task, data: aste rest16
target: [('null', 'fish', 'bad', 'decent')]
output: ['[A] fish [O] half-way decent [S] ok']
sent: ['Maybe', 'it', 'is', 'good', 'for', 'that', 'one', 'night', 'once', 'in', 'a', 'blue', 'moon', 'when', 'the', 'chefs', 'decide', 'to', 'use', 'fish', 'that', "'s", 'half-way', 'decent', '.']
counter: {('null', 'fish', 'ok', 'half-way decent'): 5}
output quads: ['[A] fish [O] half-way decent [S] ok']
multi_path: ['[O] half-way decent [A] fish [S] ok', '[A] fish [O] half-way decent [S] ok', '[O] half-way decent [S] ok [A] fish', '[A] fish [S] ok [O] half-way decent', '[S] ok [O] half-way decent [A] fish']

task, data: aste rest16
target: [('null', 'honwy walnut prawns', 'great', 'best'), ('null', 'honwy walnut prawns', 'great', 'outstanding')]
output: ['[A] honwy walnut prawns [O] best [S] great']
sent: ['The', 'best', 'dish', 'are', 'the', 'honwy', 'walnut', 'prawns', '--', 'just', 'outstanding', '.']
counter: {('null', 'honwy walnut prawns', 'great', 'best'): 5, ('null', 'honwy walnut prawns', 'great', 'outstanding'): 1}
output quads: ['[A] honwy walnut prawns [O] best [S] great']
multi_path: ['[O] best [A] honwy walnut prawns [S] great', '[A] honwy walnut prawns [O] best [S] great', '[O] best [S] great [A] honwy walnut prawns [SSEP] [O] outstanding [S] great [A] honwy walnut prawns', '[A] honwy walnut prawns [S] great [O] best', '[S] great [O] best [A] honwy walnut prawns']

task, data: aste rest16
target: [('null', 'atmosphere', 'great', 'good'), ('null', 'music', 'great', 'good'), ('null', 'people', 'great', 'happy'), ('null', 'vibe', 'great', 'nice')]
output: ['[A] atmosphere [O] good [S] great', '[A] music [O] good [S] great', '[A] people [O] happy looking [S] great', '[A] vibe [O] nice [S] great']
sent: ['There', 'was', 'a', 'really', 'nice', 'vibe', 'about', 'the', 'place', '...', 'good', 'music', ',', 'atmosphere', 'and', 'happy', 'looking', 'people', '.']
counter: {('null', 'vibe', 'great', 'nice'): 5, ('null', 'music', 'great', 'good'): 5, ('null', 'atmosphere', 'great', 'good'): 5, ('null', 'people', 'great', 'happy looking'): 4}
output quads: ['[A] vibe [O] nice [S] great', '[A] music [O] good [S] great', '[A] atmosphere [O] good [S] great', '[A] people [O] happy looking [S] great']
multi_path: ['[O] nice [A] vibe [S] great [SSEP] [O] good [A] music [S] great [SSEP] [O] good [A] atmosphere [S] great', '[A] vibe [O] nice [S] great [SSEP] [A] music [O] good [S] great [SSEP] [A] atmosphere [O] good [S] great [SSEP] [A] people [O] happy looking [S] great', '[O] nice [S] great [A] vibe [SSEP] [O] good [S] great [A] music [SSEP] [O] good [S] great [A] atmosphere [SSEP] [O] happy looking [S] great [A] people', '[A] vibe [S] great [O] nice [SSEP] [A] music [S] great [O] good [SSEP] [A] atmosphere [S] great [O] good [SSEP] [A] people [S] great [O] happy looking', '[S] great [O] nice [A] vibe [SSEP] [S] great [O] good [A] music [SSEP] [S] great [O] good [A] atmosphere [SSEP] [S] great [O] happy looking [A] people']

task, data: aste rest16
target: [('null', 'place', 'ok', 'tiny')]
output: ['[A] place [O] tiny [S] bad']
sent: ['It', "'s", 'a', 'tiny', 'place', 'so', 'if', 'you', 'get', 'there', 'before', '8pm', 'on', 'a', 'weekend', '(', 'Thurs', '?', 'Sun', ')', 'you', 'will', 'find', 'it', 'easier', 'to', 'get', 'a', 'table', 'or', 'a', 'seat', 'at', 'the', 'sushi', 'bar', '.']
counter: {('null', 'place', 'bad', 'tiny'): 5, ('null', 'table', 'ok', 'easier'): 2, ('null', 'seat', 'ok', 'easier'): 2, ('null', 'sushi bar', 'ok', 'easier'): 1}
output quads: ['[A] place [O] tiny [S] bad']
multi_path: ['[O] tiny [A] place [S] bad [SSEP] [O] easier [A] table [S] ok [SSEP] [O] easier [A] seat [S] ok', '[A] place [O] tiny [S] bad [SSEP] [A] sushi bar [O] easier [S] ok', '[O] tiny [S] bad [A] place', '[A] place [S] bad [O] tiny', '[S] bad [O] tiny [A] place [SSEP] [S] ok [O] easier [A] table [SSEP] [S] ok [O] easier [A] seat']

task, data: aste rest16
target: [('null', "pepperoni's", 'great', 'thick'), ('null', "pepperoni's", 'great', 'yum')]
output: ['[A] pepperoni [O] thick [S] great']
sent: ['–', 'The', 'pepperoni', "'s", 'cut', 'real', 'thick', '--', 'Yum', '.']
counter: {('null', 'pepperoni', 'great', 'thick'): 5}
output quads: ['[A] pepperoni [O] thick [S] great']
multi_path: ['[O] thick [A] pepperoni [S] great', '[A] pepperoni [O] thick [S] great', '[O] thick [S] great [A] pepperoni', '[A] pepperoni [S] great [O] thick', '[S] great [O] thick [A] pepperoni']

task, data: aste rest16
target: [('null', 'portions', 'ok', 'enough')]
output: ['[A] portions [O] enough [S] bad']
sent: ['Portions', 'was', 'just', 'enough', 'for', 'me', ',', 'but', 'may', 'not', 'be', 'for', 'a', 'big', 'eater', '.']
counter: {('null', 'portions', 'bad', 'enough'): 5}
output quads: ['[A] portions [O] enough [S] bad']
multi_path: ['[O] enough [A] portions [S] bad', '[A] portions [O] enough [S] bad', '[O] enough [S] bad [A] portions', '[A] portions [S] bad [O] enough', '[S] bad [O] enough [A] portions']

task, data: aste rest16
target: [('null', 'menu selection', 'ok', 'fair')]
output: ['[A] menu selection [O] fair [S] bad']
sent: ['Fair', 'menu', 'selection', '.']
counter: {('null', 'menu selection', 'bad', 'fair'): 4, ('null', 'menu selection', 'great', 'fair'): 1}
output quads: ['[A] menu selection [O] fair [S] bad']
multi_path: ['[O] fair [A] menu selection [S] bad', '[A] menu selection [O] fair [S] bad', '[O] fair [S] great [A] menu selection', '[A] menu selection [S] bad [O] fair', '[S] bad [O] fair [A] menu selection']

task, data: aste rest16
target: [('null', 'music', 'great', 'casual')]
output: ['[A] music [O] groovy [S] great']
sent: ['Groovy', 'music', 'made', 'the', 'dinner', 'casual', '.']
counter: {('null', 'music', 'great', 'groovy'): 5}
output quads: ['[A] music [O] groovy [S] great']
multi_path: ['[O] groovy [A] music [S] great', '[A] music [O] groovy [S] great', '[O] groovy [S] great [A] music', '[A] music [S] great [O] groovy', '[S] great [O] groovy [A] music']

task, data: aste rest16
target: [('null', 'restroom', 'bad', 'odd')]
output: ['[A] bathroom attendant [O] odd [S] bad']
sent: ['I', 'have', 'a', 'but', 'here', '-', 'there', 'was', 'a', 'bathroom', 'attendant', 'in', 'the', 'restroom', 'which', 'was', 'odd', '.']
counter: {('null', 'bathroom attendant', 'bad', 'odd'): 5}
output quads: ['[A] bathroom attendant [O] odd [S] bad']
multi_path: ['[O] odd [A] bathroom attendant [S] bad', '[A] bathroom attendant [O] odd [S] bad', '[O] odd [S] bad [A] bathroom attendant', '[A] bathroom attendant [S] bad [O] odd', '[S] bad [O] odd [A] bathroom attendant']

task, data: aste rest16
target: [('null', 'service', 'great', 'awesome')]
output: ['[A] mercedes restaurant [O] tasty [S] great', '[A] service [O] awesome [S] great']
sent: ['–', 'Mercedes', 'restaurant', 'is', 'so', 'tasty', ',', 'the', 'service', 'is', 'undeniably', 'awesome', '!']
counter: {('null', 'mercedes restaurant', 'great', 'tasty'): 5, ('null', 'service', 'great', 'awesome'): 5}
output quads: ['[A] mercedes restaurant [O] tasty [S] great', '[A] service [O] awesome [S] great']
multi_path: ['[O] tasty [A] mercedes restaurant [S] great [SSEP] [O] awesome [A] service [S] great', '[A] mercedes restaurant [O] tasty [S] great [SSEP] [A] service [O] awesome [S] great', '[O] tasty [S] great [A] mercedes restaurant [SSEP] [O] awesome [S] great [A] service', '[A] mercedes restaurant [S] great [O] tasty [SSEP] [A] service [S] great [O] awesome', '[S] great [O] tasty [A] mercedes restaurant [SSEP] [S] great [O] awesome [A] service']

task, data: aste rest16
target: [('null', 'catering', 'great', 'out of this world'), ('null', 'raouls chicken vegetable soup', 'great', 'rocks my world')]
output: ['[A] catering [O] out of this world [S] great', '[A] raouls chicken vegetable soup [O] rocks [S] great']
sent: ['The', 'catering', 'is', 'out', 'of', 'this', 'world', ',', 'and', 'Raouls', 'chicken', 'vegetable', 'soup', 'rocks', 'my', 'world', '!', '!', '!']
counter: {('null', 'catering', 'great', 'out of this world'): 5, ('null', 'raouls chicken vegetable soup', 'great', 'rocks'): 5}
output quads: ['[A] catering [O] out of this world [S] great', '[A] raouls chicken vegetable soup [O] rocks [S] great']
multi_path: ['[O] out of this world [A] catering [S] great [SSEP] [O] rocks [A] raouls chicken vegetable soup [S] great', '[A] catering [O] out of this world [S] great [SSEP] [A] raouls chicken vegetable soup [O] rocks [S] great', '[O] out of this world [S] great [A] catering [SSEP] [O] rocks [S] great [A] raouls chicken vegetable soup', '[A] catering [S] great [O] out of this world [SSEP] [A] raouls chicken vegetable soup [S] great [O] rocks', '[S] great [O] out of this world [A] catering [SSEP] [S] great [O] rocks [A] raouls chicken vegetable soup']

task, data: aste rest16
target: [('null', 'service', 'ok', 'mediocre')]
output: ['[A] service / quality [O] mediocre [S] bad']
sent: ['-', 'Mediocre', 'Service', '/', 'Quality']
counter: {('null', 'service / quality', 'bad', 'mediocre'): 3, ('null', 'service', 'bad', 'mediocre'): 2}
output quads: ['[A] service / quality [O] mediocre [S] bad']
multi_path: ['[O] mediocre [A] service / quality [S] bad', '[A] service [O] mediocre [S] bad', '[O] mediocre [S] bad [A] service / quality', '[A] service [S] bad [O] mediocre', '[S] bad [O] mediocre [A] service / quality']

task, data: aste rest16
target: [('null', 'menu', 'bad', 'high brow'), ('null', 'snooze', 'bad', 'excellent')]
output: ['[A] presentation of snooze [O] excellent [S] great']
sent: ['The', 'presentation', 'of', 'Snooze', 'is', 'excellent', 'and', 'it', 'is', 'one', 'of', 'those', 'places', 'that', 'you', 'feel', 'more', 'sophisticated', 'just', 'for', 'being', 'there', ';', 'but', 'peel', 'back', 'the', 'layers', 'and', 'you', 'have', 'an', 'overpriced', 'IHOP', 'with', 'a', 'high', 'brow', 'menu', '.']
counter: {('null', 'presentation of snooze', 'great', 'excellent'): 5, ('null', 'ihop', 'bad', 'overpriced'): 2, ('null', 'menu', 'bad', 'high brow'): 2}
output quads: ['[A] presentation of snooze [O] excellent [S] great']
multi_path: ['[O] excellent [A] presentation of snooze [S] great', '[A] presentation of snooze [O] excellent [S] great [SSEP] [A] ihop [O] overpriced [S] bad [SSEP] [A] menu [O] high brow [S] bad', '[O] excellent [S] great [A] presentation of snooze', '[A] presentation of snooze [S] great [O] excellent [SSEP] [A] ihop [S] bad [O] overpriced [SSEP] [A] menu [S] bad [O] high brow', '[S] great [O] excellent [A] presentation of snooze']

task, data: aste rest16
target: [('null', 'juice', 'bad', 'small')]
output: ['[A] glass [O] skinny [S] bad', '[A] glass [O] tall [S] bad']
sent: ['They', 'serve', 'it', 'in', 'a', 'tall', ',', 'skinny', 'hour-glass', 'shaped', 'glass', 'to', 'disguise', 'the', 'fact', 'that', 'you', 'a', 'getting', 'a', 'small', 'juice', 'at', 'the', 'price', 'of', 'a', 'half', 'gallon', 'in', 'a', 'supermarket', '.']
counter: {('null', 'glass', 'bad', 'tall'): 3, ('null', 'glass', 'bad', 'skinny'): 3, ('null', 'juice', 'bad', 'small'): 2}
output quads: ['[A] glass [O] tall [S] bad', '[A] glass [O] skinny [S] bad']
multi_path: ['[O] tall [A] glass [S] bad [SSEP] [O] skinny [A] glass [S] bad', '[A] juice [O] small [S] bad', '[O] tall [S] bad [A] glass [SSEP] [O] skinny [S] bad [A] glass', '[A] juice [S] bad [O] small', '[S] bad [O] tall [A] glass [SSEP] [S] bad [O] skinny [A] glass']

task, data: aste rest16
target: [('null', 'pancakes', 'bad', 'should be larger')]
output: ['[A] pancakes [O] larger [S] bad']
sent: ['The', 'pancakes', 'should', 'be', 'larger', '(', 'at', 'least', '8', "''", ')', 'to', 'justify', 'the', 'expense', 'even', 'with', 'the', 'unique', 'offerings', '.']
counter: {('null', 'pancakes', 'bad', 'larger'): 5}
output quads: ['[A] pancakes [O] larger [S] bad']
multi_path: ['[O] larger [A] pancakes [S] bad', '[A] pancakes [O] larger [S] bad', '[O] larger [S] bad [A] pancakes', '[A] pancakes [S] bad [O] larger', '[S] bad [O] larger [A] pancakes']

task, data: aste rest16
target: [('null', 'pancakes', 'bad', 'small')]
output: ['[A] breakfast burrito [O] breakfast burrito [S] bad', '[A] iced tea [O] iced tea [S] bad', '[A] orange juice [O] orange juice [S] bad', '[A] pancakes [O] small [S] bad']
sent: ['In', 'the', 'end', 'our', 'check', 'came', 'to', '$', '27', 'for', '4', 'small', 'pancakes', ',', 'a', 'breakfast', 'burrito', ',', 'an', 'orange', 'juice', 'and', 'an', 'iced', 'tea', '(', 'I', 'had', 'water', ')', '.']
counter: {('null', 'pancakes', 'bad', 'small'): 5, ('null', 'breakfast burrito', 'bad', 'breakfast burrito'): 3, ('null', 'orange juice', 'bad', 'orange juice'): 3, ('null', 'iced tea', 'bad', 'iced tea'): 4, ('null', 'breakfast burrito', 'bad', 'breakfast'): 2, ('null', 'orange juice', 'bad', 'small'): 2, ('null', 'iced tea', 'bad', 'iced'): 1}
output quads: ['[A] pancakes [O] small [S] bad', '[A] breakfast burrito [O] breakfast burrito [S] bad', '[A] orange juice [O] orange juice [S] bad', '[A] iced tea [O] iced tea [S] bad']
multi_path: ['[O] small [A] pancakes [S] bad [SSEP] [O] breakfast burrito [A] breakfast burrito [S] bad [SSEP] [O] orange juice [A] orange juice [S] bad [SSEP] [O] iced tea [A] iced tea [S] bad', '[A] pancakes [O] small [S] bad [SSEP] [A] breakfast burrito [O] breakfast [S] bad [SSEP] [A] orange juice [O] small [S] bad [SSEP] [A] iced tea [O] iced [S] bad', '[O] small [S] bad [A] pancakes [SSEP] [O] breakfast burrito [S] bad [A] breakfast burrito [SSEP] [O] orange juice [S] bad [A] orange juice [SSEP] [O] iced tea [S] bad [A] iced tea', '[A] pancakes [S] bad [O] small [SSEP] [A] breakfast burrito [S] bad [O] breakfast [SSEP] [A] orange juice [S] bad [O] small [SSEP] [A] iced tea [S] bad [O] iced tea', '[S] bad [O] small [A] pancakes [SSEP] [S] bad [O] breakfast burrito [A] breakfast burrito [SSEP] [S] bad [O] orange juice [A] orange juice [SSEP] [S] bad [O] iced tea [A] iced tea']

task, data: aste rest16
target: [('null', "ray's boathouse", 'great', 'exceeded my expectations')]
output: ['[A] dinner [O] exceeded [S] great']
sent: ['–', 'I', 'am', 'exceedingly', 'pleased', 'to', 'report', 'that', 'my', 'dinner', 'at', 'Ray', "'s", 'Boathouse', 'last', 'Friday', 'completely', 'exceeded', 'my', 'expectations', '.']
counter: {('null', 'dinner', 'great', 'exceeded'): 3, ('null', 'dinner', 'great', 'exceeded my expectations'): 2}
output quads: ['[A] dinner [O] exceeded [S] great']
multi_path: ['[O] exceeded [A] dinner [S] great', '[A] dinner [O] exceeded my expectations [S] great', '[O] exceeded [S] great [A] dinner', '[A] dinner [S] great [O] exceeded my expectations', '[S] great [O] exceeded [A] dinner']

task, data: aste rest16
target: [('null', "ray's", 'great', 'happy surprise')]
output: ['[A] views [O] happy surprise [S] great']
sent: ['Imagine', 'my', 'happy', 'surprise', 'upon', 'finding', 'that', 'the', 'views', 'are', 'only', 'the', 'third-best', 'thing', 'about', 'Ray', "'s", '!']
counter: {('null', 'views', 'great', 'happy surprise'): 4, ('null', 'views', 'great', 'happy'): 1}
output quads: ['[A] views [O] happy surprise [S] great']
multi_path: ['[O] happy surprise [A] views [S] great', '[A] views [O] happy surprise [S] great', '[O] happy surprise [S] great [A] views', '[A] views [S] great [O] happy surprise', '[S] great [O] happy [A] views']

task, data: aste rest16
target: [('null', 'brooke', 'great', 'lovely'), ('null', 'brooke', 'great', 'quickly')]
output: ['[A] server [O] lovely [S] great']
sent: ['To', 'start', 'things', 'off', ',', 'our', 'lovely', 'server', 'Brooke', 'was', 'quickly', 'on', 'hand', 'to', 'take', 'my', 'drink', 'order', '.']
counter: {('null', 'server', 'great', 'lovely'): 5}
output quads: ['[A] server [O] lovely [S] great']
multi_path: ['[O] lovely [A] server [S] great', '[A] server [O] lovely [S] great', '[O] lovely [S] great [A] server', '[A] server [S] great [O] lovely', '[S] great [O] lovely [A] server']

task, data: aste rest16
target: [('null', 'butter sauce', 'great', 'sublime'), ('null', 'manila clams', 'great', 'fantastic'), ('null', 'soy dressing', 'great', 'tasty'), ('null', 'white gulf prawns', 'great', 'enormous')]
output: ['[A] assortment of enormous white gulf prawns [O] beautiful [S] great', '[A] dungeness crab [O] tiny [S] great', '[A] manila clams seasoned with dill [O] fantastic [S] great', '[A] scallops in a tasty soy dressing [O] tasty [S] great', '[A] shilshole sampler [O] beautiful [S] great', '[A] smoked albacore tuna [O] beautiful [S] great']
sent: ['My', 'party', 'of', 'two', 'was', 'feeling', 'particularly', 'ambitious', ',', 'and', 'we', 'splurged', 'on', 'the', 'Shilshole', 'Sampler', '...', 'a', 'beautiful', 'assortment', 'of', 'enormous', 'white', 'gulf', 'prawns', ',', 'smoked', 'albacore', 'tuna', ',', 'Ray', "'s", 'fantastic', 'manila', 'clams', 'seasoned', 'with', 'dill', ',', 'scallops', 'in', 'a', 'tasty', 'soy', 'dressing', ',', 'and', 'a', 'tiny', 'pile', 'of', 'Dungeness', 'crab', 'atop', 'a', 'sublime', 'butter', 'sauce', '.']
counter: {('null', 'shilshole sampler', 'great', 'beautiful'): 5, ('null', 'assortment of enormous white gulf prawns', 'great', 'beautiful'): 5, ('null', 'smoked albacore tuna', 'great', 'sublime'): 1, ('null', 'manila clams seasoned with dill', 'great', 'fantastic'): 3, ('null', 'scallops in a tasty soy dressing', 'great', 'tasty'): 5, ('null', 'dungeness crab', 'great', 'tiny'): 3, ('null', 'smoked albacore tuna', 'great', 'beautiful'): 4, ('null', "ray's fantastic manila clams seasoned with dill", 'great', 'fantastic'): 2, ('null', 'pile of dungeness crab', 'great', 'tiny'): 2}
output quads: ['[A] shilshole sampler [O] beautiful [S] great', '[A] assortment of enormous white gulf prawns [O] beautiful [S] great', '[A] manila clams seasoned with dill [O] fantastic [S] great', '[A] scallops in a tasty soy dressing [O] tasty [S] great', '[A] dungeness crab [O] tiny [S] great', '[A] smoked albacore tuna [O] beautiful [S] great']
multi_path: ['[O] beautiful [A] shilshole sampler [S] great [SSEP] [O] beautiful [A] assortment of enormous white gulf prawns [S] great [SSEP] [O] sublime [A] smoked albacore tuna [S] great [SSEP] [O] fantastic [A] manila clams seasoned with dill [S] great [SSEP] [O] tasty [A] scallops in a tasty soy dressing [S] great [SSEP] [O] tiny [A] dungeness crab [S] great', "[A] shilshole sampler [O] beautiful [S] great [SSEP] [A] assortment of enormous white gulf prawns [O] beautiful [S] great [SSEP] [A] smoked albacore tuna [O] beautiful [S] great [SSEP] [A] ray's fantastic manila clams seasoned with dill [O] fantastic [S] great [SSEP] [A] scallops in a tasty soy dressing [O] tasty [S] great [SSEP] [A] pile of dungeness crab [O] tiny [S] great", '[O] beautiful [S] great [A] shilshole sampler [SSEP] [O] beautiful [S] great [A] assortment of enormous white gulf prawns [SSEP] [O] beautiful [S] great [A] smoked albacore tuna [SSEP] [O] fantastic [S] great [A] manila clams seasoned with dill [SSEP] [O] tasty [S] great [A] scallops in a tasty soy dressing [SSEP] [O] tiny [S] great [A] dungeness crab', "[A] shilshole sampler [S] great [O] beautiful [SSEP] [A] assortment of enormous white gulf prawns [S] great [O] beautiful [SSEP] [A] smoked albacore tuna [S] great [O] beautiful [SSEP] [A] ray's fantastic manila clams seasoned with dill [S] great [O] fantastic [SSEP] [A] scallops in a tasty soy dressing [S] great [O] tasty [SSEP] [A] pile of dungeness crab [S] great [O] tiny", '[S] great [O] beautiful [A] shilshole sampler [SSEP] [S] great [O] beautiful [A] assortment of enormous white gulf prawns [SSEP] [S] great [O] beautiful [A] smoked albacore tuna [SSEP] [S] great [O] fantastic [A] manila clams seasoned with dill [SSEP] [S] great [O] tasty [A] scallops in a tasty soy dressing [SSEP] [S] great [O] tiny [A] dungeness crab']

task, data: aste rest16
target: [('null', 'seared alaskan sea scallops', 'great', 'enjoyed')]
output: ['[A] artichoke hearts [O] enjoyed [S] great', '[A] chard [O] enjoyed [S] great', '[A] fennel [O] enjoyed [S] great', '[A] pecorino toscano [O] enjoyed [S] great', '[A] seared alaskan sea scallops [O] enjoyed [S] great']
sent: ['For', 'my', 'entr', '&', 'eacute', ';', 'e', ',', 'I', 'completely', 'enjoyed', 'the', 'seared', 'Alaskan', 'sea', 'scallops', 'complemented', 'by', 'chard', ',', 'artichoke', 'hearts', ',', 'fennel', ',', 'and', 'pecorino', 'toscano', '.']
counter: {('null', 'seared alaskan sea scallops', 'great', 'enjoyed'): 5, ('null', 'artichoke hearts', 'great', 'enjoyed'): 5, ('null', 'fennel', 'great', 'enjoyed'): 5, ('null', 'pecorino toscano', 'great', 'enjoyed'): 5, ('null', 'chard', 'great', 'enjoyed'): 3}
output quads: ['[A] seared alaskan sea scallops [O] enjoyed [S] great', '[A] artichoke hearts [O] enjoyed [S] great', '[A] fennel [O] enjoyed [S] great', '[A] pecorino toscano [O] enjoyed [S] great', '[A] chard [O] enjoyed [S] great']
multi_path: ['[O] enjoyed [A] seared alaskan sea scallops [S] great [SSEP] [O] enjoyed [A] artichoke hearts [S] great [SSEP] [O] enjoyed [A] fennel [S] great [SSEP] [O] enjoyed [A] pecorino toscano [S] great', '[A] seared alaskan sea scallops [O] enjoyed [S] great [SSEP] [A] chard [O] enjoyed [S] great [SSEP] [A] artichoke hearts [O] enjoyed [S] great [SSEP] [A] fennel [O] enjoyed [S] great [SSEP] [A] pecorino toscano [O] enjoyed [S] great', '[O] enjoyed [S] great [A] seared alaskan sea scallops [SSEP] [O] enjoyed [S] great [A] chard [SSEP] [O] enjoyed [S] great [A] artichoke hearts [SSEP] [O] enjoyed [S] great [A] fennel [SSEP] [O] enjoyed [S] great [A] pecorino toscano', '[A] seared alaskan sea scallops [S] great [O] enjoyed [SSEP] [A] artichoke hearts [S] great [O] enjoyed [SSEP] [A] fennel [S] great [O] enjoyed [SSEP] [A] pecorino toscano [S] great [O] enjoyed', '[S] great [O] enjoyed [A] seared alaskan sea scallops [SSEP] [S] great [O] enjoyed [A] chard [SSEP] [S] great [O] enjoyed [A] artichoke hearts [SSEP] [S] great [O] enjoyed [A] fennel [SSEP] [S] great [O] enjoyed [A] pecorino toscano']

task, data: aste rest16
target: [('null', 'creamed washington russet potatoes', 'great', 'delectable'), ('null', 'green beans', 'great', 'crisp'), ('null', 'grilled alaskan king salmon', 'great', 'enjoyed')]
output: ['[A] grilled alaskan king salmon with crisp green beans [O] enjoyed [S] great']
sent: ['My', 'friend', 'enjoyed', 'the', 'grilled', 'Alaskan', 'King', 'Salmon', 'with', 'delectable', 'creamed', 'Washington', 'russet', 'potatoes', 'and', 'crisp', 'green', 'beans', '.']
counter: {('null', 'grilled alaskan king salmon with crisp green beans', 'great', 'enjoyed'): 4, ('null', 'creamed washington russet potatoes and crisp green beans', 'great', 'delectable'): 2, ('null', 'grilled alaskan king salmon with delectable creamed washington russet potatoes and crisp green beans', 'great', 'enjoyed'): 1}
output quads: ['[A] grilled alaskan king salmon with crisp green beans [O] enjoyed [S] great']
multi_path: ['[O] enjoyed [A] grilled alaskan king salmon with crisp green beans [S] great [SSEP] [O] delectable [A] creamed washington russet potatoes and crisp green beans [S] great', '[A] grilled alaskan king salmon with crisp green beans [O] enjoyed [S] great', '[O] enjoyed [S] great [A] grilled alaskan king salmon with delectable creamed washington russet potatoes and crisp green beans', '[A] grilled alaskan king salmon with crisp green beans [S] great [O] enjoyed', '[S] great [O] enjoyed [A] grilled alaskan king salmon with crisp green beans [SSEP] [S] great [O] delectable [A] creamed washington russet potatoes and crisp green beans']

task, data: aste rest16
target: [('null', 'plate', 'great', 'superb')]
output: ['[A] items [O] superb [S] great']
sent: ['I', 'had', 'a', 'taste', 'of', 'all', 'three', 'items', 'on', 'her', 'plate', ',', 'and', 'they', 'were', 'superb', '.']
counter: {('null', 'items', 'great', 'superb'): 5}
output quads: ['[A] items [O] superb [S] great']
multi_path: ['[O] superb [A] items [S] great', '[A] items [O] superb [S] great', '[O] superb [S] great [A] items', '[A] items [S] great [O] superb', '[S] great [O] superb [A] items']

task, data: aste rest16
target: [('null', "ray's", 'ok', 'appropriate'), ('null', 'server', 'great', 'attentive')]
output: ["[A] ray's [O] appropriate [S] bad", '[A] server [O] attentive [S] great']
sent: ['Our', 'server', 'continued', 'to', 'be', 'attentive', 'throughout', 'the', 'night', ',', 'but', 'I', 'did', 'remain', 'puzzled', 'by', 'one', 'issue', ':', 'Who', 'thinks', 'that', 'Ray', "'s", 'is', 'an', 'appropriate', 'place', 'to', 'take', 'young', 'children', 'for', 'dinner', '?']
counter: {('null', 'server', 'great', 'attentive'): 5, ('null', "ray's", 'bad', 'appropriate'): 5}
output quads: ['[A] server [O] attentive [S] great', "[A] ray's [O] appropriate [S] bad"]
multi_path: ["[O] attentive [A] server [S] great [SSEP] [O] appropriate [A] ray's [S] bad", "[A] server [O] attentive [S] great [SSEP] [A] ray's [O] appropriate [S] bad", "[O] attentive [S] great [A] server [SSEP] [O] appropriate [S] bad [A] ray's", "[A] server [S] great [O] attentive [SSEP] [A] ray's [S] bad [O] appropriate", "[S] great [O] attentive [A] server [SSEP] [S] bad [O] appropriate [A] ray's"]

pred labels count Counter({1: 185, 2: 105, 3: 22, 4: 7, 5: 5, 7: 1, 6: 1})
gold  [O] good [A] sushi [S] great
pred  [A] sushi [O] good [S] great

gold  [O] not the biggest [A] portions [S] ok [SSEP] [O] adequate [A] portions [S] ok
pred  [A] portions [O] not the biggest [S] great [SSEP] [A] portions [O] adequate [S] great

gold  [O] must [A] green tea creme brulee [S] great
pred  [A] green tea creme brulee [O] must [S] great

gold  [O] great [A] sushi [S] great [SSEP] [O] better [A] service [S] great
pred  [A] sushi [O] great [S] great [SSEP] [A] service [O] better [S] great

gold  [O] accomodating [A] staff [S] great
pred  [A] staff [O] accomodating [S] great

gold  [O] belligerent [A] owner [S] bad
pred  [A] owner [O] belligerent [S] bad

gold  [O] good [A] food [S] great
pred  [A] food [O] good [S] great

gold  [O] delicious [A] meal [S] great
pred  [A] meal [O] delicious [S] great

gold  [O] friendly [A] staff [S] great
pred  [A] staff [O] friendly [S] great

gold  [O] great [A] onion rings [S] great
pred  [A] onion rings [O] great [S] great

number of gold spans: 514, predicted spans: 527, hit: 386
aste rest16 {'precision': 73.24478178368122, 'recall': 75.09727626459144, 'f1': 74.15946205571565}
Total examples = 582
Total examples = 582
Ori sent size: 582
Input size: 2910 2910
Examples:
[['tasd', ':', 'rest15', ':', 'love', 'al', 'di', 'la', '[A]', '[C]', '[S]'], ['tasd', ':', 'rest15', ':', 'love', 'al', 'di', 'la', '[A]', '[S]', '[C]'], ['tasd', ':', 'rest15', ':', 'love', 'al', 'di', 'la', '[C]', '[S]', '[A]'], ['tasd', ':', 'rest15', ':', 'love', 'al', 'di', 'la', '[C]', '[A]', '[S]'], ['tasd', ':', 'rest15', ':', 'love', 'al', 'di', 'la', '[S]', '[C]', '[A]'], ['tasd', ':', 'rest15', ':', 'i', 'recommend', 'this', 'place', 'to', 'everyone', '.', '[A]', '[C]', '[S]'], ['tasd', ':', 'rest15', ':', 'i', 'recommend', 'this', 'place', 'to', 'everyone', '.', '[A]', '[S]', '[C]'], ['tasd', ':', 'rest15', ':', 'i', 'recommend', 'this', 'place', 'to', 'everyone', '.', '[C]', '[S]', '[A]'], ['tasd', ':', 'rest15', ':', 'i', 'recommend', 'this', 'place', 'to', 'everyone', '.', '[C]', '[A]', '[S]'], ['tasd', ':', 'rest15', ':', 'i', 'recommend', 'this', 'place', 'to', 'everyone', '.', '[S]', '[C]', '[A]']]
['[A] al di la [C] restaurant general [S] great', '[A] al di la [S] great [C] restaurant general', '[C] restaurant general [S] great [A] al di la', '[C] restaurant general [A] al di la [S] great', '[S] great [C] restaurant general [A] al di la', '[A] place [C] restaurant general [S] great', '[A] place [S] great [C] restaurant general', '[C] restaurant general [S] great [A] place', '[C] restaurant general [A] place [S] great', '[S] great [C] restaurant general [A] place']
task, data: tasd rest15
target: [('food quality', 'dog', 'great', 'null'), ('restaurant miscellaneous', 'establishment', 'great', 'null')]
output: ['[A] dog [S] great [C] service general', '[A] establishment [S] great [C] restaurant miscellaneous']
sent: ['An', 'awesome', 'organic', 'dog', ',', 'and', 'a', 'conscious', 'eco', 'friendly', 'establishment', '.']
counter: {('service general', 'dog', 'great', 'null'): 5, ('restaurant general', 'establishment', 'great', 'null'): 2, ('restaurant miscellaneous', 'establishment', 'great', 'null'): 3}
output quads: ['[A] dog [S] great [C] service general', '[A] establishment [S] great [C] restaurant miscellaneous']
multi_path: ['[A] dog [C] service general [S] great [SSEP] [A] establishment [C] restaurant general [S] great', '[A] dog [S] great [C] service general [SSEP] [A] establishment [S] great [C] restaurant general', '[C] service general [S] great [A] dog [SSEP] [C] restaurant miscellaneous [S] great [A] establishment', '[C] service general [A] dog [S] great [SSEP] [C] restaurant miscellaneous [A] establishment [S] great', '[S] great [C] service general [A] dog [SSEP] [S] great [C] restaurant miscellaneous [A] establishment']

task, data: tasd rest15
target: [('food quality', 'null', 'great', 'null')]
output: ['[A] hot dogs [S] great [C] food quality']
sent: ['One', 'of', 'the', 'best', 'hot', 'dogs', 'I', 'have', 'ever', 'eaten', '.']
counter: {('food quality', 'hot dogs', 'great', 'null'): 5}
output quads: ['[A] hot dogs [S] great [C] food quality']
multi_path: ['[A] hot dogs [C] food quality [S] great', '[A] hot dogs [S] great [C] food quality', '[C] food quality [S] great [A] hot dogs', '[C] food quality [A] hot dogs [S] great', '[S] great [C] food quality [A] hot dogs']

task, data: tasd rest15
target: [('restaurant general', 'null', 'great', 'null')]
output: ['[A] null [S] bad [C] restaurant miscellaneous']
sent: ['Run', 'don', "'t", 'walk', '.']
counter: {('restaurant miscellaneous', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] restaurant miscellaneous']
multi_path: ['[A] it [C] restaurant miscellaneous [S] bad', '[A] it [S] bad [C] restaurant miscellaneous', '[C] restaurant miscellaneous [S] bad [A] it', '[C] restaurant miscellaneous [A] it [S] bad', '[S] bad [C] restaurant miscellaneous [A] it']

task, data: tasd rest15
target: [('ambience general', 'restaurant', 'great', 'null')]
output: ['[A] restaurant [S] great [C] restaurant general']
sent: ['I', 'was', 'visiting', 'New', 'York', 'City', 'with', 'a', 'friend', 'and', 'we', 'discovered', 'this', 'really', 'warm', 'and', 'inviting', 'restaurant', '.']
counter: {('restaurant general', 'restaurant', 'great', 'null'): 5}
output quads: ['[A] restaurant [S] great [C] restaurant general']
multi_path: ['[A] restaurant [C] restaurant general [S] great', '[A] restaurant [S] great [C] restaurant general', '[C] restaurant general [S] great [A] restaurant', '[C] restaurant general [A] restaurant [S] great', '[S] great [C] restaurant general [A] restaurant']

task, data: tasd rest15
target: [('food style_options', 'half/half pizza', 'great', 'null')]
output: ['[A] buffalo [S] great [C] food style_options', '[A] half/half pizza [S] great [C] food quality']
sent: ['We', 'had', 'half', '/half', 'pizza', ',', 'mine', 'was', 'eggplant', 'and', 'my', 'friend', 'had', 'the', 'buffalo', 'and', 'it', 'was', 'sooo', 'huge', 'for', 'a', 'small', 'size', 'pizza', '!']
counter: {('food quality', 'half/half pizza', 'great', 'null'): 5, ('food style_options', 'buffalo', 'great', 'null'): 5}
output quads: ['[A] half/half pizza [S] great [C] food quality', '[A] buffalo [S] great [C] food style_options']
multi_path: ['[A] half/half pizza [C] food quality [S] great [SSEP] [A] buffalo [C] food style_options [S] great', '[A] half/half pizza [S] great [C] food quality [SSEP] [A] buffalo [S] great [C] food style_options', '[C] food quality [S] great [A] half/half pizza [SSEP] [C] food style_options [S] great [A] buffalo', '[C] food quality [A] half/half pizza [S] great [SSEP] [C] food style_options [A] buffalo [S] great', '[S] great [C] food quality [A] half/half pizza [SSEP] [S] great [C] food style_options [A] buffalo']

task, data: tasd rest15
target: [('restaurant general', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] restaurant miscellaneous']
sent: ['We', 'had', 'fun', 'eating', 'in', 'there', ',', 'we', 'were', 'there', 'like', 'around', '3', 'a', '.m', '.', 'in', 'the', 'morning', '!']
counter: {('restaurant miscellaneous', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] restaurant miscellaneous']
multi_path: ['[A] it [C] restaurant miscellaneous [S] great', '[A] it [S] great [C] restaurant miscellaneous', '[C] restaurant miscellaneous [S] great [A] it', '[C] restaurant miscellaneous [A] it [S] great', '[S] great [C] restaurant miscellaneous [A] it']

task, data: tasd rest15
target: [('ambience general', 'space', 'bad', 'null')]
output: ['[A] space [S] great [C] ambience general']
sent: ['The', 'space', 'kind', 'of', 'feels', 'like', 'an', 'Alice', 'in', 'Wonderland', 'setting', ',', 'without', 'it', 'trying', 'to', 'be', 'that', '.']
counter: {('ambience general', 'space', 'great', 'null'): 5}
output quads: ['[A] space [S] great [C] ambience general']
multi_path: ['[A] space [C] ambience general [S] great', '[A] space [S] great [C] ambience general', '[C] ambience general [S] great [A] space', '[C] ambience general [A] space [S] great', '[S] great [C] ambience general [A] space']

task, data: tasd rest15
target: [('food prices', 'meal', 'great', 'null'), ('food quality', 'meal', 'great', 'null')]
output: ['[A] meal [S] great [C] food quality', '[A] null [S] great [C] restaurant prices']
sent: ['I', 'paid', 'just', 'about', '$60', 'for', 'a', 'good', 'meal', ',', 'though', ':', ')']
counter: {('food quality', 'meal', 'great', 'null'): 5, ('restaurant prices', 'null', 'great', 'null'): 5}
output quads: ['[A] meal [S] great [C] food quality', '[A] null [S] great [C] restaurant prices']
multi_path: ['[A] meal [C] food quality [S] great [SSEP] [A] it [C] restaurant prices [S] great', '[A] meal [S] great [C] food quality [SSEP] [A] it [S] great [C] restaurant prices', '[C] food quality [S] great [A] meal [SSEP] [C] restaurant prices [S] great [A] it', '[C] food quality [A] meal [S] great [SSEP] [C] restaurant prices [A] it [S] great', '[S] great [C] food quality [A] meal [SSEP] [S] great [C] restaurant prices [A] it']

task, data: tasd rest15
target: [('food quality', 'rolls', 'great', 'null'), ('food quality', 'sashimi', 'great', 'null'), ('food style_options', 'rolls', 'great', 'null')]
output: ['[A] rolls [S] great [C] food quality', '[A] sashimi [S] great [C] food quality']
sent: ['The', 'sashimi', 'is', 'always', 'fresh', 'and', 'the', 'rolls', 'are', 'innovative', 'and', 'delicious', '.']
counter: {('food quality', 'sashimi', 'great', 'null'): 5, ('food quality', 'rolls', 'great', 'null'): 5}
output quads: ['[A] sashimi [S] great [C] food quality', '[A] rolls [S] great [C] food quality']
multi_path: ['[A] sashimi [C] food quality [S] great [SSEP] [A] rolls [C] food quality [S] great', '[A] sashimi [S] great [C] food quality [SSEP] [A] rolls [S] great [C] food quality', '[C] food quality [S] great [A] sashimi [SSEP] [C] food quality [S] great [A] rolls', '[C] food quality [A] sashimi [S] great [SSEP] [C] food quality [A] rolls [S] great', '[S] great [C] food quality [A] sashimi [SSEP] [S] great [C] food quality [A] rolls']

task, data: tasd rest15
target: [('service general', 'service', 'great', 'null')]
output: ['[A] rice [S] bad [C] food quality', '[A] service [S] great [C] service general']
sent: ['Have', 'never', 'had', 'a', 'problem', 'with', 'service', 'save', 'a', 'missing', 'rice', 'once', '.']
counter: {('service general', 'service', 'great', 'null'): 5, ('food quality', 'rice', 'bad', 'null'): 5}
output quads: ['[A] service [S] great [C] service general', '[A] rice [S] bad [C] food quality']
multi_path: ['[A] service [C] service general [S] great [SSEP] [A] rice [C] food quality [S] bad', '[A] service [S] great [C] service general [SSEP] [A] rice [S] bad [C] food quality', '[C] service general [S] great [A] service [SSEP] [C] food quality [S] bad [A] rice', '[C] service general [A] service [S] great [SSEP] [C] food quality [A] rice [S] bad', '[S] great [C] service general [A] service [SSEP] [S] bad [C] food quality [A] rice']

task, data: tasd rest15
target: [('food quality', 'sushi', 'great', 'null')]
output: ['[A] place [S] bad [C] restaurant miscellaneous']
sent: ['This', 'place', 'has', 'ruined', 'me', 'for', 'neighborhood', 'sushi', '.']
counter: {('restaurant miscellaneous', 'place', 'bad', 'null'): 5}
output quads: ['[A] place [S] bad [C] restaurant miscellaneous']
multi_path: ['[A] place [C] restaurant miscellaneous [S] bad', '[A] place [S] bad [C] restaurant miscellaneous', '[C] restaurant miscellaneous [S] bad [A] place', '[C] restaurant miscellaneous [A] place [S] bad', '[S] bad [C] restaurant miscellaneous [A] place']

task, data: tasd rest15
target: [('food quality', 'null', 'great', 'null'), ('food style_options', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] ambience general']
sent: ['Creative', ',', 'consistent', ',', 'fresh', '.']
counter: {('ambience general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] ambience general']
multi_path: ['[A] it [C] ambience general [S] great', '[A] it [S] great [C] ambience general', '[C] ambience general [S] great [A] it', '[C] ambience general [A] it [S] great', '[S] great [C] ambience general [A] it']

task, data: tasd rest15
target: [('location general', 'place', 'ok', 'null'), ('restaurant general', 'place', 'great', 'null')]
output: ['[A] place [S] bad [C] ambience general', '[A] place [S] great [C] restaurant general']
sent: ['The', 'place', 'is', 'a', 'bit', 'hidden', 'away', ',', 'but', 'once', 'you', 'get', 'there', ',', 'it', "'s", 'all', 'worth', 'it', '.']
counter: {('ambience general', 'place', 'bad', 'null'): 5, ('restaurant general', 'place', 'great', 'null'): 5}
output quads: ['[A] place [S] bad [C] ambience general', '[A] place [S] great [C] restaurant general']
multi_path: ['[A] place [C] ambience general [S] bad [SSEP] [A] place [C] restaurant general [S] great', '[A] place [S] bad [C] ambience general [SSEP] [A] place [S] great [C] restaurant general', '[C] ambience general [S] bad [A] place [SSEP] [C] restaurant general [S] great [A] place', '[C] ambience general [A] place [S] bad [SSEP] [C] restaurant general [A] place [S] great', '[S] bad [C] ambience general [A] place [SSEP] [S] great [C] restaurant general [A] place']

task, data: tasd rest15
target: [('food quality', 'food', 'great', 'null'), ('restaurant general', 'null', 'great', 'null')]
output: ['[A] food [S] great [C] food quality']
sent: ['not', 'only', 'is', 'the', 'food']
counter: {('food quality', 'food', 'great', 'null'): 5}
output quads: ['[A] food [S] great [C] food quality']
multi_path: ['[A] food [C] food quality [S] great', '[A] food [S] great [C] food quality', '[C] food quality [S] great [A] food', '[C] food quality [A] food [S] great', '[S] great [C] food quality [A] food']

task, data: tasd rest15
target: [('restaurant miscellaneous', 'place', 'great', 'null')]
output: ['[A] place [S] ok [C] restaurant miscellaneous']
sent: ['Place', 'is', 'open', 'till', 'late', ',', 'no', 'dress', 'code', '.']
counter: {('restaurant miscellaneous', 'place', 'ok', 'null'): 5}
output quads: ['[A] place [S] ok [C] restaurant miscellaneous']
multi_path: ['[A] place [C] restaurant miscellaneous [S] ok', '[A] place [S] ok [C] restaurant miscellaneous', '[C] restaurant miscellaneous [S] ok [A] place', '[C] restaurant miscellaneous [A] place [S] ok', '[S] ok [C] restaurant miscellaneous [A] place']

task, data: tasd rest15
target: [('ambience general', 'space', 'ok', 'null'), ('food quality', 'indo-chinese food', 'great', 'null'), ('restaurant miscellaneous', 'space', 'bad', 'null')]
output: ['[A] indo-chinese food [S] great [C] food quality', '[A] null [S] bad [C] service general']
sent: ['The', 'space', 'is', 'limited', 'so', 'be', 'prepared', 'to', 'wait', 'up', 'to', '45', 'minutes', '-', '1', 'hour', ',', 'but', 'be', 'richly', 'rewarded', 'when', 'you', 'savor', 'the', 'delicious', 'indo-chinese', 'food', '.']
counter: {('service general', 'null', 'bad', 'null'): 5, ('food quality', 'indo-chinese food', 'great', 'null'): 5}
output quads: ['[A] null [S] bad [C] service general', '[A] indo-chinese food [S] great [C] food quality']
multi_path: ['[A] it [C] service general [S] bad [SSEP] [A] indo-chinese food [C] food quality [S] great', '[A] it [S] bad [C] service general [SSEP] [A] indo-chinese food [S] great [C] food quality', '[C] service general [S] bad [A] it [SSEP] [C] food quality [S] great [A] indo-chinese food', '[C] service general [A] it [S] bad [SSEP] [C] food quality [A] indo-chinese food [S] great', '[S] bad [C] service general [A] it [SSEP] [S] great [C] food quality [A] indo-chinese food']

task, data: tasd rest15
target: [('restaurant general', 'place', 'great', 'null'), ('restaurant prices', 'place', 'great', 'null')]
output: ['[A] place [S] great [C] ambience general', '[A] place [S] great [C] restaurant general']
sent: ['im', 'not', 'necessarily', 'fanatical', 'about', 'this', 'place', ',', 'but', 'it', 'was', 'a', 'fun', 'time', 'for', 'low', 'pirces', '.']
counter: {('restaurant general', 'place', 'great', 'null'): 5, ('ambience general', 'place', 'great', 'null'): 3}
output quads: ['[A] place [S] great [C] restaurant general', '[A] place [S] great [C] ambience general']
multi_path: ['[A] place [C] restaurant general [S] great [SSEP] [A] place [C] ambience general [S] great', '[A] place [S] great [C] restaurant general', '[C] restaurant general [S] great [A] place [SSEP] [C] ambience general [S] great [A] place', '[C] restaurant general [A] place [S] great', '[S] great [C] restaurant general [A] place [SSEP] [S] great [C] ambience general [A] place']

task, data: tasd rest15
target: [('restaurant general', 'restaraunt', 'ok', 'null')]
output: ['[A] place [S] great [C] restaurant miscellaneous']
sent: ['its', 'just', 'a', 'fun', 'place', 'to', 'go', ',', 'not', 'a', 'five', 'star', 'restaraunt', '.']
counter: {('restaurant miscellaneous', 'place', 'great', 'null'): 5}
output quads: ['[A] place [S] great [C] restaurant miscellaneous']
multi_path: ['[A] place [C] restaurant miscellaneous [S] great', '[A] place [S] great [C] restaurant miscellaneous', '[C] restaurant miscellaneous [S] great [A] place', '[C] restaurant miscellaneous [A] place [S] great', '[S] great [C] restaurant miscellaneous [A] place']

task, data: tasd rest15
target: [('food quality', 'null', 'great', 'null')]
output: ['[A] pizza [S] great [C] food quality']
sent: ['I', 'wasn', "'t", 'here', 'for', 'the', 'pizza', 'so', 'I', 'can', "'t", 'comment', 'on', 'that', 'yet', 'but', 'what', 'I', 'had', 'was', 'very', 'good', '.']
counter: {('food quality', 'pizza', 'great', 'null'): 5}
output quads: ['[A] pizza [S] great [C] food quality']
multi_path: ['[A] pizza [C] food quality [S] great', '[A] pizza [S] great [C] food quality', '[C] food quality [S] great [A] pizza', '[C] food quality [A] pizza [S] great', '[S] great [C] food quality [A] pizza']

task, data: tasd rest15
target: [('ambience general', 'restaurant', 'great', 'null'), ('restaurant general', 'restaurant', 'great', 'null')]
output: ['[A] restaurant [S] great [C] ambience general']
sent: ['I', 'thought', 'the', 'restaurant', 'was', 'nice', 'and', 'clean', '.']
counter: {('ambience general', 'restaurant', 'great', 'null'): 5}
output quads: ['[A] restaurant [S] great [C] ambience general']
multi_path: ['[A] restaurant [C] ambience general [S] great', '[A] restaurant [S] great [C] ambience general', '[C] ambience general [S] great [A] restaurant', '[C] ambience general [A] restaurant [S] great', '[S] great [C] ambience general [A] restaurant']

task, data: tasd rest15
target: [('restaurant miscellaneous', 'null', 'bad', 'null')]
output: ['[A] null [S] ok [C] service general']
sent: ['The', 'only', 'downside', '.', '.', '.', 'they', 'only', 'take', 'cash', 'which', 'is', 'OK', 'if', 'you', 'know', 'about', 'it', 'ahead', 'of', 'time', '.']
counter: {('service general', 'null', 'ok', 'null'): 5}
output quads: ['[A] null [S] ok [C] service general']
multi_path: ['[A] it [C] service general [S] ok', '[A] it [S] ok [C] service general', '[C] service general [S] ok [A] it', '[C] service general [A] it [S] ok', '[S] ok [C] service general [A] it']

task, data: tasd rest15
target: [('restaurant general', 'place', 'bad', 'null'), ('restaurant miscellaneous', 'place', 'bad', 'null')]
output: ['[A] place [S] bad [C] restaurant miscellaneous']
sent: ['I', 'would', 'never', 'recommend', 'this', 'place', 'to', 'anybody', 'even', 'for', 'a', 'casual', 'dinner', '.']
counter: {('restaurant miscellaneous', 'place', 'bad', 'null'): 5}
output quads: ['[A] place [S] bad [C] restaurant miscellaneous']
multi_path: ['[A] place [C] restaurant miscellaneous [S] bad', '[A] place [S] bad [C] restaurant miscellaneous', '[C] restaurant miscellaneous [S] bad [A] place', '[C] restaurant miscellaneous [A] place [S] bad', '[S] bad [C] restaurant miscellaneous [A] place']

task, data: tasd rest15
target: [('food prices', 'japanese food', 'bad', 'null'), ('service general', 'service', 'ok', 'null')]
output: ['[A] japanese food [S] bad [C] food prices', '[A] service [S] bad [C] service general']
sent: ['overpriced', 'japanese', 'food', 'with', 'mediocre', 'service']
counter: {('food prices', 'japanese food', 'bad', 'null'): 5, ('service general', 'service', 'bad', 'null'): 5}
output quads: ['[A] japanese food [S] bad [C] food prices', '[A] service [S] bad [C] service general']
multi_path: ['[A] japanese food [C] food prices [S] bad [SSEP] [A] service [C] service general [S] bad', '[A] japanese food [S] bad [C] food prices [SSEP] [A] service [S] bad [C] service general', '[C] food prices [S] bad [A] japanese food [SSEP] [C] service general [S] bad [A] service', '[C] food prices [A] japanese food [S] bad [SSEP] [C] service general [A] service [S] bad', '[S] bad [C] food prices [A] japanese food [SSEP] [S] bad [C] service general [A] service']

task, data: tasd rest15
target: [('food style_options', 'chicken teriyaki', 'bad', 'null')]
output: ['[A] chicken teriyaki [S] bad [C] food quality']
sent: ['Chicken', 'teriyaki', 'had', 'tomato', 'or', 'pimentos', 'on', 'top', '?', '?']
counter: {('food quality', 'chicken teriyaki', 'bad', 'null'): 5}
output quads: ['[A] chicken teriyaki [S] bad [C] food quality']
multi_path: ['[A] chicken teriyaki [C] food quality [S] bad', '[A] chicken teriyaki [S] bad [C] food quality', '[C] food quality [S] bad [A] chicken teriyaki', '[C] food quality [A] chicken teriyaki [S] bad', '[S] bad [C] food quality [A] chicken teriyaki']

task, data: tasd rest15
target: [('food quality', 'food', 'bad', 'null')]
output: ['[A] food [S] great [C] food quality']
sent: ['food', 'was', 'luke', 'warm', '.']
counter: {('food quality', 'food', 'great', 'null'): 3, ('food quality', 'food', 'bad', 'null'): 2}
output quads: ['[A] food [S] great [C] food quality']
multi_path: ['[A] food [C] food quality [S] great', '[A] food [S] bad [C] food quality', '[C] food quality [S] great [A] food', '[C] food quality [A] food [S] great', '[S] bad [C] food quality [A] food']

task, data: tasd rest15
target: [('food style_options', 'dessert', 'bad', 'null')]
output: ['[A] banana tempura [S] bad [C] food style_options']
sent: ['I', 'was', 'looking', 'for', 'banana', 'tempura', 'for', 'dessert', 'and', 'they', 'dont', 'have', '.']
counter: {('food style_options', 'banana tempura', 'bad', 'null'): 5}
output quads: ['[A] banana tempura [S] bad [C] food style_options']
multi_path: ['[A] banana tempura [C] food style_options [S] bad', '[A] banana tempura [S] bad [C] food style_options', '[C] food style_options [S] bad [A] banana tempura', '[C] food style_options [A] banana tempura [S] bad', '[S] bad [C] food style_options [A] banana tempura']

task, data: tasd rest15
target: [('restaurant prices', 'the four seasons', 'bad', 'null')]
output: ['[A] null [S] great [C] ambience general']
sent: ['Not', 'because', 'you', 'are', '"The', 'Four', 'Seasons', '"', '.', '.', '.', '–', 'you', 'are', 'allowed', 'to', 'charge', 'an', 'arm', 'and', 'a', 'leg', 'for', 'a', 'romatic', 'dinner', '.']
counter: {('ambience general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] ambience general']
multi_path: ['[A] it [C] ambience general [S] great', '[A] it [S] great [C] ambience general', '[C] ambience general [S] great [A] it', '[C] ambience general [A] it [S] great', '[S] great [C] ambience general [A] it']

task, data: tasd rest15
target: [('food quality', 'food', 'great', 'null'), ('restaurant general', 'the four seasons', 'bad', 'null'), ('service general', 'service', 'great', 'null')]
output: ['[A] food [S] great [C] food quality', '[A] service [S] bad [C] service general']
sent: ['The', 'food', 'was', 'excellent', 'as', 'well', 'as', 'service', ',', 'however', ',', 'I', 'left', 'The', 'Four', 'Seasons', 'very', 'dissappointed', '.']
counter: {('food quality', 'food', 'great', 'null'): 5, ('service general', 'service', 'great', 'null'): 2, ('restaurant general', 'null', 'bad', 'null'): 2, ('service general', 'service', 'bad', 'null'): 3}
output quads: ['[A] food [S] great [C] food quality', '[A] service [S] bad [C] service general']
multi_path: ['[A] food [C] food quality [S] great [SSEP] [A] service [C] service general [S] great [SSEP] [A] it [C] restaurant general [S] bad', '[A] food [S] great [C] food quality [SSEP] [A] service [S] great [C] service general [SSEP] [A] it [S] bad [C] restaurant general', '[C] food quality [S] great [A] food [SSEP] [C] service general [S] bad [A] service', '[C] food quality [A] food [S] great [SSEP] [C] service general [A] service [S] bad', '[S] great [C] food quality [A] food [SSEP] [S] bad [C] service general [A] service']

task, data: tasd rest15
target: [('food prices', 'dinner', 'bad', 'null')]
output: ['[A] dinner [S] bad [C] restaurant prices']
sent: ['I', 'do', 'not', 'think', 'dinner', 'in', 'Manhattan', 'should', 'cost', '$400', '.00', 'where', 'I', 'am', 'not', 'swept', 'off', 'my', 'feet', '.']
counter: {('food prices', 'dinner', 'bad', 'null'): 2, ('restaurant prices', 'dinner', 'bad', 'null'): 3}
output quads: ['[A] dinner [S] bad [C] restaurant prices']
multi_path: ['[A] dinner [C] food prices [S] bad', '[A] dinner [S] bad [C] food prices', '[C] restaurant prices [S] bad [A] dinner', '[C] restaurant prices [A] dinner [S] bad', '[S] bad [C] restaurant prices [A] dinner']

task, data: tasd rest15
target: [('food quality', 'red dragon roll', 'great', 'null'), ('restaurant general', 'yamato', 'great', 'null')]
output: ['[A] red dragon roll [S] great [C] food quality']
sent: ['Just', 'go', 'to', 'Yamato', 'and', 'order', 'the', 'Red', 'Dragon', 'Roll', '.']
counter: {('food quality', 'red dragon roll', 'great', 'null'): 5}
output quads: ['[A] red dragon roll [S] great [C] food quality']
multi_path: ['[A] red dragon roll [C] food quality [S] great', '[A] red dragon roll [S] great [C] food quality', '[C] food quality [S] great [A] red dragon roll', '[C] food quality [A] red dragon roll [S] great', '[S] great [C] food quality [A] red dragon roll']

task, data: tasd rest15
target: [('food quality', 'null', 'great', 'null')]
output: ['[A] null [S] bad [C] restaurant miscellaneous']
sent: ['If', 'you', 'don', "'t", 'like', 'it', ',', 'I', 'don', "'t", 'know', 'what', 'to', 'tell', 'you', '.']
counter: {('restaurant miscellaneous', 'null', 'bad', 'null'): 3, ('restaurant general', 'null', 'bad', 'null'): 2}
output quads: ['[A] null [S] bad [C] restaurant miscellaneous']
multi_path: ['[A] it [C] restaurant miscellaneous [S] bad', '[A] it [S] bad [C] restaurant general', '[C] restaurant miscellaneous [S] bad [A] it', '[C] restaurant miscellaneous [A] it [S] bad', '[S] bad [C] restaurant general [A] it']

task, data: tasd rest15
target: [('food quality', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] restaurant general']
sent: ['I', "'m", 'not', 'even', 'going', 'to', 'bother', 'to', 'describe', 'it', ';', 'it', 'speaks', 'for', 'itself', '.']
counter: {('restaurant general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] restaurant general']
multi_path: ['[A] it [C] restaurant general [S] great', '[A] it [S] great [C] restaurant general', '[C] restaurant general [S] great [A] it', '[C] restaurant general [A] it [S] great', '[S] great [C] restaurant general [A] it']

task, data: tasd rest15
target: [('ambience general', 'spot', 'great', 'null'), ('food quality', 'sushi', 'great', 'null'), ('service general', 'service', 'great', 'null')]
output: ['[A] service [S] great [C] service general', '[A] spot [S] great [C] restaurant miscellaneous', '[A] sushi [S] great [C] food quality']
sent: ['An', 'unpretentious', 'spot', 'in', 'Park', 'Slope', ',', 'the', 'sushi', 'is', 'consistently', 'good', ',', 'the', 'service', 'is', 'pleasant', ',', 'effective', 'and', 'unassuming', '.']
counter: {('restaurant general', 'spot', 'great', 'null'): 2, ('food quality', 'sushi', 'great', 'null'): 5, ('service general', 'service', 'great', 'null'): 5, ('restaurant miscellaneous', 'spot', 'great', 'null'): 3}
output quads: ['[A] sushi [S] great [C] food quality', '[A] service [S] great [C] service general', '[A] spot [S] great [C] restaurant miscellaneous']
multi_path: ['[A] spot [C] restaurant general [S] great [SSEP] [A] sushi [C] food quality [S] great [SSEP] [A] service [C] service general [S] great', '[A] spot [S] great [C] restaurant general [SSEP] [A] sushi [S] great [C] food quality [SSEP] [A] service [S] great [C] service general', '[C] restaurant miscellaneous [S] great [A] spot [SSEP] [C] food quality [S] great [A] sushi [SSEP] [C] service general [S] great [A] service', '[C] restaurant miscellaneous [A] spot [S] great [SSEP] [C] food quality [A] sushi [S] great [SSEP] [C] service general [A] service [S] great', '[S] great [C] restaurant miscellaneous [A] spot [SSEP] [S] great [C] food quality [A] sushi [SSEP] [S] great [C] service general [A] service']

task, data: tasd rest15
target: [('food quality', 'japanese food', 'great', 'null'), ('food style_options', 'japanese food', 'great', 'null'), ('food style_options', 'rolls', 'great', 'null')]
output: ['[A] japanese food [S] great [C] food quality', '[A] rolls [S] great [C] food style_options']
sent: ['The', 'rolls', 'are', 'creative', 'and', 'I', 'have', 'yet', 'to', 'find', 'another', 'sushi', 'place', 'that', 'serves', 'up', 'more', 'inventive', 'yet', 'delicious', 'japanese', 'food', '.']
counter: {('food style_options', 'rolls', 'great', 'null'): 5, ('food quality', 'japanese food', 'great', 'null'): 5}
output quads: ['[A] rolls [S] great [C] food style_options', '[A] japanese food [S] great [C] food quality']
multi_path: ['[A] rolls [C] food style_options [S] great [SSEP] [A] japanese food [C] food quality [S] great', '[A] rolls [S] great [C] food style_options [SSEP] [A] japanese food [S] great [C] food quality', '[C] food style_options [S] great [A] rolls [SSEP] [C] food quality [S] great [A] japanese food', '[C] food style_options [A] rolls [S] great [SSEP] [C] food quality [A] japanese food [S] great', '[S] great [C] food style_options [A] rolls [SSEP] [S] great [C] food quality [A] japanese food']

task, data: tasd rest15
target: [('food quality', 'dancing, white river and millenium rolls', 'great', 'null')]
output: ['[A] dancing [S] great [C] ambience general', '[A] white river and millenium rolls [S] great [C] food quality']
sent: ['The', 'Dancing', ',', 'White', 'River', 'and', 'Millenium', 'rolls', 'are', 'musts', '.']
counter: {('ambience general', 'dancing', 'great', 'null'): 5, ('food quality', 'white river', 'great', 'null'): 2, ('food quality', 'millenium rolls', 'great', 'null'): 2, ('food quality', 'white river and millenium rolls', 'great', 'null'): 3}
output quads: ['[A] dancing [S] great [C] ambience general', '[A] white river and millenium rolls [S] great [C] food quality']
multi_path: ['[A] dancing [C] ambience general [S] great [SSEP] [A] white river [C] food quality [S] great [SSEP] [A] millenium rolls [C] food quality [S] great', '[A] dancing [S] great [C] ambience general [SSEP] [A] white river [S] great [C] food quality [SSEP] [A] millenium rolls [S] great [C] food quality', '[C] ambience general [S] great [A] dancing [SSEP] [C] food quality [S] great [A] white river and millenium rolls', '[C] ambience general [A] dancing [S] great [SSEP] [C] food quality [A] white river and millenium rolls [S] great', '[S] great [C] ambience general [A] dancing [SSEP] [S] great [C] food quality [A] white river and millenium rolls']

task, data: tasd rest15
target: [('food quality', 'quesadilla', 'bad', 'null'), ('food style_options', 'quesadilla', 'bad', 'null')]
output: ['[A] quesadilla [S] bad [C] food quality']
sent: ['My', 'quesadilla', 'tasted', 'like', 'it', 'had', 'been', 'made', 'by', 'a', 'three-year', 'old', 'with', 'no', 'sense', 'of', 'proportion', 'or', 'flavor', '.']
counter: {('food quality', 'quesadilla', 'bad', 'null'): 5}
output quads: ['[A] quesadilla [S] bad [C] food quality']
multi_path: ['[A] quesadilla [C] food quality [S] bad', '[A] quesadilla [S] bad [C] food quality', '[C] food quality [S] bad [A] quesadilla', '[C] food quality [A] quesadilla [S] bad', '[S] bad [C] food quality [A] quesadilla']

task, data: tasd rest15
target: [('food prices', 'guacamole', 'bad', 'null'), ('food quality', 'guacamole', 'bad', 'null')]
output: ['[A] plate of bland guacamole [S] bad [C] food prices']
sent: ['And', '$11', 'for', 'a', 'plate', 'of', 'bland', 'guacamole', '?']
counter: {('food prices', 'plate of bland guacamole', 'bad', 'null'): 5}
output quads: ['[A] plate of bland guacamole [S] bad [C] food prices']
multi_path: ['[A] plate of bland guacamole [C] food prices [S] bad', '[A] plate of bland guacamole [S] bad [C] food prices', '[C] food prices [S] bad [A] plate of bland guacamole', '[C] food prices [A] plate of bland guacamole [S] bad', '[S] bad [C] food prices [A] plate of bland guacamole']

task, data: tasd rest15
target: [('drinks quality', 'null', 'bad', 'null')]
output: ['[A] bartender [S] bad [C] service general']
sent: ['Mine', 'tasted', 'like', 'the', 'bartender', 'had', 'forgotten', 'to', 'add', 'the', 'tequila', '.']
counter: {('service general', 'bartender', 'bad', 'null'): 5}
output quads: ['[A] bartender [S] bad [C] service general']
multi_path: ['[A] bartender [C] service general [S] bad', '[A] bartender [S] bad [C] service general', '[C] service general [S] bad [A] bartender', '[C] service general [A] bartender [S] bad', '[S] bad [C] service general [A] bartender']

task, data: tasd rest15
target: [('restaurant general', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] restaurant general', '[A] null [S] bad [C] restaurant prices']
sent: ['Save', 'your', 'money', 'and', 'your', 'time', 'and', 'go', 'somewhere', 'else', '.']
counter: {('restaurant prices', 'null', 'bad', 'null'): 5, ('restaurant general', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] restaurant prices', '[A] null [S] bad [C] restaurant general']
multi_path: ['[A] it [C] restaurant prices [S] bad [SSEP] [A] it [C] restaurant general [S] bad', '[A] it [S] bad [C] restaurant prices [SSEP] [A] it [S] bad [C] restaurant general', '[C] restaurant prices [S] bad [A] it [SSEP] [C] restaurant general [S] bad [A] it', '[C] restaurant prices [A] it [S] bad [SSEP] [C] restaurant general [A] it [S] bad', '[S] bad [C] restaurant prices [A] it [SSEP] [S] bad [C] restaurant general [A] it']

task, data: tasd rest15
target: [('ambience general', 'place', 'great', 'null'), ('food quality', 'food', 'great', 'null'), ('restaurant prices', 'place', 'great', 'null')]
output: ['[A] food [S] great [C] food quality', '[A] place [S] great [C] ambience general']
sent: ['The', 'food', 'was', 'good', ',', 'the', 'place', 'was', 'clean', 'and', 'affordable', '.']
counter: {('food quality', 'food', 'great', 'null'): 5, ('ambience general', 'place', 'great', 'null'): 5}
output quads: ['[A] food [S] great [C] food quality', '[A] place [S] great [C] ambience general']
multi_path: ['[A] food [C] food quality [S] great [SSEP] [A] place [C] ambience general [S] great', '[A] food [S] great [C] food quality [SSEP] [A] place [S] great [C] ambience general', '[C] food quality [S] great [A] food [SSEP] [C] ambience general [S] great [A] place', '[C] food quality [A] food [S] great [SSEP] [C] ambience general [A] place [S] great', '[S] great [C] food quality [A] food [SSEP] [S] great [C] ambience general [A] place']

task, data: tasd rest15
target: [('restaurant miscellaneous', 'indian place', 'great', 'null')]
output: ['[A] null [S] great [C] restaurant miscellaneous']
sent: ['I', 'noticed', 'alot', 'of', 'indian', 'people', 'eatting', 'there', 'which', 'is', 'a', 'great', 'sign', 'for', 'an', 'indian', 'place', '!']
counter: {('restaurant miscellaneous', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] restaurant miscellaneous']
multi_path: ['[A] it [C] restaurant miscellaneous [S] great', '[A] it [S] great [C] restaurant miscellaneous', '[C] restaurant miscellaneous [S] great [A] it', '[C] restaurant miscellaneous [A] it [S] great', '[S] great [C] restaurant miscellaneous [A] it']

task, data: tasd rest15
target: [('ambience general', 'null', 'great', 'null'), ('food quality', 'food', 'great', 'null'), ('restaurant general', 'null', 'great', 'null'), ('restaurant miscellaneous', 'null', 'great', 'null')]
output: ['[A] food [S] great [C] food quality', '[A] spot [S] great [C] restaurant miscellaneous']
sent: ['This', 'is', 'one', 'of', 'my', 'favorite', 'spot', ',', 'very', 'relaxing', 'the', 'food', 'is', 'great', 'all', 'the', 'times', ',', 'celebrated', 'my', 'engagement', 'and', 'my', 'wedding', 'here', ',', 'it', 'was', 'very', 'well', 'organized', '.']
counter: {('restaurant miscellaneous', 'spot', 'great', 'null'): 5, ('food quality', 'food', 'great', 'null'): 5}
output quads: ['[A] spot [S] great [C] restaurant miscellaneous', '[A] food [S] great [C] food quality']
multi_path: ['[A] spot [C] restaurant miscellaneous [S] great [SSEP] [A] food [C] food quality [S] great', '[A] spot [S] great [C] restaurant miscellaneous [SSEP] [A] food [S] great [C] food quality', '[C] restaurant miscellaneous [S] great [A] spot [SSEP] [C] food quality [S] great [A] food', '[C] restaurant miscellaneous [A] spot [S] great [SSEP] [C] food quality [A] food [S] great', '[S] great [C] restaurant miscellaneous [A] spot [SSEP] [S] great [C] food quality [A] food']

task, data: tasd rest15
target: [('ambience general', 'place', 'great', 'null'), ('restaurant general', 'place', 'great', 'null')]
output: ['[A] place [S] great [C] ambience general']
sent: ['I', 'highly', 'recommend', 'this', 'beautiful', 'place', '.']
counter: {('ambience general', 'place', 'great', 'null'): 5}
output quads: ['[A] place [S] great [C] ambience general']
multi_path: ['[A] place [C] ambience general [S] great', '[A] place [S] great [C] ambience general', '[C] ambience general [S] great [A] place', '[C] ambience general [A] place [S] great', '[S] great [C] ambience general [A] place']

task, data: tasd rest15
target: [('restaurant general', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] restaurant miscellaneous']
sent: ['I', 'come', 'here', 'enjoy', 'very', 'much', 'with', 'husband', '.']
counter: {('restaurant miscellaneous', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] restaurant miscellaneous']
multi_path: ['[A] it [C] restaurant miscellaneous [S] great', '[A] it [S] great [C] restaurant miscellaneous', '[C] restaurant miscellaneous [S] great [A] it', '[C] restaurant miscellaneous [A] it [S] great', '[S] great [C] restaurant miscellaneous [A] it']

task, data: tasd rest15
target: [('ambience general', 'belly dancers', 'great', 'null'), ('food quality', 'baba ganoush', 'great', 'null')]
output: ['[A] baba ganoush [S] great [C] food quality']
sent: ['Watch', 'the', 'talented', 'belly', 'dancers', 'as', 'you', 'enjoy', 'delicious', 'baba', 'ganoush', 'that', "'s", 'more', 'lemony', 'than', 'smoky', '.']
counter: {('ambience general', 'belly dancers', 'great', 'null'): 2, ('food quality', 'baba ganoush', 'great', 'null'): 5}
output quads: ['[A] baba ganoush [S] great [C] food quality']
multi_path: ['[A] belly dancers [C] ambience general [S] great [SSEP] [A] baba ganoush [C] food quality [S] great', '[A] belly dancers [S] great [C] ambience general [SSEP] [A] baba ganoush [S] great [C] food quality', '[C] food quality [S] great [A] baba ganoush', '[C] food quality [A] baba ganoush [S] great', '[S] great [C] food quality [A] baba ganoush']

task, data: tasd rest15
target: [('ambience general', 'hookah', 'great', 'null')]
output: ['[A] hookah [S] great [C] food quality']
sent: ['Oh', ',', 'and', 'there', "'s", 'hookah', '.']
counter: {('food quality', 'hookah', 'great', 'null'): 5}
output quads: ['[A] hookah [S] great [C] food quality']
multi_path: ['[A] hookah [C] food quality [S] great', '[A] hookah [S] great [C] food quality', '[C] food quality [S] great [A] hookah', '[C] food quality [A] hookah [S] great', '[S] great [C] food quality [A] hookah']

task, data: tasd rest15
target: [('service general', 'raymond', 'great', 'null')]
output: ['[A] raymond the bartender [S] great [C] service general']
sent: ['Raymond', 'the', 'bartender', 'rocks', '!']
counter: {('service general', 'raymond the bartender', 'great', 'null'): 3, ('service general', 'raymond', 'great', 'null'): 2}
output quads: ['[A] raymond the bartender [S] great [C] service general']
multi_path: ['[A] raymond the bartender [C] service general [S] great', '[A] raymond the bartender [S] great [C] service general', '[C] service general [S] great [A] raymond', '[C] service general [A] raymond the bartender [S] great', '[S] great [C] service general [A] raymond']

task, data: tasd rest15
target: [('drinks quality', 'drinks', 'great', 'null'), ('service general', 'raymond', 'great', 'null')]
output: ['[A] drinks [S] great [C] drinks quality']
sent: ['The', 'drinks', 'are', 'great', ',', 'especially', 'when', 'made', 'by', 'Raymond', '.']
counter: {('drinks quality', 'drinks', 'great', 'null'): 5}
output quads: ['[A] drinks [S] great [C] drinks quality']
multi_path: ['[A] drinks [C] drinks quality [S] great', '[A] drinks [S] great [C] drinks quality', '[C] drinks quality [S] great [A] drinks', '[C] drinks quality [A] drinks [S] great', '[S] great [C] drinks quality [A] drinks']

task, data: tasd rest15
target: [('food prices', 'food', 'great', 'null'), ('food quality', 'food', 'ok', 'null'), ('service general', 'people', 'great', 'null')]
output: ['[A] food [S] great [C] food prices', '[A] food [S] great [C] food quality', '[A] people [S] great [C] service general']
sent: ['Overall', ',', 'decent', 'food', 'at', 'a', 'good', 'price', ',', 'with', 'friendly', 'people', '.']
counter: {('food quality', 'food', 'great', 'null'): 5, ('food prices', 'food', 'great', 'null'): 5, ('service general', 'people', 'great', 'null'): 5}
output quads: ['[A] food [S] great [C] food quality', '[A] food [S] great [C] food prices', '[A] people [S] great [C] service general']
multi_path: ['[A] food [C] food quality [S] great [SSEP] [A] food [C] food prices [S] great [SSEP] [A] people [C] service general [S] great', '[A] food [S] great [C] food quality [SSEP] [A] food [S] great [C] food prices [SSEP] [A] people [S] great [C] service general', '[C] food quality [S] great [A] food [SSEP] [C] food prices [S] great [A] food [SSEP] [C] service general [S] great [A] people', '[C] food quality [A] food [S] great [SSEP] [C] food prices [A] food [S] great [SSEP] [C] service general [A] people [S] great', '[S] great [C] food quality [A] food [SSEP] [S] great [C] food prices [A] food [SSEP] [S] great [C] service general [A] people']

task, data: tasd rest15
target: [('food quality', 'gyros', 'great', 'null')]
output: ['[A] astoria souvlaki spot [S] great [C] restaurant general']
sent: ['This', 'small', 'Astoria', 'souvlaki', 'spot', 'makes', 'what', 'many', 'consider', 'the', 'best', 'gyros', 'in', 'New', 'York', '.']
counter: {('restaurant general', 'astoria souvlaki spot', 'great', 'null'): 5}
output quads: ['[A] astoria souvlaki spot [S] great [C] restaurant general']
multi_path: ['[A] astoria souvlaki spot [C] restaurant general [S] great', '[A] astoria souvlaki spot [S] great [C] restaurant general', '[C] restaurant general [S] great [A] astoria souvlaki spot', '[C] restaurant general [A] astoria souvlaki spot [S] great', '[S] great [C] restaurant general [A] astoria souvlaki spot']

task, data: tasd rest15
target: [('food quality', 'food', 'great', 'null'), ('food quality', 'gyro meat', 'great', 'null'), ('food quality', 'ingredients', 'great', 'null'), ('food quality', 'sausages', 'great', 'null')]
output: ['[A] food [S] great [C] food quality', '[A] gyro meat and sausages [S] great [C] food quality', '[A] ingredients [S] great [C] food quality']
sent: ['What', 'really', 'makes', 'it', 'shine', 'is', 'the', 'food', ',', 'which', 'is', 'aggressively', 'seasoned', 'with', 'Cyrpriot', 'spices', ',', 'and', 'all', 'made', 'in-house', '(even', 'the', 'gyro', 'meat', 'and', 'sausages', ')', ',', 'and', 'made', 'of', 'much', 'higher', 'quality', 'ingredients', 'that', 'might', 'otherwise', 'be', 'expected', '.']
counter: {('food quality', 'food', 'great', 'null'): 5, ('food quality', 'ingredients', 'great', 'null'): 5, ('food quality', 'gyro meat and sausages', 'great', 'null'): 3}
output quads: ['[A] food [S] great [C] food quality', '[A] ingredients [S] great [C] food quality', '[A] gyro meat and sausages [S] great [C] food quality']
multi_path: ['[A] food [C] food quality [S] great [SSEP] [A] ingredients [C] food quality [S] great', '[A] food [S] great [C] food quality [SSEP] [A] ingredients [S] great [C] food quality', '[C] food quality [S] great [A] food [SSEP] [C] food quality [S] great [A] gyro meat and sausages [SSEP] [C] food quality [S] great [A] ingredients', '[C] food quality [A] food [S] great [SSEP] [C] food quality [A] gyro meat and sausages [S] great [SSEP] [C] food quality [A] ingredients [S] great', '[S] great [C] food quality [A] food [SSEP] [S] great [C] food quality [A] gyro meat and sausages [SSEP] [S] great [C] food quality [A] ingredients']

task, data: tasd rest15
target: [('food quality', 'null', 'great', 'null'), ('food style_options', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] ambience general', '[A] null [S] great [C] food quality']
sent: ['Delicious', ',', 'creative', 'and', 'fun', '.']
counter: {('food quality', 'null', 'great', 'null'): 5, ('ambience general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] food quality', '[A] null [S] great [C] ambience general']
multi_path: ['[A] it [C] food quality [S] great [SSEP] [A] it [C] ambience general [S] great', '[A] it [S] great [C] food quality [SSEP] [A] it [S] great [C] ambience general', '[C] food quality [S] great [A] it [SSEP] [C] ambience general [S] great [A] it', '[C] food quality [A] it [S] great [SSEP] [C] ambience general [A] it [S] great', '[S] great [C] food quality [A] it [SSEP] [S] great [C] ambience general [A] it']

task, data: tasd rest15
target: [('ambience general', 'atmosphere', 'great', 'null'), ('ambience general', 'rooms', 'great', 'null'), ('food quality', 'food', 'great', 'null'), ('location general', 'views', 'great', 'null')]
output: ['[A] atmosphere [S] great [C] ambience general', '[A] food [S] great [C] food quality', '[A] rooms [S] great [C] location general']
sent: ['Everyone', 'raved', 'about', 'the', 'atmosphere', '(elegant', 'rooms', 'and', 'absolutely', 'incomparable', 'views', ')', 'and', 'the', 'fabulous', 'food', '!']
counter: {('ambience general', 'atmosphere', 'great', 'null'): 5, ('ambience general', 'rooms', 'great', 'null'): 2, ('location general', 'views', 'great', 'null'): 2, ('food quality', 'food', 'great', 'null'): 5, ('location general', 'rooms', 'great', 'null'): 3}
output quads: ['[A] atmosphere [S] great [C] ambience general', '[A] food [S] great [C] food quality', '[A] rooms [S] great [C] location general']
multi_path: ['[A] atmosphere [C] ambience general [S] great [SSEP] [A] rooms [C] ambience general [S] great [SSEP] [A] views [C] location general [S] great [SSEP] [A] food [C] food quality [S] great', '[A] atmosphere [S] great [C] ambience general [SSEP] [A] rooms [S] great [C] ambience general [SSEP] [A] views [S] great [C] location general [SSEP] [A] food [S] great [C] food quality', '[C] ambience general [S] great [A] atmosphere [SSEP] [C] location general [S] great [A] rooms [SSEP] [C] food quality [S] great [A] food', '[C] ambience general [A] atmosphere [S] great [SSEP] [C] location general [A] rooms [S] great [SSEP] [C] food quality [A] food [S] great', '[S] great [C] ambience general [A] atmosphere [SSEP] [S] great [C] location general [A] rooms [SSEP] [S] great [C] food quality [A] food']

task, data: tasd rest15
target: [('restaurant general', "water's edge", 'great', 'null')]
output: ['[A] null [S] great [C] restaurant miscellaneous']
sent: ['Thank', 'you', 'everyone', 'at', 'Water', "'s", 'Edge', '.']
counter: {('restaurant miscellaneous', 'null', 'great', 'null'): 3, ('restaurant general', 'null', 'great', 'null'): 2}
output quads: ['[A] null [S] great [C] restaurant miscellaneous']
multi_path: ['[A] it [C] restaurant miscellaneous [S] great', '[A] it [S] great [C] restaurant miscellaneous', '[C] restaurant general [S] great [A] it', '[C] restaurant general [A] it [S] great', '[S] great [C] restaurant miscellaneous [A] it']

task, data: tasd rest15
target: [('ambience general', 'bathroom', 'bad', 'null'), ('service general', 'service', 'bad', 'null')]
output: ['[A] bathroom [S] bad [C] ambience general', '[A] service [S] ok [C] service general']
sent: ['Service', 'ok', 'but', 'unfriendly', ',filthy', 'bathroom', '.']
counter: {('service general', 'service', 'ok', 'null'): 5, ('ambience general', 'bathroom', 'bad', 'null'): 5}
output quads: ['[A] service [S] ok [C] service general', '[A] bathroom [S] bad [C] ambience general']
multi_path: ['[A] service [C] service general [S] ok [SSEP] [A] bathroom [C] ambience general [S] bad', '[A] service [S] ok [C] service general [SSEP] [A] bathroom [S] bad [C] ambience general', '[C] service general [S] ok [A] service [SSEP] [C] ambience general [S] bad [A] bathroom', '[C] service general [A] service [S] ok [SSEP] [C] ambience general [A] bathroom [S] bad', '[S] ok [C] service general [A] service [SSEP] [S] bad [C] ambience general [A] bathroom']

task, data: tasd rest15
target: [('food quality', 'food', 'bad', 'null'), ('location general', 'view', 'ok', 'null'), ('restaurant prices', 'null', 'bad', 'null')]
output: ['[A] food [S] bad [C] food quality', '[A] null [S] bad [C] restaurant prices', '[A] view [S] great [C] location general']
sent: ['The', 'high', 'prices', 'you', "'re", 'going', 'to', 'pay', 'is', 'for', 'the', 'view', 'not', 'for', 'the', 'food', '.']
counter: {('restaurant prices', 'null', 'bad', 'null'): 5, ('location general', 'view', 'great', 'null'): 5, ('food quality', 'food', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] restaurant prices', '[A] view [S] great [C] location general', '[A] food [S] bad [C] food quality']
multi_path: ['[A] it [C] restaurant prices [S] bad [SSEP] [A] view [C] location general [S] great [SSEP] [A] food [C] food quality [S] bad', '[A] it [S] bad [C] restaurant prices [SSEP] [A] view [S] great [C] location general [SSEP] [A] food [S] bad [C] food quality', '[C] restaurant prices [S] bad [A] it [SSEP] [C] location general [S] great [A] view [SSEP] [C] food quality [S] bad [A] food', '[C] restaurant prices [A] it [S] bad [SSEP] [C] location general [A] view [S] great [SSEP] [C] food quality [A] food [S] bad', '[S] bad [C] restaurant prices [A] it [SSEP] [S] great [C] location general [A] view [SSEP] [S] bad [C] food quality [A] food']

task, data: tasd rest15
target: [('drinks quality', 'bar drinks', 'bad', 'null')]
output: ['[A] bar drinks [S] ok [C] drinks quality']
sent: ['The', 'bar', 'drinks', 'were', 'Eh', ',', 'ok', 'to', 'say', 'the', 'least', '.']
counter: {('drinks quality', 'bar drinks', 'ok', 'null'): 5}
output quads: ['[A] bar drinks [S] ok [C] drinks quality']
multi_path: ['[A] bar drinks [C] drinks quality [S] ok', '[A] bar drinks [S] ok [C] drinks quality', '[C] drinks quality [S] ok [A] bar drinks', '[C] drinks quality [A] bar drinks [S] ok', '[S] ok [C] drinks quality [A] bar drinks']

task, data: tasd rest15
target: [('restaurant general', 'null', 'bad', 'null'), ('restaurant prices', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] restaurant prices']
sent: ['$170', 'down', 'the', 'toilet', '.', '.', '.']
counter: {('restaurant prices', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] restaurant prices']
multi_path: ['[A] it [C] restaurant prices [S] bad', '[A] it [S] bad [C] restaurant prices', '[C] restaurant prices [S] bad [A] it', '[C] restaurant prices [A] it [S] bad', '[S] bad [C] restaurant prices [A] it']

task, data: tasd rest15
target: [('ambience general', 'null', 'bad', 'null')]
output: ['[A] floor [S] bad [C] ambience general', '[A] trash can [S] bad [C] food quality']
sent: ['The', 'floor', 'was', 'wet', ',', 'the', 'trash', 'can', 'filled', 'with', 'hand', 'towels', 'n', 'all', 'over', 'the', 'floor', ',', 'no', 'soap', ',', 'and', 'no', 'hand', 'towels', 'left', '.']
counter: {('ambience general', 'floor', 'bad', 'null'): 5, ('food style_options', 'trash can', 'bad', 'null'): 2, ('food quality', 'trash can', 'bad', 'null'): 3}
output quads: ['[A] floor [S] bad [C] ambience general', '[A] trash can [S] bad [C] food quality']
multi_path: ['[A] floor [C] ambience general [S] bad [SSEP] [A] trash can [C] food style_options [S] bad', '[A] floor [S] bad [C] ambience general [SSEP] [A] trash can [S] bad [C] food style_options', '[C] ambience general [S] bad [A] floor [SSEP] [C] food quality [S] bad [A] trash can', '[C] ambience general [A] floor [S] bad [SSEP] [C] food quality [A] trash can [S] bad', '[S] bad [C] ambience general [A] floor [SSEP] [S] bad [C] food quality [A] trash can']

task, data: tasd rest15
target: [('food prices', 'appetizer of olives', 'ok', 'null'), ('food quality', 'appetizer of olives', 'bad', 'null'), ('food quality', 'bread', 'bad', 'null')]
output: ['[A] appetizer of olives [S] bad [C] food quality', '[A] bread [S] bad [C] food quality']
sent: ['The', 'bread', 'we', 'received', 'was', 'horrible', '-', 'rock', 'hard', 'and', 'cold', '-', 'and', 'the', '"free', '"', 'appetizer', 'of', 'olives', 'was', 'disappointing', '.']
counter: {('food quality', 'bread', 'bad', 'null'): 5, ('food quality', 'appetizer of olives', 'bad', 'null'): 5}
output quads: ['[A] bread [S] bad [C] food quality', '[A] appetizer of olives [S] bad [C] food quality']
multi_path: ['[A] bread [C] food quality [S] bad [SSEP] [A] appetizer of olives [C] food quality [S] bad', '[A] bread [S] bad [C] food quality [SSEP] [A] appetizer of olives [S] bad [C] food quality', '[C] food quality [S] bad [A] bread [SSEP] [C] food quality [S] bad [A] appetizer of olives', '[C] food quality [A] bread [S] bad [SSEP] [C] food quality [A] appetizer of olives [S] bad', '[S] bad [C] food quality [A] bread [SSEP] [S] bad [C] food quality [A] appetizer of olives']

task, data: tasd rest15
target: [('food quality', 'pear torte', 'great', 'null'), ('service general', 'staff', 'bad', 'null')]
output: ['[A] dessert [S] great [C] food quality', '[A] staff [S] bad [C] service general']
sent: ['The', 'dessert', '(we', 'had', 'a', 'pear', 'torte', ')', 'was', 'good', '-', 'but', ',', 'once', 'again', ',', 'the', 'staff', 'was', 'unable', 'to', 'provide', 'appropriate', 'drink', 'suggestions', '.']
counter: {('food quality', 'dessert', 'great', 'null'): 5, ('service general', 'staff', 'bad', 'null'): 5}
output quads: ['[A] dessert [S] great [C] food quality', '[A] staff [S] bad [C] service general']
multi_path: ['[A] dessert [C] food quality [S] great [SSEP] [A] staff [C] service general [S] bad', '[A] dessert [S] great [C] food quality [SSEP] [A] staff [S] bad [C] service general', '[C] food quality [S] great [A] dessert [SSEP] [C] service general [S] bad [A] staff', '[C] food quality [A] dessert [S] great [SSEP] [C] service general [A] staff [S] bad', '[S] great [C] food quality [A] dessert [SSEP] [S] bad [C] service general [A] staff']

task, data: tasd rest15
target: [('restaurant miscellaneous', 'location', 'ok', 'null'), ('restaurant prices', 'location', 'ok', 'null'), ('service general', 'null', 'bad', 'null')]
output: ['[A] location [S] bad [C] restaurant general', '[A] null [S] bad [C] restaurant prices']
sent: ['Not', 'what', 'I', 'would', 'expect', 'for', 'the', 'price', 'and', 'prestige', 'of', 'this', 'location', '.']
counter: {('restaurant prices', 'null', 'bad', 'null'): 5, ('restaurant general', 'null', 'bad', 'null'): 2, ('restaurant general', 'location', 'bad', 'null'): 3}
output quads: ['[A] null [S] bad [C] restaurant prices', '[A] location [S] bad [C] restaurant general']
multi_path: ['[A] it [C] restaurant prices [S] bad [SSEP] [A] it [C] restaurant general [S] bad', '[A] it [S] bad [C] restaurant prices [SSEP] [A] it [S] bad [C] restaurant general', '[C] restaurant prices [S] bad [A] it [SSEP] [C] restaurant general [S] bad [A] location', '[C] restaurant prices [A] it [S] bad [SSEP] [C] restaurant general [A] location [S] bad', '[S] bad [C] restaurant prices [A] it [SSEP] [S] bad [C] restaurant general [A] location']

task, data: tasd rest15
target: [('ambience general', 'restaurant', 'great', 'null'), ('restaurant general', 'restaurant', 'great', 'null'), ('service general', 'staff', 'bad', 'null')]
output: ['[A] restaurant [S] great [C] ambience general', '[A] staff [S] bad [C] service general']
sent: ['All', 'in', 'all', ',', 'I', 'would', 'return', '-', 'as', 'it', 'was', 'a', 'beautiful', 'restaurant', '-', 'but', 'I', 'hope', 'the', 'staff', 'pays', 'more', 'attention', 'to', 'the', 'little', 'details', 'in', 'the', 'future', '.']
counter: {('ambience general', 'restaurant', 'great', 'null'): 5, ('service general', 'staff', 'bad', 'null'): 5}
output quads: ['[A] restaurant [S] great [C] ambience general', '[A] staff [S] bad [C] service general']
multi_path: ['[A] restaurant [C] ambience general [S] great [SSEP] [A] staff [C] service general [S] bad', '[A] restaurant [S] great [C] ambience general [SSEP] [A] staff [S] bad [C] service general', '[C] ambience general [S] great [A] restaurant [SSEP] [C] service general [S] bad [A] staff', '[C] ambience general [A] restaurant [S] great [SSEP] [C] service general [A] staff [S] bad', '[S] great [C] ambience general [A] restaurant [SSEP] [S] bad [C] service general [A] staff']

task, data: tasd rest15
target: [('ambience general', 'boths', 'great', 'null')]
output: ['[A] boths [S] great [C] food style_options']
sent: ['The', 'boths', 'are', 'not', 'as', 'small', 'as', 'some', 'of', 'the', 'reviews', 'make', 'them', 'out', 'to', 'look', 'they', "'re", 'perfect', 'for', '2', 'people', '.']
counter: {('food style_options', 'boths', 'great', 'null'): 3, ('ambience general', 'boths', 'great', 'null'): 2}
output quads: ['[A] boths [S] great [C] food style_options']
multi_path: ['[A] boths [C] food style_options [S] great', '[A] boths [S] great [C] food style_options', '[C] ambience general [S] great [A] boths', '[C] ambience general [A] boths [S] great', '[S] great [C] food style_options [A] boths']

task, data: tasd rest15
target: [('service general', 'service', 'great', 'null'), ('service general', 'service button', 'great', 'null'), ('service general', 'waiter', 'bad', 'null')]
output: ['[A] service [S] great [C] service general', '[A] waiter [S] bad [C] service general']
sent: ['The', 'service', 'was', 'extremely', 'fast', 'and', 'attentive', '(thanks', 'to', 'the', 'service', 'button', 'on', 'your', 'table', ')', 'but', 'I', 'barely', 'understood', '1', 'word', 'when', 'the', 'waiter', 'took', 'our', 'order', '.']
counter: {('service general', 'service', 'great', 'null'): 5, ('service general', 'waiter', 'bad', 'null'): 4}
output quads: ['[A] service [S] great [C] service general', '[A] waiter [S] bad [C] service general']
multi_path: ['[A] service [C] service general [S] great [SSEP] [A] waiter [C] service general [S] bad', '[A] service [S] great [C] service general [SSEP] [A] waiter [S] bad [C] service general', '[C] service general [S] great [A] service [SSEP] [C] service general [S] bad [A] waiter', '[C] service general [A] service [S] great', '[S] great [C] service general [A] service [SSEP] [S] bad [C] service general [A] waiter']

task, data: tasd rest15
target: [('ambience general', 'looks', 'great', 'null'), ('food quality', 'meals', 'bad', 'null')]
output: ['[A] place [S] great [C] ambience general']
sent: ['Over', 'all', 'the', 'looks', 'of', 'the', 'place', 'exceeds', 'the', 'actual', 'meals', '.']
counter: {('ambience general', 'place', 'great', 'null'): 5, ('food quality', 'meals', 'great', 'null'): 2, ('food style_options', 'meals', 'great', 'null'): 1}
output quads: ['[A] place [S] great [C] ambience general']
multi_path: ['[A] place [C] ambience general [S] great [SSEP] [A] meals [C] food quality [S] great', '[A] place [S] great [C] ambience general [SSEP] [A] meals [S] great [C] food style_options', '[C] ambience general [S] great [A] place', '[C] ambience general [A] place [S] great [SSEP] [C] food quality [A] meals [S] great', '[S] great [C] ambience general [A] place']

task, data: tasd rest15
target: [('ambience general', 'restaurant', 'ok', 'null'), ('food quality', 'food', 'bad', 'null'), ('restaurant prices', 'restaurant', 'bad', 'null')]
output: ['[A] food [S] bad [C] food quality', '[A] restaurant [S] bad [C] restaurant general']
sent: ['So', 'what', 'you', 'really', 'end', 'up', 'paying', 'for', 'is', 'the', 'restaurant', 'not', 'the', 'food', '.']
counter: {('restaurant general', 'restaurant', 'bad', 'null'): 5, ('food quality', 'food', 'bad', 'null'): 5}
output quads: ['[A] restaurant [S] bad [C] restaurant general', '[A] food [S] bad [C] food quality']
multi_path: ['[A] restaurant [C] restaurant general [S] bad [SSEP] [A] food [C] food quality [S] bad', '[A] restaurant [S] bad [C] restaurant general [SSEP] [A] food [S] bad [C] food quality', '[C] restaurant general [S] bad [A] restaurant [SSEP] [C] food quality [S] bad [A] food', '[C] restaurant general [A] restaurant [S] bad [SSEP] [C] food quality [A] food [S] bad', '[S] bad [C] restaurant general [A] restaurant [SSEP] [S] bad [C] food quality [A] food']

task, data: tasd rest15
target: [('restaurant general', 'null', 'bad', 'null'), ('restaurant general', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] restaurant general']
sent: ['Will', 'prob', '.', 'not', 'return', 'but', 'it', 'is', 'a', 'great', 'dinning', 'experience', 'to', 'try', 'atleast', 'once', '.']
counter: {('restaurant general', 'null', 'great', 'null'): 5, ('drinks quality', 'dinning', 'great', 'null'): 1}
output quads: ['[A] null [S] great [C] restaurant general']
multi_path: ['[A] it [C] restaurant general [S] great [SSEP] [A] dinning [C] drinks quality [S] great', '[A] it [S] great [C] restaurant general', '[C] restaurant general [S] great [A] it', '[C] restaurant general [A] it [S] great', '[S] great [C] restaurant general [A] it']

task, data: tasd rest15
target: [('service general', 'greg', 'great', 'null')]
output: ['[A] servers [S] great [C] service general']
sent: ['Servers', 'are', 'all', 'different', ',', 'Greg', 'is', 'my', 'favorite', '.']
counter: {('service general', 'servers', 'great', 'null'): 5}
output quads: ['[A] servers [S] great [C] service general']
multi_path: ['[A] servers [C] service general [S] great', '[A] servers [S] great [C] service general', '[C] service general [S] great [A] servers', '[C] service general [A] servers [S] great', '[S] great [C] service general [A] servers']

task, data: tasd rest15
target: [('drinks prices', 'bev', 'great', 'null'), ('food prices', 'food', 'great', 'null')]
output: ['[A] bev [S] great [C] drinks quality', '[A] food [S] great [C] food quality', '[A] null [S] great [C] restaurant prices']
sent: ['Prices', 'are', 'fair', 'across', 'the', 'board', 'for', 'both', 'food', 'and', 'bev', '.']
counter: {('restaurant prices', 'null', 'great', 'null'): 5, ('food quality', 'food', 'great', 'null'): 5, ('drinks quality', 'bev', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] restaurant prices', '[A] food [S] great [C] food quality', '[A] bev [S] great [C] drinks quality']
multi_path: ['[A] it [C] restaurant prices [S] great [SSEP] [A] food [C] food quality [S] great [SSEP] [A] bev [C] drinks quality [S] great', '[A] it [S] great [C] restaurant prices [SSEP] [A] food [S] great [C] food quality [SSEP] [A] bev [S] great [C] drinks quality', '[C] restaurant prices [S] great [A] it [SSEP] [C] food quality [S] great [A] food [SSEP] [C] drinks quality [S] great [A] bev', '[C] restaurant prices [A] it [S] great [SSEP] [C] food quality [A] food [S] great [SSEP] [C] drinks quality [A] bev [S] great', '[S] great [C] restaurant prices [A] it [SSEP] [S] great [C] food quality [A] food [SSEP] [S] great [C] drinks quality [A] bev']

task, data: tasd rest15
target: [('food quality', 'dogs', 'great', 'null'), ('food style_options', 'toppings', 'great', 'null')]
output: ['[A] dogs [S] great [C] food quality', '[A] toppings [S] great [C] food quality']
sent: ['amazing', 'fresh', 'dogs', 'but', 'best', 'of', 'all', 'endless', 'toppings', '!', '!', '!']
counter: {('food quality', 'dogs', 'great', 'null'): 5, ('food quality', 'toppings', 'great', 'null'): 5}
output quads: ['[A] dogs [S] great [C] food quality', '[A] toppings [S] great [C] food quality']
multi_path: ['[A] dogs [C] food quality [S] great [SSEP] [A] toppings [C] food quality [S] great', '[A] dogs [S] great [C] food quality [SSEP] [A] toppings [S] great [C] food quality', '[C] food quality [S] great [A] dogs [SSEP] [C] food quality [S] great [A] toppings', '[C] food quality [A] dogs [S] great [SSEP] [C] food quality [A] toppings [S] great', '[S] great [C] food quality [A] dogs [SSEP] [S] great [C] food quality [A] toppings']

task, data: tasd rest15
target: [('food style_options', 'trimmings', 'great', 'null')]
output: ['[A] place [S] great [C] restaurant general']
sent: ['this', 'place', 'had', 'ALL', 'the', 'trimmings', 'and', 'i', 'mean', 'all', '.']
counter: {('restaurant general', 'place', 'great', 'null'): 5}
output quads: ['[A] place [S] great [C] restaurant general']
multi_path: ['[A] place [C] restaurant general [S] great', '[A] place [S] great [C] restaurant general', '[C] restaurant general [S] great [A] place', '[C] restaurant general [A] place [S] great', '[S] great [C] restaurant general [A] place']

task, data: tasd rest15
target: [('food style_options', 'null', 'great', 'null')]
output: ['[A] cheeses [S] great [C] food quality', '[A] chilli [S] great [C] food quality', '[A] onions [S] great [C] food quality', '[A] peppers [S] great [C] food quality', '[A] relish [S] great [C] food quality']
sent: ['peppers', ',', 'onions', ',', 'relish', ',', 'chilli', ',', 'cheeses', ',', 'you', 'NAME', 'it', '.']
counter: {('food quality', 'peppers', 'great', 'null'): 5, ('food quality', 'onions', 'great', 'null'): 5, ('food quality', 'relish', 'great', 'null'): 5, ('food quality', 'chilli', 'great', 'null'): 5, ('food quality', 'cheeses', 'great', 'null'): 5}
output quads: ['[A] peppers [S] great [C] food quality', '[A] onions [S] great [C] food quality', '[A] relish [S] great [C] food quality', '[A] chilli [S] great [C] food quality', '[A] cheeses [S] great [C] food quality']
multi_path: ['[A] peppers [C] food quality [S] great [SSEP] [A] onions [C] food quality [S] great [SSEP] [A] relish [C] food quality [S] great [SSEP] [A] chilli [C] food quality [S] great [SSEP] [A] cheeses [C] food quality [S] great', '[A] peppers [S] great [C] food quality [SSEP] [A] onions [S] great [C] food quality [SSEP] [A] relish [S] great [C] food quality [SSEP] [A] chilli [S] great [C] food quality [SSEP] [A] cheeses [S] great [C] food quality', '[C] food quality [S] great [A] peppers [SSEP] [C] food quality [S] great [A] onions [SSEP] [C] food quality [S] great [A] relish [SSEP] [C] food quality [S] great [A] chilli [SSEP] [C] food quality [S] great [A] cheeses', '[C] food quality [A] peppers [S] great [SSEP] [C] food quality [A] onions [S] great [SSEP] [C] food quality [A] relish [S] great [SSEP] [C] food quality [A] chilli [S] great [SSEP] [C] food quality [A] cheeses [S] great', '[S] great [C] food quality [A] peppers [SSEP] [S] great [C] food quality [A] onions [SSEP] [S] great [C] food quality [A] relish [SSEP] [S] great [C] food quality [A] chilli [SSEP] [S] great [C] food quality [A] cheeses']

task, data: tasd rest15
target: [('food quality', 'hot dog', 'great', 'null'), ('restaurant general', 'place', 'great', 'null')]
output: ['[A] place [S] great [C] restaurant general']
sent: ['amazing', 'fun', 'for', 'hot', 'dog', 'lovers', 'of', 'all', 'ages', 'PLEASE', 'do', 'yourself', 'a', 'favor', 'and', 'check', 'this', 'place', 'out', '!', '!', '!', '!']
counter: {('restaurant general', 'place', 'great', 'null'): 5}
output quads: ['[A] place [S] great [C] restaurant general']
multi_path: ['[A] place [C] restaurant general [S] great', '[A] place [S] great [C] restaurant general', '[C] restaurant general [S] great [A] place', '[C] restaurant general [A] place [S] great', '[S] great [C] restaurant general [A] place']

task, data: tasd rest15
target: [('restaurant general', 'null', 'great', 'null')]
output: ['[A] dining [S] great [C] food quality']
sent: ['BEST', 'DINING', 'EXPERIENCE', 'IN', 'THE', 'WEST', 'VILLAGE', '!']
counter: {('food quality', 'dining', 'great', 'null'): 5}
output quads: ['[A] dining [S] great [C] food quality']
multi_path: ['[A] dining [C] food quality [S] great', '[A] dining [S] great [C] food quality', '[C] food quality [S] great [A] dining', '[C] food quality [A] dining [S] great', '[S] great [C] food quality [A] dining']

task, data: tasd rest15
target: [('ambience general', 'decor', 'great', 'null'), ('food quality', 'food', 'great', 'null'), ('restaurant general', 'null', 'great', 'null'), ('service general', 'null', 'great', 'null')]
output: ['[A] decor [S] great [C] ambience general', '[A] food [S] great [C] food quality', '[A] hospitality [S] great [C] service general', '[A] null [S] great [C] restaurant general']
sent: ['Highly', 'impressed', 'from', 'the', 'decor', 'to', 'the', 'food', 'to', 'the', 'hospitality', 'to', 'the', 'great', 'night', 'I', 'had', '!']
counter: {('ambience general', 'decor', 'great', 'null'): 5, ('food quality', 'food', 'great', 'null'): 5, ('service general', 'hospitality', 'great', 'null'): 3, ('restaurant general', 'null', 'great', 'null'): 4, ('ambience general', 'hospitality', 'great', 'null'): 2, ('ambience general', 'null', 'great', 'null'): 1}
output quads: ['[A] decor [S] great [C] ambience general', '[A] food [S] great [C] food quality', '[A] hospitality [S] great [C] service general', '[A] null [S] great [C] restaurant general']
multi_path: ['[A] decor [C] ambience general [S] great [SSEP] [A] food [C] food quality [S] great [SSEP] [A] hospitality [C] service general [S] great [SSEP] [A] it [C] restaurant general [S] great', '[A] decor [S] great [C] ambience general [SSEP] [A] food [S] great [C] food quality [SSEP] [A] hospitality [S] great [C] service general [SSEP] [A] it [S] great [C] restaurant general', '[C] ambience general [S] great [A] decor [SSEP] [C] food quality [S] great [A] food [SSEP] [C] ambience general [S] great [A] hospitality [SSEP] [C] restaurant general [S] great [A] it', '[C] ambience general [A] decor [S] great [SSEP] [C] food quality [A] food [S] great [SSEP] [C] ambience general [A] hospitality [S] great [SSEP] [C] restaurant general [A] it [S] great', '[S] great [C] ambience general [A] decor [SSEP] [S] great [C] food quality [A] food [SSEP] [S] great [C] service general [A] hospitality [SSEP] [S] great [C] ambience general [A] it']

task, data: tasd rest15
target: [('food quality', 'food', 'great', 'null'), ('service general', 'null', 'ok', 'null')]
output: ['[A] food [S] bad [C] food quality', '[A] null [S] bad [C] service general']
sent: ['Food', 'took', 'some', 'time', 'to', 'prepare', ',', 'all', 'worth', 'waiting', 'for', '.']
counter: {('food quality', 'food', 'bad', 'null'): 5, ('service general', 'null', 'bad', 'null'): 5}
output quads: ['[A] food [S] bad [C] food quality', '[A] null [S] bad [C] service general']
multi_path: ['[A] food [C] food quality [S] bad [SSEP] [A] it [C] service general [S] bad', '[A] food [S] bad [C] food quality [SSEP] [A] it [S] bad [C] service general', '[C] food quality [S] bad [A] food [SSEP] [C] service general [S] bad [A] it', '[C] food quality [A] food [S] bad [SSEP] [C] service general [A] it [S] bad', '[S] bad [C] food quality [A] food [SSEP] [S] bad [C] service general [A] it']

task, data: tasd rest15
target: [('food quality', 'mushroom sauce', 'bad', 'null')]
output: ['[A] maggot in mushroom sauce [S] bad [C] food quality']
sent: ['Nevertheless', ',', 'I', 'finished', 'my', 'plate', ',', 'and', 'that', "'s", 'when', 'I', 'found', 'a', 'maggot', 'in', 'mushroom', 'sauce', 'at', 'the', 'bottom', '.']
counter: {('food quality', 'maggot in mushroom sauce', 'bad', 'null'): 5}
output quads: ['[A] maggot in mushroom sauce [S] bad [C] food quality']
multi_path: ['[A] maggot in mushroom sauce [C] food quality [S] bad', '[A] maggot in mushroom sauce [S] bad [C] food quality', '[C] food quality [S] bad [A] maggot in mushroom sauce', '[C] food quality [A] maggot in mushroom sauce [S] bad', '[S] bad [C] food quality [A] maggot in mushroom sauce']

task, data: tasd rest15
target: [('service general', 'manager', 'bad', 'null'), ('service general', 'manager', 'great', 'null')]
output: ['[A] manager [S] great [C] service general']
sent: ['I', 'showed', 'it', 'to', 'the', 'manager', ',', 'and', 'he', 'smilingly', 'apologized', 'and', 'brought', 'us', 'two', 'free', 'desserts', '(but', 'did', 'not', 'ask', 'us', 'what', 'we', 'wanted', 'and', 'so', 'brought', 'the', 'last', 'two', 'desserts', 'we', 'would', 'have', 'asked', 'for', ')', '.']
counter: {('service general', 'manager', 'great', 'null'): 5}
output quads: ['[A] manager [S] great [C] service general']
multi_path: ['[A] manager [C] service general [S] great', '[A] manager [S] great [C] service general', '[C] service general [S] great [A] manager', '[C] service general [A] manager [S] great', '[S] great [C] service general [A] manager']

task, data: tasd rest15
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] food [S] bad [C] food quality', '[A] manager [S] bad [C] service general']
sent: ['When', 'the', 'bill', 'came', ',', 'nothing', 'was', 'comped', ',', 'so', 'I', 'told', 'the', 'manager', 'very', 'politely', 'that', 'we', 'were', 'willing', 'to', 'pay', 'for', 'the', 'wine', ',', 'but', 'I', 'didn', "'t", 'think', 'I', 'should', 'have', 'to', 'pay', 'for', 'food', 'with', 'a', 'maggot', 'in', 'it', '.']
counter: {('service general', 'manager', 'bad', 'null'): 5, ('food quality', 'food', 'bad', 'null'): 4}
output quads: ['[A] manager [S] bad [C] service general', '[A] food [S] bad [C] food quality']
multi_path: ['[A] manager [C] service general [S] bad', '[A] manager [S] bad [C] service general [SSEP] [A] food [S] bad [C] food quality', '[C] service general [S] bad [A] manager [SSEP] [C] food quality [S] bad [A] food', '[C] service general [A] manager [S] bad [SSEP] [C] food quality [A] food [S] bad', '[S] bad [C] service general [A] manager [SSEP] [S] bad [C] food quality [A] food']

task, data: tasd rest15
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] null [S] great [C] restaurant miscellaneous']
sent: ['We', 'paid', 'and', 'left', 'because', 'we', 'didn', "'t", 'feel', 'like', 'arguing', 'any', 'more', '.']
counter: {('restaurant miscellaneous', 'null', 'great', 'null'): 3, ('restaurant general', 'null', 'great', 'null'): 2}
output quads: ['[A] null [S] great [C] restaurant miscellaneous']
multi_path: ['[A] it [C] restaurant miscellaneous [S] great', '[A] it [S] great [C] restaurant general', '[C] restaurant miscellaneous [S] great [A] it', '[C] restaurant miscellaneous [A] it [S] great', '[S] great [C] restaurant general [A] it']

task, data: tasd rest15
target: [('restaurant miscellaneous', 'restaurant', 'great', 'null'), ('service general', 'customer service', 'bad', 'null')]
output: ['[A] customer service [S] bad [C] service general']
sent: ['For', 'a', 'restaurant', 'with', 'such', 'a', 'good', 'reputation', 'and', 'that', 'is', 'usually', 'so', 'packed', ',', 'there', 'was', 'no', 'reason', 'for', 'such', 'a', 'lack', 'of', 'intelligent', 'customer', 'service', '.']
counter: {('service general', 'customer service', 'bad', 'null'): 5}
output quads: ['[A] customer service [S] bad [C] service general']
multi_path: ['[A] customer service [C] service general [S] bad', '[A] customer service [S] bad [C] service general', '[C] service general [S] bad [A] customer service', '[C] service general [A] customer service [S] bad', '[S] bad [C] service general [A] customer service']

task, data: tasd rest15
target: [('food quality', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] ambience general']
sent: ['Unhygienic']
counter: {('ambience general', 'null', 'bad', 'null'): 4, ('food quality', 'null', 'bad', 'null'): 1}
output quads: ['[A] null [S] bad [C] ambience general']
multi_path: ['[A] it [C] ambience general [S] bad', '[A] it [S] bad [C] ambience general', '[C] ambience general [S] bad [A] it', '[C] ambience general [A] it [S] bad', '[S] bad [C] food quality [A] it']

task, data: tasd rest15
target: [('food prices', 'food', 'great', 'null'), ('food quality', 'food', 'great', 'null'), ('food style_options', 'food', 'great', 'null')]
output: ['[A] food [S] great [C] food prices', '[A] food [S] great [C] food quality']
sent: ['The', 'food', 'is', 'flavorful', ',', 'plentiful', 'and', 'reasonably', 'priced', '.']
counter: {('food quality', 'food', 'great', 'null'): 5, ('food prices', 'food', 'great', 'null'): 5}
output quads: ['[A] food [S] great [C] food quality', '[A] food [S] great [C] food prices']
multi_path: ['[A] food [C] food quality [S] great [SSEP] [A] food [C] food prices [S] great', '[A] food [S] great [C] food quality [SSEP] [A] food [S] great [C] food prices', '[C] food quality [S] great [A] food [SSEP] [C] food prices [S] great [A] food', '[C] food quality [A] food [S] great [SSEP] [C] food prices [A] food [S] great', '[S] great [C] food quality [A] food [SSEP] [S] great [C] food prices [A] food']

task, data: tasd rest15
target: [('restaurant miscellaneous', 'place', 'great', 'null')]
output: ['[A] place [S] great [C] restaurant general']
sent: ['It', "'s", 'a', 'great', 'place', 'to', 'order', 'from', 'or', 'sit-in', '.']
counter: {('restaurant general', 'place', 'great', 'null'): 5}
output quads: ['[A] place [S] great [C] restaurant general']
multi_path: ['[A] place [C] restaurant general [S] great', '[A] place [S] great [C] restaurant general', '[C] restaurant general [S] great [A] place', '[C] restaurant general [A] place [S] great', '[S] great [C] restaurant general [A] place']

task, data: tasd rest15
target: [('ambience general', 'null', 'great', 'null'), ('restaurant general', 'null', 'great', 'null'), ('restaurant prices', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] ambience general', '[A] null [S] great [C] restaurant prices']
sent: ['Inexpensive', ',', 'unassuming', ',', 'great', 'time', '!']
counter: {('restaurant prices', 'null', 'great', 'null'): 5, ('ambience general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] restaurant prices', '[A] null [S] great [C] ambience general']
multi_path: ['[A] it [C] restaurant prices [S] great [SSEP] [A] it [C] ambience general [S] great', '[A] it [S] great [C] restaurant prices [SSEP] [A] it [S] great [C] ambience general', '[C] restaurant prices [S] great [A] it [SSEP] [C] ambience general [S] great [A] it', '[C] restaurant prices [A] it [S] great [SSEP] [C] ambience general [A] it [S] great', '[S] great [C] restaurant prices [A] it [SSEP] [S] great [C] ambience general [A] it']

task, data: tasd rest15
target: [('food quality', 'rolls', 'great', 'null'), ('food style_options', 'rolls', 'great', 'null')]
output: ['[A] creative rolls [S] great [C] food quality']
sent: ['Good', 'creative', 'rolls', '!']
counter: {('food quality', 'creative rolls', 'great', 'null'): 5}
output quads: ['[A] creative rolls [S] great [C] food quality']
multi_path: ['[A] creative rolls [C] food quality [S] great', '[A] creative rolls [S] great [C] food quality', '[C] food quality [S] great [A] creative rolls', '[C] food quality [A] creative rolls [S] great', '[S] great [C] food quality [A] creative rolls']

task, data: tasd rest15
target: [('restaurant miscellaneous', 'yamato', 'great', 'null')]
output: ['[A] yamato [S] great [C] restaurant general']
sent: ['Yamato', 'is', 'an', 'excellent', 'place', 'to', 'go', 'if', 'youre', 'not', 'into', 'sashimi', ',', 'or', 'if', 'you', 'have', 'friends', 'who', 'doesnt', 'like', 'sushi', 'much', '.']
counter: {('restaurant miscellaneous', 'yamato', 'great', 'null'): 2, ('restaurant general', 'yamato', 'great', 'null'): 3}
output quads: ['[A] yamato [S] great [C] restaurant general']
multi_path: ['[A] yamato [C] restaurant miscellaneous [S] great', '[A] yamato [S] great [C] restaurant miscellaneous', '[C] restaurant general [S] great [A] yamato', '[C] restaurant general [A] yamato [S] great', '[S] great [C] restaurant general [A] yamato']

task, data: tasd rest15
target: [('food quality', 'rolls', 'great', 'null'), ('food quality', 'triple color and norwegetan rolls', 'great', 'null'), ('food style_options', 'triple color and norwegetan rolls', 'great', 'null')]
output: ['[A] rolls [S] great [C] food quality', '[A] rolls [S] great [C] food style_options', '[A] triple color and norwegetan rolls [S] great [C] food quality']
sent: ['They', 'have', 'great', 'rolls', ',', 'the', 'triple', 'color', 'and', 'norwegetan', 'rolls', ',', 'are', 'awesome', 'and', 'filling', '.']
counter: {('food quality', 'rolls', 'great', 'null'): 5, ('food quality', 'triple color and norwegetan rolls', 'great', 'null'): 4, ('food style_options', 'rolls', 'great', 'null'): 3, ('food style_options', 'triple color and norwegetan rolls', 'great', 'null'): 2}
output quads: ['[A] rolls [S] great [C] food quality', '[A] triple color and norwegetan rolls [S] great [C] food quality', '[A] rolls [S] great [C] food style_options']
multi_path: ['[A] rolls [C] food quality [S] great [SSEP] [A] triple color and norwegetan rolls [C] food quality [S] great [SSEP] [A] rolls [C] food style_options [S] great', '[A] rolls [S] great [C] food quality [SSEP] [A] triple color and norwegetan rolls [S] great [C] food quality [SSEP] [A] rolls [S] great [C] food style_options', '[C] food quality [S] great [A] rolls [SSEP] [C] food quality [S] great [A] triple color and norwegetan rolls [SSEP] [C] food style_options [S] great [A] triple color and norwegetan rolls', '[C] food quality [A] rolls [S] great [SSEP] [C] food quality [A] triple color and norwegetan rolls [S] great [SSEP] [C] food style_options [A] rolls [S] great', '[S] great [C] food quality [A] rolls [SSEP] [S] great [C] food style_options [A] triple color and norwegetan rolls']

task, data: tasd rest15
target: [('food quality', 'dessert', 'great', 'null'), ('food style_options', 'regular roll', 'great', 'null'), ('food style_options', 'special roll', 'great', 'null')]
output: ['[A] regular roll [S] great [C] food style_options', '[A] special roll [S] great [C] food style_options']
sent: ['One', 'special', 'roll', 'and', 'one', 'regular', 'roll', 'is', 'enough', 'to', 'fill', 'you', 'up', ',', 'but', 'save', 'room', 'for', 'dessert', '!']
counter: {('food style_options', 'roll', 'great', 'null'): 2, ('food style_options', 'dessert', 'ok', 'null'): 2, ('food style_options', 'special roll', 'great', 'null'): 3, ('food style_options', 'regular roll', 'great', 'null'): 3}
output quads: ['[A] special roll [S] great [C] food style_options', '[A] regular roll [S] great [C] food style_options']
multi_path: ['[A] roll [C] food style_options [S] great [SSEP] [A] dessert [C] food style_options [S] ok', '[A] roll [S] great [C] food style_options [SSEP] [A] dessert [S] ok [C] food style_options', '[C] food style_options [S] great [A] special roll [SSEP] [C] food style_options [S] great [A] regular roll', '[C] food style_options [A] special roll [S] great [SSEP] [C] food style_options [A] regular roll [S] great', '[S] great [C] food style_options [A] special roll [SSEP] [S] great [C] food style_options [A] regular roll']

task, data: tasd rest15
target: [('ambience general', 'interior', 'bad', 'null')]
output: ['[A] interior [S] great [C] ambience general']
sent: ['Mazing', 'interior', '.']
counter: {('ambience general', 'interior', 'great', 'null'): 5}
output quads: ['[A] interior [S] great [C] ambience general']
multi_path: ['[A] interior [C] ambience general [S] great', '[A] interior [S] great [C] ambience general', '[C] ambience general [S] great [A] interior', '[C] ambience general [A] interior [S] great', '[S] great [C] ambience general [A] interior']

task, data: tasd rest15
target: [('food quality', 'modern japanese', 'great', 'null')]
output: ['[A] spot [S] great [C] food quality']
sent: ['I', "'ve", 'had', 'my', 'fair', 'share', 'of', 'modern', 'Japanese', 'and', 'this', 'spot', 'delivers', '.']
counter: {('restaurant general', 'spot', 'great', 'null'): 2, ('food quality', 'spot', 'great', 'null'): 3}
output quads: ['[A] spot [S] great [C] food quality']
multi_path: ['[A] spot [C] restaurant general [S] great', '[A] spot [S] great [C] restaurant general', '[C] food quality [S] great [A] spot', '[C] food quality [A] spot [S] great', '[S] great [C] food quality [A] spot']

task, data: tasd rest15
target: [('ambience general', 'atmosphere', 'bad', 'null'), ('ambience general', 'scheme of mirrors', 'bad', 'null')]
output: ['[A] atmosphere [S] great [C] ambience general']
sent: ['The', 'atmosphere', 'was', 'pretty', 'nice', 'but', 'had', 'a', 'bit', 'lacking', ',', 'which', 'it', 'tries', 'to', 'make', 'up', 'for', 'with', 'a', 'crazy', 'scheme', 'of', 'mirrors', '.']
counter: {('ambience general', 'atmosphere', 'great', 'null'): 5}
output quads: ['[A] atmosphere [S] great [C] ambience general']
multi_path: ['[A] atmosphere [C] ambience general [S] great', '[A] atmosphere [S] great [C] ambience general', '[C] ambience general [S] great [A] atmosphere', '[C] ambience general [A] atmosphere [S] great', '[S] great [C] ambience general [A] atmosphere']

task, data: tasd rest15
target: [('ambience general', 'null', 'bad', 'null')]
output: ['[A] null [S] great [C] location general']
sent: ['If', 'you', "'re", 'into', 'being', 'lost', 'when', 'you', "'re", 'just', 'five', 'feet', 'from', 'your', 'table', 'then', 'hey', ',', 'that', "'s", 'a', 'good', 'thing', '.']
counter: {('location general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] location general']
multi_path: ['[A] it [C] location general [S] great', '[A] it [S] great [C] location general', '[C] location general [S] great [A] it', '[C] location general [A] it [S] great', '[S] great [C] location general [A] it']

task, data: tasd rest15
target: [('ambience general', 'mirrors', 'bad', 'null'), ('food quality', 'modern japanese food', 'great', 'null')]
output: ['[A] null [S] great [C] restaurant miscellaneous']
sent: ['Despite', 'the', 'confusing', 'mirrors', 'this', 'will', 'likely', 'be', 'my', 'go-to', 'for', 'modern', 'Japanese', 'food', 'for', 'the', 'foreseeable', 'future', '.']
counter: {('restaurant miscellaneous', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] restaurant miscellaneous']
multi_path: ['[A] it [C] restaurant miscellaneous [S] great', '[A] it [S] great [C] restaurant miscellaneous', '[C] restaurant miscellaneous [S] great [A] it', '[C] restaurant miscellaneous [A] it [S] great', '[S] great [C] restaurant miscellaneous [A] it']

task, data: tasd rest15
target: [('ambience general', 'place', 'ok', 'null'), ('food quality', 'chinese style indian food', 'great', 'null')]
output: ['[A] indian food [S] great [C] food quality']
sent: ['Not', 'a', 'very', 'fancy', 'place', 'but', 'very', 'good', 'Chinese', 'style', 'Indian', 'food', '.']
counter: {('ambience general', 'place', 'bad', 'null'): 2, ('food quality', 'indian food', 'great', 'null'): 4, ('restaurant miscellaneous', 'place', 'bad', 'null'): 2, ('food quality', 'chinese style indian food', 'great', 'null'): 1, ('restaurant miscellaneous', 'place', 'ok', 'null'): 1}
output quads: ['[A] indian food [S] great [C] food quality']
multi_path: ['[A] place [C] ambience general [S] bad [SSEP] [A] indian food [C] food quality [S] great', '[A] place [S] bad [C] ambience general [SSEP] [A] indian food [S] great [C] food quality', '[C] restaurant miscellaneous [S] bad [A] place [SSEP] [C] food quality [S] great [A] chinese style indian food', '[C] restaurant miscellaneous [A] place [S] bad [SSEP] [C] food quality [A] indian food [S] great', '[S] ok [C] restaurant miscellaneous [A] place [SSEP] [S] great [C] food quality [A] indian food']

task, data: tasd rest15
target: [('food quality', 'chicken lollipop', 'great', 'null'), ('food quality', 'chilli chicken', 'bad', 'null'), ('food quality', 'dishes', 'bad', 'null')]
output: ['[A] chicken lollipop [S] great [C] food quality', '[A] chilli chicken [S] great [C] food quality', '[A] dishes [S] great [C] food quality']
sent: ['The', 'chicken', 'lollipop', 'is', 'my', 'favorite', ',', 'most', 'of', 'the', 'dishes', '(I', 'have', 'to', 'agree', 'with', 'a', 'previous', 'reviewer', ')', 'are', 'quite', 'oily', 'and', 'very', 'spicy', ',', 'espeically', 'the', 'Chilli', 'Chicken', '.']
counter: {('food quality', 'chicken lollipop', 'great', 'null'): 5, ('food quality', 'dishes', 'great', 'null'): 5, ('food quality', 'chilli chicken', 'great', 'null'): 5}
output quads: ['[A] chicken lollipop [S] great [C] food quality', '[A] dishes [S] great [C] food quality', '[A] chilli chicken [S] great [C] food quality']
multi_path: ['[A] chicken lollipop [C] food quality [S] great [SSEP] [A] dishes [C] food quality [S] great [SSEP] [A] chilli chicken [C] food quality [S] great', '[A] chicken lollipop [S] great [C] food quality [SSEP] [A] dishes [S] great [C] food quality [SSEP] [A] chilli chicken [S] great [C] food quality', '[C] food quality [S] great [A] chicken lollipop [SSEP] [C] food quality [S] great [A] dishes [SSEP] [C] food quality [S] great [A] chilli chicken', '[C] food quality [A] chicken lollipop [S] great [SSEP] [C] food quality [A] dishes [S] great [SSEP] [C] food quality [A] chilli chicken [S] great', '[S] great [C] food quality [A] chicken lollipop [SSEP] [S] great [C] food quality [A] dishes [SSEP] [S] great [C] food quality [A] chilli chicken']

task, data: tasd rest15
target: [('food quality', 'vegetarian dish', 'bad', 'null'), ('food style_options', 'vegetarian dish', 'bad', 'null'), ('service general', 'chef', 'bad', 'null')]
output: ['[A] chef [S] bad [C] food style_options']
sent: ['Rather', 'than', 'preparing', 'vegetarian', 'dish', ',', 'the', 'chef', 'presented', 'me', 'with', 'a', 'plate', 'of', 'steamed', 'vegetables', '(minus', 'sauce', ',', 'seasoning', ',', 'or', 'any', 'form', 'or', 'aesthetic', 'presentation', ')', '.']
counter: {('food style_options', 'chef', 'bad', 'null'): 4, ('service general', 'chef', 'bad', 'null'): 1}
output quads: ['[A] chef [S] bad [C] food style_options']
multi_path: ['[A] chef [C] food style_options [S] bad', '[A] chef [S] bad [C] service general', '[C] food style_options [S] bad [A] chef', '[C] food style_options [A] chef [S] bad', '[S] bad [C] food style_options [A] chef']

task, data: tasd rest15
target: [('restaurant general', 'null', 'bad', 'null')]
output: ['[A] dinner [S] bad [C] food quality', '[A] null [S] bad [C] food quality']
sent: ['I', 'was', 'so', 'stunned', ',', 'and', 'I', 'left', 'the', 'dinner', 'hungry', 'and', 'majorly', 'disappointing', '.']
counter: {('food quality', 'null', 'bad', 'null'): 3, ('food quality', 'dinner', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] food quality', '[A] dinner [S] bad [C] food quality']
multi_path: ['[A] it [C] food quality [S] bad [SSEP] [A] dinner [C] food quality [S] bad', '[A] it [S] bad [C] food quality [SSEP] [A] dinner [S] bad [C] food quality', '[C] food quality [S] bad [A] dinner', '[C] food quality [A] it [S] bad [SSEP] [C] food quality [A] dinner [S] bad', '[S] bad [C] food quality [A] dinner']

task, data: tasd rest15
target: [('restaurant miscellaneous', 'place', 'bad', 'null')]
output: ['[A] place [S] great [C] restaurant general']
sent: ['This', 'place', 'survives', 'on', 'reputation', 'alone', '.']
counter: {('restaurant general', 'place', 'great', 'null'): 5}
output quads: ['[A] place [S] great [C] restaurant general']
multi_path: ['[A] place [C] restaurant general [S] great', '[A] place [S] great [C] restaurant general', '[C] restaurant general [S] great [A] place', '[C] restaurant general [A] place [S] great', '[S] great [C] restaurant general [A] place']

task, data: tasd rest15
target: [('food quality', 'meal', 'great', 'null'), ('restaurant general', 'null', 'great', 'null'), ('service general', 'service', 'great', 'null')]
output: ['[A] meal [S] great [C] food quality', '[A] null [S] great [C] ambience general', '[A] service [S] great [C] service general']
sent: ['never', 'swaying', ',', 'never', 'a', 'bad', 'meal', ',', 'never', 'bad', 'service', '.', '.', '.']
counter: {('service general', 'null', 'great', 'null'): 2, ('food quality', 'meal', 'great', 'null'): 4, ('service general', 'service', 'great', 'null'): 5, ('ambience general', 'null', 'great', 'null'): 3}
output quads: ['[A] meal [S] great [C] food quality', '[A] service [S] great [C] service general', '[A] null [S] great [C] ambience general']
multi_path: ['[A] it [C] service general [S] great [SSEP] [A] meal [C] food quality [S] great [SSEP] [A] service [C] service general [S] great', '[A] it [S] great [C] service general [SSEP] [A] meal [S] great [C] food quality [SSEP] [A] service [S] great [C] service general', '[C] ambience general [S] great [A] it [SSEP] [C] food quality [S] great [A] meal [SSEP] [C] service general [S] great [A] service', '[C] ambience general [A] it [S] great [SSEP] [C] food quality [A] meal [S] great [SSEP] [C] service general [A] service [S] great', '[S] great [C] service general [A] service [SSEP] [S] great [C] ambience general [A] it']

task, data: tasd rest15
target: [('drinks style_options', 'wine list', 'great', 'null'), ('food quality', 'food', 'great', 'null'), ('location general', 'neighborhood', 'great', 'null'), ('service general', 'service', 'great', 'null')]
output: ['[A] food [S] great [C] food quality', '[A] service [S] great [C] service general', '[A] wine list [S] great [C] drinks style_options']
sent: ['great', 'food', ',', 'great', 'wine', 'list', ',', 'great', 'service', 'in', 'a', 'great', 'neighborhood', '.', '.', '.']
counter: {('food quality', 'food', 'great', 'null'): 5, ('drinks style_options', 'wine list', 'great', 'null'): 5, ('service general', 'service', 'great', 'null'): 5}
output quads: ['[A] food [S] great [C] food quality', '[A] wine list [S] great [C] drinks style_options', '[A] service [S] great [C] service general']
multi_path: ['[A] food [C] food quality [S] great [SSEP] [A] wine list [C] drinks style_options [S] great [SSEP] [A] service [C] service general [S] great', '[A] food [S] great [C] food quality [SSEP] [A] wine list [S] great [C] drinks style_options [SSEP] [A] service [S] great [C] service general', '[C] food quality [S] great [A] food [SSEP] [C] drinks style_options [S] great [A] wine list [SSEP] [C] service general [S] great [A] service', '[C] food quality [A] food [S] great [SSEP] [C] drinks style_options [A] wine list [S] great [SSEP] [C] service general [A] service [S] great', '[S] great [C] food quality [A] food [SSEP] [S] great [C] drinks style_options [A] wine list [SSEP] [S] great [C] service general [A] service']

task, data: tasd rest15
target: [('restaurant general', "patsy's pizza", 'great', 'null')]
output: ["[A] patsy's pizza [S] great [C] food quality"]
sent: ['Patsy', "'s", 'Pizza', '=', 'true', 'love']
counter: {('food quality', "patsy's pizza", 'great', 'null'): 5}
output quads: ["[A] patsy's pizza [S] great [C] food quality"]
multi_path: ["[A] patsy's pizza [C] food quality [S] great", "[A] patsy's pizza [S] great [C] food quality", "[C] food quality [S] great [A] patsy's pizza", "[C] food quality [A] patsy's pizza [S] great", "[S] great [C] food quality [A] patsy's pizza"]

task, data: tasd rest15
target: [('food quality', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] service general']
sent: ['In', 'about', '12', 'minutes', ',', 'the', 'thing', 'is', 'gone', '.']
counter: {('service general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] service general']
multi_path: ['[A] it [C] service general [S] great', '[A] it [S] great [C] service general', '[C] service general [S] great [A] it', '[C] service general [A] it [S] great', '[S] great [C] service general [A] it']

task, data: tasd rest15
target: [('food quality', 'toppings', 'great', 'null'), ('restaurant miscellaneous', 'place', 'great', 'null')]
output: ['[A] toppings [S] great [C] food quality']
sent: ['great', 'toppings', 'definitely', 'a', 'place', 'you', 'need', 'to', 'check', 'out', 'for', 'late', 'night', 'munchies', 'or', 'a', 'mid', 'day', 'boost', '!']
counter: {('food quality', 'toppings', 'great', 'null'): 5}
output quads: ['[A] toppings [S] great [C] food quality']
multi_path: ['[A] toppings [C] food quality [S] great', '[A] toppings [S] great [C] food quality', '[C] food quality [S] great [A] toppings', '[C] food quality [A] toppings [S] great', '[S] great [C] food quality [A] toppings']

task, data: tasd rest15
target: [('food quality', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] food quality', '[A] null [S] great [C] food style_options']
sent: ['Great', ',', 'original', 'taste', '.']
counter: {('food quality', 'null', 'great', 'null'): 5, ('food style_options', 'null', 'great', 'null'): 3}
output quads: ['[A] null [S] great [C] food quality', '[A] null [S] great [C] food style_options']
multi_path: ['[A] it [C] food quality [S] great [SSEP] [A] it [C] food style_options [S] great', '[A] it [S] great [C] food quality [SSEP] [A] it [S] great [C] food style_options', '[C] food quality [S] great [A] it', '[C] food quality [A] it [S] great [SSEP] [C] food style_options [A] it [S] great', '[S] great [C] food quality [A] it']

task, data: tasd rest15
target: [('food quality', 'dishes', 'bad', 'null'), ('restaurant general', 'null', 'great', 'null')]
output: ['[A] dining experience [S] great [C] food quality', '[A] dishes [S] bad [C] food quality']
sent: ['For', 'me', 'dishes', 'a', 'little', 'oily', ',', 'but', 'overall', 'dining', 'experience', 'good', '.']
counter: {('food quality', 'dishes', 'bad', 'null'): 5, ('food quality', 'dining experience', 'great', 'null'): 3, ('food quality', 'dining', 'great', 'null'): 2}
output quads: ['[A] dishes [S] bad [C] food quality', '[A] dining experience [S] great [C] food quality']
multi_path: ['[A] dishes [C] food quality [S] bad [SSEP] [A] dining experience [C] food quality [S] great', '[A] dishes [S] bad [C] food quality [SSEP] [A] dining experience [S] great [C] food quality', '[C] food quality [S] bad [A] dishes [SSEP] [C] food quality [S] great [A] dining', '[C] food quality [A] dishes [S] bad [SSEP] [C] food quality [A] dining experience [S] great', '[S] bad [C] food quality [A] dishes [SSEP] [S] great [C] food quality [A] dining']

task, data: tasd rest15
target: [('food prices', 'null', 'great', 'null'), ('food quality', 'null', 'great', 'null')]
output: ['[A] flavors [S] great [C] food quality', '[A] null [S] great [C] restaurant prices']
sent: ['The', 'flavors', 'are', 'amazing', 'and', 'the', 'value', 'is', 'phenomenal', '.']
counter: {('food quality', 'flavors', 'great', 'null'): 5, ('restaurant prices', 'null', 'great', 'null'): 5}
output quads: ['[A] flavors [S] great [C] food quality', '[A] null [S] great [C] restaurant prices']
multi_path: ['[A] flavors [C] food quality [S] great [SSEP] [A] it [C] restaurant prices [S] great', '[A] flavors [S] great [C] food quality [SSEP] [A] it [S] great [C] restaurant prices', '[C] food quality [S] great [A] flavors [SSEP] [C] restaurant prices [S] great [A] it', '[C] food quality [A] flavors [S] great [SSEP] [C] restaurant prices [A] it [S] great', '[S] great [C] food quality [A] flavors [SSEP] [S] great [C] restaurant prices [A] it']

task, data: tasd rest15
target: [('ambience general', 'place', 'bad', 'null'), ('restaurant miscellaneous', 'place', 'bad', 'null')]
output: ['[A] place [S] bad [C] ambience general']
sent: ['Be', 'prepared', 'to', 'wait', ',', 'because', 'the', 'place', 'is', 'pretty', 'tiny', '.']
counter: {('ambience general', 'place', 'bad', 'null'): 5}
output quads: ['[A] place [S] bad [C] ambience general']
multi_path: ['[A] place [C] ambience general [S] bad', '[A] place [S] bad [C] ambience general', '[C] ambience general [S] bad [A] place', '[C] ambience general [A] place [S] bad', '[S] bad [C] ambience general [A] place']

task, data: tasd rest15
target: [('restaurant miscellaneous', 'null', 'ok', 'null')]
output: ['[A] null [S] bad [C] service general']
sent: ['Also', ',', 'they', 'do', 'not', 'take', 'credit', 'card', 'so', 'come', 'with', 'cash', '!']
counter: {('service general', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] service general']
multi_path: ['[A] it [C] service general [S] bad', '[A] it [S] bad [C] service general', '[C] service general [S] bad [A] it', '[C] service general [A] it [S] bad', '[S] bad [C] service general [A] it']

task, data: tasd rest15
target: [('ambience general', 'dj', 'great', 'null'), ('restaurant general', 'null', 'great', 'null')]
output: ['[A] dj [S] great [C] ambience general']
sent: ['The', 'DJ', 'is', 'awesome', ',', 'I', 'have', 'been', 'there', 'for', 'my', 'birthday', 'and', 'a', 'bunch', 'of', 'other', 'times', 'with', 'friends', 'and', 'I', 'keep', 'going', 'back', '.']
counter: {('ambience general', 'dj', 'great', 'null'): 5}
output quads: ['[A] dj [S] great [C] ambience general']
multi_path: ['[A] dj [C] ambience general [S] great', '[A] dj [S] great [C] ambience general', '[C] ambience general [S] great [A] dj', '[C] ambience general [A] dj [S] great', '[S] great [C] ambience general [A] dj']

task, data: tasd rest15
target: [('service general', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] restaurant general']
sent: ['Which', 'lets', 'face', 'it', '.', '.', '.', '.at', 'times', 'it', "'s", 'a', 'good', 'thing', '.']
counter: {('restaurant general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] restaurant general']
multi_path: ['[A] it [C] restaurant general [S] great', '[A] it [S] great [C] restaurant general', '[C] restaurant general [S] great [A] it', '[C] restaurant general [A] it [S] great', '[S] great [C] restaurant general [A] it']

task, data: tasd rest15
target: [('restaurant general', 'null', 'great', 'null'), ('restaurant prices', 'null', 'great', 'null')]
output: ['[A] null [S] bad [C] restaurant prices', '[A] null [S] great [C] restaurant general']
sent: ['In', 'the', 'end', 'you', 'end', 'up', 'with', 'a', 'fair', 'tab', 'and', 'NOTHING', 'BUT', 'A', 'GREAT', 'TIME', '!', '!', '!']
counter: {('restaurant general', 'null', 'great', 'null'): 5, ('restaurant prices', 'null', 'bad', 'null'): 3}
output quads: ['[A] null [S] great [C] restaurant general', '[A] null [S] bad [C] restaurant prices']
multi_path: ['[A] it [C] restaurant general [S] great [SSEP] [A] it [C] restaurant prices [S] bad', '[A] it [S] great [C] restaurant general', '[C] restaurant general [S] great [A] it [SSEP] [C] restaurant prices [S] bad [A] it', '[C] restaurant general [A] it [S] great', '[S] great [C] restaurant general [A] it [SSEP] [S] bad [C] restaurant prices [A] it']

task, data: tasd rest15
target: [('food quality', 'menu', 'great', 'null')]
output: ['[A] menu [S] great [C] food style_options']
sent: ['Everything', 'on', 'the', 'menu', 'is', 'great', '.']
counter: {('food style_options', 'menu', 'great', 'null'): 5}
output quads: ['[A] menu [S] great [C] food style_options']
multi_path: ['[A] menu [C] food style_options [S] great', '[A] menu [S] great [C] food style_options', '[C] food style_options [S] great [A] menu', '[C] food style_options [A] menu [S] great', '[S] great [C] food style_options [A] menu']

task, data: tasd rest15
target: [('ambience general', 'null', 'great', 'null'), ('food quality', 'food', 'great', 'null'), ('restaurant general', 'null', 'great', 'null')]
output: ['[A] food [S] great [C] food quality', '[A] null [S] great [C] ambience general', '[A] null [S] great [C] restaurant miscellaneous']
sent: ['Wish', 'NY', 'had', 'more', 'of', 'these', 'kind', 'of', 'places', ':', 'intimate', ',', 'superb', 'food', ',', 'homey', ',', 'top', 'notch', 'all', 'the', 'way', 'around', ',', 'certainly', 'worth', 'the', 'wait', '.']
counter: {('food quality', 'food', 'great', 'null'): 5, ('restaurant miscellaneous', 'null', 'great', 'null'): 3, ('food style_options', 'food', 'great', 'null'): 1, ('restaurant miscellaneous', 'places', 'great', 'null'): 2, ('ambience general', 'null', 'great', 'null'): 3, ('restaurant general', 'places', 'great', 'null'): 1}
output quads: ['[A] food [S] great [C] food quality', '[A] null [S] great [C] restaurant miscellaneous', '[A] null [S] great [C] ambience general']
multi_path: ['[A] food [C] food quality [S] great [SSEP] [A] it [C] restaurant miscellaneous [S] great [SSEP] [A] it [C] restaurant miscellaneous [S] great', '[A] food [S] great [C] food quality [SSEP] [A] it [S] great [C] restaurant miscellaneous [SSEP] [A] food [S] great [C] food style_options', '[C] restaurant miscellaneous [S] great [A] places [SSEP] [C] food quality [S] great [A] food [SSEP] [C] ambience general [S] great [A] it', '[C] restaurant miscellaneous [A] places [S] great [SSEP] [C] food quality [A] food [S] great [SSEP] [C] ambience general [A] it [S] great', '[S] great [C] restaurant general [A] places [SSEP] [S] great [C] food quality [A] food [SSEP] [S] great [C] ambience general [A] it']

task, data: tasd rest15
target: [('ambience general', 'environment', 'ok', 'null'), ('restaurant miscellaneous', 'null', 'ok', 'null'), ('restaurant prices', 'null', 'bad', 'null')]
output: ['[A] environment [S] ok [C] ambience general']
sent: ['What', 'you', 'are', 'paying', 'for', 'is', 'the', 'environment', 'and', 'the', 'name', '.']
counter: {('ambience general', 'environment', 'ok', 'null'): 4, ('restaurant miscellaneous', 'name', 'ok', 'null'): 2, ('ambience general', 'environment', 'great', 'null'): 1, ('restaurant miscellaneous', 'null', 'bad', 'null'): 2, ('restaurant miscellaneous', 'null', 'ok', 'null'): 1}
output quads: ['[A] environment [S] ok [C] ambience general']
multi_path: ['[A] environment [C] ambience general [S] ok [SSEP] [A] name [C] restaurant miscellaneous [S] ok', '[A] environment [S] ok [C] ambience general [SSEP] [A] name [S] ok [C] restaurant miscellaneous', '[C] ambience general [S] great [A] environment [SSEP] [C] restaurant miscellaneous [S] bad [A] it', '[C] ambience general [A] environment [S] ok [SSEP] [C] restaurant miscellaneous [A] it [S] bad', '[S] ok [C] ambience general [A] environment [SSEP] [S] ok [C] restaurant miscellaneous [A] it']

task, data: tasd rest15
target: [('ambience general', 'place', 'great', 'null'), ('restaurant prices', 'place', 'bad', 'null')]
output: ['[A] place [S] great [C] ambience general', '[A] place [S] great [C] restaurant miscellaneous']
sent: ['Yes', ',', 'the', 'place', 'is', 'classy', 'and', 'beautiful', ',', 'but', 'they', 'most', 'certainly', 'target', 'the', 'uber', 'whealthy', 'Not', 'the', 'common', 'joe', 'that', 'wants', 'to', 'go', 'all', 'out', 'every', 'once', 'in', 'a', 'while', '.']
counter: {('ambience general', 'place', 'great', 'null'): 5, ('restaurant miscellaneous', 'place', 'great', 'null'): 5}
output quads: ['[A] place [S] great [C] ambience general', '[A] place [S] great [C] restaurant miscellaneous']
multi_path: ['[A] place [C] ambience general [S] great [SSEP] [A] place [C] restaurant miscellaneous [S] great', '[A] place [S] great [C] ambience general [SSEP] [A] place [S] great [C] restaurant miscellaneous', '[C] ambience general [S] great [A] place [SSEP] [C] restaurant miscellaneous [S] great [A] place', '[C] ambience general [A] place [S] great [SSEP] [C] restaurant miscellaneous [A] place [S] great', '[S] great [C] ambience general [A] place [SSEP] [S] great [C] restaurant miscellaneous [A] place']

task, data: tasd rest15
target: [('food quality', 'null', 'bad', 'null')]
output: ['[A] wagyu beef [S] great [C] food quality']
sent: ['Which', 'of', 'course', 'is', 'not', 'real', 'Kobe', 'but', 'Wagyu', 'beef', '.']
counter: {('food quality', 'wagyu beef', 'great', 'null'): 5}
output quads: ['[A] wagyu beef [S] great [C] food quality']
multi_path: ['[A] wagyu beef [C] food quality [S] great', '[A] wagyu beef [S] great [C] food quality', '[C] food quality [S] great [A] wagyu beef', '[C] food quality [A] wagyu beef [S] great', '[S] great [C] food quality [A] wagyu beef']

task, data: tasd rest15
target: [('restaurant miscellaneous', 'null', 'bad', 'null')]
output: ['[A] kobe [S] bad [C] restaurant miscellaneous']
sent: ['Surprised', 'that', 'a', 'place', 'of', 'this', 'caliber', 'would', 'advertise', 'it', 'as', 'Kobe', '.']
counter: {('restaurant miscellaneous', 'kobe', 'bad', 'null'): 5}
output quads: ['[A] kobe [S] bad [C] restaurant miscellaneous']
multi_path: ['[A] kobe [C] restaurant miscellaneous [S] bad', '[A] kobe [S] bad [C] restaurant miscellaneous', '[C] restaurant miscellaneous [S] bad [A] kobe', '[C] restaurant miscellaneous [A] kobe [S] bad', '[S] bad [C] restaurant miscellaneous [A] kobe']

task, data: tasd rest15
target: [('food quality', 'vanison', 'ok', 'null')]
output: ['[A] vanison [S] ok [C] restaurant general']
sent: ['Vanison', 'was', 'good', 'but', 'not', 'amazing', '.']
counter: {('restaurant general', 'vanison', 'ok', 'null'): 5}
output quads: ['[A] vanison [S] ok [C] restaurant general']
multi_path: ['[A] vanison [C] restaurant general [S] ok', '[A] vanison [S] ok [C] restaurant general', '[C] restaurant general [S] ok [A] vanison', '[C] restaurant general [A] vanison [S] ok', '[S] ok [C] restaurant general [A] vanison']

task, data: tasd rest15
target: [('food quality', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] restaurant general']
sent: ['Just', 'not', 'good', 'at', 'all', '.']
counter: {('restaurant general', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] restaurant general']
multi_path: ['[A] it [C] restaurant general [S] bad', '[A] it [S] bad [C] restaurant general', '[C] restaurant general [S] bad [A] it', '[C] restaurant general [A] it [S] bad', '[S] bad [C] restaurant general [A] it']

task, data: tasd rest15
target: [('food quality', 'null', 'bad', 'null'), ('food style_options', 'null', 'bad', 'null')]
output: ['[A] pear tart [S] bad [C] food quality', '[A] pineapple [S] bad [C] food quality']
sent: ['Some', 'Pineapple', 'covered', 'in', 'a', 'glaze', 'of', 'some', 'kind', 'and', 'some', 'pear', 'tart', 'thing', 'Not', 'impressive', 'at', 'all', '.']
counter: {('food quality', 'pineapple', 'bad', 'null'): 5, ('food quality', 'pear tart', 'bad', 'null'): 5}
output quads: ['[A] pineapple [S] bad [C] food quality', '[A] pear tart [S] bad [C] food quality']
multi_path: ['[A] pineapple [C] food quality [S] bad [SSEP] [A] pear tart [C] food quality [S] bad', '[A] pineapple [S] bad [C] food quality [SSEP] [A] pear tart [S] bad [C] food quality', '[C] food quality [S] bad [A] pineapple [SSEP] [C] food quality [S] bad [A] pear tart', '[C] food quality [A] pineapple [S] bad [SSEP] [C] food quality [A] pear tart [S] bad', '[S] bad [C] food quality [A] pineapple [SSEP] [S] bad [C] food quality [A] pear tart']

task, data: tasd rest15
target: [('restaurant general', 'restaurant', 'bad', 'null'), ('restaurant prices', 'restaurant', 'bad', 'null')]
output: ['[A] restaurant [S] bad [C] restaurant prices', '[A] restaurant [S] great [C] restaurant general']
sent: ['I', 'read', 'reviews', 'that', 'called', 'the', 'restaurant', 'too', 'expensive', 'and', 'I', 'thought', 'to', 'myself', ',', 'but', 'may', 'be', 'it', 'is', 'worth', 'it', '.']
counter: {('restaurant general', 'restaurant', 'great', 'null'): 4, ('restaurant general', 'restaurant', 'bad', 'null'): 1, ('restaurant prices', 'restaurant', 'bad', 'null'): 4}
output quads: ['[A] restaurant [S] great [C] restaurant general', '[A] restaurant [S] bad [C] restaurant prices']
multi_path: ['[A] restaurant [C] restaurant general [S] great', '[A] restaurant [S] bad [C] restaurant general [SSEP] [A] restaurant [S] bad [C] restaurant prices', '[C] restaurant prices [S] bad [A] restaurant [SSEP] [C] restaurant general [S] great [A] restaurant', '[C] restaurant prices [A] restaurant [S] bad [SSEP] [C] restaurant general [A] restaurant [S] great', '[S] bad [C] restaurant prices [A] restaurant [SSEP] [S] great [C] restaurant general [A] restaurant']

task, data: tasd rest15
target: [('restaurant miscellaneous', 'the four seasons', 'ok', 'null'), ('restaurant prices', 'the four seasons', 'bad', 'null')]
output: ['[A] four seasons restaurant [S] great [C] restaurant general']
sent: ['The', 'Four', 'Seasons', 'has', 'history', 'and', 'it', 'is', 'a', 'sort', 'of', 'landmark', 'of', 'New', 'York', 'City', 'restaurants', ',', 'but', 'trust', 'me', ',', 'they', 'will', 'charge', 'you', 'through', 'the', 'nose', 'just', 'so', 'that', 'you', 'can', 'say', '"I', "'ve", 'been', 'to', 'the', 'four', 'seasons', 'restaurant', '"', '.']
counter: {('restaurant general', 'four seasons restaurant', 'great', 'null'): 5}
output quads: ['[A] four seasons restaurant [S] great [C] restaurant general']
multi_path: ['[A] four seasons restaurant [C] restaurant general [S] great', '[A] four seasons restaurant [S] great [C] restaurant general', '[C] restaurant general [S] great [A] four seasons restaurant', '[C] restaurant general [A] four seasons restaurant [S] great', '[S] great [C] restaurant general [A] four seasons restaurant']

task, data: tasd rest15
target: [('restaurant general', 'null', 'bad', 'null'), ('restaurant prices', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] restaurant general']
sent: ['I', 'wanted', 'to', 'go', 'there', 'to', 'see', 'if', 'it', 'was', 'worth', 'it', 'and', 'sadly', ',', 'curiousity', 'got', 'the', 'best', 'of', 'me', 'and', 'I', 'paid', 'dearly', 'for', 'it', '.']
counter: {('restaurant general', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] restaurant general']
multi_path: ['[A] it [C] restaurant general [S] bad', '[A] it [S] bad [C] restaurant general', '[C] restaurant general [S] bad [A] it', '[C] restaurant general [A] it [S] bad', '[S] bad [C] restaurant general [A] it']

task, data: tasd rest15
target: [('food quality', 'dessserts', 'bad', 'null'), ('food quality', 'food', 'great', 'null')]
output: ['[A] desserts [S] bad [C] food quality', '[A] food [S] great [C] food quality']
sent: ['All', 'in', 'all', ',', 'the', 'food', 'was', 'great', '(except', 'for', 'the', 'dessserts', ')', '.']
counter: {('food quality', 'food', 'great', 'null'): 5, ('food quality', 'desserts', 'bad', 'null'): 5}
output quads: ['[A] food [S] great [C] food quality', '[A] desserts [S] bad [C] food quality']
multi_path: ['[A] food [C] food quality [S] great [SSEP] [A] desserts [C] food quality [S] bad', '[A] food [S] great [C] food quality [SSEP] [A] desserts [S] bad [C] food quality', '[C] food quality [S] great [A] food [SSEP] [C] food quality [S] bad [A] desserts', '[C] food quality [A] food [S] great [SSEP] [C] food quality [A] desserts [S] bad', '[S] great [C] food quality [A] food [SSEP] [S] bad [C] food quality [A] desserts']

task, data: tasd rest15
target: [('ambience general', 'environment', 'ok', 'null'), ('restaurant miscellaneous', 'null', 'ok', 'null')]
output: ['[A] environment [S] great [C] ambience general']
sent: ['The', 'environment', 'is', 'very', 'upscale', 'and', 'you', 'will', 'see', 'a', 'lot', 'of', 'rich', 'guys', 'with', 'trophy', 'wives', 'or', 'just', 'highly', 'paid', 'escorts', '.']
counter: {('ambience general', 'environment', 'great', 'null'): 5}
output quads: ['[A] environment [S] great [C] ambience general']
multi_path: ['[A] environment [C] ambience general [S] great', '[A] environment [S] great [C] ambience general', '[C] ambience general [S] great [A] environment', '[C] ambience general [A] environment [S] great', '[S] great [C] ambience general [A] environment']

task, data: tasd rest15
target: [('food quality', 'food', 'bad', 'null')]
output: ['[A] food [S] bad [C] food quality', '[A] null [S] bad [C] restaurant prices']
sent: ['If', 'you', 'are', 'going', 'for', 'the', 'food', ',', 'it', 'will', 'not', 'be', 'worth', 'it', '.']
counter: {('food quality', 'food', 'bad', 'null'): 5, ('restaurant prices', 'null', 'bad', 'null'): 5}
output quads: ['[A] food [S] bad [C] food quality', '[A] null [S] bad [C] restaurant prices']
multi_path: ['[A] food [C] food quality [S] bad [SSEP] [A] it [C] restaurant prices [S] bad', '[A] food [S] bad [C] food quality [SSEP] [A] it [S] bad [C] restaurant prices', '[C] food quality [S] bad [A] food [SSEP] [C] restaurant prices [S] bad [A] it', '[C] food quality [A] food [S] bad [SSEP] [C] restaurant prices [A] it [S] bad', '[S] bad [C] food quality [A] food [SSEP] [S] bad [C] restaurant prices [A] it']

task, data: tasd rest15
target: [('restaurant prices', 'null', 'bad', 'null'), ('service general', 'service', 'bad', 'null')]
output: ['[A] service [S] ok [C] service general']
sent: ['Service', 'was', 'just', 'ok', ',', 'it', 'is', 'not', 'what', 'you', "'d", 'expect', 'for', '$500', '.']
counter: {('service general', 'service', 'bad', 'null'): 2, ('service general', 'service', 'ok', 'null'): 3}
output quads: ['[A] service [S] ok [C] service general']
multi_path: ['[A] service [C] service general [S] bad', '[A] service [S] ok [C] service general', '[C] service general [S] ok [A] service', '[C] service general [A] service [S] bad', '[S] ok [C] service general [A] service']

task, data: tasd rest15
target: [('restaurant general', 'null', 'bad', 'null'), ('restaurant prices', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] restaurant prices']
sent: ['Terrible', 'Waste', 'of', 'money', '.', '.', 'scammers']
counter: {('restaurant prices', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] restaurant prices']
multi_path: ['[A] it [C] restaurant prices [S] bad', '[A] it [S] bad [C] restaurant prices', '[C] restaurant prices [S] bad [A] it', '[C] restaurant prices [A] it [S] bad', '[S] bad [C] restaurant prices [A] it']

task, data: tasd rest15
target: [('restaurant general', 'casa la femme', 'bad', 'null')]
output: ['[A] casa la femme [S] great [C] restaurant general']
sent: ['I', 'agree', 'that', 'dining', 'at', 'Casa', 'La', 'Femme', 'is', 'like', 'no', 'other', 'dining', 'experience', '!']
counter: {('restaurant general', 'casa la femme', 'great', 'null'): 5}
output quads: ['[A] casa la femme [S] great [C] restaurant general']
multi_path: ['[A] casa la femme [C] restaurant general [S] great', '[A] casa la femme [S] great [C] restaurant general', '[C] restaurant general [S] great [A] casa la femme', '[C] restaurant general [A] casa la femme [S] great', '[S] great [C] restaurant general [A] casa la femme']

task, data: tasd rest15
target: [('restaurant general', 'null', 'bad', 'null'), ('restaurant prices', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] restaurant prices']
sent: ['I', 'am', 'actually', 'offended', 'to', 'have', 'spent', 'so', 'much', 'money', 'on', 'such', 'a', 'bad', 'experience', '.']
counter: {('restaurant prices', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] restaurant prices']
multi_path: ['[A] it [C] restaurant prices [S] bad', '[A] it [S] bad [C] restaurant prices', '[C] restaurant prices [S] bad [A] it', '[C] restaurant prices [A] it [S] bad', '[S] bad [C] restaurant prices [A] it']

task, data: tasd rest15
target: [('restaurant general', 'casa la femme', 'bad', 'null'), ('restaurant prices', 'casa la femme', 'bad', 'null')]
output: ['[A] casa la femme [S] bad [C] restaurant miscellaneous']
sent: ['I', 'literally', 'just', 'got', 'back', 'home', 'after', 'visiting', 'Casa', 'La', 'Femme', 'and', 'was', 'so', 'offended', 'by', 'my', 'visit', 'felt', 'it', 'necessary', 'to', 'try', 'and', 'warn', 'other', 'diners', 'who', 'value', 'their', 'money', 'and', 'time', '.']
counter: {('restaurant miscellaneous', 'casa la femme', 'bad', 'null'): 5}
output quads: ['[A] casa la femme [S] bad [C] restaurant miscellaneous']
multi_path: ['[A] casa la femme [C] restaurant miscellaneous [S] bad', '[A] casa la femme [S] bad [C] restaurant miscellaneous', '[C] restaurant miscellaneous [S] bad [A] casa la femme', '[C] restaurant miscellaneous [A] casa la femme [S] bad', '[S] bad [C] restaurant miscellaneous [A] casa la femme']

task, data: tasd rest15
target: [('restaurant general', 'null', 'bad', 'null'), ('restaurant prices', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] restaurant general']
sent: ['Our', 'visit', 'their', 'to', 'say', 'the', 'least', ',', 'was', 'an', 'unpleasant', 'and', 'costly', 'experience', '!']
counter: {('restaurant general', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] restaurant general']
multi_path: ['[A] it [C] restaurant general [S] bad', '[A] it [S] bad [C] restaurant general', '[C] restaurant general [S] bad [A] it', '[C] restaurant general [A] it [S] bad', '[S] bad [C] restaurant general [A] it']

task, data: tasd rest15
target: [('restaurant general', 'null', 'bad', 'null'), ('restaurant prices', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] restaurant prices']
sent: ['And', 'even', 'more', 'so', 'unpleasant', 'because', 'it', 'was', 'so', 'costly', 'for', 'such', 'an', 'unpleasant', 'experience', '.']
counter: {('restaurant prices', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] restaurant prices']
multi_path: ['[A] it [C] restaurant prices [S] bad', '[A] it [S] bad [C] restaurant prices', '[C] restaurant prices [S] bad [A] it', '[C] restaurant prices [A] it [S] bad', '[S] bad [C] restaurant prices [A] it']

task, data: tasd rest15
target: [('service general', 'wait', 'ok', 'null')]
output: ['[A] wait [S] bad [C] service general']
sent: ['We', 'did', 'arrive', 'late', 'for', 'our', 'reservation', 'so', 'I', 'can', 'not', 'complain', 'too', 'much', 'about', 'the', 'wait', 'for', 'a', 'table', '.']
counter: {('service general', 'wait', 'bad', 'null'): 5}
output quads: ['[A] wait [S] bad [C] service general']
multi_path: ['[A] wait [C] service general [S] bad', '[A] wait [S] bad [C] service general', '[C] service general [S] bad [A] wait', '[C] service general [A] wait [S] bad', '[S] bad [C] service general [A] wait']

task, data: tasd rest15
target: [('restaurant general', 'null', 'great', 'null')]
output: ['[A] bar [S] great [C] service general']
sent: ['We', 'were', 'ushered', 'to', 'the', 'bar', 'to', 'wait', 'momentarily', 'and', 'upon', 'arrival', 'were', 'so', 'excited', '.']
counter: {('service general', 'bar', 'great', 'null'): 5}
output quads: ['[A] bar [S] great [C] service general']
multi_path: ['[A] bar [C] service general [S] great', '[A] bar [S] great [C] service general', '[C] service general [S] great [A] bar', '[C] service general [A] bar [S] great', '[S] great [C] service general [A] bar']

task, data: tasd rest15
target: [('drinks prices', 'drinks', 'bad', 'null'), ('drinks quality', 'drinks', 'bad', 'null')]
output: ['[A] $14 drinks [S] bad [C] drinks quality']
sent: ['However', ',', 'our', '$14', 'drinks', 'were', 'were', 'horrible', '!']
counter: {('drinks quality', '$14 drinks', 'bad', 'null'): 5}
output quads: ['[A] $14 drinks [S] bad [C] drinks quality']
multi_path: ['[A] $14 drinks [C] drinks quality [S] bad', '[A] $14 drinks [S] bad [C] drinks quality', '[C] drinks quality [S] bad [A] $14 drinks', '[C] drinks quality [A] $14 drinks [S] bad', '[S] bad [C] drinks quality [A] $14 drinks']

task, data: tasd rest15
target: [('service general', 'null', 'bad', 'null')]
output: []
sent: ['We', 'asked', 'for', 'beverages', 'and', 'never', 'received', 'them', '.']
counter: {('drinks quality', 'beverages', 'bad', 'null'): 2, ('service general', 'beverages', 'bad', 'null'): 1, ('service general', 'null', 'bad', 'null'): 2}
output quads: []
multi_path: ['[A] beverages [C] drinks quality [S] bad', '[A] beverages [S] bad [C] drinks quality', '[C] service general [S] bad [A] beverages', '[C] service general [A] it [S] bad', '[S] bad [C] service general [A] it']

task, data: tasd rest15
target: [('food prices', 'dinner', 'bad', 'null'), ('food quality', 'dinner', 'bad', 'null')]
output: ['[A] null [S] bad [C] food prices']
sent: ['I', 'would', 'not', 'expect', 'this', 'for', 'a', '$55', 'dinner', '.']
counter: {('food prices', 'null', 'bad', 'null'): 3, ('food prices', 'dinner', 'bad', 'null'): 2}
output quads: ['[A] null [S] bad [C] food prices']
multi_path: ['[A] it [C] food prices [S] bad', '[A] it [S] bad [C] food prices', '[C] food prices [S] bad [A] dinner', '[C] food prices [A] it [S] bad', '[S] bad [C] food prices [A] dinner']

task, data: tasd rest15
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] beverage [S] bad [C] drinks quality', '[A] hooka [S] bad [C] drinks quality']
sent: ['By', 'the', 'time', 'we', 'finished', 'our', 'dinner', 'we', 'still', 'had', 'not', 'received', 'one', 'beverage', 'NOR', 'hooka', '!']
counter: {('drinks quality', 'beverage', 'bad', 'null'): 5, ('drinks quality', 'hooka', 'bad', 'null'): 5}
output quads: ['[A] beverage [S] bad [C] drinks quality', '[A] hooka [S] bad [C] drinks quality']
multi_path: ['[A] beverage [C] drinks quality [S] bad [SSEP] [A] hooka [C] drinks quality [S] bad', '[A] beverage [S] bad [C] drinks quality [SSEP] [A] hooka [S] bad [C] drinks quality', '[C] drinks quality [S] bad [A] beverage [SSEP] [C] drinks quality [S] bad [A] hooka', '[C] drinks quality [A] beverage [S] bad [SSEP] [C] drinks quality [A] hooka [S] bad', '[S] bad [C] drinks quality [A] beverage [SSEP] [S] bad [C] drinks quality [A] hooka']

task, data: tasd rest15
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] beverage [S] bad [C] drinks quality']
sent: ['The', 'only', 'beverage', 'we', 'did', 'receive', 'was', 'water', 'in', 'dirty', 'glasses', '!']
counter: {('drinks quality', 'beverage', 'bad', 'null'): 5}
output quads: ['[A] beverage [S] bad [C] drinks quality']
multi_path: ['[A] beverage [C] drinks quality [S] bad', '[A] beverage [S] bad [C] drinks quality', '[C] drinks quality [S] bad [A] beverage', '[C] drinks quality [A] beverage [S] bad', '[S] bad [C] drinks quality [A] beverage']

task, data: tasd rest15
target: [('restaurant miscellaneous', 'null', 'bad', 'null'), ('service general', 'null', 'bad', 'null')]
output: ['[A] belly dancers [S] bad [C] service general']
sent: ['To', 'top', 'it', 'all', 'off', '.', '.', 'the', 'main', 'reason', 'we', 'came', 'to', 'your', 'restaurant', 'was', 'for', 'the', 'belly', 'dancers', 'and', 'missed', 'the', 'first', 'show', 'as', 'we', 'were', 'not', 'seated', 'yet', 'and', 'the', '2nd', 'belly', 'dancer', 'only', 'danced', 'at', 'two', 'tables', 'in', 'the', 'back', 'of', 'the', 'restaurant', 'and', 'never', 'made', 'it', 'around', 'to', 'the', 'other', 'half', 'of', 'the', 'restaurant', '.']
counter: {('ambience general', 'belly dancers', 'bad', 'null'): 2, ('service general', 'belly dancers', 'bad', 'null'): 3}
output quads: ['[A] belly dancers [S] bad [C] service general']
multi_path: ['[A] belly dancers [C] ambience general [S] bad', '[A] belly dancers [S] bad [C] ambience general', '[C] service general [S] bad [A] belly dancers', '[C] service general [A] belly dancers [S] bad', '[S] bad [C] service general [A] belly dancers']

task, data: tasd rest15
target: [('food quality', 'food', 'bad', 'null'), ('restaurant miscellaneous', 'null', 'bad', 'null'), ('restaurant prices', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] restaurant miscellaneous', '[A] null [S] bad [C] restaurant prices']
sent: ['By', 'the', 'time', 'we', 'left', 'our', 'wallets', 'were', 'empy', 'and', 'so', 'were', 'our', 'stomachs', 'AND', 'we', 'missed', 'the', 'show', 'we', 'were', 'supposed', 'to', 'see', 'following', 'our', 'dinner', ',', 'which', 'would', 'have', 'been', 'acceptable', 'if', 'we', 'got', 'to', 'enjoy', 'the', 'experience', 'of', 'good', 'food', 'and', 'belly', 'dancers', '!']
counter: {('restaurant prices', 'null', 'bad', 'null'): 5, ('restaurant miscellaneous', 'null', 'bad', 'null'): 4, ('ambience general', 'null', 'bad', 'null'): 1}
output quads: ['[A] null [S] bad [C] restaurant prices', '[A] null [S] bad [C] restaurant miscellaneous']
multi_path: ['[A] it [C] restaurant prices [S] bad [SSEP] [A] it [C] restaurant miscellaneous [S] bad', '[A] it [S] bad [C] restaurant prices [SSEP] [A] it [S] bad [C] restaurant miscellaneous', '[C] restaurant prices [S] bad [A] it [SSEP] [C] restaurant miscellaneous [S] bad [A] it', '[C] restaurant prices [A] it [S] bad [SSEP] [C] ambience general [A] it [S] bad', '[S] bad [C] restaurant prices [A] it [SSEP] [S] bad [C] restaurant miscellaneous [A] it']

task, data: tasd rest15
target: [('food quality', 'meal', 'bad', 'null'), ('restaurant prices', 'null', 'bad', 'null')]
output: ['[A] dinner portion of my meal [S] bad [C] food style_options', '[A] null [S] bad [C] restaurant prices']
sent: ['If', 'it', 'seemed', 'possible', 'to', 'do', 'so', 'while', 'there', 'I', 'would', 'have', 'fought', 'my', 'bill', 'since', 'my', 'dinner', 'portion', 'of', 'my', 'meal', 'was', 'inedible', '!']
counter: {('service general', 'null', 'bad', 'null'): 2, ('food style_options', 'dinner portion of my meal', 'bad', 'null'): 5, ('restaurant prices', 'null', 'bad', 'null'): 3}
output quads: ['[A] dinner portion of my meal [S] bad [C] food style_options', '[A] null [S] bad [C] restaurant prices']
multi_path: ['[A] it [C] service general [S] bad [SSEP] [A] dinner portion of my meal [C] food style_options [S] bad', '[A] it [S] bad [C] restaurant prices [SSEP] [A] dinner portion of my meal [S] bad [C] food style_options', '[C] food style_options [S] bad [A] dinner portion of my meal [SSEP] [C] restaurant prices [S] bad [A] it', '[C] food style_options [A] dinner portion of my meal [S] bad [SSEP] [C] restaurant prices [A] it [S] bad', '[S] bad [C] service general [A] it [SSEP] [S] bad [C] food style_options [A] dinner portion of my meal']

task, data: tasd rest15
target: [('restaurant general', 'restaurant', 'bad', 'null'), ('restaurant prices', 'restaurant', 'bad', 'null')]
output: ['[A] restaurant [S] great [C] restaurant general']
sent: ['I', 'have', 'never', 'left', 'a', 'restaurant', 'feeling', 'as', 'if', 'i', 'was', 'abused', ',', 'and', 'wasted', 'my', 'hard', 'earned', 'money', '.']
counter: {('restaurant general', 'restaurant', 'great', 'null'): 5}
output quads: ['[A] restaurant [S] great [C] restaurant general']
multi_path: ['[A] restaurant [C] restaurant general [S] great', '[A] restaurant [S] great [C] restaurant general', '[C] restaurant general [S] great [A] restaurant', '[C] restaurant general [A] restaurant [S] great', '[S] great [C] restaurant general [A] restaurant']

task, data: tasd rest15
target: [('restaurant general', 'null', 'bad', 'null'), ('restaurant prices', 'null', 'bad', 'null'), ('service general', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] restaurant miscellaneous']
sent: ['MY', 'husbands', 'birthday', 'and', 'my', 'sons', 'was', 'not', 'as', 'it', 'was', 'intended', '.', '.', '.', 'and', 'we', 'drove', 'two', 'hours', 'to', 'spend', 'too', 'much', 'money', 'to', 'be', 'treated', 'terribly', '!']
counter: {('restaurant miscellaneous', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] restaurant miscellaneous']
multi_path: ['[A] it [C] restaurant miscellaneous [S] bad', '[A] it [S] bad [C] restaurant miscellaneous', '[C] restaurant miscellaneous [S] bad [A] it', '[C] restaurant miscellaneous [A] it [S] bad', '[S] bad [C] restaurant miscellaneous [A] it']

task, data: tasd rest15
target: [('food style_options', 'menu', 'ok', 'null')]
output: ['[A] menu [S] great [C] food style_options']
sent: ['The', 'menu', 'is', 'fairly', 'simple', 'without', 'much', 'descriptions', '.']
counter: {('food style_options', 'menu', 'great', 'null'): 5}
output quads: ['[A] menu [S] great [C] food style_options']
multi_path: ['[A] menu [C] food style_options [S] great', '[A] menu [S] great [C] food style_options', '[C] food style_options [S] great [A] menu', '[C] food style_options [A] menu [S] great', '[S] great [C] food style_options [A] menu']

task, data: tasd rest15
target: [('drinks style_options', 'beer', 'bad', 'null')]
output: ['[A] tap beer [S] bad [C] drinks quality']
sent: ['There', 'was', 'no', 'tap', 'beer', 'that', 'evening', ',', 'which', 'was', 'a', 'disappointment', '.']
counter: {('drinks quality', 'tap beer', 'bad', 'null'): 5}
output quads: ['[A] tap beer [S] bad [C] drinks quality']
multi_path: ['[A] tap beer [C] drinks quality [S] bad', '[A] tap beer [S] bad [C] drinks quality', '[C] drinks quality [S] bad [A] tap beer', '[C] drinks quality [A] tap beer [S] bad', '[S] bad [C] drinks quality [A] tap beer']

task, data: tasd rest15
target: [('drinks style_options', 'selection of bottled beer', 'bad', 'null')]
output: ['[A] bottled beer [S] bad [C] drinks style_options']
sent: ['Not', 'much', 'of', 'a', 'selection', 'of', 'bottled', 'beer', 'either', ',', 'we', 'went', 'with', 'Brahma', '.']
counter: {('drinks style_options', 'bottled beer', 'bad', 'null'): 5}
output quads: ['[A] bottled beer [S] bad [C] drinks style_options']
multi_path: ['[A] bottled beer [C] drinks style_options [S] bad', '[A] bottled beer [S] bad [C] drinks style_options', '[C] drinks style_options [S] bad [A] bottled beer', '[C] drinks style_options [A] bottled beer [S] bad', '[S] bad [C] drinks style_options [A] bottled beer']

task, data: tasd rest15
target: [('food quality', 'fried oysters and clams', 'great', 'null'), ('food style_options', 'fried oysters and clams', 'bad', 'null'), ('service general', 'null', 'great', 'null')]
output: ['[A] appetizers [S] great [C] food quality', '[A] fried oysters and clams [S] bad [C] food style_options']
sent: ['The', 'appetizers', 'we', 'ordered', 'were', 'served', 'quickly', '-', 'an', 'order', 'of', 'fried', 'oysters', 'and', 'clams', 'were', 'delicious', 'but', 'a', 'tiny', 'portion', '(maybe', '3', 'of', 'each', ')', '.']
counter: {('food quality', 'appetizers', 'great', 'null'): 4, ('food quality', 'fried oysters and clams', 'great', 'null'): 2, ('food style_options', 'portion', 'bad', 'null'): 2, ('food style_options', 'fried oysters and clams', 'bad', 'null'): 3, ('service general', 'appetizers', 'great', 'null'): 1}
output quads: ['[A] appetizers [S] great [C] food quality', '[A] fried oysters and clams [S] bad [C] food style_options']
multi_path: ['[A] appetizers [C] food quality [S] great [SSEP] [A] fried oysters and clams [C] food quality [S] great [SSEP] [A] portion [C] food style_options [S] bad', '[A] appetizers [S] great [C] food quality [SSEP] [A] fried oysters and clams [S] great [C] food quality [SSEP] [A] portion [S] bad [C] food style_options', '[C] food quality [S] great [A] appetizers [SSEP] [C] food style_options [S] bad [A] fried oysters and clams', '[C] food quality [A] appetizers [S] great [SSEP] [C] food style_options [A] fried oysters and clams [S] bad', '[S] great [C] service general [A] appetizers [SSEP] [S] bad [C] food style_options [A] fried oysters and clams']

task, data: tasd rest15
target: [('food quality', 'lobster knuckles', 'bad', 'null'), ('food style_options', 'lobster knuckles', 'ok', 'null')]
output: ['[A] lobster knuckles [S] bad [C] food quality']
sent: ['The', 'lobster', 'knuckles', '(special', 'of', 'the', 'day', ')', 'were', 'ok', ',', 'but', 'pretty', 'tasteless', '.']
counter: {('food quality', 'lobster knuckles (special of the day)', 'bad', 'null'): 2, ('food quality', 'lobster knuckles', 'bad', 'null'): 3}
output quads: ['[A] lobster knuckles [S] bad [C] food quality']
multi_path: ['[A] lobster knuckles (special of the day) [C] food quality [S] bad', '[A] lobster knuckles (special of the day) [S] bad [C] food quality', '[C] food quality [S] bad [A] lobster knuckles', '[C] food quality [A] lobster knuckles [S] bad', '[S] bad [C] food quality [A] lobster knuckles']

task, data: tasd rest15
target: [('food style_options', '"salt encrusted shrimp" appetizer', 'bad', 'null')]
output: ['[A] shrimp [S] bad [C] food quality']
sent: ['I', 'believe', 'there', 'were', '2', 'shrimp', 'in', 'the', '"salt', 'encrusted', 'shrimp', '"', 'appetizer', '.']
counter: {('food quality', 'shrimp', 'bad', 'null'): 5}
output quads: ['[A] shrimp [S] bad [C] food quality']
multi_path: ['[A] shrimp [C] food quality [S] bad', '[A] shrimp [S] bad [C] food quality', '[C] food quality [S] bad [A] shrimp', '[C] food quality [A] shrimp [S] bad', '[S] bad [C] food quality [A] shrimp']

task, data: tasd rest15
target: [('service general', 'null', 'ok', 'null')]
output: ['[A] null [S] great [C] service general']
sent: ['The', 'food', 'arrived', 'in', 'about', '15', 'minutes', '.']
counter: {('service general', 'null', 'great', 'null'): 5, ('food quality', 'food', 'great', 'null'): 1}
output quads: ['[A] null [S] great [C] service general']
multi_path: ['[A] it [C] service general [S] great', '[A] food [S] great [C] food quality [SSEP] [A] it [S] great [C] service general', '[C] service general [S] great [A] it', '[C] service general [A] it [S] great', '[S] great [C] service general [A] it']

task, data: tasd rest15
target: [('food quality', 'food', 'great', 'null'), ('food quality', 'grilled mahi mahi', 'bad', 'null'), ('food style_options', 'grilled mahi mahi', 'bad', 'null')]
output: ['[A] food [S] great [C] food quality', '[A] grilled mahi mahi [S] bad [C] food quality']
sent: ['Everyone', 'seemed', 'generally', 'happy', 'with', 'their', 'food', ',', 'except', 'my', 'brother', 'who', 'had', 'the', 'grilled', 'Mahi', 'Mahi', ',', 'seemingly', 'drenched', 'in', 'Grapfruit', 'Juice', '!']
counter: {('food quality', 'food', 'great', 'null'): 5, ('food quality', 'grilled mahi mahi', 'bad', 'null'): 5}
output quads: ['[A] food [S] great [C] food quality', '[A] grilled mahi mahi [S] bad [C] food quality']
multi_path: ['[A] food [C] food quality [S] great [SSEP] [A] grilled mahi mahi [C] food quality [S] bad', '[A] food [S] great [C] food quality [SSEP] [A] grilled mahi mahi [S] bad [C] food quality', '[C] food quality [S] great [A] food [SSEP] [C] food quality [S] bad [A] grilled mahi mahi', '[C] food quality [A] food [S] great [SSEP] [C] food quality [A] grilled mahi mahi [S] bad', '[S] great [C] food quality [A] food [SSEP] [S] bad [C] food quality [A] grilled mahi mahi']

task, data: tasd rest15
target: [('food quality', 'food', 'great', 'null')]
output: ['[A] food [S] great [C] food quality', '[A] indian food [S] great [C] food quality']
sent: ['Food', 'was', 'amazing', '-', 'I', 'love', 'Indian', 'food', 'and', 'eat', 'it', 'quite', 'regularly', ',', 'but', 'I', 'can', 'say', 'this', 'is', 'one', 'of', 'the', 'best', 'I', "'ve", 'had', '.']
counter: {('food quality', 'food', 'great', 'null'): 5, ('food quality', 'indian food', 'great', 'null'): 5}
output quads: ['[A] food [S] great [C] food quality', '[A] indian food [S] great [C] food quality']
multi_path: ['[A] food [C] food quality [S] great [SSEP] [A] indian food [C] food quality [S] great', '[A] food [S] great [C] food quality [SSEP] [A] indian food [S] great [C] food quality', '[C] food quality [S] great [A] food [SSEP] [C] food quality [S] great [A] indian food', '[C] food quality [A] food [S] great [SSEP] [C] food quality [A] indian food [S] great', '[S] great [C] food quality [A] food [SSEP] [S] great [C] food quality [A] indian food']

task, data: tasd rest15
target: [('food quality', 'indian food', 'great', 'null'), ('food style_options', 'indian food', 'ok', 'null')]
output: ['[A] indian food [S] great [C] food quality']
sent: ['Very', '"normal', 'Indian', 'food', '"', ',', 'but', 'done', 'really', 'well', '.']
counter: {('food quality', 'indian food', 'great', 'null'): 5, ('food style_options', 'null', 'great', 'null'): 2, ('food style_options', 'indian food', 'great', 'null'): 1}
output quads: ['[A] indian food [S] great [C] food quality']
multi_path: ['[A] indian food [C] food quality [S] great [SSEP] [A] it [C] food style_options [S] great', '[A] indian food [S] great [C] food quality [SSEP] [A] it [S] great [C] food style_options', '[C] food quality [S] great [A] indian food', '[C] food quality [A] indian food [S] great', '[S] great [C] food quality [A] indian food [SSEP] [S] great [C] food style_options [A] indian food']

task, data: tasd rest15
target: [('ambience general', 'feel', 'bad', 'null'), ('food prices', 'chicken tikka masala', 'bad', 'null'), ('restaurant general', 'place', 'great', 'null'), ('restaurant prices', 'place', 'bad', 'null')]
output: ['[A] bread of rice [S] bad [C] food quality', '[A] chicken tikka masala [S] ok [C] food quality', '[A] null [S] bad [C] restaurant prices']
sent: ['I', 'have', 'it', 'a', '4', 'instead', 'of', '5', 'because', 'of', 'the', 'price', '(just', 'chicken', 'tikka', 'masala', '-', 'no', 'bread', 'of', 'rice', '-', 'is', '$25', ')', ',', 'which', 'I', 'would', 'expect', 'at', 'a', 'upscale', 'Indian', 'restaurant', 'but', 'this', 'place', 'doesn', "'t", 'have', 'an', 'upscale', 'feel', '.']
counter: {('restaurant general', 'null', 'bad', 'null'): 2, ('food quality', 'chicken tikka masala', 'ok', 'null'): 5, ('food prices', 'bread of rice', 'bad', 'null'): 1, ('food prices', 'bread of rice', 'ok', 'null'): 1, ('restaurant prices', 'null', 'bad', 'null'): 3, ('food quality', 'bread of rice', 'bad', 'null'): 3}
output quads: ['[A] chicken tikka masala [S] ok [C] food quality', '[A] null [S] bad [C] restaurant prices', '[A] bread of rice [S] bad [C] food quality']
multi_path: ['[A] it [C] restaurant general [S] bad [SSEP] [A] chicken tikka masala [C] food quality [S] ok [SSEP] [A] bread of rice [C] food prices [S] bad', '[A] it [S] bad [C] restaurant general [SSEP] [A] chicken tikka masala [S] ok [C] food quality [SSEP] [A] bread of rice [S] ok [C] food prices', '[C] restaurant prices [S] bad [A] it [SSEP] [C] food quality [S] ok [A] chicken tikka masala [SSEP] [C] food quality [S] bad [A] bread of rice', '[C] restaurant prices [A] it [S] bad [SSEP] [C] food quality [A] chicken tikka masala [S] ok [SSEP] [C] food quality [A] bread of rice [S] bad', '[S] bad [C] restaurant prices [A] it [SSEP] [S] ok [C] food quality [A] chicken tikka masala [SSEP] [S] bad [C] food quality [A] bread of rice']

task, data: tasd rest15
target: [('restaurant prices', 'null', 'bad', 'null'), ('service general', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] restaurant prices']
sent: ['I', 'don', "'t", 'appreciate', 'places', 'or', 'people', 'that', 'try', 'to', 'drive', 'up', 'the', 'bill', 'without', 'the', 'patron', "'s", 'knowledge', 'so', 'that', 'was', 'a', 'huge', 'turnoff', '(more', 'than', 'the', 'price', ')', '.']
counter: {('restaurant prices', 'null', 'bad', 'null'): 5, ('restaurant miscellaneous', 'null', 'bad', 'null'): 1, ('service general', 'null', 'bad', 'null'): 1}
output quads: ['[A] null [S] bad [C] restaurant prices']
multi_path: ['[A] it [C] restaurant prices [S] bad [SSEP] [A] it [C] restaurant miscellaneous [S] bad', '[A] it [S] bad [C] restaurant prices', '[C] restaurant prices [S] bad [A] it', '[C] restaurant prices [A] it [S] bad [SSEP] [C] service general [A] it [S] bad', '[S] bad [C] restaurant prices [A] it']

task, data: tasd rest15
target: [('food quality', 'indian food', 'great', 'null'), ('restaurant prices', 'place', 'bad', 'null')]
output: ['[A] indian food [S] great [C] food quality']
sent: ['But', 'if', 'you', "'re", 'prepared', 'to', 'spend', 'some', '$', 'and', 'remember', 'to', 'ask', 'if', 'something', 'they', 'offer', 'is', 'complimentary', ',', 'then', 'this', 'is', 'the', 'place', 'to', 'go', 'for', 'Indian', 'food']
counter: {('food quality', 'indian food', 'great', 'null'): 5, ('food prices', 'null', 'ok', 'null'): 1, ('food prices', 'null', 'great', 'null'): 1}
output quads: ['[A] indian food [S] great [C] food quality']
multi_path: ['[A] indian food [C] food quality [S] great', '[A] indian food [S] great [C] food quality', '[C] food quality [S] great [A] indian food', '[C] food quality [A] indian food [S] great [SSEP] [C] food prices [A] it [S] ok', '[S] great [C] food quality [A] indian food [SSEP] [S] great [C] food prices [A] it']

task, data: tasd rest15
target: [('food quality', 'dinner', 'great', 'null'), ('service general', 'service', 'great', 'null')]
output: ['[A] quality [S] great [C] food quality', '[A] service [S] great [C] service general']
sent: ['We', 'have', 'gone', 'for', 'dinner', 'only', 'a', 'few', 'times', 'but', 'the', 'same', 'great', 'quality', 'and', 'service', 'is', 'given', '.']
counter: {('food quality', 'quality', 'great', 'null'): 5, ('service general', 'service', 'great', 'null'): 5}
output quads: ['[A] quality [S] great [C] food quality', '[A] service [S] great [C] service general']
multi_path: ['[A] quality [C] food quality [S] great [SSEP] [A] service [C] service general [S] great', '[A] quality [S] great [C] food quality [SSEP] [A] service [S] great [C] service general', '[C] food quality [S] great [A] quality [SSEP] [C] service general [S] great [A] service', '[C] food quality [A] quality [S] great [SSEP] [C] service general [A] service [S] great', '[S] great [C] food quality [A] quality [SSEP] [S] great [C] service general [A] service']

task, data: tasd rest15
target: [('restaurant general', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] food quality']
sent: ['Wretched', 'and', 'retching']
counter: {('food quality', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] food quality']
multi_path: ['[A] it [C] food quality [S] bad', '[A] it [S] bad [C] food quality', '[C] food quality [S] bad [A] it', '[C] food quality [A] it [S] bad', '[S] bad [C] food quality [A] it']

task, data: tasd rest15
target: [('food quality', 'kimchee', 'bad', 'null'), ('food quality', 'korean fair', 'bad', 'null')]
output: ['[A] fish skin [S] bad [C] food quality', '[A] order [S] bad [C] food quality']
sent: ['However', ',', 'once', 'I', 'received', 'my', 'predictably', 'mediocre', 'order', 'of', 'what', 'Dokebi', 'thinks', 'passes', 'as', 'Korean', 'fair', ',', '(sometimes', 'you', 'have', 'to', 'settle', 'when', 'it', "'s", 'your', 'only', 'option', ')', ',', 'I', 'got', 'through', 'about', 'half', 'my', 'kimchee', 'before', 'I', 'found', 'a', 'piece', 'of', 'random', 'lettuce', 'accompanied', 'by', 'a', 'far', 'more', 'disgusting', ',', 'slimy', ',', 'clearly', 'bad', 'piece', 'of', 'fish', 'skin', '.']
counter: {('food quality', 'order', 'bad', 'null'): 5, ('food quality', 'fish skin', 'bad', 'null'): 5}
output quads: ['[A] order [S] bad [C] food quality', '[A] fish skin [S] bad [C] food quality']
multi_path: ['[A] order [C] food quality [S] bad [SSEP] [A] fish skin [C] food quality [S] bad', '[A] order [S] bad [C] food quality [SSEP] [A] fish skin [S] bad [C] food quality', '[C] food quality [S] bad [A] order [SSEP] [C] food quality [S] bad [A] fish skin', '[C] food quality [A] order [S] bad [SSEP] [C] food quality [A] fish skin [S] bad', '[S] bad [C] food quality [A] order [SSEP] [S] bad [C] food quality [A] fish skin']

task, data: tasd rest15
target: [('food quality', 'food', 'bad', 'null'), ('service general', 'null', 'bad', 'null')]
output: ['[A] food [S] bad [C] food quality']
sent: ['My', 'main', 'concern', 'was', 'the', 'sanity', 'of', 'the', 'food', 'that', 'was', 'being', 'sent', 'out', 'to', 'myself', 'and', 'others', ',', 'but', 'I', 'would', 'be', 'lying', 'is', 'I', 'said', 'that', 'as', 'someone', 'who', 'has', 'worked', 'in', 'restaurants', 'since', 'the', 'age', 'of', 'fifteen', 'I', 'was', 'expecting', 'at', 'least', 'a', 'minimal', 'effort', 'on', 'the', 'part', 'of', 'the', 'restaurant', 'to', 'amend', 'the', 'situation', '.']
counter: {('service general', 'restaurant', 'bad', 'null'): 2, ('food quality', 'food', 'bad', 'null'): 3}
output quads: ['[A] food [S] bad [C] food quality']
multi_path: ['[A] restaurant [C] service general [S] bad', '[A] restaurant [S] bad [C] service general', '[C] food quality [S] bad [A] food', '[C] food quality [A] food [S] bad', '[S] bad [C] food quality [A] food']

task, data: tasd rest15
target: [('food quality', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] service general']
sent: ['Less', 'than', 'three', 'minutes', 'passed', 'before', 'I', 'found', 'myself', 'doubled', 'over', 'the', 'toilet', '.']
counter: {('service general', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] service general']
multi_path: ['[A] it [C] service general [S] bad', '[A] it [S] bad [C] service general', '[C] service general [S] bad [A] it', '[C] service general [A] it [S] bad', '[S] bad [C] service general [A] it']

task, data: tasd rest15
target: [('food quality', 'meal', 'bad', 'null'), ('service general', 'null', 'bad', 'null')]
output: ['[A] meal [S] bad [C] food quality', '[A] restaurant [S] bad [C] service general']
sent: ['My', 'girlfriend', ',', 'being', 'slightly', 'more', 'aggressive', ',', 'and', 'having', 'been', 'equally', 'disgusted', 'causing', 'her', 'to', 'throw', 'out', 'the', 'remainder', 'of', 'her', 'barely', 'eaten', 'meal', ',', 'called', 'back', 'only', 'to', 'be', 'informed', 'that', 'I', 'was', 'probably', 'wrong', 'and', 'that', 'it', 'was', 'most', 'likely', 'an', 'oyster', ',', 'and', 'that', 'we', 'were', 'also', 'blacklisted', 'from', 'their', 'restaurant', '.']
counter: {('service general', 'null', 'bad', 'null'): 2, ('food quality', 'meal', 'bad', 'null'): 3, ('service general', 'restaurant', 'bad', 'null'): 3}
output quads: ['[A] meal [S] bad [C] food quality', '[A] restaurant [S] bad [C] service general']
multi_path: ['[A] it [C] service general [S] bad', '[A] it [S] bad [C] service general', '[C] food quality [S] bad [A] meal [SSEP] [C] service general [S] bad [A] restaurant', '[C] food quality [A] meal [S] bad [SSEP] [C] service general [A] restaurant [S] bad', '[S] bad [C] food quality [A] meal [SSEP] [S] bad [C] service general [A] restaurant']

task, data: tasd rest15
target: [('food quality', 'null', 'bad', 'null')]
output: ['[A] null [S] ok [C] food quality']
sent: ['Eat', 'at', 'your', 'own', 'risk', '.']
counter: {('food quality', 'null', 'ok', 'null'): 5}
output quads: ['[A] null [S] ok [C] food quality']
multi_path: ['[A] it [C] food quality [S] ok', '[A] it [S] ok [C] food quality', '[C] food quality [S] ok [A] it', '[C] food quality [A] it [S] ok', '[S] ok [C] food quality [A] it']

task, data: tasd rest15
target: [('ambience general', 'place', 'great', 'null'), ('restaurant miscellaneous', 'place', 'great', 'null')]
output: ['[A] place [S] great [C] ambience general']
sent: ['Gorgeous', 'place', 'ideal', 'for', 'a', 'romantic', 'dinner']
counter: {('ambience general', 'place', 'great', 'null'): 5}
output quads: ['[A] place [S] great [C] ambience general']
multi_path: ['[A] place [C] ambience general [S] great', '[A] place [S] great [C] ambience general', '[C] ambience general [S] great [A] place', '[C] ambience general [A] place [S] great', '[S] great [C] ambience general [A] place']

task, data: tasd rest15
target: [('restaurant general', 'null', 'bad', 'null')]
output: []
sent: ['More', 'Williamsburg', 'Garbage']
counter: {('restaurant general', 'williamsburg garbage', 'bad', 'null'): 2, ('restaurant miscellaneous', 'null', 'bad', 'null'): 2, ('restaurant general', 'null', 'bad', 'null'): 1}
output quads: []
multi_path: ['[A] williamsburg garbage [C] restaurant general [S] bad', '[A] williamsburg garbage [S] bad [C] restaurant general', '[C] restaurant miscellaneous [S] bad [A] it', '[C] restaurant miscellaneous [A] it [S] bad', '[S] bad [C] restaurant general [A] it']

task, data: tasd rest15
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] dishes [S] bad [C] food style_options']
sent: ['The', 'dishes', 'came', 'out', 'around', '5', 'minutes', 'apart', '.']
counter: {('food style_options', 'dishes', 'bad', 'null'): 5}
output quads: ['[A] dishes [S] bad [C] food style_options']
multi_path: ['[A] dishes [C] food style_options [S] bad', '[A] dishes [S] bad [C] food style_options', '[C] food style_options [S] bad [A] dishes', '[C] food style_options [A] dishes [S] bad', '[S] bad [C] food style_options [A] dishes']

task, data: tasd rest15
target: [('food quality', 'bibimbap', 'ok', 'null'), ('food quality', 'stone bowl', 'bad', 'null')]
output: ['[A] bibimbap [S] great [C] food quality', '[A] stone bowl [S] bad [C] food quality']
sent: ['The', 'bibimbap', 'was', 'average', ',', 'but', 'the', 'stone', 'bowl', 'wasn', "'t", 'even', 'close', 'to', 'sizzling', '.']
counter: {('food quality', 'bibimbap', 'great', 'null'): 3, ('food quality', 'stone bowl', 'bad', 'null'): 5, ('food quality', 'bibimbap', 'ok', 'null'): 2}
output quads: ['[A] bibimbap [S] great [C] food quality', '[A] stone bowl [S] bad [C] food quality']
multi_path: ['[A] bibimbap [C] food quality [S] great [SSEP] [A] stone bowl [C] food quality [S] bad', '[A] bibimbap [S] great [C] food quality [SSEP] [A] stone bowl [S] bad [C] food quality', '[C] food quality [S] ok [A] bibimbap [SSEP] [C] food quality [S] bad [A] stone bowl', '[C] food quality [A] bibimbap [S] great [SSEP] [C] food quality [A] stone bowl [S] bad', '[S] ok [C] food quality [A] bibimbap [SSEP] [S] bad [C] food quality [A] stone bowl']

task, data: tasd rest15
target: [('food quality', 'side dishes', 'ok', 'null'), ('food style_options', 'side dishes', 'great', 'null')]
output: ['[A] side dishes [S] ok [C] food quality']
sent: ['The', 'side', 'dishes', 'were', 'passable', ',', 'and', 'I', 'did', 'get', 'a', 'refill', 'upon', 'request', '.']
counter: {('food quality', 'side dishes', 'ok', 'null'): 5}
output quads: ['[A] side dishes [S] ok [C] food quality']
multi_path: ['[A] side dishes [C] food quality [S] ok', '[A] side dishes [S] ok [C] food quality', '[C] food quality [S] ok [A] side dishes', '[C] food quality [A] side dishes [S] ok', '[S] ok [C] food quality [A] side dishes']

task, data: tasd rest15
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] food [S] bad [C] food quality']
sent: ['As', 'to', 'my', 'comment', 'about', 'the', 'food', ',', 'no', 'apology', 'or', 'acknowledgment', 'was', 'made', '.']
counter: {('food quality', 'food', 'bad', 'null'): 5}
output quads: ['[A] food [S] bad [C] food quality']
multi_path: ['[A] food [C] food quality [S] bad', '[A] food [S] bad [C] food quality', '[C] food quality [S] bad [A] food', '[C] food quality [A] food [S] bad', '[S] bad [C] food quality [A] food']

task, data: tasd rest15
target: [('restaurant miscellaneous', 'null', 'ok', 'null')]
output: ['[A] null [S] bad [C] restaurant miscellaneous']
sent: ['We', "'ve", 'tried', 'before', 'but', 'it', 'always', 'packed', 'and', 'doesn', "'t", 'take', 'reservations', '.']
counter: {('restaurant miscellaneous', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] restaurant miscellaneous']
multi_path: ['[A] it [C] restaurant miscellaneous [S] bad', '[A] it [S] bad [C] restaurant miscellaneous', '[C] restaurant miscellaneous [S] bad [A] it', '[C] restaurant miscellaneous [A] it [S] bad', '[S] bad [C] restaurant miscellaneous [A] it']

task, data: tasd rest15
target: [('restaurant general', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] restaurant general', '[A] wait [S] bad [C] service general']
sent: ['It', 'was', 'well', 'worth', 'the', 'wait', '.']
counter: {('service general', 'wait', 'great', 'null'): 2, ('restaurant general', 'null', 'great', 'null'): 3, ('service general', 'wait', 'bad', 'null'): 3}
output quads: ['[A] null [S] great [C] restaurant general', '[A] wait [S] bad [C] service general']
multi_path: ['[A] wait [C] service general [S] great', '[A] wait [S] great [C] service general', '[C] restaurant general [S] great [A] it [SSEP] [C] service general [S] bad [A] wait', '[C] restaurant general [A] it [S] great [SSEP] [C] service general [A] wait [S] bad', '[S] great [C] restaurant general [A] it [SSEP] [S] bad [C] service general [A] wait']

task, data: tasd rest15
target: [('food quality', 'null', 'great', 'null'), ('food style_options', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] food quality', '[A] null [S] great [C] food quality']
sent: ['It', 'doesn', "'t", 'look', 'appetizing', 'as', 'it', "'s", 'covered', 'in', 'squid', 'ink', 'and', 'it', 'turns', 'your', 'lips', 'and', 'teeth', 'black', ',', 'but', 'the', 'taste', 'was', 'phenomenal', '.']
counter: {('food quality', 'null', 'bad', 'null'): 5, ('food quality', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] bad [C] food quality', '[A] null [S] great [C] food quality']
multi_path: ['[A] it [C] food quality [S] bad [SSEP] [A] it [C] food quality [S] great', '[A] it [S] bad [C] food quality [SSEP] [A] it [S] great [C] food quality', '[C] food quality [S] bad [A] it [SSEP] [C] food quality [S] great [A] it', '[C] food quality [A] it [S] bad [SSEP] [C] food quality [A] it [S] great', '[S] bad [C] food quality [A] it [SSEP] [S] great [C] food quality [A] it']

task, data: tasd rest15
target: [('food quality', 'margherita pizza', 'great', 'null'), ('restaurant general', 'east village pizza', 'great', 'null')]
output: ['[A] east village pizza [S] great [C] food quality', '[A] margherita pizza [S] great [C] food quality']
sent: ['i', 'love', 'margherita', 'pizza', '–', 'i', 'looove', 'east', 'village', 'pizza']
counter: {('food quality', 'margherita pizza', 'great', 'null'): 5, ('food quality', 'east village pizza', 'great', 'null'): 5}
output quads: ['[A] margherita pizza [S] great [C] food quality', '[A] east village pizza [S] great [C] food quality']
multi_path: ['[A] margherita pizza [C] food quality [S] great [SSEP] [A] east village pizza [C] food quality [S] great', '[A] margherita pizza [S] great [C] food quality [SSEP] [A] east village pizza [S] great [C] food quality', '[C] food quality [S] great [A] margherita pizza [SSEP] [C] food quality [S] great [A] east village pizza', '[C] food quality [A] margherita pizza [S] great [SSEP] [C] food quality [A] east village pizza [S] great', '[S] great [C] food quality [A] margherita pizza [SSEP] [S] great [C] food quality [A] east village pizza']

task, data: tasd rest15
target: [('food quality', 'slice of nyc pizza', 'ok', 'null')]
output: ['[A] nyc pizza [S] great [C] food quality']
sent: ['A', 'quintessential', 'slice', 'of', 'NYC', 'pizza', '.']
counter: {('food quality', 'nyc pizza', 'great', 'null'): 5}
output quads: ['[A] nyc pizza [S] great [C] food quality']
multi_path: ['[A] nyc pizza [C] food quality [S] great', '[A] nyc pizza [S] great [C] food quality', '[C] food quality [S] great [A] nyc pizza', '[C] food quality [A] nyc pizza [S] great', '[S] great [C] food quality [A] nyc pizza']

task, data: tasd rest15
target: [('food quality', 'cheese', 'great', 'null'), ('food quality', 'crust', 'great', 'null'), ('food quality', 'sauce', 'great', 'null')]
output: ['[A] crust [S] great [C] food quality', '[A] salt [S] great [C] food quality', '[A] sauce [S] great [C] food quality']
sent: ['The', 'crust', 'has', 'a', 'great', 'bite', 'and', 'a', 'good', 'chew', ',', 'the', 'sauce', 'is', 'light', 'with', 'a', 'nice', 'acidity', 'to', 'it', ',', 'the', 'salt', 'from', 'the', 'cheese', 'is', 'great', ',', 'really', 'heightens', 'the', 'flavor', 'of', 'all', 'the', 'other', 'components', '.']
counter: {('food quality', 'crust', 'great', 'null'): 5, ('food quality', 'sauce', 'great', 'null'): 5, ('food quality', 'salt', 'great', 'null'): 3, ('food quality', 'salt from the cheese', 'great', 'null'): 2}
output quads: ['[A] crust [S] great [C] food quality', '[A] sauce [S] great [C] food quality', '[A] salt [S] great [C] food quality']
multi_path: ['[A] crust [C] food quality [S] great [SSEP] [A] sauce [C] food quality [S] great [SSEP] [A] salt [C] food quality [S] great', '[A] crust [S] great [C] food quality [SSEP] [A] sauce [S] great [C] food quality [SSEP] [A] salt [S] great [C] food quality', '[C] food quality [S] great [A] crust [SSEP] [C] food quality [S] great [A] sauce [SSEP] [C] food quality [S] great [A] salt from the cheese', '[C] food quality [A] crust [S] great [SSEP] [C] food quality [A] sauce [S] great [SSEP] [C] food quality [A] salt [S] great', '[S] great [C] food quality [A] crust [SSEP] [S] great [C] food quality [A] sauce [SSEP] [S] great [C] food quality [A] salt from the cheese']

task, data: tasd rest15
target: [('ambience general', 'modern japanese brasserie', 'great', 'null'), ('restaurant general', 'modern japanese brasserie', 'great', 'null')]
output: ['[A] null [S] great [C] restaurant general']
sent: ['This', 'is', 'undoubtedly', 'my', 'favorite', 'modern', 'Japanese', 'brasserie', '(that', 'don’t', 'serve', 'sushi', ')', ',', 'and', 'in', 'my', 'opinion', ',', 'one', 'of', 'the', 'most', 'romantic', 'restaurants', 'in', 'the', 'city', '!']
counter: {('restaurant general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] restaurant general']
multi_path: ['[A] it [C] restaurant general [S] great', '[A] it [S] great [C] restaurant general', '[C] restaurant general [S] great [A] it', '[C] restaurant general [A] it [S] great', '[S] great [C] restaurant general [A] it']

task, data: tasd rest15
target: [('ambience general', 'glass ceilings', 'great', 'null'), ('ambience general', 'private booths', 'great', 'null')]
output: ['[A] null [S] great [C] restaurant miscellaneous']
sent: ['If', 'you’re', 'planning', 'to', 'come', 'here', ',', 'make', 'sure', 'that', 'your', 'date', 'is', 'someone', 'whom', 'you', 'really', 'like', 'since', 'you’ll', 'be', 'ushered', 'to', 'private', 'booths', 'where', 'there', 'will', 'be', 'no', 'people', 'or', 'food', 'watching', '(choose', 'the', 'ones', 'on', 'the', 'ground', 'level', 'that', 'have', 'glass', 'ceilings', 'so', 'you', 'may', 'see', 'the', 'stars', 'in', 'the', 'sky', '!', ')', '.']
counter: {('ambience general', 'null', 'great', 'null'): 1, ('restaurant miscellaneous', 'null', 'great', 'null'): 4}
output quads: ['[A] null [S] great [C] restaurant miscellaneous']
multi_path: ['[A] it [C] ambience general [S] great', '[A] it [S] great [C] restaurant miscellaneous', '[C] restaurant miscellaneous [S] great [A] it', '[C] restaurant miscellaneous [A] it [S] great', '[S] great [C] restaurant miscellaneous [A] it']

task, data: tasd rest15
target: [('ambience general', 'null', 'great', 'null'), ('service general', 'waiter', 'great', 'null')]
output: ['[A] waiter [S] ok [C] ambience general']
sent: ['It’s', 'just', 'you', 'and', 'your', 'date', 'and', 'an', 'occasional', 'cute', '‘excuse', 'me’', 'before', 'the', 'waiter', 'opens', 'the', 'little', 'curtain', 'to', 'your', 'booth', '!']
counter: {('service general', 'waiter', 'ok', 'null'): 2, ('ambience general', 'waiter', 'ok', 'null'): 3}
output quads: ['[A] waiter [S] ok [C] ambience general']
multi_path: ['[A] waiter [C] service general [S] ok', '[A] waiter [S] ok [C] service general', '[C] ambience general [S] ok [A] waiter', '[C] ambience general [A] waiter [S] ok', '[S] ok [C] ambience general [A] waiter']

task, data: tasd rest15
target: [('food prices', 'bbe $29 fixe prix menu', 'great', 'null'), ('food style_options', 'bbe $29 fixe prix menu', 'great', 'null')]
output: ['[A] bbe fixe prix menu [S] great [C] food quality']
sent: ['My', 'party', 'had', 'the', 'BBE', '$29', 'fixe', 'prix', 'menu', ',', 'which', 'was', 'such', 'a', 'wonderful', 'deal', 'since', 'it', 'also', 'came', 'with', 'a', 'flight', 'of', 'sake', '!']
counter: {('food quality', 'bbe fixe prix menu', 'great', 'null'): 4, ('food prices', 'bbe $29 fixe prix menu', 'great', 'null'): 2, ('food quality', 'bbe $29 fixe prix menu', 'great', 'null'): 1, ('drinks prices', 'bbe $29 fixe prix menu', 'great', 'null'): 1, ('food prices', 'bbe fixe prix menu', 'great', 'null'): 2}
output quads: ['[A] bbe fixe prix menu [S] great [C] food quality']
multi_path: ['[A] bbe fixe prix menu [C] food quality [S] great [SSEP] [A] bbe $29 fixe prix menu [C] food prices [S] great', '[A] bbe fixe prix menu [S] great [C] food quality [SSEP] [A] bbe $29 fixe prix menu [S] great [C] food prices', '[C] food quality [S] great [A] bbe $29 fixe prix menu [SSEP] [C] drinks prices [S] great [A] bbe $29 fixe prix menu', '[C] food quality [A] bbe fixe prix menu [S] great [SSEP] [C] food prices [A] bbe fixe prix menu [S] great', '[S] great [C] food quality [A] bbe fixe prix menu [SSEP] [S] great [C] food prices [A] bbe fixe prix menu']

task, data: tasd rest15
target: [('food style_options', 'entrees', 'ok', 'null')]
output: ['[A] entrees [S] great [C] food quality']
sent: ['The', 'entrees', 'were', 'served', 'with', 'miso', 'soup', 'and', 'rice', '.']
counter: {('food quality', 'entrees', 'great', 'null'): 5}
output quads: ['[A] entrees [S] great [C] food quality']
multi_path: ['[A] entrees [C] food quality [S] great', '[A] entrees [S] great [C] food quality', '[C] food quality [S] great [A] entrees', '[C] food quality [A] entrees [S] great', '[S] great [C] food quality [A] entrees']

task, data: tasd rest15
target: [('drinks quality', 'sake’s', 'great', 'null')]
output: ['[A] courses [S] great [C] food style_options', '[A] sakes [S] great [C] drinks quality']
sent: ['The', 'sake’s', 'complimented', 'the', 'courses', 'very', 'well', 'and', 'is', 'successfully', 'easing', 'me', 'into', 'the', 'sake', 'world', '.']
counter: {('drinks quality', 'sakes', 'great', 'null'): 5, ('drinks style_options', 'courses', 'great', 'null'): 2, ('food style_options', 'courses', 'great', 'null'): 3}
output quads: ['[A] sakes [S] great [C] drinks quality', '[A] courses [S] great [C] food style_options']
multi_path: ['[A] sakes [C] drinks quality [S] great [SSEP] [A] courses [C] drinks style_options [S] great', '[A] sakes [S] great [C] drinks quality [SSEP] [A] courses [S] great [C] drinks style_options', '[C] drinks quality [S] great [A] sakes [SSEP] [C] food style_options [S] great [A] courses', '[C] drinks quality [A] sakes [S] great [SSEP] [C] food style_options [A] courses [S] great', '[S] great [C] drinks quality [A] sakes [SSEP] [S] great [C] food style_options [A] courses']

task, data: tasd rest15
target: [('food quality', 'frozen black sesame mousse', 'ok', 'null'), ('food quality', 'matcha (powdered green tea) and blueberry cheesecake', 'great', 'null')]
output: ['[A] blueberry cheesecake [S] great [C] food quality', '[A] frozen black sesame mousse [S] great [C] food quality', '[A] matcha (powdered green tea) [S] great [C] food quality']
sent: ['For', 'desserts', ',', 'we', 'tried', 'the', 'frozen', 'black', 'sesame', 'mousse', '(interesting', 'but', 'not', 'extraordinary', ')', 'and', 'matcha', '(powdered', 'green', 'tea', ')', 'and', 'blueberry', 'cheesecake', ',', 'which', 'was', 'phenomenal', '.']
counter: {('food quality', 'frozen black sesame mousse', 'great', 'null'): 10, ('food quality', 'matcha (powdered green tea)', 'great', 'null'): 5, ('food quality', 'blueberry cheesecake', 'great', 'null'): 5}
output quads: ['[A] frozen black sesame mousse [S] great [C] food quality', '[A] matcha (powdered green tea) [S] great [C] food quality', '[A] blueberry cheesecake [S] great [C] food quality']
multi_path: ['[A] frozen black sesame mousse [C] food quality [S] great [SSEP] [A] frozen black sesame mousse [C] food quality [S] great [SSEP] [A] matcha (powdered green tea) [C] food quality [S] great [SSEP] [A] blueberry cheesecake [C] food quality [S] great', '[A] frozen black sesame mousse [S] great [C] food quality [SSEP] [A] frozen black sesame mousse [S] great [C] food quality [SSEP] [A] matcha (powdered green tea) [S] great [C] food quality [SSEP] [A] blueberry cheesecake [S] great [C] food quality', '[C] food quality [S] great [A] frozen black sesame mousse [SSEP] [C] food quality [S] great [A] frozen black sesame mousse [SSEP] [C] food quality [S] great [A] matcha (powdered green tea) [SSEP] [C] food quality [S] great [A] blueberry cheesecake', '[C] food quality [A] frozen black sesame mousse [S] great [SSEP] [C] food quality [A] frozen black sesame mousse [S] great [SSEP] [C] food quality [A] matcha (powdered green tea) [S] great [SSEP] [C] food quality [A] blueberry cheesecake [S] great', '[S] great [C] food quality [A] frozen black sesame mousse [SSEP] [S] great [C] food quality [A] frozen black sesame mousse [SSEP] [S] great [C] food quality [A] matcha (powdered green tea) [SSEP] [S] great [C] food quality [A] blueberry cheesecake']

task, data: tasd rest15
target: [('restaurant general', 'brasserie', 'great', 'null'), ('restaurant prices', 'brasserie', 'great', 'null')]
output: ['[A] brasserie [S] great [C] restaurant prices', '[A] null [S] great [C] restaurant general']
sent: ['Maybe', 'it', 'was', 'the', 'great', 'company', '(I', 'had', 'friends', 'visiting', 'from', 'Philly', '–', 'yes', ',', 'it', 'was', 'not', 'a', 'date', 'this', 'time', ')', 'or', 'the', 'super', 'reasonable', 'price', 'point', ',', 'but', 'I', 'just', 'can’t', 'say', 'enough', 'good', 'things', 'about', 'this', 'brasserie', '.']
counter: {('restaurant prices', 'brasserie', 'great', 'null'): 5, ('restaurant general', 'null', 'great', 'null'): 5}
output quads: ['[A] brasserie [S] great [C] restaurant prices', '[A] null [S] great [C] restaurant general']
multi_path: ['[A] brasserie [C] restaurant prices [S] great [SSEP] [A] it [C] restaurant general [S] great', '[A] brasserie [S] great [C] restaurant prices [SSEP] [A] it [S] great [C] restaurant general', '[C] restaurant prices [S] great [A] brasserie [SSEP] [C] restaurant general [S] great [A] it', '[C] restaurant prices [A] brasserie [S] great [SSEP] [C] restaurant general [A] it [S] great', '[S] great [C] restaurant prices [A] brasserie [SSEP] [S] great [C] restaurant general [A] it']

task, data: tasd rest15
target: [('restaurant general', 'null', 'bad', 'null')]
output: ['[A] null [S] great [C] restaurant general']
sent: ['Terrible', 'would', 'be', 'a', 'compliment', '!']
counter: {('restaurant general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] restaurant general']
multi_path: ['[A] it [C] restaurant general [S] great', '[A] it [S] great [C] restaurant general', '[C] restaurant general [S] great [A] it', '[C] restaurant general [A] it [S] great', '[S] great [C] restaurant general [A] it']

task, data: tasd rest15
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] food quality']
sent: ['We', 'paid', 'a', 'fixed', 'pricce', 'but', 'got', 'nothing', '!', '!']
counter: {('food quality', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] food quality']
multi_path: ['[A] it [C] food quality [S] bad', '[A] it [S] bad [C] food quality', '[C] food quality [S] bad [A] it', '[C] food quality [A] it [S] bad', '[S] bad [C] food quality [A] it']

task, data: tasd rest15
target: [('drinks prices', 'drinks', 'bad', 'null'), ('food prices', 'pita bread', 'bad', 'null'), ('service general', 'null', 'bad', 'null'), ('service general', 'service', 'bad', 'null')]
output: ['[A] null [S] bad [C] food prices', '[A] service [S] bad [C] service general']
sent: ['They', 'are', 'extremely', 'rude', ',', 'not', 'even', 'apologizing', 'for', 'the', 'horrible', 'service', 'we', 'got', 'and', 'handing', 'us', 'a', 'bill', 'well', 'over', '$500', 'for', 'some', 'drinks', 'adn', 'their', 'pita', 'bread', '!']
counter: {('service general', 'null', 'bad', 'null'): 2, ('food prices', 'null', 'bad', 'null'): 5, ('service general', 'service', 'bad', 'null'): 3}
output quads: ['[A] null [S] bad [C] food prices', '[A] service [S] bad [C] service general']
multi_path: ['[A] it [C] service general [S] bad [SSEP] [A] it [C] food prices [S] bad', '[A] it [S] bad [C] service general [SSEP] [A] it [S] bad [C] food prices', '[C] service general [S] bad [A] service [SSEP] [C] food prices [S] bad [A] it', '[C] service general [A] service [S] bad [SSEP] [C] food prices [A] it [S] bad', '[S] bad [C] service general [A] service [SSEP] [S] bad [C] food prices [A] it']

task, data: tasd rest15
target: [('food quality', 'dishes', 'ok', 'null')]
output: ['[A] dishes [S] bad [C] food quality']
sent: ['I', 'tried', 'a', 'couple', 'other', 'dishes', 'but', 'wasn', "'t", 'too', 'impressed', '.']
counter: {('food quality', 'dishes', 'bad', 'null'): 5}
output quads: ['[A] dishes [S] bad [C] food quality']
multi_path: ['[A] dishes [C] food quality [S] bad', '[A] dishes [S] bad [C] food quality', '[C] food quality [S] bad [A] dishes', '[C] food quality [A] dishes [S] bad', '[S] bad [C] food quality [A] dishes']

task, data: tasd rest15
target: [('food prices', 'kimchi', 'great', 'null'), ('food prices', 'salad', 'great', 'null'), ('food quality', 'meat', 'great', 'null'), ('food quality', 'sauces', 'great', 'null'), ('food style_options', 'meal', 'great', 'null'), ('service general', 'service', 'great', 'null')]
output: ['[A] kimchi [S] great [C] food quality', '[A] meat [S] great [C] food quality', '[A] salad [S] great [C] food quality', '[A] sauces [S] great [C] food quality', '[A] service [S] great [C] service general']
sent: ['The', 'meat', 'is', 'fresh', ',', 'the', 'sauces', 'are', 'great', ',', 'you', 'get', 'kimchi', 'and', 'a', 'salad', 'free', 'with', 'your', 'meal', 'and', 'service', 'is', 'good', 'too', '.']
counter: {('food quality', 'meat', 'great', 'null'): 5, ('food quality', 'sauces', 'great', 'null'): 5, ('food quality', 'kimchi', 'great', 'null'): 5, ('food quality', 'salad', 'great', 'null'): 5, ('service general', 'service', 'great', 'null'): 5}
output quads: ['[A] meat [S] great [C] food quality', '[A] sauces [S] great [C] food quality', '[A] kimchi [S] great [C] food quality', '[A] salad [S] great [C] food quality', '[A] service [S] great [C] service general']
multi_path: ['[A] meat [C] food quality [S] great [SSEP] [A] sauces [C] food quality [S] great [SSEP] [A] kimchi [C] food quality [S] great [SSEP] [A] salad [C] food quality [S] great [SSEP] [A] service [C] service general [S] great', '[A] meat [S] great [C] food quality [SSEP] [A] sauces [S] great [C] food quality [SSEP] [A] kimchi [S] great [C] food quality [SSEP] [A] salad [S] great [C] food quality [SSEP] [A] service [S] great [C] service general', '[C] food quality [S] great [A] meat [SSEP] [C] food quality [S] great [A] sauces [SSEP] [C] food quality [S] great [A] kimchi [SSEP] [C] food quality [S] great [A] salad [SSEP] [C] service general [S] great [A] service', '[C] food quality [A] meat [S] great [SSEP] [C] food quality [A] sauces [S] great [SSEP] [C] food quality [A] kimchi [S] great [SSEP] [C] food quality [A] salad [S] great [SSEP] [C] service general [A] service [S] great', '[S] great [C] food quality [A] meat [SSEP] [S] great [C] food quality [A] sauces [SSEP] [S] great [C] food quality [A] kimchi [SSEP] [S] great [C] food quality [A] salad [SSEP] [S] great [C] service general [A] service']

task, data: tasd rest15
target: [('food quality', 'fusion twists', 'great', 'null'), ('food quality', 'korean food', 'great', 'null'), ('food quality', 'pork belly tacos', 'great', 'null')]
output: ['[A] dokebi [S] great [C] food quality', '[A] korean food [S] great [C] food quality', '[A] pork belly tacos [S] great [C] food quality']
sent: ['Dokebi', 'gives', 'Williamsburg', 'the', 'right', 'one-two', 'punch', 'of', 'classic', 'Korean', 'food', 'and', 'fusion', 'twists', 'like', 'pork', 'belly', 'tacos', '.']
counter: {('restaurant general', 'dokebi', 'great', 'null'): 2, ('food quality', 'korean food', 'great', 'null'): 5, ('food quality', 'pork belly tacos', 'great', 'null'): 5, ('food quality', 'dokebi', 'great', 'null'): 3}
output quads: ['[A] korean food [S] great [C] food quality', '[A] pork belly tacos [S] great [C] food quality', '[A] dokebi [S] great [C] food quality']
multi_path: ['[A] dokebi [C] restaurant general [S] great [SSEP] [A] korean food [C] food quality [S] great [SSEP] [A] pork belly tacos [C] food quality [S] great', '[A] dokebi [S] great [C] restaurant general [SSEP] [A] korean food [S] great [C] food quality [SSEP] [A] pork belly tacos [S] great [C] food quality', '[C] food quality [S] great [A] dokebi [SSEP] [C] food quality [S] great [A] korean food [SSEP] [C] food quality [S] great [A] pork belly tacos', '[C] food quality [A] dokebi [S] great [SSEP] [C] food quality [A] korean food [S] great [SSEP] [C] food quality [A] pork belly tacos [S] great', '[S] great [C] food quality [A] dokebi [SSEP] [S] great [C] food quality [A] korean food [SSEP] [S] great [C] food quality [A] pork belly tacos']

task, data: tasd rest15
target: [('food quality', 'bun', 'great', 'null'), ('food quality', 'hot dogs', 'great', 'null'), ('food quality', 'pork croquette sandwich', 'great', 'null')]
output: ['[A] bun [S] great [C] food style_options', '[A] hot dogs [S] great [C] food quality', '[A] pork croquette sandwich [S] great [C] food quality']
sent: ['The', 'hot', 'dogs', 'are', 'good', ',', 'yes', ',', 'but', 'the', 'reason', 'to', 'get', 'over', 'here', 'is', 'the', 'fantastic', 'pork', 'croquette', 'sandwich', ',', 'perfect', 'on', 'its', 'supermarket', 'squishy', 'bun', '.']
counter: {('food quality', 'hot dogs', 'great', 'null'): 5, ('food quality', 'pork croquette sandwich', 'great', 'null'): 5, ('food style_options', 'bun', 'great', 'null'): 3}
output quads: ['[A] hot dogs [S] great [C] food quality', '[A] pork croquette sandwich [S] great [C] food quality', '[A] bun [S] great [C] food style_options']
multi_path: ['[A] hot dogs [C] food quality [S] great [SSEP] [A] pork croquette sandwich [C] food quality [S] great [SSEP] [A] bun [C] food style_options [S] great', '[A] hot dogs [S] great [C] food quality [SSEP] [A] pork croquette sandwich [S] great [C] food quality', '[C] food quality [S] great [A] hot dogs [SSEP] [C] food quality [S] great [A] pork croquette sandwich', '[C] food quality [A] hot dogs [S] great [SSEP] [C] food quality [A] pork croquette sandwich [S] great [SSEP] [C] food style_options [A] bun [S] great', '[S] great [C] food quality [A] hot dogs [SSEP] [S] great [C] food quality [A] pork croquette sandwich [SSEP] [S] great [C] food style_options [A] bun']

task, data: tasd rest15
target: [('location general', 'view', 'ok', 'null')]
output: ['[A] restaurant [S] great [C] location general']
sent: ['Restaurant', 'with', 'a', 'view']
counter: {('location general', 'restaurant', 'great', 'null'): 5}
output quads: ['[A] restaurant [S] great [C] location general']
multi_path: ['[A] restaurant [C] location general [S] great', '[A] restaurant [S] great [C] location general', '[C] location general [S] great [A] restaurant', '[C] location general [A] restaurant [S] great', '[S] great [C] location general [A] restaurant']

task, data: tasd rest15
target: [('food prices', 'food', 'bad', 'null'), ('food quality', 'food', 'great', 'null'), ('restaurant general', 'null', 'great', 'null')]
output: ['[A] food [S] great [C] food quality', '[A] null [S] bad [C] restaurant prices']
sent: ['Price', 'is', 'high', 'but', 'the', 'food', 'is', 'good', ',', 'so', 'I', 'would', 'come', 'back', 'again', '.']
counter: {('restaurant prices', 'null', 'bad', 'null'): 5, ('food quality', 'food', 'great', 'null'): 5}
output quads: ['[A] null [S] bad [C] restaurant prices', '[A] food [S] great [C] food quality']
multi_path: ['[A] it [C] restaurant prices [S] bad [SSEP] [A] food [C] food quality [S] great', '[A] it [S] bad [C] restaurant prices [SSEP] [A] food [S] great [C] food quality', '[C] restaurant prices [S] bad [A] it [SSEP] [C] food quality [S] great [A] food', '[C] restaurant prices [A] it [S] bad [SSEP] [C] food quality [A] food [S] great', '[S] bad [C] restaurant prices [A] it [SSEP] [S] great [C] food quality [A] food']

task, data: tasd rest15
target: [('restaurant general', 'place', 'bad', 'null')]
output: ['[A] place [S] bad [C] restaurant miscellaneous']
sent: ['This', 'place', 'doesn', "'t", 'make', 'any', 'sense']
counter: {('restaurant miscellaneous', 'place', 'bad', 'null'): 5}
output quads: ['[A] place [S] bad [C] restaurant miscellaneous']
multi_path: ['[A] place [C] restaurant miscellaneous [S] bad', '[A] place [S] bad [C] restaurant miscellaneous', '[C] restaurant miscellaneous [S] bad [A] place', '[C] restaurant miscellaneous [A] place [S] bad', '[S] bad [C] restaurant miscellaneous [A] place']

task, data: tasd rest15
target: [('restaurant general', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] restaurant miscellaneous']
sent: ['Just', 'want', 'to', 'warn', 'you', 'all', '-', 'don', "'t", 'waste', 'your', 'time', 'and', 'money', '.']
counter: {('restaurant miscellaneous', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] restaurant miscellaneous']
multi_path: ['[A] it [C] restaurant miscellaneous [S] bad', '[A] it [S] bad [C] restaurant miscellaneous', '[C] restaurant miscellaneous [S] bad [A] it', '[C] restaurant miscellaneous [A] it [S] bad', '[S] bad [C] restaurant miscellaneous [A] it']

task, data: tasd rest15
target: [('ambience general', 'decor', 'bad', 'null'), ('ambience general', 'mirrored walls', 'bad', 'null')]
output: ['[A] decor [S] bad [C] ambience general', '[A] mirrored walls [S] bad [C] ambience general', '[A] stairs [S] bad [C] ambience general']
sent: ['This', 'place', 'has', 'totally', 'weird', 'decor', ',', 'stairs', 'going', 'up', 'with', 'mirrored', 'walls', '-', 'I', 'am', 'surprised', 'how', 'no', 'one', 'yet', 'broke', 'their', 'head', 'or', 'fall', 'off', 'the', 'stairs', '-', 'mirrored', 'walls', 'make', 'you', 'dizzy', 'and', 'delusional', '.', '.', '.']
counter: {('ambience general', 'decor', 'bad', 'null'): 5, ('ambience general', 'stairs', 'bad', 'null'): 5, ('ambience general', 'mirrored walls', 'bad', 'null'): 5}
output quads: ['[A] decor [S] bad [C] ambience general', '[A] stairs [S] bad [C] ambience general', '[A] mirrored walls [S] bad [C] ambience general']
multi_path: ['[A] decor [C] ambience general [S] bad [SSEP] [A] stairs [C] ambience general [S] bad [SSEP] [A] mirrored walls [C] ambience general [S] bad', '[A] decor [S] bad [C] ambience general [SSEP] [A] stairs [S] bad [C] ambience general [SSEP] [A] mirrored walls [S] bad [C] ambience general', '[C] ambience general [S] bad [A] decor [SSEP] [C] ambience general [S] bad [A] stairs [SSEP] [C] ambience general [S] bad [A] mirrored walls', '[C] ambience general [A] decor [S] bad [SSEP] [C] ambience general [A] stairs [S] bad [SSEP] [C] ambience general [A] mirrored walls [S] bad', '[S] bad [C] ambience general [A] decor [SSEP] [S] bad [C] ambience general [A] stairs [SSEP] [S] bad [C] ambience general [A] mirrored walls']

task, data: tasd rest15
target: [('food style_options', 'japanese tapas', 'bad', 'null')]
output: ['[A] japanese tapas [S] bad [C] food quality']
sent: ['The', 'concept', 'of', 'japanese', 'tapas', 'is', 'newly', 'created', 'and', 'clearly', 'doesn', "'t", 'work', '.']
counter: {('food quality', 'japanese tapas', 'bad', 'null'): 5}
output quads: ['[A] japanese tapas [S] bad [C] food quality']
multi_path: ['[A] japanese tapas [C] food quality [S] bad', '[A] japanese tapas [S] bad [C] food quality', '[C] food quality [S] bad [A] japanese tapas', '[C] food quality [A] japanese tapas [S] bad', '[S] bad [C] food quality [A] japanese tapas']

task, data: tasd rest15
target: [('ambience general', 'place', 'great', 'null'), ('restaurant general', 'place', 'great', 'null')]
output: ['[A] place [S] great [C] ambience general']
sent: ['Over', 'all', 'it', 'was', 'a', 'very', 'nice', 'romantic', 'place', '.']
counter: {('ambience general', 'place', 'great', 'null'): 5}
output quads: ['[A] place [S] great [C] ambience general']
multi_path: ['[A] place [C] ambience general [S] great', '[A] place [S] great [C] ambience general', '[C] ambience general [S] great [A] place', '[C] ambience general [A] place [S] great', '[S] great [C] ambience general [A] place']

task, data: tasd rest15
target: [('drinks quality', 'margaritas', 'ok', 'null'), ('food quality', 'food', 'great', 'null')]
output: ['[A] food [S] great [C] food quality', '[A] margaritas [S] bad [C] drinks quality']
sent: ['The', 'food', 'we', 'ordered', 'was', 'excellent', ',', 'although', 'I', 'wouldn', "'t", 'say', 'the', 'margaritas', 'were', 'anything', 'to', 'write', 'home', 'about', '.']
counter: {('food quality', 'food', 'great', 'null'): 5, ('drinks quality', 'margaritas', 'bad', 'null'): 5}
output quads: ['[A] food [S] great [C] food quality', '[A] margaritas [S] bad [C] drinks quality']
multi_path: ['[A] food [C] food quality [S] great [SSEP] [A] margaritas [C] drinks quality [S] bad', '[A] food [S] great [C] food quality [SSEP] [A] margaritas [S] bad [C] drinks quality', '[C] food quality [S] great [A] food [SSEP] [C] drinks quality [S] bad [A] margaritas', '[C] food quality [A] food [S] great [SSEP] [C] drinks quality [A] margaritas [S] bad', '[S] great [C] food quality [A] food [SSEP] [S] bad [C] drinks quality [A] margaritas']

task, data: tasd rest15
target: [('service general', 'waitress', 'ok', 'null')]
output: ['[A] waitress [S] bad [C] service general']
sent: ['Our', 'waitress', 'wasn', "'t", 'mean', ',', 'but', 'not', 'especially', 'warm', 'or', 'attentive', 'either', '.']
counter: {('service general', 'waitress', 'bad', 'null'): 5}
output quads: ['[A] waitress [S] bad [C] service general']
multi_path: ['[A] waitress [C] service general [S] bad', '[A] waitress [S] bad [C] service general', '[C] service general [S] bad [A] waitress', '[C] service general [A] waitress [S] bad', '[S] bad [C] service general [A] waitress']

task, data: tasd rest15
target: [('restaurant general', 'restaurant', 'great', 'null')]
output: ['[A] restaurant [S] bad [C] restaurant general']
sent: ['I', 'must', 'say', 'I', 'am', 'surprised', 'by', 'the', 'bad', 'reviews', 'of', 'the', 'restaurant', 'earlier', 'in', 'the', 'year', ',', 'though', '.']
counter: {('restaurant general', 'restaurant', 'bad', 'null'): 5}
output quads: ['[A] restaurant [S] bad [C] restaurant general']
multi_path: ['[A] restaurant [C] restaurant general [S] bad', '[A] restaurant [S] bad [C] restaurant general', '[C] restaurant general [S] bad [A] restaurant', '[C] restaurant general [A] restaurant [S] bad', '[S] bad [C] restaurant general [A] restaurant']

task, data: tasd rest15
target: [('ambience general', 'patio', 'great', 'null'), ('restaurant general', 'null', 'great', 'null')]
output: ['[A] patio [S] great [C] ambience general']
sent: ['Regardless', ',', 'we', "'ll", 'be', 'back', 'and', 'can', "'t", 'wait', 'to', 'visit', 'in', 'the', 'summer', 'to', 'take', 'advantage', 'of', 'the', 'patio', '.']
counter: {('ambience general', 'patio', 'great', 'null'): 4, ('restaurant general', 'patio', 'great', 'null'): 1, ('restaurant general', 'null', 'great', 'null'): 1}
output quads: ['[A] patio [S] great [C] ambience general']
multi_path: ['[A] patio [C] ambience general [S] great', '[A] patio [S] great [C] ambience general', '[C] restaurant general [S] great [A] patio', '[C] restaurant general [A] it [S] great [SSEP] [C] ambience general [A] patio [S] great', '[S] great [C] ambience general [A] patio']

task, data: tasd rest15
target: [('restaurant general', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] food quality']
sent: ['Dumbfoundingly', 'Poor']
counter: {('food quality', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] food quality']
multi_path: ['[A] it [C] food quality [S] bad', '[A] it [S] bad [C] food quality', '[C] food quality [S] bad [A] it', '[C] food quality [A] it [S] bad', '[S] bad [C] food quality [A] it']

task, data: tasd rest15
target: [('restaurant general', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] food quality']
sent: ['This', 'was', ',', 'from', 'start', 'to', 'finish', ',', 'a', 'mind-bogglingly', 'uncomfortable', 'experience', '.']
counter: {('food quality', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] food quality']
multi_path: ['[A] it [C] food quality [S] bad', '[A] it [S] bad [C] food quality', '[C] food quality [S] bad [A] it', '[C] food quality [A] it [S] bad', '[S] bad [C] food quality [A] it']

task, data: tasd rest15
target: [('service general', 'null', 'bad', 'null')]
output: []
sent: ['Lexicographers', 'take', 'note', ':', 'a', 'new', 'and', 'fascinating', 'definition', 'of', 'rudeness', 'is', 'alive', 'and', 'flourishing', 'right', 'here', 'in', 'Brooklyn', '.']
counter: {('ambience general', 'rudeness', 'great', 'null'): 2, ('restaurant miscellaneous', 'definition of rudeness', 'great', 'null'): 2, ('restaurant miscellaneous', 'rudeness', 'great', 'null'): 1}
output quads: []
multi_path: ['[A] rudeness [C] ambience general [S] great', '[A] rudeness [S] great [C] ambience general', '[C] restaurant miscellaneous [S] great [A] definition of rudeness', '[C] restaurant miscellaneous [A] rudeness [S] great', '[S] great [C] restaurant miscellaneous [A] definition of rudeness']

task, data: tasd rest15
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] null [S] great [C] restaurant miscellaneous']
sent: ['Polite', 'acknowledgement', 'is', 'out', ';']
counter: {('restaurant miscellaneous', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] restaurant miscellaneous']
multi_path: ['[A] it [C] restaurant miscellaneous [S] great', '[A] it [S] great [C] restaurant miscellaneous', '[C] restaurant miscellaneous [S] great [A] it', '[C] restaurant miscellaneous [A] it [S] great', '[S] great [C] restaurant miscellaneous [A] it']

task, data: tasd rest15
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] restaurant general']
sent: ['supercilious', 'scorn', 'is', 'in', '.']
counter: {('restaurant general', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] restaurant general']
multi_path: ['[A] it [C] restaurant general [S] bad', '[A] it [S] bad [C] restaurant general', '[C] restaurant general [S] bad [A] it', '[C] restaurant general [A] it [S] bad', '[S] bad [C] restaurant general [A] it']

task, data: tasd rest15
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] napkins [S] bad [C] food style_options']
sent: ['And', 'how', 'many', 'times', 'can', 'you', 'pick', 'up', 'the', 'same', 'perfectly', 'aligned', 'set', 'of', 'napkins', ',', 'inspect', 'them', 'vapidly', 'and', 'plonk', 'them', 'down', 'in', 'exactly', 'the', 'same', 'place', 'instead', 'of', 'venturing', 'a', 'glance', 'at', 'people', 'who', 'are', 'there', 'to', 'help', 'you', 'make', 'the', 'rent', '?']
counter: {('food style_options', 'napkins', 'bad', 'null'): 5}
output quads: ['[A] napkins [S] bad [C] food style_options']
multi_path: ['[A] napkins [C] food style_options [S] bad', '[A] napkins [S] bad [C] food style_options', '[C] food style_options [S] bad [A] napkins', '[C] food style_options [A] napkins [S] bad', '[S] bad [C] food style_options [A] napkins']

task, data: tasd rest15
target: [('food quality', 'appetizer', 'great', 'null'), ('service general', 'server', 'bad', 'null')]
output: ['[A] server [S] great [C] service general']
sent: ['A', 'different', 'server', 'enhanced', 'the', 'fun', ',', 'dumping', 'our', 'entrees', 'in', 'front', 'of', 'us', 'halfway', 'through', 'our', 'appetizer', '(which', 'was', 'delicious', ')', '.']
counter: {('service general', 'server', 'great', 'null'): 5}
output quads: ['[A] server [S] great [C] service general']
multi_path: ['[A] server [C] service general [S] great', '[A] server [S] great [C] service general', '[C] service general [S] great [A] server', '[C] service general [A] server [S] great', '[S] great [C] service general [A] server']

task, data: tasd rest15
target: [('food quality', 'food', 'great', 'null'), ('service general', 'null', 'bad', 'null')]
output: ['[A] food quality [S] great [C] food quality', '[A] salmon [S] bad [C] food quality']
sent: ['Overall', 'the', 'food', 'quality', 'was', 'pretty', 'good', ',', 'though', 'I', 'hear', 'the', 'salmon', 'is', 'much', 'better', 'when', 'it', 'hasn', "'t", 'sat', 'cooling', 'in', 'front', 'of', 'the', 'guest', '.']
counter: {('food quality', 'food quality', 'great', 'null'): 5, ('food quality', 'salmon', 'bad', 'null'): 5}
output quads: ['[A] food quality [S] great [C] food quality', '[A] salmon [S] bad [C] food quality']
multi_path: ['[A] food quality [C] food quality [S] great [SSEP] [A] salmon [C] food quality [S] bad', '[A] food quality [S] great [C] food quality [SSEP] [A] salmon [S] bad [C] food quality', '[C] food quality [S] great [A] food quality [SSEP] [C] food quality [S] bad [A] salmon', '[C] food quality [A] food quality [S] great [SSEP] [C] food quality [A] salmon [S] bad', '[S] great [C] food quality [A] food quality [SSEP] [S] bad [C] food quality [A] salmon']

task, data: tasd rest15
target: [('ambience general', 'fit-out', 'great', 'null'), ('ambience general', 'furnishings', 'great', 'null'), ('drinks style_options', 'wine list', 'great', 'null'), ('service general', 'null', 'bad', 'null')]
output: ['[A] fit-out [S] great [C] ambience general', '[A] furnishings [S] great [C] ambience general', '[A] wine list [S] great [C] drinks style_options']
sent: ['The', 'place', 'has', 'a', 'nice', 'fit-out', ',', 'some', 'attractive', 'furnishings', 'and', ',', 'from', 'what', 'I', 'could', 'tell', ',', 'a', 'reasonable', 'wine', 'list', '(I', 'was', 'given', 'the', 'food', 'menu', 'when', 'I', 'asked', 'for', 'the', 'carte', 'des', 'vins', ')']
counter: {('ambience general', 'fit-out', 'great', 'null'): 5, ('ambience general', 'furnishings', 'great', 'null'): 5, ('drinks style_options', 'wine list', 'great', 'null'): 5, ('food quality', 'food menu', 'ok', 'null'): 2}
output quads: ['[A] fit-out [S] great [C] ambience general', '[A] furnishings [S] great [C] ambience general', '[A] wine list [S] great [C] drinks style_options']
multi_path: ['[A] fit-out [C] ambience general [S] great [SSEP] [A] furnishings [C] ambience general [S] great [SSEP] [A] wine list [C] drinks style_options [S] great', '[A] fit-out [S] great [C] ambience general [SSEP] [A] furnishings [S] great [C] ambience general [SSEP] [A] wine list [S] great [C] drinks style_options', '[C] ambience general [S] great [A] fit-out [SSEP] [C] ambience general [S] great [A] furnishings [SSEP] [C] drinks style_options [S] great [A] wine list [SSEP] [C] food quality [S] ok [A] food menu', '[C] ambience general [A] fit-out [S] great [SSEP] [C] ambience general [A] furnishings [S] great [SSEP] [C] drinks style_options [A] wine list [S] great', '[S] great [C] ambience general [A] fit-out [SSEP] [S] great [C] ambience general [A] furnishings [SSEP] [S] great [C] drinks style_options [A] wine list [SSEP] [S] ok [C] food quality [A] food menu']

task, data: tasd rest15
target: [('restaurant general', 'null', 'bad', 'null'), ('restaurant prices', 'null', 'bad', 'null'), ('service general', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] food quality', '[A] null [S] bad [C] restaurant prices']
sent: ['At', '$120', 'for', 'two', 'people', ',', 'however', ',', 'this', 'in', 'no', 'way', 'represents', 'value', ',', 'unless', 'you', "'re", 'looking', 'to', 'pay', 'by', 'the', 'hour', 'for', 'passive-aggressive', 'torture', '.']
counter: {('restaurant prices', 'null', 'bad', 'null'): 5, ('restaurant miscellaneous', 'null', 'bad', 'null'): 1, ('food quality', 'null', 'bad', 'null'): 3}
output quads: ['[A] null [S] bad [C] restaurant prices', '[A] null [S] bad [C] food quality']
multi_path: ['[A] it [C] restaurant prices [S] bad [SSEP] [A] it [C] restaurant miscellaneous [S] bad', '[A] it [S] bad [C] restaurant prices', '[C] restaurant prices [S] bad [A] it [SSEP] [C] food quality [S] bad [A] it', '[C] restaurant prices [A] it [S] bad [SSEP] [C] food quality [A] it [S] bad', '[S] bad [C] restaurant prices [A] it [SSEP] [S] bad [C] food quality [A] it']

task, data: tasd rest15
target: [('restaurant general', 'null', 'bad', 'null')]
output: ['[A] null [S] great [C] restaurant general']
sent: ['On', 'that', 'scale', ',', 'it', "'s", 'a', 'world-beater', '.']
counter: {('restaurant general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] restaurant general']
multi_path: ['[A] it [C] restaurant general [S] great', '[A] it [S] great [C] restaurant general', '[C] restaurant general [S] great [A] it', '[C] restaurant general [A] it [S] great', '[S] great [C] restaurant general [A] it']

task, data: tasd rest15
target: [('restaurant general', 'palce', 'bad', 'null')]
output: ['[A] palce [S] bad [C] restaurant miscellaneous']
sent: ['How', 'is', 'this', 'palce', 'still', 'open', '?']
counter: {('restaurant general', 'palce', 'bad', 'null'): 1, ('restaurant miscellaneous', 'palce', 'bad', 'null'): 4}
output quads: ['[A] palce [S] bad [C] restaurant miscellaneous']
multi_path: ['[A] palce [C] restaurant general [S] bad', '[A] palce [S] bad [C] restaurant miscellaneous', '[C] restaurant miscellaneous [S] bad [A] palce', '[C] restaurant miscellaneous [A] palce [S] bad', '[S] bad [C] restaurant miscellaneous [A] palce']

task, data: tasd rest15
target: [('food style_options', 'chicken', 'bad', 'null')]
output: ['[A] chicken [S] bad [C] food quality']
sent: ['I', 'took', 'one', 'look', 'at', 'the', 'chicken', 'and', 'I', 'was', 'appalled', '.']
counter: {('food quality', 'chicken', 'bad', 'null'): 3, ('food quality', 'chicken', 'great', 'null'): 2}
output quads: ['[A] chicken [S] bad [C] food quality']
multi_path: ['[A] chicken [C] food quality [S] bad', '[A] chicken [S] bad [C] food quality', '[C] food quality [S] great [A] chicken', '[C] food quality [A] chicken [S] bad', '[S] great [C] food quality [A] chicken']

task, data: tasd rest15
target: [('food quality', 'spinach', 'bad', 'null'), ('food style_options', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] food quality']
sent: ['It', 'was', 'served', 'with', 'skin', ',', 'over', 'a', 'bed', 'of', 'extremely', 'undercooked', 'spinach', 'and', 'mashed', 'potatoes', '.']
counter: {('food quality', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] food quality']
multi_path: ['[A] it [C] food quality [S] bad', '[A] it [S] bad [C] food quality', '[C] food quality [S] bad [A] it', '[C] food quality [A] it [S] bad', '[S] bad [C] food quality [A] it']

task, data: tasd rest15
target: [('food prices', 'salmon', 'bad', 'null'), ('food quality', 'salmon', 'bad', 'null')]
output: ['[A] salmon [S] bad [C] food quality']
sent: ['I', 'took', 'one', 'bite', 'from', 'the', '$24', 'salmon', ',', 'and', 'I', 'have', 'never', ',', 'in', 'the', '17', 'years', 'I', 'have', 'been', 'going', 'to', 'restaurants', 'tasted', 'salmon', 'as', 'fishy', ',', 'as', 'dry', ',', 'and', 'as', 'bland', 'as', 'the', 'one', 'in', 'Flatbush', 'Farms', '.']
counter: {('food quality', 'salmon', 'bad', 'null'): 10}
output quads: ['[A] salmon [S] bad [C] food quality']
multi_path: ['[A] salmon [C] food quality [S] bad [SSEP] [A] salmon [C] food quality [S] bad', '[A] salmon [S] bad [C] food quality [SSEP] [A] salmon [S] bad [C] food quality', '[C] food quality [S] bad [A] salmon [SSEP] [C] food quality [S] bad [A] salmon', '[C] food quality [A] salmon [S] bad [SSEP] [C] food quality [A] salmon [S] bad', '[S] bad [C] food quality [A] salmon [SSEP] [S] bad [C] food quality [A] salmon']

task, data: tasd rest15
target: [('food style_options', 'null', 'bad', 'null')]
output: ['[A] mashed potatoes [S] bad [C] food quality']
sent: ['I', 'couldn', "'t", 'even', 'enjoy', 'the', 'mashed', 'potatoes', 'because', 'it', 'was', 'hidden', 'completely', 'under', 'the', 'chicken', 'and', 'spinach', '.']
counter: {('food quality', 'mashed potatoes', 'bad', 'null'): 5}
output quads: ['[A] mashed potatoes [S] bad [C] food quality']
multi_path: ['[A] mashed potatoes [C] food quality [S] bad', '[A] mashed potatoes [S] bad [C] food quality', '[C] food quality [S] bad [A] mashed potatoes', '[C] food quality [A] mashed potatoes [S] bad', '[S] bad [C] food quality [A] mashed potatoes']

task, data: tasd rest15
target: [('food quality', 'null', 'bad', 'null')]
output: ['[A] waitress [S] bad [C] service general']
sent: ['So', 'I', 'decide', 'to', 'report', 'back', 'to', 'the', 'waitress', 'because', 'it', 'was', 'completely', 'inedible', '.']
counter: {('service general', 'waitress', 'bad', 'null'): 5}
output quads: ['[A] waitress [S] bad [C] service general']
multi_path: ['[A] waitress [C] service general [S] bad', '[A] waitress [S] bad [C] service general', '[C] service general [S] bad [A] waitress', '[C] service general [A] waitress [S] bad', '[S] bad [C] service general [A] waitress']

task, data: tasd rest15
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] desert menu [S] bad [C] food quality', '[A] null [S] bad [C] service general']
sent: ['No', 'desert', 'menu', ',', 'no', 'apology', ',', 'nothing', '!', '!', '!', '!', '!', '!']
counter: {('food quality', 'desert menu', 'bad', 'null'): 5, ('restaurant general', 'null', 'bad', 'null'): 2, ('service general', 'null', 'bad', 'null'): 3}
output quads: ['[A] desert menu [S] bad [C] food quality', '[A] null [S] bad [C] service general']
multi_path: ['[A] desert menu [C] food quality [S] bad [SSEP] [A] it [C] restaurant general [S] bad', '[A] desert menu [S] bad [C] food quality [SSEP] [A] it [S] bad [C] restaurant general', '[C] food quality [S] bad [A] desert menu [SSEP] [C] service general [S] bad [A] it', '[C] food quality [A] desert menu [S] bad [SSEP] [C] service general [A] it [S] bad', '[S] bad [C] food quality [A] desert menu [SSEP] [S] bad [C] service general [A] it']

task, data: tasd rest15
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] drink [S] bad [C] drinks quality', '[A] null [S] bad [C] service general']
sent: ['Again', ',', 'no', 'apology', ',', 'no', 'is', 'there', 'anything', 'else', 'I', 'can', 'get', 'you', ',', 'no', 'can', 'I', 'get', 'you', 'a', 'drink', 'to', 'make', 'up', 'for', 'it', ',', 'nothing', '!', '!', '!', '!']
counter: {('service general', 'null', 'bad', 'null'): 4, ('drinks quality', 'drink', 'bad', 'null'): 4}
output quads: ['[A] null [S] bad [C] service general', '[A] drink [S] bad [C] drinks quality']
multi_path: ['[A] it [C] service general [S] bad [SSEP] [A] drink [C] drinks quality [S] bad', '[A] it [S] bad [C] service general [SSEP] [A] drink [S] bad [C] drinks quality', '[C] service general [S] bad [A] it', '[C] service general [A] it [S] bad [SSEP] [C] drinks quality [A] drink [S] bad', '[S] bad [C] drinks quality [A] drink']

task, data: tasd rest15
target: [('drinks quality', 'drinks', 'great', 'null'), ('food quality', 'appetizers', 'great', 'null'), ('service general', 'manager', 'bad', 'null')]
output: ['[A] manager [S] bad [C] service general']
sent: ['The', 'manager', 'came', 'to', 'the', 'table', 'and', 'said', 'we', 'can', 'do', 'what', 'we', 'want', ',', 'so', 'we', 'paid', 'for', 'what', 'we', 'did', 'enjoy', ',', 'the', 'drinks', 'and', 'appetizers', ',', 'and', 'walked', 'out', '.']
counter: {('service general', 'manager', 'bad', 'null'): 5}
output quads: ['[A] manager [S] bad [C] service general']
multi_path: ['[A] manager [C] service general [S] bad', '[A] manager [S] bad [C] service general', '[C] service general [S] bad [A] manager', '[C] service general [A] manager [S] bad', '[S] bad [C] service general [A] manager']

task, data: tasd rest15
target: [('food quality', 'margherita pizza', 'great', 'null')]
output: ['[A] cirspy crust margherita pizza [S] great [C] food quality']
sent: ['cirspy', 'crust', 'margherita', 'pizza']
counter: {('food quality', 'cirspy crust margherita pizza', 'great', 'null'): 5}
output quads: ['[A] cirspy crust margherita pizza [S] great [C] food quality']
multi_path: ['[A] cirspy crust margherita pizza [C] food quality [S] great', '[A] cirspy crust margherita pizza [S] great [C] food quality', '[C] food quality [S] great [A] cirspy crust margherita pizza', '[C] food quality [A] cirspy crust margherita pizza [S] great', '[S] great [C] food quality [A] cirspy crust margherita pizza']

task, data: tasd rest15
target: [('restaurant general', 'place', 'bad', 'null')]
output: ['[A] place [S] great [C] restaurant general']
sent: ['If', 'I', 'could', 'give', '0', 'stars', 'I', 'would', 'do', 'so', 'for', 'this', 'place', '.']
counter: {('restaurant general', 'place', 'great', 'null'): 5}
output quads: ['[A] place [S] great [C] restaurant general']
multi_path: ['[A] place [C] restaurant general [S] great', '[A] place [S] great [C] restaurant general', '[C] restaurant general [S] great [A] place', '[C] restaurant general [A] place [S] great', '[S] great [C] restaurant general [A] place']

task, data: tasd rest15
target: [('restaurant miscellaneous', 'null', 'bad', 'null')]
output: ['[A] place [S] bad [C] restaurant miscellaneous']
sent: ['The', 'reason', 'there', 'are', '4', 'different', 'results', 'on', 'citysearch', 'for', 'the', 'same', 'place', 'is', 'because', 'they', 'keep', 'trying', 'to', 'start', 'a', 'new', 'thread', 'so', 'they', 'can', 'stock', 'it', 'with', 'positive', 'reviews', '.']
counter: {('restaurant miscellaneous', 'place', 'bad', 'null'): 4, ('restaurant general', 'place', 'bad', 'null'): 1}
output quads: ['[A] place [S] bad [C] restaurant miscellaneous']
multi_path: ['[A] place [C] restaurant miscellaneous [S] bad', '[A] place [S] bad [C] restaurant general', '[C] restaurant miscellaneous [S] bad [A] place', '[C] restaurant miscellaneous [A] place [S] bad', '[S] bad [C] restaurant miscellaneous [A] place']

task, data: tasd rest15
target: [('restaurant general', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] service general']
sent: ['Well', '.', '.', '.they', 'can', 'run', 'but', 'they', 'can', "'t", 'hide', '.']
counter: {('service general', 'null', 'bad', 'null'): 4, ('service general', 'null', 'great', 'null'): 1}
output quads: ['[A] null [S] bad [C] service general']
multi_path: ['[A] it [C] service general [S] bad', '[A] it [S] bad [C] service general', '[C] service general [S] bad [A] it', '[C] service general [A] it [S] bad', '[S] great [C] service general [A] it']

task, data: tasd rest15
target: [('restaurant general', 'place', 'bad', 'null')]
output: ['[A] place [S] great [C] restaurant general']
sent: ['This', 'place', '.', '.', '.god', 'where', 'do', 'i', 'begin', '.']
counter: {('restaurant general', 'place', 'great', 'null'): 5}
output quads: ['[A] place [S] great [C] restaurant general']
multi_path: ['[A] place [C] restaurant general [S] great', '[A] place [S] great [C] restaurant general', '[C] restaurant general [S] great [A] place', '[C] restaurant general [A] place [S] great', '[S] great [C] restaurant general [A] place']

task, data: tasd rest15
target: [('ambience general', 'decor', 'ok', 'null'), ('food prices', 'eggplant', 'bad', 'null'), ('food quality', 'eggplant', 'bad', 'null'), ('service general', 'null', 'bad', 'null')]
output: ['[A] cold eggplant [S] bad [C] food quality', '[A] decor [S] bad [C] ambience general']
sent: ['The', 'decor', 'however', 'seems', 'to', 'be', 'the', 'distraction', 'so', 'you', 'won', "'t", 'notice', 'that', 'you', 'just', 'payed', '300', 'bucks', 'for', 'some', 'cold', 'eggplant', 'that', 'took', '2', 'FRICKIN', 'HOURS', 'TO', 'COME', '!', '!', '!', '!']
counter: {('ambience general', 'decor', 'bad', 'null'): 5, ('food quality', 'cold eggplant', 'bad', 'null'): 4, ('food quality', 'eggplant', 'bad', 'null'): 1}
output quads: ['[A] decor [S] bad [C] ambience general', '[A] cold eggplant [S] bad [C] food quality']
multi_path: ['[A] decor [C] ambience general [S] bad [SSEP] [A] cold eggplant [C] food quality [S] bad', '[A] decor [S] bad [C] ambience general [SSEP] [A] eggplant [S] bad [C] food quality', '[C] ambience general [S] bad [A] decor [SSEP] [C] food quality [S] bad [A] cold eggplant', '[C] ambience general [A] decor [S] bad [SSEP] [C] food quality [A] cold eggplant [S] bad', '[S] bad [C] ambience general [A] decor [SSEP] [S] bad [C] food quality [A] cold eggplant']

task, data: tasd rest15
target: [('restaurant general', 'place', 'bad', 'null')]
output: ['[A] place [S] great [C] restaurant general']
sent: ['How', 'this', 'place', 'survives', 'the', 'competitive', 'west', 'village', 'market', 'in', 'this', 'economy', ',', 'or', 'any', 'other', 'for', 'that', 'matter', ',', 'is', 'beyond', 'me', '.']
counter: {('restaurant general', 'place', 'great', 'null'): 5}
output quads: ['[A] place [S] great [C] restaurant general']
multi_path: ['[A] place [C] restaurant general [S] great', '[A] place [S] great [C] restaurant general', '[C] restaurant general [S] great [A] place', '[C] restaurant general [A] place [S] great', '[S] great [C] restaurant general [A] place']

task, data: tasd rest15
target: [('food quality', 'food', 'great', 'null'), ('restaurant miscellaneous', 'bark', 'ok', 'null')]
output: ['[A] food [S] great [C] food quality', '[A] null [S] bad [C] ambience general']
sent: ['Though', 'it', "'s", 'been', 'crowded', 'most', 'times', 'I', "'ve", 'gone', 'here', ',', 'Bark', 'always', 'delivers', 'on', 'their', 'food', '.']
counter: {('ambience general', 'null', 'bad', 'null'): 4, ('food quality', 'food', 'great', 'null'): 5, ('ambience general', 'null', 'great', 'null'): 1}
output quads: ['[A] null [S] bad [C] ambience general', '[A] food [S] great [C] food quality']
multi_path: ['[A] it [C] ambience general [S] bad [SSEP] [A] food [C] food quality [S] great', '[A] it [S] bad [C] ambience general [SSEP] [A] food [S] great [C] food quality', '[C] ambience general [S] bad [A] it [SSEP] [C] food quality [S] great [A] food', '[C] ambience general [A] it [S] bad [SSEP] [C] food quality [A] food [S] great', '[S] great [C] ambience general [A] it [SSEP] [S] great [C] food quality [A] food']

task, data: tasd rest15
target: [('food quality', 'hot dogs', 'great', 'null'), ('food quality', 'slamwich', 'great', 'null')]
output: ['[A] hot dogs [S] great [C] food quality']
sent: ['The', 'hot', 'dogs', 'are', 'top', 'notch', ',', 'and', 'they', "'re", 'Slamwich', 'is', 'amazing', '!']
counter: {('food quality', 'hot dogs', 'great', 'null'): 9, ('food quality', 'slamwich', 'great', 'null'): 1}
output quads: ['[A] hot dogs [S] great [C] food quality']
multi_path: ['[A] hot dogs [C] food quality [S] great [SSEP] [A] hot dogs [C] food quality [S] great', '[A] hot dogs [S] great [C] food quality [SSEP] [A] hot dogs [S] great [C] food quality', '[C] food quality [S] great [A] hot dogs [SSEP] [C] food quality [S] great [A] slamwich', '[C] food quality [A] hot dogs [S] great [SSEP] [C] food quality [A] hot dogs [S] great', '[S] great [C] food quality [A] hot dogs [SSEP] [S] great [C] food quality [A] hot dogs']

task, data: tasd rest15
target: [('food quality', 'null', 'great', 'null'), ('restaurant general', 'bark', 'great', 'null')]
output: ['[A] bark [S] great [C] restaurant general']
sent: ['Going', 'to', 'Bark', 'is', 'always', 'worth', 'the', 'train', 'ride', ',', 'and', 'will', 'make', 'your', 'tongue', 'and', 'belly', 'very', 'happy', '!']
counter: {('restaurant general', 'bark', 'great', 'null'): 5}
output quads: ['[A] bark [S] great [C] restaurant general']
multi_path: ['[A] bark [C] restaurant general [S] great', '[A] bark [S] great [C] restaurant general', '[C] restaurant general [S] great [A] bark', '[C] restaurant general [A] bark [S] great', '[S] great [C] restaurant general [A] bark']

task, data: tasd rest15
target: [('food prices', 'menu', 'bad', 'null')]
output: ['[A] null [S] bad [C] restaurant prices']
sent: ['Only', 'complaint', 'is', 'the', 'pricing--I', 'believe', 'it', 'would', 'be', 'more', 'reasonable', 'to', 'pay', 'a', 'dollar', 'less', 'on', 'each', 'item', 'listed', 'on', 'the', 'menu', '.']
counter: {('restaurant prices', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] restaurant prices']
multi_path: ['[A] it [C] restaurant prices [S] bad', '[A] it [S] bad [C] restaurant prices', '[C] restaurant prices [S] bad [A] it', '[C] restaurant prices [A] it [S] bad', '[S] bad [C] restaurant prices [A] it']

task, data: tasd rest15
target: [('food quality', 'food', 'great', 'null'), ('service general', 'front of house staff', 'bad', 'null')]
output: ['[A] food [S] great [C] food quality', '[A] front of house staff [S] great [C] service general']
sent: ['Fabulous', 'food', '-', 'if', 'the', 'front', 'of', 'house', 'staff', 'don', "'t", 'put', 'you', 'off', '–']
counter: {('food quality', 'food', 'great', 'null'): 5, ('service general', 'front of house staff', 'great', 'null'): 4, ('service general', 'front of house', 'great', 'null'): 1}
output quads: ['[A] food [S] great [C] food quality', '[A] front of house staff [S] great [C] service general']
multi_path: ['[A] food [C] food quality [S] great [SSEP] [A] front of house staff [C] service general [S] great', '[A] food [S] great [C] food quality [SSEP] [A] front of house staff [S] great [C] service general', '[C] food quality [S] great [A] food [SSEP] [C] service general [S] great [A] front of house staff', '[C] food quality [A] food [S] great [SSEP] [C] service general [A] front of house staff [S] great', '[S] great [C] food quality [A] food [SSEP] [S] great [C] service general [A] front of house']

task, data: tasd rest15
target: [('restaurant prices', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] restaurant prices', '[A] null [S] great [C] restaurant general']
sent: ['It', "'s", 'a', 'little', 'out', 'of', 'our', 'price', 'range', 'for', 'dining', 'there', 'except', 'on', 'special', 'occasions', ',', 'but', 'we', "'ve", 'eaten', 'there', '6', 'times', 'in', 'the', 'last', '2', 'years', '.']
counter: {('restaurant prices', 'null', 'bad', 'null'): 5, ('restaurant general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] bad [C] restaurant prices', '[A] null [S] great [C] restaurant general']
multi_path: ['[A] it [C] restaurant prices [S] bad [SSEP] [A] it [C] restaurant general [S] great', '[A] it [S] bad [C] restaurant prices [SSEP] [A] it [S] great [C] restaurant general', '[C] restaurant prices [S] bad [A] it [SSEP] [C] restaurant general [S] great [A] it', '[C] restaurant prices [A] it [S] bad [SSEP] [C] restaurant general [A] it [S] great', '[S] bad [C] restaurant prices [A] it [SSEP] [S] great [C] restaurant general [A] it']

task, data: tasd rest15
target: [('food quality', 'fish dishes', 'great', 'null'), ('service general', 'front of house staff', 'bad', 'null'), ('service general', 'waiters', 'great', 'null')]
output: ['[A] front of house staff [S] great [C] service general', '[A] people [S] great [C] service general', '[A] waiters [S] great [C] service general']
sent: ['Each', 'time', 'we', "'ve", 'been', ',', 'the', 'front', 'of', 'house', 'staff', '(not', 'the', 'waiters', '-', 'they', "'re", 'fantastic', '-', 'but', 'the', 'people', 'who', 'greet', 'and', 'seat', 'you', ')', 'has', 'been', 'so', 'hideous', 'to', 'us', 'that', 'were', 'it', 'not', 'for', 'the', 'exceptional', 'fish', 'dishes', 'I', 'would', 'never', 'return', '.']
counter: {('service general', 'front of house staff', 'great', 'null'): 5, ('service general', 'waiters', 'great', 'null'): 5, ('service general', 'people', 'great', 'null'): 5}
output quads: ['[A] front of house staff [S] great [C] service general', '[A] waiters [S] great [C] service general', '[A] people [S] great [C] service general']
multi_path: ['[A] front of house staff [C] service general [S] great [SSEP] [A] waiters [C] service general [S] great [SSEP] [A] people [C] service general [S] great', '[A] front of house staff [S] great [C] service general [SSEP] [A] waiters [S] great [C] service general [SSEP] [A] people [S] great [C] service general', '[C] service general [S] great [A] front of house staff [SSEP] [C] service general [S] great [A] waiters [SSEP] [C] service general [S] great [A] people', '[C] service general [A] front of house staff [S] great [SSEP] [C] service general [A] waiters [S] great [SSEP] [C] service general [A] people [S] great', '[S] great [C] service general [A] front of house staff [SSEP] [S] great [C] service general [A] waiters [SSEP] [S] great [C] service general [A] people']

task, data: tasd rest15
target: [('restaurant miscellaneous', 'bfc', 'bad', 'null'), ('service general', 'front of house staff', 'bad', 'null'), ('service general', 'null', 'bad', 'null')]
output: ['[A] front of house staff [S] bad [C] service general']
sent: ['As', 'BFC', 'doesn', "'t", 'take', 'reservations', 'you', 'almost', 'always', 'have', 'to', 'wait', 'by', 'the', 'bar', '-', 'and', 'be', 'abused', 'by', 'the', 'front', 'of', 'house', 'staff', 'until', 'you', 'are', 'seated', ',', 'which', 'can', 'be', 'over', 'an', 'hour', 'later', '!']
counter: {('service general', 'front of house staff', 'bad', 'null'): 5}
output quads: ['[A] front of house staff [S] bad [C] service general']
multi_path: ['[A] front of house staff [C] service general [S] bad', '[A] front of house staff [S] bad [C] service general', '[C] service general [S] bad [A] front of house staff', '[C] service general [A] front of house staff [S] bad', '[S] bad [C] service general [A] front of house staff']

task, data: tasd rest15
target: [('service general', 'girl', 'bad', 'null')]
output: ['[A] frizzy retro girl [S] bad [C] service general']
sent: ['The', 'frizzy', 'retro', 'girl', '(with', 'winged', '/', 'Dame', 'Edna', 'glasses', ')', 'will', 'yell', 'at', 'you', 'if', 'you', 'try', 'to', 'order', 'a', 'drink', '.']
counter: {('service general', 'frizzy retro girl', 'bad', 'null'): 5}
output quads: ['[A] frizzy retro girl [S] bad [C] service general']
multi_path: ['[A] frizzy retro girl [C] service general [S] bad', '[A] frizzy retro girl [S] bad [C] service general', '[C] service general [S] bad [A] frizzy retro girl', '[C] service general [A] frizzy retro girl [S] bad', '[S] bad [C] service general [A] frizzy retro girl']

task, data: tasd rest15
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] person [S] great [C] service general']
sent: ['I', "'m", 'a', 'friendly', 'person', ',', 'so', 'I', 'wouldn', "'t", 'mind', 'had', 'she', 'not', 'been', 'so', 'nasty', 'and', 'gotten', 'so', 'personal', '.']
counter: {('service general', 'person', 'great', 'null'): 5}
output quads: ['[A] person [S] great [C] service general']
multi_path: ['[A] person [C] service general [S] great', '[A] person [S] great [C] service general', '[C] service general [S] great [A] person', '[C] service general [A] person [S] great', '[S] great [C] service general [A] person']

task, data: tasd rest15
target: [('restaurant prices', 'null', 'bad', 'null'), ('service general', 'service', 'bad', 'null')]
output: ['[A] service [S] bad [C] service general']
sent: ['Considering', 'you', 'will', 'spend', 'at', 'least', '$60', 'a', 'head', ',', 'I', 'expect', 'better', 'service', '.']
counter: {('service general', 'service', 'bad', 'null'): 5}
output quads: ['[A] service [S] bad [C] service general']
multi_path: ['[A] service [C] service general [S] bad', '[A] service [S] bad [C] service general', '[C] service general [S] bad [A] service', '[C] service general [A] service [S] bad', '[S] bad [C] service general [A] service']

task, data: tasd rest15
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] null [S] ok [C] service general']
sent: ['So', ',', 'if', 'you', "'re", 'walking', 'by', 'and', 'thinking', 'about', 'dining', ',', 'you', 'might', 'want', 'to', 'see', 'who', "'s", 'going', 'to', 'be', 'seating', 'you', 'first', '.', '.', '.']
counter: {('service general', 'null', 'ok', 'null'): 4, ('restaurant miscellaneous', 'null', 'ok', 'null'): 1}
output quads: ['[A] null [S] ok [C] service general']
multi_path: ['[A] it [C] service general [S] ok', '[A] it [S] ok [C] restaurant miscellaneous', '[C] service general [S] ok [A] it', '[C] service general [A] it [S] ok', '[S] ok [C] service general [A] it']

task, data: tasd rest15
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] null [S] great [C] restaurant miscellaneous']
sent: ['If', 'you', 'go', 'here', ',', 'do', 'it', 'on', 'his', 'off-night', '.']
counter: {('restaurant miscellaneous', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] restaurant miscellaneous']
multi_path: ['[A] it [C] restaurant miscellaneous [S] great', '[A] it [S] great [C] restaurant miscellaneous', '[C] restaurant miscellaneous [S] great [A] it', '[C] restaurant miscellaneous [A] it [S] great', '[S] great [C] restaurant miscellaneous [A] it']

task, data: tasd rest15
target: [('food quality', 'flank steak', 'great', 'null')]
output: ['[A] flank steak [S] great [C] food quality', '[A] swordfish [S] great [C] food quality']
sent: ['My', 'father', 'had', 'the', 'flank', 'steak', 'which', 'was', 'very', 'good', ',', 'and', 'my', 'mother', 'had', 'the', 'swordfish', '.']
counter: {('food quality', 'flank steak', 'great', 'null'): 5, ('food quality', 'swordfish', 'great', 'null'): 5}
output quads: ['[A] flank steak [S] great [C] food quality', '[A] swordfish [S] great [C] food quality']
multi_path: ['[A] flank steak [C] food quality [S] great [SSEP] [A] swordfish [C] food quality [S] great', '[A] flank steak [S] great [C] food quality [SSEP] [A] swordfish [S] great [C] food quality', '[C] food quality [S] great [A] flank steak [SSEP] [C] food quality [S] great [A] swordfish', '[C] food quality [A] flank steak [S] great [SSEP] [C] food quality [A] swordfish [S] great', '[S] great [C] food quality [A] flank steak [SSEP] [S] great [C] food quality [A] swordfish']

task, data: tasd rest15
target: [('restaurant general', 'the four seasons restaurant', 'great', 'null')]
output: ['[A] four seasons restaurant [S] great [C] restaurant general']
sent: ['The', 'Four', 'Seasons', 'restaurant', 'is', 'a', 'great', 'experience', '.']
counter: {('restaurant general', 'four seasons restaurant', 'great', 'null'): 5}
output quads: ['[A] four seasons restaurant [S] great [C] restaurant general']
multi_path: ['[A] four seasons restaurant [C] restaurant general [S] great', '[A] four seasons restaurant [S] great [C] restaurant general', '[C] restaurant general [S] great [A] four seasons restaurant', '[C] restaurant general [A] four seasons restaurant [S] great', '[S] great [C] restaurant general [A] four seasons restaurant']

task, data: tasd rest15
target: [('restaurant general', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] restaurant miscellaneous']
sent: ['Everyone', 'must', 'come', 'here', 'at', 'least', 'once', '.']
counter: {('restaurant miscellaneous', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] restaurant miscellaneous']
multi_path: ['[A] it [C] restaurant miscellaneous [S] great', '[A] it [S] great [C] restaurant miscellaneous', '[C] restaurant miscellaneous [S] great [A] it', '[C] restaurant miscellaneous [A] it [S] great', '[S] great [C] restaurant miscellaneous [A] it']

task, data: tasd rest15
target: [('food quality', 'hot dog', 'great', 'null'), ('restaurant prices', 'bark', 'bad', 'null')]
output: ['[A] null [S] great [C] food quality', '[A] place [S] bad [C] restaurant prices']
sent: ['At', 'first', 'glance', 'this', 'place', 'seems', 'a', 'bit', 'pricey', 'for', 'a', 'hot', 'dog', 'joint', ',', 'but', 'at', 'Bark', 'you', 'don', "'t", 'just', 'get', 'your', 'average', 'hot', 'dog', '.']
counter: {('restaurant prices', 'place', 'bad', 'null'): 5, ('food quality', 'null', 'great', 'null'): 5}
output quads: ['[A] place [S] bad [C] restaurant prices', '[A] null [S] great [C] food quality']
multi_path: ['[A] place [C] restaurant prices [S] bad [SSEP] [A] it [C] food quality [S] great', '[A] place [S] bad [C] restaurant prices [SSEP] [A] it [S] great [C] food quality', '[C] restaurant prices [S] bad [A] place [SSEP] [C] food quality [S] great [A] it', '[C] restaurant prices [A] place [S] bad [SSEP] [C] food quality [A] it [S] great', '[S] bad [C] restaurant prices [A] place [SSEP] [S] great [C] food quality [A] it']

task, data: tasd rest15
target: [('food quality', 'fish tacos', 'great', 'null'), ('food quality', 'null', 'ok', 'null')]
output: ['[A] fish tacos [S] great [C] food quality', '[A] fish tacos [S] ok [C] food quality']
sent: ['I', 'highly', 'recommend', 'the', 'fish', 'tacos', ',', 'everything', 'else', 'was', 'ok', '.']
counter: {('food quality', 'fish tacos', 'great', 'null'): 5, ('food quality', 'null', 'ok', 'null'): 2, ('food quality', 'fish tacos', 'ok', 'null'): 3}
output quads: ['[A] fish tacos [S] great [C] food quality', '[A] fish tacos [S] ok [C] food quality']
multi_path: ['[A] fish tacos [C] food quality [S] great [SSEP] [A] it [C] food quality [S] ok', '[A] fish tacos [S] great [C] food quality [SSEP] [A] it [S] ok [C] food quality', '[C] food quality [S] great [A] fish tacos [SSEP] [C] food quality [S] ok [A] fish tacos', '[C] food quality [A] fish tacos [S] great [SSEP] [C] food quality [A] fish tacos [S] ok', '[S] great [C] food quality [A] fish tacos [SSEP] [S] ok [C] food quality [A] fish tacos']

task, data: tasd rest15
target: [('ambience general', 'atmosphere', 'great', 'null'), ('ambience general', 'fire place', 'great', 'null'), ('ambience general', 'null', 'bad', 'null')]
output: ['[A] atmosphere [S] great [C] ambience general', '[A] fire place [S] bad [C] ambience general']
sent: ['Cool', 'atmosphere', ',', 'the', 'fire', 'place', 'in', 'the', 'back', 'really', 'ads', 'to', 'it', 'but', 'needs', 'a', 'bit', 'more', 'heat', 'throughout', 'on', 'a', 'cold', 'night', '.']
counter: {('ambience general', 'atmosphere', 'great', 'null'): 5, ('ambience general', 'fire place', 'bad', 'null'): 4, ('ambience general', 'fire place', 'great', 'null'): 1}
output quads: ['[A] atmosphere [S] great [C] ambience general', '[A] fire place [S] bad [C] ambience general']
multi_path: ['[A] atmosphere [C] ambience general [S] great [SSEP] [A] fire place [C] ambience general [S] bad', '[A] atmosphere [S] great [C] ambience general [SSEP] [A] fire place [S] great [C] ambience general', '[C] ambience general [S] great [A] atmosphere [SSEP] [C] ambience general [S] bad [A] fire place', '[C] ambience general [A] atmosphere [S] great [SSEP] [C] ambience general [A] fire place [S] bad', '[S] great [C] ambience general [A] atmosphere [SSEP] [S] bad [C] ambience general [A] fire place']

task, data: tasd rest15
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] appetizers [S] bad [C] food quality']
sent: ['Appetizers', 'took', 'nearly', 'an', 'hour', '.']
counter: {('food quality', 'appetizers', 'bad', 'null'): 5}
output quads: ['[A] appetizers [S] bad [C] food quality']
multi_path: ['[A] appetizers [C] food quality [S] bad', '[A] appetizers [S] bad [C] food quality', '[C] food quality [S] bad [A] appetizers', '[C] food quality [A] appetizers [S] bad', '[S] bad [C] food quality [A] appetizers']

task, data: tasd rest15
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] main course [S] bad [C] food quality']
sent: ['When', 'the', 'main', 'course', 'finally', 'arrived', '(another', '45mins', ')', 'half', 'of', 'our', 'order', 'was', 'missing', '.']
counter: {('food quality', 'main course', 'bad', 'null'): 5}
output quads: ['[A] main course [S] bad [C] food quality']
multi_path: ['[A] main course [C] food quality [S] bad', '[A] main course [S] bad [C] food quality', '[C] food quality [S] bad [A] main course', '[C] food quality [A] main course [S] bad', '[S] bad [C] food quality [A] main course']

task, data: tasd rest15
target: [('restaurant prices', 'restaurant', 'bad', 'null'), ('service general', 'null', 'bad', 'null')]
output: ['[A] nyc restaurant [S] bad [C] restaurant miscellaneous']
sent: ['Can’t', 'believe', 'how', 'an', 'expensive', 'NYC', 'restaurant', 'can', 'be', 'so', 'disrespectful', 'to', 'its', 'clients', '.']
counter: {('restaurant miscellaneous', 'nyc restaurant', 'bad', 'null'): 5}
output quads: ['[A] nyc restaurant [S] bad [C] restaurant miscellaneous']
multi_path: ['[A] nyc restaurant [C] restaurant miscellaneous [S] bad', '[A] nyc restaurant [S] bad [C] restaurant miscellaneous', '[C] restaurant miscellaneous [S] bad [A] nyc restaurant', '[C] restaurant miscellaneous [A] nyc restaurant [S] bad', '[S] bad [C] restaurant miscellaneous [A] nyc restaurant']

task, data: tasd rest15
target: [('restaurant general', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] service general']
sent: ['What', 'a', 'hassle', '!']
counter: {('service general', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] service general']
multi_path: ['[A] it [C] service general [S] bad', '[A] it [S] bad [C] service general', '[C] service general [S] bad [A] it', '[C] service general [A] it [S] bad', '[S] bad [C] service general [A] it']

task, data: tasd rest15
target: [('food quality', 'null', 'bad', 'null'), ('service general', 'staff', 'bad', 'null'), ('service general', 'wait', 'bad', 'null')]
output: ['[A] null [S] bad [C] restaurant general', '[A] staff [S] bad [C] service general', '[A] wait [S] bad [C] service general']
sent: ['There', 'is', 'no', 'way', 'it', 'justifies', 'the', 'accolades', 'it', 'receives', ',', 'the', 'attitude', 'of', 'the', 'staff', 'or', 'the', 'wait', 'for', 'a', 'table', '.']
counter: {('service general', 'staff', 'bad', 'null'): 5, ('service general', 'wait', 'bad', 'null'): 5, ('restaurant general', 'null', 'bad', 'null'): 3}
output quads: ['[A] staff [S] bad [C] service general', '[A] wait [S] bad [C] service general', '[A] null [S] bad [C] restaurant general']
multi_path: ['[A] staff [C] service general [S] bad [SSEP] [A] wait [C] service general [S] bad', '[A] staff [S] bad [C] service general [SSEP] [A] wait [S] bad [C] service general', '[C] restaurant general [S] bad [A] it [SSEP] [C] service general [S] bad [A] staff [SSEP] [C] service general [S] bad [A] wait', '[C] restaurant general [A] it [S] bad [SSEP] [C] service general [A] staff [S] bad [SSEP] [C] service general [A] wait [S] bad', '[S] bad [C] restaurant general [A] it [SSEP] [S] bad [C] service general [A] staff [SSEP] [S] bad [C] service general [A] wait']

task, data: tasd rest15
target: [('service general', 'staff', 'bad', 'null')]
output: ['[A] staff [S] great [C] service general']
sent: ['Mistakes', 'happen', ',', 'but', 'they', 'are', 'usually', 'accompanied', 'by', 'an', 'apology', ',', 'perhaps', 'even', 'a', 'glass', 'of', 'wine', '.', '.', '.but', 'not', 'the', 'grunt', 'that', 'we', 'received', 'from', 'the', 'Al', 'Di', 'La', 'staff', '.']
counter: {('service general', 'staff', 'great', 'null'): 5}
output quads: ['[A] staff [S] great [C] service general']
multi_path: ['[A] staff [C] service general [S] great', '[A] staff [S] great [C] service general', '[C] service general [S] great [A] staff', '[C] service general [A] staff [S] great', '[S] great [C] service general [A] staff']

task, data: tasd rest15
target: [('food prices', 'salad', 'bad', 'null'), ('food quality', 'bread', 'bad', 'null'), ('food style_options', 'salad', 'bad', 'null')]
output: ['[A] bread [S] bad [C] food quality', '[A] salad [S] bad [C] food prices', '[A] salad [S] bad [C] food quality']
sent: ['The', 'bread', 'was', 'stale', ',', 'the', 'salad', 'was', 'overpriced', 'and', 'empty', '.']
counter: {('food quality', 'bread', 'bad', 'null'): 5, ('food quality', 'salad', 'bad', 'null'): 4, ('food prices', 'salad', 'bad', 'null'): 5}
output quads: ['[A] bread [S] bad [C] food quality', '[A] salad [S] bad [C] food quality', '[A] salad [S] bad [C] food prices']
multi_path: ['[A] bread [C] food quality [S] bad [SSEP] [A] salad [C] food quality [S] bad [SSEP] [A] salad [C] food prices [S] bad', '[A] bread [S] bad [C] food quality [SSEP] [A] salad [S] bad [C] food prices', '[C] food quality [S] bad [A] bread [SSEP] [C] food prices [S] bad [A] salad [SSEP] [C] food quality [S] bad [A] salad', '[C] food quality [A] bread [S] bad [SSEP] [C] food prices [A] salad [S] bad [SSEP] [C] food quality [A] salad [S] bad', '[S] bad [C] food quality [A] bread [SSEP] [S] bad [C] food prices [A] salad [SSEP] [S] bad [C] food quality [A] salad']

task, data: tasd rest15
target: [('food quality', 'pasta', 'bad', 'null'), ('food quality', 'pasta', 'great', 'null'), ('food style_options', 'pasta', 'bad', 'null')]
output: ['[A] pasta [S] great [C] food quality', '[A] sauce [S] bad [C] food quality']
sent: ['The', 'pasta', 'was', 'well', 'cooked', ',', 'didn', "'t", 'have', 'enough', 'sauce', 'though', 'or', 'flavor', '.']
counter: {('food quality', 'pasta', 'great', 'null'): 5, ('food quality', 'sauce', 'bad', 'null'): 5}
output quads: ['[A] pasta [S] great [C] food quality', '[A] sauce [S] bad [C] food quality']
multi_path: ['[A] pasta [C] food quality [S] great [SSEP] [A] sauce [C] food quality [S] bad', '[A] pasta [S] great [C] food quality [SSEP] [A] sauce [S] bad [C] food quality', '[C] food quality [S] great [A] pasta [SSEP] [C] food quality [S] bad [A] sauce', '[C] food quality [A] pasta [S] great [SSEP] [C] food quality [A] sauce [S] bad', '[S] great [C] food quality [A] pasta [SSEP] [S] bad [C] food quality [A] sauce']

task, data: tasd rest15
target: [('restaurant general', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] restaurant miscellaneous']
sent: ['I', 'was', 'one', 'of', 'the', 'people', 'that', 'went', 'for', 'this', 'horrible', 'experience', '.']
counter: {('restaurant general', 'null', 'bad', 'null'): 2, ('restaurant miscellaneous', 'null', 'bad', 'null'): 3}
output quads: ['[A] null [S] bad [C] restaurant miscellaneous']
multi_path: ['[A] it [C] restaurant general [S] bad', '[A] it [S] bad [C] restaurant general', '[C] restaurant miscellaneous [S] bad [A] it', '[C] restaurant miscellaneous [A] it [S] bad', '[S] bad [C] restaurant miscellaneous [A] it']

task, data: tasd rest15
target: [('service general', 'hostess', 'bad', 'null'), ('service general', 'null', 'bad', 'null')]
output: ['[A] hostess [S] bad [C] service general']
sent: ['The', 'hostess', 'was', 'rude', 'and', 'I', 'got', 'a', 'distinct', 'feeling', 'that', 'they', 'did', 'not', 'want', 'to', 'serve', 'us', '.']
counter: {('service general', 'hostess', 'bad', 'null'): 5}
output quads: ['[A] hostess [S] bad [C] service general']
multi_path: ['[A] hostess [C] service general [S] bad', '[A] hostess [S] bad [C] service general', '[C] service general [S] bad [A] hostess', '[C] service general [A] hostess [S] bad', '[S] bad [C] service general [A] hostess']

task, data: tasd rest15
target: [('restaurant miscellaneous', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] ambience general']
sent: ['We', 'didn', "'t", 'look', 'like', 'the', 'other', 'patrons', 'in', 'there', 'so', 'unfortunately', 'I', 'think', 'that', 'may', 'have', 'been', 'part', 'of', 'the', 'problem', '.']
counter: {('ambience general', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] ambience general']
multi_path: ['[A] it [C] ambience general [S] bad', '[A] it [S] bad [C] ambience general', '[C] ambience general [S] bad [A] it', '[C] ambience general [A] it [S] bad', '[S] bad [C] ambience general [A] it']

task, data: tasd rest15
target: [('service general', 'waiter', 'bad', 'null'), ('service general', 'waitress', 'bad', 'null')]
output: ['[A] waiter [S] great [C] service general', '[A] waitress [S] great [C] service general']
sent: ['I', 'was', 'there', 'for', 'brunch', 'recently', ',', 'and', 'we', 'were', 'tag', 'teamed', 'by', 'a', 'waitress', 'and', 'a', 'waiter', '.']
counter: {('service general', 'waitress', 'great', 'null'): 5, ('service general', 'waiter', 'great', 'null'): 5}
output quads: ['[A] waitress [S] great [C] service general', '[A] waiter [S] great [C] service general']
multi_path: ['[A] waitress [C] service general [S] great [SSEP] [A] waiter [C] service general [S] great', '[A] waitress [S] great [C] service general [SSEP] [A] waiter [S] great [C] service general', '[C] service general [S] great [A] waitress [SSEP] [C] service general [S] great [A] waiter', '[C] service general [A] waitress [S] great [SSEP] [C] service general [A] waiter [S] great', '[S] great [C] service general [A] waitress [SSEP] [S] great [C] service general [A] waiter']

task, data: tasd rest15
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] restaurant miscellaneous']
sent: ['I', 'can', "'t", 'believe', 'that', 'it', 'was', ',', 'but', 'please', 'put', 'the', 'bag', 'down', 'before', 'delivering', 'food', '!']
counter: {('restaurant miscellaneous', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] restaurant miscellaneous']
multi_path: ['[A] it [C] restaurant miscellaneous [S] bad', '[A] it [S] bad [C] restaurant miscellaneous', '[C] restaurant miscellaneous [S] bad [A] it', '[C] restaurant miscellaneous [A] it [S] bad', '[S] bad [C] restaurant miscellaneous [A] it']

task, data: tasd rest15
target: [('restaurant general', 'place', 'bad', 'null'), ('service general', 'staff', 'bad', 'null')]
output: ['[A] place [S] great [C] restaurant general', '[A] staff [S] bad [C] service general']
sent: ['I', 'wish', 'I', 'could', 'like', 'this', 'place', 'more', ',', 'and', 'I', 'wish', 'someone', 'would', 'retrain', 'the', 'staff', '.']
counter: {('restaurant general', 'place', 'great', 'null'): 4, ('service general', 'staff', 'bad', 'null'): 5, ('restaurant general', 'place', 'bad', 'null'): 1}
output quads: ['[A] place [S] great [C] restaurant general', '[A] staff [S] bad [C] service general']
multi_path: ['[A] place [C] restaurant general [S] great [SSEP] [A] staff [C] service general [S] bad', '[A] place [S] great [C] restaurant general [SSEP] [A] staff [S] bad [C] service general', '[C] restaurant general [S] great [A] place [SSEP] [C] service general [S] bad [A] staff', '[C] restaurant general [A] place [S] great [SSEP] [C] service general [A] staff [S] bad', '[S] bad [C] restaurant general [A] place [SSEP] [S] bad [C] service general [A] staff']

pred labels count Counter({1: 434, 2: 116, 3: 26, 4: 4, 5: 2})
gold  [A] al di la [C] restaurant general [S] great
pred  [A] al di la [S] great [C] restaurant general

gold  [A] place [C] restaurant general [S] great
pred  [A] place [S] great [C] restaurant general

gold  [A] food [C] food quality [S] great
pred  [A] food [S] great [C] food quality

gold  [A] it [C] restaurant general [S] great
pred  [A] null [S] great [C] restaurant general

gold  [A] pastas [C] food quality [S] great [SSEP] [A] risottos [C] food quality [S] great [SSEP] [A] sepia [C] food quality [S] great [SSEP] [A] braised rabbit [C] food quality [S] great
pred  [A] pastas [S] great [C] food quality [SSEP] [A] risottos [S] great [C] food quality [SSEP] [A] sepia [S] great [C] food quality [SSEP] [A] braised rabbit [S] great [C] food quality

gold  [A] it [C] food prices [S] bad [SSEP] [A] it [C] food quality [S] bad
pred  [A] null [S] bad [C] food quality [SSEP] [A] null [S] bad [C] food prices

gold  [A] food [C] food quality [S] bad
pred  [A] food [S] bad [C] food quality

gold  [A] it [C] food prices [S] bad [SSEP] [A] fish and chips [C] food prices [S] bad
pred  [A] null [S] bad [C] food prices [SSEP] [A] fish and chips [S] bad [C] food prices

gold  [A] dog [C] food quality [S] great
pred  [A] dog [S] great [C] food quality

gold  [A] dog [C] food quality [S] great [SSEP] [A] establishment [C] restaurant miscellaneous [S] great
pred  [A] dog [S] great [C] service general [SSEP] [A] establishment [S] great [C] restaurant miscellaneous

number of gold spans: 845, predicted spans: 770, hit: 527
tasd rest15 {'precision': 68.44155844155844, 'recall': 62.366863905325445, 'f1': 65.26315789473685}
Total examples = 587
Total examples = 587
Ori sent size: 587
Input size: 2935 2935
Examples:
[['tasd', ':', 'rest16', ':', 'yum', '!', '[A]', '[C]', '[S]'], ['tasd', ':', 'rest16', ':', 'yum', '!', '[A]', '[S]', '[C]'], ['tasd', ':', 'rest16', ':', 'yum', '!', '[C]', '[S]', '[A]'], ['tasd', ':', 'rest16', ':', 'yum', '!', '[C]', '[A]', '[S]'], ['tasd', ':', 'rest16', ':', 'yum', '!', '[S]', '[C]', '[A]'], ['tasd', ':', 'rest16', ':', 'serves', 'really', 'good', 'sushi', '.', '[A]', '[C]', '[S]'], ['tasd', ':', 'rest16', ':', 'serves', 'really', 'good', 'sushi', '.', '[A]', '[S]', '[C]'], ['tasd', ':', 'rest16', ':', 'serves', 'really', 'good', 'sushi', '.', '[C]', '[S]', '[A]'], ['tasd', ':', 'rest16', ':', 'serves', 'really', 'good', 'sushi', '.', '[C]', '[A]', '[S]'], ['tasd', ':', 'rest16', ':', 'serves', 'really', 'good', 'sushi', '.', '[S]', '[C]', '[A]']]
['[A] it [C] food quality [S] great', '[A] it [S] great [C] food quality', '[C] food quality [S] great [A] it', '[C] food quality [A] it [S] great', '[S] great [C] food quality [A] it', '[A] sushi [C] food quality [S] great', '[A] sushi [S] great [C] food quality', '[C] food quality [S] great [A] sushi', '[C] food quality [A] sushi [S] great', '[S] great [C] food quality [A] sushi']
task, data: tasd rest16
target: [('food style_options', 'portions', 'ok', 'null')]
output: ['[A] portions [S] great [C] food style_options', '[A] portions [S] ok [C] food style_options']
sent: ['Not', 'the', 'biggest', 'portions', 'but', 'adequate', '.']
counter: {('food style_options', 'portions', 'ok', 'null'): 5, ('food style_options', 'portions', 'great', 'null'): 3, ('food quality', 'null', 'great', 'null'): 1}
output quads: ['[A] portions [S] ok [C] food style_options', '[A] portions [S] great [C] food style_options']
multi_path: ['[A] portions [C] food style_options [S] ok [SSEP] [A] portions [C] food style_options [S] great', '[A] portions [S] ok [C] food style_options [SSEP] [A] portions [S] great [C] food style_options', '[C] food style_options [S] ok [A] portions [SSEP] [C] food quality [S] great [A] it', '[C] food style_options [A] portions [S] ok', '[S] ok [C] food style_options [A] portions [SSEP] [S] great [C] food style_options [A] portions']

task, data: tasd rest16
target: [('food quality', 'null', 'great', 'null')]
output: ['[A] restaurant [S] great [C] restaurant general']
sent: ['Don', "'t", 'leave', 'the', 'restaurant', 'without', 'it', '.']
counter: {('restaurant general', 'restaurant', 'great', 'null'): 5}
output quads: ['[A] restaurant [S] great [C] restaurant general']
multi_path: ['[A] restaurant [C] restaurant general [S] great', '[A] restaurant [S] great [C] restaurant general', '[C] restaurant general [S] great [A] restaurant', '[C] restaurant general [A] restaurant [S] great', '[S] great [C] restaurant general [A] restaurant']

task, data: tasd rest16
target: [('restaurant general', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] food quality']
sent: ['Overrated']
counter: {('food quality', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] food quality']
multi_path: ['[A] it [C] food quality [S] bad', '[A] it [S] bad [C] food quality', '[C] food quality [S] bad [A] it', '[C] food quality [A] it [S] bad', '[S] bad [C] food quality [A] it']

task, data: tasd rest16
target: [('food quality', 'honey walnut prawns', 'bad', 'null'), ('food quality', 'lemon chicken', 'bad', 'null'), ('food style_options', 'honey walnut prawns', 'bad', 'null')]
output: ['[A] honey walnut prawns [S] bad [C] food quality', '[A] lemon chicken [S] bad [C] food quality']
sent: ['The', 'lemon', 'chicken', 'tasted', 'like', 'sticky', 'sweet', 'donuts', 'and', 'the', 'honey', 'walnut', 'prawns', ',', 'the', 'few', 'they', 'actually', 'give', 'you', '.', '.', '.', '.', '.were', 'not', 'good', '.']
counter: {('food quality', 'lemon chicken', 'bad', 'null'): 5, ('food quality', 'honey walnut prawns', 'bad', 'null'): 5}
output quads: ['[A] lemon chicken [S] bad [C] food quality', '[A] honey walnut prawns [S] bad [C] food quality']
multi_path: ['[A] lemon chicken [C] food quality [S] bad [SSEP] [A] honey walnut prawns [C] food quality [S] bad', '[A] lemon chicken [S] bad [C] food quality [SSEP] [A] honey walnut prawns [S] bad [C] food quality', '[C] food quality [S] bad [A] lemon chicken [SSEP] [C] food quality [S] bad [A] honey walnut prawns', '[C] food quality [A] lemon chicken [S] bad [SSEP] [C] food quality [A] honey walnut prawns [S] bad', '[S] bad [C] food quality [A] lemon chicken [SSEP] [S] bad [C] food quality [A] honey walnut prawns']

task, data: tasd rest16
target: [('service general', 'service', 'great', 'null')]
output: ['[A] service [S] bad [C] service general']
sent: ['Worst', 'Service', 'I', 'Ever', 'Had']
counter: {('service general', 'service', 'bad', 'null'): 5}
output quads: ['[A] service [S] bad [C] service general']
multi_path: ['[A] service [C] service general [S] bad', '[A] service [S] bad [C] service general', '[C] service general [S] bad [A] service', '[C] service general [A] service [S] bad', '[S] bad [C] service general [A] service']

task, data: tasd rest16
target: [('service general', 'waiter', 'bad', 'null')]
output: ['[A] food [S] bad [C] food quality', '[A] waiter [S] bad [C] service general']
sent: ['Our', 'waiter', 'was', 'non-existent', 'and', 'after', 'our', 'food', 'finally', 'arrived', 'over', 'an', 'hour', 'after', 'we', 'ordered', ',', 'we', 'were', 'not', 'given', 'any', 'water', 'or', 'utensils', '.']
counter: {('service general', 'waiter', 'bad', 'null'): 5, ('food quality', 'food', 'bad', 'null'): 5}
output quads: ['[A] waiter [S] bad [C] service general', '[A] food [S] bad [C] food quality']
multi_path: ['[A] waiter [C] service general [S] bad [SSEP] [A] food [C] food quality [S] bad', '[A] waiter [S] bad [C] service general [SSEP] [A] food [S] bad [C] food quality', '[C] service general [S] bad [A] waiter [SSEP] [C] food quality [S] bad [A] food', '[C] service general [A] waiter [S] bad [SSEP] [C] food quality [A] food [S] bad', '[S] bad [C] service general [A] waiter [SSEP] [S] bad [C] food quality [A] food']

task, data: tasd rest16
target: [('restaurant general', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] drinks quality']
sent: ['It', 'was', 'absolutely', 'amazing', '.']
counter: {('drinks quality', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] drinks quality']
multi_path: ['[A] it [C] drinks quality [S] great', '[A] it [S] great [C] drinks quality', '[C] drinks quality [S] great [A] it', '[C] drinks quality [A] it [S] great', '[S] great [C] drinks quality [A] it']

task, data: tasd rest16
target: [('restaurant general', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] food quality']
sent: ['AMAZING', '.']
counter: {('food quality', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] food quality']
multi_path: ['[A] it [C] food quality [S] great', '[A] it [S] great [C] food quality', '[C] food quality [S] great [A] it', '[C] food quality [A] it [S] great', '[S] great [C] food quality [A] it']

task, data: tasd rest16
target: [('restaurant general', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] food quality']
sent: ['Mmm', '.', '.', '.', 'good', '!']
counter: {('food quality', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] food quality']
multi_path: ['[A] it [C] food quality [S] great', '[A] it [S] great [C] food quality', '[C] food quality [S] great [A] it', '[C] food quality [A] it [S] great', '[S] great [C] food quality [A] it']

task, data: tasd rest16
target: [('food prices', 'food', 'great', 'null'), ('food quality', 'food', 'great', 'null')]
output: ['[A] food [S] great [C] food quality', '[A] null [S] great [C] food prices']
sent: ['It', "'s", '*very', '*', 'reasonably', 'priced', ',', 'esp', 'for', 'the', 'quality', 'of', 'the', 'food', '.']
counter: {('food prices', 'null', 'great', 'null'): 4, ('food quality', 'food', 'great', 'null'): 5, ('food prices', 'food', 'great', 'null'): 1}
output quads: ['[A] null [S] great [C] food prices', '[A] food [S] great [C] food quality']
multi_path: ['[A] it [C] food prices [S] great [SSEP] [A] food [C] food quality [S] great', '[A] it [S] great [C] food prices [SSEP] [A] food [S] great [C] food quality', '[C] food prices [S] great [A] it [SSEP] [C] food quality [S] great [A] food', '[C] food prices [A] it [S] great [SSEP] [C] food quality [A] food [S] great', '[S] great [C] food quality [A] food [SSEP] [S] great [C] food prices [A] food']

task, data: tasd rest16
target: [('ambience general', 'place', 'great', 'null'), ('food quality', 'food', 'great', 'null')]
output: ['[A] food [S] great [C] food quality']
sent: ['This', 'is', 'the', 'place', 'to', 'relax', 'and', 'enjoy', 'the', 'finest', 'quality', 'food', 'the', 'industry', 'can', 'offer', '.']
counter: {('food quality', 'food', 'great', 'null'): 5}
output quads: ['[A] food [S] great [C] food quality']
multi_path: ['[A] food [C] food quality [S] great', '[A] food [S] great [C] food quality', '[C] food quality [S] great [A] food', '[C] food quality [A] food [S] great', '[S] great [C] food quality [A] food']

task, data: tasd rest16
target: [('restaurant general', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] food quality']
sent: ['Very', 'Disappointing']
counter: {('food quality', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] food quality']
multi_path: ['[A] it [C] food quality [S] bad', '[A] it [S] bad [C] food quality', '[C] food quality [S] bad [A] it', '[C] food quality [A] it [S] bad', '[S] bad [C] food quality [A] it']

task, data: tasd rest16
target: [('food quality', 'food', 'bad', 'null')]
output: ['[A] food [S] ok [C] food quality']
sent: ['I', 'may', 'not', 'be', 'a', 'sushi', 'guru', 'but', 'I', 'can', 'tell', 'you', 'that', 'the', 'food', 'here', 'is', 'just', 'okay', 'and', 'that', 'there', 'is', 'not', 'much', 'else', 'to', 'it', '.']
counter: {('food quality', 'food', 'ok', 'null'): 5}
output quads: ['[A] food [S] ok [C] food quality']
multi_path: ['[A] food [C] food quality [S] ok', '[A] food [S] ok [C] food quality', '[C] food quality [S] ok [A] food', '[C] food quality [A] food [S] ok', '[S] ok [C] food quality [A] food']

task, data: tasd rest16
target: [('food quality', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] restaurant general']
sent: ['Nothing', 'really', 'came', 'across', 'as', 'outstanding', '.']
counter: {('restaurant general', 'null', 'bad', 'null'): 3, ('food quality', 'null', 'bad', 'null'): 2}
output quads: ['[A] null [S] bad [C] restaurant general']
multi_path: ['[A] it [C] restaurant general [S] bad', '[A] it [S] bad [C] food quality', '[C] restaurant general [S] bad [A] it', '[C] restaurant general [A] it [S] bad', '[S] bad [C] food quality [A] it']

task, data: tasd rest16
target: [('restaurant general', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] food quality']
sent: ['Very', 'disappointed', '.']
counter: {('food quality', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] food quality']
multi_path: ['[A] it [C] food quality [S] bad', '[A] it [S] bad [C] food quality', '[C] food quality [S] bad [A] it', '[C] food quality [A] it [S] bad', '[S] bad [C] food quality [A] it']

task, data: tasd rest16
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] sake [S] bad [C] drinks prices', '[A] sake [S] bad [C] drinks quality']
sent: ['We', 'were', 'then', 'charged', 'for', 'their', 'most', 'expensive', 'sake', '(', '$20', '+', 'per', 'serving', ')', 'when', 'we', 'in', 'fact', 'drank', 'a', 'sake', 'of', 'less', 'than', 'half', 'that', 'price', '.']
counter: {('drinks prices', 'sake', 'bad', 'null'): 5, ('drinks quality', 'sake', 'bad', 'null'): 5}
output quads: ['[A] sake [S] bad [C] drinks prices', '[A] sake [S] bad [C] drinks quality']
multi_path: ['[A] sake [C] drinks prices [S] bad [SSEP] [A] sake [C] drinks quality [S] bad', '[A] sake [S] bad [C] drinks prices [SSEP] [A] sake [S] bad [C] drinks quality', '[C] drinks prices [S] bad [A] sake [SSEP] [C] drinks quality [S] bad [A] sake', '[C] drinks prices [A] sake [S] bad [SSEP] [C] drinks quality [A] sake [S] bad', '[S] bad [C] drinks prices [A] sake [SSEP] [S] bad [C] drinks quality [A] sake']

task, data: tasd rest16
target: [('food quality', 'miso soup', 'great', 'null'), ('food quality', 'rolls', 'great', 'null')]
output: ['[A] null [S] great [C] food style_options']
sent: ['They', 'pay', 'such', 'detail', 'to', 'everything', 'from', 'miso', 'soup', 'to', 'complex', 'rolls', '.']
counter: {('service general', 'null', 'great', 'null'): 2, ('food style_options', 'null', 'great', 'null'): 3}
output quads: ['[A] null [S] great [C] food style_options']
multi_path: ['[A] it [C] service general [S] great', '[A] it [S] great [C] service general', '[C] food style_options [S] great [A] it', '[C] food style_options [A] it [S] great', '[S] great [C] food style_options [A] it']

task, data: tasd rest16
target: [('restaurant general', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] restaurant general', '[A] null [S] bad [C] restaurant prices']
sent: ['It', 'is', 'not', 'worth', 'going', 'at', 'all', 'and', 'spend', 'your', 'money', 'there', '!', '!', '!']
counter: {('restaurant general', 'null', 'bad', 'null'): 5, ('restaurant prices', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] restaurant general', '[A] null [S] bad [C] restaurant prices']
multi_path: ['[A] it [C] restaurant general [S] bad [SSEP] [A] it [C] restaurant prices [S] bad', '[A] it [S] bad [C] restaurant general [SSEP] [A] it [S] bad [C] restaurant prices', '[C] restaurant general [S] bad [A] it [SSEP] [C] restaurant prices [S] bad [A] it', '[C] restaurant general [A] it [S] bad [SSEP] [C] restaurant prices [A] it [S] bad', '[S] bad [C] restaurant general [A] it [SSEP] [S] bad [C] restaurant prices [A] it']

task, data: tasd rest16
target: [('location general', 'null', 'great', 'null'), ('restaurant prices', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] restaurant prices']
sent: ['–', 'Pretty', 'cheap', 'for', 'sit', 'down', 'Mexican', 'AND', 'downtown', '.']
counter: {('restaurant prices', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] restaurant prices']
multi_path: ['[A] it [C] restaurant prices [S] great', '[A] it [S] great [C] restaurant prices', '[C] restaurant prices [S] great [A] it', '[C] restaurant prices [A] it [S] great', '[S] great [C] restaurant prices [A] it']

task, data: tasd rest16
target: [('restaurant general', 'null', 'great', 'null')]
output: ['[A] area [S] great [C] restaurant general']
sent: ['If', 'you', "'re", 'in', 'the', 'area', 'you', 'shouldn', "'t", 'be', 'disappointed', '.']
counter: {('restaurant general', 'area', 'great', 'null'): 5}
output quads: ['[A] area [S] great [C] restaurant general']
multi_path: ['[A] area [C] restaurant general [S] great', '[A] area [S] great [C] restaurant general', '[C] restaurant general [S] great [A] area', '[C] restaurant general [A] area [S] great', '[S] great [C] restaurant general [A] area']

task, data: tasd rest16
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] service general', '[A] water refills [S] bad [C] drinks prices']
sent: ['Took', 'forever', 'to', 'get', 'our', 'order', 'taken', ',', 'water', 'refills', 'were', 'too', 'much', 'to', 'ask', 'for', 'and', 'the', 'only', 'time', 'she', 'was', 'fast', 'was', 'when', 'we', 'asked', 'for', 'our', 'bill', 'when', 'we', 'could', 'get', 'her', 'attention', '.']
counter: {('service general', 'null', 'bad', 'null'): 8, ('drinks prices', 'water refills', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] service general', '[A] water refills [S] bad [C] drinks prices']
multi_path: ['[A] it [C] service general [S] bad [SSEP] [A] water refills [C] drinks prices [S] bad [SSEP] [A] it [C] service general [S] bad', '[A] it [S] bad [C] service general [SSEP] [A] water refills [S] bad [C] drinks prices [SSEP] [A] it [S] bad [C] service general', '[C] service general [S] bad [A] it [SSEP] [C] drinks prices [S] bad [A] water refills', '[C] service general [A] it [S] bad [SSEP] [C] drinks prices [A] water refills [S] bad [SSEP] [C] service general [A] it [S] bad', '[S] bad [C] service general [A] it [SSEP] [S] bad [C] drinks prices [A] water refills']

task, data: tasd rest16
target: [('food quality', 'null', 'great', 'null')]
output: ['[A] cheese [S] great [C] food quality', '[A] null [S] great [C] food style_options', '[A] sauce [S] great [C] food quality']
sent: ['BUt', 'once', 'done', ',', 'it', "'s", 'not', 'too', 'much', 'dough', ',', 'not', 'too', 'much', 'cheese', ',', 'not', 'too', 'much', 'sauce', '.']
counter: {('food style_options', 'null', 'great', 'null'): 5, ('food quality', 'cheese', 'great', 'null'): 3, ('food quality', 'sauce', 'great', 'null'): 3}
output quads: ['[A] null [S] great [C] food style_options', '[A] cheese [S] great [C] food quality', '[A] sauce [S] great [C] food quality']
multi_path: ['[A] it [C] food style_options [S] great', '[A] it [S] great [C] food style_options [SSEP] [A] cheese [S] great [C] food quality [SSEP] [A] sauce [S] great [C] food quality', '[C] food style_options [S] great [A] it [SSEP] [C] food quality [S] great [A] cheese [SSEP] [C] food quality [S] great [A] sauce', '[C] food style_options [A] it [S] great', '[S] great [C] food style_options [A] it [SSEP] [S] great [C] food quality [A] cheese [SSEP] [S] great [C] food quality [A] sauce']

task, data: tasd rest16
target: [('food quality', 'null', 'great', 'null'), ('food style_options', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] food quality']
sent: ['Everything', 'you', 'want', 'and', 'more', ',', 'very', 'fresh', '.']
counter: {('food quality', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] food quality']
multi_path: ['[A] it [C] food quality [S] great', '[A] it [S] great [C] food quality', '[C] food quality [S] great [A] it', '[C] food quality [A] it [S] great', '[S] great [C] food quality [A] it']

task, data: tasd rest16
target: [('restaurant general', 'null', 'great', 'null'), ('service general', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] service general']
sent: ['Its', 'worth', 'the', 'wait', ',', 'especially', 'since', 'they', "'ll", 'give', 'you', 'a', 'call', 'when', 'the', 'table', 'is', 'ready', '.']
counter: {('service general', 'null', 'great', 'null'): 9}
output quads: ['[A] null [S] great [C] service general']
multi_path: ['[A] it [C] service general [S] great [SSEP] [A] it [C] service general [S] great', '[A] it [S] great [C] service general', '[C] service general [S] great [A] it [SSEP] [C] service general [S] great [A] it', '[C] service general [A] it [S] great [SSEP] [C] service general [A] it [S] great', '[S] great [C] service general [A] it [SSEP] [S] great [C] service general [A] it']

task, data: tasd rest16
target: [('ambience general', 'deck', 'great', 'null'), ('service general', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] service general']
sent: ['–', '.', '.', '.and', 'the', 'best', 'summertime', 'deck', 'experience--they', 'will', 'even', 'bring', 'you', 'a', 'blanket', 'if', 'you', 'get', 'cold', 'in', 'the', 'Seattle', 'evening', 'weather', '.']
counter: {('service general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] service general']
multi_path: ['[A] it [C] service general [S] great', '[A] it [S] great [C] service general', '[C] service general [S] great [A] it', '[C] service general [A] it [S] great', '[S] great [C] service general [A] it']

task, data: tasd rest16
target: [('restaurant general', 'place', 'great', 'null')]
output: ['[A] place [S] great [C] restaurant miscellaneous']
sent: ['A', 'perfect', 'place', 'to', 'take', 'out', 'of', 'town', 'guests', 'any', 'time', 'of', 'the', 'year', '.']
counter: {('restaurant miscellaneous', 'place', 'great', 'null'): 5}
output quads: ['[A] place [S] great [C] restaurant miscellaneous']
multi_path: ['[A] place [C] restaurant miscellaneous [S] great', '[A] place [S] great [C] restaurant miscellaneous', '[C] restaurant miscellaneous [S] great [A] place', '[C] restaurant miscellaneous [A] place [S] great', '[S] great [C] restaurant miscellaneous [A] place']

task, data: tasd rest16
target: [('ambience general', 'music', 'great', 'null'), ('restaurant general', 'null', 'great', 'null'), ('service general', 'staff', 'great', 'null')]
output: ['[A] music [S] great [C] ambience general', '[A] null [S] great [C] ambience general', '[A] staff [S] great [C] service general']
sent: ['Endless', 'fun', ',', 'awesome', 'music', ',', 'great', 'staff', '!', '!', '!']
counter: {('ambience general', 'music', 'great', 'null'): 5, ('service general', 'staff', 'great', 'null'): 5, ('ambience general', 'null', 'great', 'null'): 3}
output quads: ['[A] music [S] great [C] ambience general', '[A] staff [S] great [C] service general', '[A] null [S] great [C] ambience general']
multi_path: ['[A] music [C] ambience general [S] great [SSEP] [A] staff [C] service general [S] great', '[A] music [S] great [C] ambience general [SSEP] [A] staff [S] great [C] service general', '[C] ambience general [S] great [A] it [SSEP] [C] ambience general [S] great [A] music [SSEP] [C] service general [S] great [A] staff', '[C] ambience general [A] it [S] great [SSEP] [C] ambience general [A] music [S] great [SSEP] [C] service general [A] staff [S] great', '[S] great [C] ambience general [A] it [SSEP] [S] great [C] ambience general [A] music [SSEP] [S] great [C] service general [A] staff']

task, data: tasd rest16
target: [('service general', 'bartender', 'great', 'null')]
output: ['[A] bartender [S] bad [C] service general']
sent: ['Every', 'time', '"0-sixtynine', '"', 'is', 'called', 'the', 'bartender', 'buys', 'everyone', 'drinks', '!']
counter: {('service general', 'bartender', 'bad', 'null'): 5}
output quads: ['[A] bartender [S] bad [C] service general']
multi_path: ['[A] bartender [C] service general [S] bad', '[A] bartender [S] bad [C] service general', '[C] service general [S] bad [A] bartender', '[C] service general [A] bartender [S] bad', '[S] bad [C] service general [A] bartender']

task, data: tasd rest16
target: [('drinks style_options', 'draft and bottle selection', 'great', 'null'), ('food quality', 'pizza', 'great', 'null')]
output: ['[A] bottle selection [S] great [C] drinks style_options', '[A] draft [S] great [C] drinks style_options', '[A] pizza [S] great [C] food quality']
sent: ['Great', 'draft', 'and', 'bottle', 'selection', 'and', 'the', 'pizza', 'rocks', '.']
counter: {('drinks style_options', 'draft', 'great', 'null'): 5, ('drinks style_options', 'bottle selection', 'great', 'null'): 5, ('food quality', 'pizza', 'great', 'null'): 5}
output quads: ['[A] draft [S] great [C] drinks style_options', '[A] bottle selection [S] great [C] drinks style_options', '[A] pizza [S] great [C] food quality']
multi_path: ['[A] draft [C] drinks style_options [S] great [SSEP] [A] bottle selection [C] drinks style_options [S] great [SSEP] [A] pizza [C] food quality [S] great', '[A] draft [S] great [C] drinks style_options [SSEP] [A] bottle selection [S] great [C] drinks style_options [SSEP] [A] pizza [S] great [C] food quality', '[C] drinks style_options [S] great [A] draft [SSEP] [C] drinks style_options [S] great [A] bottle selection [SSEP] [C] food quality [S] great [A] pizza', '[C] drinks style_options [A] draft [S] great [SSEP] [C] drinks style_options [A] bottle selection [S] great [SSEP] [C] food quality [A] pizza [S] great', '[S] great [C] drinks style_options [A] draft [SSEP] [S] great [C] drinks style_options [A] bottle selection [SSEP] [S] great [C] food quality [A] pizza']

task, data: tasd rest16
target: [('ambience general', "jukebox's", 'great', 'null')]
output: ['[A] jukebox [S] great [C] drinks quality']
sent: ['Definitely', 'has', 'one', 'of', 'the', 'best', 'jukebox', "'s", 'i', "'ve", 'seen', 'in', 'a', 'long', 'long', 'time', '.']
counter: {('drinks quality', 'jukebox', 'great', 'null'): 5}
output quads: ['[A] jukebox [S] great [C] drinks quality']
multi_path: ['[A] jukebox [C] drinks quality [S] great', '[A] jukebox [S] great [C] drinks quality', '[C] drinks quality [S] great [A] jukebox', '[C] drinks quality [A] jukebox [S] great', '[S] great [C] drinks quality [A] jukebox']

task, data: tasd rest16
target: [('restaurant general', 'null', 'great', 'null')]
output: ['[A] home [S] great [C] location general']
sent: ['I', 'FOUND', 'A', 'NEW', 'HOME', 'ON', 'SECOND', 'AVENUE', '!', '!', '!', '!', '!', '!', '!', '!', '!', '!', '!', '!']
counter: {('location general', 'home', 'great', 'null'): 5}
output quads: ['[A] home [S] great [C] location general']
multi_path: ['[A] home [C] location general [S] great', '[A] home [S] great [C] location general', '[C] location general [S] great [A] home', '[C] location general [A] home [S] great', '[S] great [C] location general [A] home']

task, data: tasd rest16
target: [('restaurant miscellaneous', 'balconey', 'great', 'null')]
output: ['[A] smoking balconey [S] great [C] ambience general']
sent: ['Not', 'alot', 'of', 'smoking', 'places', 'left', 'in', 'New', 'York', ',', 'but', 'I', 'have', 'found', 'my', 'favorite', 'smoking', 'balconey', 'in', 'the', 'city', '.']
counter: {('ambience general', 'smoking balconey', 'great', 'null'): 5}
output quads: ['[A] smoking balconey [S] great [C] ambience general']
multi_path: ['[A] smoking balconey [C] ambience general [S] great', '[A] smoking balconey [S] great [C] ambience general', '[C] ambience general [S] great [A] smoking balconey', '[C] ambience general [A] smoking balconey [S] great', '[S] great [C] ambience general [A] smoking balconey']

task, data: tasd rest16
target: [('restaurant general', 'null', 'great', 'null')]
output: ['[A] home [S] ok [C] restaurant general']
sent: ['I', 'found', 'a', 'new', 'home', 'and', 'just', 'moved', 'with', 'a', 'long', 'lease', '.']
counter: {('restaurant general', 'home', 'ok', 'null'): 3, ('restaurant general', 'home', 'great', 'null'): 1, ('restaurant general', 'null', 'ok', 'null'): 1}
output quads: ['[A] home [S] ok [C] restaurant general']
multi_path: ['[A] home [C] restaurant general [S] ok', '[A] home [S] great [C] restaurant general', '[C] restaurant general [S] ok [A] home', '[C] restaurant general [A] it [S] ok', '[S] ok [C] restaurant general [A] home']

task, data: tasd rest16
target: [('food style_options', 'fish', 'great', 'null')]
output: []
sent: ['They', 'have', 'a', 'wide', 'variety', 'of', 'fish', 'and', 'they', 'even', 'list', 'which', 'oceans', 'they', 'come', 'from', ';', 'Atlantic', 'or', 'Pacific', '.']
counter: {('food style_options', 'null', 'great', 'null'): 2, ('service general', 'null', 'great', 'null'): 1, ('food style_options', 'fish', 'great', 'null'): 2, ('food quality', 'null', 'great', 'null'): 1, ('food quality', 'oceans', 'great', 'null'): 1}
output quads: []
multi_path: ['[A] it [C] food style_options [S] great', '[A] it [S] great [C] service general', '[C] food style_options [S] great [A] it', '[C] food style_options [A] fish [S] great [SSEP] [C] food quality [A] it [S] great', '[S] great [C] food style_options [A] fish [SSEP] [S] great [C] food quality [A] oceans']

task, data: tasd rest16
target: [('ambience general', 'decor', 'ok', 'null')]
output: ['[A] decor [S] great [C] ambience general']
sent: ['The', 'decor', 'is', 'rustic', ',', 'traditional', 'Japanese', '.']
counter: {('ambience general', 'decor', 'great', 'null'): 5}
output quads: ['[A] decor [S] great [C] ambience general']
multi_path: ['[A] decor [C] ambience general [S] great', '[A] decor [S] great [C] ambience general', '[C] ambience general [S] great [A] decor', '[C] ambience general [A] decor [S] great', '[S] great [C] ambience general [A] decor']

task, data: tasd rest16
target: [('food style_options', 'menu', 'ok', 'null')]
output: ['[A] outside patio area [S] ok [C] food style_options']
sent: ['The', 'outside', 'patio', 'area', 'has', 'an', 'abbreviated', 'menu', '.']
counter: {('ambience general', 'outside patio area', 'ok', 'null'): 2, ('food style_options', 'outside patio area', 'ok', 'null'): 3}
output quads: ['[A] outside patio area [S] ok [C] food style_options']
multi_path: ['[A] outside patio area [C] ambience general [S] ok', '[A] outside patio area [S] ok [C] ambience general', '[C] food style_options [S] ok [A] outside patio area', '[C] food style_options [A] outside patio area [S] ok', '[S] ok [C] food style_options [A] outside patio area']

task, data: tasd rest16
target: [('food prices', 'food', 'bad', 'null'), ('food quality', 'food', 'bad', 'null')]
output: ['[A] food [S] ok [C] food prices', '[A] food [S] ok [C] food quality']
sent: ['My', 'g', '/f', 'and', 'I', 'both', 'agreed', 'the', 'food', 'was', 'very', 'mediocre', 'especially', 'considering', 'the', 'price', '.']
counter: {('food quality', 'food', 'ok', 'null'): 5, ('food prices', 'food', 'ok', 'null'): 4, ('food prices', 'food', 'bad', 'null'): 1}
output quads: ['[A] food [S] ok [C] food quality', '[A] food [S] ok [C] food prices']
multi_path: ['[A] food [C] food quality [S] ok [SSEP] [A] food [C] food prices [S] ok', '[A] food [S] ok [C] food quality [SSEP] [A] food [S] ok [C] food prices', '[C] food quality [S] ok [A] food [SSEP] [C] food prices [S] ok [A] food', '[C] food quality [A] food [S] ok [SSEP] [C] food prices [A] food [S] ok', '[S] ok [C] food quality [A] food [SSEP] [S] bad [C] food prices [A] food']

task, data: tasd rest16
target: [('food quality', 'food', 'bad', 'null'), ('restaurant general', 'place', 'bad', 'null')]
output: ['[A] food [S] ok [C] food quality']
sent: ['We', 'are', 'locals', ',', 'and', 'get', 'the', 'feeling', 'the', 'only', 'way', 'this', 'place', 'survives', 'with', 'such', 'average', 'food', 'is', 'because', 'most', 'customers', 'are', 'probably', 'one-time', 'customer', 'tourists', '.']
counter: {('food quality', 'food', 'ok', 'null'): 5}
output quads: ['[A] food [S] ok [C] food quality']
multi_path: ['[A] food [C] food quality [S] ok', '[A] food [S] ok [C] food quality', '[C] food quality [S] ok [A] food', '[C] food quality [A] food [S] ok', '[S] ok [C] food quality [A] food']

task, data: tasd rest16
target: [('drinks quality', 'drinks', 'great', 'null'), ('restaurant general', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] restaurant general']
sent: ['Unless', 'you', 'are', 'just', 'stopping', 'in', 'for', 'a', 'few', 'drinks', 'I', 'wouldn', "'t", 'recommend', 'going', 'here', '.']
counter: {('restaurant general', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] restaurant general']
multi_path: ['[A] it [C] restaurant general [S] bad', '[A] it [S] bad [C] restaurant general', '[C] restaurant general [S] bad [A] it', '[C] restaurant general [A] it [S] bad', '[S] bad [C] restaurant general [A] it']

task, data: tasd rest16
target: [('restaurant general', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] food quality']
sent: ['You', 'are', 'likely', 'to', 'be', 'disappointed', '.']
counter: {('food quality', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] food quality']
multi_path: ['[A] it [C] food quality [S] bad', '[A] it [S] bad [C] food quality', '[C] food quality [S] bad [A] it', '[C] food quality [A] it [S] bad', '[S] bad [C] food quality [A] it']

task, data: tasd rest16
target: [('food quality', 'filet mignon on top of spinach and mashed potatoes', 'great', 'null'), ('food quality', 'goat cheese gnocchi', 'great', 'null'), ('food quality', 'pumpkin ravioli', 'great', 'null'), ('food style_options', 'goat cheese gnocchi', 'great', 'null')]
output: ['[A] filet mignon on top of spinach and mashed potatoes [S] great [C] food quality', '[A] goat cheese gnocchi [S] great [C] food style_options', '[A] pumpkin ravioli [S] great [C] food quality']
sent: ['–', 'I', 'loved', 'the', 'pumpkin', 'ravioli', 'and', 'the', 'goat', 'cheese', 'gnocchi', '(5', 'big', 'ones', 'to', 'a', 'plate', 'instead', 'of', '20', 'or', 'so', 'little', 'gnocchis', ')', 'and', 'my', 'sister', 'loved', 'her', 'filet', 'mignon', 'on', 'top', 'of', 'spinach', 'and', 'mashed', 'potatoes', '.']
counter: {('food quality', 'pumpkin ravioli', 'great', 'null'): 5, ('food style_options', 'goat cheese gnocchi', 'great', 'null'): 5, ('food quality', 'filet mignon on top of spinach and mashed potatoes', 'great', 'null'): 5}
output quads: ['[A] pumpkin ravioli [S] great [C] food quality', '[A] goat cheese gnocchi [S] great [C] food style_options', '[A] filet mignon on top of spinach and mashed potatoes [S] great [C] food quality']
multi_path: ['[A] pumpkin ravioli [C] food quality [S] great [SSEP] [A] goat cheese gnocchi [C] food style_options [S] great [SSEP] [A] filet mignon on top of spinach and mashed potatoes [C] food quality [S] great', '[A] pumpkin ravioli [S] great [C] food quality [SSEP] [A] goat cheese gnocchi [S] great [C] food style_options [SSEP] [A] filet mignon on top of spinach and mashed potatoes [S] great [C] food quality', '[C] food quality [S] great [A] pumpkin ravioli [SSEP] [C] food style_options [S] great [A] goat cheese gnocchi [SSEP] [C] food quality [S] great [A] filet mignon on top of spinach and mashed potatoes', '[C] food quality [A] pumpkin ravioli [S] great [SSEP] [C] food style_options [A] goat cheese gnocchi [S] great [SSEP] [C] food quality [A] filet mignon on top of spinach and mashed potatoes [S] great', '[S] great [C] food quality [A] pumpkin ravioli [SSEP] [S] great [C] food style_options [A] goat cheese gnocchi [SSEP] [S] great [C] food quality [A] filet mignon on top of spinach and mashed potatoes']

task, data: tasd rest16
target: [('restaurant general', 'null', 'great', 'null'), ('restaurant prices', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] restaurant prices']
sent: ['I', 'recommend', 'it', 'for', 'a', 'night', 'when', 'you', 'want', 'to', 'splurge', '!', '(it', 'was', 'a', 'bit', 'expensive', ')']
counter: {('restaurant prices', 'null', 'bad', 'null'): 3, ('restaurant prices', 'null', 'great', 'null'): 2}
output quads: ['[A] null [S] bad [C] restaurant prices']
multi_path: ['[A] it [C] restaurant prices [S] bad', '[A] it [S] great [C] restaurant prices', '[C] restaurant prices [S] bad [A] it', '[C] restaurant prices [A] it [S] bad', '[S] great [C] restaurant prices [A] it']

task, data: tasd rest16
target: [('food quality', 'food', 'great', 'null'), ('location general', 'location', 'ok', 'null')]
output: ['[A] food [S] great [C] food quality']
sent: ['It', "'s", 'located', 'in', 'a', 'strip', 'mall', 'near', 'the', 'Beverly', 'Center', ',', 'not', 'the', 'greatest', 'location', ',', 'but', 'the', 'food', 'keeps', 'me', 'coming', 'back', 'for', 'more', '.']
counter: {('food quality', 'food', 'great', 'null'): 5, ('location general', 'null', 'bad', 'null'): 2, ('restaurant location general', 'null', 'ok', 'null'): 2, ('location general', 'location', 'ok', 'null'): 1}
output quads: ['[A] food [S] great [C] food quality']
multi_path: ['[A] food [C] food quality [S] great [SSEP] [A] it [C] location general [S] bad', '[A] food [S] great [C] food quality [SSEP] [A] it [S] bad [C] location general', '[C] restaurant location general [S] ok [A] it [SSEP] [C] food quality [S] great [A] food', '[C] restaurant location general [A] it [S] ok [SSEP] [C] food quality [A] food [S] great', '[S] ok [C] location general [A] location [SSEP] [S] great [C] food quality [A] food']

task, data: tasd rest16
target: [('restaurant general', 'null', 'great', 'null')]
output: ['[A] jem [S] great [C] restaurant general']
sent: ['hidden', 'little', 'jem']
counter: {('restaurant general', 'jem', 'great', 'null'): 5}
output quads: ['[A] jem [S] great [C] restaurant general']
multi_path: ['[A] jem [C] restaurant general [S] great', '[A] jem [S] great [C] restaurant general', '[C] restaurant general [S] great [A] jem', '[C] restaurant general [A] jem [S] great', '[S] great [C] restaurant general [A] jem']

task, data: tasd rest16
target: [('location general', 'null', 'ok', 'null')]
output: ['[A] beverly center [S] great [C] location general']
sent: ['–', 'tucked', 'away', 'over', 'by', 'the', 'Beverly', 'Center', '.']
counter: {('location general', 'beverly center', 'great', 'null'): 5}
output quads: ['[A] beverly center [S] great [C] location general']
multi_path: ['[A] beverly center [C] location general [S] great', '[A] beverly center [S] great [C] location general', '[C] location general [S] great [A] beverly center', '[C] location general [A] beverly center [S] great', '[S] great [C] location general [A] beverly center']

task, data: tasd rest16
target: [('restaurant miscellaneous', 'null', 'great', 'null'), ('service general', 'service', 'great', 'null')]
output: ['[A] service [S] great [C] service general']
sent: ['Never', 'too', 'crowded', 'and', 'always', 'great', 'service', '.']
counter: {('service general', 'service', 'great', 'null'): 5}
output quads: ['[A] service [S] great [C] service general']
multi_path: ['[A] service [C] service general [S] great', '[A] service [S] great [C] service general', '[C] service general [S] great [A] service', '[C] service general [A] service [S] great', '[S] great [C] service general [A] service']

task, data: tasd rest16
target: [('service general', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] food style_options']
sent: ['And', 'they', 'packaged', 'everything', 'nicely', 'so', 'it', 'didn', "'t", 'spill', '.']
counter: {('food style_options', 'null', 'great', 'null'): 4, ('service general', 'null', 'great', 'null'): 1}
output quads: ['[A] null [S] great [C] food style_options']
multi_path: ['[A] it [C] food style_options [S] great', '[A] it [S] great [C] service general', '[C] food style_options [S] great [A] it', '[C] food style_options [A] it [S] great', '[S] great [C] food style_options [A] it']

task, data: tasd rest16
target: [('food quality', 'colorado', 'great', 'null'), ('food quality', 'fajita salad', 'great', 'null'), ('food quality', 'fajitas', 'great', 'null'), ('food quality', 'null', 'great', 'null'), ('restaurant general', 'place', 'great', 'null')]
output: ['[A] colorado [S] great [C] food quality', '[A] fajita salad [S] great [C] food quality', '[A] fajitas [S] great [C] food quality']
sent: ['–', 'I', 'don', "'t", 'understand', 'how', 'I', 'was', 'a', 'stranger', 'to', 'this', 'place', 'for', 'so', 'long', '.', '.', '.', 'the', 'fajita', 'salad', ',', 'the', 'colorado', ',', 'the', 'fajitas', '-', 'EVERYTHING', 'is', 'delicious', '.']
counter: {('food quality', 'fajita salad', 'great', 'null'): 5, ('food quality', 'colorado', 'great', 'null'): 5, ('food quality', 'fajitas', 'great', 'null'): 5}
output quads: ['[A] fajita salad [S] great [C] food quality', '[A] colorado [S] great [C] food quality', '[A] fajitas [S] great [C] food quality']
multi_path: ['[A] fajita salad [C] food quality [S] great [SSEP] [A] colorado [C] food quality [S] great [SSEP] [A] fajitas [C] food quality [S] great', '[A] fajita salad [S] great [C] food quality [SSEP] [A] colorado [S] great [C] food quality [SSEP] [A] fajitas [S] great [C] food quality', '[C] food quality [S] great [A] fajita salad [SSEP] [C] food quality [S] great [A] colorado [SSEP] [C] food quality [S] great [A] fajitas', '[C] food quality [A] fajita salad [S] great [SSEP] [C] food quality [A] colorado [S] great [SSEP] [C] food quality [A] fajitas [S] great', '[S] great [C] food quality [A] fajita salad [SSEP] [S] great [C] food quality [A] colorado [SSEP] [S] great [C] food quality [A] fajitas']

task, data: tasd rest16
target: [('ambience general', 'decor', 'great', 'null'), ('restaurant general', 'restaurant', 'great', 'null'), ('service general', 'customer service', 'great', 'null'), ('service general', 'manager', 'great', 'null')]
output: ['[A] customer service [S] great [C] service general', '[A] decor [S] great [C] ambience general', '[A] manager [S] great [C] service general']
sent: ['best', 'restaurant', 'in', 'the', 'world', ',', 'great', 'decor', ',', 'great', 'customer', 'service', ',', 'friendly', 'manager']
counter: {('ambience general', 'decor', 'great', 'null'): 5, ('service general', 'customer service', 'great', 'null'): 5, ('service general', 'manager', 'great', 'null'): 5}
output quads: ['[A] decor [S] great [C] ambience general', '[A] customer service [S] great [C] service general', '[A] manager [S] great [C] service general']
multi_path: ['[A] decor [C] ambience general [S] great [SSEP] [A] customer service [C] service general [S] great [SSEP] [A] manager [C] service general [S] great', '[A] decor [S] great [C] ambience general [SSEP] [A] customer service [S] great [C] service general [SSEP] [A] manager [S] great [C] service general', '[C] ambience general [S] great [A] decor [SSEP] [C] service general [S] great [A] customer service [SSEP] [C] service general [S] great [A] manager', '[C] ambience general [A] decor [S] great [SSEP] [C] service general [A] customer service [S] great [SSEP] [C] service general [A] manager [S] great', '[S] great [C] ambience general [A] decor [SSEP] [S] great [C] service general [A] customer service [SSEP] [S] great [C] service general [A] manager']

task, data: tasd rest16
target: [('restaurant general', 'mexican spot', 'great', 'null')]
output: ['[A] spot [S] great [C] restaurant general']
sent: ['–', 'Great', 'financial', 'district', 'mexican', 'spot', '.']
counter: {('restaurant general', 'spot', 'great', 'null'): 5}
output quads: ['[A] spot [S] great [C] restaurant general']
multi_path: ['[A] spot [C] restaurant general [S] great', '[A] spot [S] great [C] restaurant general', '[C] restaurant general [S] great [A] spot', '[C] restaurant general [A] spot [S] great', '[S] great [C] restaurant general [A] spot']

task, data: tasd rest16
target: [('service general', 'null', 'great', 'null'), ('service general', 'service', 'great', 'null')]
output: ['[A] null [S] bad [C] service general', '[A] null [S] great [C] service general']
sent: ['Always', 'busy', ',', 'but', 'they', 'are', 'good', 'at', 'seating', 'you', 'promptly', 'and', 'have', 'quick', 'service', '.']
counter: {('service general', 'null', 'great', 'null'): 5, ('service general', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] great [C] service general', '[A] null [S] bad [C] service general']
multi_path: ['[A] it [C] service general [S] great [SSEP] [A] it [C] service general [S] bad', '[A] it [S] great [C] service general [SSEP] [A] it [S] bad [C] service general', '[C] service general [S] great [A] it [SSEP] [C] service general [S] bad [A] it', '[C] service general [A] it [S] great [SSEP] [C] service general [A] it [S] bad', '[S] great [C] service general [A] it [SSEP] [S] bad [C] service general [A] it']

task, data: tasd rest16
target: [('food quality', 'burritos', 'great', 'null'), ('food quality', 'enchiladas', 'great', 'null'), ('food quality', 'null', 'great', 'null'), ('food quality', 'taco salads', 'great', 'null'), ('restaurant general', 'place', 'great', 'null')]
output: ['[A] burritos [S] great [C] food quality', '[A] enchiladas [S] great [C] food quality', '[A] taco salads [S] great [C] food quality']
sent: ['Everything', 'I', "'ve", 'had', 'here', 'is', 'good', ',', 'taco', 'salads', ',', 'burritos', ',', 'enchiladas', 'i', 'love', 'this', 'place', '.']
counter: {('food quality', 'taco salads', 'great', 'null'): 5, ('food quality', 'burritos', 'great', 'null'): 5, ('food quality', 'enchiladas', 'great', 'null'): 5}
output quads: ['[A] taco salads [S] great [C] food quality', '[A] burritos [S] great [C] food quality', '[A] enchiladas [S] great [C] food quality']
multi_path: ['[A] taco salads [C] food quality [S] great [SSEP] [A] burritos [C] food quality [S] great [SSEP] [A] enchiladas [C] food quality [S] great', '[A] taco salads [S] great [C] food quality [SSEP] [A] burritos [S] great [C] food quality [SSEP] [A] enchiladas [S] great [C] food quality', '[C] food quality [S] great [A] taco salads [SSEP] [C] food quality [S] great [A] burritos [SSEP] [C] food quality [S] great [A] enchiladas', '[C] food quality [A] taco salads [S] great [SSEP] [C] food quality [A] burritos [S] great [SSEP] [C] food quality [A] enchiladas [S] great', '[S] great [C] food quality [A] taco salads [SSEP] [S] great [C] food quality [A] burritos [SSEP] [S] great [C] food quality [A] enchiladas']

task, data: tasd rest16
target: [('service general', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] restaurant miscellaneous']
sent: ['You', 'can', 'order', 'to', 'go', 'if', 'you', 'have', 'to', 'get', 'back', 'to', 'the', 'office', 'too', '!']
counter: {('restaurant miscellaneous', 'null', 'great', 'null'): 3, ('restaurant general', 'null', 'great', 'null'): 2}
output quads: ['[A] null [S] great [C] restaurant miscellaneous']
multi_path: ['[A] it [C] restaurant miscellaneous [S] great', '[A] it [S] great [C] restaurant miscellaneous', '[C] restaurant general [S] great [A] it', '[C] restaurant general [A] it [S] great', '[S] great [C] restaurant miscellaneous [A] it']

task, data: tasd rest16
target: [('restaurant general', 'open sesame', 'great', 'null')]
output: ['[A] sesame [S] great [C] food quality']
sent: ['–', 'I', "'ve", 'been', 'to', 'Open', 'Sesame', 'only', 'once', ',', 'but', 'I', "'m", 'still', 'reeling', 'from', 'the', 'experience', '!', '!']
counter: {('food quality', 'sesame', 'great', 'null'): 5}
output quads: ['[A] sesame [S] great [C] food quality']
multi_path: ['[A] sesame [C] food quality [S] great', '[A] sesame [S] great [C] food quality', '[C] food quality [S] great [A] sesame', '[C] food quality [A] sesame [S] great', '[S] great [C] food quality [A] sesame']

task, data: tasd rest16
target: [('food quality', 'food', 'great', 'null'), ('food style_options', 'food', 'great', 'null')]
output: ['[A] food [S] great [C] food style_options']
sent: ['The', 'presentation', 'of', 'the', 'food', 'was', 'an', 'added', 'bonus', ',', 'it', 'looked', 'just', 'as', 'great', 'as', 'it', 'tasted', '!']
counter: {('food style_options', 'food', 'great', 'null'): 5}
output quads: ['[A] food [S] great [C] food style_options']
multi_path: ['[A] food [C] food style_options [S] great', '[A] food [S] great [C] food style_options', '[C] food style_options [S] great [A] food', '[C] food style_options [A] food [S] great', '[S] great [C] food style_options [A] food']

task, data: tasd rest16
target: [('restaurant general', 'open sesame', 'great', 'null')]
output: ['[A] sesame [S] great [C] food quality']
sent: ['GO', 'TO', 'OPEN', 'SESAME', '!', '!', '!']
counter: {('food quality', 'sesame', 'great', 'null'): 5}
output quads: ['[A] sesame [S] great [C] food quality']
multi_path: ['[A] sesame [C] food quality [S] great', '[A] sesame [S] great [C] food quality', '[C] food quality [S] great [A] sesame', '[C] food quality [A] sesame [S] great', '[S] great [C] food quality [A] sesame']

task, data: tasd rest16
target: [('food quality', 'food', 'great', 'null'), ('food quality', 'lunch', 'bad', 'null')]
output: ['[A] food [S] bad [C] food quality', '[A] food [S] great [C] food quality']
sent: ['–', 'The', 'food', 'is', 'here', 'is', 'incredible', ',', 'though', 'the', 'quality', 'is', 'inconsistent', 'during', 'lunch', '.']
counter: {('food quality', 'food', 'great', 'null'): 5, ('food quality', 'food', 'bad', 'null'): 5}
output quads: ['[A] food [S] great [C] food quality', '[A] food [S] bad [C] food quality']
multi_path: ['[A] food [C] food quality [S] great [SSEP] [A] food [C] food quality [S] bad', '[A] food [S] great [C] food quality [SSEP] [A] food [S] bad [C] food quality', '[C] food quality [S] great [A] food [SSEP] [C] food quality [S] bad [A] food', '[C] food quality [A] food [S] great [SSEP] [C] food quality [A] food [S] bad', '[S] great [C] food quality [A] food [SSEP] [S] bad [C] food quality [A] food']

task, data: tasd rest16
target: [('food prices', 'open sesame combo plate', 'great', 'null'), ('food style_options', 'open sesame combo plate', 'great', 'null')]
output: ['[A] food [S] great [C] food style_options', '[A] open sesame combo plate [S] great [C] food quality']
sent: ['The', 'open', 'sesame', 'combo', 'plate', 'is', 'a', 'bargain', 'for', 'the', 'heap', 'of', 'food', 'given', '.']
counter: {('food style_options', 'open sesame combo plate', 'great', 'null'): 2, ('food prices', 'food', 'great', 'null'): 2, ('food quality', 'open sesame combo plate', 'great', 'null'): 3, ('food style_options', 'food', 'great', 'null'): 3}
output quads: ['[A] open sesame combo plate [S] great [C] food quality', '[A] food [S] great [C] food style_options']
multi_path: ['[A] open sesame combo plate [C] food style_options [S] great [SSEP] [A] food [C] food prices [S] great', '[A] open sesame combo plate [S] great [C] food style_options [SSEP] [A] food [S] great [C] food prices', '[C] food quality [S] great [A] open sesame combo plate [SSEP] [C] food style_options [S] great [A] food', '[C] food quality [A] open sesame combo plate [S] great [SSEP] [C] food style_options [A] food [S] great', '[S] great [C] food quality [A] open sesame combo plate [SSEP] [S] great [C] food style_options [A] food']

task, data: tasd rest16
target: [('food quality', 'hummus', 'great', 'null'), ('food style_options', 'hummus', 'great', 'null')]
output: ['[A] fragrant olive oil [S] great [C] food quality', '[A] hummus [S] great [C] food quality']
sent: ['Also', ',', 'they', 'serve', 'THE', 'best', 'hummus', 'in', 'America', ',', 'with', 'a', 'drizzle', 'of', 'fragrant', 'olive', 'oil', '(which', ',', 'I', 'believe', 'is', 'the', 'traditional', 'way', ')', '!']
counter: {('food quality', 'hummus', 'great', 'null'): 5, ('food quality', 'fragrant olive oil', 'great', 'null'): 5}
output quads: ['[A] hummus [S] great [C] food quality', '[A] fragrant olive oil [S] great [C] food quality']
multi_path: ['[A] hummus [C] food quality [S] great [SSEP] [A] fragrant olive oil [C] food quality [S] great', '[A] hummus [S] great [C] food quality [SSEP] [A] fragrant olive oil [S] great [C] food quality', '[C] food quality [S] great [A] hummus [SSEP] [C] food quality [S] great [A] fragrant olive oil', '[C] food quality [A] hummus [S] great [SSEP] [C] food quality [A] fragrant olive oil [S] great', '[S] great [C] food quality [A] hummus [SSEP] [S] great [C] food quality [A] fragrant olive oil']

task, data: tasd rest16
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] side dishes [S] bad [C] food quality']
sent: ['There', 'have', 'been', 'several', 'occasions', 'when', 'we', "'ve", 'just', 'not', 'gotten', 'some', 'side', 'dishes', 'we', "'ve", 'ordered', '.']
counter: {('food quality', 'side dishes', 'bad', 'null'): 5}
output quads: ['[A] side dishes [S] bad [C] food quality']
multi_path: ['[A] side dishes [C] food quality [S] bad', '[A] side dishes [S] bad [C] food quality', '[C] food quality [S] bad [A] side dishes', '[C] food quality [A] side dishes [S] bad', '[S] bad [C] food quality [A] side dishes']

task, data: tasd rest16
target: [('drinks quality', 'beer', 'bad', 'null'), ('food quality', 'meal', 'bad', 'null')]
output: ['[A] beer [S] bad [C] drinks quality', '[A] meal [S] ok [C] food quality']
sent: ['I', 'swore', 'never', 'to', 'return', 'for', 'a', 'warm', 'beer', 'and', 'mediocre', 'meal', '.']
counter: {('drinks quality', 'beer', 'bad', 'null'): 5, ('food quality', 'meal', 'ok', 'null'): 4, ('food quality', 'meal', 'bad', 'null'): 1}
output quads: ['[A] beer [S] bad [C] drinks quality', '[A] meal [S] ok [C] food quality']
multi_path: ['[A] beer [C] drinks quality [S] bad [SSEP] [A] meal [C] food quality [S] ok', '[A] beer [S] bad [C] drinks quality [SSEP] [A] meal [S] ok [C] food quality', '[C] drinks quality [S] bad [A] beer [SSEP] [C] food quality [S] ok [A] meal', '[C] drinks quality [A] beer [S] bad [SSEP] [C] food quality [A] meal [S] ok', '[S] bad [C] drinks quality [A] beer [SSEP] [S] bad [C] food quality [A] meal']

task, data: tasd rest16
target: [('food quality', 'fried brie with fruit', 'great', 'null'), ('food quality', 'goat cheese pizza', 'great', 'null'), ('food quality', 'grilled asparagus', 'great', 'null'), ('food quality', 'shoe string onions', 'great', 'null')]
output: ['[A] fried brie with fruit [S] great [C] food quality', '[A] goat cheese pizza [S] great [C] food quality', '[A] grilled asparagus [S] great [C] food quality', '[A] shoe string onions [S] great [C] food quality', '[A] small plates [S] great [C] food style_options']
sent: ['We', 'ordered', 'a', 'selection', 'of', 'the', 'small', 'plates', ',', 'and', 'the', 'shoe', 'string', 'onions', ',', 'goat', 'cheese', 'pizza', ',', 'grilled', 'asparagus', 'and', 'fried', 'brie', 'with', 'fruit', 'were', 'all', 'very', 'good', '.']
counter: {('food style_options', 'small plates', 'great', 'null'): 3, ('food quality', 'shoe string onions', 'great', 'null'): 5, ('food quality', 'goat cheese pizza', 'great', 'null'): 5, ('food quality', 'grilled asparagus', 'great', 'null'): 5, ('food quality', 'fried brie with fruit', 'great', 'null'): 5, ('food quality', 'small plates', 'great', 'null'): 2}
output quads: ['[A] small plates [S] great [C] food style_options', '[A] shoe string onions [S] great [C] food quality', '[A] goat cheese pizza [S] great [C] food quality', '[A] grilled asparagus [S] great [C] food quality', '[A] fried brie with fruit [S] great [C] food quality']
multi_path: ['[A] small plates [C] food style_options [S] great [SSEP] [A] shoe string onions [C] food quality [S] great [SSEP] [A] goat cheese pizza [C] food quality [S] great [SSEP] [A] grilled asparagus [C] food quality [S] great [SSEP] [A] fried brie with fruit [C] food quality [S] great', '[A] small plates [S] great [C] food style_options [SSEP] [A] shoe string onions [S] great [C] food quality [SSEP] [A] goat cheese pizza [S] great [C] food quality [SSEP] [A] grilled asparagus [S] great [C] food quality [SSEP] [A] fried brie with fruit [S] great [C] food quality', '[C] food quality [S] great [A] small plates [SSEP] [C] food quality [S] great [A] shoe string onions [SSEP] [C] food quality [S] great [A] goat cheese pizza [SSEP] [C] food quality [S] great [A] grilled asparagus [SSEP] [C] food quality [S] great [A] fried brie with fruit', '[C] food quality [A] small plates [S] great [SSEP] [C] food quality [A] shoe string onions [S] great [SSEP] [C] food quality [A] goat cheese pizza [S] great [SSEP] [C] food quality [A] grilled asparagus [S] great [SSEP] [C] food quality [A] fried brie with fruit [S] great', '[S] great [C] food style_options [A] small plates [SSEP] [S] great [C] food quality [A] shoe string onions [SSEP] [S] great [C] food quality [A] goat cheese pizza [SSEP] [S] great [C] food quality [A] grilled asparagus [SSEP] [S] great [C] food quality [A] fried brie with fruit']

task, data: tasd rest16
target: [('drinks quality', 'beer', 'great', 'null'), ('restaurant general', 'null', 'great', 'null')]
output: ['[A] beer [S] great [C] drinks quality', '[A] plates [S] great [C] food style_options']
sent: ['We', 'have', 'since', 'returned', 'and', 'also', 'had', 'a', 'great', 'experience', ',', 'sampling', 'more', 'small', 'plates', 'and', 'a', 'variety', 'of', 'the', 'beer', '(', 'cold', 'and', 'good', ')', '.']
counter: {('food style_options', 'plates', 'great', 'null'): 5, ('drinks quality', 'beer', 'great', 'null'): 5}
output quads: ['[A] plates [S] great [C] food style_options', '[A] beer [S] great [C] drinks quality']
multi_path: ['[A] plates [C] food style_options [S] great [SSEP] [A] beer [C] drinks quality [S] great', '[A] plates [S] great [C] food style_options [SSEP] [A] beer [S] great [C] drinks quality', '[C] food style_options [S] great [A] plates [SSEP] [C] drinks quality [S] great [A] beer', '[C] food style_options [A] plates [S] great [SSEP] [C] drinks quality [A] beer [S] great', '[S] great [C] food style_options [A] plates [SSEP] [S] great [C] drinks quality [A] beer']

task, data: tasd rest16
target: [('service general', 'waiter', 'great', 'null')]
output: ['[A] service [S] bad [C] service general']
sent: ['We', 'did', 'have', 'the', 'same', 'waiter', 'the', 'second', 'time', ',', 'so', 'maybe', 'the', 'service', 'is', 'spotty', 'and', 'our', 'luck', 'is', 'good', '.']
counter: {('service general', 'waiter', 'bad', 'null'): 2, ('service general', 'service', 'great', 'null'): 2, ('service general', 'service', 'bad', 'null'): 3}
output quads: ['[A] service [S] bad [C] service general']
multi_path: ['[A] waiter [C] service general [S] bad [SSEP] [A] service [C] service general [S] great', '[A] waiter [S] bad [C] service general [SSEP] [A] service [S] great [C] service general', '[C] service general [S] bad [A] service', '[C] service general [A] service [S] bad', '[S] bad [C] service general [A] service']

task, data: tasd rest16
target: [('food prices', 'food', 'bad', 'null'), ('food quality', 'food', 'bad', 'null'), ('food style_options', 'potions', 'bad', 'null'), ('service general', 'service', 'bad', 'null')]
output: ['[A] food [S] bad [C] food prices', '[A] food [S] bad [C] food quality', '[A] service [S] bad [C] service general']
sent: ['The', 'food', 'is', 'not', 'what', 'it', 'once', 'was', '(potions', 'have', 'seriously', 'seen', 'downsizing', ')', 'prices', 'have', 'gone', 'up', ',', 'and', 'the', 'service', 'is', 'the', 'worst', 'I', 'have', 'experienced', 'anywhere', '(including', 'mainland', 'Europe', ')', '.']
counter: {('food quality', 'food', 'bad', 'null'): 5, ('food style_options', 'food', 'bad', 'null'): 2, ('service general', 'service', 'bad', 'null'): 5, ('food prices', 'food', 'bad', 'null'): 3}
output quads: ['[A] food [S] bad [C] food quality', '[A] service [S] bad [C] service general', '[A] food [S] bad [C] food prices']
multi_path: ['[A] food [C] food quality [S] bad [SSEP] [A] food [C] food style_options [S] bad [SSEP] [A] service [C] service general [S] bad', '[A] food [S] bad [C] food quality [SSEP] [A] food [S] bad [C] food style_options [SSEP] [A] service [S] bad [C] service general', '[C] food quality [S] bad [A] food [SSEP] [C] food prices [S] bad [A] food [SSEP] [C] service general [S] bad [A] service', '[C] food quality [A] food [S] bad [SSEP] [C] food prices [A] food [S] bad [SSEP] [C] service general [A] service [S] bad', '[S] bad [C] food quality [A] food [SSEP] [S] bad [C] food prices [A] food [SSEP] [S] bad [C] service general [A] service']

task, data: tasd rest16
target: [('service general', 'owners', 'bad', 'null')]
output: ['[A] owners [S] bad [C] restaurant general']
sent: ['What', 'may', 'be', 'interesting', 'to', 'most', 'is', 'the', 'worst', 'sevice', '/attitude', 'comes', 'from', 'the', 'owners', 'of', 'this', 'establishment', '.']
counter: {('restaurant general', 'owners', 'bad', 'null'): 5}
output quads: ['[A] owners [S] bad [C] restaurant general']
multi_path: ['[A] owners [C] restaurant general [S] bad', '[A] owners [S] bad [C] restaurant general', '[C] restaurant general [S] bad [A] owners', '[C] restaurant general [A] owners [S] bad', '[S] bad [C] restaurant general [A] owners']

task, data: tasd rest16
target: [('restaurant general', 'scooner or later', 'bad', 'null')]
output: ['[A] scooner [S] ok [C] restaurant general']
sent: ['Perhaps', 'now', ',', 'Scooner', 'or', 'Later', 'falls', 'into', 'the', '"Dive', '"', 'category', '.']
counter: {('restaurant general', 'scooner', 'ok', 'null'): 5}
output quads: ['[A] scooner [S] ok [C] restaurant general']
multi_path: ['[A] scooner [C] restaurant general [S] ok', '[A] scooner [S] ok [C] restaurant general', '[C] restaurant general [S] ok [A] scooner', '[C] restaurant general [A] scooner [S] ok', '[S] ok [C] restaurant general [A] scooner']

task, data: tasd rest16
target: [('restaurant general', 'scooner or later', 'bad', 'null')]
output: ['[A] scooner [S] bad [C] restaurant general']
sent: ['I', 'hope', 'one', 'day', 'Scooner', 'or', 'Later', 'returns', 'to', 'what', 'it', 'once', 'was', '.']
counter: {('restaurant general', 'scooner', 'bad', 'null'): 5}
output quads: ['[A] scooner [S] bad [C] restaurant general']
multi_path: ['[A] scooner [C] restaurant general [S] bad', '[A] scooner [S] bad [C] restaurant general', '[C] restaurant general [S] bad [A] scooner', '[C] restaurant general [A] scooner [S] bad', '[S] bad [C] restaurant general [A] scooner']

task, data: tasd rest16
target: [('food quality', 'pizza menu', 'great', 'null'), ('food style_options', 'pizza menu', 'great', 'null')]
output: ['[A] pizza menu [S] great [C] food style_options']
sent: ['–', 'Mioposto', 'has', 'a', 'very', 'creative', '&', 'delicious', 'pizza', 'menu', '.']
counter: {('food style_options', 'pizza menu', 'great', 'null'): 5}
output quads: ['[A] pizza menu [S] great [C] food style_options']
multi_path: ['[A] pizza menu [C] food style_options [S] great', '[A] pizza menu [S] great [C] food style_options', '[C] food style_options [S] great [A] pizza menu', '[C] food style_options [A] pizza menu [S] great', '[S] great [C] food style_options [A] pizza menu']

task, data: tasd rest16
target: [('service general', 'servers behind the counter', 'great', 'null')]
output: ['[A] servers [S] great [C] service general']
sent: ['The', 'servers', 'behind', 'the', 'counter', 'are', 'always', 'friendly', 'and', 'helpful', '.']
counter: {('service general', 'servers', 'great', 'null'): 5}
output quads: ['[A] servers [S] great [C] service general']
multi_path: ['[A] servers [C] service general [S] great', '[A] servers [S] great [C] service general', '[C] service general [S] great [A] servers', '[C] service general [A] servers [S] great', '[S] great [C] service general [A] servers']

task, data: tasd rest16
target: [('food quality', 'food', 'great', 'null'), ('restaurant miscellaneous', 'place', 'great', 'null')]
output: ['[A] place [S] great [C] restaurant miscellaneous']
sent: ['It', "'s", 'a', 'great', 'place', 'to', 'enjoy', 'food', 'and', 'meet', 'friends', '.']
counter: {('restaurant miscellaneous', 'place', 'great', 'null'): 5}
output quads: ['[A] place [S] great [C] restaurant miscellaneous']
multi_path: ['[A] place [C] restaurant miscellaneous [S] great', '[A] place [S] great [C] restaurant miscellaneous', '[C] restaurant miscellaneous [S] great [A] place', '[C] restaurant miscellaneous [A] place [S] great', '[S] great [C] restaurant miscellaneous [A] place']

task, data: tasd rest16
target: [('restaurant general', "ray's", 'great', 'null')]
output: ["[A] seattle ray's [S] great [C] restaurant general"]
sent: ['–', 'After', '12', 'years', 'in', 'Seattle', 'Ray', "'s", 'rates', 'as', 'the', 'place', 'we', 'always', 'go', 'back', 'to', '.']
counter: {('restaurant general', "seattle ray's", 'great', 'null'): 5}
output quads: ["[A] seattle ray's [S] great [C] restaurant general"]
multi_path: ["[A] seattle ray's [C] restaurant general [S] great", "[A] seattle ray's [S] great [C] restaurant general", "[C] restaurant general [S] great [A] seattle ray's", "[C] restaurant general [A] seattle ray's [S] great", "[S] great [C] restaurant general [A] seattle ray's"]

task, data: tasd rest16
target: [('food quality', 'null', 'great', 'null'), ('food style_options', 'null', 'ok', 'null')]
output: ['[A] null [S] great [C] food quality']
sent: ['It', 'was', 'so', 'much', 'though', 'that', 'I', 'could', 'barely', 'finish', 'but', 'I', 'did', ',', 'since', 'it', 'was', 'delicious', '.']
counter: {('food quality', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] food quality']
multi_path: ['[A] it [C] food quality [S] great', '[A] it [S] great [C] food quality', '[C] food quality [S] great [A] it', '[C] food quality [A] it [S] great', '[S] great [C] food quality [A] it']

task, data: tasd rest16
target: [('restaurant general', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] food quality']
sent: ['WOW', '!', '!', '!', '!', '!', '!', '!', '!']
counter: {('food quality', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] food quality']
multi_path: ['[A] it [C] food quality [S] great', '[A] it [S] great [C] food quality', '[C] food quality [S] great [A] it', '[C] food quality [A] it [S] great', '[S] great [C] food quality [A] it']

task, data: tasd rest16
target: [('restaurant general', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] food quality']
sent: ['–', 'IT', 'CANT', 'GET', 'ANY', 'BETTER', '!', '!', '!', '!', '!']
counter: {('food quality', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] food quality']
multi_path: ['[A] it [C] food quality [S] great', '[A] it [S] great [C] food quality', '[C] food quality [S] great [A] it', '[C] food quality [A] it [S] great', '[S] great [C] food quality [A] it']

task, data: tasd rest16
target: [('food quality', 'food', 'great', 'null'), ('restaurant general', 'null', 'great', 'null'), ('service general', 'people', 'great', 'null')]
output: ['[A] food [S] great [C] food quality', '[A] people [S] great [C] service general']
sent: ['WHAT', 'ELSE', 'CAN', 'YOU', 'SAY', 'NICE', 'PEOPLE', 'AMAZING', 'FOOD', 'WOW']
counter: {('food quality', 'food', 'great', 'null'): 5, ('service general', 'people', 'great', 'null'): 5}
output quads: ['[A] food [S] great [C] food quality', '[A] people [S] great [C] service general']
multi_path: ['[A] food [C] food quality [S] great [SSEP] [A] people [C] service general [S] great', '[A] food [S] great [C] food quality [SSEP] [A] people [S] great [C] service general', '[C] food quality [S] great [A] food [SSEP] [C] service general [S] great [A] people', '[C] food quality [A] food [S] great [SSEP] [C] service general [A] people [S] great', '[S] great [C] food quality [A] food [SSEP] [S] great [C] service general [A] people']

task, data: tasd rest16
target: [('food quality', 'eggs', 'great', 'null'), ('food quality', 'fresh fruit', 'great', 'null'), ('food quality', 'null', 'great', 'null'), ('food quality', 'pancakes', 'great', 'null'), ('food quality', 'potatoes', 'great', 'null'), ('food quality', 'yogurt', 'great', 'null')]
output: ['[A] eggs [S] great [C] food quality', '[A] fresh fruit [S] great [C] food quality', '[A] pancakes [S] great [C] food quality', '[A] potatoes [S] great [C] food quality', '[A] yogurt [S] great [C] food quality']
sent: ['–', 'Eggs', ',', 'pancakes', ',', 'potatoes', ',', 'fresh', 'fruit', 'and', 'yogurt', '--', 'everything', 'they', 'serve', 'is', 'delicious', '.']
counter: {('food quality', 'eggs', 'great', 'null'): 5, ('food quality', 'pancakes', 'great', 'null'): 5, ('food quality', 'potatoes', 'great', 'null'): 5, ('food quality', 'fresh fruit', 'great', 'null'): 5, ('food quality', 'yogurt', 'great', 'null'): 5}
output quads: ['[A] eggs [S] great [C] food quality', '[A] pancakes [S] great [C] food quality', '[A] potatoes [S] great [C] food quality', '[A] fresh fruit [S] great [C] food quality', '[A] yogurt [S] great [C] food quality']
multi_path: ['[A] eggs [C] food quality [S] great [SSEP] [A] pancakes [C] food quality [S] great [SSEP] [A] potatoes [C] food quality [S] great [SSEP] [A] fresh fruit [C] food quality [S] great [SSEP] [A] yogurt [C] food quality [S] great', '[A] eggs [S] great [C] food quality [SSEP] [A] pancakes [S] great [C] food quality [SSEP] [A] potatoes [S] great [C] food quality [SSEP] [A] fresh fruit [S] great [C] food quality [SSEP] [A] yogurt [S] great [C] food quality', '[C] food quality [S] great [A] eggs [SSEP] [C] food quality [S] great [A] pancakes [SSEP] [C] food quality [S] great [A] potatoes [SSEP] [C] food quality [S] great [A] fresh fruit [SSEP] [C] food quality [S] great [A] yogurt', '[C] food quality [A] eggs [S] great [SSEP] [C] food quality [A] pancakes [S] great [SSEP] [C] food quality [A] potatoes [S] great [SSEP] [C] food quality [A] fresh fruit [S] great [SSEP] [C] food quality [A] yogurt [S] great', '[S] great [C] food quality [A] eggs [SSEP] [S] great [C] food quality [A] pancakes [SSEP] [S] great [C] food quality [A] potatoes [SSEP] [S] great [C] food quality [A] fresh fruit [SSEP] [S] great [C] food quality [A] yogurt']

task, data: tasd rest16
target: [('restaurant miscellaneous', 'place', 'great', 'null')]
output: ["[A] farmer's market [S] great [C] restaurant miscellaneous", '[A] place [S] great [C] location general']
sent: ['The', 'best', 'place', 'for', 'a', 'leisure', 'Sunday', 'breakfast', 'amidst', 'yachts', ',', 'then', 'take', 'a', 'stroll', 'through', 'the', 'nearby', 'Farmer', "'s", 'Market', '.']
counter: {('location general', 'place', 'great', 'null'): 5, ('restaurant general', "farmer's market", 'great', 'null'): 2, ('restaurant miscellaneous', "farmer's market", 'great', 'null'): 3}
output quads: ['[A] place [S] great [C] location general', "[A] farmer's market [S] great [C] restaurant miscellaneous"]
multi_path: ["[A] place [C] location general [S] great [SSEP] [A] farmer's market [C] restaurant general [S] great", "[A] place [S] great [C] location general [SSEP] [A] farmer's market [S] great [C] restaurant general", "[C] location general [S] great [A] place [SSEP] [C] restaurant miscellaneous [S] great [A] farmer's market", "[C] location general [A] place [S] great [SSEP] [C] restaurant miscellaneous [A] farmer's market [S] great", "[S] great [C] location general [A] place [SSEP] [S] great [C] restaurant miscellaneous [A] farmer's market"]

task, data: tasd rest16
target: [('food quality', 'fish on the omikase platter', 'great', 'null'), ('food quality', 'meal', 'great', 'null')]
output: ['[A] fish [S] great [C] food quality', '[A] meal [S] great [C] food quality']
sent: ['great', 'meal', '–', 'the', 'fish', 'on', 'the', 'omikase', 'platter', 'was', 'absolutely', 'decadent', '--', 'there', 'was', 'none', 'of', 'the', 'stringiness', 'that', 'sometimes', 'accompanies', 'fair', 'sushi', '--', 'this', 'fish', 'was', 'perfect', '!', '!', '!', '!']
counter: {('food quality', 'meal', 'great', 'null'): 5, ('food quality', 'fish', 'great', 'null'): 5}
output quads: ['[A] meal [S] great [C] food quality', '[A] fish [S] great [C] food quality']
multi_path: ['[A] meal [C] food quality [S] great [SSEP] [A] fish [C] food quality [S] great', '[A] meal [S] great [C] food quality [SSEP] [A] fish [S] great [C] food quality', '[C] food quality [S] great [A] meal [SSEP] [C] food quality [S] great [A] fish', '[C] food quality [A] meal [S] great [SSEP] [C] food quality [A] fish [S] great', '[S] great [C] food quality [A] meal [SSEP] [S] great [C] food quality [A] fish']

task, data: tasd rest16
target: [('drinks quality', 'sake', 'great', 'null'), ('service general', 'waiter', 'great', 'null')]
output: ['[A] sake [S] great [C] drinks quality']
sent: ['and', 'the', 'waiter', 'suggested', 'a', 'perfect', 'sake', '!', '!']
counter: {('drinks quality', 'sake', 'great', 'null'): 5}
output quads: ['[A] sake [S] great [C] drinks quality']
multi_path: ['[A] sake [C] drinks quality [S] great', '[A] sake [S] great [C] drinks quality', '[C] drinks quality [S] great [A] sake', '[C] drinks quality [A] sake [S] great', '[S] great [C] drinks quality [A] sake']

task, data: tasd rest16
target: [('restaurant general', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] food quality']
sent: ['absolutely', 'fabulous', '!', '!', '!']
counter: {('food quality', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] food quality']
multi_path: ['[A] it [C] food quality [S] great', '[A] it [S] great [C] food quality', '[C] food quality [S] great [A] it', '[C] food quality [A] it [S] great', '[S] great [C] food quality [A] it']

task, data: tasd rest16
target: [('food quality', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] restaurant general']
sent: ['Two', 'thumbs', 'up', '!']
counter: {('restaurant general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] restaurant general']
multi_path: ['[A] it [C] restaurant general [S] great', '[A] it [S] great [C] restaurant general', '[C] restaurant general [S] great [A] it', '[C] restaurant general [A] it [S] great', '[S] great [C] restaurant general [A] it']

task, data: tasd rest16
target: [('food quality', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] restaurant general']
sent: ['This', 'is', 'right', 'up', 'there', 'with', 'places', 'in', 'Tokyo', 'as', 'far', 'as', 'the', 'freshness', 'is', 'concerned', '.']
counter: {('restaurant general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] restaurant general']
multi_path: ['[A] it [C] restaurant general [S] great', '[A] it [S] great [C] restaurant general', '[C] restaurant general [S] great [A] it', '[C] restaurant general [A] it [S] great', '[S] great [C] restaurant general [A] it']

task, data: tasd rest16
target: [('restaurant general', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] food quality']
sent: ['splendid']
counter: {('food quality', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] food quality']
multi_path: ['[A] it [C] food quality [S] great', '[A] it [S] great [C] food quality', '[C] food quality [S] great [A] it', '[C] food quality [A] it [S] great', '[S] great [C] food quality [A] it']

task, data: tasd rest16
target: [('restaurant prices', 'null', 'great', 'null')]
output: ['[A] null [S] ok [C] food prices']
sent: ['$6', 'with', 'tip', '.']
counter: {('food prices', 'null', 'ok', 'null'): 5}
output quads: ['[A] null [S] ok [C] food prices']
multi_path: ['[A] it [C] food prices [S] ok', '[A] it [S] ok [C] food prices', '[C] food prices [S] ok [A] it', '[C] food prices [A] it [S] ok', '[S] ok [C] food prices [A] it']

task, data: tasd rest16
target: [('restaurant general', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] food quality']
sent: ['Perfection', '.']
counter: {('food quality', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] food quality']
multi_path: ['[A] it [C] food quality [S] great', '[A] it [S] great [C] food quality', '[C] food quality [S] great [A] it', '[C] food quality [A] it [S] great', '[S] great [C] food quality [A] it']

task, data: tasd rest16
target: [('restaurant general', 'sushi place', 'great', 'null')]
output: ['[A] sushi [S] great [C] food quality']
sent: ['One', 'of', 'the', 'best', 'Sushi', 'place', 'in', 'town', '.']
counter: {('food quality', 'sushi', 'great', 'null'): 5}
output quads: ['[A] sushi [S] great [C] food quality']
multi_path: ['[A] sushi [C] food quality [S] great', '[A] sushi [S] great [C] food quality', '[C] food quality [S] great [A] sushi', '[C] food quality [A] sushi [S] great', '[S] great [C] food quality [A] sushi']

task, data: tasd rest16
target: [('service general', 'null', 'ok', 'null')]
output: ['[A] null [S] bad [C] service general']
sent: ['On', 'weekends', ',', 'you', 'might', 'have', 'to', 'wait', 'for', 'couple', 'hours', '.']
counter: {('service general', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] service general']
multi_path: ['[A] it [C] service general [S] bad', '[A] it [S] bad [C] service general', '[C] service general [S] bad [A] it', '[C] service general [A] it [S] bad', '[S] bad [C] service general [A] it']

task, data: tasd rest16
target: [('service general', 'null', 'great', 'null')]
output: ['[A] null [S] bad [C] service general']
sent: ['However', ',', 'they', 'do', 'take', 'your', 'cellphone', 'numbers', 'so', 'that', 'you', 'can', 'go', 'hang', 'out', 'somewhere', 'else', 'till', 'they', 'call', 'you', 'up', 'on', 'your', 'cellphone', '.']
counter: {('service general', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] service general']
multi_path: ['[A] it [C] service general [S] bad', '[A] it [S] bad [C] service general', '[C] service general [S] bad [A] it', '[C] service general [A] it [S] bad', '[S] bad [C] service general [A] it']

task, data: tasd rest16
target: [('restaurant miscellaneous', "murphy's", 'great', 'null')]
output: ["[A] murphy's [S] great [C] restaurant general"]
sent: ['–', 'I', 'can', "'t", 'believe', 'Murphy', "'s", 'has', 'been', 'around', 'for', 'over', '25', 'years', ',', 'amazing', '.']
counter: {('restaurant general', "murphy's", 'great', 'null'): 5}
output quads: ["[A] murphy's [S] great [C] restaurant general"]
multi_path: ["[A] murphy's [C] restaurant general [S] great", "[A] murphy's [S] great [C] restaurant general", "[C] restaurant general [S] great [A] murphy's", "[C] restaurant general [A] murphy's [S] great", "[S] great [C] restaurant general [A] murphy's"]

task, data: tasd rest16
target: [('food quality', 'brunch', 'great', 'null'), ('food quality', 'egg white omelet', 'great', 'null'), ('food quality', 'food', 'great', 'null')]
output: ['[A] brunch [S] great [C] food quality', '[A] egg white omelet [S] great [C] food quality', '[A] food [S] great [C] service general']
sent: ['Brunch', 'at', 'Murphy', "'s", 'is', 'to', 'die', 'for', ',', 'my', 'specialty', '.', '.', '.', 'egg', 'white', 'omelet', ',', 'the', 'food', 'is', 'always', 'freshly', 'prepared', '.']
counter: {('food quality', 'brunch', 'great', 'null'): 5, ('food quality', 'egg white omelet', 'great', 'null'): 5, ('food quality', 'food', 'great', 'null'): 2, ('service general', 'food', 'great', 'null'): 3}
output quads: ['[A] brunch [S] great [C] food quality', '[A] egg white omelet [S] great [C] food quality', '[A] food [S] great [C] service general']
multi_path: ['[A] brunch [C] food quality [S] great [SSEP] [A] egg white omelet [C] food quality [S] great [SSEP] [A] food [C] food quality [S] great', '[A] brunch [S] great [C] food quality [SSEP] [A] egg white omelet [S] great [C] food quality [SSEP] [A] food [S] great [C] food quality', '[C] food quality [S] great [A] brunch [SSEP] [C] food quality [S] great [A] egg white omelet [SSEP] [C] service general [S] great [A] food', '[C] food quality [A] brunch [S] great [SSEP] [C] food quality [A] egg white omelet [S] great [SSEP] [C] service general [A] food [S] great', '[S] great [C] food quality [A] brunch [SSEP] [S] great [C] food quality [A] egg white omelet [SSEP] [S] great [C] service general [A] food']

task, data: tasd rest16
target: [('ambience general', 'spot', 'great', 'null'), ('restaurant miscellaneous', 'spot', 'great', 'null')]
output: ['[A] spot [S] great [C] restaurant miscellaneous']
sent: ['It', "'s", 'the', 'perfect', 'spot', 'for', 'a', 'romantic', 'date', 'for', '2', 'or', 'a', 'secret', 'rendezvous', '!']
counter: {('restaurant miscellaneous', 'spot', 'great', 'null'): 5}
output quads: ['[A] spot [S] great [C] restaurant miscellaneous']
multi_path: ['[A] spot [C] restaurant miscellaneous [S] great', '[A] spot [S] great [C] restaurant miscellaneous', '[C] restaurant miscellaneous [S] great [A] spot', '[C] restaurant miscellaneous [A] spot [S] great', '[S] great [C] restaurant miscellaneous [A] spot']

task, data: tasd rest16
target: [('restaurant general', 'null', 'great', 'null'), ('restaurant miscellaneous', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] restaurant general', '[A] valet parking [S] great [C] service general']
sent: ['I', 'guarantee', 'you', 'won', "'t", 'be', 'disappointed', ',', 'there', "'s", 'also', 'valet', 'parking', '.']
counter: {('restaurant general', 'null', 'great', 'null'): 3, ('service general', 'valet parking', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] restaurant general', '[A] valet parking [S] great [C] service general']
multi_path: ['[A] it [C] restaurant general [S] great [SSEP] [A] valet parking [C] service general [S] great', '[A] it [S] great [C] restaurant general [SSEP] [A] valet parking [S] great [C] service general', '[C] service general [S] great [A] valet parking', '[C] restaurant general [A] it [S] great [SSEP] [C] service general [A] valet parking [S] great', '[S] great [C] service general [A] valet parking']

task, data: tasd rest16
target: [('restaurant general', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] food quality']
sent: ['Addicting', '!']
counter: {('food quality', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] food quality']
multi_path: ['[A] it [C] food quality [S] great', '[A] it [S] great [C] food quality', '[C] food quality [S] great [A] it', '[C] food quality [A] it [S] great', '[S] great [C] food quality [A] it']

task, data: tasd rest16
target: [('restaurant general', 'mexican place', 'great', 'null')]
output: ['[A] place [S] great [C] restaurant general']
sent: ['–', 'Best', 'Mexican', 'place', 'for', 'lunch', 'in', 'the', 'financial', 'district', '.']
counter: {('restaurant general', 'place', 'great', 'null'): 5}
output quads: ['[A] place [S] great [C] restaurant general']
multi_path: ['[A] place [C] restaurant general [S] great', '[A] place [S] great [C] restaurant general', '[C] restaurant general [S] great [A] place', '[C] restaurant general [A] place [S] great', '[S] great [C] restaurant general [A] place']

task, data: tasd rest16
target: [('service general', 'service', 'great', 'null')]
output: ['[A] null [S] ok [C] service general', '[A] service [S] great [C] service general']
sent: ['Can', 'get', 'busy', 'on', 'Fridays', 'for', 'a', 'table', 'but', 'once', 'seated', ',', 'the', 'service', 'is', 'so', 'efficient', 'you', 'can', 'be', 'in', 'and', 'out', 'of', 'there', 'quickly', '.']
counter: {('service general', 'service', 'great', 'null'): 4, ('service general', 'null', 'ok', 'null'): 4, ('service general', 'service', 'ok', 'null'): 1, ('service general', 'null', 'bad', 'null'): 1}
output quads: ['[A] service [S] great [C] service general', '[A] null [S] ok [C] service general']
multi_path: ['[A] service [C] service general [S] great [SSEP] [A] it [C] service general [S] ok', '[A] service [S] great [C] service general [SSEP] [A] it [S] ok [C] service general', '[C] service general [S] great [A] service [SSEP] [C] service general [S] ok [A] it', '[C] service general [A] service [S] great [SSEP] [C] service general [A] it [S] ok', '[S] ok [C] service general [A] service [SSEP] [S] bad [C] service general [A] it']

task, data: tasd rest16
target: [('restaurant miscellaneous', 'null', 'bad', 'null')]
output: ['[A] null [S] great [C] restaurant miscellaneous']
sent: ['The', 'prior', 'reviews', 'said', 'Kid', 'friendly', '.', '.', '.', 'give', 'me', 'a', 'break', 'with', 'two', 'young', 'children', 'that', 'is', 'light', 'years', '.']
counter: {('restaurant miscellaneous', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] restaurant miscellaneous']
multi_path: ['[A] it [C] restaurant miscellaneous [S] great', '[A] it [S] great [C] restaurant miscellaneous', '[C] restaurant miscellaneous [S] great [A] it', '[C] restaurant miscellaneous [A] it [S] great', '[S] great [C] restaurant miscellaneous [A] it']

task, data: tasd rest16
target: [('drinks quality', 'margaritas', 'great', 'null'), ('food style_options', 'portions', 'great', 'null'), ('restaurant general', 'null', 'great', 'null'), ('service general', 'service', 'great', 'null')]
output: ['[A] margaritas [S] great [C] drinks quality', '[A] portions [S] great [C] food style_options', '[A] service [S] great [C] service general']
sent: ['–', 'This', 'is', 'one', 'of', 'my', 'top', 'lunch', 'spots', ',', 'huge', 'portions', ',', 'fast', 'service', 'and', 'amazing', 'margaritas', '!', '!']
counter: {('food style_options', 'portions', 'great', 'null'): 5, ('service general', 'service', 'great', 'null'): 5, ('drinks quality', 'margaritas', 'great', 'null'): 5}
output quads: ['[A] portions [S] great [C] food style_options', '[A] service [S] great [C] service general', '[A] margaritas [S] great [C] drinks quality']
multi_path: ['[A] portions [C] food style_options [S] great [SSEP] [A] service [C] service general [S] great [SSEP] [A] margaritas [C] drinks quality [S] great', '[A] portions [S] great [C] food style_options [SSEP] [A] service [S] great [C] service general [SSEP] [A] margaritas [S] great [C] drinks quality', '[C] food style_options [S] great [A] portions [SSEP] [C] service general [S] great [A] service [SSEP] [C] drinks quality [S] great [A] margaritas', '[C] food style_options [A] portions [S] great [SSEP] [C] service general [A] service [S] great [SSEP] [C] drinks quality [A] margaritas [S] great', '[S] great [C] food style_options [A] portions [SSEP] [S] great [C] service general [A] service [SSEP] [S] great [C] drinks quality [A] margaritas']

task, data: tasd rest16
target: [('service general', 'service', 'great', 'null')]
output: ['[A] null [S] bad [C] restaurant miscellaneous', '[A] service [S] great [C] service general']
sent: ['it', 'gets', 'really', 'busy', ',', 'so', 'get', 'there', 'on', 'the', 'early', 'side', 'so', 'you', 'can', 'grab', 'a', 'seat', ',', 'if', 'you', 'do', 'have', 'to', 'wait', ',', 'its', 'not', 'bad', 'because', 'the', 'service', 'is', 'quick', '!']
counter: {('restaurant miscellaneous', 'null', 'ok', 'null'): 2, ('service general', 'service', 'great', 'null'): 5, ('restaurant miscellaneous', 'null', 'bad', 'null'): 3}
output quads: ['[A] service [S] great [C] service general', '[A] null [S] bad [C] restaurant miscellaneous']
multi_path: ['[A] it [C] restaurant miscellaneous [S] ok [SSEP] [A] service [C] service general [S] great', '[A] it [S] ok [C] restaurant miscellaneous [SSEP] [A] service [S] great [C] service general', '[C] service general [S] great [A] service [SSEP] [C] restaurant miscellaneous [S] bad [A] it', '[C] service general [A] service [S] great [SSEP] [C] restaurant miscellaneous [A] it [S] bad', '[S] great [C] service general [A] service [SSEP] [S] bad [C] restaurant miscellaneous [A] it']

task, data: tasd rest16
target: [('ambience general', 'art on the walls', 'great', 'null')]
output: ['[A] walls [S] great [C] ambience general']
sent: ['Check', 'out', 'the', 'art', 'on', 'the', 'walls', ',', 'very', 'colorful', '!']
counter: {('ambience general', 'walls', 'great', 'null'): 5}
output quads: ['[A] walls [S] great [C] ambience general']
multi_path: ['[A] walls [C] ambience general [S] great', '[A] walls [S] great [C] ambience general', '[C] ambience general [S] great [A] walls', '[C] ambience general [A] walls [S] great', '[S] great [C] ambience general [A] walls']

task, data: tasd rest16
target: [('food quality', 'ingrediants', 'great', 'null'), ('food quality', 'null', 'great', 'null')]
output: ['[A] ingrediants [S] great [C] food quality']
sent: ['Fresh', 'ingrediants', 'and', 'super', 'tasty', '.']
counter: {('food quality', 'ingrediants', 'great', 'null'): 10}
output quads: ['[A] ingrediants [S] great [C] food quality']
multi_path: ['[A] ingrediants [C] food quality [S] great [SSEP] [A] ingrediants [C] food quality [S] great', '[A] ingrediants [S] great [C] food quality [SSEP] [A] ingrediants [S] great [C] food quality', '[C] food quality [S] great [A] ingrediants [SSEP] [C] food quality [S] great [A] ingrediants', '[C] food quality [A] ingrediants [S] great [SSEP] [C] food quality [A] ingrediants [S] great', '[S] great [C] food quality [A] ingrediants [SSEP] [S] great [C] food quality [A] ingrediants']

task, data: tasd rest16
target: [('food quality', 'null', 'great', 'null')]
output: ['[A] place [S] great [C] restaurant general']
sent: ['The', 'place', 'is', 'the', 'next', 'best', 'thing', 'to', 'my', 'Moms', 'cooking', '.']
counter: {('restaurant general', 'place', 'great', 'null'): 5}
output quads: ['[A] place [S] great [C] restaurant general']
multi_path: ['[A] place [C] restaurant general [S] great', '[A] place [S] great [C] restaurant general', '[C] restaurant general [S] great [A] place', '[C] restaurant general [A] place [S] great', '[S] great [C] restaurant general [A] place']

task, data: tasd rest16
target: [('food style_options', 'selection', 'great', 'null'), ('food style_options', 'sushi', 'great', 'null')]
output: ['[A] balance of traditional sushi [S] great [C] food quality', '[A] selection [S] great [C] food style_options']
sent: ['Not', 'only', 'can', 'the', 'selection', 'be', 'innovative', ',', 'but', 'there', "'s", 'a', 'nice', 'balance', 'of', 'traditional', 'sushi', 'as', 'well', '.']
counter: {('food style_options', 'selection', 'great', 'null'): 5, ('food quality', 'balance of traditional sushi', 'great', 'null'): 5}
output quads: ['[A] selection [S] great [C] food style_options', '[A] balance of traditional sushi [S] great [C] food quality']
multi_path: ['[A] selection [C] food style_options [S] great [SSEP] [A] balance of traditional sushi [C] food quality [S] great', '[A] selection [S] great [C] food style_options [SSEP] [A] balance of traditional sushi [S] great [C] food quality', '[C] food style_options [S] great [A] selection [SSEP] [C] food quality [S] great [A] balance of traditional sushi', '[C] food style_options [A] selection [S] great [SSEP] [C] food quality [A] balance of traditional sushi [S] great', '[S] great [C] food style_options [A] selection [SSEP] [S] great [C] food quality [A] balance of traditional sushi']

task, data: tasd rest16
target: [('restaurant general', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] food prices']
sent: ['WAY', 'OVER-RATED', '!', '!', '!', '!']
counter: {('food prices', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] food prices']
multi_path: ['[A] it [C] food prices [S] bad', '[A] it [S] bad [C] food prices', '[C] food prices [S] bad [A] it', '[C] food prices [A] it [S] bad', '[S] bad [C] food prices [A] it']

task, data: tasd rest16
target: [('food quality', 'brunch food', 'ok', 'null'), ('service general', 'null', 'bad', 'null')]
output: ['[A] brunch food [S] great [C] food quality']
sent: ['If', 'I', 'want', 'to', 'stand', 'in', 'line', 'on', 'Sunday', 'for', 'an', 'hour', 'to', 'get', 'average', 'brunch', 'food', ',', 'then', 'I', 'would', 'put', 'Murphy', "'s", 'at', 'the', 'top', 'of', 'the', 'list', '.']
counter: {('food quality', 'brunch food', 'great', 'null'): 5, ('service general', 'null', 'bad', 'null'): 2, ('restaurant general', "murphy's", 'great', 'null'): 2, ('restaurant general', "murphy's", 'bad', 'null'): 1}
output quads: ['[A] brunch food [S] great [C] food quality']
multi_path: ['[A] brunch food [C] food quality [S] great [SSEP] [A] it [C] service general [S] bad', '[A] brunch food [S] great [C] food quality [SSEP] [A] it [S] bad [C] service general', "[C] food quality [S] great [A] brunch food [SSEP] [C] restaurant general [S] great [A] murphy's", "[C] food quality [A] brunch food [S] great [SSEP] [C] restaurant general [A] murphy's [S] great", "[S] great [C] food quality [A] brunch food [SSEP] [S] bad [C] restaurant general [A] murphy's"]

task, data: tasd rest16
target: [('food quality', 'regular menu', 'ok', 'null'), ('service general', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] service general', '[A] regular menu [S] bad [C] food quality']
sent: ['The', 'regular', 'menu', 'here', 'is', 'slightly', 'above', 'average', 'that', 'is', 'not', 'worth', 'the', 'snotty', 'attitude', 'that', 'you', 'receive', '.']
counter: {('food quality', 'regular menu', 'bad', 'null'): 5, ('food style_options', 'regular menu', 'bad', 'null'): 2, ('service general', 'null', 'bad', 'null'): 3}
output quads: ['[A] regular menu [S] bad [C] food quality', '[A] null [S] bad [C] service general']
multi_path: ['[A] regular menu [C] food quality [S] bad [SSEP] [A] regular menu [C] food style_options [S] bad', '[A] regular menu [S] bad [C] food quality [SSEP] [A] regular menu [S] bad [C] food style_options', '[C] food quality [S] bad [A] regular menu [SSEP] [C] service general [S] bad [A] it', '[C] food quality [A] regular menu [S] bad [SSEP] [C] service general [A] it [S] bad', '[S] bad [C] food quality [A] regular menu [SSEP] [S] bad [C] service general [A] it']

task, data: tasd rest16
target: [('drinks quality', 'sake', 'great', 'null'), ('food quality', 'blue fin tuna', 'great', 'null'), ('food quality', 'cod', 'great', 'null'), ('food quality', 'crab', 'great', 'null'), ('food quality', 'eel', 'great', 'null'), ('food quality', 'fluke', 'great', 'null'), ('food quality', 'jellyfish', 'great', 'null'), ('food quality', 'lobster', 'great', 'null'), ('food quality', 'mackeral', 'great', 'null'), ('food quality', 'milk fish', 'great', 'null'), ('food quality', 'monk fish', 'great', 'null'), ('food quality', 'oysters', 'great', 'null'), ('food quality', 'roe', 'great', 'null'), ('food quality', 'salmon', 'great', 'null'), ('food quality', 'sardine', 'great', 'null'), ('food quality', 'scallop', 'great', 'null'), ('food quality', 'sea bream', 'great', 'null'), ('food quality', 'sea urchin', 'great', 'null'), ('food quality', 'shrimp', 'great', 'null'), ('food quality', 'sushi', 'great', 'null'), ('food quality', 'trout', 'great', 'null'), ('food quality', 'tuna', 'great', 'null'), ('food quality', 'yellow tail', 'great', 'null'), ('food style_options', 'fish', 'great', 'null'), ('food style_options', 'toro', 'great', 'null'), ('location general', 'soho location', 'great', 'null')]
output: ['[A] crab [S] great [C] food quality', '[A] fish [S] great [C] food quality', '[A] lobster [S] great [C] food quality', '[A] sake [S] great [C] drinks quality', '[A] salmon [S] great [C] food quality', '[A] scallop [S] great [C] food quality', '[A] trout [S] great [C] food quality', '[A] tuna [S] great [C] food quality', '[A] yellow tail [S] great [C] food quality']
sent: ['Your', 'a', 'sushi', 'fan', ',', 'you', 'love', 'expertly', 'cut', 'fish', ',', 'great', 'sake', ',', 'a', 'killer', 'SOHO', 'location', ',', 'and', 'of', 'course', ':', 'Salmon', ',', 'Tuna', ',', 'Fluke', ',', 'Yellow', 'Tail', ',', 'Cod', ',', 'Mackeral', ',', 'Jellyfish', ',', 'Sea', 'Urchin', ',', 'Shrimp', ',', 'Lobster', ',', 'Sea', 'Bream', ',', 'Trout', ',', 'Milk', 'Fish', ',', 'Blue', 'Fin', 'Tuna', ',', 'Eel', ',', 'Crab', ',', 'Sardine', ',', 'Monk', 'Fish', ',', 'Roe', ',', 'Scallop', ',', 'Oysters', ',', 'and', 'a', 'varity', 'of', 'Toro', '.']
counter: {('food quality', 'fish', 'great', 'null'): 5, ('drinks quality', 'sake', 'great', 'null'): 5, ('ambience general', 'soho location', 'great', 'null'): 2, ('food quality', 'salmon', 'great', 'null'): 7, ('food quality', 'tuna', 'great', 'null'): 3, ('food quality', 'yellow tail', 'great', 'null'): 3, ('food quality', 'jellyfish', 'great', 'null'): 2, ('food quality', 'lobster', 'great', 'null'): 5, ('food quality', 'trout', 'great', 'null'): 5, ('food quality', 'crab', 'great', 'null'): 5, ('food quality', 'scallop', 'great', 'null'): 4, ('null', 'oysters', 'null', 'null'): 1, ('location general', 'soho', 'great', 'null'): 2, ('food quality', 'oysters', 'great', 'null'): 1, ('location general', 'soho location', 'great', 'null'): 1, ('food quality', 'fluke', 'great', 'null'): 2, ('food quality', 'mackeral', 'great', 'null'): 2, ('food quality', 'null', 'null', 'null'): 1}
output quads: ['[A] fish [S] great [C] food quality', '[A] sake [S] great [C] drinks quality', '[A] salmon [S] great [C] food quality', '[A] tuna [S] great [C] food quality', '[A] yellow tail [S] great [C] food quality', '[A] lobster [S] great [C] food quality', '[A] trout [S] great [C] food quality', '[A] crab [S] great [C] food quality', '[A] scallop [S] great [C] food quality']
multi_path: ['[A] fish [C] food quality [S] great [SSEP] [A] sake [C] drinks quality [S] great [SSEP] [A] soho location [C] ambience general [S] great [SSEP] [A] salmon [C] food quality [S] great [SSEP] [A] tuna [C] food quality [S] great [SSEP] [A] yellow tail [C] food quality [S] great [SSEP] [A] jellyfish [C] food quality [S] great [SSEP] [A] lobster [C] food quality [S] great [SSEP] [A] trout [C] food quality [S] great [SSEP] [A] crab [C] food quality [S] great [SSEP] [A] scallop [C] food quality [S] great', '[A] fish [S] great [C] food quality [SSEP] [A] sake [S] great [C] drinks quality [SSEP] [A] soho location [S] great [C] ambience general [SSEP] [A] salmon [S] great [C] food quality [SSEP] [A] tuna [S] great [C] food quality [SSEP] [A] yellow tail [S] great [C] food quality [SSEP] [A] jellyfish [S] great [C] food quality [SSEP] [A] lobster [S] great [C] food quality [SSEP] [A] trout [S] great [C] food quality [SSEP] [A] crab [S] great [C] food quality [SSEP] [A] scallop [S] great [C] food quality [SSEP] [A] oysters', '[C] food quality [S] great [A] fish [SSEP] [C] drinks quality [S] great [A] sake [SSEP] [C] location general [S] great [A] soho [SSEP] [C] food quality [S] great [A] salmon [SSEP] [C] food quality [S] great [A] tuna [SSEP] [C] food quality [S] great [A] yellow tail [SSEP] [C] food quality [S] great [A] lobster [SSEP] [C] food quality [S] great [A] trout [SSEP] [C] food quality [S] great [A] crab [SSEP] [C] food quality [S] great [A] oysters', '[C] food quality [A] fish [S] great [SSEP] [C] drinks quality [A] sake [S] great [SSEP] [C] location general [A] soho location [S] great [SSEP] [C] food quality [A] salmon [S] great [SSEP] [C] food quality [A] salmon [S] great [SSEP] [C] food quality [A] fluke [S] great [SSEP] [C] food quality [A] mackeral [S] great [SSEP] [C] food quality [A] lobster [S] great [SSEP] [C] food quality [A] trout [S] great [SSEP] [C] food quality [A] crab [S] great [SSEP] [C] food quality [A] scallop [S] great [SSEP] [C] food quality', '[S] great [C] food quality [A] fish [SSEP] [S] great [C] drinks quality [A] sake [SSEP] [S] great [C] location general [A] soho [SSEP] [S] great [C] food quality [A] salmon [SSEP] [S] great [C] food quality [A] salmon [SSEP] [S] great [C] food quality [A] fluke [SSEP] [S] great [C] food quality [A] mackeral [SSEP] [S] great [C] food quality [A] lobster [SSEP] [S] great [C] food quality [A] trout [SSEP] [S] great [C] food quality [A] crab [SSEP] [S] great [C] food quality [A] scallop']

task, data: tasd rest16
target: [('restaurant general', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] food quality']
sent: ['Cut', 'to', 'the', 'chase', '-', 'this', 'is', 'amazing', '!']
counter: {('food quality', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] food quality']
multi_path: ['[A] it [C] food quality [S] great', '[A] it [S] great [C] food quality', '[C] food quality [S] great [A] it', '[C] food quality [A] it [S] great', '[S] great [C] food quality [A] it']

task, data: tasd rest16
target: [('restaurant general', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] food quality']
sent: ['Well', 'worth', 'it']
counter: {('food quality', 'null', 'great', 'null'): 4, ('restaurant general', 'null', 'great', 'null'): 1}
output quads: ['[A] null [S] great [C] food quality']
multi_path: ['[A] it [C] food quality [S] great', '[A] it [S] great [C] food quality', '[C] restaurant general [S] great [A] it', '[C] food quality [A] it [S] great', '[S] great [C] food quality [A] it']

task, data: tasd rest16
target: [('food quality', "chef's choice for sushi", 'great', 'null'), ('food quality', 'rolls', 'great', 'null'), ('food quality', 'smoked yellowtail', 'great', 'null')]
output: ['[A] rolls [S] great [C] food quality', '[A] smoked yellowtail [S] great [C] food quality', '[A] sushi [S] great [C] food quality']
sent: ['Try', 'the', 'Chef', "'s", 'Choice', 'for', 'sushi', 'as', 'the', 'smoked', 'yellowtail', 'was', 'incredible', 'and', 'the', 'rolls', 'were', 'also', 'tasty', '.']
counter: {('food quality', 'sushi', 'great', 'null'): 5, ('food quality', 'smoked yellowtail', 'great', 'null'): 5, ('food quality', 'rolls', 'great', 'null'): 5}
output quads: ['[A] sushi [S] great [C] food quality', '[A] smoked yellowtail [S] great [C] food quality', '[A] rolls [S] great [C] food quality']
multi_path: ['[A] sushi [C] food quality [S] great [SSEP] [A] smoked yellowtail [C] food quality [S] great [SSEP] [A] rolls [C] food quality [S] great', '[A] sushi [S] great [C] food quality [SSEP] [A] smoked yellowtail [S] great [C] food quality [SSEP] [A] rolls [S] great [C] food quality', '[C] food quality [S] great [A] sushi [SSEP] [C] food quality [S] great [A] smoked yellowtail [SSEP] [C] food quality [S] great [A] rolls', '[C] food quality [A] sushi [S] great [SSEP] [C] food quality [A] smoked yellowtail [S] great [SSEP] [C] food quality [A] rolls [S] great', '[S] great [C] food quality [A] sushi [SSEP] [S] great [C] food quality [A] smoked yellowtail [SSEP] [S] great [C] food quality [A] rolls']

task, data: tasd rest16
target: [('food quality', 'pizza', 'bad', 'null')]
output: ["[A] mioposto's pizza [S] bad [C] food quality", '[A] pizza [S] bad [C] food quality']
sent: ['I', 'know', 'many', 'people', 'have', 'their', 'favorite', 'types', 'of', 'pizza', 'and', 'pizza', 'places', ',', 'but', 'Mioposto', "'s", 'pizza', 'lacks', 'quality', 'and', 'good', 'taste', '.']
counter: {('food quality', "mioposto's pizza", 'bad', 'null'): 11, ('food quality', 'pizza', 'bad', 'null'): 4}
output quads: ["[A] mioposto's pizza [S] bad [C] food quality", '[A] pizza [S] bad [C] food quality']
multi_path: ["[A] mioposto's pizza [C] food quality [S] bad [SSEP] [A] mioposto's pizza [C] food quality [S] bad [SSEP] [A] mioposto's pizza [C] food quality [S] bad", "[A] mioposto's pizza [S] bad [C] food quality [SSEP] [A] pizza [S] bad [C] food quality [SSEP] [A] pizza [S] bad [C] food quality", "[C] food quality [S] bad [A] mioposto's pizza [SSEP] [C] food quality [S] bad [A] mioposto's pizza [SSEP] [C] food quality [S] bad [A] pizza", "[C] food quality [A] mioposto's pizza [S] bad [SSEP] [C] food quality [A] mioposto's pizza [S] bad [SSEP] [C] food quality [A] mioposto's pizza [S] bad", "[S] bad [C] food quality [A] mioposto's pizza [SSEP] [S] bad [C] food quality [A] mioposto's pizza [SSEP] [S] bad [C] food quality [A] pizza"]

task, data: tasd rest16
target: [('food quality', 'pizza', 'bad', 'null')]
output: ['[A] frozen pizza [S] bad [C] food quality']
sent: ['To', 'be', 'honest', ',', 'I', "'ve", 'had', 'better', 'frozen', 'pizza', '.']
counter: {('food quality', 'frozen pizza', 'bad', 'null'): 5}
output quads: ['[A] frozen pizza [S] bad [C] food quality']
multi_path: ['[A] frozen pizza [C] food quality [S] bad', '[A] frozen pizza [S] bad [C] food quality', '[C] food quality [S] bad [A] frozen pizza', '[C] food quality [A] frozen pizza [S] bad', '[S] bad [C] food quality [A] frozen pizza']

task, data: tasd rest16
target: [('location general', 'location', 'great', 'null'), ('restaurant general', 'mioposto', 'bad', 'null')]
output: ['[A] mioposto [S] great [C] location general']
sent: ['The', 'only', 'positive', 'thing', 'about', 'Mioposto', 'is', 'the', 'nice', 'location', '.']
counter: {('location general', 'mioposto', 'great', 'null'): 5}
output quads: ['[A] mioposto [S] great [C] location general']
multi_path: ['[A] mioposto [C] location general [S] great', '[A] mioposto [S] great [C] location general', '[C] location general [S] great [A] mioposto', '[C] location general [A] mioposto [S] great', '[S] great [C] location general [A] mioposto']

task, data: tasd rest16
target: [('service general', 'wait', 'ok', 'null')]
output: ['[A] wait [S] bad [C] service general']
sent: ['The', 'only', 'problem', 'would', 'be', 'the', 'wait', ',', 'but', 'we', 'usually', 'just', 'have', 'a', 'drink', 'in', 'the', 'front', 'while', 'waiting', '.']
counter: {('service general', 'wait', 'bad', 'null'): 5}
output quads: ['[A] wait [S] bad [C] service general']
multi_path: ['[A] wait [C] service general [S] bad', '[A] wait [S] bad [C] service general', '[C] service general [S] bad [A] wait', '[C] service general [A] wait [S] bad', '[S] bad [C] service general [A] wait']

task, data: tasd rest16
target: [('restaurant general', 'null', 'great', 'null')]
output: ['[A] dining [S] great [C] food quality']
sent: ['–', 'This', 'was', 'great', 'dining', 'experience', '.']
counter: {('food quality', 'dining', 'great', 'null'): 3, ('restaurant general', 'dining', 'great', 'null'): 2}
output quads: ['[A] dining [S] great [C] food quality']
multi_path: ['[A] dining [C] food quality [S] great', '[A] dining [S] great [C] food quality', '[C] restaurant general [S] great [A] dining', '[C] restaurant general [A] dining [S] great', '[S] great [C] food quality [A] dining']

task, data: tasd rest16
target: [('restaurant general', 'null', 'great', 'null')]
output: ['[A] danny gans [S] great [C] restaurant general']
sent: ['If', 'you', "'re", 'going', 'to', 'see', 'Danny', 'Gans', 'or', 'just', 'staying', 'at', 'the', 'Mirage', ',', 'don', "'t", 'miss', 'this', 'one', '.']
counter: {('restaurant general', 'danny gans', 'great', 'null'): 5, ('restaurant general', 'mirage', 'great', 'null'): 2}
output quads: ['[A] danny gans [S] great [C] restaurant general']
multi_path: ['[A] danny gans [C] restaurant general [S] great [SSEP] [A] mirage [C] restaurant general [S] great', '[A] danny gans [S] great [C] restaurant general [SSEP] [A] mirage [S] great [C] restaurant general', '[C] restaurant general [S] great [A] danny gans', '[C] restaurant general [A] danny gans [S] great', '[S] great [C] restaurant general [A] danny gans']

task, data: tasd rest16
target: [('food quality', 'appetizer of oysters, lobster, crab (small size)', 'great', 'null')]
output: ['[A] appetizer of oysters [S] great [C] food quality', '[A] crab [S] great [C] food quality', '[A] entre [S] great [C] food style_options', '[A] lobster [S] great [C] food quality']
sent: ['The', 'appetizer', 'of', 'oysters', ',', 'lobster', ',', 'crab', '(small', 'size', ')', 'made', 'a', 'perfect', 'entre', 'for', 'my', 'wife', '.']
counter: {('food quality', 'appetizer of oysters', 'great', 'null'): 5, ('food quality', 'lobster', 'great', 'null'): 5, ('food quality', 'crab', 'great', 'null'): 3, ('food style_options', 'entre', 'great', 'null'): 3, ('food quality', 'crab (small size', 'great', 'null'): 2}
output quads: ['[A] appetizer of oysters [S] great [C] food quality', '[A] lobster [S] great [C] food quality', '[A] crab [S] great [C] food quality', '[A] entre [S] great [C] food style_options']
multi_path: ['[A] appetizer of oysters [C] food quality [S] great [SSEP] [A] lobster [C] food quality [S] great [SSEP] [A] crab [C] food quality [S] great [SSEP] [A] entre [C] food style_options [S] great', '[A] appetizer of oysters [S] great [C] food quality [SSEP] [A] lobster [S] great [C] food quality [SSEP] [A] crab [S] great [C] food quality [SSEP] [A] entre [S] great [C] food style_options', '[C] food quality [S] great [A] appetizer of oysters [SSEP] [C] food quality [S] great [A] lobster [SSEP] [C] food quality [S] great [A] crab (small size', '[C] food quality [A] appetizer of oysters [S] great [SSEP] [C] food quality [A] lobster [S] great [SSEP] [C] food quality [A] crab [S] great [SSEP] [C] food style_options [A] entre [S] great', '[S] great [C] food quality [A] appetizer of oysters [SSEP] [S] great [C] food quality [A] lobster [SSEP] [S] great [C] food quality [A] crab (small size']

task, data: tasd rest16
target: [('food quality', 'dessert', 'great', 'null')]
output: ['[A] dessert [S] bad [C] food style_options']
sent: ['Leave', 'room', 'for', 'dessert', '.']
counter: {('food style_options', 'dessert', 'bad', 'null'): 5}
output quads: ['[A] dessert [S] bad [C] food style_options']
multi_path: ['[A] dessert [C] food style_options [S] bad', '[A] dessert [S] bad [C] food style_options', '[C] food style_options [S] bad [A] dessert', '[C] food style_options [A] dessert [S] bad', '[S] bad [C] food style_options [A] dessert']

task, data: tasd rest16
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] order [S] bad [C] service general']
sent: ['Even', 'then', ',', 'the', 'order', 'was', 'not', 'correct', 'and', 'we', 'were', 'still', 'waiting', 'for', 'a', 'couple', 'items', '.']
counter: {('service general', 'order', 'bad', 'null'): 5}
output quads: ['[A] order [S] bad [C] service general']
multi_path: ['[A] order [C] service general [S] bad', '[A] order [S] bad [C] service general', '[C] service general [S] bad [A] order', '[C] service general [A] order [S] bad', '[S] bad [C] service general [A] order']

task, data: tasd rest16
target: [('service general', 'owner', 'bad', 'null')]
output: ['[A] owner [S] great [C] service general']
sent: ['As', 'it', 'turns', 'out', 'the', 'owner', 'was', 'seated', 'right', 'next', 'to', 'us', 'and', 'when', 'he', 'came', 'over', 'to', 'check', 'on', 'our', 'problems', 'was', 'very', 'dismissive', 'and', 'offered', 'a', 'token', '20', '%', 'discount', 'on', 'our', 'bill', '.']
counter: {('service general', 'owner', 'great', 'null'): 5}
output quads: ['[A] owner [S] great [C] service general']
multi_path: ['[A] owner [C] service general [S] great', '[A] owner [S] great [C] service general', '[C] service general [S] great [A] owner', '[C] service general [A] owner [S] great', '[S] great [C] service general [A] owner']

task, data: tasd rest16
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] glass [S] bad [C] drinks style_options']
sent: ['After', 'sitting', 'there', 'with', 'my', 'empty', 'glass', 'for', 'over', '20', 'minutes', 'I', 'left', '.']
counter: {('drinks style_options', 'glass', 'bad', 'null'): 5}
output quads: ['[A] glass [S] bad [C] drinks style_options']
multi_path: ['[A] glass [C] drinks style_options [S] bad', '[A] glass [S] bad [C] drinks style_options', '[C] drinks style_options [S] bad [A] glass', '[C] drinks style_options [A] glass [S] bad', '[S] bad [C] drinks style_options [A] glass']

task, data: tasd rest16
target: [('restaurant miscellaneous', 'restaurant', 'bad', 'null')]
output: ['[A] service [S] bad [C] service general']
sent: ['I', 'went', 'home', '&', 'looked', 'them', 'up', 'online', 'again', 'where', 'I', 'discovered', 'there', 'is', 'a', 'link', 'for', 'a', 'give', 'away', 'that', 'doesn', "'t", 'work', 'so', 'emailed', 'the', 'restaurant', 'about', 'the', 'non', 'existent', 'service', '&', 'deceptive', 'link', '.']
counter: {('service general', 'service', 'bad', 'null'): 5}
output quads: ['[A] service [S] bad [C] service general']
multi_path: ['[A] service [C] service general [S] bad', '[A] service [S] bad [C] service general', '[C] service general [S] bad [A] service', '[C] service general [A] service [S] bad', '[S] bad [C] service general [A] service']

task, data: tasd rest16
target: [('restaurant miscellaneous', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] service general']
sent: ['I', 'never', 'heard', 'back', 'from', 'anyone', 'more', 'than', 'a', 'month', 'ago', '.']
counter: {('service general', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] service general']
multi_path: ['[A] it [C] service general [S] bad', '[A] it [S] bad [C] service general', '[C] service general [S] bad [A] it', '[C] service general [A] it [S] bad', '[S] bad [C] service general [A] it']

task, data: tasd rest16
target: [('service general', 'bar keep', 'bad', 'null')]
output: ['[A] bar keep [S] great [C] service general']
sent: ['After', 'sitting', 'at', 'the', 'bar', 'for', 'over', '20', 'minutes', 'the', 'bar', 'keep', 'had', 'made', 'only', '2', 'drinks', '&', 'kept', 'telling', 'us', 'she', "'d", 'be', 'right', 'with', 'us', '.']
counter: {('service general', 'bar keep', 'bad', 'null'): 2, ('service general', 'bar keep', 'great', 'null'): 3}
output quads: ['[A] bar keep [S] great [C] service general']
multi_path: ['[A] bar keep [C] service general [S] bad', '[A] bar keep [S] great [C] service general', '[C] service general [S] great [A] bar keep', '[C] service general [A] bar keep [S] bad', '[S] great [C] service general [A] bar keep']

task, data: tasd rest16
target: [('restaurant miscellaneous', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] service general']
sent: ['As', 'of', 'writing', 'this', 'I', 'just', 'tried', 'their', 'give', 'away', 'a', 'link', 'again', '&', 'it', 'still', 'doesn', "'t", 'work', '.']
counter: {('service general', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] service general']
multi_path: ['[A] it [C] service general [S] bad', '[A] it [S] bad [C] service general', '[C] service general [S] bad [A] it', '[C] service general [A] it [S] bad', '[S] bad [C] service general [A] it']

task, data: tasd rest16
target: [('food quality', 'cakes', 'great', 'null')]
output: ['[A] cakes [S] great [C] food quality', '[A] crab traps [S] great [C] food quality']
sent: ['–', 'Thats', 'a', 'big', 'statement', 'considering', 'I', "'ve", 'been', 'pulling', 'crab', 'traps', 'and', 'making', 'the', 'cakes', 'myself', 'since', 'I', 'was', 'about', 'seven', '-', 'but', 'something', 'about', 'these', 'little', 'devils', 'gets', 'better', 'every', 'time', '.']
counter: {('food quality', 'null', 'great', 'null'): 2, ('food quality', 'cakes', 'great', 'null'): 4, ('food quality', 'crab traps', 'great', 'null'): 3}
output quads: ['[A] cakes [S] great [C] food quality', '[A] crab traps [S] great [C] food quality']
multi_path: ['[A] it [C] food quality [S] great', '[A] it [S] great [C] food quality', '[C] food quality [S] great [A] cakes [SSEP] [C] food quality [S] great [A] crab traps', '[C] food quality [A] cakes [S] great [SSEP] [C] food quality [A] crab traps [S] great [SSEP] [C] food quality [A] cakes [S] great', '[S] great [C] food quality [A] cakes [SSEP] [S] great [C] food quality [A] crab traps']

task, data: tasd rest16
target: [('restaurant miscellaneous', 'place', 'great', 'null')]
output: ['[A] place [S] great [C] restaurant general']
sent: ['If', 'you', 'can', ',', 'come', 'to', 'this', 'place', 'by', 'boat', 'and', 'make', 'it', 'a', 'whole', 'evening', '.']
counter: {('restaurant general', 'place', 'great', 'null'): 5}
output quads: ['[A] place [S] great [C] restaurant general']
multi_path: ['[A] place [C] restaurant general [S] great', '[A] place [S] great [C] restaurant general', '[C] restaurant general [S] great [A] place', '[C] restaurant general [A] place [S] great', '[S] great [C] restaurant general [A] place']

task, data: tasd rest16
target: [('ambience general', 'waterfront setting', 'great', 'null'), ('food quality', 'seafood', 'great', 'null'), ('food quality', 'seasonal fish', 'great', 'null')]
output: ['[A] fish [S] great [C] food quality', '[A] seafood [S] great [C] food quality', '[A] waterfront setting [S] great [C] ambience general']
sent: ['Great', 'seasonal', 'fish', 'and', 'seafood', ',', 'with', 'a', 'classy', 'waterfront', 'setting', '.']
counter: {('food quality', 'fish', 'great', 'null'): 5, ('food quality', 'seafood', 'great', 'null'): 4, ('ambience general', 'waterfront setting', 'great', 'null'): 5, ('food style_options', 'seafood', 'great', 'null'): 1}
output quads: ['[A] fish [S] great [C] food quality', '[A] seafood [S] great [C] food quality', '[A] waterfront setting [S] great [C] ambience general']
multi_path: ['[A] fish [C] food quality [S] great [SSEP] [A] seafood [C] food quality [S] great [SSEP] [A] waterfront setting [C] ambience general [S] great', '[A] fish [S] great [C] food quality [SSEP] [A] seafood [S] great [C] food quality [SSEP] [A] waterfront setting [S] great [C] ambience general', '[C] food quality [S] great [A] fish [SSEP] [C] food quality [S] great [A] seafood [SSEP] [C] ambience general [S] great [A] waterfront setting', '[C] food quality [A] fish [S] great [SSEP] [C] food quality [A] seafood [S] great [SSEP] [C] ambience general [A] waterfront setting [S] great', '[S] great [C] food quality [A] fish [SSEP] [S] great [C] food style_options [A] seafood [SSEP] [S] great [C] ambience general [A] waterfront setting']

task, data: tasd rest16
target: [('service general', 'servers', 'bad', 'null'), ('service general', 'young woman', 'bad', 'null')]
output: ['[A] servers [S] bad [C] service general']
sent: ['Prefer', 'to', 'order', 'it', 'and', 'pick', 'it', 'up', 'though', 'because', 'I', 'don', "'t", 'like', 'the', 'servers', ',', 'one', 'young', 'woman', 'in', 'particular', '.']
counter: {('service general', 'servers', 'bad', 'null'): 5}
output quads: ['[A] servers [S] bad [C] service general']
multi_path: ['[A] servers [C] service general [S] bad', '[A] servers [S] bad [C] service general', '[C] service general [S] bad [A] servers', '[C] service general [A] servers [S] bad', '[S] bad [C] service general [A] servers']

task, data: tasd rest16
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] null [S] great [C] service general']
sent: ['But', 'she', 'is', 'very', 'friendly', 'with', 'certain', 'people', ',', 'making', 'it', 'even', 'more', 'annoying', '.']
counter: {('service general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] service general']
multi_path: ['[A] it [C] service general [S] great', '[A] it [S] great [C] service general', '[C] service general [S] great [A] it', '[C] service general [A] it [S] great', '[S] great [C] service general [A] it']

task, data: tasd rest16
target: [('service general', 'management', 'bad', 'null'), ('service general', 'waitstaff', 'bad', 'null')]
output: ['[A] waitstaff [S] bad [C] service general']
sent: ['Management', 'should', 'really', 'take', 'notice', 'and', 'train', 'their', 'waitstaff', 'and', 'teach', 'them', 'some', 'proper', 'manners', '.']
counter: {('service general', 'management', 'bad', 'null'): 2, ('service general', 'waitstaff', 'bad', 'null'): 3}
output quads: ['[A] waitstaff [S] bad [C] service general']
multi_path: ['[A] management [C] service general [S] bad', '[A] management [S] bad [C] service general', '[C] service general [S] bad [A] waitstaff', '[C] service general [A] waitstaff [S] bad', '[S] bad [C] service general [A] waitstaff']

task, data: tasd rest16
target: [('restaurant miscellaneous', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] restaurant general']
sent: ['They', 'have', 'been', 'featured', 'on', 'the', 'food', 'network', 'and', 'they', 'deserve', 'it', '.']
counter: {('restaurant general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] restaurant general']
multi_path: ['[A] it [C] restaurant general [S] great', '[A] it [S] great [C] restaurant general', '[C] restaurant general [S] great [A] it', '[C] restaurant general [A] it [S] great', '[S] great [C] restaurant general [A] it']

task, data: tasd rest16
target: [('drinks quality', 'bloody mary', 'great', 'null'), ('food quality', 'food', 'great', 'null')]
output: ['[A] food [S] great [C] food quality', '[A] null [S] bad [C] food quality']
sent: ['The', 'food', 'is', 'great', 'and', 'they', 'make', 'a', 'mean', 'bloody', 'mary', '.']
counter: {('food quality', 'food', 'great', 'null'): 5, ('food quality', 'null', 'bad', 'null'): 5}
output quads: ['[A] food [S] great [C] food quality', '[A] null [S] bad [C] food quality']
multi_path: ['[A] food [C] food quality [S] great [SSEP] [A] it [C] food quality [S] bad', '[A] food [S] great [C] food quality [SSEP] [A] it [S] bad [C] food quality', '[C] food quality [S] great [A] food [SSEP] [C] food quality [S] bad [A] it', '[C] food quality [A] food [S] great [SSEP] [C] food quality [A] it [S] bad', '[S] great [C] food quality [A] food [SSEP] [S] bad [C] food quality [A] it']

task, data: tasd rest16
target: [('drinks style_options', 'null', 'great', 'null'), ('food quality', 'menu items', 'great', 'null')]
output: ['[A] menu items [S] great [C] food quality', '[A] mimosas [S] great [C] drinks quality']
sent: ['All', 'their', 'menu', 'items', 'are', 'a', 'hit', ',', 'and', 'they', 'serve', 'mimosas', '.']
counter: {('food quality', 'menu items', 'great', 'null'): 5, ('drinks quality', 'mimosas', 'great', 'null'): 5}
output quads: ['[A] menu items [S] great [C] food quality', '[A] mimosas [S] great [C] drinks quality']
multi_path: ['[A] menu items [C] food quality [S] great [SSEP] [A] mimosas [C] drinks quality [S] great', '[A] menu items [S] great [C] food quality [SSEP] [A] mimosas [S] great [C] drinks quality', '[C] food quality [S] great [A] menu items [SSEP] [C] drinks quality [S] great [A] mimosas', '[C] food quality [A] menu items [S] great [SSEP] [C] drinks quality [A] mimosas [S] great', '[S] great [C] food quality [A] menu items [SSEP] [S] great [C] drinks quality [A] mimosas']

task, data: tasd rest16
target: [('restaurant general', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] food quality']
sent: ['Doesn', "'t", 'get', 'any', 'better', 'than', 'that', '.']
counter: {('food quality', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] food quality']
multi_path: ['[A] it [C] food quality [S] great', '[A] it [S] great [C] food quality', '[C] food quality [S] great [A] it', '[C] food quality [A] it [S] great', '[S] great [C] food quality [A] it']

task, data: tasd rest16
target: [('ambience general', 'ambiance', 'great', 'null')]
output: ['[A] ambiance [S] great [C] ambience general', '[A] dinning [S] great [C] food quality']
sent: ['the', 'ambiance', 'of', 'the', 'restaurant', 'was', 'nice', 'and', 'good', 'for', 'fine', 'dinning', '.']
counter: {('ambience general', 'ambiance', 'great', 'null'): 5, ('restaurant miscellaneous', 'restaurant', 'great', 'null'): 2, ('food quality', 'dinning', 'great', 'null'): 3}
output quads: ['[A] ambiance [S] great [C] ambience general', '[A] dinning [S] great [C] food quality']
multi_path: ['[A] ambiance [C] ambience general [S] great [SSEP] [A] restaurant [C] restaurant miscellaneous [S] great', '[A] ambiance [S] great [C] ambience general [SSEP] [A] restaurant [S] great [C] restaurant miscellaneous', '[C] ambience general [S] great [A] ambiance [SSEP] [C] food quality [S] great [A] dinning', '[C] ambience general [A] ambiance [S] great [SSEP] [C] food quality [A] dinning [S] great', '[S] great [C] ambience general [A] ambiance [SSEP] [S] great [C] food quality [A] dinning']

task, data: tasd rest16
target: [('ambience general', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] food style_options']
sent: ['not', 'too', 'fine', 'thought', 'that', 'you', 'feel', 'uncomfortable', 'and', 'have', 'to', 'dress', 'up', '.']
counter: {('food style_options', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] food style_options']
multi_path: ['[A] it [C] food style_options [S] great', '[A] it [S] great [C] food style_options', '[C] food style_options [S] great [A] it', '[C] food style_options [A] it [S] great', '[S] great [C] food style_options [A] it']

task, data: tasd rest16
target: [('service general', 'null', 'great', 'null')]
output: ['[A] food [S] great [C] food quality', '[A] null [S] bad [C] service general']
sent: ['First', 'off', ',', 'the', 'food', 'came', 'fast', 'and', 'all', 'together', ':', ')', 'i', 'like', 'that', '.', '.', '.', 'i', 'hate', 'the', 'pretentiousness', 'of', 'things', 'coming', 'in', 'one', 'after', 'the', 'other', '.']
counter: {('food quality', 'food', 'great', 'null'): 5, ('food style_options', 'food', 'great', 'null'): 2, ('service general', 'null', 'bad', 'null'): 3}
output quads: ['[A] food [S] great [C] food quality', '[A] null [S] bad [C] service general']
multi_path: ['[A] food [C] food quality [S] great [SSEP] [A] food [C] food style_options [S] great', '[A] food [S] great [C] food quality [SSEP] [A] food [S] great [C] food style_options', '[C] food quality [S] great [A] food [SSEP] [C] service general [S] bad [A] it', '[C] food quality [A] food [S] great [SSEP] [C] service general [A] it [S] bad', '[S] great [C] food quality [A] food [SSEP] [S] bad [C] service general [A] it']

task, data: tasd rest16
target: [('food quality', 'brocolli', 'great', 'null'), ('food quality', 'prawns', 'great', 'null'), ('food quality', 'scallops', 'great', 'null')]
output: ['[A] brocolli [S] great [C] food quality', '[A] prawns [S] great [C] food quality', '[A] scallops [S] great [C] food style_options']
sent: ['i', 'would', 'normally', 'not', 'finish', 'the', 'brocolli', 'when', 'i', 'order', 'these', 'kinds', 'of', 'food', 'but', 'for', 'the', 'first', 'time', ',', 'every', 'piece', 'was', 'as', 'eventful', 'as', 'the', 'first', 'one', '.', '.', '.', 'the', 'scallops', 'and', 'prawns', 'was', 'so', 'fresh', 'and', 'nicely', 'cooked', '.']
counter: {('food quality', 'brocolli', 'great', 'null'): 5, ('food quality', 'scallops', 'great', 'null'): 2, ('food quality', 'prawns', 'great', 'null'): 5, ('food style_options', 'scallops', 'great', 'null'): 3}
output quads: ['[A] brocolli [S] great [C] food quality', '[A] prawns [S] great [C] food quality', '[A] scallops [S] great [C] food style_options']
multi_path: ['[A] brocolli [C] food quality [S] great [SSEP] [A] scallops [C] food quality [S] great [SSEP] [A] prawns [C] food quality [S] great', '[A] brocolli [S] great [C] food quality [SSEP] [A] scallops [S] great [C] food quality [SSEP] [A] prawns [S] great [C] food quality', '[C] food quality [S] great [A] brocolli [SSEP] [C] food style_options [S] great [A] scallops [SSEP] [C] food quality [S] great [A] prawns', '[C] food quality [A] brocolli [S] great [SSEP] [C] food style_options [A] scallops [S] great [SSEP] [C] food quality [A] prawns [S] great', '[S] great [C] food quality [A] brocolli [SSEP] [S] great [C] food style_options [A] scallops [SSEP] [S] great [C] food quality [A] prawns']

task, data: tasd rest16
target: [('food prices', 'sushi', 'bad', 'null'), ('food quality', 'sushi', 'great', 'null'), ('food style_options', 'sushi', 'bad', 'null'), ('restaurant prices', 'restaurant', 'bad', 'null')]
output: ['[A] fish [S] bad [C] food style_options', '[A] restaurant [S] bad [C] restaurant prices', '[A] sushi [S] great [C] food quality']
sent: ['–', 'The', 'sushi', 'here', 'is', 'perfectly', 'good', ',', 'but', 'for', '$5', 'a', 'piece', ',', 'either', 'the', 'slices', 'of', 'fish', 'should', 'be', 'larger', ',', 'or', 'there', 'should', 'be', 'no', 'pretense', 'that', 'this', 'is', 'a', 'moderately', 'priced', 'restaurant', '(even', 'for', 'NYC', ')', '.']
counter: {('food quality', 'sushi', 'great', 'null'): 5, ('food style_options', 'sushi', 'bad', 'null'): 2, ('food prices', 'sushi', 'bad', 'null'): 2, ('food style_options', 'fish', 'bad', 'null'): 3, ('restaurant prices', 'restaurant', 'bad', 'null'): 3}
output quads: ['[A] sushi [S] great [C] food quality', '[A] fish [S] bad [C] food style_options', '[A] restaurant [S] bad [C] restaurant prices']
multi_path: ['[A] sushi [C] food quality [S] great [SSEP] [A] sushi [C] food style_options [S] bad [SSEP] [A] sushi [C] food prices [S] bad', '[A] sushi [S] great [C] food quality [SSEP] [A] sushi [S] bad [C] food style_options [SSEP] [A] sushi [S] bad [C] food prices', '[C] food quality [S] great [A] sushi [SSEP] [C] food style_options [S] bad [A] fish [SSEP] [C] restaurant prices [S] bad [A] restaurant', '[C] food quality [A] sushi [S] great [SSEP] [C] food style_options [A] fish [S] bad [SSEP] [C] restaurant prices [A] restaurant [S] bad', '[S] great [C] food quality [A] sushi [SSEP] [S] bad [C] food style_options [A] fish [SSEP] [S] bad [C] restaurant prices [A] restaurant']

task, data: tasd rest16
target: [('food style_options', 'null', 'bad', 'null'), ('restaurant prices', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] food prices']
sent: ['We', 'easily', 'spent', 'more', 'than', '$40', 'per', 'person', '(not', 'including', 'alcohol', ')', 'and', 'were', 'still', 'hungry', '.']
counter: {('food prices', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] food prices']
multi_path: ['[A] it [C] food prices [S] bad', '[A] it [S] bad [C] food prices', '[C] food prices [S] bad [A] it', '[C] food prices [A] it [S] bad', '[S] bad [C] food prices [A] it']

task, data: tasd rest16
target: [('restaurant prices', 'restaurant', 'bad', 'null')]
output: ['[A] restaurant [S] great [C] restaurant prices']
sent: ['I', "'m", 'astonished', 'that', 'this', 'restaurant', 'is', 'categorized', 'as', '$', '$', '$', 'rather', 'than', '$', '$', '$', '$', '.']
counter: {('restaurant prices', 'restaurant', 'great', 'null'): 5}
output quads: ['[A] restaurant [S] great [C] restaurant prices']
multi_path: ['[A] restaurant [C] restaurant prices [S] great', '[A] restaurant [S] great [C] restaurant prices', '[C] restaurant prices [S] great [A] restaurant', '[C] restaurant prices [A] restaurant [S] great', '[S] great [C] restaurant prices [A] restaurant']

task, data: tasd rest16
target: [('food quality', 'food', 'ok', 'null'), ('restaurant prices', 'null', 'bad', 'null'), ('service general', 'service', 'bad', 'null')]
output: ['[A] food [S] bad [C] food prices', '[A] food [S] ok [C] food quality', '[A] service [S] bad [C] service general']
sent: ['Terrible', 'service', ',', 'food', 'ok', ',', 'pricey']
counter: {('service general', 'service', 'bad', 'null'): 5, ('food quality', 'food', 'ok', 'null'): 5, ('food prices', 'food', 'bad', 'null'): 5, ('restaurant prices', 'null', 'bad', 'null'): 1}
output quads: ['[A] service [S] bad [C] service general', '[A] food [S] ok [C] food quality', '[A] food [S] bad [C] food prices']
multi_path: ['[A] service [C] service general [S] bad [SSEP] [A] food [C] food quality [S] ok [SSEP] [A] food [C] food prices [S] bad', '[A] service [S] bad [C] service general [SSEP] [A] food [S] ok [C] food quality [SSEP] [A] food [S] bad [C] food prices [SSEP] [A] it [S] bad [C] restaurant prices', '[C] service general [S] bad [A] service [SSEP] [C] food quality [S] ok [A] food [SSEP] [C] food prices [S] bad [A] food', '[C] service general [A] service [S] bad [SSEP] [C] food quality [A] food [S] ok [SSEP] [C] food prices [A] food [S] bad', '[S] bad [C] service general [A] service [SSEP] [S] ok [C] food quality [A] food [SSEP] [S] bad [C] food prices [A] food']

task, data: tasd rest16
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] tables [S] great [C] service general']
sent: ['We', 'went', 'back', 'to', 'the', 'restaurant', 'and', 'low', 'and', 'behold', ',', 'we', 'were', 'seated', 'at', 'one', 'of', 'the', 'tables', 'that', 'was', 'available', '30', 'minutes', 'ago', '!', '!']
counter: {('service general', 'tables', 'great', 'null'): 4, ('restaurant general', 'tables', 'great', 'null'): 1}
output quads: ['[A] tables [S] great [C] service general']
multi_path: ['[A] tables [C] service general [S] great', '[A] tables [S] great [C] restaurant general', '[C] service general [S] great [A] tables', '[C] service general [A] tables [S] great', '[S] great [C] service general [A] tables']

task, data: tasd rest16
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] restaurant general']
sent: ['None', 'that', 'I', 'can', 'think', 'of', '.']
counter: {('restaurant general', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] restaurant general']
multi_path: ['[A] it [C] restaurant general [S] bad', '[A] it [S] bad [C] restaurant general', '[C] restaurant general [S] bad [A] it', '[C] restaurant general [A] it [S] bad', '[S] bad [C] restaurant general [A] it']

task, data: tasd rest16
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] food [S] bad [C] food quality', '[A] null [S] bad [C] service general']
sent: ['We', 'put', 'in', 'our', 'order', 'and', 'although', 'we', 'ordered', '4', 'appetizers', ',', 'the', 'food', 'didn', "'t", 'arrive', 'until', '45', 'minutes', 'later', '.', '.', '.WITH', 'OUR', 'MAIN', 'COURSE', '.']
counter: {('food quality', 'food', 'bad', 'null'): 5, ('service general', 'null', 'bad', 'null'): 5}
output quads: ['[A] food [S] bad [C] food quality', '[A] null [S] bad [C] service general']
multi_path: ['[A] food [C] food quality [S] bad [SSEP] [A] it [C] service general [S] bad', '[A] food [S] bad [C] food quality [SSEP] [A] it [S] bad [C] service general', '[C] food quality [S] bad [A] food [SSEP] [C] service general [S] bad [A] it', '[C] food quality [A] food [S] bad [SSEP] [C] service general [A] it [S] bad', '[S] bad [C] food quality [A] food [SSEP] [S] bad [C] service general [A] it']

task, data: tasd rest16
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] appetizers [S] ok [C] food style_options']
sent: ['Um', 'so', 'now', 'what', 'are', 'appetizers', 'for', '?', '?', '?']
counter: {('food style_options', 'appetizers', 'ok', 'null'): 5}
output quads: ['[A] appetizers [S] ok [C] food style_options']
multi_path: ['[A] appetizers [C] food style_options [S] ok', '[A] appetizers [S] ok [C] food style_options', '[C] food style_options [S] ok [A] appetizers', '[C] food style_options [A] appetizers [S] ok', '[S] ok [C] food style_options [A] appetizers']

task, data: tasd rest16
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] bread service [S] bad [C] service general']
sent: ['Oh', 'I', 'forgot', 'to', 'mention', 'that', 'they', 'don', "'t", 'have', 'bread', 'service', '.']
counter: {('service general', 'bread service', 'bad', 'null'): 5}
output quads: ['[A] bread service [S] bad [C] service general']
multi_path: ['[A] bread service [C] service general [S] bad', '[A] bread service [S] bad [C] service general', '[C] service general [S] bad [A] bread service', '[C] service general [A] bread service [S] bad', '[S] bad [C] service general [A] bread service']

task, data: tasd rest16
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] teapot of hot water [S] bad [C] food quality']
sent: ['My', 'wife', 'also', 'ordered', 'a', 'teapot', 'of', 'hot', 'water', '(she', 'had', 'a', 'sore', 'throat', ')', 'and', 'I', 'guess', 'that', 'since', 'it', 'was', 'only', 'water', ',', 'it', 'wasn', "'t", 'a', 'priority', 'for', 'them', 'to', 'actually', 'bring', 'it', '.']
counter: {('drinks quality', 'teapot of hot water', 'bad', 'null'): 2, ('food quality', 'teapot of hot water', 'bad', 'null'): 3}
output quads: ['[A] teapot of hot water [S] bad [C] food quality']
multi_path: ['[A] teapot of hot water [C] drinks quality [S] bad', '[A] teapot of hot water [S] bad [C] drinks quality', '[C] food quality [S] bad [A] teapot of hot water', '[C] food quality [A] teapot of hot water [S] bad', '[S] bad [C] food quality [A] teapot of hot water']

task, data: tasd rest16
target: [('service general', 'service', 'bad', 'null')]
output: ['[A] null [S] bad [C] service general']
sent: ['In', 'other', 'words', ',', 'if', 'they', 'aren', "'t", 'making', '$', '$', 'off', 'of', 'you', 'then', 'you', 'don', "'t", 'rate', 'high', 'on', 'their', "'service", 'scale', "'", '.']
counter: {('service general', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] service general']
multi_path: ['[A] it [C] service general [S] bad', '[A] it [S] bad [C] service general', '[C] service general [S] bad [A] it', '[C] service general [A] it [S] bad', '[S] bad [C] service general [A] it']

task, data: tasd rest16
target: [('ambience general', 'restaurant', 'ok', 'null'), ('food quality', 'food', 'ok', 'null'), ('restaurant prices', 'restaurant', 'bad', 'null')]
output: ['[A] food [S] bad [C] food prices', '[A] food [S] ok [C] food quality']
sent: ['Food', 'wise', ',', 'its', 'ok', 'but', 'a', 'bit', 'pricey', 'for', 'what', 'you', 'get', 'considering', 'the', 'restaurant', 'isn', "'t", 'a', 'fancy', 'place', '.']
counter: {('food quality', 'food', 'ok', 'null'): 5, ('food prices', 'food', 'bad', 'null'): 5}
output quads: ['[A] food [S] ok [C] food quality', '[A] food [S] bad [C] food prices']
multi_path: ['[A] food [C] food quality [S] ok [SSEP] [A] food [C] food prices [S] bad', '[A] food [S] ok [C] food quality [SSEP] [A] food [S] bad [C] food prices', '[C] food quality [S] ok [A] food [SSEP] [C] food prices [S] bad [A] food', '[C] food quality [A] food [S] ok [SSEP] [C] food prices [A] food [S] bad', '[S] ok [C] food quality [A] food [SSEP] [S] bad [C] food prices [A] food']

task, data: tasd rest16
target: [('location general', 'location', 'great', 'null')]
output: ['[A] null [S] ok [C] location general']
sent: ['If', 'I', 'needed', 'to', 'name', 'some', 'they', 'would', 'include', 'the', 'location', 'to', 'the', 'beach', 'or', 'Golden', 'Gate', 'park', '.']
counter: {('restaurant miscellaneous', 'null', 'ok', 'null'): 2, ('location general', 'null', 'ok', 'null'): 3}
output quads: ['[A] null [S] ok [C] location general']
multi_path: ['[A] it [C] restaurant miscellaneous [S] ok', '[A] it [S] ok [C] restaurant miscellaneous', '[C] location general [S] ok [A] it', '[C] location general [A] it [S] ok', '[S] ok [C] location general [A] it']

task, data: tasd rest16
target: [('location general', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] restaurant general']
sent: ['Its', 'great', 'if', 'you', 'spent', 'the', 'day', 'there', 'and', 'didn', "'t", 'want', 'to', 'drive', 'to', 'eat', '.']
counter: {('restaurant general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] restaurant general']
multi_path: ['[A] it [C] restaurant general [S] great', '[A] it [S] great [C] restaurant general', '[C] restaurant general [S] great [A] it', '[C] restaurant general [A] it [S] great', '[S] great [C] restaurant general [A] it']

task, data: tasd rest16
target: [('restaurant miscellaneous', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] restaurant miscellaneous', '[A] parking [S] great [C] location general']
sent: ['Parking', 'is', 'reasonably', 'good', ',', 'they', 'have', 'their', 'own', 'lot', 'and', 'you', 'can', 'park', 'in', 'the', 'park', 'nearby', '.']
counter: {('location general', 'parking', 'great', 'null'): 5, ('restaurant miscellaneous', 'null', 'great', 'null'): 5}
output quads: ['[A] parking [S] great [C] location general', '[A] null [S] great [C] restaurant miscellaneous']
multi_path: ['[A] parking [C] location general [S] great [SSEP] [A] it [C] restaurant miscellaneous [S] great', '[A] parking [S] great [C] location general [SSEP] [A] it [S] great [C] restaurant miscellaneous', '[C] location general [S] great [A] parking [SSEP] [C] restaurant miscellaneous [S] great [A] it', '[C] location general [A] parking [S] great [SSEP] [C] restaurant miscellaneous [A] it [S] great', '[S] great [C] location general [A] parking [SSEP] [S] great [C] restaurant miscellaneous [A] it']

task, data: tasd rest16
target: [('ambience general', 'feel', 'great', 'null'), ('ambience general', 'glass walls', 'great', 'null')]
output: ['[A] restaurant [S] great [C] ambience general']
sent: ['Another', 'plus', 'is', 'the', 'open', 'feel', 'of', 'the', 'restaurant', 'with', 'glass', 'walls', 'on', 'all', 'sides', '.']
counter: {('ambience general', 'restaurant', 'great', 'null'): 5}
output quads: ['[A] restaurant [S] great [C] ambience general']
multi_path: ['[A] restaurant [C] ambience general [S] great', '[A] restaurant [S] great [C] ambience general', '[C] ambience general [S] great [A] restaurant', '[C] ambience general [A] restaurant [S] great', '[S] great [C] ambience general [A] restaurant']

task, data: tasd rest16
target: [('restaurant general', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] food quality']
sent: ['Always', 'good', '.']
counter: {('food quality', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] food quality']
multi_path: ['[A] it [C] food quality [S] great', '[A] it [S] great [C] food quality', '[C] food quality [S] great [A] it', '[C] food quality [A] it [S] great', '[S] great [C] food quality [A] it']

task, data: tasd rest16
target: [('food quality', 'box sushi', 'great', 'null'), ('food quality', 'eel with avodcao', 'great', 'null'), ('food quality', 'spanish mackeral special appetizer', 'great', 'null')]
output: ['[A] box sushi [S] great [C] food quality', '[A] spanish mackeral special appetizer [S] great [C] food quality']
sent: ['Amazing', 'Spanish', 'Mackeral', 'special', 'appetizer', 'and', 'perfect', 'box', 'sushi', '(that', 'eel', 'with', 'avodcao', '--', 'um', 'um', 'um', ')', '.']
counter: {('food quality', 'spanish mackeral special appetizer', 'great', 'null'): 5, ('food quality', 'box sushi', 'great', 'null'): 5}
output quads: ['[A] spanish mackeral special appetizer [S] great [C] food quality', '[A] box sushi [S] great [C] food quality']
multi_path: ['[A] spanish mackeral special appetizer [C] food quality [S] great [SSEP] [A] box sushi [C] food quality [S] great', '[A] spanish mackeral special appetizer [S] great [C] food quality [SSEP] [A] box sushi [S] great [C] food quality', '[C] food quality [S] great [A] spanish mackeral special appetizer [SSEP] [C] food quality [S] great [A] box sushi', '[C] food quality [A] spanish mackeral special appetizer [S] great [SSEP] [C] food quality [A] box sushi [S] great', '[S] great [C] food quality [A] spanish mackeral special appetizer [SSEP] [S] great [C] food quality [A] box sushi']

task, data: tasd rest16
target: [('drinks style_options', 'selection of sakes', 'great', 'null')]
output: ['[A] sakes [S] great [C] drinks style_options']
sent: ['Great', 'selection', 'of', 'sakes', '.']
counter: {('drinks style_options', 'sakes', 'great', 'null'): 5}
output quads: ['[A] sakes [S] great [C] drinks style_options']
multi_path: ['[A] sakes [C] drinks style_options [S] great', '[A] sakes [S] great [C] drinks style_options', '[C] drinks style_options [S] great [A] sakes', '[C] drinks style_options [A] sakes [S] great', '[S] great [C] drinks style_options [A] sakes']

task, data: tasd rest16
target: [('food prices', 'sushi', 'ok', 'null'), ('food quality', 'sushi', 'great', 'null')]
output: ['[A] sushi [S] great [C] food prices', '[A] sushi [S] ok [C] food quality']
sent: ['It', 'isn', "'t", 'the', 'cheapest', 'sushi', 'but', 'has', 'been', 'worth', 'it', 'every', 'time', '.']
counter: {('food quality', 'sushi', 'ok', 'null'): 4, ('food prices', 'sushi', 'great', 'null'): 4, ('food prices', 'sushi', 'ok', 'null'): 1, ('food quality', 'sushi', 'great', 'null'): 1}
output quads: ['[A] sushi [S] ok [C] food quality', '[A] sushi [S] great [C] food prices']
multi_path: ['[A] sushi [C] food quality [S] ok [SSEP] [A] sushi [C] food prices [S] great', '[A] sushi [S] ok [C] food quality [SSEP] [A] sushi [S] great [C] food prices', '[C] food quality [S] ok [A] sushi [SSEP] [C] food prices [S] great [A] sushi', '[C] food quality [A] sushi [S] ok [SSEP] [C] food prices [A] sushi [S] great', '[S] ok [C] food prices [A] sushi [SSEP] [S] great [C] food quality [A] sushi']

task, data: tasd rest16
target: [('food quality', 'food', 'ok', 'null'), ('location general', 'location along the marina in long beach', 'great', 'null'), ('service general', 'customer service', 'bad', 'null')]
output: ['[A] customer service [S] bad [C] service general', '[A] food [S] ok [C] food quality', '[A] location [S] great [C] location general']
sent: ['–', 'Schooner', 'or', 'Later', "'s", 'charming', 'location', 'along', 'the', 'marina', 'in', 'Long', 'Beach', 'and', 'average', 'food', 'does', 'not', ',', 'unfortunately', ',', 'compensate', 'for', 'its', 'very', 'poor', 'customer', 'service', '.']
counter: {('location general', 'location', 'great', 'null'): 5, ('food quality', 'food', 'ok', 'null'): 5, ('service general', 'customer service', 'bad', 'null'): 5}
output quads: ['[A] location [S] great [C] location general', '[A] food [S] ok [C] food quality', '[A] customer service [S] bad [C] service general']
multi_path: ['[A] location [C] location general [S] great [SSEP] [A] food [C] food quality [S] ok [SSEP] [A] customer service [C] service general [S] bad', '[A] location [S] great [C] location general [SSEP] [A] food [S] ok [C] food quality [SSEP] [A] customer service [S] bad [C] service general', '[C] location general [S] great [A] location [SSEP] [C] food quality [S] ok [A] food [SSEP] [C] service general [S] bad [A] customer service', '[C] location general [A] location [S] great [SSEP] [C] food quality [A] food [S] ok [SSEP] [C] service general [A] customer service [S] bad', '[S] great [C] location general [A] location [SSEP] [S] ok [C] food quality [A] food [SSEP] [S] bad [C] service general [A] customer service']

task, data: tasd rest16
target: [('food quality', 'food', 'great', 'null'), ('service general', 'restaurant staff', 'bad', 'null')]
output: ['[A] food [S] great [C] food quality', '[A] staff [S] bad [C] service general']
sent: ['While', 'this', 'diner', 'had', 'reasonably', 'good', 'food', ',', 'the', 'restaurant', 'staff', 'seemed', 'completely', 'indifferent', 'to', 'our', 'presence', ',', 'and', 'this', 'attitude', 'was', 'reflected', 'in', 'the', 'lack', 'of', 'service', '.']
counter: {('food quality', 'food', 'great', 'null'): 5, ('service general', 'staff', 'bad', 'null'): 5}
output quads: ['[A] food [S] great [C] food quality', '[A] staff [S] bad [C] service general']
multi_path: ['[A] food [C] food quality [S] great [SSEP] [A] staff [C] service general [S] bad', '[A] food [S] great [C] food quality [SSEP] [A] staff [S] bad [C] service general', '[C] food quality [S] great [A] food [SSEP] [C] service general [S] bad [A] staff', '[C] food quality [A] food [S] great [SSEP] [C] service general [A] staff [S] bad', '[S] great [C] food quality [A] food [SSEP] [S] bad [C] service general [A] staff']

task, data: tasd rest16
target: [('service general', 'null', 'bad', 'null')]
output: []
sent: ['As', 'part', 'of', 'a', 'small', 'party', 'of', 'four', ',', 'our', 'food', 'was', 'dropped', 'off', 'without', 'comment', ';']
counter: {('food quality', 'food', 'bad', 'null'): 2, ('service general', 'null', 'ok', 'null'): 1, ('service general', 'food', 'bad', 'null'): 1, ('service general', 'null', 'bad', 'null'): 2}
output quads: []
multi_path: ['[A] food [C] food quality [S] bad [SSEP] [A] it [C] service general [S] ok', '[A] food [S] bad [C] food quality', '[C] service general [S] bad [A] food', '[C] service general [A] it [S] bad', '[S] bad [C] service general [A] it']

task, data: tasd rest16
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] null [S] great [C] service general']
sent: ['any', 'further', 'needs', 'we', 'may', 'have', 'had', 'could', 'not', 'have', 'been', 'met', 'since', 'no', 'one', 'stopped', 'by', 'the', 'table', '.']
counter: {('service general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] service general']
multi_path: ['[A] it [C] service general [S] great', '[A] it [S] great [C] service general', '[C] service general [S] great [A] it', '[C] service general [A] it [S] great', '[S] great [C] service general [A] it']

task, data: tasd rest16
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] person [S] bad [C] service general']
sent: ['When', 'we', 'finally', 'were', 'able', 'to', 'flag', 'someone', 'down', ',', 'it', 'was', 'someone', 'entirely', 'different', 'from', 'the', 'person', 'who', 'had', 'dropped', 'off', 'the', 'food', ',', 'who', 'was', 'also', 'not', 'the', 'same', 'person', 'who', 'had', 'taken', 'our', 'order', '.']
counter: {('service general', 'person', 'bad', 'null'): 4, ('service general', 'null', 'bad', 'null'): 1}
output quads: ['[A] person [S] bad [C] service general']
multi_path: ['[A] person [C] service general [S] bad', '[A] person [S] bad [C] service general', '[C] service general [S] bad [A] person', '[C] service general [A] it [S] bad', '[S] bad [C] service general [A] person']

task, data: tasd rest16
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] waitress [S] bad [C] service general']
sent: ['She', 'promised', 'to', 'speak', 'to', 'the', 'waitress', 'who', 'had', 'flown', 'off', 'in', 'a', 'rage', ',', 'but', 'we', 'could', 'hardly', 'take', 'her', 'promise', 'seriously', ',', 'seeing', 'as', 'she', 'hadn', "'t", 'bothered', 'to', 'get', 'the', 'waitresses', 'name', '.']
counter: {('service general', 'waitress', 'bad', 'null'): 5}
output quads: ['[A] waitress [S] bad [C] service general']
multi_path: ['[A] waitress [C] service general [S] bad', '[A] waitress [S] bad [C] service general', '[C] service general [S] bad [A] waitress', '[C] service general [A] waitress [S] bad', '[S] bad [C] service general [A] waitress']

task, data: tasd rest16
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] null [S] great [C] restaurant general']
sent: ['In', 'short', ',', 'Schooner', 'or', 'Later', 'couldn', "'t", 'have', 'cared', 'less', 'about', 'our', 'being', 'at', 'their', 'establishment', '.']
counter: {('restaurant general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] restaurant general']
multi_path: ['[A] it [C] restaurant general [S] great', '[A] it [S] great [C] restaurant general', '[C] restaurant general [S] great [A] it', '[C] restaurant general [A] it [S] great', '[S] great [C] restaurant general [A] it']

task, data: tasd rest16
target: [('food quality', 'sushi', 'great', 'null')]
output: ['[A] place [S] great [C] restaurant miscellaneous']
sent: ['you', 'are', 'with', 'a', 'hot', 'date', 'and', 'he', '/she', 'has', 'an', 'urge', 'for', 'sushi', '.', '.', '.then', 'this', 'might', 'be', 'the', 'place', '.']
counter: {('restaurant miscellaneous', 'place', 'great', 'null'): 5}
output quads: ['[A] place [S] great [C] restaurant miscellaneous']
multi_path: ['[A] place [C] restaurant miscellaneous [S] great', '[A] place [S] great [C] restaurant miscellaneous', '[C] restaurant miscellaneous [S] great [A] place', '[C] restaurant miscellaneous [A] place [S] great', '[S] great [C] restaurant miscellaneous [A] place']

task, data: tasd rest16
target: [('food prices', 'null', 'ok', 'null'), ('food style_options', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] food prices', '[A] null [S] great [C] food style_options', '[A] null [S] great [C] service general']
sent: ['And', 'they', 'give', 'good', 'quantity', 'for', 'the', 'price', '.']
counter: {('service general', 'null', 'great', 'null'): 5, ('food style_options', 'null', 'great', 'null'): 5, ('food prices', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] service general', '[A] null [S] great [C] food style_options', '[A] null [S] great [C] food prices']
multi_path: ['[A] it [C] service general [S] great [SSEP] [A] it [C] food style_options [S] great [SSEP] [A] it [C] food prices [S] great', '[A] it [S] great [C] service general [SSEP] [A] it [S] great [C] food style_options [SSEP] [A] it [S] great [C] food prices', '[C] service general [S] great [A] it [SSEP] [C] food style_options [S] great [A] it [SSEP] [C] food prices [S] great [A] it', '[C] service general [A] it [S] great [SSEP] [C] food style_options [A] it [S] great [SSEP] [C] food prices [A] it [S] great', '[S] great [C] service general [A] it [SSEP] [S] great [C] food style_options [A] it [SSEP] [S] great [C] food prices [A] it']

task, data: tasd rest16
target: [('food style_options', 'dungeness crabs', 'great', 'null')]
output: ['[A] dungeness crabs [S] great [C] food quality', '[A] dungeness crabs [S] great [C] food style_options']
sent: ['I', 'love', 'Dungeness', 'crabs', 'and', 'at', 'Ray', "'s", 'you', 'can', 'get', 'them', 'served', 'in', 'about', '6', 'different', 'ways', '!']
counter: {('food quality', 'dungeness crabs', 'great', 'null'): 5, ('food style_options', "ray's", 'great', 'null'): 2, ('food style_options', 'dungeness crabs', 'great', 'null'): 3}
output quads: ['[A] dungeness crabs [S] great [C] food quality', '[A] dungeness crabs [S] great [C] food style_options']
multi_path: ["[A] dungeness crabs [C] food quality [S] great [SSEP] [A] ray's [C] food style_options [S] great", "[A] dungeness crabs [S] great [C] food quality [SSEP] [A] ray's [S] great [C] food style_options", '[C] food quality [S] great [A] dungeness crabs [SSEP] [C] food style_options [S] great [A] dungeness crabs', '[C] food quality [A] dungeness crabs [S] great [SSEP] [C] food style_options [A] dungeness crabs [S] great', '[S] great [C] food quality [A] dungeness crabs [SSEP] [S] great [C] food style_options [A] dungeness crabs']

task, data: tasd rest16
target: [('food quality', 'black cod in sake kasu', 'great', 'null')]
output: ['[A] black cod in sake kasu [S] great [C] food quality', '[A] family platter [S] great [C] food quality']
sent: ['We', 'shared', 'the', 'family', 'platter', 'and', 'I', 'especially', 'enjoyed', 'the', 'black', 'cod', 'in', 'sake', 'kasu', '.']
counter: {('food quality', 'family platter', 'great', 'null'): 3, ('food quality', 'black cod in sake kasu', 'great', 'null'): 5}
output quads: ['[A] family platter [S] great [C] food quality', '[A] black cod in sake kasu [S] great [C] food quality']
multi_path: ['[A] family platter [C] food quality [S] great [SSEP] [A] black cod in sake kasu [C] food quality [S] great', '[A] family platter [S] great [C] food quality [SSEP] [A] black cod in sake kasu [S] great [C] food quality', '[C] food quality [S] great [A] black cod in sake kasu', '[C] food quality [A] black cod in sake kasu [S] great', '[S] great [C] food quality [A] family platter [SSEP] [S] great [C] food quality [A] black cod in sake kasu']

task, data: tasd rest16
target: [('food quality', 'dessert of a port and chocolate tasting', 'great', 'null')]
output: ['[A] dessert [S] great [C] food quality']
sent: ['I', 'ended', 'the', 'meal', 'with', 'the', 'unusual', 'dessert', 'of', 'a', 'port', 'and', 'chocolate', 'tasting', '.', '.', '.', '.yummy', '!']
counter: {('food quality', 'dessert', 'great', 'null'): 5}
output quads: ['[A] dessert [S] great [C] food quality']
multi_path: ['[A] dessert [C] food quality [S] great', '[A] dessert [S] great [C] food quality', '[C] food quality [S] great [A] dessert', '[C] food quality [A] dessert [S] great', '[S] great [C] food quality [A] dessert']

task, data: tasd rest16
target: [('drinks quality', 'coffee', 'great', 'null'), ('drinks quality', 'drinks', 'great', 'null'), ('food quality', 'b fast burritos', 'great', 'null'), ('food quality', 'corn beef hash', 'great', 'null'), ('food style_options', 'menu', 'great', 'null')]
output: ['[A] burritos [S] great [C] food quality', '[A] coffee [S] great [C] drinks quality', '[A] corn beef hash [S] great [C] food quality', '[A] drinks [S] great [C] drinks quality', '[A] menu [S] great [C] food style_options']
sent: ['–', 'Great', 'drinks', ',', 'corn', 'beef', 'hash', ',', 'coffee', ',', 'B', 'Fast', 'burritos', ',', 'Gluten', 'Free', 'menu', '.']
counter: {('drinks quality', 'drinks', 'great', 'null'): 5, ('food quality', 'corn beef hash', 'great', 'null'): 5, ('drinks quality', 'coffee', 'great', 'null'): 5, ('food quality', 'b fast burritos', 'great', 'null'): 2, ('food style_options', 'menu', 'great', 'null'): 5, ('food quality', 'burritos', 'great', 'null'): 3}
output quads: ['[A] drinks [S] great [C] drinks quality', '[A] corn beef hash [S] great [C] food quality', '[A] coffee [S] great [C] drinks quality', '[A] menu [S] great [C] food style_options', '[A] burritos [S] great [C] food quality']
multi_path: ['[A] drinks [C] drinks quality [S] great [SSEP] [A] corn beef hash [C] food quality [S] great [SSEP] [A] coffee [C] drinks quality [S] great [SSEP] [A] b fast burritos [C] food quality [S] great [SSEP] [A] menu [C] food style_options [S] great', '[A] drinks [S] great [C] drinks quality [SSEP] [A] corn beef hash [S] great [C] food quality [SSEP] [A] coffee [S] great [C] drinks quality [SSEP] [A] b fast burritos [S] great [C] food quality [SSEP] [A] menu [S] great [C] food style_options', '[C] drinks quality [S] great [A] drinks [SSEP] [C] food quality [S] great [A] corn beef hash [SSEP] [C] drinks quality [S] great [A] coffee [SSEP] [C] food quality [S] great [A] burritos [SSEP] [C] food style_options [S] great [A] menu', '[C] drinks quality [A] drinks [S] great [SSEP] [C] food quality [A] corn beef hash [S] great [SSEP] [C] drinks quality [A] coffee [S] great [SSEP] [C] food quality [A] burritos [S] great [SSEP] [C] food style_options [A] menu [S] great', '[S] great [C] drinks quality [A] drinks [SSEP] [S] great [C] food quality [A] corn beef hash [SSEP] [S] great [C] drinks quality [A] coffee [SSEP] [S] great [C] food quality [A] burritos [SSEP] [S] great [C] food style_options [A] menu']

task, data: tasd rest16
target: [('restaurant general', 'place', 'great', 'null'), ('service general', 'service', 'great', 'null')]
output: ['[A] place [S] great [C] ambience general', '[A] service [S] great [C] service general']
sent: ['The', 'service', 'is', 'fantastic', 'at', 'this', 'fun', 'place', '.']
counter: {('service general', 'service', 'great', 'null'): 5, ('ambience general', 'place', 'great', 'null'): 5}
output quads: ['[A] service [S] great [C] service general', '[A] place [S] great [C] ambience general']
multi_path: ['[A] service [C] service general [S] great [SSEP] [A] place [C] ambience general [S] great', '[A] service [S] great [C] service general [SSEP] [A] place [S] great [C] ambience general', '[C] service general [S] great [A] service [SSEP] [C] ambience general [S] great [A] place', '[C] service general [A] service [S] great [SSEP] [C] ambience general [A] place [S] great', '[S] great [C] service general [A] service [SSEP] [S] great [C] ambience general [A] place']

task, data: tasd rest16
target: [('restaurant general', 'place', 'great', 'null')]
output: ['[A] null [S] great [C] service general']
sent: ['If', 'there', 'is', 'a', 'line', 'very', 'day', 'of', 'the', 'week', 'for', 'the', 'entire', 'time', 'a', 'place', 'is', 'open', ',', 'you', 'know', 'it', 'is', 'great', '.']
counter: {('service general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] service general']
multi_path: ['[A] it [C] service general [S] great', '[A] it [S] great [C] service general', '[C] service general [S] great [A] it', '[C] service general [A] it [S] great', '[S] great [C] service general [A] it']

task, data: tasd rest16
target: [('restaurant general', 'standby', 'great', 'null')]
output: ['[A] null [S] great [C] restaurant general']
sent: ['Best', 'Neighborhood', 'Standby', '.']
counter: {('restaurant general', 'neighborhood standby', 'great', 'null'): 1, ('restaurant general', 'standby', 'great', 'null'): 1, ('restaurant general', 'null', 'great', 'null'): 3}
output quads: ['[A] null [S] great [C] restaurant general']
multi_path: ['[A] neighborhood standby [C] restaurant general [S] great', '[A] standby [S] great [C] restaurant general', '[C] restaurant general [S] great [A] it', '[C] restaurant general [A] it [S] great', '[S] great [C] restaurant general [A] it']

task, data: tasd rest16
target: [('ambience general', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] restaurant general']
sent: ['Seriously', ',', 'you', 'can', "'t", 'go', 'wrong', ',', 'if', 'it', 'is', 'unpretentious', 'local', 'fun', 'you', 'seek', '.']
counter: {('restaurant general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] restaurant general']
multi_path: ['[A] it [C] restaurant general [S] great', '[A] it [S] great [C] restaurant general', '[C] restaurant general [S] great [A] it', '[C] restaurant general [A] it [S] great', '[S] great [C] restaurant general [A] it']

task, data: tasd rest16
target: [('food quality', 'food', 'great', 'null'), ('restaurant prices', 'null', 'ok', 'null'), ('service general', 'service', 'great', 'null')]
output: ['[A] food [S] great [C] food quality', '[A] service [S] great [C] service general', '[A] strip [S] ok [C] restaurant prices']
sent: ['Good', 'Food', ',', 'Great', 'Service', ',', 'Average', 'Prices', '(For', 'the', 'Strip', ')']
counter: {('food quality', 'food', 'great', 'null'): 5, ('service general', 'service', 'great', 'null'): 5, ('restaurant prices', 'strip', 'ok', 'null'): 5}
output quads: ['[A] food [S] great [C] food quality', '[A] service [S] great [C] service general', '[A] strip [S] ok [C] restaurant prices']
multi_path: ['[A] food [C] food quality [S] great [SSEP] [A] service [C] service general [S] great [SSEP] [A] strip [C] restaurant prices [S] ok', '[A] food [S] great [C] food quality [SSEP] [A] service [S] great [C] service general [SSEP] [A] strip [S] ok [C] restaurant prices', '[C] food quality [S] great [A] food [SSEP] [C] service general [S] great [A] service [SSEP] [C] restaurant prices [S] ok [A] strip', '[C] food quality [A] food [S] great [SSEP] [C] service general [A] service [S] great [SSEP] [C] restaurant prices [A] strip [S] ok', '[S] great [C] food quality [A] food [SSEP] [S] great [C] service general [A] service [SSEP] [S] ok [C] restaurant prices [A] strip']

task, data: tasd rest16
target: [('food prices', 'price fixed pre-show dinner', 'ok', 'null')]
output: ['[A] stack [S] great [C] restaurant prices']
sent: ['–', 'I', 'decided', 'to', 'eat', 'at', 'Stack', 'because', 'of', 'their', 'price', 'fixed', 'pre-show', 'dinner', '.']
counter: {('restaurant prices', 'stack', 'great', 'null'): 5}
output quads: ['[A] stack [S] great [C] restaurant prices']
multi_path: ['[A] stack [C] restaurant prices [S] great', '[A] stack [S] great [C] restaurant prices', '[C] restaurant prices [S] great [A] stack', '[C] restaurant prices [A] stack [S] great', '[S] great [C] restaurant prices [A] stack']

task, data: tasd rest16
target: [('ambience general', 'music', 'great', 'null'), ('ambience general', 'subwoofer to the sound system', 'bad', 'null')]
output: ['[A] music [S] great [C] ambience general', '[A] subwoofer [S] bad [C] ambience general']
sent: ['The', 'music', 'playing', 'was', 'very', 'hip', ',', '20-30', 'something', 'pop', 'music', ',', 'but', 'the', 'subwoofer', 'to', 'the', 'sound', 'system', 'was', 'located', 'under', 'my', 'seat', ',', 'which', 'became', 'annoying', 'midway', 'through', 'dinner', '.']
counter: {('ambience general', 'music', 'great', 'null'): 5, ('ambience general', 'subwoofer', 'bad', 'null'): 5, ('ambience general', 'subwoofer to the sound system', 'bad', 'null'): 2, ('ambience general', 'sound system', 'bad', 'null'): 1}
output quads: ['[A] music [S] great [C] ambience general', '[A] subwoofer [S] bad [C] ambience general']
multi_path: ['[A] music [C] ambience general [S] great [SSEP] [A] subwoofer [C] ambience general [S] bad [SSEP] [A] subwoofer [C] ambience general [S] bad', '[A] music [S] great [C] ambience general [SSEP] [A] subwoofer [S] bad [C] ambience general [SSEP] [A] subwoofer [S] bad [C] ambience general', '[C] ambience general [S] great [A] music [SSEP] [C] ambience general [S] bad [A] subwoofer to the sound system', '[C] ambience general [A] music [S] great [SSEP] [C] ambience general [A] subwoofer [S] bad [SSEP] [C] ambience general [A] sound system [S] bad', '[S] great [C] ambience general [A] music [SSEP] [S] bad [C] ambience general [A] subwoofer to the sound system']

task, data: tasd rest16
target: [('food quality', 'shellfish and shrimp appetizer', 'ok', 'null')]
output: ['[A] shellfish and shrimp appetizer [S] great [C] food quality']
sent: ['I', 'got', 'the', 'shellfish', 'and', 'shrimp', 'appetizer', 'and', 'it', 'was', 'alright', '.']
counter: {('food quality', 'shellfish and shrimp appetizer', 'great', 'null'): 4, ('food quality', 'shellfish and shrimp appetizer', 'ok', 'null'): 1}
output quads: ['[A] shellfish and shrimp appetizer [S] great [C] food quality']
multi_path: ['[A] shellfish and shrimp appetizer [C] food quality [S] great', '[A] shellfish and shrimp appetizer [S] great [C] food quality', '[C] food quality [S] great [A] shellfish and shrimp appetizer', '[C] food quality [A] shellfish and shrimp appetizer [S] great', '[S] ok [C] food quality [A] shellfish and shrimp appetizer']

task, data: tasd rest16
target: [('food quality', 'seafood', 'ok', 'null'), ('food style_options', 'seafood', 'ok', 'null')]
output: ['[A] presentation [S] ok [C] food style_options', '[A] seafood [S] ok [C] food quality']
sent: ['It', 'wasn', "'t", 'the', 'freshest', 'seafood', 'ever', ',', 'but', 'the', 'taste', 'and', 'presentation', 'was', 'OK', '.']
counter: {('food quality', 'seafood', 'ok', 'null'): 5, ('food quality', 'null', 'ok', 'null'): 1, ('food style_options', 'null', 'ok', 'null'): 1, ('food style_options', 'presentation', 'ok', 'null'): 3}
output quads: ['[A] seafood [S] ok [C] food quality', '[A] presentation [S] ok [C] food style_options']
multi_path: ['[A] seafood [C] food quality [S] ok [SSEP] [A] it [C] food quality [S] ok', '[A] seafood [S] ok [C] food quality [SSEP] [A] it [S] ok [C] food style_options', '[C] food quality [S] ok [A] seafood [SSEP] [C] food style_options [S] ok [A] presentation', '[C] food quality [A] seafood [S] ok [SSEP] [C] food style_options [A] presentation [S] ok', '[S] ok [C] food quality [A] seafood [SSEP] [S] ok [C] food style_options [A] presentation']

task, data: tasd rest16
target: [('food quality', 'peppercorn sauce', 'ok', 'null'), ('food quality', 'red wine reduction', 'ok', 'null')]
output: ['[A] peppercorn sauce [S] great [C] food quality', '[A] red wine reduction [S] great [C] food quality']
sent: ['It', '?s', 'served', 'with', 'either', 'a', 'peppercorn', 'sauce', 'or', 'red', 'wine', 'reduction', ',', 'though', 'both', 'were', 'indistinguishable', 'in', 'taste', '.']
counter: {('food quality', 'peppercorn sauce', 'great', 'null'): 5, ('food quality', 'red wine reduction', 'great', 'null'): 5}
output quads: ['[A] peppercorn sauce [S] great [C] food quality', '[A] red wine reduction [S] great [C] food quality']
multi_path: ['[A] peppercorn sauce [C] food quality [S] great [SSEP] [A] red wine reduction [C] food quality [S] great', '[A] peppercorn sauce [S] great [C] food quality [SSEP] [A] red wine reduction [S] great [C] food quality', '[C] food quality [S] great [A] peppercorn sauce [SSEP] [C] food quality [S] great [A] red wine reduction', '[C] food quality [A] peppercorn sauce [S] great [SSEP] [C] food quality [A] red wine reduction [S] great', '[S] great [C] food quality [A] peppercorn sauce [SSEP] [S] great [C] food quality [A] red wine reduction']

task, data: tasd rest16
target: [('food quality', 'steak', 'bad', 'null')]
output: ['[A] steak [S] bad [C] food style_options']
sent: ['Though', ',', 'one', 'thing', 'I', 'realized', 'later', 'on', 'was', 'that', 'the', 'restaurant', 'either', 'used', 'MSG', 'or', 'a', 'meat', 'tenderizer', 'on', 'the', 'steak', '.']
counter: {('food quality', 'steak', 'bad', 'null'): 2, ('food style_options', 'steak', 'bad', 'null'): 3}
output quads: ['[A] steak [S] bad [C] food style_options']
multi_path: ['[A] steak [C] food quality [S] bad', '[A] steak [S] bad [C] food quality', '[C] food style_options [S] bad [A] steak', '[C] food style_options [A] steak [S] bad', '[S] bad [C] food style_options [A] steak']

task, data: tasd rest16
target: [('food quality', 'null', 'bad', 'null')]
output: ['[A] restaurant [S] bad [C] food quality']
sent: ['My', 'mouth', 'felt', 'very', 'dry', 'afterwards', 'and', 'I', 'had', 'that', 'signature', '?MSG', '?', 'taste', 'lingering', 'in', 'my', 'throat', 'after', 'I', 'left', 'the', 'restaurant', '.']
counter: {('food quality', 'restaurant', 'bad', 'null'): 4, ('food quality', 'mouth', 'bad', 'null'): 1}
output quads: ['[A] restaurant [S] bad [C] food quality']
multi_path: ['[A] restaurant [C] food quality [S] bad', '[A] restaurant [S] bad [C] food quality', '[C] food quality [S] bad [A] restaurant', '[C] food quality [A] mouth [S] bad', '[S] bad [C] food quality [A] restaurant']

task, data: tasd rest16
target: [('food quality', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] food quality', '[A] null [S] great [C] food style_options']
sent: ['They', 'came', 'in', 'their', 'own', 'nifty', 'take', 'out', 'box', 'and', 'with', 'some', 'homemade', 'frosting', ';', 'very', 'light', 'and', 'not-too-sweet', '.']
counter: {('food quality', 'null', 'great', 'null'): 5, ('food style_options', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] food quality', '[A] null [S] great [C] food style_options']
multi_path: ['[A] it [C] food quality [S] great [SSEP] [A] it [C] food style_options [S] great', '[A] it [S] great [C] food quality [SSEP] [A] it [S] great [C] food style_options', '[C] food quality [S] great [A] it [SSEP] [C] food style_options [S] great [A] it', '[C] food quality [A] it [S] great [SSEP] [C] food style_options [A] it [S] great', '[S] great [C] food quality [A] it [SSEP] [S] great [C] food style_options [A] it']

task, data: tasd rest16
target: [('restaurant prices', 'null', 'ok', 'null'), ('service general', 'null', 'great', 'null')]
output: ['[A] dinner [S] ok [C] food style_options', '[A] strip [S] ok [C] food prices']
sent: ['The', 'dinner', 'only', 'took', 'us', 'about', 'an', 'hour', 'and', 'the', 'prices', 'were', 'alright', 'for', 'the', 'strip', ',', 'almost', '$50', '/pp', 'after', 'tax', 'and', 'tip', '(about', 'average', ')', '.']
counter: {('food style_options', 'dinner', 'ok', 'null'): 5, ('restaurant prices', 'null', 'ok', 'null'): 2, ('food prices', 'strip', 'ok', 'null'): 3}
output quads: ['[A] dinner [S] ok [C] food style_options', '[A] strip [S] ok [C] food prices']
multi_path: ['[A] dinner [C] food style_options [S] ok [SSEP] [A] it [C] restaurant prices [S] ok', '[A] dinner [S] ok [C] food style_options [SSEP] [A] it [S] ok [C] restaurant prices', '[C] food style_options [S] ok [A] dinner [SSEP] [C] food prices [S] ok [A] strip', '[C] food style_options [A] dinner [S] ok [SSEP] [C] food prices [A] strip [S] ok', '[S] ok [C] food style_options [A] dinner [SSEP] [S] ok [C] food prices [A] strip']

task, data: tasd rest16
target: [('restaurant miscellaneous', 'null', 'ok', 'null')]
output: ['[A] null [S] ok [C] ambience general']
sent: ['Just', 'remember', 'to', 'dress', 'a', 'little', 'urban-chic', 'so', 'you', 'don', '?t', 'look', 'too', 'far', 'out', 'of', 'place', '.']
counter: {('ambience general', 'null', 'ok', 'null'): 5}
output quads: ['[A] null [S] ok [C] ambience general']
multi_path: ['[A] it [C] ambience general [S] ok', '[A] it [S] ok [C] ambience general', '[C] ambience general [S] ok [A] it', '[C] ambience general [A] it [S] ok', '[S] ok [C] ambience general [A] it']

task, data: tasd rest16
target: [('drinks quality', 'sake', 'great', 'null'), ('food quality', 'food', 'great', 'null')]
output: ['[A] food [S] bad [C] food quality', '[A] sake [S] great [C] drinks quality']
sent: ['good', 'sake', ',', 'good', 'food', '–', 'i', 'honestly', 'don', "'t", 'know', 'much', 'about', 'japanese', 'food', 'at', 'all', '.']
counter: {('drinks quality', 'sake', 'great', 'null'): 5, ('food quality', 'food', 'bad', 'null'): 5}
output quads: ['[A] sake [S] great [C] drinks quality', '[A] food [S] bad [C] food quality']
multi_path: ['[A] sake [C] drinks quality [S] great [SSEP] [A] food [C] food quality [S] bad', '[A] sake [S] great [C] drinks quality [SSEP] [A] food [S] bad [C] food quality', '[C] drinks quality [S] great [A] sake [SSEP] [C] food quality [S] bad [A] food', '[C] drinks quality [A] sake [S] great [SSEP] [C] food quality [A] food [S] bad', '[S] great [C] drinks quality [A] sake [SSEP] [S] bad [C] food quality [A] food']

task, data: tasd rest16
target: [('drinks quality', 'sake', 'great', 'null'), ('service general', 'server', 'great', 'null')]
output: ['[A] sake suggestions [S] great [C] drinks quality']
sent: ['Server', 'made', 'several', 'sake', 'suggestions', 'which', 'were', 'very', 'good', '.']
counter: {('drinks quality', 'sake suggestions', 'great', 'null'): 5}
output quads: ['[A] sake suggestions [S] great [C] drinks quality']
multi_path: ['[A] sake suggestions [C] drinks quality [S] great', '[A] sake suggestions [S] great [C] drinks quality', '[C] drinks quality [S] great [A] sake suggestions', '[C] drinks quality [A] sake suggestions [S] great', '[S] great [C] drinks quality [A] sake suggestions']

task, data: tasd rest16
target: [('food quality', 'lobster 3 ways', 'great', 'null')]
output: ['[A] dishes [S] great [C] food style_options', '[A] lobster 3 ways [S] great [C] food quality']
sent: ['had', 'many', 'dishes', 'but', 'the', 'BEST', 'was', 'the', 'lobster', '3', 'ways', '.']
counter: {('food quality', 'lobster 3 ways', 'great', 'null'): 5, ('food style_options', 'dishes', 'great', 'null'): 3}
output quads: ['[A] lobster 3 ways [S] great [C] food quality', '[A] dishes [S] great [C] food style_options']
multi_path: ['[A] lobster 3 ways [C] food quality [S] great', '[A] lobster 3 ways [S] great [C] food quality', '[C] food style_options [S] great [A] dishes [SSEP] [C] food quality [S] great [A] lobster 3 ways', '[C] food style_options [A] dishes [S] great [SSEP] [C] food quality [A] lobster 3 ways [S] great', '[S] great [C] food style_options [A] dishes [SSEP] [S] great [C] food quality [A] lobster 3 ways']

task, data: tasd rest16
target: [('restaurant general', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] food quality']
sent: ['VERY', 'GOOD', '!']
counter: {('food quality', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] food quality']
multi_path: ['[A] it [C] food quality [S] great', '[A] it [S] great [C] food quality', '[C] food quality [S] great [A] it', '[C] food quality [A] it [S] great', '[S] great [C] food quality [A] it']

task, data: tasd rest16
target: [('restaurant prices', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] food prices']
sent: ['Overpriced']
counter: {('food prices', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] food prices']
multi_path: ['[A] it [C] food prices [S] bad', '[A] it [S] bad [C] food prices', '[C] food prices [S] bad [A] it', '[C] food prices [A] it [S] bad', '[S] bad [C] food prices [A] it']

task, data: tasd rest16
target: [('ambience general', 'feel', 'bad', 'null'), ('service general', 'waiter', 'bad', 'null')]
output: ['[A] feel of the restaurant [S] bad [C] ambience general', '[A] waiter [S] bad [C] service general']
sent: ['The', 'waiter', 'was', 'a', 'bit', 'unfriendly', 'and', 'the', 'feel', 'of', 'the', 'restaurant', 'was', 'crowded', '.']
counter: {('service general', 'waiter', 'bad', 'null'): 5, ('ambience general', 'feel of the restaurant', 'bad', 'null'): 4, ('ambience general', 'feel of the restaurant', 'ok', 'null'): 1}
output quads: ['[A] waiter [S] bad [C] service general', '[A] feel of the restaurant [S] bad [C] ambience general']
multi_path: ['[A] waiter [C] service general [S] bad [SSEP] [A] feel of the restaurant [C] ambience general [S] bad', '[A] waiter [S] bad [C] service general [SSEP] [A] feel of the restaurant [S] bad [C] ambience general', '[C] service general [S] bad [A] waiter [SSEP] [C] ambience general [S] bad [A] feel of the restaurant', '[C] service general [A] waiter [S] bad [SSEP] [C] ambience general [A] feel of the restaurant [S] bad', '[S] bad [C] service general [A] waiter [SSEP] [S] ok [C] ambience general [A] feel of the restaurant']

task, data: tasd rest16
target: [('restaurant miscellaneous', 'bathroom stall', 'bad', 'null')]
output: ['[A] bathroom stall [S] bad [C] ambience general']
sent: ['Also', ',', 'there', 'was', 'only', 'one', 'bathroom', 'stall-', 'probably', 'need', 'more', 'for', 'such', 'big', 'crowds', '.']
counter: {('ambience general', 'bathroom stall', 'bad', 'null'): 5}
output quads: ['[A] bathroom stall [S] bad [C] ambience general']
multi_path: ['[A] bathroom stall [C] ambience general [S] bad', '[A] bathroom stall [S] bad [C] ambience general', '[C] ambience general [S] bad [A] bathroom stall', '[C] ambience general [A] bathroom stall [S] bad', '[S] bad [C] ambience general [A] bathroom stall']

task, data: tasd rest16
target: [('food prices', 'food', 'bad', 'null'), ('food quality', 'food', 'ok', 'null')]
output: ['[A] food [S] bad [C] food prices', '[A] food [S] great [C] food quality']
sent: ['At', 'best', ',', 'the', 'food', 'was', 'good', 'and', 'definately', 'overpriced', '.']
counter: {('food quality', 'food', 'great', 'null'): 3, ('food prices', 'food', 'bad', 'null'): 5, ('food quality', 'food', 'bad', 'null'): 2}
output quads: ['[A] food [S] great [C] food quality', '[A] food [S] bad [C] food prices']
multi_path: ['[A] food [C] food quality [S] great [SSEP] [A] food [C] food prices [S] bad', '[A] food [S] bad [C] food quality [SSEP] [A] food [S] bad [C] food prices', '[C] food quality [S] great [A] food [SSEP] [C] food prices [S] bad [A] food', '[C] food quality [A] food [S] great [SSEP] [C] food prices [A] food [S] bad', '[S] bad [C] food quality [A] food [SSEP] [S] bad [C] food prices [A] food']

task, data: tasd rest16
target: [('service general', 'null', 'ok', 'null')]
output: ['[A] null [S] bad [C] service general']
sent: ['They', 'aren', "'t", 'the', 'most', 'talkative', ',', 'but', 'everytime', 'I', "'ve", 'been', 'there', 'they', 'have', 'been', 'very', 'busy', ',', 'which', 'probably', 'accounts', 'for', 'the', 'lack', 'of', 'conversation', '.']
counter: {('service general', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] service general']
multi_path: ['[A] it [C] service general [S] bad', '[A] it [S] bad [C] service general', '[C] service general [S] bad [A] it', '[C] service general [A] it [S] bad', '[S] bad [C] service general [A] it']

task, data: tasd rest16
target: [('ambience general', 'decor', 'great', 'null'), ('ambience general', 'feeling', 'great', 'null')]
output: ['[A] decor [S] great [C] ambience general', '[A] restaurant [S] great [C] ambience general']
sent: ['I', 'also', 'really', 'enjoy', 'the', 'simplicity', 'of', 'the', 'decor', 'and', 'intimate', 'feeling', 'of', 'a', 'small', 'restaurant', '.']
counter: {('ambience general', 'decor', 'great', 'null'): 5, ('ambience general', 'restaurant', 'great', 'null'): 5}
output quads: ['[A] decor [S] great [C] ambience general', '[A] restaurant [S] great [C] ambience general']
multi_path: ['[A] decor [C] ambience general [S] great [SSEP] [A] restaurant [C] ambience general [S] great', '[A] decor [S] great [C] ambience general [SSEP] [A] restaurant [S] great [C] ambience general', '[C] ambience general [S] great [A] decor [SSEP] [C] ambience general [S] great [A] restaurant', '[C] ambience general [A] decor [S] great [SSEP] [C] ambience general [A] restaurant [S] great', '[S] great [C] ambience general [A] decor [SSEP] [S] great [C] ambience general [A] restaurant']

task, data: tasd rest16
target: [('restaurant miscellaneous', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] food style_options']
sent: ['It', "'s", 'just', 'the', 'right', 'size', 'for', 'the', 'menu', '.']
counter: {('food style_options', 'null', 'great', 'null'): 4, ('food style_options', 'menu', 'great', 'null'): 1}
output quads: ['[A] null [S] great [C] food style_options']
multi_path: ['[A] it [C] food style_options [S] great', '[A] it [S] great [C] food style_options', '[C] food style_options [S] great [A] it', '[C] food style_options [A] it [S] great', '[S] great [C] food style_options [A] menu']

task, data: tasd rest16
target: [('restaurant general', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] food quality']
sent: ['Excellent']
counter: {('food quality', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] food quality']
multi_path: ['[A] it [C] food quality [S] great', '[A] it [S] great [C] food quality', '[C] food quality [S] great [A] it', '[C] food quality [A] it [S] great', '[S] great [C] food quality [A] it']

task, data: tasd rest16
target: [('food quality', 'pizza’s', 'great', 'null')]
output: ['[A] gourmet pizzas [S] great [C] food quality']
sent: ['We’re', 'can’t', 'say', 'enough', 'about', 'their', 'delicious', 'gourmet', 'pizza’s', '!']
counter: {('food quality', 'gourmet pizzas', 'great', 'null'): 5}
output quads: ['[A] gourmet pizzas [S] great [C] food quality']
multi_path: ['[A] gourmet pizzas [C] food quality [S] great', '[A] gourmet pizzas [S] great [C] food quality', '[C] food quality [S] great [A] gourmet pizzas', '[C] food quality [A] gourmet pizzas [S] great', '[S] great [C] food quality [A] gourmet pizzas']

task, data: tasd rest16
target: [('food style_options', 'menu', 'great', 'null')]
output: ['[A] menu [S] great [C] food quality']
sent: ['You', 'won’t', 'be', 'disappointed', 'by', 'their', 'menu', '.']
counter: {('food quality', 'menu', 'great', 'null'): 5}
output quads: ['[A] menu [S] great [C] food quality']
multi_path: ['[A] menu [C] food quality [S] great', '[A] menu [S] great [C] food quality', '[C] food quality [S] great [A] menu', '[C] food quality [A] menu [S] great', '[S] great [C] food quality [A] menu']

task, data: tasd rest16
target: [('food style_options', 'menu', 'great', 'null'), ('food style_options', 'pizza’s', 'great', 'null')]
output: ['[A] menu [S] great [C] food style_options', '[A] pizzas [S] great [C] food quality']
sent: ['The', 'pizza’s', 'are', 'thin', 'crust', 'and', 'the', 'menu', 'offers', 'very', 'creative', 'combinations', 'and', 'toppings', '.']
counter: {('food quality', 'pizzas', 'great', 'null'): 5, ('food style_options', 'menu', 'great', 'null'): 5}
output quads: ['[A] pizzas [S] great [C] food quality', '[A] menu [S] great [C] food style_options']
multi_path: ['[A] pizzas [C] food quality [S] great [SSEP] [A] menu [C] food style_options [S] great', '[A] pizzas [S] great [C] food quality [SSEP] [A] menu [S] great [C] food style_options', '[C] food quality [S] great [A] pizzas [SSEP] [C] food style_options [S] great [A] menu', '[C] food quality [A] pizzas [S] great [SSEP] [C] food style_options [A] menu [S] great', '[S] great [C] food quality [A] pizzas [SSEP] [S] great [C] food style_options [A] menu']

task, data: tasd rest16
target: [('food quality', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] restaurant general']
sent: ['You', 'never', 'feel', 'icky', 'and', 'stuffed', 'after', 'you', 'eat', 'there', '.']
counter: {('restaurant general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] restaurant general']
multi_path: ['[A] it [C] restaurant general [S] great', '[A] it [S] great [C] restaurant general', '[C] restaurant general [S] great [A] it', '[C] restaurant general [A] it [S] great', '[S] great [C] restaurant general [A] it']

task, data: tasd rest16
target: [('food quality', 'pizza’s', 'great', 'null')]
output: ['[A] pizzas [S] great [C] food quality']
sent: ['The', 'pizza’s', 'are', 'light', 'and', 'scrumptious', '.']
counter: {('food quality', 'pizzas', 'great', 'null'): 5}
output quads: ['[A] pizzas [S] great [C] food quality']
multi_path: ['[A] pizzas [C] food quality [S] great', '[A] pizzas [S] great [C] food quality', '[C] food quality [S] great [A] pizzas', '[C] food quality [A] pizzas [S] great', '[S] great [C] food quality [A] pizzas']

task, data: tasd rest16
target: [('food style_options', 'crust', 'ok', 'null'), ('food style_options', 'pizza’s', 'ok', 'null')]
output: ['[A] crust [S] bad [C] food quality', '[A] pizzas [S] ok [C] food style_options']
sent: ['The', 'pizza’s', 'are', 'not', 'huge', 'and', 'the', 'crust', 'is', 'thin…keep', 'that', 'in', 'mind', 'when', 'you’re', 'ordering', '.']
counter: {('food style_options', 'pizzas', 'ok', 'null'): 5, ('food quality', 'crust', 'bad', 'null'): 4, ('food quality', 'crust', 'great', 'null'): 1}
output quads: ['[A] pizzas [S] ok [C] food style_options', '[A] crust [S] bad [C] food quality']
multi_path: ['[A] pizzas [C] food style_options [S] ok [SSEP] [A] crust [C] food quality [S] bad', '[A] pizzas [S] ok [C] food style_options [SSEP] [A] crust [S] bad [C] food quality', '[C] food style_options [S] ok [A] pizzas [SSEP] [C] food quality [S] bad [A] crust', '[C] food style_options [A] pizzas [S] ok [SSEP] [C] food quality [A] crust [S] bad', '[S] ok [C] food style_options [A] pizzas [SSEP] [S] great [C] food quality [A] crust']

task, data: tasd rest16
target: [('restaurant general', 'null', 'great', 'null')]
output: ['[A] wait [S] great [C] service general']
sent: ['Worth', 'the', 'wait']
counter: {('service general', 'wait', 'great', 'null'): 5}
output quads: ['[A] wait [S] great [C] service general']
multi_path: ['[A] wait [C] service general [S] great', '[A] wait [S] great [C] service general', '[C] service general [S] great [A] wait', '[C] service general [A] wait [S] great', '[S] great [C] service general [A] wait']

task, data: tasd rest16
target: [('restaurant general', 'null', 'great', 'null'), ('restaurant miscellaneous', 'null', 'bad', 'null')]
output: ['[A] null [S] great [C] restaurant general']
sent: ['–', 'Had', 'to', 'wait', 'thirty', 'minutes', 'to', 'get', 'in', 'the', 'door', 'on', 'a', 'tuesday', 'morning', ',', 'but', 'it', 'was', 'so', 'worth', 'it', '.']
counter: {('restaurant general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] restaurant general']
multi_path: ['[A] it [C] restaurant general [S] great', '[A] it [S] great [C] restaurant general', '[C] restaurant general [S] great [A] it', '[C] restaurant general [A] it [S] great', '[S] great [C] restaurant general [A] it']

task, data: tasd rest16
target: [('food quality', 'food', 'great', 'null')]
output: ['[A] food [S] bad [C] food quality']
sent: ['The', 'food', 'is', 'sinful', '.']
counter: {('food quality', 'food', 'bad', 'null'): 5}
output quads: ['[A] food [S] bad [C] food quality']
multi_path: ['[A] food [C] food quality [S] bad', '[A] food [S] bad [C] food quality', '[C] food quality [S] bad [A] food', '[C] food quality [A] food [S] bad', '[S] bad [C] food quality [A] food']

task, data: tasd rest16
target: [('food quality', 'pancakes', 'great', 'null')]
output: ['[A] null [S] great [C] restaurant general', '[A] pancakes [S] great [C] food quality']
sent: ['The', 'specialty', 'here', 'is', 'decadent', 'pancakes', ',', 'but', 'I', "'ve", 'been', 'back', 'now', 'four', 'times', ',', 'and', 'I', "'ve", 'been', 'wowed', 'every', 'time', '.']
counter: {('food quality', 'pancakes', 'great', 'null'): 5, ('restaurant general', 'null', 'great', 'null'): 4}
output quads: ['[A] pancakes [S] great [C] food quality', '[A] null [S] great [C] restaurant general']
multi_path: ['[A] pancakes [C] food quality [S] great [SSEP] [A] it [C] restaurant general [S] great', '[A] pancakes [S] great [C] food quality', '[C] food quality [S] great [A] pancakes [SSEP] [C] restaurant general [S] great [A] it', '[C] food quality [A] pancakes [S] great [SSEP] [C] restaurant general [A] it [S] great', '[S] great [C] food quality [A] pancakes [SSEP] [S] great [C] restaurant general [A] it']

task, data: tasd rest16
target: [('food quality', 'breakfast', 'great', 'null'), ('restaurant general', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] drinks style_options', '[A] null [S] great [C] restaurant miscellaneous']
sent: ['Go', 'with', 'some', 'friends', ',', 'wait', 'the', 'half', 'hour', 'or', 'so', 'with', 'a', 'cup', 'of', 'joe', ',', 'and', 'enjoy', 'more', 'than', 'your', 'average', 'breakfast', '.']
counter: {('restaurant miscellaneous', 'null', 'great', 'null'): 5, ('drinks style_options', 'null', 'great', 'null'): 3}
output quads: ['[A] null [S] great [C] restaurant miscellaneous', '[A] null [S] great [C] drinks style_options']
multi_path: ['[A] it [C] restaurant miscellaneous [S] great', '[A] it [S] great [C] restaurant miscellaneous', '[C] drinks style_options [S] great [A] it [SSEP] [C] restaurant miscellaneous [S] great [A] it', '[C] drinks style_options [A] it [S] great [SSEP] [C] restaurant miscellaneous [A] it [S] great', '[S] great [C] drinks style_options [A] it [SSEP] [S] great [C] restaurant miscellaneous [A] it']

task, data: tasd rest16
target: [('food quality', 'fish', 'bad', 'null')]
output: ['[A] fish [S] great [C] food quality']
sent: ['Maybe', 'it', 'is', 'good', 'for', 'that', 'one', 'night', 'once', 'in', 'a', 'blue', 'moon', 'when', 'the', 'chefs', 'decide', 'to', 'use', 'fish', 'that', "'s", 'half-way', 'decent', '.']
counter: {('food quality', 'fish', 'great', 'null'): 5}
output quads: ['[A] fish [S] great [C] food quality']
multi_path: ['[A] fish [C] food quality [S] great', '[A] fish [S] great [C] food quality', '[C] food quality [S] great [A] fish', '[C] food quality [A] fish [S] great', '[S] great [C] food quality [A] fish']

task, data: tasd rest16
target: [('food prices', 'chef special dinner', 'bad', 'null'), ('food quality', 'chef special dinner', 'bad', 'null')]
output: ['[A] chef special dinner [S] bad [C] food quality']
sent: ['I', 'have', 'been', 'here', ',', 'spent', 'tons', 'of', 'money', 'on', 'a', 'chef', 'special', 'dinner', 'and', 'it', 'was', 'a', 'major', 'dissappointment', '.']
counter: {('food quality', 'chef special dinner', 'bad', 'null'): 5, ('food prices', 'chef special dinner', 'bad', 'null'): 2}
output quads: ['[A] chef special dinner [S] bad [C] food quality']
multi_path: ['[A] chef special dinner [C] food quality [S] bad [SSEP] [A] chef special dinner [C] food prices [S] bad', '[A] chef special dinner [S] bad [C] food quality [SSEP] [A] chef special dinner [S] bad [C] food prices', '[C] food quality [S] bad [A] chef special dinner', '[C] food quality [A] chef special dinner [S] bad', '[S] bad [C] food quality [A] chef special dinner']

task, data: tasd rest16
target: [('food prices', 'plate', 'bad', 'null'), ('food quality', 'exotic fish', 'bad', 'null'), ('food style_options', 'exotic fish', 'bad', 'null')]
output: ['[A] pieces of exotic fish [S] bad [C] food prices', '[A] pieces of exotic fish [S] great [C] food style_options']
sent: ['Fancy', 'pieces', 'of', 'exotic', 'fish', 'on', 'a', '$100', 'dollar', 'plate', 'and', 'NOT', 'ONE', 'was', 'eatable', '.']
counter: {('food style_options', 'pieces of exotic fish', 'great', 'null'): 5, ('food prices', 'pieces of exotic fish', 'bad', 'null'): 3, ('food quality', 'pieces of exotic fish', 'bad', 'null'): 1, ('food prices', 'plate', 'bad', 'null'): 1, ('food quality', 'pieces of exotic fish on a $100 dollar plate', 'bad', 'null'): 1}
output quads: ['[A] pieces of exotic fish [S] great [C] food style_options', '[A] pieces of exotic fish [S] bad [C] food prices']
multi_path: ['[A] pieces of exotic fish [C] food style_options [S] great [SSEP] [A] pieces of exotic fish [C] food prices [S] bad', '[A] pieces of exotic fish [S] great [C] food style_options [SSEP] [A] pieces of exotic fish [S] bad [C] food prices', '[C] food style_options [S] great [A] pieces of exotic fish [SSEP] [C] food prices [S] bad [A] pieces of exotic fish', '[C] food style_options [A] pieces of exotic fish [S] great [SSEP] [C] food quality [A] pieces of exotic fish [S] bad [SSEP] [C] food prices [A] plate [S] bad', '[S] great [C] food style_options [A] pieces of exotic fish [SSEP] [S] bad [C] food quality [A] pieces of exotic fish on a $100 dollar plate']

task, data: tasd rest16
target: [('restaurant general', 'null', 'great', 'null')]
output: ['[A] null [S] great [C] restaurant general', '[A] wait [S] bad [C] service general']
sent: ['It', 'was', 'worth', 'the', 'wait', '.']
counter: {('restaurant general', 'null', 'great', 'null'): 5, ('service general', 'wait', 'bad', 'null'): 5}
output quads: ['[A] null [S] great [C] restaurant general', '[A] wait [S] bad [C] service general']
multi_path: ['[A] it [C] restaurant general [S] great [SSEP] [A] wait [C] service general [S] bad', '[A] it [S] great [C] restaurant general [SSEP] [A] wait [S] bad [C] service general', '[C] restaurant general [S] great [A] it [SSEP] [C] service general [S] bad [A] wait', '[C] restaurant general [A] it [S] great [SSEP] [C] service general [A] wait [S] bad', '[S] great [C] restaurant general [A] it [SSEP] [S] bad [C] service general [A] wait']

task, data: tasd rest16
target: [('ambience general', 'atmosphere', 'great', 'null'), ('ambience general', 'music', 'great', 'null'), ('ambience general', 'vibe', 'great', 'null'), ('restaurant miscellaneous', 'people', 'great', 'null')]
output: ['[A] atmosphere [S] great [C] ambience general', '[A] music [S] great [C] ambience general', '[A] people [S] great [C] service general', '[A] vibe [S] great [C] ambience general']
sent: ['There', 'was', 'a', 'really', 'nice', 'vibe', 'about', 'the', 'place', '.', '.', '.good', 'music', ',', 'atmosphere', 'and', 'happy', 'looking', 'people', '.']
counter: {('ambience general', 'vibe', 'great', 'null'): 5, ('ambience general', 'music', 'great', 'null'): 5, ('ambience general', 'atmosphere', 'great', 'null'): 5, ('service general', 'people', 'great', 'null'): 5}
output quads: ['[A] vibe [S] great [C] ambience general', '[A] music [S] great [C] ambience general', '[A] atmosphere [S] great [C] ambience general', '[A] people [S] great [C] service general']
multi_path: ['[A] vibe [C] ambience general [S] great [SSEP] [A] music [C] ambience general [S] great [SSEP] [A] atmosphere [C] ambience general [S] great [SSEP] [A] people [C] service general [S] great', '[A] vibe [S] great [C] ambience general [SSEP] [A] music [S] great [C] ambience general [SSEP] [A] atmosphere [S] great [C] ambience general [SSEP] [A] people [S] great [C] service general', '[C] ambience general [S] great [A] vibe [SSEP] [C] ambience general [S] great [A] music [SSEP] [C] ambience general [S] great [A] atmosphere [SSEP] [C] service general [S] great [A] people', '[C] ambience general [A] vibe [S] great [SSEP] [C] ambience general [A] music [S] great [SSEP] [C] ambience general [A] atmosphere [S] great [SSEP] [C] service general [A] people [S] great', '[S] great [C] ambience general [A] vibe [SSEP] [S] great [C] ambience general [A] music [SSEP] [S] great [C] ambience general [A] atmosphere [SSEP] [S] great [C] service general [A] people']

task, data: tasd rest16
target: [('restaurant miscellaneous', 'place', 'ok', 'null')]
output: ['[A] place [S] bad [C] restaurant miscellaneous', '[A] seat [S] great [C] restaurant miscellaneous', '[A] table [S] great [C] restaurant miscellaneous']
sent: ['It', "'s", 'a', 'tiny', 'place', 'so', 'if', 'you', 'get', 'there', 'before', '8pm', 'on', 'a', 'weekend', '(Thurs', '?Sun', ')', 'you', 'will', 'find', 'it', 'easier', 'to', 'get', 'a', 'table', 'or', 'a', 'seat', 'at', 'the', 'sushi', 'bar', '.']
counter: {('restaurant miscellaneous', 'place', 'bad', 'null'): 5, ('restaurant miscellaneous', 'table', 'great', 'null'): 5, ('restaurant miscellaneous', 'seat', 'great', 'null'): 4, ('restaurant miscellaneous', 'seat', 'bad', 'null'): 1}
output quads: ['[A] place [S] bad [C] restaurant miscellaneous', '[A] table [S] great [C] restaurant miscellaneous', '[A] seat [S] great [C] restaurant miscellaneous']
multi_path: ['[A] place [C] restaurant miscellaneous [S] bad [SSEP] [A] table [C] restaurant miscellaneous [S] great [SSEP] [A] seat [C] restaurant miscellaneous [S] great', '[A] place [S] bad [C] restaurant miscellaneous [SSEP] [A] table [S] great [C] restaurant miscellaneous [SSEP] [A] seat [S] great [C] restaurant miscellaneous', '[C] restaurant miscellaneous [S] bad [A] place [SSEP] [C] restaurant miscellaneous [S] great [A] table [SSEP] [C] restaurant miscellaneous [S] bad [A] seat', '[C] restaurant miscellaneous [A] place [S] bad [SSEP] [C] restaurant miscellaneous [A] table [S] great [SSEP] [C] restaurant miscellaneous [A] seat [S] great', '[S] bad [C] restaurant miscellaneous [A] place [SSEP] [S] great [C] restaurant miscellaneous [A] table [SSEP] [S] great [C] restaurant miscellaneous [A] seat']

task, data: tasd rest16
target: [('food quality', 'null', 'great', 'null'), ('food style_options', 'portions', 'great', 'null'), ('food style_options', 'sushi dishes', 'great', 'null')]
output: ['[A] portions [S] great [C] food style_options', '[A] sushi dishes [S] great [C] food quality']
sent: ['If', 'you', "'re", 'interested', 'in', 'good', 'tasting', '(without', 'the', 'fish', 'taste', 'or', 'smell', ')', ',', 'large', 'portions', 'and', 'creative', 'sushi', 'dishes', 'this', 'is', 'your', 'place', '.', '.', '.']
counter: {('food style_options', 'portions', 'great', 'null'): 4, ('food quality', 'sushi dishes', 'great', 'null'): 5, ('food quality', 'fish taste', 'great', 'null'): 2, ('food quality', 'portions', 'great', 'null'): 1, ('food style_options', 'sushi dishes', 'great', 'null'): 1, ('food quality', 'sushi', 'great', 'null'): 2}
output quads: ['[A] portions [S] great [C] food style_options', '[A] sushi dishes [S] great [C] food quality']
multi_path: ['[A] portions [C] food style_options [S] great [SSEP] [A] sushi dishes [C] food quality [S] great [SSEP] [A] fish taste [C] food quality [S] great', '[A] portions [S] great [C] food style_options [SSEP] [A] sushi dishes [S] great [C] food quality [SSEP] [A] fish taste [S] great [C] food quality', '[C] food quality [S] great [A] portions [SSEP] [C] food style_options [S] great [A] sushi dishes [SSEP] [C] food quality [S] great [A] sushi dishes', '[C] food quality [A] sushi [S] great [SSEP] [C] food style_options [A] portions [S] great [SSEP] [C] food quality [A] sushi dishes [S] great', '[S] great [C] food quality [A] sushi [SSEP] [S] great [C] food style_options [A] portions [SSEP] [S] great [C] food quality [A] sushi dishes']

task, data: tasd rest16
target: [('food style_options', 'pepperoni', 'great', 'null')]
output: ['[A] pepperoni [S] great [C] food quality']
sent: ['big', 'thick', 'pepperoni']
counter: {('food quality', 'pepperoni', 'great', 'null'): 5}
output quads: ['[A] pepperoni [S] great [C] food quality']
multi_path: ['[A] pepperoni [C] food quality [S] great', '[A] pepperoni [S] great [C] food quality', '[C] food quality [S] great [A] pepperoni', '[C] food quality [A] pepperoni [S] great', '[S] great [C] food quality [A] pepperoni']

task, data: tasd rest16
target: [('food style_options', "pepperoni's", 'great', 'null')]
output: ['[A] pepperoni [S] great [C] food quality']
sent: ['–', 'The', 'pepperoni', "'s", 'cut', 'real', 'thick--Yum', '.']
counter: {('food quality', 'pepperoni', 'great', 'null'): 5}
output quads: ['[A] pepperoni [S] great [C] food quality']
multi_path: ['[A] pepperoni [C] food quality [S] great', '[A] pepperoni [S] great [C] food quality', '[C] food quality [S] great [A] pepperoni', '[C] food quality [A] pepperoni [S] great', '[S] great [C] food quality [A] pepperoni']

task, data: tasd rest16
target: [('food quality', 'pizza', 'great', 'null')]
output: ['[A] pizza [S] ok [C] food quality']
sent: ['The', 'pizza', 'itself', 'is', 'not', 'exactly', 'the', 'best', 'I', "'ve", 'had', 'EVER', ',', 'but', 'still', 'pretty', 'good', '.']
counter: {('food quality', 'pizza', 'ok', 'null'): 5}
output quads: ['[A] pizza [S] ok [C] food quality']
multi_path: ['[A] pizza [C] food quality [S] ok', '[A] pizza [S] ok [C] food quality', '[C] food quality [S] ok [A] pizza', '[C] food quality [A] pizza [S] ok', '[S] ok [C] food quality [A] pizza']

task, data: tasd rest16
target: [('restaurant general', 'null', 'bad', 'null')]
output: ['[A] null [S] great [C] restaurant general']
sent: ['Maybe', 'I', "'ll", 'go', 'back', 'once', 'more', 'many', 'years', 'from', 'now', 'when', 'I', "'ve", 'forgotten', 'I', 'went', 'there', 'already', '.']
counter: {('restaurant general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] restaurant general']
multi_path: ['[A] it [C] restaurant general [S] great', '[A] it [S] great [C] restaurant general', '[C] restaurant general [S] great [A] it', '[C] restaurant general [A] it [S] great', '[S] great [C] restaurant general [A] it']

task, data: tasd rest16
target: [('restaurant general', 'null', 'ok', 'null')]
output: ['[A] null [S] ok [C] food quality']
sent: ['–', 'Not', 'bad', '.']
counter: {('food quality', 'null', 'ok', 'null'): 5}
output quads: ['[A] null [S] ok [C] food quality']
multi_path: ['[A] it [C] food quality [S] ok', '[A] it [S] ok [C] food quality', '[C] food quality [S] ok [A] it', '[C] food quality [A] it [S] ok', '[S] ok [C] food quality [A] it']

task, data: tasd rest16
target: [('service general', 'null', 'great', 'null'), ('service general', 'server', 'bad', 'null')]
output: ['[A] drinks [S] great [C] drinks quality', '[A] server [S] bad [C] service general']
sent: ['Our', 'drinks', 'kept', 'coming', 'but', 'our', 'server', 'came', 'by', 'a', 'couple', 'times', '.']
counter: {('drinks quality', 'drinks', 'great', 'null'): 4, ('service general', 'server', 'bad', 'null'): 5, ('drinks quality', 'drinks', 'bad', 'null'): 1}
output quads: ['[A] drinks [S] great [C] drinks quality', '[A] server [S] bad [C] service general']
multi_path: ['[A] drinks [C] drinks quality [S] great [SSEP] [A] server [C] service general [S] bad', '[A] drinks [S] great [C] drinks quality [SSEP] [A] server [S] bad [C] service general', '[C] drinks quality [S] great [A] drinks [SSEP] [C] service general [S] bad [A] server', '[C] drinks quality [A] drinks [S] great [SSEP] [C] service general [A] server [S] bad', '[S] bad [C] drinks quality [A] drinks [SSEP] [S] bad [C] service general [A] server']

task, data: tasd rest16
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] null [S] great [C] restaurant general']
sent: ['Should', 'check-up', 'on', 'us', 'more', 'frequently', ',', 'don', "'t", 'you', 'think', '?']
counter: {('restaurant general', 'null', 'ok', 'null'): 1, ('restaurant general', 'null', 'great', 'null'): 4}
output quads: ['[A] null [S] great [C] restaurant general']
multi_path: ['[A] it [C] restaurant general [S] ok', '[A] it [S] great [C] restaurant general', '[C] restaurant general [S] great [A] it', '[C] restaurant general [A] it [S] great', '[S] great [C] restaurant general [A] it']

task, data: tasd rest16
target: [('ambience general', 'table', 'great', 'null'), ('service general', 'null', 'great', 'null')]
output: ['[A] table [S] great [C] service general']
sent: ['We', 'were', 'seated', 'right', 'away', ',', 'the', 'table', 'was', 'private', 'and', 'nice', '.']
counter: {('ambience general', 'table', 'great', 'null'): 2, ('service general', 'table', 'great', 'null'): 3}
output quads: ['[A] table [S] great [C] service general']
multi_path: ['[A] table [C] ambience general [S] great', '[A] table [S] great [C] ambience general', '[C] service general [S] great [A] table', '[C] service general [A] table [S] great', '[S] great [C] service general [A] table']

task, data: tasd rest16
target: [('restaurant prices', 'null', 'great', 'null')]
output: ['[A] check [S] great [C] service general']
sent: ['The', 'most', 'pleasant', 'surprise', 'was', 'the', 'check', 'that', 'did', 'not', 'exceed', 'my', 'expectations', 'as', 'it', 'always', 'happens', 'in', 'most', 'of', 'the', 'places', '.']
counter: {('service general', 'check', 'great', 'null'): 5}
output quads: ['[A] check [S] great [C] service general']
multi_path: ['[A] check [C] service general [S] great', '[A] check [S] great [C] service general', '[C] service general [S] great [A] check', '[C] service general [A] check [S] great', '[S] great [C] service general [A] check']

task, data: tasd rest16
target: [('restaurant miscellaneous', 'restroom', 'bad', 'null')]
output: ['[A] bathroom attendant [S] bad [C] service general']
sent: ['I', 'have', 'a', 'but', 'here', '-', 'there', 'was', 'a', 'bathroom', 'attendant', 'in', 'the', 'restroom', 'which', 'was', 'odd', '.']
counter: {('service general', 'bathroom attendant', 'bad', 'null'): 5}
output quads: ['[A] bathroom attendant [S] bad [C] service general']
multi_path: ['[A] bathroom attendant [C] service general [S] bad', '[A] bathroom attendant [S] bad [C] service general', '[C] service general [S] bad [A] bathroom attendant', '[C] service general [A] bathroom attendant [S] bad', '[S] bad [C] service general [A] bathroom attendant']

task, data: tasd rest16
target: [('restaurant miscellaneous', 'bathroom', 'bad', 'null')]
output: ['[A] bathroom [S] bad [C] ambience general', '[A] girl [S] bad [C] service general']
sent: ['The', 'bathroom', 'itself', 'is', 'very', 'small', 'with', 'two', 'toilets', 'and', 'only', 'one', 'sink', ',', 'the', 'girl', 'was', 'staying', 'totally', 'on', 'the', 'way', 'hanging', 'out', 'paper', 'towels', 'from', 'the', 'dispenser', '.']
counter: {('ambience general', 'bathroom', 'bad', 'null'): 5, ('service general', 'girl', 'bad', 'null'): 5}
output quads: ['[A] bathroom [S] bad [C] ambience general', '[A] girl [S] bad [C] service general']
multi_path: ['[A] bathroom [C] ambience general [S] bad [SSEP] [A] girl [C] service general [S] bad', '[A] bathroom [S] bad [C] ambience general [SSEP] [A] girl [S] bad [C] service general', '[C] ambience general [S] bad [A] bathroom [SSEP] [C] service general [S] bad [A] girl', '[C] ambience general [A] bathroom [S] bad [SSEP] [C] service general [A] girl [S] bad', '[S] bad [C] ambience general [A] bathroom [SSEP] [S] bad [C] service general [A] girl']

task, data: tasd rest16
target: [('restaurant miscellaneous', 'null', 'bad', 'null')]
output: ['[A] casino bathroom [S] bad [C] restaurant general']
sent: ['I', 'felt', 'ackward', 'and', 'next', 'time', 'went', 'to', 'the', 'casino', 'bathroom', '.']
counter: {('ambience general', 'casino bathroom', 'bad', 'null'): 2, ('restaurant general', 'casino bathroom', 'bad', 'null'): 3}
output quads: ['[A] casino bathroom [S] bad [C] restaurant general']
multi_path: ['[A] casino bathroom [C] ambience general [S] bad', '[A] casino bathroom [S] bad [C] ambience general', '[C] restaurant general [S] bad [A] casino bathroom', '[C] restaurant general [A] casino bathroom [S] bad', '[S] bad [C] restaurant general [A] casino bathroom']

task, data: tasd rest16
target: [('food quality', 'null', 'great', 'null'), ('service general', 'service', 'great', 'null')]
output: ['[A] mercedes restaurant [S] great [C] food quality', '[A] service [S] great [C] service general']
sent: ['–', 'Mercedes', 'restaurant', 'is', 'so', 'tasty', ',', 'the', 'service', 'is', 'undeniably', 'awesome', '!']
counter: {('restaurant general', 'mercedes restaurant', 'great', 'null'): 2, ('service general', 'service', 'great', 'null'): 5, ('food quality', 'mercedes restaurant', 'great', 'null'): 3}
output quads: ['[A] service [S] great [C] service general', '[A] mercedes restaurant [S] great [C] food quality']
multi_path: ['[A] mercedes restaurant [C] restaurant general [S] great [SSEP] [A] service [C] service general [S] great', '[A] mercedes restaurant [S] great [C] restaurant general [SSEP] [A] service [S] great [C] service general', '[C] food quality [S] great [A] mercedes restaurant [SSEP] [C] service general [S] great [A] service', '[C] food quality [A] mercedes restaurant [S] great [SSEP] [C] service general [A] service [S] great', '[S] great [C] food quality [A] mercedes restaurant [SSEP] [S] great [C] service general [A] service']

task, data: tasd rest16
target: [('food quality', 'chips and salsa', 'great', 'null'), ('restaurant prices', 'null', 'great', 'null')]
output: ['[A] chips [S] great [C] food quality', '[A] null [S] great [C] restaurant prices', '[A] salsa [S] great [C] food quality']
sent: ['The', 'chips', 'and', 'salsa', 'are', 'so', 'yummy', ',', 'and', 'the', 'prices', 'are', 'fabulous', '.']
counter: {('food quality', 'chips', 'great', 'null'): 5, ('food quality', 'salsa', 'great', 'null'): 5, ('restaurant prices', 'null', 'great', 'null'): 5}
output quads: ['[A] chips [S] great [C] food quality', '[A] salsa [S] great [C] food quality', '[A] null [S] great [C] restaurant prices']
multi_path: ['[A] chips [C] food quality [S] great [SSEP] [A] salsa [C] food quality [S] great [SSEP] [A] it [C] restaurant prices [S] great', '[A] chips [S] great [C] food quality [SSEP] [A] salsa [S] great [C] food quality [SSEP] [A] it [S] great [C] restaurant prices', '[C] food quality [S] great [A] chips [SSEP] [C] food quality [S] great [A] salsa [SSEP] [C] restaurant prices [S] great [A] it', '[C] food quality [A] chips [S] great [SSEP] [C] food quality [A] salsa [S] great [SSEP] [C] restaurant prices [A] it [S] great', '[S] great [C] food quality [A] chips [SSEP] [S] great [C] food quality [A] salsa [SSEP] [S] great [C] restaurant prices [A] it']

task, data: tasd rest16
target: [('ambience general', 'null', 'great', 'null'), ('drinks quality', 'drinks', 'great', 'null')]
output: ['[A] drinks [S] great [C] drinks quality']
sent: ['Drinks', 'are', 'suberb', ',', 'and', 'I', 'feel', 'like', 'I', 'am', 'in', 'a', 'Third', 'World', 'country', 'when', 'I', 'walk', 'in', 'the', 'door', '.']
counter: {('drinks quality', 'drinks', 'great', 'null'): 5, ('restaurant miscellaneous', 'null', 'great', 'null'): 1}
output quads: ['[A] drinks [S] great [C] drinks quality']
multi_path: ['[A] drinks [C] drinks quality [S] great', '[A] drinks [S] great [C] drinks quality [SSEP] [A] it [S] great [C] restaurant miscellaneous', '[C] drinks quality [S] great [A] drinks', '[C] drinks quality [A] drinks [S] great', '[S] great [C] drinks quality [A] drinks']

task, data: tasd rest16
target: [('restaurant prices', 'null', 'bad', 'null')]
output: ['[A] null [S] bad [C] food prices']
sent: ['Insultingly', 'Overpriced']
counter: {('food prices', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] food prices']
multi_path: ['[A] it [C] food prices [S] bad', '[A] it [S] bad [C] food prices', '[C] food prices [S] bad [A] it', '[C] food prices [A] it [S] bad', '[S] bad [C] food prices [A] it']

task, data: tasd rest16
target: [('ambience general', 'snooze', 'great', 'null'), ('food style_options', 'menu', 'bad', 'null'), ('restaurant prices', 'snooze', 'bad', 'null')]
output: ['[A] ihop [S] bad [C] food quality', '[A] menu [S] bad [C] food prices', '[A] presentation of snooze [S] great [C] drinks style_options']
sent: ['The', 'presentation', 'of', 'Snooze', 'is', 'excellent', 'and', 'it', 'is', 'one', 'of', 'those', 'places', 'that', 'you', 'feel', 'more', 'sophisticated', 'just', 'for', 'being', 'there', ';', 'but', 'peel', 'back', 'the', 'layers', 'and', 'you', 'have', 'an', 'overpriced', 'IHOP', 'with', 'a', 'high', 'brow', 'menu', '.']
counter: {('drinks style_options', 'presentation of snooze', 'great', 'null'): 4, ('food quality', 'ihop', 'bad', 'null'): 3, ('food prices', 'menu', 'bad', 'null'): 3, ('food quality', 'ihop', 'great', 'null'): 1, ('drinks style_options', 'snooze', 'great', 'null'): 1, ('food prices', 'ihop', 'bad', 'null'): 1, ('food quality', 'menu', 'bad', 'null'): 1, ('food prices', 'snooze', 'bad', 'null'): 1, ('food style_options', 'menu', 'bad', 'null'): 1}
output quads: ['[A] presentation of snooze [S] great [C] drinks style_options', '[A] ihop [S] bad [C] food quality', '[A] menu [S] bad [C] food prices']
multi_path: ['[A] presentation of snooze [C] drinks style_options [S] great [SSEP] [A] ihop [C] food quality [S] bad [SSEP] [A] menu [C] food prices [S] bad', '[A] presentation of snooze [S] great [C] drinks style_options [SSEP] [A] ihop [S] bad [C] food quality [SSEP] [A] menu [S] bad [C] food prices', '[C] drinks style_options [S] great [A] presentation of snooze [SSEP] [C] food quality [S] great [A] ihop [SSEP] [C] food prices [S] bad [A] menu', '[C] drinks style_options [A] snooze [S] great [SSEP] [C] food prices [A] ihop [S] bad [SSEP] [C] food quality [A] menu [S] bad', '[S] great [C] drinks style_options [A] presentation of snooze [SSEP] [S] bad [C] food quality [A] ihop [SSEP] [S] bad [C] food prices [A] snooze [SSEP] [S] bad [C] food style_options [A] menu']

task, data: tasd rest16
target: [('drinks prices', 'juice', 'bad', 'null'), ('drinks style_options', 'juice', 'bad', 'null')]
output: ['[A] juice [S] bad [C] food prices', '[A] null [S] bad [C] food style_options']
sent: ['They', 'serve', 'it', 'in', 'a', 'tall', ',', 'skinny', 'hour-glass', 'shaped', 'glass', 'to', 'disguise', 'the', 'fact', 'that', 'you', 'a', 'getting', 'a', 'small', 'juice', 'at', 'the', 'price', 'of', 'a', 'half', 'gallon', 'in', 'a', 'supermarket', '.']
counter: {('food style_options', 'null', 'bad', 'null'): 5, ('food prices', 'juice', 'bad', 'null'): 5}
output quads: ['[A] null [S] bad [C] food style_options', '[A] juice [S] bad [C] food prices']
multi_path: ['[A] it [C] food style_options [S] bad [SSEP] [A] juice [C] food prices [S] bad', '[A] it [S] bad [C] food style_options [SSEP] [A] juice [S] bad [C] food prices', '[C] food style_options [S] bad [A] it [SSEP] [C] food prices [S] bad [A] juice', '[C] food style_options [A] it [S] bad [SSEP] [C] food prices [A] juice [S] bad', '[S] bad [C] food style_options [A] it [SSEP] [S] bad [C] food prices [A] juice']

task, data: tasd rest16
target: [('food prices', 'pancakes', 'bad', 'null'), ('food style_options', 'pancakes', 'bad', 'null'), ('food style_options', 'pancakes', 'great', 'null')]
output: ['[A] pancakes [S] bad [C] food prices', '[A] pancakes [S] bad [C] food style_options', '[A] pancakes [S] great [C] food quality']
sent: ['The', 'pancakes', 'were', 'certainly', 'inventive', 'but', '$8', '.50', 'for', '3', '-', '6', '"', 'pancakes', '(one', 'of', 'them', 'was', 'more', 'like', '5', '"', ')', 'in', 'the', 'pancake', 'flight', '(sample', 'of', '3', 'different', 'pancakes', ')', 'is', 'well', 'over-priced', '.']
counter: {('food quality', 'pancakes', 'great', 'null'): 5, ('food style_options', 'pancakes', 'bad', 'null'): 5, ('food prices', 'pancakes', 'bad', 'null'): 5}
output quads: ['[A] pancakes [S] great [C] food quality', '[A] pancakes [S] bad [C] food style_options', '[A] pancakes [S] bad [C] food prices']
multi_path: ['[A] pancakes [C] food quality [S] great [SSEP] [A] pancakes [C] food style_options [S] bad [SSEP] [A] pancakes [C] food prices [S] bad', '[A] pancakes [S] great [C] food quality [SSEP] [A] pancakes [S] bad [C] food style_options [SSEP] [A] pancakes [S] bad [C] food prices', '[C] food quality [S] great [A] pancakes [SSEP] [C] food style_options [S] bad [A] pancakes [SSEP] [C] food prices [S] bad [A] pancakes', '[C] food quality [A] pancakes [S] great [SSEP] [C] food style_options [A] pancakes [S] bad [SSEP] [C] food prices [A] pancakes [S] bad', '[S] great [C] food quality [A] pancakes [SSEP] [S] bad [C] food style_options [A] pancakes [SSEP] [S] bad [C] food prices [A] pancakes']

task, data: tasd rest16
target: [('food quality', 'eggs', 'bad', 'null'), ('food quality', 'meal', 'bad', 'null')]
output: ['[A] eggs [S] bad [C] food quality', '[A] null [S] bad [C] service general']
sent: ['On', 'my', 'meal', 'I', 'had', 'to', 'send', 'back', 'my', 'eggs', 'for', 'a', 'simple', 'request', 'of', 'breaking', 'the', 'yokes', 'before', 'cooking', ',', 'and', 'would', 'have', 'had', 'to', 'send', 'them', 'back', 'again', 'if', 'I', 'hadn', "'t", 'rejected', 'the', 'meal', 'all', 'together', '.']
counter: {('food quality', 'eggs', 'bad', 'null'): 5, ('service general', 'null', 'bad', 'null'): 3}
output quads: ['[A] eggs [S] bad [C] food quality', '[A] null [S] bad [C] service general']
multi_path: ['[A] eggs [C] food quality [S] bad', '[A] eggs [S] bad [C] food quality', '[C] food quality [S] bad [A] eggs [SSEP] [C] service general [S] bad [A] it', '[C] food quality [A] eggs [S] bad [SSEP] [C] service general [A] it [S] bad', '[S] bad [C] food quality [A] eggs [SSEP] [S] bad [C] service general [A] it']

task, data: tasd rest16
target: [('food quality', 'dish', 'bad', 'null')]
output: ['[A] eggs [S] bad [C] food quality', '[A] null [S] bad [C] restaurant general']
sent: ['I', 'rejected', 'it', 'because', 'in', 'the', 'process', 'of', 'attempting', 'to', 'fix', 'the', 'eggs', 'they', 'broke', 'something', 'else', 'in', 'the', 'dish', 'and', 'I', 'was', 'too', 'frustrated', 'to', 'continue', '.']
counter: {('service general', 'null', 'bad', 'null'): 2, ('food quality', 'eggs', 'bad', 'null'): 3, ('restaurant general', 'null', 'bad', 'null'): 3}
output quads: ['[A] eggs [S] bad [C] food quality', '[A] null [S] bad [C] restaurant general']
multi_path: ['[A] it [C] service general [S] bad', '[A] it [S] bad [C] service general', '[C] food quality [S] bad [A] eggs [SSEP] [C] restaurant general [S] bad [A] it', '[C] food quality [A] eggs [S] bad [SSEP] [C] restaurant general [A] it [S] bad', '[S] bad [C] food quality [A] eggs [SSEP] [S] bad [C] restaurant general [A] it']

task, data: tasd rest16
target: [('service general', 'manager', 'bad', 'null'), ('service general', 'null', 'great', 'null')]
output: ['[A] manager [S] bad [C] service general']
sent: ['To', 'their', 'credit', 'they', 'removed', 'the', 'dish', 'from', 'the', 'check', ';', 'but', 'no', 'manager', 'stopped', 'by', 'to', 'ask', 'what', 'the', 'problem', 'was', '.']
counter: {('service general', 'manager', 'bad', 'null'): 5}
output quads: ['[A] manager [S] bad [C] service general']
multi_path: ['[A] manager [C] service general [S] bad', '[A] manager [S] bad [C] service general', '[C] service general [S] bad [A] manager', '[C] service general [A] manager [S] bad', '[S] bad [C] service general [A] manager']

task, data: tasd rest16
target: [('drinks prices', 'iced tea', 'bad', 'null'), ('drinks prices', 'orange juice', 'bad', 'null'), ('food prices', 'breakfast burrito', 'bad', 'null'), ('food prices', 'pancakes', 'bad', 'null'), ('food style_options', 'pancakes', 'bad', 'null')]
output: ['[A] breakfast burrito [S] bad [C] food quality', '[A] iced tea [S] bad [C] food quality', '[A] orange juice [S] bad [C] drinks quality', '[A] pancakes [S] bad [C] food prices']
sent: ['In', 'the', 'end', 'our', 'check', 'came', 'to', '$27', 'for', '4', 'small', 'pancakes', ',', 'a', 'breakfast', 'burrito', ',', 'an', 'orange', 'juice', 'and', 'an', 'iced', 'tea', '(I', 'had', 'water', ')', '.']
counter: {('food style_options', 'pancakes', 'bad', 'null'): 2, ('food quality', 'breakfast burrito', 'bad', 'null'): 5, ('drinks quality', 'orange juice', 'bad', 'null'): 4, ('food prices', 'iced tea', 'bad', 'null'): 2, ('food prices', 'pancakes', 'bad', 'null'): 3, ('food quality', 'iced tea', 'bad', 'null'): 3, ('drinks quality', 'orange juice', 'great', 'null'): 1}
output quads: ['[A] breakfast burrito [S] bad [C] food quality', '[A] orange juice [S] bad [C] drinks quality', '[A] pancakes [S] bad [C] food prices', '[A] iced tea [S] bad [C] food quality']
multi_path: ['[A] pancakes [C] food style_options [S] bad [SSEP] [A] breakfast burrito [C] food quality [S] bad [SSEP] [A] orange juice [C] drinks quality [S] bad [SSEP] [A] iced tea [C] food prices [S] bad', '[A] pancakes [S] bad [C] food style_options [SSEP] [A] breakfast burrito [S] bad [C] food quality [SSEP] [A] orange juice [S] bad [C] drinks quality [SSEP] [A] iced tea [S] bad [C] food prices', '[C] food prices [S] bad [A] pancakes [SSEP] [C] food quality [S] bad [A] breakfast burrito [SSEP] [C] drinks quality [S] bad [A] orange juice [SSEP] [C] food quality [S] bad [A] iced tea', '[C] food prices [A] pancakes [S] bad [SSEP] [C] food quality [A] breakfast burrito [S] bad [SSEP] [C] drinks quality [A] orange juice [S] bad [SSEP] [C] food quality [A] iced tea [S] bad', '[S] bad [C] food prices [A] pancakes [SSEP] [S] bad [C] food quality [A] breakfast burrito [SSEP] [S] great [C] drinks quality [A] orange juice [SSEP] [S] bad [C] food quality [A] iced tea']

task, data: tasd rest16
target: [('location general', 'view', 'great', 'null'), ('restaurant general', 'null', 'great', 'null')]
output: ['[A] view [S] great [C] location general']
sent: ['Much', 'more', 'than', 'just', 'a', 'great', 'view', '!']
counter: {('location general', 'view', 'great', 'null'): 5}
output quads: ['[A] view [S] great [C] location general']
multi_path: ['[A] view [C] location general [S] great', '[A] view [S] great [C] location general', '[C] location general [S] great [A] view', '[C] location general [A] view [S] great', '[S] great [C] location general [A] view']

task, data: tasd rest16
target: [('restaurant general', "ray's boathouse", 'great', 'null')]
output: ['[A] dinner [S] great [C] food quality']
sent: ['–', 'I', 'am', 'exceedingly', 'pleased', 'to', 'report', 'that', 'my', 'dinner', 'at', 'Ray', "'s", 'Boathouse', 'last', 'Friday', 'completely', 'exceeded', 'my', 'expectations', '.']
counter: {('food quality', 'dinner', 'great', 'null'): 5}
output quads: ['[A] dinner [S] great [C] food quality']
multi_path: ['[A] dinner [C] food quality [S] great', '[A] dinner [S] great [C] food quality', '[C] food quality [S] great [A] dinner', '[C] food quality [A] dinner [S] great', '[S] great [C] food quality [A] dinner']

task, data: tasd rest16
target: [('location general', 'sound views', 'great', 'null')]
output: ["[A] ray's [S] great [C] location general", '[A] scenery [S] great [C] ambience general', '[A] service [S] great [C] service general']
sent: ['Ray', "'s", 'is', 'something', 'of', 'a', 'Seattle', 'institution', ',', 'but', 'given', 'its', 'gorgeous', 'Sound', 'views', ',', 'I', 'had', 'suspected', 'that', 'the', 'accolades', 'were', 'more', 'due', 'to', 'the', 'scenery', 'than', 'to', 'the', 'food', 'and', 'service', '.']
counter: {('restaurant general', "ray's", 'great', 'null'): 2, ('location general', 'sound views', 'great', 'null'): 2, ('ambience general', 'scenery', 'great', 'null'): 4, ('service general', 'service', 'great', 'null'): 5, ('location general', "ray's", 'great', 'null'): 3, ('location general', 'scenery', 'great', 'null'): 1}
output quads: ['[A] scenery [S] great [C] ambience general', '[A] service [S] great [C] service general', "[A] ray's [S] great [C] location general"]
multi_path: ["[A] ray's [C] restaurant general [S] great [SSEP] [A] sound views [C] location general [S] great [SSEP] [A] scenery [C] ambience general [S] great [SSEP] [A] service [C] service general [S] great", "[A] ray's [S] great [C] restaurant general [SSEP] [A] sound views [S] great [C] location general [SSEP] [A] scenery [S] great [C] ambience general [SSEP] [A] service [S] great [C] service general", "[C] location general [S] great [A] ray's [SSEP] [C] ambience general [S] great [A] scenery [SSEP] [C] service general [S] great [A] service", "[C] location general [A] ray's [S] great [SSEP] [C] ambience general [A] scenery [S] great [SSEP] [C] service general [A] service [S] great", "[S] great [C] location general [A] ray's [SSEP] [S] great [C] location general [A] scenery [SSEP] [S] great [C] service general [A] service"]

task, data: tasd rest16
target: [('location general', 'views', 'great', 'null'), ('restaurant general', "ray's", 'great', 'null')]
output: ['[A] views [S] great [C] location general']
sent: ['Imagine', 'my', 'happy', 'surprise', 'upon', 'finding', 'that', 'the', 'views', 'are', 'only', 'the', 'third-best', 'thing', 'about', 'Ray', "'s", '!']
counter: {('location general', 'views', 'great', 'null'): 5}
output quads: ['[A] views [S] great [C] location general']
multi_path: ['[A] views [C] location general [S] great', '[A] views [S] great [C] location general', '[C] location general [S] great [A] views', '[C] location general [A] views [S] great', '[S] great [C] location general [A] views']

task, data: tasd rest16
target: [('service general', 'brooke', 'great', 'null')]
output: ['[A] server [S] great [C] service general']
sent: ['To', 'start', 'things', 'off', ',', 'our', 'lovely', 'server', 'Brooke', 'was', 'quickly', 'on', 'hand', 'to', 'take', 'my', 'drink', 'order', '.']
counter: {('service general', 'server', 'great', 'null'): 5}
output quads: ['[A] server [S] great [C] service general']
multi_path: ['[A] server [C] service general [S] great', '[A] server [S] great [C] service general', '[C] service general [S] great [A] server', '[C] service general [A] server [S] great', '[S] great [C] service general [A] server']

task, data: tasd rest16
target: [('food quality', 'butter sauce', 'great', 'null'), ('food quality', 'manila clams', 'great', 'null'), ('food quality', 'shilshole sampler', 'great', 'null'), ('food quality', 'soy dressing', 'great', 'null'), ('food style_options', 'shilshole sampler', 'great', 'null'), ('food style_options', 'white gulf prawns', 'great', 'null')]
output: ['[A] assortment of enormous white gulf prawns [S] great [C] food style_options', '[A] dungeness crab [S] great [C] food quality', '[A] manila clams seasoned with dill [S] great [C] food quality', '[A] scallops in a tasty soy dressing [S] great [C] food quality', '[A] shilshole sampler [S] great [C] food quality', '[A] smoked albacore tuna [S] great [C] food quality']
sent: ['My', 'party', 'of', 'two', 'was', 'feeling', 'particularly', 'ambitious', ',', 'and', 'we', 'splurged', 'on', 'the', 'Shilshole', 'Sampler', '.', '.', '.a', 'beautiful', 'assortment', 'of', 'enormous', 'white', 'gulf', 'prawns', ',', 'smoked', 'albacore', 'tuna', ',', 'Ray', "'s", 'fantastic', 'manila', 'clams', 'seasoned', 'with', 'dill', ',', 'scallops', 'in', 'a', 'tasty', 'soy', 'dressing', ',', 'and', 'a', 'tiny', 'pile', 'of', 'Dungeness', 'crab', 'atop', 'a', 'sublime', 'butter', 'sauce', '.']
counter: {('food quality', 'shilshole sampler', 'great', 'null'): 5, ('food style_options', 'assortment of enormous white gulf prawns', 'great', 'null'): 5, ('food quality', 'smoked albacore tuna', 'great', 'null'): 5, ('food quality', 'manila clams seasoned with dill', 'great', 'null'): 5, ('food quality', 'scallops in a tasty soy dressing', 'great', 'null'): 5, ('food quality', 'dungeness crab', 'great', 'null'): 5}
output quads: ['[A] shilshole sampler [S] great [C] food quality', '[A] assortment of enormous white gulf prawns [S] great [C] food style_options', '[A] smoked albacore tuna [S] great [C] food quality', '[A] manila clams seasoned with dill [S] great [C] food quality', '[A] scallops in a tasty soy dressing [S] great [C] food quality', '[A] dungeness crab [S] great [C] food quality']
multi_path: ['[A] shilshole sampler [C] food quality [S] great [SSEP] [A] assortment of enormous white gulf prawns [C] food style_options [S] great [SSEP] [A] smoked albacore tuna [C] food quality [S] great [SSEP] [A] manila clams seasoned with dill [C] food quality [S] great [SSEP] [A] scallops in a tasty soy dressing [C] food quality [S] great [SSEP] [A] dungeness crab [C] food quality [S] great', '[A] shilshole sampler [S] great [C] food quality [SSEP] [A] assortment of enormous white gulf prawns [S] great [C] food style_options [SSEP] [A] smoked albacore tuna [S] great [C] food quality [SSEP] [A] manila clams seasoned with dill [S] great [C] food quality [SSEP] [A] scallops in a tasty soy dressing [S] great [C] food quality [SSEP] [A] dungeness crab [S] great [C] food quality', '[C] food quality [S] great [A] shilshole sampler [SSEP] [C] food style_options [S] great [A] assortment of enormous white gulf prawns [SSEP] [C] food quality [S] great [A] smoked albacore tuna [SSEP] [C] food quality [S] great [A] manila clams seasoned with dill [SSEP] [C] food quality [S] great [A] scallops in a tasty soy dressing [SSEP] [C] food quality [S] great [A] dungeness crab', '[C] food quality [A] shilshole sampler [S] great [SSEP] [C] food style_options [A] assortment of enormous white gulf prawns [S] great [SSEP] [C] food quality [A] smoked albacore tuna [S] great [SSEP] [C] food quality [A] manila clams seasoned with dill [S] great [SSEP] [C] food quality [A] scallops in a tasty soy dressing [S] great [SSEP] [C] food quality [A] dungeness crab [S] great', '[S] great [C] food quality [A] shilshole sampler [SSEP] [S] great [C] food style_options [A] assortment of enormous white gulf prawns [SSEP] [S] great [C] food quality [A] smoked albacore tuna [SSEP] [S] great [C] food quality [A] manila clams seasoned with dill [SSEP] [S] great [C] food quality [A] scallops in a tasty soy dressing [SSEP] [S] great [C] food quality [A] dungeness crab']

task, data: tasd rest16
target: [('food quality', 'seared alaskan sea scallops', 'great', 'null'), ('food style_options', 'seared alaskan sea scallops', 'great', 'null')]
output: ['[A] artichoke hearts [S] great [C] food quality', '[A] fennel [S] great [C] food quality', '[A] pecorino toscano [S] great [C] food quality', '[A] seared alaskan sea scallops [S] great [C] food quality']
sent: ['For', 'my', 'entr', '&eacute', ';e', ',', 'I', 'completely', 'enjoyed', 'the', 'seared', 'Alaskan', 'sea', 'scallops', 'complemented', 'by', 'chard', ',', 'artichoke', 'hearts', ',', 'fennel', ',', 'and', 'pecorino', 'toscano', '.']
counter: {('food quality', 'seared alaskan sea scallops', 'great', 'null'): 5, ('food quality', 'artichoke hearts', 'great', 'null'): 5, ('food quality', 'fennel', 'great', 'null'): 5, ('food quality', 'pecorino toscano', 'great', 'null'): 5}
output quads: ['[A] seared alaskan sea scallops [S] great [C] food quality', '[A] artichoke hearts [S] great [C] food quality', '[A] fennel [S] great [C] food quality', '[A] pecorino toscano [S] great [C] food quality']
multi_path: ['[A] seared alaskan sea scallops [C] food quality [S] great [SSEP] [A] artichoke hearts [C] food quality [S] great [SSEP] [A] fennel [C] food quality [S] great [SSEP] [A] pecorino toscano [C] food quality [S] great', '[A] seared alaskan sea scallops [S] great [C] food quality [SSEP] [A] artichoke hearts [S] great [C] food quality [SSEP] [A] fennel [S] great [C] food quality [SSEP] [A] pecorino toscano [S] great [C] food quality', '[C] food quality [S] great [A] seared alaskan sea scallops [SSEP] [C] food quality [S] great [A] artichoke hearts [SSEP] [C] food quality [S] great [A] fennel [SSEP] [C] food quality [S] great [A] pecorino toscano', '[C] food quality [A] seared alaskan sea scallops [S] great [SSEP] [C] food quality [A] artichoke hearts [S] great [SSEP] [C] food quality [A] fennel [S] great [SSEP] [C] food quality [A] pecorino toscano [S] great', '[S] great [C] food quality [A] seared alaskan sea scallops [SSEP] [S] great [C] food quality [A] artichoke hearts [SSEP] [S] great [C] food quality [A] fennel [SSEP] [S] great [C] food quality [A] pecorino toscano']

task, data: tasd rest16
target: [('food quality', 'scallops', 'great', 'null'), ('food style_options', 'scallops', 'great', 'null')]
output: ['[A] scallops [S] great [C] food quality']
sent: ['The', 'scallops', 'are', 'apparently', 'cooked', 'in', 'a', 'black', 'olive', 'butter', 'which', 'really', 'makes', 'them', 'unique', '(not', 'to', 'mention', 'tasty', ')', '.']
counter: {('food quality', 'scallops', 'great', 'null'): 5}
output quads: ['[A] scallops [S] great [C] food quality']
multi_path: ['[A] scallops [C] food quality [S] great', '[A] scallops [S] great [C] food quality', '[C] food quality [S] great [A] scallops', '[C] food quality [A] scallops [S] great', '[S] great [C] food quality [A] scallops']

task, data: tasd rest16
target: [('food quality', 'creamed washington russet potatoes', 'great', 'null'), ('food quality', 'green beans', 'great', 'null'), ('food quality', 'grilled alaskan king salmon', 'great', 'null')]
output: ['[A] grilled alaskan king salmon with crisp green beans [S] great [C] food quality']
sent: ['My', 'friend', 'enjoyed', 'the', 'grilled', 'Alaskan', 'King', 'Salmon', 'with', 'delectable', 'creamed', 'Washington', 'russet', 'potatoes', 'and', 'crisp', 'green', 'beans', '.']
counter: {('food quality', 'grilled alaskan king salmon with crisp green beans', 'great', 'null'): 5}
output quads: ['[A] grilled alaskan king salmon with crisp green beans [S] great [C] food quality']
multi_path: ['[A] grilled alaskan king salmon with crisp green beans [C] food quality [S] great', '[A] grilled alaskan king salmon with crisp green beans [S] great [C] food quality', '[C] food quality [S] great [A] grilled alaskan king salmon with crisp green beans', '[C] food quality [A] grilled alaskan king salmon with crisp green beans [S] great', '[S] great [C] food quality [A] grilled alaskan king salmon with crisp green beans']

task, data: tasd rest16
target: [('food quality', 'plate', 'great', 'null')]
output: ['[A] null [S] great [C] food quality']
sent: ['I', 'had', 'a', 'taste', 'of', 'all', 'three', 'items', 'on', 'her', 'plate', ',', 'and', 'they', 'were', 'superb', '.']
counter: {('food quality', 'null', 'great', 'null'): 5}
output quads: ['[A] null [S] great [C] food quality']
multi_path: ['[A] it [C] food quality [S] great', '[A] it [S] great [C] food quality', '[C] food quality [S] great [A] it', '[C] food quality [A] it [S] great', '[S] great [C] food quality [A] it']

task, data: tasd rest16
target: [('restaurant miscellaneous', "ray's", 'ok', 'null'), ('service general', 'server', 'great', 'null')]
output: ["[A] ray's [S] bad [C] restaurant miscellaneous", '[A] server [S] great [C] service general']
sent: ['Our', 'server', 'continued', 'to', 'be', 'attentive', 'throughout', 'the', 'night', ',', 'but', 'I', 'did', 'remain', 'puzzled', 'by', 'one', 'issue', ':', 'Who', 'thinks', 'that', 'Ray', "'s", 'is', 'an', 'appropriate', 'place', 'to', 'take', 'young', 'children', 'for', 'dinner', '?']
counter: {('service general', 'server', 'great', 'null'): 5, ('restaurant miscellaneous', "ray's", 'bad', 'null'): 5}
output quads: ['[A] server [S] great [C] service general', "[A] ray's [S] bad [C] restaurant miscellaneous"]
multi_path: ["[A] server [C] service general [S] great [SSEP] [A] ray's [C] restaurant miscellaneous [S] bad", "[A] server [S] great [C] service general [SSEP] [A] ray's [S] bad [C] restaurant miscellaneous", "[C] service general [S] great [A] server [SSEP] [C] restaurant miscellaneous [S] bad [A] ray's", "[C] service general [A] server [S] great [SSEP] [C] restaurant miscellaneous [A] ray's [S] bad", "[S] great [C] service general [A] server [SSEP] [S] bad [C] restaurant miscellaneous [A] ray's"]

task, data: tasd rest16
target: [('restaurant miscellaneous', 'null', 'bad', 'null')]
output: ['[A] preteen [S] bad [C] service general']
sent: ['Two', 'rascally', 'kids', 'were', 'seated', 'near', 'us', 'for', 'the', 'first', 'part', 'of', 'our', 'dinner', '.', '.', '.they', 'were', 'replaced', 'by', 'a', 'delightful', 'preteen', 'who', 'pretended', 'to', 'gag', 'every', 'time', 'seafood', 'was', 'mentioned', 'at', 'her', 'table', '.']
counter: {('service general', 'preteen', 'bad', 'null'): 5}
output quads: ['[A] preteen [S] bad [C] service general']
multi_path: ['[A] preteen [C] service general [S] bad', '[A] preteen [S] bad [C] service general', '[C] service general [S] bad [A] preteen', '[C] service general [A] preteen [S] bad', '[S] bad [C] service general [A] preteen']

task, data: tasd rest16
target: [('food quality', 'food', 'great', 'null'), ('restaurant miscellaneous', 'null', 'bad', 'null'), ('service general', 'server', 'great', 'null')]
output: ['[A] food [S] great [C] food quality', '[A] server [S] great [C] service general']
sent: ['While', 'I', 'could', 'have', 'done', 'without', 'the', 'youth', 'who', 'shared', 'the', 'evening', 'with', 'us', ',', 'our', 'wonderful', 'server', 'and', 'food', 'made', 'the', 'experience', 'a', 'very', 'positive', 'one', '.']
counter: {('service general', 'server', 'great', 'null'): 5, ('food quality', 'food', 'great', 'null'): 5, ('restaurant general', 'null', 'great', 'null'): 2, ('restaurant general', 'youth', 'great', 'null'): 2, ('restaurant miscellaneous', 'youth', 'great', 'null'): 1}
output quads: ['[A] server [S] great [C] service general', '[A] food [S] great [C] food quality']
multi_path: ['[A] server [C] service general [S] great [SSEP] [A] food [C] food quality [S] great [SSEP] [A] it [C] restaurant general [S] great', '[A] server [S] great [C] service general [SSEP] [A] food [S] great [C] food quality [SSEP] [A] it [S] great [C] restaurant general', '[C] service general [S] great [A] server [SSEP] [C] food quality [S] great [A] food [SSEP] [C] restaurant general [S] great [A] youth', '[C] service general [A] server [S] great [SSEP] [C] food quality [A] food [S] great [SSEP] [C] restaurant miscellaneous [A] youth [S] great', '[S] great [C] service general [A] server [SSEP] [S] great [C] food quality [A] food [SSEP] [S] great [C] restaurant general [A] youth']

pred labels count Counter({1: 417, 2: 121, 3: 38, 4: 6, 5: 3, 9: 1, 6: 1})
gold  [A] it [C] food quality [S] great
pred  [A] null [S] great [C] food quality

gold  [A] sushi [C] food quality [S] great
pred  [A] sushi [S] great [C] food quality

gold  [A] portions [C] food style_options [S] ok
pred  [A] portions [S] ok [C] food style_options [SSEP] [A] portions [S] great [C] food style_options

gold  [A] green tea creme brulee [C] food quality [S] great
pred  [A] green tea creme brulee [S] great [C] food quality

gold  [A] it [C] food quality [S] great
pred  [A] restaurant [S] great [C] restaurant general

gold  [A] it [C] restaurant general [S] great
pred  [A] null [S] great [C] restaurant general

gold  [A] place [C] restaurant general [S] great
pred  [A] place [S] great [C] restaurant general

gold  [A] sushi [C] food quality [S] great [SSEP] [A] service [C] service general [S] great
pred  [A] sushi [S] great [C] food quality [SSEP] [A] service [S] great [C] service general

gold  [A] staff [C] service general [S] great
pred  [A] staff [S] great [C] service general

gold  [A] restaurant [C] restaurant general [S] great
pred  [A] restaurant [S] great [C] restaurant general

number of gold spans: 859, predicted spans: 827, hit: 573
tasd rest16 {'precision': 69.28657799274485, 'recall': 66.70547147846332, 'f1': 67.97153024911033}
Total examples = 816
Total examples = 816
Ori sent size: 816
Input size: 4080 4080
Examples:
[['acos', ':', 'laptop16', ':', 'the', 'unit', 'cost', '$', '275', 'to', 'start', 'with', ',', 'so', 'it', 'is', 'not', 'worth', 'repairing', '.', '[A]', '[O]', '[S]', '[C]'], ['acos', ':', 'laptop16', ':', 'the', 'unit', 'cost', '$', '275', 'to', 'start', 'with', ',', 'so', 'it', 'is', 'not', 'worth', 'repairing', '.', '[A]', '[S]', '[O]', '[C]'], ['acos', ':', 'laptop16', ':', 'the', 'unit', 'cost', '$', '275', 'to', 'start', 'with', ',', 'so', 'it', 'is', 'not', 'worth', 'repairing', '.', '[A]', '[O]', '[C]', '[S]'], ['acos', ':', 'laptop16', ':', 'the', 'unit', 'cost', '$', '275', 'to', 'start', 'with', ',', 'so', 'it', 'is', 'not', 'worth', 'repairing', '.', '[O]', '[A]', '[S]', '[C]'], ['acos', ':', 'laptop16', ':', 'the', 'unit', 'cost', '$', '275', 'to', 'start', 'with', ',', 'so', 'it', 'is', 'not', 'worth', 'repairing', '.', '[O]', '[A]', '[C]', '[S]'], ['acos', ':', 'laptop16', ':', 'going', 'from', 'acer', '15', 'to', 'acer', '11', 'was', 'difficult', ',', '11', 'inches', 'seems', 'too', 'small', 'for', 'me', '.', '[A]', '[O]', '[S]', '[C]'], ['acos', ':', 'laptop16', ':', 'going', 'from', 'acer', '15', 'to', 'acer', '11', 'was', 'difficult', ',', '11', 'inches', 'seems', 'too', 'small', 'for', 'me', '.', '[A]', '[S]', '[O]', '[C]'], ['acos', ':', 'laptop16', ':', 'going', 'from', 'acer', '15', 'to', 'acer', '11', 'was', 'difficult', ',', '11', 'inches', 'seems', 'too', 'small', 'for', 'me', '.', '[A]', '[O]', '[C]', '[S]'], ['acos', ':', 'laptop16', ':', 'going', 'from', 'acer', '15', 'to', 'acer', '11', 'was', 'difficult', ',', '11', 'inches', 'seems', 'too', 'small', 'for', 'me', '.', '[O]', '[A]', '[S]', '[C]'], ['acos', ':', 'laptop16', ':', 'going', 'from', 'acer', '15', 'to', 'acer', '11', 'was', 'difficult', ',', '11', 'inches', 'seems', 'too', 'small', 'for', 'me', '.', '[O]', '[A]', '[C]', '[S]']]
['[A] unit [O] not worth [S] bad [C] laptop price', '[A] unit [S] bad [O] not worth [C] laptop price', '[A] unit [O] not worth [C] laptop price [S] bad', '[O] not worth [A] unit [S] bad [C] laptop price', '[O] not worth [A] unit [C] laptop price [S] bad', '[A] acer 11 [O] difficult [S] bad [C] laptop design_features [SSEP] [A] acer 11 [O] small [S] bad [C] laptop design_features', '[A] acer 11 [S] bad [O] difficult [C] laptop design_features [SSEP] [A] acer 11 [S] bad [O] small [C] laptop design_features', '[A] acer 11 [O] difficult [C] laptop design_features [S] bad [SSEP] [A] acer 11 [O] small [C] laptop design_features [S] bad', '[O] difficult [A] acer 11 [S] bad [C] laptop design_features [SSEP] [O] small [A] acer 11 [S] bad [C] laptop design_features', '[O] difficult [A] acer 11 [C] laptop design_features [S] bad [SSEP] [O] small [A] acer 11 [C] laptop design_features [S] bad']
task, data: acos laptop16
target: [('laptop design_features', 'acer 11', 'bad', 'difficult'), ('laptop design_features', 'acer 11', 'bad', 'small')]
output: ['[A] 11 inches [O] too small [S] bad [C] laptop design_features', '[A] acer 11 [O] difficult [S] bad [C] laptop design_features']
sent: ['going', 'from', 'acer', '15', 'to', 'acer', '11', 'was', 'difficult', ',', '11', 'inches', 'seems', 'too', 'small', 'for', 'me', '.']
counter: {('laptop design_features', 'acer 11', 'bad', 'difficult'): 5, ('laptop design_features', '11 inches', 'bad', 'too small'): 4, ('laptop design_features', 'acer 15', 'bad', 'too small'): 1}
output quads: ['[A] acer 11 [O] difficult [S] bad [C] laptop design_features', '[A] 11 inches [O] too small [S] bad [C] laptop design_features']
multi_path: ['[A] acer 11 [O] difficult [S] bad [C] laptop design_features [SSEP] [A] 11 inches [O] too small [S] bad [C] laptop design_features', '[A] acer 11 [S] bad [O] difficult [C] laptop design_features [SSEP] [A] 11 inches [S] bad [O] too small [C] laptop design_features', '[A] acer 11 [O] difficult [C] laptop design_features [S] bad [SSEP] [A] 11 inches [O] too small [C] laptop design_features [S] bad', '[O] difficult [A] acer 11 [S] bad [C] laptop design_features [SSEP] [O] too small [A] acer 15 [S] bad [C] laptop design_features', '[O] difficult [A] acer 11 [C] laptop design_features [S] bad [SSEP] [O] too small [A] 11 inches [C] laptop design_features [S] bad']

task, data: acos laptop16
target: [('hard_disc operation_performance', 'ssd drive', 'bad', 'null')]
output: ['[A] emmc [O] null [S] great [C] hard_disc general']
sent: ['also', 'it', "'", 's', 'not', 'a', 'true', 'ssd', 'drive', 'in', 'there', 'but', 'emmc', ',', 'which', 'makes', 'a', 'difference', '.']
counter: {('hard_disc general', 'emmc', 'great', 'null'): 5}
output quads: ['[A] emmc [O] null [S] great [C] hard_disc general']
multi_path: ['[A] emmc [O] null [S] great [C] hard_disc general', '[A] emmc [S] great [O] null [C] hard_disc general', '[A] emmc [O] null [C] hard_disc general [S] great', '[O] null [A] emmc [S] great [C] hard_disc general', '[O] null [A] emmc [C] hard_disc general [S] great']

task, data: acos laptop16
target: [('laptop usability', 'computer', 'bad', 'difficulty')]
output: ['[A] computer [O] null [S] bad [C] laptop usability']
sent: ['the', 'computer', 'has', 'difficulty', 'switching', 'between', 'tablet', 'and', 'computer', '.']
counter: {('laptop usability', 'computer', 'bad', 'null'): 5}
output quads: ['[A] computer [O] null [S] bad [C] laptop usability']
multi_path: ['[A] computer [O] null [S] bad [C] laptop usability', '[A] computer [S] bad [O] null [C] laptop usability', '[A] computer [O] null [C] laptop usability [S] bad', '[O] null [A] computer [S] bad [C] laptop usability', '[O] null [A] computer [C] laptop usability [S] bad']

task, data: acos laptop16
target: [('laptop general', 'null', 'bad', 'badly'), ('laptop general', 'null', 'bad', 'suck')]
output: ['[A] null [O] badly [S] great [C] laptop general']
sent: ['hopefully', 'in', '10', 'years', 'they', "'", 'll', 'have', 'this', 'figured', 'out', 'and', 'it', 'won', "'", 't', 'suck', 'so', 'badly', '.']
counter: {('laptop general', 'null', 'great', 'badly'): 5}
output quads: ['[A] null [O] badly [S] great [C] laptop general']
multi_path: ['[A] it [O] badly [S] great [C] laptop general', '[A] it [S] great [O] badly [C] laptop general', '[A] it [O] badly [C] laptop general [S] great', '[O] badly [A] it [S] great [C] laptop general', '[O] badly [A] it [C] laptop general [S] great']

task, data: acos laptop16
target: [('hardware operation_performance', 'null', 'bad', 'barely usable'), ('hardware operation_performance', 'null', 'bad', 'glitchy')]
output: ['[A] null [O] barely usable [S] bad [C] laptop operation_performance', '[A] null [O] glitchy [S] bad [C] laptop operation_performance']
sent: ['it', 'is', 'glitchy', ',', 'and', 'barely', 'usable', '.']
counter: {('laptop operation_performance', 'null', 'bad', 'glitchy'): 5, ('laptop operation_performance', 'null', 'bad', 'barely usable'): 5}
output quads: ['[A] null [O] glitchy [S] bad [C] laptop operation_performance', '[A] null [O] barely usable [S] bad [C] laptop operation_performance']
multi_path: ['[A] it [O] glitchy [S] bad [C] laptop operation_performance [SSEP] [A] it [O] barely usable [S] bad [C] laptop operation_performance', '[A] it [S] bad [O] glitchy [C] laptop operation_performance [SSEP] [A] it [S] bad [O] barely usable [C] laptop operation_performance', '[A] it [O] glitchy [C] laptop operation_performance [S] bad [SSEP] [A] it [O] barely usable [C] laptop operation_performance [S] bad', '[O] glitchy [A] it [S] bad [C] laptop operation_performance [SSEP] [O] barely usable [A] it [S] bad [C] laptop operation_performance', '[O] glitchy [A] it [C] laptop operation_performance [S] bad [SSEP] [O] barely usable [A] it [C] laptop operation_performance [S] bad']

task, data: acos laptop16
target: [('hardware operation_performance', 'touch pad', 'bad', 'failed')]
output: ['[A] touch pad [O] failed [S] bad [C] keyboard operation_performance']
sent: ['i', 'ordered', 'one', ',', 'the', 'touch', 'pad', 'failed', 'to', 'work', 'consistently', '.']
counter: {('keyboard operation_performance', 'touch pad', 'bad', 'failed'): 5}
output quads: ['[A] touch pad [O] failed [S] bad [C] keyboard operation_performance']
multi_path: ['[A] touch pad [O] failed [S] bad [C] keyboard operation_performance', '[A] touch pad [S] bad [O] failed [C] keyboard operation_performance', '[A] touch pad [O] failed [C] keyboard operation_performance [S] bad', '[O] failed [A] touch pad [S] bad [C] keyboard operation_performance', '[O] failed [A] touch pad [C] keyboard operation_performance [S] bad']

task, data: acos laptop16
target: [('keyboard general', 'keys', 'bad', 'unproductive')]
output: ['[A] keys [O] unproductive [S] bad [C] keyboard operation_performance']
sent: ['i', 'often', 'find', 'i', "'", 've', 'typed', 'an', 'entire', 'sentence', '(', 'or', 'more', ')', 'with', 'my', 'fingers', 'on', 'the', 'wrong', 'keys', ',', 'which', 'is', 'very', 'unproductive', 'when', 'trying', 'to', 'take', 'real', '-', 'time', 'notes', 'in', 'a', 'meeting', '!']
counter: {('keyboard operation_performance', 'keys', 'bad', 'unproductive'): 5}
output quads: ['[A] keys [O] unproductive [S] bad [C] keyboard operation_performance']
multi_path: ['[A] keys [O] unproductive [S] bad [C] keyboard operation_performance', '[A] keys [S] bad [O] unproductive [C] keyboard operation_performance', '[A] keys [O] unproductive [C] keyboard operation_performance [S] bad', '[O] unproductive [A] keys [S] bad [C] keyboard operation_performance', '[O] unproductive [A] keys [C] keyboard operation_performance [S] bad']

task, data: acos laptop16
target: [('laptop general', 'device', 'bad', 'worse')]
output: ['[A] device [O] null [S] bad [C] laptop operation_performance']
sent: ['i', 'know', 'it', 'only', 'takes', 'a', 'few', 'seconds', ',', 'but', 'a', 'new', 'device', 'should', 'not', 'be', 'doing', 'this', 'and', 'makes', 'me', 'question', 'if', 'it', "'", 'll', 'get', 'worse', 'in', 'the', 'future', '.']
counter: {('laptop operation_performance', 'device', 'bad', 'null'): 5}
output quads: ['[A] device [O] null [S] bad [C] laptop operation_performance']
multi_path: ['[A] device [O] null [S] bad [C] laptop operation_performance', '[A] device [S] bad [O] null [C] laptop operation_performance', '[A] device [O] null [C] laptop operation_performance [S] bad', '[O] null [A] device [S] bad [C] laptop operation_performance', '[O] null [A] device [C] laptop operation_performance [S] bad']

task, data: acos laptop16
target: [('keyboard usability', 'track pad', 'bad', 'null')]
output: ['[A] track pad [O] null [S] bad [C] keyboard operation_performance', '[A] trackpad [O] hard [S] bad [C] keyboard operation_performance']
sent: ['i', 'also', 'have', 'to', 'press', 'the', 'trackpad', 'very', 'hard', 'for', 'left', 'click', '(', 'not', 'as', 'badly', 'as', 'the', 'first', 'unit', ',', 'though', ')', ',', 'and', 'i', 'lost', 'right', 'click', 'functionality', 'on', 'the', 'track', 'pad', '2', 'days', 'into', 'my', 'voyage', 'with', 'this', 'thing', '.']
counter: {('keyboard operation_performance', 'trackpad', 'bad', 'hard'): 4, ('keyboard operation_performance', 'track pad', 'bad', 'null'): 4, ('keyboard operation_performance', 'trackpad', 'bad', 'null'): 2}
output quads: ['[A] trackpad [O] hard [S] bad [C] keyboard operation_performance', '[A] track pad [O] null [S] bad [C] keyboard operation_performance']
multi_path: ['[A] trackpad [O] hard [S] bad [C] keyboard operation_performance [SSEP] [A] track pad [O] null [S] bad [C] keyboard operation_performance', '[A] trackpad [S] bad [O] hard [C] keyboard operation_performance [SSEP] [A] track pad [S] bad [O] null [C] keyboard operation_performance', '[A] trackpad [O] hard [C] keyboard operation_performance [S] bad [SSEP] [A] track pad [O] null [C] keyboard operation_performance [S] bad', '[O] null [A] trackpad [S] bad [C] keyboard operation_performance [SSEP] [O] hard [A] trackpad [S] bad [C] keyboard operation_performance', '[O] null [A] trackpad [C] keyboard operation_performance [S] bad [SSEP] [O] null [A] track pad [C] keyboard operation_performance [S] bad']

task, data: acos laptop16
target: [('os general', 'os', 'ok', 'null')]
output: ['[A] null [O] null [S] bad [C] laptop operation_performance']
sent: ['i', 'tried', 'factory', 'resetting', 'after', 'i', 'updated', 'the', 'os', ',', 'and', 'it', 'still', 'drained', '9', '%', 'over', '8', 'hours', '.']
counter: {('laptop operation_performance', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [O] null [S] bad [C] laptop operation_performance']
multi_path: ['[A] it [O] null [S] bad [C] laptop operation_performance', '[A] it [S] bad [O] null [C] laptop operation_performance', '[A] it [O] null [C] laptop operation_performance [S] bad', '[O] null [A] it [S] bad [C] laptop operation_performance', '[O] null [A] it [C] laptop operation_performance [S] bad']

task, data: acos laptop16
target: [('ports quality', 'hdmi', 'bad', 'null')]
output: ['[A] hdmi out [O] null [S] bad [C] ports operation_performance']
sent: ['hdmi', 'out', 'doesn', "'", 't', 'work', 'right', '.']
counter: {('ports operation_performance', 'hdmi out', 'bad', 'null'): 5}
output quads: ['[A] hdmi out [O] null [S] bad [C] ports operation_performance']
multi_path: ['[A] hdmi out [O] null [S] bad [C] ports operation_performance', '[A] hdmi out [S] bad [O] null [C] ports operation_performance', '[A] hdmi out [O] null [C] ports operation_performance [S] bad', '[O] null [A] hdmi out [S] bad [C] ports operation_performance', '[O] null [A] hdmi out [C] ports operation_performance [S] bad']

task, data: acos laptop16
target: [('support general', 'null', 'ok', 'null')]
output: ['[A] null [O] null [S] bad [C] shipping general']
sent: ['they', 'had', 'it', 'over', 'a', 'week', 'and', 'then', 'shipped', 'back', '.']
counter: {('shipping general', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [O] null [S] bad [C] shipping general']
multi_path: ['[A] it [O] null [S] bad [C] shipping general', '[A] it [S] bad [O] null [C] shipping general', '[A] it [O] null [C] shipping general [S] bad', '[O] null [A] it [S] bad [C] shipping general', '[O] null [A] it [C] shipping general [S] bad']

task, data: acos laptop16
target: [('hardware operation_performance', 'touchscreen', 'bad', 'null')]
output: ['[A] touchscreen [O] null [S] bad [C] display operation_performance']
sent: ['i', 'was', 'excited', 'to', 'receive', 'this', 'chromebook', ',', 'only', 'to', 'watch', 'that', 'excitement', 'dissipate', 'within', 'mere', 'hours', 'as', 'i', 'noticed', 'the', 'touchscreen', 'did', 'n', "'", 't', 'work', 'at', 'all', 'on', 'tablet', 'mode', '.']
counter: {('display operation_performance', 'touchscreen', 'bad', 'null'): 5}
output quads: ['[A] touchscreen [O] null [S] bad [C] display operation_performance']
multi_path: ['[A] touchscreen [O] null [S] bad [C] display operation_performance', '[A] touchscreen [S] bad [O] null [C] display operation_performance', '[A] touchscreen [O] null [C] display operation_performance [S] bad', '[O] null [A] touchscreen [S] bad [C] display operation_performance', '[O] null [A] touchscreen [C] display operation_performance [S] bad']

task, data: acos laptop16
target: [('multimedia_devices quality', 'sound', 'great', 'decent')]
output: ['[A] sound quality [O] decent [S] great [C] multimedia_devices quality']
sent: ['decent', 'sound', 'quality', '.']
counter: {('multimedia_devices quality', 'sound quality', 'great', 'decent'): 5}
output quads: ['[A] sound quality [O] decent [S] great [C] multimedia_devices quality']
multi_path: ['[A] sound quality [O] decent [S] great [C] multimedia_devices quality', '[A] sound quality [S] great [O] decent [C] multimedia_devices quality', '[A] sound quality [O] decent [C] multimedia_devices quality [S] great', '[O] decent [A] sound quality [S] great [C] multimedia_devices quality', '[O] decent [A] sound quality [C] multimedia_devices quality [S] great']

task, data: acos laptop16
target: [('ports quality', 'wi - fi', 'bad', 'null')]
output: ['[A] wi - fi [O] null [S] bad [C] ports operation_performance']
sent: ['wi', '-', 'fi', 'slows', 'down', 'to', 'crowl', 'and', 'speeds', 'back', 'up', 'intermittently', '.']
counter: {('ports operation_performance', 'wi - fi', 'bad', 'null'): 5}
output quads: ['[A] wi - fi [O] null [S] bad [C] ports operation_performance']
multi_path: ['[A] wi - fi [O] null [S] bad [C] ports operation_performance', '[A] wi - fi [S] bad [O] null [C] ports operation_performance', '[A] wi - fi [O] null [C] ports operation_performance [S] bad', '[O] null [A] wi - fi [S] bad [C] ports operation_performance', '[O] null [A] wi - fi [C] ports operation_performance [S] bad']

task, data: acos laptop16
target: [('laptop quality', 'null', 'bad', 'null')]
output: ['[A] null [O] null [S] bad [C] laptop operation_performance']
sent: ['it', 'just', 'turned', 'off', 'and', 'will', 'not', 'turn', 'back', 'on', '.']
counter: {('laptop operation_performance', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [O] null [S] bad [C] laptop operation_performance']
multi_path: ['[A] it [O] null [S] bad [C] laptop operation_performance', '[A] it [S] bad [O] null [C] laptop operation_performance', '[A] it [O] null [C] laptop operation_performance [S] bad', '[O] null [A] it [S] bad [C] laptop operation_performance', '[O] null [A] it [C] laptop operation_performance [S] bad']

task, data: acos laptop16
target: [('laptop operation_performance', 'null', 'bad', 'terrible')]
output: ['[A] photography [O] terrible [S] bad [C] software operation_performance']
sent: ['but', 'i', "'", 'm', 'getting', 'into', 'photography', 'now', ',', 'and', 'it', "'", 's', 'terrible', 'for', 'loading', ',', 'storing', ',', 'and', 'editing', 'pictures', '.']
counter: {('software operation_performance', 'photography', 'bad', 'terrible'): 5}
output quads: ['[A] photography [O] terrible [S] bad [C] software operation_performance']
multi_path: ['[A] photography [O] terrible [S] bad [C] software operation_performance', '[A] photography [S] bad [O] terrible [C] software operation_performance', '[A] photography [O] terrible [C] software operation_performance [S] bad', '[O] terrible [A] photography [S] bad [C] software operation_performance', '[O] terrible [A] photography [C] software operation_performance [S] bad']

task, data: acos laptop16
target: [('laptop general', 'null', 'ok', 'null')]
output: ['[A] null [O] null [S] bad [C] laptop general']
sent: ['i', 'have', 'sent', 'it', 'in', 'twice', 'already', 'and', 'waiting', 'for', 'it', 'to', 'come', 'back', '.']
counter: {('laptop general', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [O] null [S] bad [C] laptop general']
multi_path: ['[A] it [O] null [S] bad [C] laptop general', '[A] it [S] bad [O] null [C] laptop general', '[A] it [O] null [C] laptop general [S] bad', '[O] null [A] it [S] bad [C] laptop general', '[O] null [A] it [C] laptop general [S] bad']

task, data: acos laptop16
target: [('display general', 'screen', 'great', 'great')]
output: ['[A] screen [O] great [S] great [C] display design_features']
sent: ['the', 'screen', 'looked', 'great', '.']
counter: {('display design_features', 'screen', 'great', 'great'): 5}
output quads: ['[A] screen [O] great [S] great [C] display design_features']
multi_path: ['[A] screen [O] great [S] great [C] display design_features', '[A] screen [S] great [O] great [C] display design_features', '[A] screen [O] great [C] display design_features [S] great', '[O] great [A] screen [S] great [C] display design_features', '[O] great [A] screen [C] display design_features [S] great']

task, data: acos laptop16
target: [('fans&cooling operation_performance', 'fan', 'bad', 'annoying'), ('fans&cooling operation_performance', 'sound', 'bad', 'annoying')]
output: ['[A] fan [O] annoying [S] bad [C] fans&cooling operation_performance', '[A] null [O] good [S] great [C] laptop operation_performance']
sent: ['works', 'good', 'but', 'the', 'fan', 'kicks', 'in', 'pretty', 'often', ',', 'which', 'is', 'to', 'keep', 'the', 'laptop', 'cool', 'but', 'the', 'sound', 'is', 'annoying', '.']
counter: {('laptop operation_performance', 'null', 'great', 'good'): 5, ('fans&cooling operation_performance', 'fan', 'bad', 'annoying'): 5}
output quads: ['[A] null [O] good [S] great [C] laptop operation_performance', '[A] fan [O] annoying [S] bad [C] fans&cooling operation_performance']
multi_path: ['[A] it [O] good [S] great [C] laptop operation_performance [SSEP] [A] fan [O] annoying [S] bad [C] fans&cooling operation_performance', '[A] it [S] great [O] good [C] laptop operation_performance [SSEP] [A] fan [S] bad [O] annoying [C] fans&cooling operation_performance', '[A] it [O] good [C] laptop operation_performance [S] great [SSEP] [A] fan [O] annoying [C] fans&cooling operation_performance [S] bad', '[O] good [A] it [S] great [C] laptop operation_performance [SSEP] [O] annoying [A] fan [S] bad [C] fans&cooling operation_performance', '[O] good [A] it [C] laptop operation_performance [S] great [SSEP] [O] annoying [A] fan [C] fans&cooling operation_performance [S] bad']

task, data: acos laptop16
target: [('display operation_performance', 'nano edge display', 'great', 'nice')]
output: ['[A] nano edge display [O] nice [S] great [C] display general']
sent: ['nano', 'edge', 'display', 'is', 'nice', '.']
counter: {('display general', 'nano edge display', 'great', 'nice'): 5}
output quads: ['[A] nano edge display [O] nice [S] great [C] display general']
multi_path: ['[A] nano edge display [O] nice [S] great [C] display general', '[A] nano edge display [S] great [O] nice [C] display general', '[A] nano edge display [O] nice [C] display general [S] great', '[O] nice [A] nano edge display [S] great [C] display general', '[O] nice [A] nano edge display [C] display general [S] great']

task, data: acos laptop16
target: [('keyboard design_features', 'keyboard', 'great', 'fine'), ('keyboard design_features', 'mouse pad', 'great', 'fine'), ('laptop general', 'null', 'bad', 'slow')]
output: ['[A] keyboard [O] fine [S] great [C] keyboard operation_performance', '[A] mouse pad [O] fine [S] great [C] keyboard operation_performance', '[A] null [O] slow [S] bad [C] laptop operation_performance']
sent: ['keyboard', 'and', 'mouse', 'pad', 'seem', 'fine', ',', 'but', 'overall', 'it', 'seems', 'strangely', 'slow', '.']
counter: {('keyboard operation_performance', 'keyboard', 'great', 'fine'): 5, ('keyboard operation_performance', 'mouse pad', 'great', 'fine'): 5, ('laptop operation_performance', 'null', 'bad', 'slow'): 4, ('keyboard operation_performance', 'keyboard', 'bad', 'slow'): 1, ('keyboard operation_performance', 'mouse pad', 'bad', 'slow'): 1}
output quads: ['[A] keyboard [O] fine [S] great [C] keyboard operation_performance', '[A] mouse pad [O] fine [S] great [C] keyboard operation_performance', '[A] null [O] slow [S] bad [C] laptop operation_performance']
multi_path: ['[A] keyboard [O] fine [S] great [C] keyboard operation_performance [SSEP] [A] mouse pad [O] fine [S] great [C] keyboard operation_performance [SSEP] [A] it [O] slow [S] bad [C] laptop operation_performance', '[A] keyboard [S] great [O] fine [C] keyboard operation_performance [SSEP] [A] mouse pad [S] great [O] fine [C] keyboard operation_performance [SSEP] [A] it [S] bad [O] slow [C] laptop operation_performance', '[A] keyboard [O] fine [C] keyboard operation_performance [S] great [SSEP] [A] mouse pad [O] fine [C] keyboard operation_performance [S] great [SSEP] [A] keyboard [O] slow [C] keyboard operation_performance [S] bad [SSEP] [A] mouse pad [O] slow [C] keyboard operation_performance [S] bad', '[O] fine [A] keyboard [S] great [C] keyboard operation_performance [SSEP] [O] fine [A] mouse pad [S] great [C] keyboard operation_performance [SSEP] [O] slow [A] it [S] bad [C] laptop operation_performance', '[O] fine [A] keyboard [C] keyboard operation_performance [S] great [SSEP] [O] fine [A] mouse pad [C] keyboard operation_performance [S] great [SSEP] [O] slow [A] it [C] laptop operation_performance [S] bad']

task, data: acos laptop16
target: [('laptop general', 'null', 'bad', 'null')]
output: ['[A] null [O] null [S] ok [C] laptop general']
sent: ['i', 'have', 'been', 'using', 'this', 'for', 'just', '3', 'months', '.']
counter: {('laptop general', 'null', 'ok', 'null'): 5}
output quads: ['[A] null [O] null [S] ok [C] laptop general']
multi_path: ['[A] it [O] null [S] ok [C] laptop general', '[A] it [S] ok [O] null [C] laptop general', '[A] it [O] null [C] laptop general [S] ok', '[O] null [A] it [S] ok [C] laptop general', '[O] null [A] it [C] laptop general [S] ok']

task, data: acos laptop16
target: [('laptop general', 'laptop', 'great', 'solid')]
output: ['[A] laptop [O] solid [S] great [C] laptop quality']
sent: ['overall', ',', 'the', 'laptop', 'has', 'a', 'solid', 'feel', 'to', 'it', '.']
counter: {('laptop quality', 'laptop', 'great', 'solid'): 5}
output quads: ['[A] laptop [O] solid [S] great [C] laptop quality']
multi_path: ['[A] laptop [O] solid [S] great [C] laptop quality', '[A] laptop [S] great [O] solid [C] laptop quality', '[A] laptop [O] solid [C] laptop quality [S] great', '[O] solid [A] laptop [S] great [C] laptop quality', '[O] solid [A] laptop [C] laptop quality [S] great']

task, data: acos laptop16
target: [('laptop quality', 'product', 'bad', 'null')]
output: ['[A] product [O] null [S] bad [C] support general']
sent: ['this', 'lead', 'me', 'to', 'believe', 'that', 'although', 'i', 'purchased', 'a', '“', 'new', '”', 'product', ',', 'they', 'sent', 'me', 'a', 'refurbished', 'one', 'instead', '.']
counter: {('support general', 'product', 'bad', 'null'): 5}
output quads: ['[A] product [O] null [S] bad [C] support general']
multi_path: ['[A] product [O] null [S] bad [C] support general', '[A] product [S] bad [O] null [C] support general', '[A] product [O] null [C] support general [S] bad', '[O] null [A] product [S] bad [C] support general', '[O] null [A] product [C] support general [S] bad']

task, data: acos laptop16
target: [('laptop general', 'laptop', 'ok', 'null')]
output: ['[A] laptop [O] null [S] bad [C] laptop general']
sent: ['i', "'", 'm', 'out', 'from', 'us', ',', 'i', 'live', 'in', 'colombia', ',', 'and', 'maybe', 'i', 'can', 'not', 'return', 'these', 'laptop', '.']
counter: {('laptop general', 'laptop', 'bad', 'null'): 5}
output quads: ['[A] laptop [O] null [S] bad [C] laptop general']
multi_path: ['[A] laptop [O] null [S] bad [C] laptop general', '[A] laptop [S] bad [O] null [C] laptop general', '[A] laptop [O] null [C] laptop general [S] bad', '[O] null [A] laptop [S] bad [C] laptop general', '[O] null [A] laptop [C] laptop general [S] bad']

task, data: acos laptop16
target: [('cpu operation_performance', 'processor', 'great', 'like'), ('hardware operation_performance', 'web cam', 'bad', 'poor'), ('hardware operation_performance', 'web cam', 'bad', 'sucks'), ('keyboard design_features', 'caps lock', 'bad', 'null'), ('keyboard design_features', 'keyboard', 'bad', 'null'), ('keyboard design_features', 'num lock', 'bad', 'null'), ('memory general', 'hybrid storage units', 'great', 'like')]
output: ['[A] caps lock [O] null [S] bad [C] keyboard design_features', '[A] keyboard [O] null [S] bad [C] keyboard design_features', '[A] processor [O] like [S] great [C] cpu general', '[A] speed [O] like [S] great [C] laptop operation_performance', '[A] web cam [O] poor [S] bad [C] display general', '[A] web cam [O] sucks [S] bad [C] multimedia_devices general']
sent: ['i', 'like', 'the', 'speed', ',', 'the', 'processor', 'the', 'hybrid', 'storage', 'units', '(', '128ssd', 'and', '1tera', ')', ',', 'but', 'the', 'web', 'cam', 'sucks', ',', 'really', 'poor', 'resolution', 'and', 'the', 'keyboard', 'doesn', "'", 't', 'have', 'the', 'numerical', 'part', 'and', 'the', 'caps', 'lock', 'or', 'num', 'lock', 'don', "'", 't', 'have', 'any', 'light', 'or', 'guide', 'to', 'help', 'you', '.']
counter: {('laptop operation_performance', 'speed', 'great', 'like'): 5, ('cpu general', 'processor', 'great', 'like'): 5, ('multimedia_devices general', 'web cam', 'bad', 'sucks'): 5, ('keyboard design_features', 'keyboard', 'bad', 'poor'): 1, ('keyboard design_features', 'caps lock', 'bad', 'null'): 5, ('keyboard design_features', 'num lock', 'bad', 'null'): 1, ('display general', 'web cam', 'bad', 'poor'): 3, ('keyboard design_features', 'keyboard', 'bad', 'null'): 4, ('display quality', 'web cam', 'bad', 'poor'): 1}
output quads: ['[A] speed [O] like [S] great [C] laptop operation_performance', '[A] processor [O] like [S] great [C] cpu general', '[A] web cam [O] sucks [S] bad [C] multimedia_devices general', '[A] caps lock [O] null [S] bad [C] keyboard design_features', '[A] web cam [O] poor [S] bad [C] display general', '[A] keyboard [O] null [S] bad [C] keyboard design_features']
multi_path: ['[A] speed [O] like [S] great [C] laptop operation_performance [SSEP] [A] processor [O] like [S] great [C] cpu general [SSEP] [A] web cam [O] sucks [S] bad [C] multimedia_devices general [SSEP] [A] keyboard [O] poor [S] bad [C] keyboard design_features [SSEP] [A] caps lock [O] null [S] bad [C] keyboard design_features [SSEP] [A] num lock [O] null [S] bad [C] keyboard design_features', '[A] speed [S] great [O] like [C] laptop operation_performance [SSEP] [A] processor [S] great [O] like [C] cpu general [SSEP] [A] web cam [S] bad [O] sucks [C] multimedia_devices general [SSEP] [A] web cam [S] bad [O] poor [C] display general [SSEP] [A] keyboard [S] bad [O] null [C] keyboard design_features [SSEP] [A] caps lock [S] bad [O] null [C] keyboard design_features', '[A] speed [O] like [C] laptop operation_performance [S] great [SSEP] [A] processor [O] like [C] cpu general [S] great [SSEP] [A] web cam [O] sucks [C] multimedia_devices general [S] bad [SSEP] [A] web cam [O] poor [C] display general [S] bad [SSEP] [A] keyboard [O] null [C] keyboard design_features [S] bad [SSEP] [A] caps lock [O] null [C] keyboard design_features [S] bad', '[O] like [A] speed [S] great [C] laptop operation_performance [SSEP] [O] like [A] processor [S] great [C] cpu general [SSEP] [O] sucks [A] web cam [S] bad [C] multimedia_devices general [SSEP] [O] poor [A] web cam [S] bad [C] display quality [SSEP] [O] null [A] keyboard [S] bad [C] keyboard design_features [SSEP] [O] null [A] caps lock [S] bad [C] keyboard design_features', '[O] like [A] speed [C] laptop operation_performance [S] great [SSEP] [O] like [A] processor [C] cpu general [S] great [SSEP] [O] sucks [A] web cam [C] multimedia_devices general [S] bad [SSEP] [O] poor [A] web cam [C] display general [S] bad [SSEP] [O] null [A] keyboard [C] keyboard design_features [S] bad [SSEP] [O] null [A] caps lock [C] keyboard design_features [S] bad']

task, data: acos laptop16
target: [('keyboard operation_performance', 'backlight', 'bad', 'null')]
output: ['[A] backlight [O] null [S] bad [C] out_of_scope operation_performance']
sent: ['yesterday', 'the', 'backlight', 'went', 'out', '.']
counter: {('out_of_scope operation_performance', 'backlight', 'bad', 'null'): 5}
output quads: ['[A] backlight [O] null [S] bad [C] out_of_scope operation_performance']
multi_path: ['[A] backlight [O] null [S] bad [C] out_of_scope operation_performance', '[A] backlight [S] bad [O] null [C] out_of_scope operation_performance', '[A] backlight [O] null [C] out_of_scope operation_performance [S] bad', '[O] null [A] backlight [S] bad [C] out_of_scope operation_performance', '[O] null [A] backlight [C] out_of_scope operation_performance [S] bad']

task, data: acos laptop16
target: [('laptop general', 'null', 'ok', 'null')]
output: ['[A] null [O] null [S] great [C] laptop general']
sent: ['it', 'was', 'brand', 'new', 'out', 'of', 'the', 'box', ',', 'i', "'", 've', 'never', 'dropped', 'it', '.']
counter: {('laptop general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [O] null [S] great [C] laptop general']
multi_path: ['[A] it [O] null [S] great [C] laptop general', '[A] it [S] great [O] null [C] laptop general', '[A] it [O] null [C] laptop general [S] great', '[O] null [A] it [S] great [C] laptop general', '[O] null [A] it [C] laptop general [S] great']

task, data: acos laptop16
target: [('warranty general', 'warranty stuff', 'ok', 'null')]
output: ['[A] null [O] null [S] bad [C] laptop general']
sent: ['now', 'i', 'have', 'to', 'deal', 'with', 'warranty', 'stuff', 'and', 'sending', 'it', 'back', 'etc', '.']
counter: {('laptop general', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [O] null [S] bad [C] laptop general']
multi_path: ['[A] it [O] null [S] bad [C] laptop general', '[A] it [S] bad [O] null [C] laptop general', '[A] it [O] null [C] laptop general [S] bad', '[O] null [A] it [S] bad [C] laptop general', '[O] null [A] it [C] laptop general [S] bad']

task, data: acos laptop16
target: [('hardware general', 'ram', 'great', 'available')]
output: ['[A] ram [O] null [S] great [C] memory general']
sent: ['ram', 'upgrade', 'available']
counter: {('memory general', 'ram', 'great', 'null'): 4, ('memory general', 'ram', 'great', 'available'): 1}
output quads: ['[A] ram [O] null [S] great [C] memory general']
multi_path: ['[A] ram [O] null [S] great [C] memory general', '[A] ram [S] great [O] null [C] memory general', '[A] ram [O] null [C] memory general [S] great', '[O] null [A] ram [S] great [C] memory general', '[O] available [A] ram [C] memory general [S] great']

task, data: acos laptop16
target: [('memory operation_performance', 'hard drive', 'great', 'available')]
output: ['[A] hard drive [O] null [S] great [C] hard_disc general']
sent: ['hard', 'drive', 'upgrade', 'available']
counter: {('hard_disc general', 'hard drive', 'great', 'null'): 5}
output quads: ['[A] hard drive [O] null [S] great [C] hard_disc general']
multi_path: ['[A] hard drive [O] null [S] great [C] hard_disc general', '[A] hard drive [S] great [O] null [C] hard_disc general', '[A] hard drive [O] null [C] hard_disc general [S] great', '[O] null [A] hard drive [S] great [C] hard_disc general', '[O] null [A] hard drive [C] hard_disc general [S] great']

task, data: acos laptop16
target: [('laptop general', 'computer', 'ok', 'functional'), ('laptop general', 'computer', 'ok', 'not the greatest')]
output: ['[A] computer [O] functional [S] ok [C] laptop operation_performance', '[A] null [O] not the greatest [S] ok [C] laptop operation_performance']
sent: ['it', "'", 's', 'still', 'a', 'mainly', 'functional', 'computer', ',', 'but', 'using', 'it', 'is', 'just', 'not', 'the', 'greatest', '.']
counter: {('laptop operation_performance', 'computer', 'ok', 'functional'): 3, ('laptop operation_performance', 'null', 'ok', 'not the greatest'): 5}
output quads: ['[A] computer [O] functional [S] ok [C] laptop operation_performance', '[A] null [O] not the greatest [S] ok [C] laptop operation_performance']
multi_path: ['[A] computer [O] functional [S] ok [C] laptop operation_performance [SSEP] [A] it [O] not the greatest [S] ok [C] laptop operation_performance', '[A] computer [S] ok [O] functional [C] laptop operation_performance [SSEP] [A] it [S] ok [O] not the greatest [C] laptop operation_performance', '[A] computer [O] functional [C] laptop operation_performance [S] ok [SSEP] [A] it [O] not the greatest [C] laptop operation_performance [S] ok', '[O] not the greatest [A] it [S] ok [C] laptop operation_performance', '[O] not the greatest [A] it [C] laptop operation_performance [S] ok']

task, data: acos laptop16
target: [('laptop general', 'computer', 'ok', 'null'), ('laptop general', 'null', 'bad', 'null')]
output: ['[A] computer [O] null [S] bad [C] laptop general']
sent: ['we', "'", 've', 'had', 'the', 'computer', 'for', '5', 'weeks', ',', 'used', 'it', 'a', 'total', 'of', 'less', 'than', '20', 'hours', ',', 'and', 'now', 'it', 'will', 'be', 'gone', 'for', '3', 'weeks', '.']
counter: {('laptop general', 'computer', 'bad', 'null'): 5}
output quads: ['[A] computer [O] null [S] bad [C] laptop general']
multi_path: ['[A] computer [O] null [S] bad [C] laptop general', '[A] computer [S] bad [O] null [C] laptop general', '[A] computer [O] null [C] laptop general [S] bad', '[O] null [A] computer [S] bad [C] laptop general', '[O] null [A] computer [C] laptop general [S] bad']

task, data: acos laptop16
target: [('support general', 'asus warranty', 'bad', 'null')]
output: ['[A] asus warranty [O] null [S] ok [C] warranty general']
sent: ['i', 'send', 'it', 'to', 'asus', 'warranty', 'and', 'now', 'after', 'a', 'week', 'they', "'", 're', 'sending', 'it', 'back', 'stating', 'the', 'no', 'problem', 'was', 'found', '.']
counter: {('warranty general', 'asus warranty', 'ok', 'null'): 5}
output quads: ['[A] asus warranty [O] null [S] ok [C] warranty general']
multi_path: ['[A] asus warranty [O] null [S] ok [C] warranty general', '[A] asus warranty [S] ok [O] null [C] warranty general', '[A] asus warranty [O] null [C] warranty general [S] ok', '[O] null [A] asus warranty [S] ok [C] warranty general', '[O] null [A] asus warranty [C] warranty general [S] ok']

task, data: acos laptop16
target: [('display general', 'display', 'bad', 'null')]
output: ['[A] display [O] null [S] bad [C] display quality']
sent: ['display', 'stop', 'working', 'within', '2', 'months', '.']
counter: {('display quality', 'display', 'bad', 'null'): 5}
output quads: ['[A] display [O] null [S] bad [C] display quality']
multi_path: ['[A] display [O] null [S] bad [C] display quality', '[A] display [S] bad [O] null [C] display quality', '[A] display [O] null [C] display quality [S] bad', '[O] null [A] display [S] bad [C] display quality', '[O] null [A] display [C] display quality [S] bad']

task, data: acos laptop16
target: [('support operation_performance', 'asus customer support', 'bad', 'null')]
output: ['[A] asus customer support [O] null [S] bad [C] support general']
sent: ['since', 'it', 'came', 'with', 'no', 'user', 'manual', ',', 'i', 'had', 'to', 'call', 'asus', 'customer', 'support', 'and', 'got', 'someone', 'who', 'knew', 'all', 'about', 'windows', '10', 'software', 'but', 'nothing', 'about', 'my', 'asus', 'notebook', '.']
counter: {('support general', 'asus customer support', 'bad', 'null'): 5}
output quads: ['[A] asus customer support [O] null [S] bad [C] support general']
multi_path: ['[A] asus customer support [O] null [S] bad [C] support general', '[A] asus customer support [S] bad [O] null [C] support general', '[A] asus customer support [O] null [C] support general [S] bad', '[O] null [A] asus customer support [S] bad [C] support general', '[O] null [A] asus customer support [C] support general [S] bad']

task, data: acos laptop16
target: [('laptop quality', 'null', 'bad', 'bad')]
output: ['[A] null [O] bad [S] bad [C] laptop general']
sent: ['after', 'reading', 'all', 'the', 'bad', 'reviews', ',', 'just', 'sent', 'it', 'back', 'for', 'a', 'refund', '.']
counter: {('laptop general', 'null', 'bad', 'bad'): 5}
output quads: ['[A] null [O] bad [S] bad [C] laptop general']
multi_path: ['[A] it [O] bad [S] bad [C] laptop general', '[A] it [S] bad [O] bad [C] laptop general', '[A] it [O] bad [C] laptop general [S] bad', '[O] bad [A] it [S] bad [C] laptop general', '[O] bad [A] it [C] laptop general [S] bad']

task, data: acos laptop16
target: [('hardware quality', 'touchpad', 'bad', 'non - functioning'), ('laptop general', 'asus laptop', 'bad', 'null')]
output: ['[A] asus laptop [O] null [S] bad [C] laptop design_features', '[A] touchpad [O] non - functioning [S] bad [C] hardware operation_performance']
sent: ['all', 'over', 'this', 'asus', 'laptop', 'which', 'has', 'a', 'non', '-', 'functioning', 'touchpad', '.']
counter: {('laptop design_features', 'asus laptop', 'bad', 'null'): 5, ('hardware operation_performance', 'touchpad', 'bad', 'non - functioning'): 5}
output quads: ['[A] asus laptop [O] null [S] bad [C] laptop design_features', '[A] touchpad [O] non - functioning [S] bad [C] hardware operation_performance']
multi_path: ['[A] asus laptop [O] null [S] bad [C] laptop design_features [SSEP] [A] touchpad [O] non - functioning [S] bad [C] hardware operation_performance', '[A] asus laptop [S] bad [O] null [C] laptop design_features [SSEP] [A] touchpad [S] bad [O] non - functioning [C] hardware operation_performance', '[A] asus laptop [O] null [C] laptop design_features [S] bad [SSEP] [A] touchpad [O] non - functioning [C] hardware operation_performance [S] bad', '[O] null [A] asus laptop [S] bad [C] laptop design_features [SSEP] [O] non - functioning [A] touchpad [S] bad [C] hardware operation_performance', '[O] null [A] asus laptop [C] laptop design_features [S] bad [SSEP] [O] non - functioning [A] touchpad [C] hardware operation_performance [S] bad']

task, data: acos laptop16
target: [('display general', 'screen', 'bad', 'null')]
output: ['[A] screen [O] null [S] bad [C] display quality']
sent: ['my', 'screen', 'broke', 'when', 'just', 'putting', 'a', 'textbook', 'on', 'it', '.']
counter: {('display quality', 'screen', 'bad', 'null'): 5}
output quads: ['[A] screen [O] null [S] bad [C] display quality']
multi_path: ['[A] screen [O] null [S] bad [C] display quality', '[A] screen [S] bad [O] null [C] display quality', '[A] screen [O] null [C] display quality [S] bad', '[O] null [A] screen [S] bad [C] display quality', '[O] null [A] screen [C] display quality [S] bad']

task, data: acos laptop16
target: [('display design_features', 'null', 'great', 'big'), ('display design_features', 'null', 'great', 'ease'), ('laptop portability', 'item', 'great', 'light')]
output: ['[A] item [O] light [S] great [C] laptop design_features']
sent: ['6', '`', '`', 'screen', 'is', 'big', 'enough', 'to', 'read', 'with', 'ease', ',', 'yet', 'the', 'item', 'itself', 'is', 'light', 'enough', 'to', 'tote', 'to', 'meetings', '.']
counter: {('laptop design_features', 'item', 'great', 'light'): 5, ('laptop design_features', 'item', 'great', 'big'): 2}
output quads: ['[A] item [O] light [S] great [C] laptop design_features']
multi_path: ['[A] item [O] light [S] great [C] laptop design_features', '[A] item [S] great [O] light [C] laptop design_features', '[A] item [O] light [C] laptop design_features [S] great', '[O] big [A] item [S] great [C] laptop design_features [SSEP] [O] light [A] item [S] great [C] laptop design_features', '[O] big [A] item [C] laptop design_features [S] great [SSEP] [O] light [A] item [C] laptop design_features [S] great']

task, data: acos laptop16
target: [('laptop general', 'work machine', 'great', 'good')]
output: ['[A] machine [O] good [S] great [C] laptop general']
sent: ['so', 'far', ',', 'this', 'looks', 'as', 'if', 'it', 'meets', 'my', 'needs', 'as', 'a', 'good', '`', '`', 'work', 'machine', '.', '`', '`']
counter: {('laptop general', 'machine', 'great', 'good'): 5}
output quads: ['[A] machine [O] good [S] great [C] laptop general']
multi_path: ['[A] machine [O] good [S] great [C] laptop general', '[A] machine [S] great [O] good [C] laptop general', '[A] machine [O] good [C] laptop general [S] great', '[O] good [A] machine [S] great [C] laptop general', '[O] good [A] machine [C] laptop general [S] great']

task, data: acos laptop16
target: [('laptop general', 'null', 'great', 'well')]
output: ['[A] null [O] well [S] great [C] laptop design_features']
sent: ['it', 'seems', 'put', 'together', 'well', '.']
counter: {('laptop design_features', 'null', 'great', 'well'): 5}
output quads: ['[A] null [O] well [S] great [C] laptop design_features']
multi_path: ['[A] it [O] well [S] great [C] laptop design_features', '[A] it [S] great [O] well [C] laptop design_features', '[A] it [O] well [C] laptop design_features [S] great', '[O] well [A] it [S] great [C] laptop design_features', '[O] well [A] it [C] laptop design_features [S] great']

task, data: acos laptop16
target: [('laptop design_features', 'null', 'bad', 'null'), ('laptop operation_performance', 'null', 'great', 'null')]
output: ['[A] null [O] durability [S] great [C] laptop operation_performance', '[A] null [O] null [S] great [C] laptop design_features', '[A] null [O] null [S] great [C] laptop operation_performance', '[A] null [O] raw [S] great [C] laptop operation_performance']
sent: ['what', 'they', 'lack', 'in', 'size', ',', 'they', 'make', 'up', 'for', 'in', 'raw', 'speed', ',', 'durability', ',', 'and', 'energy', 'efficiency', '.']
counter: {('laptop design_features', 'null', 'great', 'null'): 6, ('laptop operation_performance', 'null', 'great', 'raw'): 5, ('laptop operation_performance', 'null', 'great', 'durability'): 5, ('laptop operation_performance', 'null', 'great', 'null'): 4}
output quads: ['[A] null [O] null [S] great [C] laptop design_features', '[A] null [O] raw [S] great [C] laptop operation_performance', '[A] null [O] durability [S] great [C] laptop operation_performance', '[A] null [O] null [S] great [C] laptop operation_performance']
multi_path: ['[A] it [O] null [S] great [C] laptop design_features [SSEP] [A] it [O] raw [S] great [C] laptop operation_performance [SSEP] [A] it [O] durability [S] great [C] laptop operation_performance [SSEP] [A] it [O] null [S] great [C] laptop operation_performance', '[A] it [S] great [O] null [C] laptop design_features [SSEP] [A] it [S] great [O] raw [C] laptop operation_performance [SSEP] [A] it [S] great [O] durability [C] laptop operation_performance [SSEP] [A] it [S] great [O] null [C] laptop operation_performance', '[A] it [O] null [C] laptop design_features [S] great [SSEP] [A] it [O] raw [C] laptop operation_performance [S] great [SSEP] [A] it [O] durability [C] laptop operation_performance [S] great [SSEP] [A] it [O] null [C] laptop operation_performance [S] great', '[O] null [A] it [S] great [C] laptop design_features [SSEP] [O] raw [A] it [S] great [C] laptop operation_performance [SSEP] [O] durability [A] it [S] great [C] laptop operation_performance [SSEP] [O] null [A] it [S] great [C] laptop operation_performance', '[O] null [A] it [C] laptop design_features [S] great [SSEP] [O] raw [A] it [C] laptop operation_performance [S] great [SSEP] [O] durability [A] it [C] laptop operation_performance [S] great [SSEP] [O] null [A] it [C] laptop design_features [S] great']

task, data: acos laptop16
target: [('ports quality', 'ports', 'great', 'available'), ('ports quality', 'ports', 'great', 'decent')]
output: ['[A] ports [O] decent [S] great [C] ports design_features']
sent: ['+', 'decent', 'quantity', 'of', 'available', 'ports']
counter: {('ports design_features', 'ports', 'great', 'decent'): 5}
output quads: ['[A] ports [O] decent [S] great [C] ports design_features']
multi_path: ['[A] ports [O] decent [S] great [C] ports design_features', '[A] ports [S] great [O] decent [C] ports design_features', '[A] ports [O] decent [C] ports design_features [S] great', '[O] decent [A] ports [S] great [C] ports design_features', '[O] decent [A] ports [C] ports design_features [S] great']

task, data: acos laptop16
target: [('optical_drives general', 'dvd drive', 'ok', 'null')]
output: ['[A] dvd drive [O] null [S] great [C] optical_drives design_features']
sent: ['+', 'it', 'has', 'a', 'dvd', 'drive', ':', 'o']
counter: {('optical_drives design_features', 'dvd drive', 'great', 'null'): 5}
output quads: ['[A] dvd drive [O] null [S] great [C] optical_drives design_features']
multi_path: ['[A] dvd drive [O] null [S] great [C] optical_drives design_features', '[A] dvd drive [S] great [O] null [C] optical_drives design_features', '[A] dvd drive [O] null [C] optical_drives design_features [S] great', '[O] null [A] dvd drive [S] great [C] optical_drives design_features', '[O] null [A] dvd drive [C] optical_drives design_features [S] great']

task, data: acos laptop16
target: [('laptop quality', 'null', 'bad', 'null')]
output: ['[A] null [O] hot [S] great [C] laptop operation_performance']
sent: ['-', 'it', 'runs', 'hot', '!']
counter: {('laptop operation_performance', 'null', 'great', 'hot'): 5}
output quads: ['[A] null [O] hot [S] great [C] laptop operation_performance']
multi_path: ['[A] it [O] hot [S] great [C] laptop operation_performance', '[A] it [S] great [O] hot [C] laptop operation_performance', '[A] it [O] hot [C] laptop operation_performance [S] great', '[O] hot [A] it [S] great [C] laptop operation_performance', '[O] hot [A] it [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('laptop quality', 'null', 'bad', 'null')]
output: ['[A] null [O] high [S] great [C] laptop quality']
sent: ['running', 'grid', 'benchmark', ',', 'it', 'got', 'to', 'a', 'high', '92', '/', '93', 'degrees', 'c', '!']
counter: {('laptop quality', 'null', 'great', 'high'): 5}
output quads: ['[A] null [O] high [S] great [C] laptop quality']
multi_path: ['[A] it [O] high [S] great [C] laptop quality', '[A] it [S] great [O] high [C] laptop quality', '[A] it [O] high [C] laptop quality [S] great', '[O] high [A] it [S] great [C] laptop quality', '[O] high [A] it [C] laptop quality [S] great']

task, data: acos laptop16
target: [('cpu general', 'i5 mobile processor', 'ok', 'null')]
output: ['[A] i5 mobile processor [O] null [S] great [C] cpu general']
sent: ['-', 'new', 'i5', 'mobile', 'processor', '.']
counter: {('cpu general', 'i5 mobile processor', 'great', 'null'): 5}
output quads: ['[A] i5 mobile processor [O] null [S] great [C] cpu general']
multi_path: ['[A] i5 mobile processor [O] null [S] great [C] cpu general', '[A] i5 mobile processor [S] great [O] null [C] cpu general', '[A] i5 mobile processor [O] null [C] cpu general [S] great', '[O] null [A] i5 mobile processor [S] great [C] cpu general', '[O] null [A] i5 mobile processor [C] cpu general [S] great']

task, data: acos laptop16
target: [('battery operation_performance', 'battery life', 'great', 'decent')]
output: ['[A] battery life [O] decent [S] great [C] battery quality']
sent: ['-', 'very', 'decent', 'battery', 'life', '.']
counter: {('battery quality', 'battery life', 'great', 'decent'): 5}
output quads: ['[A] battery life [O] decent [S] great [C] battery quality']
multi_path: ['[A] battery life [O] decent [S] great [C] battery quality', '[A] battery life [S] great [O] decent [C] battery quality', '[A] battery life [O] decent [C] battery quality [S] great', '[O] decent [A] battery life [S] great [C] battery quality', '[O] decent [A] battery life [C] battery quality [S] great']

task, data: acos laptop16
target: [('laptop general', 'unit', 'great', 'pleasantly')]
output: ['[A] unit [O] impressed [S] great [C] laptop general', '[A] unit [O] pleasantly [S] great [C] laptop general']
sent: ['so', 'far', 'i', 'am', 'pleasantly', 'impressed', 'with', 'this', 'unit', ',', 'however', 'i', 'have', 'not', 'used', 'it', 'a', 'long', 'time', 'or', 'tested', 'many', 'applications', 'to', 'date', '.']
counter: {('laptop general', 'unit', 'great', 'pleasantly'): 5, ('laptop general', 'unit', 'great', 'impressed'): 5}
output quads: ['[A] unit [O] pleasantly [S] great [C] laptop general', '[A] unit [O] impressed [S] great [C] laptop general']
multi_path: ['[A] unit [O] pleasantly [S] great [C] laptop general [SSEP] [A] unit [O] impressed [S] great [C] laptop general', '[A] unit [S] great [O] pleasantly [C] laptop general [SSEP] [A] unit [S] great [O] impressed [C] laptop general', '[A] unit [O] pleasantly [C] laptop general [S] great [SSEP] [A] unit [O] impressed [C] laptop general [S] great', '[O] pleasantly [A] unit [S] great [C] laptop general [SSEP] [O] impressed [A] unit [S] great [C] laptop general', '[O] pleasantly [A] unit [C] laptop general [S] great [SSEP] [O] impressed [A] unit [C] laptop general [S] great']

task, data: acos laptop16
target: [('laptop operation_performance', 'null', 'great', 'null')]
output: ['[A] null [O] null [S] ok [C] battery operation_performance']
sent: ['i', "'", 've', 'been', 'using', 'it', 'for', 'at', 'least', '4', 'hours', 'since', 'last', 'charged', 'in', 'that', '23', '%', 'used', 'up', '.']
counter: {('battery operation_performance', 'null', 'ok', 'null'): 5}
output quads: ['[A] null [O] null [S] ok [C] battery operation_performance']
multi_path: ['[A] it [O] null [S] ok [C] battery operation_performance', '[A] it [S] ok [O] null [C] battery operation_performance', '[A] it [O] null [C] battery operation_performance [S] ok', '[O] null [A] it [S] ok [C] battery operation_performance', '[O] null [A] it [C] battery operation_performance [S] ok']

task, data: acos laptop16
target: [('memory usability', 'ram', 'great', 'upgradeable')]
output: ['[A] ram [O] upgradeable [S] great [C] memory design_features']
sent: ['-', 'easily', 'upgradeable', 'ram']
counter: {('memory design_features', 'ram', 'great', 'upgradeable'): 5}
output quads: ['[A] ram [O] upgradeable [S] great [C] memory design_features']
multi_path: ['[A] ram [O] upgradeable [S] great [C] memory design_features', '[A] ram [S] great [O] upgradeable [C] memory design_features', '[A] ram [O] upgradeable [C] memory design_features [S] great', '[O] upgradeable [A] ram [S] great [C] memory design_features', '[O] upgradeable [A] ram [C] memory design_features [S] great']

task, data: acos laptop16
target: [('keyboard design_features', 'keyboard', 'great', 'love'), ('keyboard design_features', 'touchpad', 'great', 'love')]
output: ['[A] touchpad [O] love [S] great [C] keyboard design_features']
sent: ['one', 'feature', 'that', 'i', 'love', 'is', 'the', 'ability', 'to', 'disable', 'the', 'touchpad', 'from', 'the', 'keyboard', '.']
counter: {('keyboard design_features', 'touchpad', 'great', 'love'): 5}
output quads: ['[A] touchpad [O] love [S] great [C] keyboard design_features']
multi_path: ['[A] touchpad [O] love [S] great [C] keyboard design_features', '[A] touchpad [S] great [O] love [C] keyboard design_features', '[A] touchpad [O] love [C] keyboard design_features [S] great', '[O] love [A] touchpad [S] great [C] keyboard design_features', '[O] love [A] touchpad [C] keyboard design_features [S] great']

task, data: acos laptop16
target: [('laptop design_features', 'null', 'ok', 'not fancy'), ('laptop operation_performance', 'null', 'great', 'fast'), ('laptop operation_performance', 'null', 'great', 'good'), ('laptop operation_performance', 'null', 'great', 'trouble - free')]
output: ['[A] null [O] fast [S] great [C] laptop operation_performance', '[A] null [O] good [S] great [C] laptop quality', '[A] null [O] not fancy [S] ok [C] laptop general', '[A] null [O] trouble - free [S] great [C] laptop operation_performance']
sent: ['it', "'", 's', 'not', 'fancy', ',', 'but', 'it', "'", 's', 'good', 'value', 'and', 'fast', 'and', 'trouble', '-', 'free', '.']
counter: {('laptop general', 'null', 'ok', 'not fancy'): 4, ('laptop quality', 'null', 'great', 'good'): 5, ('laptop operation_performance', 'null', 'great', 'fast'): 5, ('laptop operation_performance', 'null', 'great', 'trouble - free'): 5}
output quads: ['[A] null [O] not fancy [S] ok [C] laptop general', '[A] null [O] good [S] great [C] laptop quality', '[A] null [O] fast [S] great [C] laptop operation_performance', '[A] null [O] trouble - free [S] great [C] laptop operation_performance']
multi_path: ['[A] it [O] not fancy [S] ok [C] laptop general [SSEP] [A] it [O] good [S] great [C] laptop quality [SSEP] [A] it [O] fast [S] great [C] laptop operation_performance [SSEP] [A] it [O] trouble - free [S] great [C] laptop operation_performance', '[A] it [S] ok [O] not fancy [C] laptop general [SSEP] [A] it [S] great [O] good [C] laptop quality [SSEP] [A] it [S] great [O] fast [C] laptop operation_performance [SSEP] [A] it [S] great [O] trouble - free [C] laptop operation_performance', '[A] it [O] not fancy [C] laptop general [S] ok [SSEP] [A] it [O] good [C] laptop quality [S] great [SSEP] [A] it [O] fast [C] laptop operation_performance [S] great [SSEP] [A] it [O] trouble - free [C] laptop operation_performance [S] great', '[O] not fancy [A] it [S] ok [C] laptop general [SSEP] [O] good [A] it [S] great [C] laptop quality [SSEP] [O] fast [A] it [S] great [C] laptop operation_performance [SSEP] [O] trouble - free [A] it [S] great [C] laptop operation_performance', '[O] good [A] it [C] laptop quality [S] great [SSEP] [O] fast [A] it [C] laptop operation_performance [S] great [SSEP] [O] trouble - free [A] it [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('keyboard design_features', 'feature', 'great', 'useful')]
output: ['[A] feature [O] useful [S] great [C] software operation_performance']
sent: ['after', 'spending', 'some', 'time', 'with', 'it', ',', 'the', 'feature', 'can', 'really', 'be', 'useful', '.']
counter: {('software operation_performance', 'feature', 'great', 'useful'): 5}
output quads: ['[A] feature [O] useful [S] great [C] software operation_performance']
multi_path: ['[A] feature [O] useful [S] great [C] software operation_performance', '[A] feature [S] great [O] useful [C] software operation_performance', '[A] feature [O] useful [C] software operation_performance [S] great', '[O] useful [A] feature [S] great [C] software operation_performance', '[O] useful [A] feature [C] software operation_performance [S] great']

task, data: acos laptop16
target: [('memory usability', 'ram', 'great', 'null')]
output: ['[A] ram [O] null [S] great [C] memory general', '[A] storage [O] null [S] great [C] memory general']
sent: ['easily', 'upgrade', 'to', 'storage', 'and', 'ram', '.']
counter: {('memory general', 'storage', 'great', 'null'): 5, ('memory general', 'ram', 'great', 'null'): 5}
output quads: ['[A] storage [O] null [S] great [C] memory general', '[A] ram [O] null [S] great [C] memory general']
multi_path: ['[A] storage [O] null [S] great [C] memory general [SSEP] [A] ram [O] null [S] great [C] memory general', '[A] storage [S] great [O] null [C] memory general [SSEP] [A] ram [S] great [O] null [C] memory general', '[A] storage [O] null [C] memory general [S] great [SSEP] [A] ram [O] null [C] memory general [S] great', '[O] null [A] storage [S] great [C] memory general [SSEP] [O] null [A] ram [S] great [C] memory general', '[O] null [A] storage [C] memory general [S] great [SSEP] [O] null [A] ram [C] memory general [S] great']

task, data: acos laptop16
target: [('graphics design_features', 'mx150', 'ok', 'null')]
output: ['[A] mx150 [O] enough [S] great [C] laptop general']
sent: ['this', 'does', 'not', 'really', 'matter', 'to', 'me', 'because', 'the', 'mx150', 'is', 'enough', 'for', 'my', 'needs', '.']
counter: {('laptop general', 'mx150', 'great', 'enough'): 5}
output quads: ['[A] mx150 [O] enough [S] great [C] laptop general']
multi_path: ['[A] mx150 [O] enough [S] great [C] laptop general', '[A] mx150 [S] great [O] enough [C] laptop general', '[A] mx150 [O] enough [C] laptop general [S] great', '[O] enough [A] mx150 [S] great [C] laptop general', '[O] enough [A] mx150 [C] laptop general [S] great']

task, data: acos laptop16
target: [('hard_disc general', 'solid state drive', 'great', 'love')]
output: ['[A] solid state drive [O] love [S] great [C] hard_disc operation_performance']
sent: ['i', 'love', 'the', 'solid', 'state', 'drive', ',', 'as', 'reviews', 'or', 'ads', 'say', 'you', 'can', 'boot', 'up', 'and', 'get', 'onto', 'internet', 'in', '10', 'to', '15', 'seconds', '.']
counter: {('hard_disc operation_performance', 'solid state drive', 'great', 'love'): 5}
output quads: ['[A] solid state drive [O] love [S] great [C] hard_disc operation_performance']
multi_path: ['[A] solid state drive [O] love [S] great [C] hard_disc operation_performance', '[A] solid state drive [S] great [O] love [C] hard_disc operation_performance', '[A] solid state drive [O] love [C] hard_disc operation_performance [S] great', '[O] love [A] solid state drive [S] great [C] hard_disc operation_performance', '[O] love [A] solid state drive [C] hard_disc operation_performance [S] great']

task, data: acos laptop16
target: [('laptop general', 'laptop', 'great', 'null')]
output: ['[A] null [O] null [S] great [C] laptop general']
sent: ['it', "'", 's', 'not', 'a', '`', '`', 'gaming', '`', '`', 'laptop', 'even', 'it', 'can', 'do', 'some', 'more', 'casual', 'gaming', '.']
counter: {('laptop general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [O] null [S] great [C] laptop general']
multi_path: ['[A] it [O] null [S] great [C] laptop general', '[A] it [S] great [O] null [C] laptop general', '[A] it [O] null [C] laptop general [S] great', '[O] null [A] it [S] great [C] laptop general', '[O] null [A] it [C] laptop general [S] great']

task, data: acos laptop16
target: [('os operation_performance', 'system', 'great', 'impressed')]
output: ['[A] system [O] impressed [S] great [C] os general']
sent: ['i', 'am', 'very', 'impressed', 'with', 'this', 'system', '.']
counter: {('os general', 'system', 'great', 'impressed'): 5}
output quads: ['[A] system [O] impressed [S] great [C] os general']
multi_path: ['[A] system [O] impressed [S] great [C] os general', '[A] system [S] great [O] impressed [C] os general', '[A] system [O] impressed [C] os general [S] great', '[O] impressed [A] system [S] great [C] os general', '[O] impressed [A] system [C] os general [S] great']

task, data: acos laptop16
target: [('support quality', 'amazon', 'great', 'great')]
output: ['[A] amazon [O] great [S] great [C] company general']
sent: ['as', 'usual', 'amazon', 'was', 'great', 'about', 'returning', 'it', '.']
counter: {('company general', 'amazon', 'great', 'great'): 5}
output quads: ['[A] amazon [O] great [S] great [C] company general']
multi_path: ['[A] amazon [O] great [S] great [C] company general', '[A] amazon [S] great [O] great [C] company general', '[A] amazon [O] great [C] company general [S] great', '[O] great [A] amazon [S] great [C] company general', '[O] great [A] amazon [C] company general [S] great']

task, data: acos laptop16
target: [('display design_features', 'screen', 'great', 'decent'), ('display design_features', 'screen', 'great', 'not great')]
output: ['[A] screen [O] decent [S] ok [C] display general', '[A] screen [O] not great [S] ok [C] display general']
sent: ['screen', 'is', 'decent', ',', 'not', 'great', ',', 'it', 'is', 'matte', 'finished', '.']
counter: {('display general', 'screen', 'ok', 'decent'): 5, ('display general', 'screen', 'ok', 'not great'): 5}
output quads: ['[A] screen [O] decent [S] ok [C] display general', '[A] screen [O] not great [S] ok [C] display general']
multi_path: ['[A] screen [O] decent [S] ok [C] display general [SSEP] [A] screen [O] not great [S] ok [C] display general', '[A] screen [S] ok [O] decent [C] display general [SSEP] [A] screen [S] ok [O] not great [C] display general', '[A] screen [O] decent [C] display general [S] ok [SSEP] [A] screen [O] not great [C] display general [S] ok', '[O] decent [A] screen [S] ok [C] display general [SSEP] [O] not great [A] screen [S] ok [C] display general', '[O] decent [A] screen [C] display general [S] ok [SSEP] [O] not great [A] screen [C] display general [S] ok']

task, data: acos laptop16
target: [('keyboard design_features', 'back lit keyboard', 'great', 'like')]
output: ['[A] back lit keyboard [O] like [S] great [C] keyboard general']
sent: ['i', 'like', 'the', 'back', 'lit', 'keyboard', '.']
counter: {('keyboard general', 'back lit keyboard', 'great', 'like'): 5}
output quads: ['[A] back lit keyboard [O] like [S] great [C] keyboard general']
multi_path: ['[A] back lit keyboard [O] like [S] great [C] keyboard general', '[A] back lit keyboard [S] great [O] like [C] keyboard general', '[A] back lit keyboard [O] like [C] keyboard general [S] great', '[O] like [A] back lit keyboard [S] great [C] keyboard general', '[O] like [A] back lit keyboard [C] keyboard general [S] great']

task, data: acos laptop16
target: [('laptop price', 'null', 'great', 'cheap'), ('laptop price', 'null', 'great', 'good')]
output: ['[A] null [O] cheap [S] great [C] laptop price', '[A] null [O] good [S] great [C] laptop general']
sent: ['it', "'", 's', 'a', 'lot', 'of', 'good', 'for', 'a', 'comparatively', 'cheap', 'price', '.']
counter: {('laptop general', 'null', 'great', 'good'): 5, ('laptop price', 'null', 'great', 'cheap'): 5}
output quads: ['[A] null [O] good [S] great [C] laptop general', '[A] null [O] cheap [S] great [C] laptop price']
multi_path: ['[A] it [O] good [S] great [C] laptop general [SSEP] [A] it [O] cheap [S] great [C] laptop price', '[A] it [S] great [O] good [C] laptop general [SSEP] [A] it [S] great [O] cheap [C] laptop price', '[A] it [O] good [C] laptop general [S] great [SSEP] [A] it [O] cheap [C] laptop price [S] great', '[O] good [A] it [S] great [C] laptop general [SSEP] [O] cheap [A] it [S] great [C] laptop price', '[O] good [A] it [C] laptop general [S] great [SSEP] [O] cheap [A] it [C] laptop price [S] great']

task, data: acos laptop16
target: [('display operation_performance', 'screen', 'great', 'perfectly')]
output: ['[A] screen [O] adequate [S] great [C] display general', '[A] screen [O] perfectly [S] great [C] display general']
sent: ['the', 'screen', 'is', 'perfectly', 'adequate', '.']
counter: {('display general', 'screen', 'great', 'perfectly'): 5, ('display general', 'screen', 'great', 'adequate'): 5}
output quads: ['[A] screen [O] perfectly [S] great [C] display general', '[A] screen [O] adequate [S] great [C] display general']
multi_path: ['[A] screen [O] perfectly [S] great [C] display general [SSEP] [A] screen [O] adequate [S] great [C] display general', '[A] screen [S] great [O] perfectly [C] display general [SSEP] [A] screen [S] great [O] adequate [C] display general', '[A] screen [O] perfectly [C] display general [S] great [SSEP] [A] screen [O] adequate [C] display general [S] great', '[O] perfectly [A] screen [S] great [C] display general [SSEP] [O] adequate [A] screen [S] great [C] display general', '[O] perfectly [A] screen [C] display general [S] great [SSEP] [O] adequate [A] screen [C] display general [S] great']

task, data: acos laptop16
target: [('laptop design_features', 'null', 'great', 'beautiful'), ('laptop design_features', 'null', 'great', 'sleek'), ('laptop operation_performance', 'boots up', 'great', 'quick')]
output: ['[A] boots up [O] beautiful [S] great [C] laptop design_features', '[A] boots up [O] quick [S] great [C] laptop operation_performance', '[A] boots up [O] sleek [S] great [C] laptop design_features']
sent: ['this', 'thing', 'boots', 'up', 'super', 'quick', 'and', 'it', 'sleek', 'and', 'beautiful', '.']
counter: {('laptop operation_performance', 'boots up', 'great', 'quick'): 5, ('laptop design_features', 'boots up', 'great', 'sleek'): 5, ('laptop design_features', 'boots up', 'great', 'beautiful'): 5}
output quads: ['[A] boots up [O] quick [S] great [C] laptop operation_performance', '[A] boots up [O] sleek [S] great [C] laptop design_features', '[A] boots up [O] beautiful [S] great [C] laptop design_features']
multi_path: ['[A] boots up [O] quick [S] great [C] laptop operation_performance [SSEP] [A] boots up [O] sleek [S] great [C] laptop design_features [SSEP] [A] boots up [O] beautiful [S] great [C] laptop design_features', '[A] boots up [S] great [O] quick [C] laptop operation_performance [SSEP] [A] boots up [S] great [O] sleek [C] laptop design_features [SSEP] [A] boots up [S] great [O] beautiful [C] laptop design_features', '[A] boots up [O] quick [C] laptop operation_performance [S] great [SSEP] [A] boots up [O] sleek [C] laptop design_features [S] great [SSEP] [A] boots up [O] beautiful [C] laptop design_features [S] great', '[O] quick [A] boots up [S] great [C] laptop operation_performance [SSEP] [O] sleek [A] boots up [S] great [C] laptop design_features [SSEP] [O] beautiful [A] boots up [S] great [C] laptop design_features', '[O] quick [A] boots up [C] laptop operation_performance [S] great [SSEP] [O] sleek [A] boots up [C] laptop design_features [S] great [SSEP] [O] beautiful [A] boots up [C] laptop design_features [S] great']

task, data: acos laptop16
target: [('company general', 'google and partners', 'great', 'great')]
output: ['[A] chromebooks [O] great [S] great [C] laptop general', '[A] google [O] great [S] great [C] company general']
sent: ['google', 'and', 'partners', 'have', 'done', 'great', 'with', 'chromebooks', 'and', 'have', 'plenty', 'of', 'features', 'to', 'accommodate', '.']
counter: {('company general', 'google', 'great', 'great'): 5, ('laptop design_features', 'chromebooks', 'great', 'great'): 2, ('laptop general', 'chromebooks', 'great', 'great'): 3}
output quads: ['[A] google [O] great [S] great [C] company general', '[A] chromebooks [O] great [S] great [C] laptop general']
multi_path: ['[A] google [O] great [S] great [C] company general [SSEP] [A] chromebooks [O] great [S] great [C] laptop design_features', '[A] google [S] great [O] great [C] company general [SSEP] [A] chromebooks [S] great [O] great [C] laptop design_features', '[A] google [O] great [C] company general [S] great [SSEP] [A] chromebooks [O] great [C] laptop general [S] great', '[O] great [A] google [S] great [C] company general [SSEP] [O] great [A] chromebooks [S] great [C] laptop general', '[O] great [A] google [C] company general [S] great [SSEP] [O] great [A] chromebooks [C] laptop general [S] great']

task, data: acos laptop16
target: [('laptop price', 'null', 'great', 'affordable'), ('laptop usability', 'null', 'great', 'easy')]
output: ['[A] null [O] affordable [S] great [C] laptop price', '[A] null [O] easy [S] great [C] laptop usability', '[A] null [O] recommend [S] great [C] laptop general']
sent: ['i', 'would', 'highly', 'recommend', 'this', 'to', 'anyone', ',', 'but', 'especially', 'to', 'someone', 'wanting', 'something', 'that', 'is', 'affordable', ',', 'easy', 'to', 'use', 'and', 'just', 'a', 'bit', 'more', 'than', 'a', 'tablet', '.']
counter: {('laptop general', 'null', 'great', 'recommend'): 5, ('laptop price', 'null', 'great', 'affordable'): 5, ('laptop usability', 'null', 'great', 'easy'): 5}
output quads: ['[A] null [O] recommend [S] great [C] laptop general', '[A] null [O] affordable [S] great [C] laptop price', '[A] null [O] easy [S] great [C] laptop usability']
multi_path: ['[A] it [O] recommend [S] great [C] laptop general [SSEP] [A] it [O] affordable [S] great [C] laptop price [SSEP] [A] it [O] easy [S] great [C] laptop usability', '[A] it [S] great [O] recommend [C] laptop general [SSEP] [A] it [S] great [O] affordable [C] laptop price [SSEP] [A] it [S] great [O] easy [C] laptop usability', '[A] it [O] recommend [C] laptop general [S] great [SSEP] [A] it [O] affordable [C] laptop price [S] great [SSEP] [A] it [O] easy [C] laptop usability [S] great', '[O] recommend [A] it [S] great [C] laptop general [SSEP] [O] affordable [A] it [S] great [C] laptop price [SSEP] [O] easy [A] it [S] great [C] laptop usability', '[O] recommend [A] it [C] laptop general [S] great [SSEP] [O] affordable [A] it [C] laptop price [S] great [SSEP] [O] easy [A] it [C] laptop usability [S] great']

task, data: acos laptop16
target: [('laptop design_features', 'size', 'great', 'perfect'), ('laptop portability', 'null', 'great', 'perfect')]
output: ['[A] null [O] easy [S] great [C] laptop portability', '[A] size [O] perfect [S] great [C] laptop design_features']
sent: ['the', 'size', 'is', 'perfect', ',', 'it', "'", 's', 'easy', 'to', 'toss', 'it', 'in', 'my', 'satchel', 'or', 'backpack', 'along', 'with', 'my', 'textbook', 'and', 'notebooks', 'and', 'have', 'plenty', 'of', 'room', '.']
counter: {('laptop design_features', 'size', 'great', 'perfect'): 5, ('laptop portability', 'null', 'great', 'easy'): 5}
output quads: ['[A] size [O] perfect [S] great [C] laptop design_features', '[A] null [O] easy [S] great [C] laptop portability']
multi_path: ['[A] size [O] perfect [S] great [C] laptop design_features [SSEP] [A] it [O] easy [S] great [C] laptop portability', '[A] size [S] great [O] perfect [C] laptop design_features [SSEP] [A] it [S] great [O] easy [C] laptop portability', '[A] size [O] perfect [C] laptop design_features [S] great [SSEP] [A] it [O] easy [C] laptop portability [S] great', '[O] perfect [A] size [S] great [C] laptop design_features [SSEP] [O] easy [A] it [S] great [C] laptop portability', '[O] perfect [A] size [C] laptop design_features [S] great [SSEP] [O] easy [A] it [C] laptop portability [S] great']

task, data: acos laptop16
target: [('battery operation_performance', 'battery life', 'great', 'good')]
output: ['[A] battery life [O] good [S] great [C] battery general']
sent: ['the', 'battery', 'life', 'on', 'this', 'seems', 'good', '.']
counter: {('battery general', 'battery life', 'great', 'good'): 5}
output quads: ['[A] battery life [O] good [S] great [C] battery general']
multi_path: ['[A] battery life [O] good [S] great [C] battery general', '[A] battery life [S] great [O] good [C] battery general', '[A] battery life [O] good [C] battery general [S] great', '[O] good [A] battery life [S] great [C] battery general', '[O] good [A] battery life [C] battery general [S] great']

task, data: acos laptop16
target: [('laptop connectivity', 'android tablets', 'bad', 'null')]
output: ['[A] android tablets [O] null [S] bad [C] laptop operation_performance']
sent: ['going', 'to', 'a', 'grocery', 'store', 'or', 'fitness', 'center', ',', 'the', 'android', 'tablets', 'took', 'so', 'long', 'to', 'connect', 'that', 'i', 'finished', 'my', 'shopping', 'before', 'they', 'came', 'online', '.']
counter: {('laptop operation_performance', 'android tablets', 'bad', 'null'): 5}
output quads: ['[A] android tablets [O] null [S] bad [C] laptop operation_performance']
multi_path: ['[A] android tablets [O] null [S] bad [C] laptop operation_performance', '[A] android tablets [S] bad [O] null [C] laptop operation_performance', '[A] android tablets [O] null [C] laptop operation_performance [S] bad', '[O] null [A] android tablets [S] bad [C] laptop operation_performance', '[O] null [A] android tablets [C] laptop operation_performance [S] bad']

task, data: acos laptop16
target: [('battery general', 'battery life', 'great', 'great'), ('keyboard general', 'keyboard', 'great', 'null'), ('laptop design_features', 'null', 'great', 'amazing'), ('laptop operation_performance', 'powers up', 'great', 'null')]
output: ['[A] battery life [O] great [S] great [C] battery operation_performance', '[A] features [O] amazing [S] great [C] laptop design_features', '[A] keyboard [O] null [S] great [C] keyboard general', '[A] null [O] null [S] great [C] laptop operation_performance']
sent: ['powers', 'up', 'immediately', ',', 'great', 'battery', 'life', ',', 'great', 'keyboard', ',', 'amazing', 'features', '.']
counter: {('laptop operation_performance', 'null', 'great', 'null'): 5, ('battery operation_performance', 'battery life', 'great', 'great'): 5, ('keyboard general', 'keyboard', 'great', 'null'): 5, ('laptop design_features', 'features', 'great', 'amazing'): 5}
output quads: ['[A] null [O] null [S] great [C] laptop operation_performance', '[A] battery life [O] great [S] great [C] battery operation_performance', '[A] keyboard [O] null [S] great [C] keyboard general', '[A] features [O] amazing [S] great [C] laptop design_features']
multi_path: ['[A] it [O] null [S] great [C] laptop operation_performance [SSEP] [A] battery life [O] great [S] great [C] battery operation_performance [SSEP] [A] keyboard [O] null [S] great [C] keyboard general [SSEP] [A] features [O] amazing [S] great [C] laptop design_features', '[A] it [S] great [O] null [C] laptop operation_performance [SSEP] [A] battery life [S] great [O] great [C] battery operation_performance [SSEP] [A] keyboard [S] great [O] null [C] keyboard general [SSEP] [A] features [S] great [O] amazing [C] laptop design_features', '[A] it [O] null [C] laptop operation_performance [S] great [SSEP] [A] battery life [O] great [C] battery operation_performance [S] great [SSEP] [A] keyboard [O] null [C] keyboard general [S] great [SSEP] [A] features [O] amazing [C] laptop design_features [S] great', '[O] null [A] it [S] great [C] laptop operation_performance [SSEP] [O] great [A] battery life [S] great [C] battery operation_performance [SSEP] [O] null [A] keyboard [S] great [C] keyboard general [SSEP] [O] amazing [A] features [S] great [C] laptop design_features', '[O] null [A] it [C] laptop operation_performance [S] great [SSEP] [O] great [A] battery life [C] battery operation_performance [S] great [SSEP] [O] null [A] keyboard [C] keyboard general [S] great [SSEP] [O] amazing [A] features [C] laptop design_features [S] great']

task, data: acos laptop16
target: [('laptop general', 'null', 'great', 'happier')]
output: ['[A] apple product [O] happier [S] great [C] laptop general']
sent: ['was', 'considering', 'an', 'apple', 'product', 'but', 'i', "'", 'm', 'much', 'happier', 'with', 'this', '!']
counter: {('laptop general', 'apple product', 'great', 'happier'): 5}
output quads: ['[A] apple product [O] happier [S] great [C] laptop general']
multi_path: ['[A] apple product [O] happier [S] great [C] laptop general', '[A] apple product [S] great [O] happier [C] laptop general', '[A] apple product [O] happier [C] laptop general [S] great', '[O] happier [A] apple product [S] great [C] laptop general', '[O] happier [A] apple product [C] laptop general [S] great']

task, data: acos laptop16
target: [('company general', 'brand', 'great', 'null'), ('laptop general', 'samsung chromebook', 'great', 'null')]
output: ['[A] samsung chromebook [O] null [S] great [C] laptop general']
sent: ['this', 'is', 'my', 'third', 'samsung', 'chromebook', 'and', 'i', 'will', 'continue', 'to', 'use', 'this', 'brand', '.']
counter: {('laptop general', 'samsung chromebook', 'great', 'null'): 5}
output quads: ['[A] samsung chromebook [O] null [S] great [C] laptop general']
multi_path: ['[A] samsung chromebook [O] null [S] great [C] laptop general', '[A] samsung chromebook [S] great [O] null [C] laptop general', '[A] samsung chromebook [O] null [C] laptop general [S] great', '[O] null [A] samsung chromebook [S] great [C] laptop general', '[O] null [A] samsung chromebook [C] laptop general [S] great']

task, data: acos laptop16
target: [('laptop operation_performance', 'tablet', 'great', 'null')]
output: ['[A] null [O] null [S] great [C] laptop operation_performance']
sent: ['does', 'not', 'act', 'like', 'a', 'tablet', ',', 'but', 'it', 'can', 'have', 'almost', '10', 'tabs', 'open', 'before', 'affecting', 'performance', ',', 'including', 'video', 'streaming', '.']
counter: {('laptop operation_performance', 'null', 'great', 'null'): 5}
output quads: ['[A] null [O] null [S] great [C] laptop operation_performance']
multi_path: ['[A] it [O] null [S] great [C] laptop operation_performance', '[A] it [S] great [O] null [C] laptop operation_performance', '[A] it [O] null [C] laptop operation_performance [S] great', '[O] null [A] it [S] great [C] laptop operation_performance', '[O] null [A] it [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('laptop usability', 'null', 'ok', 'null')]
output: ['[A] null [O] null [S] ok [C] laptop general']
sent: ['this', 'was', 'purchased', 'for', 'my', 'son', 'to', 'download', 'his', 'high', 'school', 'textbooks', 'for', 'use', '.']
counter: {('laptop general', 'null', 'ok', 'null'): 5}
output quads: ['[A] null [O] null [S] ok [C] laptop general']
multi_path: ['[A] it [O] null [S] ok [C] laptop general', '[A] it [S] ok [O] null [C] laptop general', '[A] it [O] null [C] laptop general [S] ok', '[O] null [A] it [S] ok [C] laptop general', '[O] null [A] it [C] laptop general [S] ok']

task, data: acos laptop16
target: [('laptop general', 'laptop', 'great', 'null')]
output: ['[A] laptop [O] straight forward [S] great [C] laptop general']
sent: ['this', 'laptop', 'is', 'very', 'straight', 'forward', '.']
counter: {('laptop general', 'laptop', 'great', 'straight forward'): 5}
output quads: ['[A] laptop [O] straight forward [S] great [C] laptop general']
multi_path: ['[A] laptop [O] straight forward [S] great [C] laptop general', '[A] laptop [S] great [O] straight forward [C] laptop general', '[A] laptop [O] straight forward [C] laptop general [S] great', '[O] straight forward [A] laptop [S] great [C] laptop general', '[O] straight forward [A] laptop [C] laptop general [S] great']

task, data: acos laptop16
target: [('os operation_performance', 'os', 'great', 'secure')]
output: ['[A] os [O] secure [S] great [C] os design_features']
sent: ['also', ',', 'secure', 'os', '.']
counter: {('os design_features', 'os', 'great', 'secure'): 3, ('os general', 'os', 'great', 'secure'): 2}
output quads: ['[A] os [O] secure [S] great [C] os design_features']
multi_path: ['[A] os [O] secure [S] great [C] os design_features', '[A] os [S] great [O] secure [C] os design_features', '[A] os [O] secure [C] os general [S] great', '[O] secure [A] os [S] great [C] os design_features', '[O] secure [A] os [C] os general [S] great']

task, data: acos laptop16
target: [('laptop general', 'laptop', 'great', 'great'), ('laptop general', 'tablet', 'great', 'great')]
output: ['[A] laptop [O] great [S] great [C] laptop operation_performance', '[A] tablet [O] great [S] great [C] laptop operation_performance']
sent: ['great', 'little', 'laptop', 'and', 'tablet', '!']
counter: {('laptop operation_performance', 'laptop', 'great', 'great'): 5, ('laptop operation_performance', 'tablet', 'great', 'great'): 5}
output quads: ['[A] laptop [O] great [S] great [C] laptop operation_performance', '[A] tablet [O] great [S] great [C] laptop operation_performance']
multi_path: ['[A] laptop [O] great [S] great [C] laptop operation_performance [SSEP] [A] tablet [O] great [S] great [C] laptop operation_performance', '[A] laptop [S] great [O] great [C] laptop operation_performance [SSEP] [A] tablet [S] great [O] great [C] laptop operation_performance', '[A] laptop [O] great [C] laptop operation_performance [S] great [SSEP] [A] tablet [O] great [C] laptop operation_performance [S] great', '[O] great [A] laptop [S] great [C] laptop operation_performance [SSEP] [O] great [A] tablet [S] great [C] laptop operation_performance', '[O] great [A] laptop [C] laptop operation_performance [S] great [SSEP] [O] great [A] tablet [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('laptop design_features', 'notebook', 'great', 'decently'), ('laptop design_features', 'notebook', 'great', 'light'), ('laptop price', 'notebook', 'great', 'cheap')]
output: ['[A] notebook [O] cheap [S] great [C] laptop price', '[A] notebook [O] light [S] great [C] laptop design_features', '[A] notebook [O] rugged [S] great [C] laptop design_features']
sent: ['however', ',', 'still', '5', 'stars', 'as', 'you', 'get', 'what', 'you', 'pay', 'for', ':', 'a', 'cheap', ',', 'decently', 'rugged', ',', 'light', 'weight', 'notebook', 'to', 'kick', 'around', 'and', 'tinker', 'with', '.']
counter: {('laptop price', 'notebook', 'great', 'cheap'): 5, ('laptop design_features', 'notebook', 'great', 'rugged'): 5, ('laptop design_features', 'notebook', 'great', 'light'): 5}
output quads: ['[A] notebook [O] cheap [S] great [C] laptop price', '[A] notebook [O] rugged [S] great [C] laptop design_features', '[A] notebook [O] light [S] great [C] laptop design_features']
multi_path: ['[A] notebook [O] cheap [S] great [C] laptop price [SSEP] [A] notebook [O] rugged [S] great [C] laptop design_features [SSEP] [A] notebook [O] light [S] great [C] laptop design_features', '[A] notebook [S] great [O] cheap [C] laptop price [SSEP] [A] notebook [S] great [O] rugged [C] laptop design_features [SSEP] [A] notebook [S] great [O] light [C] laptop design_features', '[A] notebook [O] cheap [C] laptop price [S] great [SSEP] [A] notebook [O] rugged [C] laptop design_features [S] great [SSEP] [A] notebook [O] light [C] laptop design_features [S] great', '[O] cheap [A] notebook [S] great [C] laptop price [SSEP] [O] rugged [A] notebook [S] great [C] laptop design_features [SSEP] [O] light [A] notebook [S] great [C] laptop design_features', '[O] cheap [A] notebook [C] laptop price [S] great [SSEP] [O] rugged [A] notebook [C] laptop design_features [S] great [SSEP] [O] light [A] notebook [C] laptop design_features [S] great']

task, data: acos laptop16
target: [('laptop design_features', 'chromebook', 'great', 'easy'), ('laptop design_features', 'chromebook', 'great', 'lightweight'), ('laptop general', 'chromebook', 'great', 'love')]
output: ['[A] chromebook [O] easy [S] great [C] laptop portability', '[A] chromebook [O] lightweight [S] great [C] laptop design_features', '[A] chromebook [O] love [S] great [C] laptop general']
sent: ['i', 'am', 'still', 'getting', 'use', 'to', 'the', 'chromebook', 'but', 'i', 'love', 'it', 'lightweight', 'easy', 'to', 'bring', 'with', 'me', 'as', 'it', 'doesnt', 'take', 'up', 'much', 'room', '!']
counter: {('laptop general', 'chromebook', 'great', 'love'): 5, ('laptop design_features', 'chromebook', 'great', 'lightweight'): 5, ('laptop portability', 'chromebook', 'great', 'easy'): 5}
output quads: ['[A] chromebook [O] love [S] great [C] laptop general', '[A] chromebook [O] lightweight [S] great [C] laptop design_features', '[A] chromebook [O] easy [S] great [C] laptop portability']
multi_path: ['[A] chromebook [O] love [S] great [C] laptop general [SSEP] [A] chromebook [O] lightweight [S] great [C] laptop design_features [SSEP] [A] chromebook [O] easy [S] great [C] laptop portability', '[A] chromebook [S] great [O] love [C] laptop general [SSEP] [A] chromebook [S] great [O] lightweight [C] laptop design_features [SSEP] [A] chromebook [S] great [O] easy [C] laptop portability', '[A] chromebook [O] love [C] laptop general [S] great [SSEP] [A] chromebook [O] lightweight [C] laptop design_features [S] great [SSEP] [A] chromebook [O] easy [C] laptop portability [S] great', '[O] love [A] chromebook [S] great [C] laptop general [SSEP] [O] lightweight [A] chromebook [S] great [C] laptop design_features [SSEP] [O] easy [A] chromebook [S] great [C] laptop portability', '[O] love [A] chromebook [C] laptop general [S] great [SSEP] [O] lightweight [A] chromebook [C] laptop design_features [S] great [SSEP] [O] easy [A] chromebook [C] laptop portability [S] great']

task, data: acos laptop16
target: [('laptop operation_performance', 'null', 'great', 'great')]
output: ['[A] null [O] great [S] great [C] laptop miscellaneous']
sent: ['great', 'for', 'going', 'on', 'the', 'internet', '.']
counter: {('laptop miscellaneous', 'null', 'great', 'great'): 5}
output quads: ['[A] null [O] great [S] great [C] laptop miscellaneous']
multi_path: ['[A] it [O] great [S] great [C] laptop miscellaneous', '[A] it [S] great [O] great [C] laptop miscellaneous', '[A] it [O] great [C] laptop miscellaneous [S] great', '[O] great [A] it [S] great [C] laptop miscellaneous', '[O] great [A] it [C] laptop miscellaneous [S] great']

task, data: acos laptop16
target: [('laptop operation_performance', 'null', 'great', 'great')]
output: ['[A] roblocks [O] great [S] great [C] laptop operation_performance', '[A] tank blitz [O] great [S] great [C] laptop operation_performance']
sent: ['we', 'ran', 'world', 'of', 'tank', 'blitz', '(', 'using', 'a', 'game', 'controller', ')', 'and', 'roblocks', 'on', 'the', 'low', 'rez', 'settings', 'and', 'experienced', 'great', 'appearance', 'and', 'ability', 'to', 'play', '.']
counter: {('laptop operation_performance', 'tank blitz', 'great', 'great'): 4, ('laptop operation_performance', 'roblocks', 'great', 'great'): 5, ('software operation_performance', 'tank blitz', 'great', 'great'): 1}
output quads: ['[A] tank blitz [O] great [S] great [C] laptop operation_performance', '[A] roblocks [O] great [S] great [C] laptop operation_performance']
multi_path: ['[A] tank blitz [O] great [S] great [C] laptop operation_performance [SSEP] [A] roblocks [O] great [S] great [C] laptop operation_performance', '[A] tank blitz [S] great [O] great [C] laptop operation_performance [SSEP] [A] roblocks [S] great [O] great [C] laptop operation_performance', '[A] tank blitz [O] great [C] laptop operation_performance [S] great [SSEP] [A] roblocks [O] great [C] laptop operation_performance [S] great', '[O] great [A] tank blitz [S] great [C] laptop operation_performance [SSEP] [O] great [A] roblocks [S] great [C] laptop operation_performance', '[O] great [A] tank blitz [C] software operation_performance [S] great [SSEP] [O] great [A] roblocks [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('multimedia_devices operation_performance', 'speaker', 'bad', 'null')]
output: ['[A] speaker [O] t loud [S] bad [C] multimedia_devices operation_performance']
sent: ['another', 'little', 'thing', 'is', 'the', 'speaker', 'isn', "'", 't', 'loud', '.']
counter: {('multimedia_devices operation_performance', 'speaker', 'bad', 't loud'): 5}
output quads: ['[A] speaker [O] t loud [S] bad [C] multimedia_devices operation_performance']
multi_path: ["[A] speaker [O]'t loud [S] bad [C] multimedia_devices operation_performance", "[A] speaker [S] bad [O]'t loud [C] multimedia_devices operation_performance", "[A] speaker [O]'t loud [C] multimedia_devices operation_performance [S] bad", "[O]'t loud [A] speaker [S] bad [C] multimedia_devices operation_performance", "[O]'t loud [A] speaker [C] multimedia_devices operation_performance [S] bad"]

task, data: acos laptop16
target: [('battery operation_performance', 'battery life', 'great', 'great')]
output: ['[A] battery life [O] great [S] great [C] battery general']
sent: ['great', 'battery', 'life', '.']
counter: {('battery general', 'battery life', 'great', 'great'): 5}
output quads: ['[A] battery life [O] great [S] great [C] battery general']
multi_path: ['[A] battery life [O] great [S] great [C] battery general', '[A] battery life [S] great [O] great [C] battery general', '[A] battery life [O] great [C] battery general [S] great', '[O] great [A] battery life [S] great [C] battery general', '[O] great [A] battery life [C] battery general [S] great']

task, data: acos laptop16
target: [('battery general', 'battery life', 'great', 'null'), ('display general', 'display', 'great', 'null'), ('laptop operation_performance', 'samsung', 'great', 'null'), ('software general', 'software', 'great', 'null')]
output: ['[A] battery life [O] null [S] great [C] battery general', '[A] display [O] null [S] great [C] display general', '[A] software [O] null [S] great [C] software general', '[A] speed [O] null [S] great [C] laptop operation_performance']
sent: ['battery', 'life', ',', 'speed', ',', 'display', 'and', 'software', 'were', 'my', 'additional', 'top', 'reasons', 'why', 'i', 'went', 'for', 'the', 'samsung', '.']
counter: {('battery general', 'battery life', 'great', 'null'): 5, ('laptop operation_performance', 'speed', 'great', 'null'): 5, ('display general', 'display', 'great', 'null'): 5, ('software general', 'software', 'great', 'null'): 5}
output quads: ['[A] battery life [O] null [S] great [C] battery general', '[A] speed [O] null [S] great [C] laptop operation_performance', '[A] display [O] null [S] great [C] display general', '[A] software [O] null [S] great [C] software general']
multi_path: ['[A] battery life [O] null [S] great [C] battery general [SSEP] [A] speed [O] null [S] great [C] laptop operation_performance [SSEP] [A] display [O] null [S] great [C] display general [SSEP] [A] software [O] null [S] great [C] software general', '[A] battery life [S] great [O] null [C] battery general [SSEP] [A] speed [S] great [O] null [C] laptop operation_performance [SSEP] [A] display [S] great [O] null [C] display general [SSEP] [A] software [S] great [O] null [C] software general', '[A] battery life [O] null [C] battery general [S] great [SSEP] [A] speed [O] null [C] laptop operation_performance [S] great [SSEP] [A] display [O] null [C] display general [S] great [SSEP] [A] software [O] null [C] software general [S] great', '[O] null [A] battery life [S] great [C] battery general [SSEP] [O] null [A] speed [S] great [C] laptop operation_performance [SSEP] [O] null [A] display [S] great [C] display general [SSEP] [O] null [A] software [S] great [C] software general', '[O] null [A] battery life [C] battery general [S] great [SSEP] [O] null [A] speed [C] laptop operation_performance [S] great [SSEP] [O] null [A] display [C] display general [S] great [SSEP] [O] null [A] software [C] software general [S] great']

task, data: acos laptop16
target: [('display quality', 'display', 'great', 'bright'), ('display quality', 'display', 'great', 'crisp'), ('os operation_performance', 'setup', 'great', 'cheap'), ('os operation_performance', 'setup', 'great', 'fast'), ('power_supply operation_performance', 'null', 'great', 'null')]
output: ['[A] display [O] bright [S] great [C] display quality', '[A] display [O] crisp [S] great [C] display quality', '[A] null [O] cheap [S] great [C] laptop price', '[A] null [O] fast [S] great [C] laptop operation_performance', '[A] null [O] fast [S] great [C] power_supply operation_performance']
sent: ['the', 'display', 'is', 'crisp', 'and', 'bright', ',', 'setup', 'literally', 'takes', 'under', 'a', 'minute', ',', 'its', 'fast', ',', 'cheap', ',', 'charges', 'fast', ',', 'lasts', 'forever', '.']
counter: {('display quality', 'display', 'great', 'crisp'): 5, ('display quality', 'display', 'great', 'bright'): 5, ('laptop operation_performance', 'null', 'great', 'fast'): 5, ('laptop price', 'null', 'great', 'cheap'): 5, ('power_supply operation_performance', 'null', 'great', 'fast'): 5}
output quads: ['[A] display [O] crisp [S] great [C] display quality', '[A] display [O] bright [S] great [C] display quality', '[A] null [O] fast [S] great [C] laptop operation_performance', '[A] null [O] cheap [S] great [C] laptop price', '[A] null [O] fast [S] great [C] power_supply operation_performance']
multi_path: ['[A] display [O] crisp [S] great [C] display quality [SSEP] [A] display [O] bright [S] great [C] display quality [SSEP] [A] it [O] fast [S] great [C] laptop operation_performance [SSEP] [A] it [O] cheap [S] great [C] laptop price [SSEP] [A] it [O] fast [S] great [C] power_supply operation_performance', '[A] display [S] great [O] crisp [C] display quality [SSEP] [A] display [S] great [O] bright [C] display quality [SSEP] [A] it [S] great [O] fast [C] laptop operation_performance [SSEP] [A] it [S] great [O] cheap [C] laptop price [SSEP] [A] it [S] great [O] fast [C] power_supply operation_performance', '[A] display [O] crisp [C] display quality [S] great [SSEP] [A] display [O] bright [C] display quality [S] great [SSEP] [A] it [O] fast [C] laptop operation_performance [S] great [SSEP] [A] it [O] cheap [C] laptop price [S] great [SSEP] [A] it [O] fast [C] power_supply operation_performance [S] great', '[O] crisp [A] display [S] great [C] display quality [SSEP] [O] bright [A] display [S] great [C] display quality [SSEP] [O] fast [A] it [S] great [C] laptop operation_performance [SSEP] [O] cheap [A] it [S] great [C] laptop price [SSEP] [O] fast [A] it [S] great [C] power_supply operation_performance', '[O] crisp [A] display [C] display quality [S] great [SSEP] [O] bright [A] display [C] display quality [S] great [SSEP] [O] fast [A] it [C] laptop operation_performance [S] great [SSEP] [O] cheap [A] it [C] laptop price [S] great [SSEP] [O] fast [A] it [C] power_supply operation_performance [S] great']

task, data: acos laptop16
target: [('shipping general', 'delivery', 'bad', 'off'), ('shipping general', 'usps', 'bad', 'suck')]
output: ['[A] delivery [O] null [S] bad [C] shipping quality', '[A] usps [O] suck [S] bad [C] software general']
sent: ['delivery', 'was', 'a', 'bit', 'off', 'but', 'i', 'blame', 'usps', 'on', 'that', ',', 'they', 'suck', 'in', 'my', 'area', '.']
counter: {('shipping quality', 'delivery', 'bad', 'null'): 5, ('software general', 'usps', 'bad', 'suck'): 5}
output quads: ['[A] delivery [O] null [S] bad [C] shipping quality', '[A] usps [O] suck [S] bad [C] software general']
multi_path: ['[A] delivery [O] null [S] bad [C] shipping quality [SSEP] [A] usps [O] suck [S] bad [C] software general', '[A] delivery [S] bad [O] null [C] shipping quality [SSEP] [A] usps [S] bad [O] suck [C] software general', '[A] delivery [O] null [C] shipping quality [S] bad [SSEP] [A] usps [O] suck [C] software general [S] bad', '[O] null [A] delivery [S] bad [C] shipping quality [SSEP] [O] suck [A] usps [S] bad [C] software general', '[O] null [A] delivery [C] shipping quality [S] bad [SSEP] [O] suck [A] usps [C] software general [S] bad']

task, data: acos laptop16
target: [('laptop general', 'computer', 'great', 'great')]
output: ['[A] computer [O] great [S] great [C] laptop operation_performance']
sent: ['great', 'functioning', 'computer', '.']
counter: {('laptop operation_performance', 'computer', 'great', 'great'): 5}
output quads: ['[A] computer [O] great [S] great [C] laptop operation_performance']
multi_path: ['[A] computer [O] great [S] great [C] laptop operation_performance', '[A] computer [S] great [O] great [C] laptop operation_performance', '[A] computer [O] great [C] laptop operation_performance [S] great', '[O] great [A] computer [S] great [C] laptop operation_performance', '[O] great [A] computer [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('laptop general', 'laptop', 'great', 'null')]
output: ['[A] laptop [O] null [S] great [C] laptop operation_performance']
sent: ['this', 'laptop', 'does', 'all', 'i', 'need', 'it', 'to', 'do', '.']
counter: {('laptop operation_performance', 'laptop', 'great', 'null'): 5}
output quads: ['[A] laptop [O] null [S] great [C] laptop operation_performance']
multi_path: ['[A] laptop [O] null [S] great [C] laptop operation_performance', '[A] laptop [S] great [O] null [C] laptop operation_performance', '[A] laptop [O] null [C] laptop operation_performance [S] great', '[O] null [A] laptop [S] great [C] laptop operation_performance', '[O] null [A] laptop [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('battery operation_performance', 'battery', 'great', 'decent'), ('laptop operation_performance', 'null', 'great', 'flawlessly')]
output: ['[A] battery life [O] decent [S] great [C] battery general', '[A] null [O] flawlessly [S] great [C] laptop operation_performance']
sent: ['works', 'flawlessly', 'and', 'decent', 'battery', 'life', '.']
counter: {('laptop operation_performance', 'null', 'great', 'flawlessly'): 5, ('battery general', 'battery life', 'great', 'decent'): 5}
output quads: ['[A] null [O] flawlessly [S] great [C] laptop operation_performance', '[A] battery life [O] decent [S] great [C] battery general']
multi_path: ['[A] it [O] flawlessly [S] great [C] laptop operation_performance [SSEP] [A] battery life [O] decent [S] great [C] battery general', '[A] it [S] great [O] flawlessly [C] laptop operation_performance [SSEP] [A] battery life [S] great [O] decent [C] battery general', '[A] it [O] flawlessly [C] laptop operation_performance [S] great [SSEP] [A] battery life [O] decent [C] battery general [S] great', '[O] flawlessly [A] it [S] great [C] laptop operation_performance [SSEP] [O] decent [A] battery life [S] great [C] battery general', '[O] flawlessly [A] it [C] laptop operation_performance [S] great [SSEP] [O] decent [A] battery life [C] battery general [S] great']

task, data: acos laptop16
target: [('graphics general', 'graphics', 'great', 'great')]
output: ['[A] null [O] great [S] great [C] laptop operation_performance']
sent: ['great', 'for', 'graphics', ',', 'nothing', 'to', 'complex', 'but', 'it', 'can', 'get', 'the', 'job', 'done']
counter: {('laptop operation_performance', 'null', 'great', 'great'): 5}
output quads: ['[A] null [O] great [S] great [C] laptop operation_performance']
multi_path: ['[A] it [O] great [S] great [C] laptop operation_performance', '[A] it [S] great [O] great [C] laptop operation_performance', '[A] it [O] great [C] laptop operation_performance [S] great', '[O] great [A] it [S] great [C] laptop operation_performance', '[O] great [A] it [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('laptop general', 'null', 'great', 'null')]
output: ['[A] null [O] null [S] bad [C] laptop general']
sent: ['about', 'what', 'i', 'was', 'expecting', '/', 'hoping', 'it', 'to', 'be', '.']
counter: {('laptop general', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [O] null [S] bad [C] laptop general']
multi_path: ['[A] it [O] null [S] bad [C] laptop general', '[A] it [S] bad [O] null [C] laptop general', '[A] it [O] null [C] laptop general [S] bad', '[O] null [A] it [S] bad [C] laptop general', '[O] null [A] it [C] laptop general [S] bad']

task, data: acos laptop16
target: [('laptop general', 'null', 'great', 'null')]
output: ['[A] null [O] null [S] great [C] laptop operation_performance']
sent: ['it', 'has', 'been', 'able', 'to', 'handle', 'everything', 'i', "'", 've', 'needed', 'for', 'my', 'business', '.']
counter: {('laptop operation_performance', 'null', 'great', 'null'): 5}
output quads: ['[A] null [O] null [S] great [C] laptop operation_performance']
multi_path: ['[A] it [O] null [S] great [C] laptop operation_performance', '[A] it [S] great [O] null [C] laptop operation_performance', '[A] it [O] null [C] laptop operation_performance [S] great', '[O] null [A] it [S] great [C] laptop operation_performance', '[O] null [A] it [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('laptop general', 'null', 'great', 'null'), ('laptop operation_performance', 'null', 'great', 'fast')]
output: ['[A] null [O] fast [S] great [C] laptop operation_performance']
sent: ['it', 'is', 'fast', 'enough', 'for', 'what', 'we', 'do', ',', 'and', 'it', 'has', 'all', 'the', 'features', 'we', 'needed', 'for', 'less', '.']
counter: {('laptop operation_performance', 'null', 'great', 'fast'): 5}
output quads: ['[A] null [O] fast [S] great [C] laptop operation_performance']
multi_path: ['[A] it [O] fast [S] great [C] laptop operation_performance', '[A] it [S] great [O] fast [C] laptop operation_performance', '[A] it [O] fast [C] laptop operation_performance [S] great', '[O] fast [A] it [S] great [C] laptop operation_performance', '[O] fast [A] it [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('battery quality', 'battery', 'bad', 'null')]
output: ['[A] battery [O] null [S] great [C] battery operation_performance']
sent: ['battery', 'could', 'last', 'longer', '.']
counter: {('battery operation_performance', 'battery', 'great', 'null'): 5}
output quads: ['[A] battery [O] null [S] great [C] battery operation_performance']
multi_path: ['[A] battery [O] null [S] great [C] battery operation_performance', '[A] battery [S] great [O] null [C] battery operation_performance', '[A] battery [O] null [C] battery operation_performance [S] great', '[O] null [A] battery [S] great [C] battery operation_performance', '[O] null [A] battery [C] battery operation_performance [S] great']

task, data: acos laptop16
target: [('battery general', 'battery', 'great', 'good'), ('display design_features', 'screen', 'great', 'sharp'), ('laptop design_features', 'null', 'great', 'light')]
output: ['[A] battery life [O] good [S] great [C] battery general', '[A] null [O] light [S] great [C] laptop design_features', '[A] screen [O] sharp [S] great [C] display design_features']
sent: ['light', 'weight', ',', 'good', 'battery', 'life', ',', 'sharp', 'screen', '.']
counter: {('laptop design_features', 'null', 'great', 'light'): 5, ('battery general', 'battery life', 'great', 'good'): 5, ('display design_features', 'screen', 'great', 'sharp'): 5}
output quads: ['[A] null [O] light [S] great [C] laptop design_features', '[A] battery life [O] good [S] great [C] battery general', '[A] screen [O] sharp [S] great [C] display design_features']
multi_path: ['[A] it [O] light [S] great [C] laptop design_features [SSEP] [A] battery life [O] good [S] great [C] battery general [SSEP] [A] screen [O] sharp [S] great [C] display design_features', '[A] it [S] great [O] light [C] laptop design_features [SSEP] [A] battery life [S] great [O] good [C] battery general [SSEP] [A] screen [S] great [O] sharp [C] display design_features', '[A] it [O] light [C] laptop design_features [S] great [SSEP] [A] battery life [O] good [C] battery general [S] great [SSEP] [A] screen [O] sharp [C] display design_features [S] great', '[O] light [A] it [S] great [C] laptop design_features [SSEP] [O] good [A] battery life [S] great [C] battery general [SSEP] [O] sharp [A] screen [S] great [C] display design_features', '[O] light [A] it [C] laptop design_features [S] great [SSEP] [O] good [A] battery life [C] battery general [S] great [SSEP] [O] sharp [A] screen [C] display design_features [S] great']

task, data: acos laptop16
target: [('laptop general', 'null', 'great', 'content')]
output: ['[A] features [O] content [S] great [C] laptop design_features', '[A] null [O] content [S] great [C] laptop general']
sent: ['he', 'is', 'very', 'content', 'with', 'it', 'and', 'its', 'features']
counter: {('laptop general', 'null', 'great', 'content'): 5, ('laptop design_features', 'features', 'great', 'content'): 3, ('laptop general', 'features', 'great', 'content'): 1}
output quads: ['[A] null [O] content [S] great [C] laptop general', '[A] features [O] content [S] great [C] laptop design_features']
multi_path: ['[A] it [O] content [S] great [C] laptop general [SSEP] [A] features [O] content [S] great [C] laptop design_features', '[A] it [S] great [O] content [C] laptop general [SSEP] [A] features [S] great [O] content [C] laptop design_features', '[A] it [O] content [C] laptop general [S] great', '[O] content [A] it [S] great [C] laptop general [SSEP] [O] content [A] features [S] great [C] laptop design_features', '[O] content [A] it [C] laptop general [S] great [SSEP] [O] content [A] features [C] laptop general [S] great']

task, data: acos laptop16
target: [('cpu general', 'processor', 'great', 'cool'), ('laptop operation_performance', 'processor', 'great', 'great'), ('laptop operation_performance', 'processor', 'great', 'quiet')]
output: ['[A] null [O] great [S] great [C] laptop operation_performance', '[A] processor [O] cool [S] great [C] cpu operation_performance', '[A] processor [O] quiet [S] great [C] cpu operation_performance']
sent: ['great', 'performance', ',', 'quiet', 'and', 'cool', 'processor', '.']
counter: {('laptop operation_performance', 'null', 'great', 'great'): 5, ('cpu operation_performance', 'processor', 'great', 'quiet'): 5, ('cpu operation_performance', 'processor', 'great', 'cool'): 5}
output quads: ['[A] null [O] great [S] great [C] laptop operation_performance', '[A] processor [O] quiet [S] great [C] cpu operation_performance', '[A] processor [O] cool [S] great [C] cpu operation_performance']
multi_path: ['[A] it [O] great [S] great [C] laptop operation_performance [SSEP] [A] processor [O] quiet [S] great [C] cpu operation_performance [SSEP] [A] processor [O] cool [S] great [C] cpu operation_performance', '[A] it [S] great [O] great [C] laptop operation_performance [SSEP] [A] processor [S] great [O] quiet [C] cpu operation_performance [SSEP] [A] processor [S] great [O] cool [C] cpu operation_performance', '[A] it [O] great [C] laptop operation_performance [S] great [SSEP] [A] processor [O] quiet [C] cpu operation_performance [S] great [SSEP] [A] processor [O] cool [C] cpu operation_performance [S] great', '[O] great [A] it [S] great [C] laptop operation_performance [SSEP] [O] quiet [A] processor [S] great [C] cpu operation_performance [SSEP] [O] cool [A] processor [S] great [C] cpu operation_performance', '[O] great [A] it [C] laptop operation_performance [S] great [SSEP] [O] quiet [A] processor [C] cpu operation_performance [S] great [SSEP] [O] cool [A] processor [C] cpu operation_performance [S] great']

task, data: acos laptop16
target: [('display operation_performance', 'graphics', 'great', 'smoothly')]
output: ['[A] sims 4 [O] smoothly [S] great [C] laptop operation_performance']
sent: ['the', 'sims', '4', 'ran', 'very', 'smoothly', 'on', 'regular', 'graphics', '.']
counter: {('laptop operation_performance', 'sims 4', 'great', 'smoothly'): 5}
output quads: ['[A] sims 4 [O] smoothly [S] great [C] laptop operation_performance']
multi_path: ['[A] sims 4 [O] smoothly [S] great [C] laptop operation_performance', '[A] sims 4 [S] great [O] smoothly [C] laptop operation_performance', '[A] sims 4 [O] smoothly [C] laptop operation_performance [S] great', '[O] smoothly [A] sims 4 [S] great [C] laptop operation_performance', '[O] smoothly [A] sims 4 [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('software operation_performance', 'first person shooters', 'great', 'well')]
output: ['[A] null [O] well [S] great [C] laptop operation_performance']
sent: ['runs', 'first', 'person', 'shooters', 'relatively', 'well', '.']
counter: {('laptop operation_performance', 'null', 'great', 'well'): 5}
output quads: ['[A] null [O] well [S] great [C] laptop operation_performance']
multi_path: ['[A] it [O] well [S] great [C] laptop operation_performance', '[A] it [S] great [O] well [C] laptop operation_performance', '[A] it [O] well [C] laptop operation_performance [S] great', '[O] well [A] it [S] great [C] laptop operation_performance', '[O] well [A] it [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('laptop operation_performance', 'laptop', 'great', 'null'), ('laptop usability', 'laptop', 'great', 'easy')]
output: ['[A] laptop [O] easy [S] great [C] laptop usability']
sent: ['laptop', 'booted', 'right', 'up', 'and', 'the', 'set', 'up', 'waa', 'super', 'easy', '.']
counter: {('laptop usability', 'laptop', 'great', 'easy'): 5}
output quads: ['[A] laptop [O] easy [S] great [C] laptop usability']
multi_path: ['[A] laptop [O] easy [S] great [C] laptop usability', '[A] laptop [S] great [O] easy [C] laptop usability', '[A] laptop [O] easy [C] laptop usability [S] great', '[O] easy [A] laptop [S] great [C] laptop usability', '[O] easy [A] laptop [C] laptop usability [S] great']

task, data: acos laptop16
target: [('keyboard design_features', 'keyboard', 'bad', 'null')]
output: ['[A] numbering pad [O] null [S] bad [C] keyboard design_features']
sent: ['the', 'ones', 'that', 'do', ',', 'doesn', "'", 't', 'have', 'the', 'numbering', 'pad', 'on', 'the', 'right', 'side', 'of', 'the', 'keyboard', 'and', 'i', 'needed', 'that', '.']
counter: {('keyboard design_features', 'numbering pad', 'bad', 'null'): 5}
output quads: ['[A] numbering pad [O] null [S] bad [C] keyboard design_features']
multi_path: ['[A] numbering pad [O] null [S] bad [C] keyboard design_features', '[A] numbering pad [S] bad [O] null [C] keyboard design_features', '[A] numbering pad [O] null [C] keyboard design_features [S] bad', '[O] null [A] numbering pad [S] bad [C] keyboard design_features', '[O] null [A] numbering pad [C] keyboard design_features [S] bad']

task, data: acos laptop16
target: [('laptop general', 'lappy', 'great', 'good'), ('laptop general', 'lappy', 'great', 'happy')]
output: ['[A] lappy [O] good [S] great [C] laptop general', '[A] null [O] happy [S] great [C] laptop general']
sent: ['it', "'", 's', 'a', 'very', 'good', 'lappy', 'and', 'i', "'", 'm', 'happy', 'with', 'it', ',', 'because', 'it', 'can', 'still', 'get', 'all', 'i', 'need', 'to', 'do', ',', 'done', '.']
counter: {('laptop general', 'lappy', 'great', 'good'): 5, ('laptop general', 'null', 'great', 'happy'): 5}
output quads: ['[A] lappy [O] good [S] great [C] laptop general', '[A] null [O] happy [S] great [C] laptop general']
multi_path: ['[A] lappy [O] good [S] great [C] laptop general [SSEP] [A] it [O] happy [S] great [C] laptop general', '[A] lappy [S] great [O] good [C] laptop general [SSEP] [A] it [S] great [O] happy [C] laptop general', '[A] lappy [O] good [C] laptop general [S] great [SSEP] [A] it [O] happy [C] laptop general [S] great', '[O] good [A] lappy [S] great [C] laptop general [SSEP] [O] happy [A] it [S] great [C] laptop general', '[O] good [A] lappy [C] laptop general [S] great [SSEP] [O] happy [A] it [C] laptop general [S] great']

task, data: acos laptop16
target: [('laptop design_features', 'null', 'great', 'light'), ('laptop design_features', 'null', 'great', 'surprised'), ('laptop design_features', 'null', 'great', 'thin'), ('laptop general', 'null', 'great', 'nice')]
output: ['[A] dvd player [O] surprised [S] great [C] multimedia_devices design_features', '[A] null [O] light [S] great [C] laptop design_features', '[A] null [O] nice [S] great [C] laptop design_features', '[A] null [O] thin [S] great [C] laptop design_features']
sent: ['nice', 'and', 'thin', ',', 'light', ',', 'surprised', 'it', 'has', 'a', 'dvd', 'player', 'in', 'it', '.']
counter: {('laptop design_features', 'null', 'great', 'nice'): 5, ('laptop design_features', 'null', 'great', 'thin'): 5, ('laptop design_features', 'null', 'great', 'light'): 5, ('multimedia_devices design_features', 'dvd player', 'great', 'surprised'): 5}
output quads: ['[A] null [O] nice [S] great [C] laptop design_features', '[A] null [O] thin [S] great [C] laptop design_features', '[A] null [O] light [S] great [C] laptop design_features', '[A] dvd player [O] surprised [S] great [C] multimedia_devices design_features']
multi_path: ['[A] it [O] nice [S] great [C] laptop design_features [SSEP] [A] it [O] thin [S] great [C] laptop design_features [SSEP] [A] it [O] light [S] great [C] laptop design_features [SSEP] [A] dvd player [O] surprised [S] great [C] multimedia_devices design_features', '[A] it [S] great [O] nice [C] laptop design_features [SSEP] [A] it [S] great [O] thin [C] laptop design_features [SSEP] [A] it [S] great [O] light [C] laptop design_features [SSEP] [A] dvd player [S] great [O] surprised [C] multimedia_devices design_features', '[A] it [O] nice [C] laptop design_features [S] great [SSEP] [A] it [O] thin [C] laptop design_features [S] great [SSEP] [A] it [O] light [C] laptop design_features [S] great [SSEP] [A] dvd player [O] surprised [C] multimedia_devices design_features [S] great', '[O] nice [A] it [S] great [C] laptop design_features [SSEP] [O] thin [A] it [S] great [C] laptop design_features [SSEP] [O] light [A] it [S] great [C] laptop design_features [SSEP] [O] surprised [A] dvd player [S] great [C] multimedia_devices design_features', '[O] nice [A] it [C] laptop design_features [S] great [SSEP] [O] thin [A] it [C] laptop design_features [S] great [SSEP] [O] light [A] it [C] laptop design_features [S] great [SSEP] [O] surprised [A] dvd player [C] multimedia_devices design_features [S] great']

task, data: acos laptop16
target: [('battery operation_performance', 'battery life', 'bad', 'shorter'), ('laptop general', 'computer', 'great', 'perfect')]
output: ['[A] battery life [O] flaw [S] bad [C] battery operation_performance', '[A] computer [O] perfect [S] great [C] laptop general']
sent: ['for', 'my', 'needs', 'it', "'", 's', 'a', 'perfect', 'computer', 'with', 'one', 'major', 'flaw', ':', 'battery', 'life', 'is', 'much', 'shorter', 'than', 'they', 'advertise', '!']
counter: {('laptop general', 'computer', 'great', 'perfect'): 5, ('battery operation_performance', 'battery life', 'bad', 'flaw'): 5}
output quads: ['[A] computer [O] perfect [S] great [C] laptop general', '[A] battery life [O] flaw [S] bad [C] battery operation_performance']
multi_path: ['[A] computer [O] perfect [S] great [C] laptop general [SSEP] [A] battery life [O] flaw [S] bad [C] battery operation_performance', '[A] computer [S] great [O] perfect [C] laptop general [SSEP] [A] battery life [S] bad [O] flaw [C] battery operation_performance', '[A] computer [O] perfect [C] laptop general [S] great [SSEP] [A] battery life [O] flaw [C] battery operation_performance [S] bad', '[O] perfect [A] computer [S] great [C] laptop general [SSEP] [O] flaw [A] battery life [S] bad [C] battery operation_performance', '[O] perfect [A] computer [C] laptop general [S] great [SSEP] [O] flaw [A] battery life [C] battery operation_performance [S] bad']

task, data: acos laptop16
target: [('display quality', 'screen', 'bad', 'null')]
output: ['[A] screen backlight [O] null [S] bad [C] display operation_performance']
sent: ['mine', 'did', 'lose', 'its', 'screen', 'backlight', 'suddenly', 'when', 'i', "'", 'd', 'had', 'it', 'less', 'than', 'a', 'month', '.']
counter: {('display operation_performance', 'screen backlight', 'bad', 'null'): 5}
output quads: ['[A] screen backlight [O] null [S] bad [C] display operation_performance']
multi_path: ['[A] screen backlight [O] null [S] bad [C] display operation_performance', '[A] screen backlight [S] bad [O] null [C] display operation_performance', '[A] screen backlight [O] null [C] display operation_performance [S] bad', '[O] null [A] screen backlight [S] bad [C] display operation_performance', '[O] null [A] screen backlight [C] display operation_performance [S] bad']

task, data: acos laptop16
target: [('battery design_features', 'battery', 'bad', 'null')]
output: ['[A] battery [O] undersized [S] bad [C] battery design_features']
sent: ['i', 'think', 'the', 'battery', 'is', 'just', 'undersized', 'for', 'the', 'amd', 'a12', 'apu', '.']
counter: {('battery design_features', 'battery', 'bad', 'undersized'): 5}
output quads: ['[A] battery [O] undersized [S] bad [C] battery design_features']
multi_path: ['[A] battery [O] undersized [S] bad [C] battery design_features', '[A] battery [S] bad [O] undersized [C] battery design_features', '[A] battery [O] undersized [C] battery design_features [S] bad', '[O] undersized [A] battery [S] bad [C] battery design_features', '[O] undersized [A] battery [C] battery design_features [S] bad']

task, data: acos laptop16
target: [('optical_drives general', 'dvd player', 'great', 'nice')]
output: ['[A] dvd player [O] nice [S] great [C] multimedia_devices general']
sent: ['the', 'dvd', 'player', 'is', 'a', 'really', 'nice', 'touch', 'as', 'well', ',', 'i', 'didn', "'", 't', 'think', 'i', 'would', 'use', 'it', 'but', 'i', 'definitely', 'will', 'in', 'the', 'future', '!']
counter: {('multimedia_devices general', 'dvd player', 'great', 'nice'): 5}
output quads: ['[A] dvd player [O] nice [S] great [C] multimedia_devices general']
multi_path: ['[A] dvd player [O] nice [S] great [C] multimedia_devices general', '[A] dvd player [S] great [O] nice [C] multimedia_devices general', '[A] dvd player [O] nice [C] multimedia_devices general [S] great', '[O] nice [A] dvd player [S] great [C] multimedia_devices general', '[O] nice [A] dvd player [C] multimedia_devices general [S] great']

task, data: acos laptop16
target: [('laptop general', 'null', 'great', 'pleased')]
output: ['[A] null [O] pleased [S] great [C] laptop usability']
sent: ['she', 'can', 'stream', 'music', 'or', 'videos', ',', 'do', 'her', 'homework', ',', 'and', 'so', 'on', ',', 'so', 'we', 'are', 'all', 'pleased', 'with', 'our', 'purchase', '.']
counter: {('laptop usability', 'null', 'great', 'pleased'): 5}
output quads: ['[A] null [O] pleased [S] great [C] laptop usability']
multi_path: ['[A] it [O] pleased [S] great [C] laptop usability', '[A] it [S] great [O] pleased [C] laptop usability', '[A] it [O] pleased [C] laptop usability [S] great', '[O] pleased [A] it [S] great [C] laptop usability', '[O] pleased [A] it [C] laptop usability [S] great']

task, data: acos laptop16
target: [('cpu operation_performance', 'cpu', 'great', 'well')]
output: ['[A] cpu performance [O] well [S] great [C] cpu operation_performance']
sent: ['cpu', 'performance', 'does', 'well', '.']
counter: {('cpu operation_performance', 'cpu performance', 'great', 'well'): 5}
output quads: ['[A] cpu performance [O] well [S] great [C] cpu operation_performance']
multi_path: ['[A] cpu performance [O] well [S] great [C] cpu operation_performance', '[A] cpu performance [S] great [O] well [C] cpu operation_performance', '[A] cpu performance [O] well [C] cpu operation_performance [S] great', '[O] well [A] cpu performance [S] great [C] cpu operation_performance', '[O] well [A] cpu performance [C] cpu operation_performance [S] great']

task, data: acos laptop16
target: [('graphics operation_performance', 'graphics', 'great', 'null')]
output: ['[A] null [O] null [S] great [C] display operation_performance']
sent: ['played', 'heroes', 'of', 'the', 'storm', 'with', 'graphics', 'up', 'full', 'and', 'wasn', "'", 't', 'any', 'lag', '.']
counter: {('display operation_performance', 'null', 'great', 'null'): 5}
output quads: ['[A] null [O] null [S] great [C] display operation_performance']
multi_path: ['[A] it [O] null [S] great [C] display operation_performance', '[A] it [S] great [O] null [C] display operation_performance', '[A] it [O] null [C] display operation_performance [S] great', '[O] null [A] it [S] great [C] display operation_performance', '[O] null [A] it [C] display operation_performance [S] great']

task, data: acos laptop16
target: [('software operation_performance', 'null', 'great', 'quickly')]
output: ['[A] webpages [O] quickly [S] great [C] software operation_performance']
sent: ['webpages', 'load', 'quickly', '.']
counter: {('software operation_performance', 'webpages', 'great', 'quickly'): 5}
output quads: ['[A] webpages [O] quickly [S] great [C] software operation_performance']
multi_path: ['[A] webpages [O] quickly [S] great [C] software operation_performance', '[A] webpages [S] great [O] quickly [C] software operation_performance', '[A] webpages [O] quickly [C] software operation_performance [S] great', '[O] quickly [A] webpages [S] great [C] software operation_performance', '[O] quickly [A] webpages [C] software operation_performance [S] great']

task, data: acos laptop16
target: [('cpu operation_performance', 'processor', 'ok', 'null')]
output: ['[A] processor [O] null [S] great [C] cpu general']
sent: ['but', 'i', 'guess', ',', 'it', "'", 's', 'got', 'a', 'lot', 'of', 'power', 'going', 'to', 'that', 'processor', 'so', 'you', 'can', "'", 't', 'have', 'it', 'all', '.']
counter: {('cpu general', 'processor', 'great', 'null'): 5}
output quads: ['[A] processor [O] null [S] great [C] cpu general']
multi_path: ['[A] processor [O] null [S] great [C] cpu general', '[A] processor [S] great [O] null [C] cpu general', '[A] processor [O] null [C] cpu general [S] great', '[O] null [A] processor [S] great [C] cpu general', '[O] null [A] processor [C] cpu general [S] great']

task, data: acos laptop16
target: [('laptop general', 'computer', 'great', 'good'), ('laptop general', 'laptop', 'great', 'good')]
output: ['[A] computer [O] good [S] great [C] laptop general']
sent: ['i', 'got', 'ta', 'say', 'this', 'was', 'my', 'first', 'ever', 'online', 'computer', '/', 'laptop', 'order', 'and', 'let', 'me', 'tell', 'you', 'its', 'pretty', 'good', '.']
counter: {('laptop general', 'computer', 'great', 'good'): 5}
output quads: ['[A] computer [O] good [S] great [C] laptop general']
multi_path: ['[A] computer [O] good [S] great [C] laptop general', '[A] computer [S] great [O] good [C] laptop general', '[A] computer [O] good [C] laptop general [S] great', '[O] good [A] computer [S] great [C] laptop general', '[O] good [A] computer [C] laptop general [S] great']

task, data: acos laptop16
target: [('laptop operation_performance', 'computer', 'great', 'fast')]
output: ['[A] computer [O] fast [S] great [C] laptop operation_performance', '[A] computer [O] like [S] great [C] laptop general']
sent: ['this', 'is', 'a', 'super', 'fast', 'computer', 'and', 'i', 'really', 'like', 'it', '.']
counter: {('laptop operation_performance', 'computer', 'great', 'fast'): 5, ('laptop general', 'computer', 'great', 'like'): 5}
output quads: ['[A] computer [O] fast [S] great [C] laptop operation_performance', '[A] computer [O] like [S] great [C] laptop general']
multi_path: ['[A] computer [O] fast [S] great [C] laptop operation_performance [SSEP] [A] computer [O] like [S] great [C] laptop general', '[A] computer [S] great [O] fast [C] laptop operation_performance [SSEP] [A] computer [S] great [O] like [C] laptop general', '[A] computer [O] fast [C] laptop operation_performance [S] great [SSEP] [A] computer [O] like [C] laptop general [S] great', '[O] fast [A] computer [S] great [C] laptop operation_performance [SSEP] [O] like [A] computer [S] great [C] laptop general', '[O] fast [A] computer [C] laptop operation_performance [S] great [SSEP] [O] like [A] computer [C] laptop general [S] great']

task, data: acos laptop16
target: [('laptop general', 'laptop', 'bad', 'null')]
output: ['[A] laptop [O] null [S] bad [C] laptop quality']
sent: ['i', 'purchased', 'the', 'laptop', 'in', 'august', ',', 'and', 'i', 'already', 'have', 'a', 'couple', 'of', 'keys', 'popping', 'off', '.']
counter: {('laptop quality', 'laptop', 'bad', 'null'): 5}
output quads: ['[A] laptop [O] null [S] bad [C] laptop quality']
multi_path: ['[A] laptop [O] null [S] bad [C] laptop quality', '[A] laptop [S] bad [O] null [C] laptop quality', '[A] laptop [O] null [C] laptop quality [S] bad', '[O] null [A] laptop [S] bad [C] laptop quality', '[O] null [A] laptop [C] laptop quality [S] bad']

task, data: acos laptop16
target: [('battery general', 'battery life', 'ok', 'null')]
output: ['[A] battery life [O] null [S] bad [C] battery quality']
sent: ['i', 'almost', 'always', 'keep', 'it', 'plugged', 'in', ',', 'so', 'i', 'can', "'", 't', 'comment', 'on', 'battery', 'life', '.']
counter: {('battery quality', 'battery life', 'bad', 'null'): 5}
output quads: ['[A] battery life [O] null [S] bad [C] battery quality']
multi_path: ['[A] battery life [O] null [S] bad [C] battery quality', '[A] battery life [S] bad [O] null [C] battery quality', '[A] battery life [O] null [C] battery quality [S] bad', '[O] null [A] battery life [S] bad [C] battery quality', '[O] null [A] battery life [C] battery quality [S] bad']

task, data: acos laptop16
target: [('battery operation_performance', 'battery life', 'bad', 'short')]
output: ['[A] battery life [O] short [S] bad [C] battery operation_performance', '[A] null [O] null [S] great [C] power_supply operation_performance']
sent: ['battery', 'life', 'is', 'short', ',', 'but', 'plugging', 'it', 'in', 'works', '.']
counter: {('battery operation_performance', 'battery life', 'bad', 'short'): 5, ('power_supply operation_performance', 'null', 'great', 'null'): 5}
output quads: ['[A] battery life [O] short [S] bad [C] battery operation_performance', '[A] null [O] null [S] great [C] power_supply operation_performance']
multi_path: ['[A] battery life [O] short [S] bad [C] battery operation_performance [SSEP] [A] it [O] null [S] great [C] power_supply operation_performance', '[A] battery life [S] bad [O] short [C] battery operation_performance [SSEP] [A] it [S] great [O] null [C] power_supply operation_performance', '[A] battery life [O] short [C] battery operation_performance [S] bad [SSEP] [A] it [O] null [C] power_supply operation_performance [S] great', '[O] short [A] battery life [S] bad [C] battery operation_performance [SSEP] [O] null [A] it [S] great [C] power_supply operation_performance', '[O] short [A] battery life [C] battery operation_performance [S] bad [SSEP] [O] null [A] it [C] power_supply operation_performance [S] great']

task, data: acos laptop16
target: [('battery general', 'battery', 'bad', 'terrible'), ('laptop operation_performance', 'null', 'great', 'null'), ('laptop price', 'null', 'great', 'null')]
output: ['[A] battery [O] terrible [S] bad [C] battery general', '[A] null [O] great [S] great [C] laptop operation_performance', '[A] null [O] great [S] great [C] laptop price']
sent: ['great', 'price', 'and', 'great', 'performance', 'but', 'terrible', 'battery', '.']
counter: {('laptop price', 'null', 'great', 'great'): 5, ('laptop operation_performance', 'null', 'great', 'great'): 5, ('battery general', 'battery', 'bad', 'terrible'): 5}
output quads: ['[A] null [O] great [S] great [C] laptop price', '[A] null [O] great [S] great [C] laptop operation_performance', '[A] battery [O] terrible [S] bad [C] battery general']
multi_path: ['[A] it [O] great [S] great [C] laptop price [SSEP] [A] it [O] great [S] great [C] laptop operation_performance [SSEP] [A] battery [O] terrible [S] bad [C] battery general', '[A] it [S] great [O] great [C] laptop price [SSEP] [A] it [S] great [O] great [C] laptop operation_performance [SSEP] [A] battery [S] bad [O] terrible [C] battery general', '[A] it [O] great [C] laptop price [S] great [SSEP] [A] it [O] great [C] laptop operation_performance [S] great [SSEP] [A] battery [O] terrible [C] battery general [S] bad', '[O] great [A] it [S] great [C] laptop price [SSEP] [O] great [A] it [S] great [C] laptop operation_performance [SSEP] [O] terrible [A] battery [S] bad [C] battery general', '[O] great [A] it [C] laptop price [S] great [SSEP] [O] great [A] it [C] laptop operation_performance [S] great [SSEP] [O] terrible [A] battery [C] battery general [S] bad']

task, data: acos laptop16
target: [('laptop general', 'computer', 'great', 'great'), ('laptop usability', 'setup', 'great', 'easy'), ('laptop usability', 'setup', 'great', 'fast')]
output: ['[A] computer [O] easy [S] great [C] laptop usability', '[A] computer [O] fast [S] great [C] laptop usability', '[A] computer [O] great [S] great [C] laptop general']
sent: ['great', 'computer', ',', 'setup', 'was', 'fast', 'and', 'easy', '.']
counter: {('laptop general', 'computer', 'great', 'great'): 5, ('laptop usability', 'computer', 'great', 'fast'): 5, ('laptop usability', 'computer', 'great', 'easy'): 5}
output quads: ['[A] computer [O] great [S] great [C] laptop general', '[A] computer [O] fast [S] great [C] laptop usability', '[A] computer [O] easy [S] great [C] laptop usability']
multi_path: ['[A] computer [O] great [S] great [C] laptop general [SSEP] [A] computer [O] fast [S] great [C] laptop usability [SSEP] [A] computer [O] easy [S] great [C] laptop usability', '[A] computer [S] great [O] great [C] laptop general [SSEP] [A] computer [S] great [O] fast [C] laptop usability [SSEP] [A] computer [S] great [O] easy [C] laptop usability', '[A] computer [O] great [C] laptop general [S] great [SSEP] [A] computer [O] fast [C] laptop usability [S] great [SSEP] [A] computer [O] easy [C] laptop usability [S] great', '[O] great [A] computer [S] great [C] laptop general [SSEP] [O] fast [A] computer [S] great [C] laptop usability [SSEP] [O] easy [A] computer [S] great [C] laptop usability', '[O] great [A] computer [C] laptop general [S] great [SSEP] [O] fast [A] computer [C] laptop usability [S] great [SSEP] [O] easy [A] computer [C] laptop usability [S] great']

task, data: acos laptop16
target: [('laptop design_features', 'laptop', 'great', 'nice')]
output: ['[A] laptop [O] inlove [S] great [C] laptop general', '[A] laptop [O] nice [S] great [C] laptop design_features']
sent: ['i', 'am', 'inlove', 'with', 'this', 'laptop', 'literally', ',', 'it', "'", 's', 'nice', 'size', '15', '.']
counter: {('laptop general', 'laptop', 'great', 'inlove'): 5, ('laptop design_features', 'laptop', 'great', 'nice'): 5}
output quads: ['[A] laptop [O] inlove [S] great [C] laptop general', '[A] laptop [O] nice [S] great [C] laptop design_features']
multi_path: ['[A] laptop [O] inlove [S] great [C] laptop general [SSEP] [A] laptop [O] nice [S] great [C] laptop design_features', '[A] laptop [S] great [O] inlove [C] laptop general [SSEP] [A] laptop [S] great [O] nice [C] laptop design_features', '[A] laptop [O] inlove [C] laptop general [S] great [SSEP] [A] laptop [O] nice [C] laptop design_features [S] great', '[O] inlove [A] laptop [S] great [C] laptop general [SSEP] [O] nice [A] laptop [S] great [C] laptop design_features', '[O] inlove [A] laptop [C] laptop general [S] great [SSEP] [O] nice [A] laptop [C] laptop design_features [S] great']

task, data: acos laptop16
target: [('graphics general', 'graphics', 'great', 'good')]
output: ['[A] graphics [O] good [S] great [C] graphics operation_performance']
sent: ['graphics', 'are', 'good', 'for', 'the', 'level', 'of', 'this', 'laptop', '.']
counter: {('graphics operation_performance', 'graphics', 'great', 'good'): 5}
output quads: ['[A] graphics [O] good [S] great [C] graphics operation_performance']
multi_path: ['[A] graphics [O] good [S] great [C] graphics operation_performance', '[A] graphics [S] great [O] good [C] graphics operation_performance', '[A] graphics [O] good [C] graphics operation_performance [S] great', '[O] good [A] graphics [S] great [C] graphics operation_performance', '[O] good [A] graphics [C] graphics operation_performance [S] great']

task, data: acos laptop16
target: [('warranty general', 'warranty', 'bad', 'null')]
output: ['[A] warranty [O] null [S] great [C] warranty general']
sent: ['finally', 'got', 'the', 'warranty', 'honored', 'after', 'almost', '6', 'months', '.']
counter: {('warranty general', 'warranty', 'great', 'null'): 5}
output quads: ['[A] warranty [O] null [S] great [C] warranty general']
multi_path: ['[A] warranty [O] null [S] great [C] warranty general', '[A] warranty [S] great [O] null [C] warranty general', '[A] warranty [O] null [C] warranty general [S] great', '[O] null [A] warranty [S] great [C] warranty general', '[O] null [A] warranty [C] warranty general [S] great']

task, data: acos laptop16
target: [('display quality', 'touch screen', 'bad', 'null')]
output: ['[A] touch screen [O] null [S] bad [C] display operation_performance']
sent: ['plenty', 'of', 'buyer', 'returned', 'it', 'since', 'the', 'touch', 'screen', 'has', 'phantom', 'touch', 'problems', 'right', 'after', 'unboxing', 'or', 'it', 'will', 'eventually', 'happen', 'within', '3', 'months', '.']
counter: {('display operation_performance', 'touch screen', 'bad', 'null'): 5}
output quads: ['[A] touch screen [O] null [S] bad [C] display operation_performance']
multi_path: ['[A] touch screen [O] null [S] bad [C] display operation_performance', '[A] touch screen [S] bad [O] null [C] display operation_performance', '[A] touch screen [O] null [C] display operation_performance [S] bad', '[O] null [A] touch screen [S] bad [C] display operation_performance', '[O] null [A] touch screen [C] display operation_performance [S] bad']

task, data: acos laptop16
target: [('keyboard general', 'phantom touches', 'bad', 'null'), ('laptop general', 'chromebook', 'great', 'great')]
output: ['[A] chromebook [O] unusable [S] bad [C] laptop operation_performance']
sent: ['consequently', ',', 'i', 'am', 'no', 'longer', 'covered', 'and', 'my', 'otherwise', 'great', 'chromebook', 'becomes', 'unusable', 'anytime', 'the', 'phantom', 'touches', 'appear', '.']
counter: {('laptop operation_performance', 'chromebook', 'bad', 'unusable'): 5}
output quads: ['[A] chromebook [O] unusable [S] bad [C] laptop operation_performance']
multi_path: ['[A] chromebook [O] unusable [S] bad [C] laptop operation_performance', '[A] chromebook [S] bad [O] unusable [C] laptop operation_performance', '[A] chromebook [O] unusable [C] laptop operation_performance [S] bad', '[O] unusable [A] chromebook [S] bad [C] laptop operation_performance', '[O] unusable [A] chromebook [C] laptop operation_performance [S] bad']

task, data: acos laptop16
target: [('display operation_performance', 'pixel', 'bad', 'null')]
output: ['[A] null [O] null [S] bad [C] laptop operation_performance']
sent: ['i', 'have', 'tried', 'to', 'fix', 'the', 'pixel', 'with', 'online', 'videos', 'and', 'websites', 'with', 'no', 'effect', '.']
counter: {('laptop operation_performance', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [O] null [S] bad [C] laptop operation_performance']
multi_path: ['[A] it [O] null [S] bad [C] laptop operation_performance', '[A] it [S] bad [O] null [C] laptop operation_performance', '[A] it [O] null [C] laptop operation_performance [S] bad', '[O] null [A] it [S] bad [C] laptop operation_performance', '[O] null [A] it [C] laptop operation_performance [S] bad']

task, data: acos laptop16
target: [('display design_features', 'null', 'ok', 'null')]
output: ['[A] chromebooks [O] prefer [S] great [C] laptop design_features']
sent: ['after', 'using', 'the', '3', ':', '2', 'aspect', 'ratio', ',', 'i', 'think', 'i', 'prefer', 'it', 'to', 'normal', '16', ':', '9', ',', 'as', 'far', 'as', 'chromebooks', 'go', '.']
counter: {('laptop design_features', 'chromebooks', 'great', 'prefer'): 5}
output quads: ['[A] chromebooks [O] prefer [S] great [C] laptop design_features']
multi_path: ['[A] chromebooks [O] prefer [S] great [C] laptop design_features', '[A] chromebooks [S] great [O] prefer [C] laptop design_features', '[A] chromebooks [O] prefer [C] laptop design_features [S] great', '[O] prefer [A] chromebooks [S] great [C] laptop design_features', '[O] prefer [A] chromebooks [C] laptop design_features [S] great']

task, data: acos laptop16
target: [('laptop operation_performance', 'null', 'bad', 'null'), ('laptop operation_performance', 'null', 'great', 'fine'), ('laptop operation_performance', 'null', 'great', 'solid')]
output: ['[A] null [O] fine [S] great [C] laptop operation_performance', '[A] null [O] solid [S] great [C] laptop operation_performance']
sent: ['it', 'was', 'fine', 'for', 'a', 'solid', 'two', 'days', ',', 'from', 'there', 'on', 'it', 'has', 'been', 'nonstop', ',', 'reset', 'to', 'factory', 'settings', '.']
counter: {('laptop operation_performance', 'null', 'great', 'fine'): 5, ('laptop operation_performance', 'null', 'great', 'solid'): 5}
output quads: ['[A] null [O] fine [S] great [C] laptop operation_performance', '[A] null [O] solid [S] great [C] laptop operation_performance']
multi_path: ['[A] it [O] fine [S] great [C] laptop operation_performance [SSEP] [A] it [O] solid [S] great [C] laptop operation_performance', '[A] it [S] great [O] fine [C] laptop operation_performance [SSEP] [A] it [S] great [O] solid [C] laptop operation_performance', '[A] it [O] fine [C] laptop operation_performance [S] great [SSEP] [A] it [O] solid [C] laptop operation_performance [S] great', '[O] fine [A] it [S] great [C] laptop operation_performance [SSEP] [O] solid [A] it [S] great [C] laptop operation_performance', '[O] fine [A] it [C] laptop operation_performance [S] great [SSEP] [O] solid [A] it [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('hardware quality', 'hardware', 'bad', 'annoying')]
output: ['[A] hardware [O] annoying [S] bad [C] hardware general']
sent: ['idk', 'if', 'that', "'", 's', 'how', 'chromeos', 'usually', 'is', ',', 'or', 'maybe', 'there', 'is', 'something', 'wrong', 'with', 'the', 'hardware', 'but', 'this', 'is', 'very', 'annoying', '.']
counter: {('hardware general', 'hardware', 'bad', 'annoying'): 5}
output quads: ['[A] hardware [O] annoying [S] bad [C] hardware general']
multi_path: ['[A] hardware [O] annoying [S] bad [C] hardware general', '[A] hardware [S] bad [O] annoying [C] hardware general', '[A] hardware [O] annoying [C] hardware general [S] bad', '[O] annoying [A] hardware [S] bad [C] hardware general', '[O] annoying [A] hardware [C] hardware general [S] bad']

task, data: acos laptop16
target: [('os design_features', 'null', 'bad', 'null')]
output: ['[A] null [O] useless [S] bad [C] laptop operation_performance']
sent: ['i', 'get', 'that', 'this', 'is', 'meant', 'to', 'store', 'everything', 'in', 'the', 'cloud', 'so', 'it', 'should', 'be', 'no', 'big', 'deal', ',', 'but', 'when', 'your', 'trying', 'to', 'get', 'work', 'done', 'where', 'there', 'is', 'no', 'access', 'to', 'the', 'internet', '(', 'since', 'google', 'docs', 'works', 'offline', ')', 'it', 'is', 'practically', 'useless', 'when', 'it', 'has', 'to', 'reset', 'itself', 'to', 'factory', 'settings', 'just', 'after', 'turning', 'it', 'on', '.']
counter: {('laptop operation_performance', 'null', 'bad', 'useless'): 5}
output quads: ['[A] null [O] useless [S] bad [C] laptop operation_performance']
multi_path: ['[A] it [O] useless [S] bad [C] laptop operation_performance', '[A] it [S] bad [O] useless [C] laptop operation_performance', '[A] it [O] useless [C] laptop operation_performance [S] bad', '[O] useless [A] it [S] bad [C] laptop operation_performance', '[O] useless [A] it [C] laptop operation_performance [S] bad']

task, data: acos laptop16
target: [('display quality', 'screen', 'bad', 'not very durable')]
output: ['[A] screen [O] irk [S] bad [C] display quality', '[A] screen [O] not very durable [S] bad [C] display quality']
sent: ['my', 'biggest', 'irk', 'today', 'though', 'is', 'that', 'the', 'screen', 'is', 'not', 'very', 'durable', '.']
counter: {('display quality', 'screen', 'bad', 'irk'): 5, ('display quality', 'screen', 'bad', 'not very durable'): 5}
output quads: ['[A] screen [O] irk [S] bad [C] display quality', '[A] screen [O] not very durable [S] bad [C] display quality']
multi_path: ['[A] screen [O] irk [S] bad [C] display quality [SSEP] [A] screen [O] not very durable [S] bad [C] display quality', '[A] screen [S] bad [O] irk [C] display quality [SSEP] [A] screen [S] bad [O] not very durable [C] display quality', '[A] screen [O] irk [C] display quality [S] bad [SSEP] [A] screen [O] not very durable [C] display quality [S] bad', '[O] irk [A] screen [S] bad [C] display quality [SSEP] [O] not very durable [A] screen [S] bad [C] display quality', '[O] irk [A] screen [C] display quality [S] bad [SSEP] [O] not very durable [A] screen [C] display quality [S] bad']

task, data: acos laptop16
target: [('laptop usability', 'null', 'bad', 'hard')]
output: ['[A] null [O] null [S] bad [C] laptop operation_performance']
sent: ['hard', 'reboot', ',', 'reset', ',', 'refresh', '+', 'power', ',', 'esc', '+', 'refresh', '+', 'power', ',', 'charging', ',', 'letting', 'it', 'drain', ',', 'nothing', 'brought', 'it', 'back', 'to', 'life', '.']
counter: {('laptop operation_performance', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [O] null [S] bad [C] laptop operation_performance']
multi_path: ['[A] it [O] null [S] bad [C] laptop operation_performance', '[A] it [S] bad [O] null [C] laptop operation_performance', '[A] it [O] null [C] laptop operation_performance [S] bad', '[O] null [A] it [S] bad [C] laptop operation_performance', '[O] null [A] it [C] laptop operation_performance [S] bad']

task, data: acos laptop16
target: [('laptop price', 'device', 'bad', 'expensive')]
output: ['[A] device [O] bad taste [S] bad [C] laptop quality']
sent: ['needless', 'to', 'say', 'trip', 'number', 'three', 'to', 'best', 'buy', 'was', 'a', 'pure', 'return', ',', 'since', 'being', '0', '/', '2', 'on', 'such', 'an', 'expensive', 'device', 'leaves', 'a', 'bad', 'taste', ',', 'you', 'know', '?']
counter: {('laptop quality', 'device', 'bad', 'bad taste'): 5}
output quads: ['[A] device [O] bad taste [S] bad [C] laptop quality']
multi_path: ['[A] device [O] bad taste [S] bad [C] laptop quality', '[A] device [S] bad [O] bad taste [C] laptop quality', '[A] device [O] bad taste [C] laptop quality [S] bad', '[O] bad taste [A] device [S] bad [C] laptop quality', '[O] bad taste [A] device [C] laptop quality [S] bad']

task, data: acos laptop16
target: [('display design_features', 'screen', 'great', 'gorgeous'), ('hardware design_features', 'stylus', 'great', 'awesome'), ('laptop design_features', 'profile', 'great', 'lightweight'), ('laptop design_features', 'profile', 'great', 'small')]
output: ['[A] null [O] awesome [S] great [C] laptop general', '[A] null [O] lightweight [S] great [C] laptop design_features', '[A] profile [O] small [S] great [C] laptop design_features', '[A] screen [O] gorgeous [S] great [C] display general', '[A] stylus [O] built in [S] great [C] hardware general']
sent: ['gorgeous', 'screen', ',', 'small', 'profile', ',', 'lightweight', ',', 'built', 'in', 'stylus', ',', 'i', 'could', 'go', 'on', 'and', 'on', 'about', 'how', 'awesome', 'this', 'thing', 'was', '.']
counter: {('display general', 'screen', 'great', 'gorgeous'): 5, ('laptop design_features', 'profile', 'great', 'small'): 5, ('laptop design_features', 'null', 'great', 'lightweight'): 5, ('hardware general', 'stylus', 'great', 'built in'): 5, ('laptop general', 'null', 'great', 'awesome'): 5}
output quads: ['[A] screen [O] gorgeous [S] great [C] display general', '[A] profile [O] small [S] great [C] laptop design_features', '[A] null [O] lightweight [S] great [C] laptop design_features', '[A] stylus [O] built in [S] great [C] hardware general', '[A] null [O] awesome [S] great [C] laptop general']
multi_path: ['[A] screen [O] gorgeous [S] great [C] display general [SSEP] [A] profile [O] small [S] great [C] laptop design_features [SSEP] [A] it [O] lightweight [S] great [C] laptop design_features [SSEP] [A] stylus [O] built in [S] great [C] hardware general [SSEP] [A] it [O] awesome [S] great [C] laptop general', '[A] screen [S] great [O] gorgeous [C] display general [SSEP] [A] profile [S] great [O] small [C] laptop design_features [SSEP] [A] it [S] great [O] lightweight [C] laptop design_features [SSEP] [A] stylus [S] great [O] built in [C] hardware general [SSEP] [A] it [S] great [O] awesome [C] laptop general', '[A] screen [O] gorgeous [C] display general [S] great [SSEP] [A] profile [O] small [C] laptop design_features [S] great [SSEP] [A] it [O] lightweight [C] laptop design_features [S] great [SSEP] [A] stylus [O] built in [C] hardware general [S] great [SSEP] [A] it [O] awesome [C] laptop general [S] great', '[O] gorgeous [A] screen [S] great [C] display general [SSEP] [O] small [A] profile [S] great [C] laptop design_features [SSEP] [O] lightweight [A] it [S] great [C] laptop design_features [SSEP] [O] built in [A] stylus [S] great [C] hardware general [SSEP] [O] awesome [A] it [S] great [C] laptop general', '[O] gorgeous [A] screen [C] display general [S] great [SSEP] [O] small [A] profile [C] laptop design_features [S] great [SSEP] [O] lightweight [A] it [C] laptop design_features [S] great [SSEP] [O] built in [A] stylus [C] hardware general [S] great [SSEP] [O] awesome [A] it [C] laptop general [S] great']

task, data: acos laptop16
target: [('support general', 'verified purchase', 'ok', 'null')]
output: ['[A] null [O] null [S] ok [C] shipping general']
sent: ['this', 'review', 'might', 'be', 'dismissed', 'as', 'i', 'am', 'missing', 'the', '`', '`', 'verified', 'purchase', '`', '`', 'stamp', ',', 'which', 'is', 'fair', '.']
counter: {('shipping general', 'null', 'ok', 'null'): 3, ('laptop design_features', 'null', 'ok', 'null'): 2}
output quads: ['[A] null [O] null [S] ok [C] shipping general']
multi_path: ['[A] it [O] null [S] ok [C] shipping general', '[A] it [S] ok [O] null [C] laptop design_features', '[A] it [O] null [C] shipping general [S] ok', '[O] null [A] it [S] ok [C] laptop design_features', '[O] null [A] it [C] shipping general [S] ok']

task, data: acos laptop16
target: [('laptop operation_performance', 'null', 'bad', 'recommend')]
output: ['[A] computer [O] t recommend [S] bad [C] laptop usability']
sent: ['i', 'wouldn', "'", 't', 'recommend', 'this', 'as', 'a', 'starting', 'computer', 'for', 'children', 'because', 'they', "'", 'd', 'learn', 'incorrect', 'navigation', 'and', 'have', 'to', 'adapt', 'later', 'to', 'standard', 'laptops', '.']
counter: {('laptop usability', 'computer', 'bad', 't recommend'): 5}
output quads: ['[A] computer [O] t recommend [S] bad [C] laptop usability']
multi_path: ["[A] computer [O]'t recommend [S] bad [C] laptop usability", "[A] computer [S] bad [O]'t recommend [C] laptop usability", "[A] computer [O]'t recommend [C] laptop usability [S] bad", "[O]'t recommend [A] computer [S] bad [C] laptop usability", "[O]'t recommend [A] computer [C] laptop usability [S] bad"]

task, data: acos laptop16
target: [('display general', 'screen', 'great', 'good')]
output: ['[A] screen [O] good [S] great [C] display design_features']
sent: ['the', 'screen', 'does', 'look', 'good', '.']
counter: {('display design_features', 'screen', 'great', 'good'): 5}
output quads: ['[A] screen [O] good [S] great [C] display design_features']
multi_path: ['[A] screen [O] good [S] great [C] display design_features', '[A] screen [S] great [O] good [C] display design_features', '[A] screen [O] good [C] display design_features [S] great', '[O] good [A] screen [S] great [C] display design_features', '[O] good [A] screen [C] display design_features [S] great']

task, data: acos laptop16
target: [('laptop quality', 'null', 'bad', 'terrible'), ('software general', 'apps', 'bad', 'not really enjoyable')]
output: ['[A] apps [O] not really enjoyable [S] bad [C] software usability', '[A] null [O] terrible [S] bad [C] laptop quality']
sent: ['terrible', 'quality', 'and', 'not', 'really', 'enjoyable', 'to', 'use', 'apps', 'on', 'the', 'playstore', '.']
counter: {('laptop quality', 'null', 'bad', 'terrible'): 5, ('software usability', 'apps', 'bad', 'not really enjoyable'): 5}
output quads: ['[A] null [O] terrible [S] bad [C] laptop quality', '[A] apps [O] not really enjoyable [S] bad [C] software usability']
multi_path: ['[A] it [O] terrible [S] bad [C] laptop quality [SSEP] [A] apps [O] not really enjoyable [S] bad [C] software usability', '[A] it [S] bad [O] terrible [C] laptop quality [SSEP] [A] apps [S] bad [O] not really enjoyable [C] software usability', '[A] it [O] terrible [C] laptop quality [S] bad [SSEP] [A] apps [O] not really enjoyable [C] software usability [S] bad', '[O] terrible [A] it [S] bad [C] laptop quality [SSEP] [O] not really enjoyable [A] apps [S] bad [C] software usability', '[O] terrible [A] it [C] laptop quality [S] bad [SSEP] [O] not really enjoyable [A] apps [C] software usability [S] bad']

task, data: acos laptop16
target: [('keyboard general', 'null', 'bad', 'null')]
output: ['[A] null [O] easy [S] bad [C] laptop operation_performance']
sent: ['then', 'i', 'got', 'it', 'home', ',', 'worked', 'with', 'it', 'for', 'awhile', ',', 'and', 'realized', 'just', 'how', 'easy', 'it', 'is', 'to', 'misfire', 'unless', 'you', 'land', 'dead', 'nuts', 'center', 'in', 'the', 'middle', 'of', 'the', 'key', 'on', 'your', 'stroke', '.']
counter: {('laptop operation_performance', 'null', 'bad', 'easy'): 5}
output quads: ['[A] null [O] easy [S] bad [C] laptop operation_performance']
multi_path: ['[A] it [O] easy [S] bad [C] laptop operation_performance', '[A] it [S] bad [O] easy [C] laptop operation_performance', '[A] it [O] easy [C] laptop operation_performance [S] bad', '[O] easy [A] it [S] bad [C] laptop operation_performance', '[O] easy [A] it [C] laptop operation_performance [S] bad']

task, data: acos laptop16
target: [('software quality', 'android app support', 'bad', 'null')]
output: ['[A] android app support [O] null [S] bad [C] support general']
sent: ['another', 'star', 'off', 'for', 'android', 'app', 'support', ',', 'which', 'simply', 'isn', "'", 't', 'ready', 'for', 'prime', 'time', '.']
counter: {('support general', 'android app support', 'bad', 'null'): 5}
output quads: ['[A] android app support [O] null [S] bad [C] support general']
multi_path: ['[A] android app support [O] null [S] bad [C] support general', '[A] android app support [S] bad [O] null [C] support general', '[A] android app support [O] null [C] support general [S] bad', '[O] null [A] android app support [S] bad [C] support general', '[O] null [A] android app support [C] support general [S] bad']

task, data: acos laptop16
target: [('software design_features', 'android app', 'bad', 'disappointed')]
output: ['[A] android app [O] disappointed [S] bad [C] software general']
sent: ['i', 'didn', "'", 't', 'find', 'a', 'single', 'android', 'app', 'that', 'was', 'optimized', 'for', 'chrome', 'os', '(', 'not', 'that', 'my', 'search', 'was', 'exhaustive', ',', 'admittedly', ')', ',', 'so', 'was', 'disappointed', 'pretty', 'much', 'every', 'time', '.']
counter: {('software general', 'android app', 'bad', 'disappointed'): 5}
output quads: ['[A] android app [O] disappointed [S] bad [C] software general']
multi_path: ['[A] android app [O] disappointed [S] bad [C] software general', '[A] android app [S] bad [O] disappointed [C] software general', '[A] android app [O] disappointed [C] software general [S] bad', '[O] disappointed [A] android app [S] bad [C] software general', '[O] disappointed [A] android app [C] software general [S] bad']

task, data: acos laptop16
target: [('company general', 'samsung', 'bad', 'null'), ('laptop general', 'chromeos', 'bad', 'null')]
output: ['[A] chromeos + samsung [O] bad [S] bad [C] os general']
sent: ['unless', 'it', "'", 's', 'a', 'really', 'bad', 'baby', 'and', 'chromeos', '+', 'samsung', '=', 'bad', 'baby', '!']
counter: {('os general', 'chromeos + samsung', 'bad', 'bad'): 10}
output quads: ['[A] chromeos + samsung [O] bad [S] bad [C] os general']
multi_path: ['[A] chromeos + samsung [O] bad [S] bad [C] os general [SSEP] [A] chromeos + samsung [O] bad [S] bad [C] os general', '[A] chromeos + samsung [S] bad [O] bad [C] os general [SSEP] [A] chromeos + samsung [S] bad [O] bad [C] os general', '[A] chromeos + samsung [O] bad [C] os general [S] bad [SSEP] [A] chromeos + samsung [O] bad [C] os general [S] bad', '[O] bad [A] chromeos + samsung [S] bad [C] os general [SSEP] [O] bad [A] chromeos + samsung [S] bad [C] os general', '[O] bad [A] chromeos + samsung [C] os general [S] bad [SSEP] [O] bad [A] chromeos + samsung [C] os general [S] bad']

task, data: acos laptop16
target: [('laptop design_features', 'computer', 'bad', 'null')]
output: ['[A] computer [O] nice [S] great [C] laptop general', '[A] computer [O] null [S] bad [C] laptop operation_performance']
sent: ['sounds', 'nice', 'until', 'you', 'realize', 'that', 'your', 'computer', 'just', 'doesn', "'", 't', 'let', 'you', 'do', 'things', 'and', 'then', 'calls', 'it', 'secure', '.']
counter: {('laptop general', 'computer', 'great', 'nice'): 5, ('laptop operation_performance', 'computer', 'bad', 'null'): 5}
output quads: ['[A] computer [O] nice [S] great [C] laptop general', '[A] computer [O] null [S] bad [C] laptop operation_performance']
multi_path: ['[A] computer [O] nice [S] great [C] laptop general [SSEP] [A] computer [O] null [S] bad [C] laptop operation_performance', '[A] computer [S] great [O] nice [C] laptop general [SSEP] [A] computer [S] bad [O] null [C] laptop operation_performance', '[A] computer [O] nice [C] laptop general [S] great [SSEP] [A] computer [O] null [C] laptop operation_performance [S] bad', '[O] nice [A] computer [S] great [C] laptop general [SSEP] [O] null [A] computer [S] bad [C] laptop operation_performance', '[O] nice [A] computer [C] laptop general [S] great [SSEP] [O] null [A] computer [C] laptop operation_performance [S] bad']

task, data: acos laptop16
target: [('keyboard usability', 'keyboard', 'bad', 'inconvenient')]
output: ['[A] keyboard [O] inconvenient [S] bad [C] keyboard design_features']
sent: ['the', 'keyboard', 'lacks', 'a', 'backlight', 'which', 'is', 'inconvenient', 'in', 'low', 'light', 'situations', '.']
counter: {('keyboard design_features', 'keyboard', 'bad', 'inconvenient'): 5}
output quads: ['[A] keyboard [O] inconvenient [S] bad [C] keyboard design_features']
multi_path: ['[A] keyboard [O] inconvenient [S] bad [C] keyboard design_features', '[A] keyboard [S] bad [O] inconvenient [C] keyboard design_features', '[A] keyboard [O] inconvenient [C] keyboard design_features [S] bad', '[O] inconvenient [A] keyboard [S] bad [C] keyboard design_features', '[O] inconvenient [A] keyboard [C] keyboard design_features [S] bad']

task, data: acos laptop16
target: [('laptop price', 'null', 'great', 'null')]
output: ['[A] computer [O] null [S] bad [C] laptop price']
sent: ['which', 'leads', 'me', 'to', 'my', 'next', 'point', ',', 'the', 'omnipresent', 'comments', 'about', '`', '`', 'this', 'feels', 'like', 'a', '$', '1000', 'computer', '!', '`', '`']
counter: {('laptop price', 'computer', 'bad', 'null'): 5}
output quads: ['[A] computer [O] null [S] bad [C] laptop price']
multi_path: ['[A] computer [O] null [S] bad [C] laptop price', '[A] computer [S] bad [O] null [C] laptop price', '[A] computer [O] null [C] laptop price [S] bad', '[O] null [A] computer [S] bad [C] laptop price', '[O] null [A] computer [C] laptop price [S] bad']

task, data: acos laptop16
target: [('company general', 'acer', 'great', 'null')]
output: ['[A] acer [O] t say the acer [S] ok [C] laptop general']
sent: ['this', 'isn', "'", 't', 'say', 'the', 'acer', 'is', 'bad', 'in', 'the', 'abstract', ';', 'far', 'from', 'it', '.']
counter: {('laptop general', 'acer', 'ok', 't say the acer'): 5}
output quads: ['[A] acer [O] t say the acer [S] ok [C] laptop general']
multi_path: ["[A] acer [O]'t say the acer [S] ok [C] laptop general", "[A] acer [S] ok [O]'t say the acer [C] laptop general", "[A] acer [O]'t say the acer [C] laptop general [S] ok", "[O]'t say the acer [A] acer [S] ok [C] laptop general", "[O]'t say the acer [A] acer [C] laptop general [S] ok"]

task, data: acos laptop16
target: [('battery operation_performance', 'battery life', 'great', 'null')]
output: ['[A] battery life [O] null [S] great [C] battery operation_performance', '[A] performance [O] null [S] great [C] laptop operation_performance']
sent: ['the', 'performance', 'never', 'lags', ',', 'it', 'meets', 'the', '10', '-', '12', 'hour', 'battery', 'life', 'promise', 'in', 'my', 'usage', 'tests', ',', 'and', 'it', "'", 's', 'quickly', 'become', 'my', 'go', '-', 'to', 'computer', 'for', 'both', 'home', 'and', 'work', '.']
counter: {('laptop operation_performance', 'performance', 'great', 'null'): 5, ('battery operation_performance', 'battery life', 'great', 'null'): 5}
output quads: ['[A] performance [O] null [S] great [C] laptop operation_performance', '[A] battery life [O] null [S] great [C] battery operation_performance']
multi_path: ['[A] performance [O] null [S] great [C] laptop operation_performance [SSEP] [A] battery life [O] null [S] great [C] battery operation_performance', '[A] performance [S] great [O] null [C] laptop operation_performance [SSEP] [A] battery life [S] great [O] null [C] battery operation_performance', '[A] performance [O] null [C] laptop operation_performance [S] great [SSEP] [A] battery life [O] null [C] battery operation_performance [S] great', '[O] null [A] performance [S] great [C] laptop operation_performance [SSEP] [O] null [A] battery life [S] great [C] battery operation_performance', '[O] null [A] performance [C] laptop operation_performance [S] great [SSEP] [O] null [A] battery life [C] battery operation_performance [S] great']

task, data: acos laptop16
target: [('laptop design_features', 'aluminum shell', 'great', 'attractive'), ('laptop design_features', 'aluminum shell', 'great', 'nice'), ('laptop design_features', 'keyboard', 'great', 'better'), ('laptop design_features', 'keyboard', 'great', 'decent')]
output: ['[A] aluminum shell [O] attractive [S] great [C] laptop design_features', '[A] aluminum shell [O] nice [S] great [C] laptop design_features', '[A] keyboard [O] better [S] great [C] keyboard operation_performance', '[A] keyboard [O] decent [S] great [C] keyboard design_features']
sent: ['this', 'unit', 'not', 'only', 'has', 'a', 'nice', 'aluminum', 'shell', '(', 'which', 'is', 'very', 'attractive', ')', ',', 'but', 'it', 'also', 'has', 'a', 'decent', 'keyboard', ',', 'with', 'much', 'better', 'tactile', 'properties', 'than', 'any', 'chromebooks', 'i', "'", 've', 'looked', 'at', 'in', 'the', 'past', '.']
counter: {('laptop design_features', 'aluminum shell', 'great', 'nice'): 5, ('laptop design_features', 'aluminum shell', 'great', 'attractive'): 5, ('keyboard design_features', 'keyboard', 'great', 'decent'): 5, ('keyboard operation_performance', 'keyboard', 'great', 'better'): 5}
output quads: ['[A] aluminum shell [O] nice [S] great [C] laptop design_features', '[A] aluminum shell [O] attractive [S] great [C] laptop design_features', '[A] keyboard [O] decent [S] great [C] keyboard design_features', '[A] keyboard [O] better [S] great [C] keyboard operation_performance']
multi_path: ['[A] aluminum shell [O] nice [S] great [C] laptop design_features [SSEP] [A] aluminum shell [O] attractive [S] great [C] laptop design_features [SSEP] [A] keyboard [O] decent [S] great [C] keyboard design_features [SSEP] [A] keyboard [O] better [S] great [C] keyboard operation_performance', '[A] aluminum shell [S] great [O] nice [C] laptop design_features [SSEP] [A] aluminum shell [S] great [O] attractive [C] laptop design_features [SSEP] [A] keyboard [S] great [O] decent [C] keyboard design_features [SSEP] [A] keyboard [S] great [O] better [C] keyboard operation_performance', '[A] aluminum shell [O] nice [C] laptop design_features [S] great [SSEP] [A] aluminum shell [O] attractive [C] laptop design_features [S] great [SSEP] [A] keyboard [O] decent [C] keyboard design_features [S] great [SSEP] [A] keyboard [O] better [C] keyboard operation_performance [S] great', '[O] nice [A] aluminum shell [S] great [C] laptop design_features [SSEP] [O] attractive [A] aluminum shell [S] great [C] laptop design_features [SSEP] [O] decent [A] keyboard [S] great [C] keyboard design_features [SSEP] [O] better [A] keyboard [S] great [C] keyboard operation_performance', '[O] nice [A] aluminum shell [C] laptop design_features [S] great [SSEP] [O] attractive [A] aluminum shell [C] laptop design_features [S] great [SSEP] [O] decent [A] keyboard [C] keyboard design_features [S] great [SSEP] [O] better [A] keyboard [C] keyboard operation_performance [S] great']

task, data: acos laptop16
target: [('laptop operation_performance', 'null', 'great', 'good')]
output: ['[A] laptop [O] unbelievably good [S] great [C] laptop operation_performance']
sent: ['this', 'isn', "'", 't', 'a', 'powerhouse', ',', 'i', "'", 've', 'never', 'pushed', 'it', ',', 'it', 'probably', 'wouldn', "'", 't', 'handle', 'the', '20', '+', 'tabs', 'over', 'multiple', 'windows', '/', 'desktops', 'that', 'i', "'", 'm', 'used', 'to', 'on', 'chrome', 'on', 'the', 'desktop', ',', 'but', 'for', '99', '%', 'of', '`', '`', 'regular', 'people', '`', '`', 'this', 'is', 'an', 'unbelievably', 'good', 'laptop', '.']
counter: {('laptop operation_performance', 'laptop', 'great', 'unbelievably good'): 5}
output quads: ['[A] laptop [O] unbelievably good [S] great [C] laptop operation_performance']
multi_path: ['[A] laptop [O] unbelievably good [S] great [C] laptop operation_performance', '[A] laptop [S] great [O] unbelievably good [C] laptop operation_performance', '[A] laptop [O] unbelievably good [C] laptop operation_performance [S] great', '[O] unbelievably good [A] laptop [S] great [C] laptop operation_performance', '[O] unbelievably good [A] laptop [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('battery operation_performance', 'battery life', 'great', 'incredible')]
output: ['[A] battery life [O] incredible [S] great [C] battery operation_performance', '[A] battery life [O] null [S] great [C] power_supply operation_performance']
sent: ['the', 'battery', 'life', 'is', 'incredible', 'and', 'charges', 'from', '0', '%', 'to', '100', '%', 'in', 'about', 'an', 'hour', 'and', 'a', 'half', 'while', 'in', 'use', '.']
counter: {('power_supply operation_performance', 'battery life', 'great', 'null'): 5, ('battery operation_performance', 'battery life', 'great', 'incredible'): 5}
output quads: ['[A] battery life [O] null [S] great [C] power_supply operation_performance', '[A] battery life [O] incredible [S] great [C] battery operation_performance']
multi_path: ['[A] battery life [O] null [S] great [C] power_supply operation_performance [SSEP] [A] battery life [O] incredible [S] great [C] battery operation_performance', '[A] battery life [S] great [O] null [C] power_supply operation_performance [SSEP] [A] battery life [S] great [O] incredible [C] battery operation_performance', '[A] battery life [O] null [C] power_supply operation_performance [S] great [SSEP] [A] battery life [O] incredible [C] battery operation_performance [S] great', '[O] null [A] battery life [S] great [C] power_supply operation_performance [SSEP] [O] incredible [A] battery life [S] great [C] battery operation_performance', '[O] null [A] battery life [C] power_supply operation_performance [S] great [SSEP] [O] incredible [A] battery life [C] battery operation_performance [S] great']

task, data: acos laptop16
target: [('laptop price', 'null', 'great', 'great')]
output: ['[A] chromebook [O] less laggy [S] great [C] laptop operation_performance', '[A] chromebook [O] null [S] great [C] laptop operation_performance', '[A] null [O] great [S] great [C] laptop price', '[A] null [O] quick [S] great [C] laptop operation_performance']
sent: ['my', 'only', 'wish', 'is', 'that', 'it', 'were', 'a', 'little', 'more', 'quick', '/', 'less', 'laggy', 'given', 'it', 'is', 'a', 'chromebook', '-', 'but', 'for', 'the', 'price', 'point', 'its', 'a', 'great', 'buy', '.']
counter: {('laptop general', 'chromebook', 'great', 'null'): 2, ('laptop operation_performance', 'null', 'great', 'quick'): 3, ('laptop operation_performance', 'chromebook', 'great', 'less laggy'): 3, ('laptop price', 'null', 'great', 'great'): 5, ('laptop operation_performance', 'chromebook', 'great', 'null'): 3, ('laptop operation_performance', 'chromebook', 'great', 'quick'): 2, ('laptop operation_performance', 'chromebook', 'great', 'laggy'): 2}
output quads: ['[A] null [O] quick [S] great [C] laptop operation_performance', '[A] chromebook [O] less laggy [S] great [C] laptop operation_performance', '[A] null [O] great [S] great [C] laptop price', '[A] chromebook [O] null [S] great [C] laptop operation_performance']
multi_path: ['[A] chromebook [O] null [S] great [C] laptop general [SSEP] [A] it [O] quick [S] great [C] laptop operation_performance [SSEP] [A] chromebook [O] less laggy [S] great [C] laptop operation_performance [SSEP] [A] it [O] great [S] great [C] laptop price', '[A] chromebook [S] great [O] null [C] laptop general [SSEP] [A] it [S] great [O] quick [C] laptop operation_performance [SSEP] [A] chromebook [S] great [O] less laggy [C] laptop operation_performance [SSEP] [A] it [S] great [O] great [C] laptop price', '[A] chromebook [O] null [C] laptop operation_performance [S] great [SSEP] [A] it [O] quick [C] laptop operation_performance [S] great [SSEP] [A] chromebook [O] less laggy [C] laptop operation_performance [S] great [SSEP] [A] it [O] great [C] laptop price [S] great', '[O] null [A] chromebook [S] great [C] laptop operation_performance [SSEP] [O] quick [A] chromebook [S] great [C] laptop operation_performance [SSEP] [O] laggy [A] chromebook [S] great [C] laptop operation_performance [SSEP] [O] great [A] it [S] great [C] laptop price', '[O] null [A] chromebook [C] laptop operation_performance [S] great [SSEP] [O] quick [A] chromebook [C] laptop operation_performance [S] great [SSEP] [O] laggy [A] chromebook [C] laptop operation_performance [S] great [SSEP] [O] great [A] it [C] laptop price [S] great']

task, data: acos laptop16
target: [('os general', 'chrome os', 'bad', 'null')]
output: ['[A] chrome os [O] null [S] ok [C] os usability']
sent: ['little', 'bit', 'of', 'a', 'learning', 'curve', 'with', 'chrome', 'os', '.']
counter: {('os usability', 'chrome os', 'ok', 'null'): 5}
output quads: ['[A] chrome os [O] null [S] ok [C] os usability']
multi_path: ['[A] chrome os [O] null [S] ok [C] os usability', '[A] chrome os [S] ok [O] null [C] os usability', '[A] chrome os [O] null [C] os usability [S] ok', '[O] null [A] chrome os [S] ok [C] os usability', '[O] null [A] chrome os [C] os usability [S] ok']

task, data: acos laptop16
target: [('laptop usability', 'devise', 'bad', 'null')]
output: ['[A] play store [O] null [S] bad [C] software operation_performance']
sent: ['so', 'it', 'appears', 'the', 'play', 'store', 'does', 'not', 'recognize', 'this', 'devise', 'at', 'this', 'time', '.']
counter: {('software operation_performance', 'play store', 'bad', 'null'): 5}
output quads: ['[A] play store [O] null [S] bad [C] software operation_performance']
multi_path: ['[A] play store [O] null [S] bad [C] software operation_performance', '[A] play store [S] bad [O] null [C] software operation_performance', '[A] play store [O] null [C] software operation_performance [S] bad', '[O] null [A] play store [S] bad [C] software operation_performance', '[O] null [A] play store [C] software operation_performance [S] bad']

task, data: acos laptop16
target: [('laptop general', 'chromebook', 'bad', 'null')]
output: ['[A] chromebook [O] null [S] ok [C] laptop general', '[A] device [O] cheaper [S] great [C] laptop price', '[A] device [O] powerful [S] great [C] laptop operation_performance']
sent: ['chromebook', 'seems', 'like', 'the', 'kind', 'of', 'device', 'that', 'you', 'review', 'after', 'a', 'few', 'weeks', ',', 'and', 'by', 'the', 'time', 'anything', 'happens', 'to', 'it', 'that', 'affects', 'use', ',', 'the', 'replacement', 'will', 'be', 'just', 'as', 'much', 'or', 'cheaper', ',', 'twice', 'as', 'powerful', ',', 'and', 'come', 'with', '`', '`', 'angry', 'birds', '`', '`', 'installed', 'by', 'default', '.']
counter: {('laptop general', 'chromebook', 'ok', 'null'): 5, ('laptop price', 'device', 'great', 'cheaper'): 5, ('laptop operation_performance', 'device', 'great', 'powerful'): 5}
output quads: ['[A] chromebook [O] null [S] ok [C] laptop general', '[A] device [O] cheaper [S] great [C] laptop price', '[A] device [O] powerful [S] great [C] laptop operation_performance']
multi_path: ['[A] chromebook [O] null [S] ok [C] laptop general [SSEP] [A] device [O] cheaper [S] great [C] laptop price [SSEP] [A] device [O] powerful [S] great [C] laptop operation_performance', '[A] chromebook [S] ok [O] null [C] laptop general [SSEP] [A] device [S] great [O] cheaper [C] laptop price [SSEP] [A] device [S] great [O] powerful [C] laptop operation_performance', '[A] chromebook [O] null [C] laptop general [S] ok [SSEP] [A] device [O] cheaper [C] laptop price [S] great [SSEP] [A] device [O] powerful [C] laptop operation_performance [S] great', '[O] null [A] chromebook [S] ok [C] laptop general [SSEP] [O] cheaper [A] device [S] great [C] laptop price [SSEP] [O] powerful [A] device [S] great [C] laptop operation_performance', '[O] null [A] chromebook [C] laptop general [S] ok [SSEP] [O] cheaper [A] device [C] laptop price [S] great [SSEP] [O] powerful [A] device [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('ports design_features', 'hdmi and usb ports', 'bad', 'misery')]
output: ['[A] back [O] misery [S] bad [C] ports design_features', '[A] hdmi and usb ports [O] misery [S] bad [C] ports design_features']
sent: ['the', 'hdmi', 'and', 'usb', 'ports', 'are', 'on', 'the', 'left', 'side', ',', 'the', 'back', 'has', 'no', 'ports', 'at', 'all', ',', 'and', ',', 'misery', '!']
counter: {('ports design_features', 'hdmi and usb ports', 'bad', 'misery'): 5, ('ports design_features', 'back', 'bad', 'misery'): 5}
output quads: ['[A] hdmi and usb ports [O] misery [S] bad [C] ports design_features', '[A] back [O] misery [S] bad [C] ports design_features']
multi_path: ['[A] hdmi and usb ports [O] misery [S] bad [C] ports design_features [SSEP] [A] back [O] misery [S] bad [C] ports design_features', '[A] hdmi and usb ports [S] bad [O] misery [C] ports design_features [SSEP] [A] back [S] bad [O] misery [C] ports design_features', '[A] hdmi and usb ports [O] misery [C] ports design_features [S] bad [SSEP] [A] back [O] misery [C] ports design_features [S] bad', '[O] misery [A] hdmi and usb ports [S] bad [C] ports design_features [SSEP] [O] misery [A] back [S] bad [C] ports design_features', '[O] misery [A] hdmi and usb ports [C] ports design_features [S] bad [SSEP] [O] misery [A] back [C] ports design_features [S] bad']

task, data: acos laptop16
target: [('laptop general', 'chromebook', 'great', 'superb')]
output: ['[A] chromebook [O] superb [S] great [C] laptop operation_performance']
sent: ['the', 'initial', 'feel', 'for', 'this', 'chromebook', 'is', 'superb', '.']
counter: {('laptop operation_performance', 'chromebook', 'great', 'superb'): 5}
output quads: ['[A] chromebook [O] superb [S] great [C] laptop operation_performance']
multi_path: ['[A] chromebook [O] superb [S] great [C] laptop operation_performance', '[A] chromebook [S] great [O] superb [C] laptop operation_performance', '[A] chromebook [O] superb [C] laptop operation_performance [S] great', '[O] superb [A] chromebook [S] great [C] laptop operation_performance', '[O] superb [A] chromebook [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('laptop operation_performance', 'chromebook', 'great', 'pleased')]
output: ['[A] chromebook [O] pleased [S] great [C] laptop operation_performance', '[A] chromebook [O] well [S] great [C] laptop operation_performance']
sent: ['i', "'", 'm', 'been', 'quite', 'pleased', 'at', 'how', 'well', 'the', 'chromebook', 'has', 'worked', 'for', 'all', 'these', 'tasks', '.']
counter: {('laptop operation_performance', 'chromebook', 'great', 'pleased'): 5, ('laptop operation_performance', 'chromebook', 'great', 'well'): 5}
output quads: ['[A] chromebook [O] pleased [S] great [C] laptop operation_performance', '[A] chromebook [O] well [S] great [C] laptop operation_performance']
multi_path: ['[A] chromebook [O] pleased [S] great [C] laptop operation_performance [SSEP] [A] chromebook [O] well [S] great [C] laptop operation_performance', '[A] chromebook [S] great [O] pleased [C] laptop operation_performance [SSEP] [A] chromebook [S] great [O] well [C] laptop operation_performance', '[A] chromebook [O] pleased [C] laptop operation_performance [S] great [SSEP] [A] chromebook [O] well [C] laptop operation_performance [S] great', '[O] pleased [A] chromebook [S] great [C] laptop operation_performance [SSEP] [O] well [A] chromebook [S] great [C] laptop operation_performance', '[O] pleased [A] chromebook [C] laptop operation_performance [S] great [SSEP] [O] well [A] chromebook [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('os usability', 'chromeos', 'great', 'decent')]
output: ['[A] chromeos [O] decent [S] great [C] os operation_performance']
sent: ['as', 'for', 'software', ',', 'chromeos', 'is', 'a', 'decent', 'thin', '-', 'client', 'operating', 'system', 'which', 'can', 'do', 'more', 'than', 'most', 'people', 'think', '.']
counter: {('os operation_performance', 'chromeos', 'great', 'decent'): 5, ('os operation_performance', 'software', 'great', 'thin - client'): 2, ('os operation_performance', 'operating system', 'great', 'thin - client'): 1, ('os operation_performance', 'chromeos', 'great', 'thin - client'): 2}
output quads: ['[A] chromeos [O] decent [S] great [C] os operation_performance']
multi_path: ['[A] chromeos [O] decent [S] great [C] os operation_performance [SSEP] [A] software [O] thin - client [S] great [C] os operation_performance', '[A] chromeos [S] great [O] decent [C] os operation_performance [SSEP] [A] software [S] great [O] thin - client [C] os operation_performance', '[A] chromeos [O] decent [C] os operation_performance [S] great [SSEP] [A] operating system [O] thin - client [C] os operation_performance [S] great', '[O] decent [A] chromeos [S] great [C] os operation_performance [SSEP] [O] thin - client [A] chromeos [S] great [C] os operation_performance', '[O] decent [A] chromeos [C] os operation_performance [S] great [SSEP] [O] thin - client [A] chromeos [C] os operation_performance [S] great']

task, data: acos laptop16
target: [('laptop general', 'machine', 'great', 'amazing'), ('laptop price', 'null', 'ok', 'hesitant')]
output: ['[A] machine [O] amazing [S] great [C] laptop general']
sent: ['i', 'was', 'hesitant', 'at', 'first', 'because', 'of', 'the', 'price', ',', 'but', 'i', 'have', 'to', 'say', 'that', 'this', 'is', 'honestly', 'an', 'amazing', 'machine', '.']
counter: {('laptop general', 'machine', 'great', 'amazing'): 5}
output quads: ['[A] machine [O] amazing [S] great [C] laptop general']
multi_path: ['[A] machine [O] amazing [S] great [C] laptop general', '[A] machine [S] great [O] amazing [C] laptop general', '[A] machine [O] amazing [C] laptop general [S] great', '[O] amazing [A] machine [S] great [C] laptop general', '[O] amazing [A] machine [C] laptop general [S] great']

task, data: acos laptop16
target: [('laptop general', 'model', 'ok', 'null')]
output: ['[A] model [O] null [S] great [C] laptop general']
sent: ['there', 'are', ',', 'as', 'with', 'everything', ',', 'several', 'growth', 'opportunities', 'for', 'this', 'model', '.']
counter: {('laptop general', 'model', 'great', 'null'): 5}
output quads: ['[A] model [O] null [S] great [C] laptop general']
multi_path: ['[A] model [O] null [S] great [C] laptop general', '[A] model [S] great [O] null [C] laptop general', '[A] model [O] null [C] laptop general [S] great', '[O] null [A] model [S] great [C] laptop general', '[O] null [A] model [C] laptop general [S] great']

task, data: acos laptop16
target: [('keyboard quality', 'trackpad', 'bad', 'delicate')]
output: ['[A] trackpad [O] delicate [S] bad [C] hardware operation_performance']
sent: ['secondly', ',', 'the', 'trackpad', 'feels', 'a', 'bit', 'delicate', '.']
counter: {('hardware operation_performance', 'trackpad', 'bad', 'delicate'): 5}
output quads: ['[A] trackpad [O] delicate [S] bad [C] hardware operation_performance']
multi_path: ['[A] trackpad [O] delicate [S] bad [C] hardware operation_performance', '[A] trackpad [S] bad [O] delicate [C] hardware operation_performance', '[A] trackpad [O] delicate [C] hardware operation_performance [S] bad', '[O] delicate [A] trackpad [S] bad [C] hardware operation_performance', '[O] delicate [A] trackpad [C] hardware operation_performance [S] bad']

task, data: acos laptop16
target: [('laptop operation_performance', 'laptop', 'great', 'ideal')]
output: ['[A] laptop [O] ideal [S] great [C] laptop general']
sent: ['if', 'you', 'are', 'looking', 'for', 'a', 'laptop', 'to', 'check', 'emails', ',', 'watch', 'movies', ',', 'to', 'shop', ',', 'basic', 'documentation', ',', 'then', 'this', 'is', 'an', 'ideal', 'one', '.']
counter: {('laptop general', 'laptop', 'great', 'ideal'): 5}
output quads: ['[A] laptop [O] ideal [S] great [C] laptop general']
multi_path: ['[A] laptop [O] ideal [S] great [C] laptop general', '[A] laptop [S] great [O] ideal [C] laptop general', '[A] laptop [O] ideal [C] laptop general [S] great', '[O] ideal [A] laptop [S] great [C] laptop general', '[O] ideal [A] laptop [C] laptop general [S] great']

task, data: acos laptop16
target: [('laptop usability', 'chromebook', 'ok', 'null')]
output: ['[A] chromebook [O] null [S] bad [C] laptop operation_performance']
sent: ['i', 'have', 'had', 'q', '&', 'a', 'on', 'this', 'chromebook', 'asking', 'if', 'it', 'will', 'download', 'ms', 'office', '.']
counter: {('laptop operation_performance', 'chromebook', 'bad', 'null'): 5}
output quads: ['[A] chromebook [O] null [S] bad [C] laptop operation_performance']
multi_path: ['[A] chromebook [O] null [S] bad [C] laptop operation_performance', '[A] chromebook [S] bad [O] null [C] laptop operation_performance', '[A] chromebook [O] null [C] laptop operation_performance [S] bad', '[O] null [A] chromebook [S] bad [C] laptop operation_performance', '[O] null [A] chromebook [C] laptop operation_performance [S] bad']

task, data: acos laptop16
target: [('laptop design_features', 'null', 'bad', 'null')]
output: ['[A] google play store [O] null [S] bad [C] software general']
sent: ['i', 'want', 'to', 'cry', 'because', 'this', 'doesn', "'", 't', 'support', 'google', 'play', 'store', '!']
counter: {('software general', 'google play store', 'bad', 'null'): 4, ('software usability', 'google play store', 'bad', 'null'): 1}
output quads: ['[A] google play store [O] null [S] bad [C] software general']
multi_path: ['[A] google play store [O] null [S] bad [C] software general', '[A] google play store [S] bad [O] null [C] software general', '[A] google play store [O] null [C] software usability [S] bad', '[O] null [A] google play store [S] bad [C] software general', '[O] null [A] google play store [C] software general [S] bad']

task, data: acos laptop16
target: [('graphics operation_performance', 'graphic', 'great', 'null')]
output: ['[A] creative software [O] null [S] great [C] software operation_performance']
sent: ['i', "'", 'm', 'a', 'graphic', 'designer', '/', 'gamer', 'and', 'my', 'creative', 'software', 'operates', 'with', 'no', 'problems', 'and', 'i', "'", 'm', 'able', 'to', 'play', 'the', 'sims', '4', 'and', 'world', 'of', 'warcraft', 'on', 'very', 'high', 'settings', 'with', 'no', 'problems', 'at', 'all', '.']
counter: {('software operation_performance', 'creative software', 'great', 'null'): 5}
output quads: ['[A] creative software [O] null [S] great [C] software operation_performance']
multi_path: ['[A] creative software [O] null [S] great [C] software operation_performance', '[A] creative software [S] great [O] null [C] software operation_performance', '[A] creative software [O] null [C] software operation_performance [S] great', '[O] null [A] creative software [S] great [C] software operation_performance', '[O] null [A] creative software [C] software operation_performance [S] great']

task, data: acos laptop16
target: [('laptop portability', 'null', 'great', 'null')]
output: ['[A] null [O] null [S] great [C] laptop general']
sent: ['this', 'is', 'a', 'huge', 'plus', '!']
counter: {('laptop general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [O] null [S] great [C] laptop general']
multi_path: ['[A] it [O] null [S] great [C] laptop general', '[A] it [S] great [O] null [C] laptop general', '[A] it [O] null [C] laptop general [S] great', '[O] null [A] it [S] great [C] laptop general', '[O] null [A] it [C] laptop general [S] great']

task, data: acos laptop16
target: [('hard_disc general', 'solid state drive', 'ok', 'null')]
output: ['[A] drives [O] null [S] ok [C] hard_disc design_features']
sent: ['-', 'drives', 'are', 'now', 'solid', 'state', 'drive', '.']
counter: {('hard_disc design_features', 'drives', 'ok', 'null'): 5}
output quads: ['[A] drives [O] null [S] ok [C] hard_disc design_features']
multi_path: ['[A] drives [O] null [S] ok [C] hard_disc design_features', '[A] drives [S] ok [O] null [C] hard_disc design_features', '[A] drives [O] null [C] hard_disc design_features [S] ok', '[O] null [A] drives [S] ok [C] hard_disc design_features', '[O] null [A] drives [C] hard_disc design_features [S] ok']

task, data: acos laptop16
target: [('multimedia_devices design_features', 'speakers', 'great', 'new')]
output: ['[A] built - in speakers [O] null [S] great [C] multimedia_devices general']
sent: ['-', 'new', 'built', '-', 'in', 'speakers', '.']
counter: {('multimedia_devices general', 'built - in speakers', 'great', 'null'): 5}
output quads: ['[A] built - in speakers [O] null [S] great [C] multimedia_devices general']
multi_path: ['[A] built - in speakers [O] null [S] great [C] multimedia_devices general', '[A] built - in speakers [S] great [O] null [C] multimedia_devices general', '[A] built - in speakers [O] null [C] multimedia_devices general [S] great', '[O] null [A] built - in speakers [S] great [C] multimedia_devices general', '[O] null [A] built - in speakers [C] multimedia_devices general [S] great']

task, data: acos laptop16
target: [('multimedia_devices general', 'dvd drive', 'bad', 'null')]
output: ['[A] dvd drive [O] null [S] bad [C] multimedia_devices design_features']
sent: ['-', 'no', 'dvd', 'drive', '.']
counter: {('multimedia_devices design_features', 'dvd drive', 'bad', 'null'): 5}
output quads: ['[A] dvd drive [O] null [S] bad [C] multimedia_devices design_features']
multi_path: ['[A] dvd drive [O] null [S] bad [C] multimedia_devices design_features', '[A] dvd drive [S] bad [O] null [C] multimedia_devices design_features', '[A] dvd drive [O] null [C] multimedia_devices design_features [S] bad', '[O] null [A] dvd drive [S] bad [C] multimedia_devices design_features', '[O] null [A] dvd drive [C] multimedia_devices design_features [S] bad']

task, data: acos laptop16
target: [('hardware operation_performance', 'null', 'ok', 'well')]
output: ['[A] null [O] well [S] great [C] laptop operation_performance']
sent: ['i', 'couldn', "'", 't', 'drag', '-', 'and', '-', 'drop', 'items', 'in', 'it', ',', 'but', 'after', 'i', 'changed', 'the', 'behavior', 'in', 'settings', ',', 'everything', 'went', 'well', 'from', 'there', '.']
counter: {('laptop operation_performance', 'null', 'great', 'well'): 5}
output quads: ['[A] null [O] well [S] great [C] laptop operation_performance']
multi_path: ['[A] it [O] well [S] great [C] laptop operation_performance', '[A] it [S] great [O] well [C] laptop operation_performance', '[A] it [O] well [C] laptop operation_performance [S] great', '[O] well [A] it [S] great [C] laptop operation_performance', '[O] well [A] it [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('laptop portability', 'null', 'great', 'light')]
output: ['[A] null [O] light [S] great [C] laptop design_features']
sent: ['it', 'is', 'pretty', 'light', 'if', 'you', 'are', 'coming', 'from', 'any', 'other', 'laptop', '.']
counter: {('laptop design_features', 'null', 'great', 'light'): 5}
output quads: ['[A] null [O] light [S] great [C] laptop design_features']
multi_path: ['[A] it [O] light [S] great [C] laptop design_features', '[A] it [S] great [O] light [C] laptop design_features', '[A] it [O] light [C] laptop design_features [S] great', '[O] light [A] it [S] great [C] laptop design_features', '[O] light [A] it [C] laptop design_features [S] great']

task, data: acos laptop16
target: [('display general', 'screen', 'great', 'good'), ('display general', 'screen', 'great', 'sharp')]
output: ['[A] screen [O] good [S] great [C] display design_features', '[A] screen [O] sharp [S] great [C] display design_features']
sent: ['very', 'sharp', 'screen', 'and', 'good', 'viewing', 'angles', '.']
counter: {('display design_features', 'screen', 'great', 'sharp'): 5, ('display design_features', 'screen', 'great', 'good'): 5}
output quads: ['[A] screen [O] sharp [S] great [C] display design_features', '[A] screen [O] good [S] great [C] display design_features']
multi_path: ['[A] screen [O] sharp [S] great [C] display design_features [SSEP] [A] screen [O] good [S] great [C] display design_features', '[A] screen [S] great [O] sharp [C] display design_features [SSEP] [A] screen [S] great [O] good [C] display design_features', '[A] screen [O] sharp [C] display design_features [S] great [SSEP] [A] screen [O] good [C] display design_features [S] great', '[O] sharp [A] screen [S] great [C] display design_features [SSEP] [O] good [A] screen [S] great [C] display design_features', '[O] sharp [A] screen [C] display design_features [S] great [SSEP] [O] good [A] screen [C] display design_features [S] great']

task, data: acos laptop16
target: [('display operation_performance', 'display', 'great', 'classy'), ('os general', 'os x', 'great', 'classy')]
output: ['[A] os x [O] classy [S] great [C] os operation_performance']
sent: ['something', 'about', 'os', 'x', 'running', 'with', 'a', 'high', 'resolution', 'display', 'just', 'looks', 'classy', 'in', 'a', 'way', 'that', 'a', 'windows', 'computer', 'could', 'never', 'match', '.']
counter: {('os operation_performance', 'os x', 'great', 'classy'): 5}
output quads: ['[A] os x [O] classy [S] great [C] os operation_performance']
multi_path: ['[A] os x [O] classy [S] great [C] os operation_performance', '[A] os x [S] great [O] classy [C] os operation_performance', '[A] os x [O] classy [C] os operation_performance [S] great', '[O] classy [A] os x [S] great [C] os operation_performance', '[O] classy [A] os x [C] os operation_performance [S] great']

task, data: acos laptop16
target: [('battery general', 'null', 'great', 'null')]
output: ['[A] null [O] null [S] great [C] laptop general']
sent: ['no', 'complaints', 'here', '.']
counter: {('laptop general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [O] null [S] great [C] laptop general']
multi_path: ['[A] it [O] null [S] great [C] laptop general', '[A] it [S] great [O] null [C] laptop general', '[A] it [O] null [C] laptop general [S] great', '[O] null [A] it [S] great [C] laptop general', '[O] null [A] it [C] laptop general [S] great']

task, data: acos laptop16
target: [('os operation_performance', 'os', 'great', 'elegant'), ('os operation_performance', 'os', 'great', 'refined'), ('os operation_performance', 'os x yosemite', 'great', 'elegant'), ('os operation_performance', 'os x yosemite', 'great', 'refined')]
output: ['[A] os [O] elegant [S] great [C] os design_features', '[A] os x yosemite [O] refined [S] great [C] os design_features']
sent: ['with', 'os', 'x', 'yosemite', ',', 'the', 'os', 'is', 'very', 'refined', 'and', 'elegant', '.']
counter: {('os design_features', 'os x yosemite', 'great', 'refined'): 3, ('os design_features', 'os', 'great', 'elegant'): 5, ('os design_features', 'os', 'great', 'refined'): 2}
output quads: ['[A] os x yosemite [O] refined [S] great [C] os design_features', '[A] os [O] elegant [S] great [C] os design_features']
multi_path: ['[A] os x yosemite [O] refined [S] great [C] os design_features [SSEP] [A] os [O] elegant [S] great [C] os design_features', '[A] os x yosemite [S] great [O] refined [C] os design_features [SSEP] [A] os [S] great [O] elegant [C] os design_features', '[A] os x yosemite [O] refined [C] os design_features [S] great [SSEP] [A] os [O] elegant [C] os design_features [S] great', '[O] refined [A] os [S] great [C] os design_features [SSEP] [O] elegant [A] os [S] great [C] os design_features', '[O] refined [A] os [C] os design_features [S] great [SSEP] [O] elegant [A] os [C] os design_features [S] great']

task, data: acos laptop16
target: [('laptop operation_performance', 'laptop', 'great', 'great'), ('shipping general', 'package', 'great', 'null')]
output: ['[A] laptop [O] great [S] great [C] laptop operation_performance', '[A] package [O] null [S] great [C] shipping quality']
sent: ['the', 'laptop', 'works', 'great', 'and', 'the', 'package', 'was', 'delivered', 'on', 'time', '.']
counter: {('laptop operation_performance', 'laptop', 'great', 'great'): 5, ('shipping quality', 'package', 'great', 'null'): 3, ('shipping general', 'package', 'great', 'null'): 2}
output quads: ['[A] laptop [O] great [S] great [C] laptop operation_performance', '[A] package [O] null [S] great [C] shipping quality']
multi_path: ['[A] laptop [O] great [S] great [C] laptop operation_performance [SSEP] [A] package [O] null [S] great [C] shipping quality', '[A] laptop [S] great [O] great [C] laptop operation_performance [SSEP] [A] package [S] great [O] null [C] shipping quality', '[A] laptop [O] great [C] laptop operation_performance [S] great [SSEP] [A] package [O] null [C] shipping general [S] great', '[O] great [A] laptop [S] great [C] laptop operation_performance [SSEP] [O] null [A] package [S] great [C] shipping quality', '[O] great [A] laptop [C] laptop operation_performance [S] great [SSEP] [O] null [A] package [C] shipping general [S] great']

task, data: acos laptop16
target: [('keyboard design_features', 'mbp', 'great', 'brighter'), ('keyboard general', 'backlighting', 'great', 'comparable')]
output: ['[A] backlighting [O] comparable [S] ok [C] keyboard design_features', '[A] mbp [O] brighter [S] great [C] laptop design_features']
sent: ['the', 'backlighting', 'is', 'comparable', ',', 'but', 'the', 'mbp', 'gets', 'brighter', '.']
counter: {('keyboard design_features', 'backlighting', 'ok', 'comparable'): 5, ('laptop design_features', 'mbp', 'great', 'brighter'): 5}
output quads: ['[A] backlighting [O] comparable [S] ok [C] keyboard design_features', '[A] mbp [O] brighter [S] great [C] laptop design_features']
multi_path: ['[A] backlighting [O] comparable [S] ok [C] keyboard design_features [SSEP] [A] mbp [O] brighter [S] great [C] laptop design_features', '[A] backlighting [S] ok [O] comparable [C] keyboard design_features [SSEP] [A] mbp [S] great [O] brighter [C] laptop design_features', '[A] backlighting [O] comparable [C] keyboard design_features [S] ok [SSEP] [A] mbp [O] brighter [C] laptop design_features [S] great', '[O] comparable [A] backlighting [S] ok [C] keyboard design_features [SSEP] [O] brighter [A] mbp [S] great [C] laptop design_features', '[O] comparable [A] backlighting [C] keyboard design_features [S] ok [SSEP] [O] brighter [A] mbp [C] laptop design_features [S] great']

task, data: acos laptop16
target: [('ports design_features', 'thunderbolt ports', 'great', 'nice')]
output: ['[A] thunderbolt ports [O] nice [S] great [C] ports general']
sent: ['the', 'thunderbolt', 'ports', 'are', 'a', 'nice', 'thing', 'to', 'have', 'on', 'the', 'mbp', '.']
counter: {('ports general', 'thunderbolt ports', 'great', 'nice'): 5}
output quads: ['[A] thunderbolt ports [O] nice [S] great [C] ports general']
multi_path: ['[A] thunderbolt ports [O] nice [S] great [C] ports general', '[A] thunderbolt ports [S] great [O] nice [C] ports general', '[A] thunderbolt ports [O] nice [C] ports general [S] great', '[O] nice [A] thunderbolt ports [S] great [C] ports general', '[O] nice [A] thunderbolt ports [C] ports general [S] great']

task, data: acos laptop16
target: [('laptop operation_performance', 'null', 'great', 'outstanding'), ('laptop portability', 'portability', 'great', 'outstanding'), ('laptop quality', 'durability', 'great', 'good')]
output: ['[A] null [O] good [S] great [C] laptop quality', '[A] null [O] outstanding [S] great [C] laptop operation_performance', '[A] null [O] outstanding [S] great [C] laptop portability']
sent: ['good', 'durability', ',', 'outstanding', 'performance', 'and', 'portability', '.']
counter: {('laptop quality', 'null', 'great', 'good'): 5, ('laptop operation_performance', 'null', 'great', 'outstanding'): 5, ('laptop portability', 'null', 'great', 'outstanding'): 3, ('laptop portability', 'null', 'great', 'good'): 1, ('laptop portability', 'portability', 'great', 'good'): 1}
output quads: ['[A] null [O] good [S] great [C] laptop quality', '[A] null [O] outstanding [S] great [C] laptop operation_performance', '[A] null [O] outstanding [S] great [C] laptop portability']
multi_path: ['[A] it [O] good [S] great [C] laptop quality [SSEP] [A] it [O] outstanding [S] great [C] laptop operation_performance [SSEP] [A] it [O] outstanding [S] great [C] laptop portability', '[A] it [S] great [O] good [C] laptop quality [SSEP] [A] it [S] great [O] outstanding [C] laptop operation_performance [SSEP] [A] it [S] great [O] outstanding [C] laptop portability', '[A] it [O] good [C] laptop quality [S] great [SSEP] [A] it [O] outstanding [C] laptop operation_performance [S] great [SSEP] [A] it [O] good [C] laptop portability [S] great', '[O] good [A] it [S] great [C] laptop quality [SSEP] [O] outstanding [A] it [S] great [C] laptop operation_performance [SSEP] [O] outstanding [A] it [S] great [C] laptop portability', '[O] good [A] it [C] laptop quality [S] great [SSEP] [O] outstanding [A] it [C] laptop operation_performance [S] great [SSEP] [O] good [A] portability [C] laptop portability [S] great']

task, data: acos laptop16
target: [('laptop operation_performance', 'response', 'great', 'excellent')]
output: ['[A] response [O] excellent [S] great [C] support general']
sent: ['response', 'is', 'excellent', '.']
counter: {('support general', 'response', 'great', 'excellent'): 5}
output quads: ['[A] response [O] excellent [S] great [C] support general']
multi_path: ['[A] response [O] excellent [S] great [C] support general', '[A] response [S] great [O] excellent [C] support general', '[A] response [O] excellent [C] support general [S] great', '[O] excellent [A] response [S] great [C] support general', '[O] excellent [A] response [C] support general [S] great']

task, data: acos laptop16
target: [('laptop portability', 'laptop', 'great', 'light')]
output: ['[A] laptop [O] light [S] great [C] laptop design_features']
sent: ['-', 'laptop', 'is', 'light', '.']
counter: {('laptop design_features', 'laptop', 'great', 'light'): 5}
output quads: ['[A] laptop [O] light [S] great [C] laptop design_features']
multi_path: ['[A] laptop [O] light [S] great [C] laptop design_features', '[A] laptop [S] great [O] light [C] laptop design_features', '[A] laptop [O] light [C] laptop design_features [S] great', '[O] light [A] laptop [S] great [C] laptop design_features', '[O] light [A] laptop [C] laptop design_features [S] great']

task, data: acos laptop16
target: [('ports design_features', 'ports', 'great', 'generous')]
output: ['[A] selection of ports [O] generous [S] great [C] ports design_features']
sent: ['-', 'generous', 'selection', 'of', 'ports', '(', 'this', 'is', 'in', 'reference', 'to', 'the', 'newer', 'model', ')']
counter: {('ports design_features', 'selection of ports', 'great', 'generous'): 3, ('ports design_features', 'ports', 'great', 'generous'): 2}
output quads: ['[A] selection of ports [O] generous [S] great [C] ports design_features']
multi_path: ['[A] selection of ports [O] generous [S] great [C] ports design_features', '[A] selection of ports [S] great [O] generous [C] ports design_features', '[A] selection of ports [O] generous [C] ports design_features [S] great', '[O] generous [A] ports [S] great [C] ports design_features', '[O] generous [A] ports [C] ports design_features [S] great']

task, data: acos laptop16
target: [('laptop general', 'product', 'great', 'new'), ('shipping quality', 'shipping', 'great', 'fast')]
output: ['[A] product [O] authentic [S] great [C] laptop quality', '[A] product [O] new [S] great [C] laptop quality', '[A] product [O] null [S] great [C] shipping quality', '[A] shipping [O] fast [S] great [C] shipping quality']
sent: ['fast', 'shipping', ',', 'product', 'exactly', 'as', 'described', ',', 'authentic', 'apple', ',', 'new', ',', 'factory', 'sealed', 'in', 'box', '.']
counter: {('shipping operation_performance', 'shipping', 'great', 'fast'): 2, ('laptop quality', 'product', 'great', 'authentic'): 5, ('laptop quality', 'product', 'great', 'new'): 5, ('shipping operation_performance', 'product', 'great', 'null'): 2, ('shipping quality', 'shipping', 'great', 'fast'): 3, ('shipping quality', 'product', 'great', 'null'): 3}
output quads: ['[A] product [O] authentic [S] great [C] laptop quality', '[A] product [O] new [S] great [C] laptop quality', '[A] shipping [O] fast [S] great [C] shipping quality', '[A] product [O] null [S] great [C] shipping quality']
multi_path: ['[A] shipping [O] fast [S] great [C] shipping operation_performance [SSEP] [A] product [O] authentic [S] great [C] laptop quality [SSEP] [A] product [O] new [S] great [C] laptop quality [SSEP] [A] product [O] null [S] great [C] shipping operation_performance', '[A] shipping [S] great [O] fast [C] shipping operation_performance [SSEP] [A] product [S] great [O] authentic [C] laptop quality [SSEP] [A] product [S] great [O] new [C] laptop quality [SSEP] [A] product [S] great [O] null [C] shipping operation_performance', '[A] shipping [O] fast [C] shipping quality [S] great [SSEP] [A] product [O] authentic [C] laptop quality [S] great [SSEP] [A] product [O] new [C] laptop quality [S] great [SSEP] [A] product [O] null [C] shipping quality [S] great', '[O] fast [A] shipping [S] great [C] shipping quality [SSEP] [O] authentic [A] product [S] great [C] laptop quality [SSEP] [O] new [A] product [S] great [C] laptop quality [SSEP] [O] null [A] product [S] great [C] shipping quality', '[O] fast [A] shipping [C] shipping quality [S] great [SSEP] [O] authentic [A] product [C] laptop quality [S] great [SSEP] [O] new [A] product [C] laptop quality [S] great [SSEP] [O] null [A] product [C] shipping quality [S] great']

task, data: acos laptop16
target: [('display quality', 'display', 'great', 'loving'), ('keyboard general', 'track pad', 'great', 'loving')]
output: ['[A] display [O] loving [S] great [C] display general', '[A] track pad [O] loving [S] great [C] keyboard general']
sent: ['loving', 'the', 'sharp', 'display', 'and', 'the', 'track', 'pad', '.']
counter: {('display general', 'display', 'great', 'loving'): 5, ('keyboard general', 'track pad', 'great', 'loving'): 3, ('keyboard general', 'track pad', 'great', 'sharp'): 2}
output quads: ['[A] display [O] loving [S] great [C] display general', '[A] track pad [O] loving [S] great [C] keyboard general']
multi_path: ['[A] display [O] loving [S] great [C] display general [SSEP] [A] track pad [O] loving [S] great [C] keyboard general', '[A] display [S] great [O] loving [C] display general [SSEP] [A] track pad [S] great [O] loving [C] keyboard general', '[A] display [O] loving [C] display general [S] great [SSEP] [A] track pad [O] loving [C] keyboard general [S] great', '[O] loving [A] display [S] great [C] display general [SSEP] [O] sharp [A] track pad [S] great [C] keyboard general', '[O] loving [A] display [C] display general [S] great [SSEP] [O] sharp [A] track pad [C] keyboard general [S] great']

task, data: acos laptop16
target: [('laptop design_features', 'null', 'great', 'light'), ('laptop design_features', 'null', 'great', 'love'), ('laptop operation_performance', 'null', 'great', 'love'), ('laptop operation_performance', 'null', 'great', 'speedy')]
output: ['[A] null [O] light [S] great [C] laptop design_features', '[A] null [O] love [S] great [C] laptop operation_performance', '[A] null [O] speedy [S] great [C] laptop operation_performance']
sent: ['i', 'am', 'in', 'love', 'with', 'how', 'light', 'and', 'speedy', 'it', 'is', '.']
counter: {('laptop operation_performance', 'null', 'great', 'love'): 5, ('laptop design_features', 'null', 'great', 'light'): 5, ('laptop operation_performance', 'null', 'great', 'speedy'): 5}
output quads: ['[A] null [O] love [S] great [C] laptop operation_performance', '[A] null [O] light [S] great [C] laptop design_features', '[A] null [O] speedy [S] great [C] laptop operation_performance']
multi_path: ['[A] it [O] love [S] great [C] laptop operation_performance [SSEP] [A] it [O] light [S] great [C] laptop design_features [SSEP] [A] it [O] speedy [S] great [C] laptop operation_performance', '[A] it [S] great [O] love [C] laptop operation_performance [SSEP] [A] it [S] great [O] light [C] laptop design_features [SSEP] [A] it [S] great [O] speedy [C] laptop operation_performance', '[A] it [O] love [C] laptop operation_performance [S] great [SSEP] [A] it [O] light [C] laptop design_features [S] great [SSEP] [A] it [O] speedy [C] laptop operation_performance [S] great', '[O] love [A] it [S] great [C] laptop operation_performance [SSEP] [O] light [A] it [S] great [C] laptop design_features [SSEP] [O] speedy [A] it [S] great [C] laptop operation_performance', '[O] love [A] it [C] laptop operation_performance [S] great [SSEP] [O] light [A] it [C] laptop design_features [S] great [SSEP] [O] speedy [A] it [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('company general', 'null', 'great', 'null'), ('hardware general', 'hardware', 'great', 'well'), ('software general', 'software', 'great', 'well')]
output: ['[A] hardware [O] well [S] great [C] hardware operation_performance', '[A] software [O] well [S] great [C] software operation_performance']
sent: ['they', 'put', 'a', 'lot', 'of', 'thought', 'and', 'work', 'into', 'making', 'sure', 'that', 'the', 'hardware', 'and', 'software', 'work', 'real', 'well', 'together', '.']
counter: {('hardware operation_performance', 'hardware', 'great', 'well'): 5, ('software operation_performance', 'software', 'great', 'well'): 5}
output quads: ['[A] hardware [O] well [S] great [C] hardware operation_performance', '[A] software [O] well [S] great [C] software operation_performance']
multi_path: ['[A] hardware [O] well [S] great [C] hardware operation_performance [SSEP] [A] software [O] well [S] great [C] software operation_performance', '[A] hardware [S] great [O] well [C] hardware operation_performance [SSEP] [A] software [S] great [O] well [C] software operation_performance', '[A] hardware [O] well [C] hardware operation_performance [S] great [SSEP] [A] software [O] well [C] software operation_performance [S] great', '[O] well [A] hardware [S] great [C] hardware operation_performance [SSEP] [O] well [A] software [S] great [C] software operation_performance', '[O] well [A] hardware [C] hardware operation_performance [S] great [SSEP] [O] well [A] software [C] software operation_performance [S] great']

task, data: acos laptop16
target: [('cpu operation_performance', 'running speed', 'great', 'fast'), ('laptop general', 'laptop', 'great', 'nice'), ('laptop portability', 'null', 'great', 'love')]
output: ['[A] laptop [O] love [S] great [C] laptop general', '[A] laptop [O] nice [S] great [C] laptop general', '[A] running speed [O] fast [S] great [C] cpu operation_performance']
sent: ['very', 'nice', 'laptop', ',', 'i', 'love', 'its', 'portable', 'feature', 'and', 'the', 'running', 'speed', 'is', 'very', 'fast', '.']
counter: {('laptop general', 'laptop', 'great', 'nice'): 5, ('laptop general', 'laptop', 'great', 'love'): 5, ('laptop operation_performance', 'running speed', 'great', 'fast'): 2, ('cpu operation_performance', 'running speed', 'great', 'fast'): 3}
output quads: ['[A] laptop [O] nice [S] great [C] laptop general', '[A] laptop [O] love [S] great [C] laptop general', '[A] running speed [O] fast [S] great [C] cpu operation_performance']
multi_path: ['[A] laptop [O] nice [S] great [C] laptop general [SSEP] [A] laptop [O] love [S] great [C] laptop general [SSEP] [A] running speed [O] fast [S] great [C] laptop operation_performance', '[A] laptop [S] great [O] nice [C] laptop general [SSEP] [A] laptop [S] great [O] love [C] laptop general [SSEP] [A] running speed [S] great [O] fast [C] laptop operation_performance', '[A] laptop [O] nice [C] laptop general [S] great [SSEP] [A] laptop [O] love [C] laptop general [S] great [SSEP] [A] running speed [O] fast [C] cpu operation_performance [S] great', '[O] nice [A] laptop [S] great [C] laptop general [SSEP] [O] love [A] laptop [S] great [C] laptop general [SSEP] [O] fast [A] running speed [S] great [C] cpu operation_performance', '[O] nice [A] laptop [C] laptop general [S] great [SSEP] [O] love [A] laptop [C] laptop general [S] great [SSEP] [O] fast [A] running speed [C] cpu operation_performance [S] great']

task, data: acos laptop16
target: [('battery operation_performance', 'battery life', 'bad', 'null')]
output: ['[A] battery life [O] null [S] bad [C] battery general']
sent: ['the', 'only', 'issue', 'i', 'have', 'with', 'it', '(', 'and', 'hence', 'the', 'four', 'star', 'rating', ')', 'is', 'the', 'battery', 'life', '.']
counter: {('battery general', 'battery life', 'bad', 'null'): 5}
output quads: ['[A] battery life [O] null [S] bad [C] battery general']
multi_path: ['[A] battery life [O] null [S] bad [C] battery general', '[A] battery life [S] bad [O] null [C] battery general', '[A] battery life [O] null [C] battery general [S] bad', '[O] null [A] battery life [S] bad [C] battery general', '[O] null [A] battery life [C] battery general [S] bad']

task, data: acos laptop16
target: [('keyboard design_features', 'chip', 'bad', 'null'), ('laptop general', 'mac', 'great', 'great')]
output: ['[A] mac [O] great [S] great [C] laptop general']
sent: ['the', 'mac', 'is', 'great', 'besides', 'a', 'chip', 'under', 'the', 'mouse', 'pad', '.']
counter: {('laptop general', 'mac', 'great', 'great'): 5}
output quads: ['[A] mac [O] great [S] great [C] laptop general']
multi_path: ['[A] mac [O] great [S] great [C] laptop general', '[A] mac [S] great [O] great [C] laptop general', '[A] mac [O] great [C] laptop general [S] great', '[O] great [A] mac [S] great [C] laptop general', '[O] great [A] mac [C] laptop general [S] great']

task, data: acos laptop16
target: [('keyboard general', 'track pad', 'great', 'amazing'), ('laptop design_features', 'design', 'great', 'beautiful')]
output: ['[A] design [O] beautiful [S] great [C] laptop design_features', '[A] force feedback track pad [O] amazing [S] great [C] keyboard general']
sent: ['the', 'design', 'is', 'beautiful', 'and', 'the', 'force', 'feedback', 'track', 'pad', 'is', 'amazing', '.']
counter: {('laptop design_features', 'design', 'great', 'beautiful'): 5, ('keyboard general', 'force feedback track pad', 'great', 'amazing'): 5}
output quads: ['[A] design [O] beautiful [S] great [C] laptop design_features', '[A] force feedback track pad [O] amazing [S] great [C] keyboard general']
multi_path: ['[A] design [O] beautiful [S] great [C] laptop design_features [SSEP] [A] force feedback track pad [O] amazing [S] great [C] keyboard general', '[A] design [S] great [O] beautiful [C] laptop design_features [SSEP] [A] force feedback track pad [S] great [O] amazing [C] keyboard general', '[A] design [O] beautiful [C] laptop design_features [S] great [SSEP] [A] force feedback track pad [O] amazing [C] keyboard general [S] great', '[O] beautiful [A] design [S] great [C] laptop design_features [SSEP] [O] amazing [A] force feedback track pad [S] great [C] keyboard general', '[O] beautiful [A] design [C] laptop design_features [S] great [SSEP] [O] amazing [A] force feedback track pad [C] keyboard general [S] great']

task, data: acos laptop16
target: [('hardware design_features', 'internals', 'bad', 'slower'), ('laptop design_features', 'mac book', 'great', 'lighter')]
output: ['[A] internals [O] slower [S] bad [C] laptop design_features', '[A] mac book [O] lighter [S] great [C] laptop design_features', '[A] mac book [O] small [S] bad [C] laptop design_features']
sent: ['yeah', 'the', 'new', 'mac', 'book', 'is', 'lighter', 'and', 'only', 'a', 'little', 'small', 'but', 'the', 'internals', 'are', 'a', 'lot', 'slower', '.']
counter: {('laptop design_features', 'mac book', 'great', 'lighter'): 5, ('laptop design_features', 'mac book', 'bad', 'small'): 5, ('laptop design_features', 'internals', 'bad', 'slower'): 5}
output quads: ['[A] mac book [O] lighter [S] great [C] laptop design_features', '[A] mac book [O] small [S] bad [C] laptop design_features', '[A] internals [O] slower [S] bad [C] laptop design_features']
multi_path: ['[A] mac book [O] lighter [S] great [C] laptop design_features [SSEP] [A] mac book [O] small [S] bad [C] laptop design_features [SSEP] [A] internals [O] slower [S] bad [C] laptop design_features', '[A] mac book [S] great [O] lighter [C] laptop design_features [SSEP] [A] mac book [S] bad [O] small [C] laptop design_features [SSEP] [A] internals [S] bad [O] slower [C] laptop design_features', '[A] mac book [O] lighter [C] laptop design_features [S] great [SSEP] [A] mac book [O] small [C] laptop design_features [S] bad [SSEP] [A] internals [O] slower [C] laptop design_features [S] bad', '[O] lighter [A] mac book [S] great [C] laptop design_features [SSEP] [O] small [A] mac book [S] bad [C] laptop design_features [SSEP] [O] slower [A] internals [S] bad [C] laptop design_features', '[O] lighter [A] mac book [C] laptop design_features [S] great [SSEP] [O] small [A] mac book [C] laptop design_features [S] bad [SSEP] [O] slower [A] internals [C] laptop design_features [S] bad']

task, data: acos laptop16
target: [('laptop general', 'this computer', 'great', 'love')]
output: ['[A] computer [O] love [S] great [C] laptop general']
sent: ['love', 'this', 'computer', '!']
counter: {('laptop general', 'computer', 'great', 'love'): 5}
output quads: ['[A] computer [O] love [S] great [C] laptop general']
multi_path: ['[A] computer [O] love [S] great [C] laptop general', '[A] computer [S] great [O] love [C] laptop general', '[A] computer [O] love [C] laptop general [S] great', '[O] love [A] computer [S] great [C] laptop general', '[O] love [A] computer [C] laptop general [S] great']

task, data: acos laptop16
target: [('keyboard general', 'trackpad', 'great', 'awesome')]
output: ['[A] force touch trackpad [O] awesome [S] great [C] hardware general']
sent: ['force', 'touch', 'trackpad', ',', 'pretty', 'freakin', 'awesome', '.']
counter: {('hardware general', 'force touch trackpad', 'great', 'awesome'): 5}
output quads: ['[A] force touch trackpad [O] awesome [S] great [C] hardware general']
multi_path: ['[A] force touch trackpad [O] awesome [S] great [C] hardware general', '[A] force touch trackpad [S] great [O] awesome [C] hardware general', '[A] force touch trackpad [O] awesome [C] hardware general [S] great', '[O] awesome [A] force touch trackpad [S] great [C] hardware general', '[O] awesome [A] force touch trackpad [C] hardware general [S] great']

task, data: acos laptop16
target: [('display operation_performance', 'retina display', 'great', 'gorgeous')]
output: ['[A] null [O] charm [S] great [C] laptop operation_performance', '[A] retina display [O] gorgeous [S] great [C] display general']
sent: ['works', 'like', 'a', 'charm', 'and', 'the', 'retina', 'display', 'is', 'super', 'gorgeous', '.']
counter: {('laptop operation_performance', 'null', 'great', 'charm'): 5, ('display general', 'retina display', 'great', 'gorgeous'): 5}
output quads: ['[A] null [O] charm [S] great [C] laptop operation_performance', '[A] retina display [O] gorgeous [S] great [C] display general']
multi_path: ['[A] it [O] charm [S] great [C] laptop operation_performance [SSEP] [A] retina display [O] gorgeous [S] great [C] display general', '[A] it [S] great [O] charm [C] laptop operation_performance [SSEP] [A] retina display [S] great [O] gorgeous [C] display general', '[A] it [O] charm [C] laptop operation_performance [S] great [SSEP] [A] retina display [O] gorgeous [C] display general [S] great', '[O] charm [A] it [S] great [C] laptop operation_performance [SSEP] [O] gorgeous [A] retina display [S] great [C] display general', '[O] charm [A] it [C] laptop operation_performance [S] great [SSEP] [O] gorgeous [A] retina display [C] display general [S] great']

task, data: acos laptop16
target: [('shipping operation_performance', 'null', 'great', 'excellent')]
output: ['[A] laptop [O] excellent [S] great [C] shipping general']
sent: ['the', 'laptop', 'arrived', 'in', 'excellent', 'condition', '.']
counter: {('shipping general', 'laptop', 'great', 'excellent'): 5}
output quads: ['[A] laptop [O] excellent [S] great [C] shipping general']
multi_path: ['[A] laptop [O] excellent [S] great [C] shipping general', '[A] laptop [S] great [O] excellent [C] shipping general', '[A] laptop [O] excellent [C] shipping general [S] great', '[O] excellent [A] laptop [S] great [C] shipping general', '[O] excellent [A] laptop [C] shipping general [S] great']

task, data: acos laptop16
target: [('software general', 'programs', 'great', 'love')]
output: ['[A] mac [O] love [S] great [C] laptop design_features', '[A] mac [O] null [S] great [C] laptop operation_performance', '[A] programs [O] love [S] great [C] software general']
sent: ['i', 'absolutely', 'love', 'the', 'programs', 'that', 'come', 'with', 'it', ';', 'how', 'the', 'mac', 'itself', 'functions', ',', 'the', 'appearance', 'and', 'quality', 'of', 'the', 'mac', '.']
counter: {('software general', 'programs', 'great', 'love'): 5, ('laptop operation_performance', 'mac', 'great', 'null'): 5, ('laptop design_features', 'mac', 'great', 'love'): 5}
output quads: ['[A] programs [O] love [S] great [C] software general', '[A] mac [O] null [S] great [C] laptop operation_performance', '[A] mac [O] love [S] great [C] laptop design_features']
multi_path: ['[A] programs [O] love [S] great [C] software general [SSEP] [A] mac [O] null [S] great [C] laptop operation_performance [SSEP] [A] mac [O] love [S] great [C] laptop design_features', '[A] programs [S] great [O] love [C] software general [SSEP] [A] mac [S] great [O] null [C] laptop operation_performance [SSEP] [A] mac [S] great [O] love [C] laptop design_features', '[A] programs [O] love [C] software general [S] great [SSEP] [A] mac [O] null [C] laptop operation_performance [S] great [SSEP] [A] mac [O] love [C] laptop design_features [S] great', '[O] love [A] programs [S] great [C] software general [SSEP] [O] null [A] mac [S] great [C] laptop operation_performance [SSEP] [O] love [A] mac [S] great [C] laptop design_features', '[O] love [A] programs [C] software general [S] great [SSEP] [O] null [A] mac [C] laptop operation_performance [S] great [SSEP] [O] love [A] mac [C] laptop design_features [S] great']

task, data: acos laptop16
target: [('hard_disc operation_performance', 'ss hard drive', 'great', 'null')]
output: ['[A] ss hard drive [O] null [S] great [C] hard_disc design_features']
sent: ['the', 'ss', 'hard', 'drive', 'has', 'next', 'to', 'zero', 'lag', 'over', 'traditional', 'drives', '.']
counter: {('hard_disc design_features', 'ss hard drive', 'great', 'null'): 5}
output quads: ['[A] ss hard drive [O] null [S] great [C] hard_disc design_features']
multi_path: ['[A] ss hard drive [O] null [S] great [C] hard_disc design_features', '[A] ss hard drive [S] great [O] null [C] hard_disc design_features', '[A] ss hard drive [O] null [C] hard_disc design_features [S] great', '[O] null [A] ss hard drive [S] great [C] hard_disc design_features', '[O] null [A] ss hard drive [C] hard_disc design_features [S] great']

task, data: acos laptop16
target: [('laptop design_features', 'null', 'great', 'like')]
output: ['[A] null [O] like [S] great [C] laptop design_features', '[A] null [O] t bulky [S] great [C] laptop design_features']
sent: ['i', 'really', 'like', 'how', 'it', 'isn', "'", 't', 'bulky', '.']
counter: {('laptop design_features', 'null', 'great', 'like'): 5, ('laptop design_features', 'null', 'great', 't bulky'): 5}
output quads: ['[A] null [O] like [S] great [C] laptop design_features', '[A] null [O] t bulky [S] great [C] laptop design_features']
multi_path: ["[A] it [O] like [S] great [C] laptop design_features [SSEP] [A] it [O]'t bulky [S] great [C] laptop design_features", "[A] it [S] great [O] like [C] laptop design_features [SSEP] [A] it [S] great [O]'t bulky [C] laptop design_features", "[A] it [O] like [C] laptop design_features [S] great [SSEP] [A] it [O]'t bulky [C] laptop design_features [S] great", "[O] like [A] it [S] great [C] laptop design_features [SSEP] [O]'t bulky [A] it [S] great [C] laptop design_features", "[O] like [A] it [C] laptop design_features [S] great [SSEP] [O]'t bulky [A] it [C] laptop design_features [S] great"]

task, data: acos laptop16
target: [('laptop usability', 'macbook', 'great', 'great')]
output: ['[A] macbook [O] great [S] great [C] laptop operation_performance']
sent: ['however', ',', 'i', 'have', 'an', 'iphone', 'and', 'an', 'ipad', 'and', 'the', 'macbook', 'does', 'a', 'great', 'job', 'syncing', 'up', 'everything', 'on', 'all', 'three', 'devises', '.']
counter: {('laptop operation_performance', 'macbook', 'great', 'great'): 5}
output quads: ['[A] macbook [O] great [S] great [C] laptop operation_performance']
multi_path: ['[A] macbook [O] great [S] great [C] laptop operation_performance', '[A] macbook [S] great [O] great [C] laptop operation_performance', '[A] macbook [O] great [C] laptop operation_performance [S] great', '[O] great [A] macbook [S] great [C] laptop operation_performance', '[O] great [A] macbook [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('laptop operation_performance', 'laptop', 'great', 'perfect'), ('power_supply quality', 'charger', 'bad', 'null')]
output: ['[A] charger [O] null [S] bad [C] power_supply operation_performance', '[A] laptop [O] perfect [S] great [C] laptop operation_performance']
sent: ['laptop', 'works', 'perfect', 'however', 'i', 'did', 'get', 'a', 'used', 'charger', 'that', 'only', 'lasted', 'a', 'week', '.']
counter: {('laptop operation_performance', 'laptop', 'great', 'perfect'): 5, ('power_supply operation_performance', 'charger', 'bad', 'null'): 5}
output quads: ['[A] laptop [O] perfect [S] great [C] laptop operation_performance', '[A] charger [O] null [S] bad [C] power_supply operation_performance']
multi_path: ['[A] laptop [O] perfect [S] great [C] laptop operation_performance [SSEP] [A] charger [O] null [S] bad [C] power_supply operation_performance', '[A] laptop [S] great [O] perfect [C] laptop operation_performance [SSEP] [A] charger [S] bad [O] null [C] power_supply operation_performance', '[A] laptop [O] perfect [C] laptop operation_performance [S] great [SSEP] [A] charger [O] null [C] power_supply operation_performance [S] bad', '[O] perfect [A] laptop [S] great [C] laptop operation_performance [SSEP] [O] null [A] charger [S] bad [C] power_supply operation_performance', '[O] perfect [A] laptop [C] laptop operation_performance [S] great [SSEP] [O] null [A] charger [C] power_supply operation_performance [S] bad']

task, data: acos laptop16
target: [('company general', 'apple products', 'great', 'best')]
output: ['[A] apple products [O] best [S] great [C] laptop general', '[A] apple products [O] null [S] bad [C] laptop price']
sent: ['costs', 'a', 'few', 'bucks', '$', '$', '$', 'more', 'but', 'apple', 'products', 'are', 'the', 'best', 'on', 'the', 'market', '.']
counter: {('laptop price', 'apple products', 'bad', 'null'): 5, ('laptop general', 'apple products', 'great', 'best'): 5}
output quads: ['[A] apple products [O] null [S] bad [C] laptop price', '[A] apple products [O] best [S] great [C] laptop general']
multi_path: ['[A] apple products [O] null [S] bad [C] laptop price [SSEP] [A] apple products [O] best [S] great [C] laptop general', '[A] apple products [S] bad [O] null [C] laptop price [SSEP] [A] apple products [S] great [O] best [C] laptop general', '[A] apple products [O] null [C] laptop price [S] bad [SSEP] [A] apple products [O] best [C] laptop general [S] great', '[O] null [A] apple products [S] bad [C] laptop price [SSEP] [O] best [A] apple products [S] great [C] laptop general', '[O] null [A] apple products [C] laptop price [S] bad [SSEP] [O] best [A] apple products [C] laptop general [S] great']

task, data: acos laptop16
target: [('battery quality', 'battery life', 'great', 'fantastic'), ('laptop operation_performance', 'computer', 'great', 'great')]
output: ['[A] battery life [O] fantastic [S] great [C] battery operation_performance', '[A] computer [O] great [S] great [C] laptop operation_performance']
sent: ['this', 'computer', 'is', 'great', 'for', 'playing', 'videos', 'in', 'a', 'classroom', 'setting', 'of', '10', 'people', ',', 'connecting', 'to', 'an', 'hdmi', 'tv', 'to', 'show', 'videos', 'and', 'powerpoints', ',', 'and', 'has', 'a', 'fantastic', 'battery', 'life', '.']
counter: {('laptop operation_performance', 'computer', 'great', 'great'): 5, ('battery operation_performance', 'battery life', 'great', 'fantastic'): 5}
output quads: ['[A] computer [O] great [S] great [C] laptop operation_performance', '[A] battery life [O] fantastic [S] great [C] battery operation_performance']
multi_path: ['[A] computer [O] great [S] great [C] laptop operation_performance [SSEP] [A] battery life [O] fantastic [S] great [C] battery operation_performance', '[A] computer [S] great [O] great [C] laptop operation_performance [SSEP] [A] battery life [S] great [O] fantastic [C] battery operation_performance', '[A] computer [O] great [C] laptop operation_performance [S] great [SSEP] [A] battery life [O] fantastic [C] battery operation_performance [S] great', '[O] great [A] computer [S] great [C] laptop operation_performance [SSEP] [O] fantastic [A] battery life [S] great [C] battery operation_performance', '[O] great [A] computer [C] laptop operation_performance [S] great [SSEP] [O] fantastic [A] battery life [C] battery operation_performance [S] great']

task, data: acos laptop16
target: [('laptop general', 'computer', 'great', 'null')]
output: ['[A] computer [O] null [S] great [C] laptop operation_performance', '[A] laptop [O] null [S] great [C] laptop operation_performance']
sent: ['i', "'", 've', 'been', 'using', 'this', 'laptop', 'for', '1', 'year', 'and', 'no', 'issues', 'with', 'the', 'deliver', 'nor', 'the', 'computer', '.']
counter: {('laptop operation_performance', 'laptop', 'great', 'null'): 5, ('laptop operation_performance', 'computer', 'great', 'null'): 5}
output quads: ['[A] laptop [O] null [S] great [C] laptop operation_performance', '[A] computer [O] null [S] great [C] laptop operation_performance']
multi_path: ['[A] laptop [O] null [S] great [C] laptop operation_performance [SSEP] [A] computer [O] null [S] great [C] laptop operation_performance', '[A] laptop [S] great [O] null [C] laptop operation_performance [SSEP] [A] computer [S] great [O] null [C] laptop operation_performance', '[A] laptop [O] null [C] laptop operation_performance [S] great [SSEP] [A] computer [O] null [C] laptop operation_performance [S] great', '[O] null [A] laptop [S] great [C] laptop operation_performance [SSEP] [O] null [A] computer [S] great [C] laptop operation_performance', '[O] null [A] laptop [C] laptop operation_performance [S] great [SSEP] [O] null [A] computer [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('laptop general', 'prodcut', 'great', 'great')]
output: ['[A] prodcut [O] great [S] great [C] software general']
sent: ['great', 'prodcut']
counter: {('software general', 'prodcut', 'great', 'great'): 5}
output quads: ['[A] prodcut [O] great [S] great [C] software general']
multi_path: ['[A] prodcut [O] great [S] great [C] software general', '[A] prodcut [S] great [O] great [C] software general', '[A] prodcut [O] great [C] software general [S] great', '[O] great [A] prodcut [S] great [C] software general', '[O] great [A] prodcut [C] software general [S] great']

task, data: acos laptop16
target: [('laptop design_features', '2016 model', 'bad', 'not like')]
output: ['[A] magsafe connector [O] null [S] bad [C] ports design_features', '[A] model [O] not like [S] bad [C] laptop design_features', '[A] ports [O] lack [S] bad [C] ports design_features']
sent: ['i', 'did', 'not', 'like', 'the', 'new', '2016', 'model', 'due', 'to', 'the', 'lack', 'of', 'ports', 'and', 'magsafe', 'connector', '.']
counter: {('laptop design_features', 'model', 'bad', 'not like'): 5, ('ports design_features', 'ports', 'bad', 'lack'): 5, ('ports design_features', 'magsafe connector', 'bad', 'null'): 3, ('ports design_features', 'magsafe connector', 'bad', 'lack'): 2}
output quads: ['[A] model [O] not like [S] bad [C] laptop design_features', '[A] ports [O] lack [S] bad [C] ports design_features', '[A] magsafe connector [O] null [S] bad [C] ports design_features']
multi_path: ['[A] model [O] not like [S] bad [C] laptop design_features [SSEP] [A] ports [O] lack [S] bad [C] ports design_features [SSEP] [A] magsafe connector [O] null [S] bad [C] ports design_features', '[A] model [S] bad [O] not like [C] laptop design_features [SSEP] [A] ports [S] bad [O] lack [C] ports design_features [SSEP] [A] magsafe connector [S] bad [O] null [C] ports design_features', '[A] model [O] not like [C] laptop design_features [S] bad [SSEP] [A] ports [O] lack [C] ports design_features [S] bad [SSEP] [A] magsafe connector [O] null [C] ports design_features [S] bad', '[O] not like [A] model [S] bad [C] laptop design_features [SSEP] [O] lack [A] ports [S] bad [C] ports design_features [SSEP] [O] lack [A] magsafe connector [S] bad [C] ports design_features', '[O] not like [A] model [C] laptop design_features [S] bad [SSEP] [O] lack [A] ports [C] ports design_features [S] bad [SSEP] [O] lack [A] magsafe connector [C] ports design_features [S] bad']

task, data: acos laptop16
target: [('laptop general', 'product', 'great', 'null'), ('shipping operation_performance', 'shipping', 'great', 'fast')]
output: ['[A] product [O] null [S] great [C] shipping quality', '[A] shipping [O] fast [S] great [C] shipping quality']
sent: ['shipping', 'was', 'fast', 'and', 'product', 'came', 'as', 'described', '.']
counter: {('shipping quality', 'shipping', 'great', 'fast'): 5, ('shipping quality', 'product', 'great', 'null'): 5}
output quads: ['[A] shipping [O] fast [S] great [C] shipping quality', '[A] product [O] null [S] great [C] shipping quality']
multi_path: ['[A] shipping [O] fast [S] great [C] shipping quality [SSEP] [A] product [O] null [S] great [C] shipping quality', '[A] shipping [S] great [O] fast [C] shipping quality [SSEP] [A] product [S] great [O] null [C] shipping quality', '[A] shipping [O] fast [C] shipping quality [S] great [SSEP] [A] product [O] null [C] shipping quality [S] great', '[O] fast [A] shipping [S] great [C] shipping quality [SSEP] [O] null [A] product [S] great [C] shipping quality', '[O] fast [A] shipping [C] shipping quality [S] great [SSEP] [O] null [A] product [C] shipping quality [S] great']

task, data: acos laptop16
target: [('laptop operation_performance', 'null', 'great', 'great'), ('laptop operation_performance', 'null', 'great', 'perfectly')]
output: ['[A] null [O] great [S] great [C] shipping general', '[A] null [O] perfectly [S] great [C] laptop operation_performance']
sent: ['it', 'arrived', 'in', 'great', 'condition', ',', 'and', 'it', "'", 's', 'been', 'working', 'perfectly', 'for', 'me', 'since', 'i', 'got', 'it', '.']
counter: {('shipping general', 'null', 'great', 'great'): 5, ('laptop operation_performance', 'null', 'great', 'perfectly'): 5}
output quads: ['[A] null [O] great [S] great [C] shipping general', '[A] null [O] perfectly [S] great [C] laptop operation_performance']
multi_path: ['[A] it [O] great [S] great [C] shipping general [SSEP] [A] it [O] perfectly [S] great [C] laptop operation_performance', '[A] it [S] great [O] great [C] shipping general [SSEP] [A] it [S] great [O] perfectly [C] laptop operation_performance', '[A] it [O] great [C] shipping general [S] great [SSEP] [A] it [O] perfectly [C] laptop operation_performance [S] great', '[O] great [A] it [S] great [C] shipping general [SSEP] [O] perfectly [A] it [S] great [C] laptop operation_performance', '[O] great [A] it [C] shipping general [S] great [SSEP] [O] perfectly [A] it [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('os quality', 'chrome os because', 'bad', 'null'), ('os usability', 'system', 'ok', 'nervous')]
output: ['[A] system [O] nervous [S] bad [C] os operation_performance']
sent: ['i', 'was', 'initially', 'a', 'little', 'nervous', 'as', 'the', 'system', 'was', 'somewhat', 'glitchy', 'for', 'the', 'first', 'couple', 'of', 'weeks', ',', 'seemed', 'to', 'be', 'a', 'problem', 'with', 'the', 'chrome', 'os', 'because', 'it', 'was', 'fixed', 'by', 'the', 'next', 'update', '.']
counter: {('os operation_performance', 'system', 'bad', 'nervous'): 3, ('os operation_performance', 'chrome os', 'bad', 'glitchy'): 1, ('os general', 'system', 'bad', 'nervous'): 2, ('os general', 'chrome os', 'bad', 'glitchy'): 2, ('os operation_performance', 'system', 'bad', 'glitchy'): 2}
output quads: ['[A] system [O] nervous [S] bad [C] os operation_performance']
multi_path: ['[A] system [O] nervous [S] bad [C] os operation_performance [SSEP] [A] chrome os [O] glitchy [S] bad [C] os operation_performance', '[A] system [S] bad [O] nervous [C] os general [SSEP] [A] chrome os [S] bad [O] glitchy [C] os general', '[A] system [O] nervous [C] os general [S] bad [SSEP] [A] chrome os [O] glitchy [C] os general [S] bad', '[O] nervous [A] system [S] bad [C] os operation_performance [SSEP] [O] glitchy [A] system [S] bad [C] os operation_performance', '[O] nervous [A] system [C] os operation_performance [S] bad [SSEP] [O] glitchy [A] system [C] os operation_performance [S] bad']

task, data: acos laptop16
target: [('display design_features', 'screen', 'ok', 'null')]
output: ['[A] screen [O] null [S] great [C] display operation_performance']
sent: ['screen', 'stays', 'in', 'whatever', 'position', 'you', 'put', 'it', 'solidly', 'enough', 'to', 'use', 'the', 'touchscreen', '.']
counter: {('display operation_performance', 'screen', 'great', 'null'): 5}
output quads: ['[A] screen [O] null [S] great [C] display operation_performance']
multi_path: ['[A] screen [O] null [S] great [C] display operation_performance', '[A] screen [S] great [O] null [C] display operation_performance', '[A] screen [O] null [C] display operation_performance [S] great', '[O] null [A] screen [S] great [C] display operation_performance', '[O] null [A] screen [C] display operation_performance [S] great']

task, data: acos laptop16
target: [('multimedia_devices design_features', 'speakers', 'bad', 'tinny'), ('multimedia_devices quality', 'speakers', 'great', 'awesome'), ('os operation_performance', 'chrome os', 'bad', 'null')]
output: ['[A] speakers [O] tinny [S] bad [C] multimedia_devices operation_performance', '[A] volume [O] awesome [S] great [C] multimedia_devices operation_performance']
sent: ['-', 'speakers', 'are', 'a', 'little', 'tinny', '(', 'though', 'the', 'volume', 'is', 'awesome', ')', 'and', 'it', "'", 's', 'not', 'possible', 'to', 'customize', 'the', 'equalizer', 'on', 'the', 'chrome', 'os', 'right', 'now', ':', '(']
counter: {('multimedia_devices operation_performance', 'speakers', 'bad', 'tinny'): 5, ('multimedia_devices operation_performance', 'volume', 'great', 'awesome'): 5}
output quads: ['[A] speakers [O] tinny [S] bad [C] multimedia_devices operation_performance', '[A] volume [O] awesome [S] great [C] multimedia_devices operation_performance']
multi_path: ['[A] speakers [O] tinny [S] bad [C] multimedia_devices operation_performance [SSEP] [A] volume [O] awesome [S] great [C] multimedia_devices operation_performance', '[A] speakers [S] bad [O] tinny [C] multimedia_devices operation_performance [SSEP] [A] volume [S] great [O] awesome [C] multimedia_devices operation_performance', '[A] speakers [O] tinny [C] multimedia_devices operation_performance [S] bad [SSEP] [A] volume [O] awesome [C] multimedia_devices operation_performance [S] great', '[O] tinny [A] speakers [S] bad [C] multimedia_devices operation_performance [SSEP] [O] awesome [A] volume [S] great [C] multimedia_devices operation_performance', '[O] tinny [A] speakers [C] multimedia_devices operation_performance [S] bad [SSEP] [O] awesome [A] volume [C] multimedia_devices operation_performance [S] great']

task, data: acos laptop16
target: [('laptop design_features', 'null', 'bad', 'null')]
output: ['[A] tablet [O] null [S] bad [C] laptop general']
sent: ['i', 'mean', ',', 'if', 'you', 'want', 'a', 'true', 'tablet', ',', 'buy', 'a', 'true', 'tablet', '-', '-', 'this', 'did', 'honestly', 'keep', 'me', 'from', 'investing', 'in', 'a', 'kindle', 'as', 'i', 'was', 'planning', 'to', '.']
counter: {('laptop general', 'tablet', 'bad', 'null'): 5}
output quads: ['[A] tablet [O] null [S] bad [C] laptop general']
multi_path: ['[A] tablet [O] null [S] bad [C] laptop general', '[A] tablet [S] bad [O] null [C] laptop general', '[A] tablet [O] null [C] laptop general [S] bad', '[O] null [A] tablet [S] bad [C] laptop general', '[O] null [A] tablet [C] laptop general [S] bad']

task, data: acos laptop16
target: [('keyboard design_features', 'keyboard', 'great', 'null'), ('laptop design_features', 'null', 'great', 'null')]
output: ['[A] keyboard [O] null [S] great [C] keyboard design_features', '[A] null [O] love [S] great [C] laptop design_features']
sent: ['i', 'love', 'that', 'it', 'is', 'only', 'as', 'big', 'as', 'it', 'needs', 'to', 'be', 'to', 'have', 'a', 'full', '-', 'size', 'keyboard', '(', 'not', 'with', 'a', 'number', 'pad', ',', 'but', 'full', '-', 'sized', 'keys', ')', '.']
counter: {('laptop design_features', 'null', 'great', 'love'): 5, ('keyboard design_features', 'keyboard', 'great', 'null'): 3}
output quads: ['[A] null [O] love [S] great [C] laptop design_features', '[A] keyboard [O] null [S] great [C] keyboard design_features']
multi_path: ['[A] it [O] love [S] great [C] laptop design_features', '[A] it [S] great [O] love [C] laptop design_features', '[A] it [O] love [C] laptop design_features [S] great [SSEP] [A] keyboard [O] null [C] keyboard design_features [S] great', '[O] love [A] it [S] great [C] laptop design_features [SSEP] [O] null [A] keyboard [S] great [C] keyboard design_features', '[O] love [A] it [C] laptop design_features [S] great [SSEP] [O] null [A] keyboard [C] keyboard design_features [S] great']

task, data: acos laptop16
target: [('software usability', 'null', 'ok', 'null')]
output: ['[A] null [O] null [S] great [C] laptop general']
sent: ['update', 'it', 'as', 'soon', 'as', 'you', 'turn', 'it', 'on', '!']
counter: {('laptop general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [O] null [S] great [C] laptop general']
multi_path: ['[A] it [O] null [S] great [C] laptop general', '[A] it [S] great [O] null [C] laptop general', '[A] it [O] null [C] laptop general [S] great', '[O] null [A] it [S] great [C] laptop general', '[O] null [A] it [C] laptop general [S] great']

task, data: acos laptop16
target: [('laptop general', 'windows 7 laptop', 'ok', 'null')]
output: ['[A] windows 7 laptop [O] null [S] bad [C] laptop general']
sent: ['my', 'trusty', 'windows', '7', 'laptop', 'was', 'on', 'its', 'last', 'leg', 'and', 'i', 'opted', 'to', 'try', 'something', 'new', '.']
counter: {('laptop general', 'windows 7 laptop', 'bad', 'null'): 3, ('os general', 'windows 7 laptop', 'bad', 'null'): 2}
output quads: ['[A] windows 7 laptop [O] null [S] bad [C] laptop general']
multi_path: ['[A] windows 7 laptop [O] null [S] bad [C] laptop general', '[A] windows 7 laptop [S] bad [O] null [C] laptop general', '[A] windows 7 laptop [O] null [C] os general [S] bad', '[O] null [A] windows 7 laptop [S] bad [C] laptop general', '[O] null [A] windows 7 laptop [C] os general [S] bad']

task, data: acos laptop16
target: [('hard_disc design_features', 'google drive online storage', 'great', 'null')]
output: ['[A] google drive online storage [O] null [S] great [C] software general']
sent: ['however', ',', 'it', 'comes', 'with', '100', 'gb', 'of', 'free', 'google', 'drive', 'online', 'storage', '.']
counter: {('software general', 'google drive online storage', 'great', 'null'): 5}
output quads: ['[A] google drive online storage [O] null [S] great [C] software general']
multi_path: ['[A] google drive online storage [O] null [S] great [C] software general', '[A] google drive online storage [S] great [O] null [C] software general', '[A] google drive online storage [O] null [C] software general [S] great', '[O] null [A] google drive online storage [S] great [C] software general', '[O] null [A] google drive online storage [C] software general [S] great']

task, data: acos laptop16
target: [('display general', 'touchscreen', 'great', 'good'), ('display operation_performance', 'touchscreen', 'great', 'responsive'), ('keyboard general', 'keyboard', 'great', 'nice')]
output: ['[A] keyboard [O] nice [S] great [C] keyboard general', '[A] touchscreen [O] good [S] great [C] display design_features', '[A] touchscreen [O] responsive [S] great [C] display operation_performance']
sent: ['the', 'touchscreen', 'looks', 'good', 'and', 'is', 'responsive', ',', 'and', 'the', 'keyboard', 'is', 'nice', '.']
counter: {('display design_features', 'touchscreen', 'great', 'good'): 5, ('display operation_performance', 'touchscreen', 'great', 'responsive'): 5, ('keyboard general', 'keyboard', 'great', 'nice'): 5}
output quads: ['[A] touchscreen [O] good [S] great [C] display design_features', '[A] touchscreen [O] responsive [S] great [C] display operation_performance', '[A] keyboard [O] nice [S] great [C] keyboard general']
multi_path: ['[A] touchscreen [O] good [S] great [C] display design_features [SSEP] [A] touchscreen [O] responsive [S] great [C] display operation_performance [SSEP] [A] keyboard [O] nice [S] great [C] keyboard general', '[A] touchscreen [S] great [O] good [C] display design_features [SSEP] [A] touchscreen [S] great [O] responsive [C] display operation_performance [SSEP] [A] keyboard [S] great [O] nice [C] keyboard general', '[A] touchscreen [O] good [C] display design_features [S] great [SSEP] [A] touchscreen [O] responsive [C] display operation_performance [S] great [SSEP] [A] keyboard [O] nice [C] keyboard general [S] great', '[O] good [A] touchscreen [S] great [C] display design_features [SSEP] [O] responsive [A] touchscreen [S] great [C] display operation_performance [SSEP] [O] nice [A] keyboard [S] great [C] keyboard general', '[O] good [A] touchscreen [C] display design_features [S] great [SSEP] [O] responsive [A] touchscreen [C] display operation_performance [S] great [SSEP] [O] nice [A] keyboard [C] keyboard general [S] great']

task, data: acos laptop16
target: [('ports general', 'internet access', 'great', 'null')]
output: ['[A] chromebooks [O] null [S] bad [C] laptop general']
sent: ['people', 'who', 'complain', 'that', 'chromebooks', 'are', 'useless', 'without', 'internet', 'access', 'clearly', 'are', 'narrow', 'minded', 'and', 'simply', 'not', 'thinking', 'outside', 'the', 'box', '.']
counter: {('laptop general', 'chromebooks', 'bad', 'useless'): 2, ('laptop general', 'chromebooks', 'bad', 'null'): 3}
output quads: ['[A] chromebooks [O] null [S] bad [C] laptop general']
multi_path: ['[A] chromebooks [O] useless [S] bad [C] laptop general', '[A] chromebooks [S] bad [O] null [C] laptop general', '[A] chromebooks [O] useless [C] laptop general [S] bad', '[O] null [A] chromebooks [S] bad [C] laptop general', '[O] null [A] chromebooks [C] laptop general [S] bad']

task, data: acos laptop16
target: [('software general', 'screenwriting app', 'great', 'favorite')]
output: ['[A] screenwriting app [O] favorite [S] bad [C] software general']
sent: ['so', 'i', 'went', 'to', 'install', 'my', 'favorite', 'screenwriting', 'app', ',', 'trelby', ',', 'only', 'to', 'find', 'its', 'not', 'available', '.']
counter: {('software general', 'screenwriting app', 'bad', 'favorite'): 3, ('software general', 'screenwriting app', 'bad', 'null'): 2}
output quads: ['[A] screenwriting app [O] favorite [S] bad [C] software general']
multi_path: ['[A] screenwriting app [O] favorite [S] bad [C] software general', '[A] screenwriting app [S] bad [O] favorite [C] software general', '[A] screenwriting app [O] favorite [C] software general [S] bad', '[O] null [A] screenwriting app [S] bad [C] software general', '[O] null [A] screenwriting app [C] software general [S] bad']

task, data: acos laptop16
target: [('laptop general', 'studio desktop', 'ok', 'null')]
output: ['[A] studio desktop [O] null [S] great [C] laptop usability']
sent: ['and', 'just', 'like', 'that', ',', 'i', 'realized', 'that', 'i', 'can', 'use', 'my', 'studio', 'desktop', 'wherever', 'i', 'want', ',', 'whenever', 'i', 'want', '.']
counter: {('laptop usability', 'studio desktop', 'great', 'null'): 5}
output quads: ['[A] studio desktop [O] null [S] great [C] laptop usability']
multi_path: ['[A] studio desktop [O] null [S] great [C] laptop usability', '[A] studio desktop [S] great [O] null [C] laptop usability', '[A] studio desktop [O] null [C] laptop usability [S] great', '[O] null [A] studio desktop [S] great [C] laptop usability', '[O] null [A] studio desktop [C] laptop usability [S] great']

task, data: acos laptop16
target: [('keyboard design_features', 'null', 'bad', 'null')]
output: ['[A] null [O] loud [S] bad [C] hardware operation_performance']
sent: ['it', 'does', 'make', 'quite', 'a', 'loud', 'click', 'when', 'you', 'depress', 'the', 'button', '.']
counter: {('hardware operation_performance', 'null', 'bad', 'loud'): 3, ('keyboard operation_performance', 'null', 'bad', 'loud'): 2}
output quads: ['[A] null [O] loud [S] bad [C] hardware operation_performance']
multi_path: ['[A] it [O] loud [S] bad [C] hardware operation_performance', '[A] it [S] bad [O] loud [C] keyboard operation_performance', '[A] it [O] loud [C] keyboard operation_performance [S] bad', '[O] loud [A] it [S] bad [C] hardware operation_performance', '[O] loud [A] it [C] hardware operation_performance [S] bad']

task, data: acos laptop16
target: [('laptop price', 'model', 'great', 'like')]
output: ['[A] null [O] happy [S] great [C] laptop price', '[A] null [O] like [S] great [C] laptop general']
sent: ['overall', ':', 'i', 'like', 'it', 'and', 'am', 'happy', 'for', 'paying', 'a', 'bit', 'over', '$', '200', 'for', 'the', '4gb', 'model', '(', 'at', 'the', 'time', 'of', 'writing', 'this', ',', 'it', 'sells', 'for', '$', '220', 'new', ')', '.']
counter: {('laptop general', 'null', 'great', 'like'): 5, ('laptop price', 'null', 'great', 'happy'): 3, ('laptop price', 'model', 'great', 'happy'): 2}
output quads: ['[A] null [O] like [S] great [C] laptop general', '[A] null [O] happy [S] great [C] laptop price']
multi_path: ['[A] it [O] like [S] great [C] laptop general [SSEP] [A] it [O] happy [S] great [C] laptop price', '[A] it [S] great [O] like [C] laptop general [SSEP] [A] it [S] great [O] happy [C] laptop price', '[A] it [O] like [C] laptop general [S] great [SSEP] [A] it [O] happy [C] laptop price [S] great', '[O] like [A] it [S] great [C] laptop general [SSEP] [O] happy [A] model [S] great [C] laptop price', '[O] like [A] it [C] laptop general [S] great [SSEP] [O] happy [A] model [C] laptop price [S] great']

task, data: acos laptop16
target: [('fans&cooling quality', 'fan - less device', 'great', 'happy'), ('fans&cooling quality', 'fan - less device', 'great', 'quiet')]
output: ['[A] device [O] quiet [S] great [C] laptop operation_performance', '[A] fan [O] happy [S] great [C] fans&cooling design_features']
sent: ['one', 'plus', 'i', "'", 'm', 'particularly', 'happy', 'about', ':', 'a', 'quiet', 'fan', '-', 'less', 'device', 'that', 'doesn', "'", 't', 'heat', 'up', 'too', 'much', '!']
counter: {('fans&cooling design_features', 'fan', 'great', 'happy'): 5, ('laptop operation_performance', 'device', 'great', 'quiet'): 3, ('laptop design_features', 'device', 'great', 'quiet'): 2}
output quads: ['[A] fan [O] happy [S] great [C] fans&cooling design_features', '[A] device [O] quiet [S] great [C] laptop operation_performance']
multi_path: ['[A] fan [O] happy [S] great [C] fans&cooling design_features [SSEP] [A] device [O] quiet [S] great [C] laptop operation_performance', '[A] fan [S] great [O] happy [C] fans&cooling design_features [SSEP] [A] device [S] great [O] quiet [C] laptop design_features', '[A] fan [O] happy [C] fans&cooling design_features [S] great [SSEP] [A] device [O] quiet [C] laptop operation_performance [S] great', '[O] happy [A] fan [S] great [C] fans&cooling design_features [SSEP] [O] quiet [A] device [S] great [C] laptop design_features', '[O] happy [A] fan [C] fans&cooling design_features [S] great [SSEP] [O] quiet [A] device [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('laptop quality', 'chromebook', 'bad', 'hesitant')]
output: ['[A] chromebook [O] hesitant [S] bad [C] laptop general']
sent: ['i', 'have', 'to', 'say', ',', 'i', 'was', 'somewhat', 'hesitant', 'purchasing', 'this', 'chromebook', 'mainly', 'because', 'of', 'some', 'of', 'the', 'reviews', '.']
counter: {('laptop general', 'chromebook', 'bad', 'hesitant'): 5}
output quads: ['[A] chromebook [O] hesitant [S] bad [C] laptop general']
multi_path: ['[A] chromebook [O] hesitant [S] bad [C] laptop general', '[A] chromebook [S] bad [O] hesitant [C] laptop general', '[A] chromebook [O] hesitant [C] laptop general [S] bad', '[O] hesitant [A] chromebook [S] bad [C] laptop general', '[O] hesitant [A] chromebook [C] laptop general [S] bad']

task, data: acos laptop16
target: [('support general', 'return policy', 'great', 'excellent')]
output: ['[A] prime [O] excellent [S] great [C] laptop general']
sent: ['due', 'to', 'the', 'excellent', 'return', 'policy', 'on', 'prime', 'i', 'decided', 'to', 'purchase', 'this', '.']
counter: {('laptop general', 'prime', 'great', 'excellent'): 3, ('support general', 'return policy', 'great', 'excellent'): 2}
output quads: ['[A] prime [O] excellent [S] great [C] laptop general']
multi_path: ['[A] prime [O] excellent [S] great [C] laptop general', '[A] prime [S] great [O] excellent [C] laptop general', '[A] prime [O] excellent [C] laptop general [S] great', '[O] excellent [A] return policy [S] great [C] support general', '[O] excellent [A] return policy [C] support general [S] great']

task, data: acos laptop16
target: [('multimedia_devices operation_performance', 'null', 'great', 'fine')]
output: ['[A] pandora [O] fine [S] great [C] software operation_performance']
sent: ['i', 'downloaded', 'pandora', 'and', 'listened', 'to', 'all', 'my', 'stations', 'at', '3', '/', '4', 'volume', 'and', 'it', 'sounded', 'fine', '.']
counter: {('software operation_performance', 'pandora', 'great', 'fine'): 5}
output quads: ['[A] pandora [O] fine [S] great [C] software operation_performance']
multi_path: ['[A] pandora [O] fine [S] great [C] software operation_performance', '[A] pandora [S] great [O] fine [C] software operation_performance', '[A] pandora [O] fine [C] software operation_performance [S] great', '[O] fine [A] pandora [S] great [C] software operation_performance', '[O] fine [A] pandora [C] software operation_performance [S] great']

task, data: acos laptop16
target: [('software operation_performance', 'android apps', 'great', 'properly')]
output: ['[A] android apps [O] null [S] ok [C] software operation_performance']
sent: ['so', 'far', 'all', 'but', '1', 'of', 'the', 'android', 'apps', 'that', 'i', 'have', 'tried', 'have', 'functioned', 'properly', ',', 'but', 'some', 'are', 'restricted', 'in', 'the', 'size', 'of', 'window', 'that', 'will', 'work', 'properly', '.']
counter: {('software operation_performance', 'android apps', 'ok', 'null'): 5}
output quads: ['[A] android apps [O] null [S] ok [C] software operation_performance']
multi_path: ['[A] android apps [O] null [S] ok [C] software operation_performance', '[A] android apps [S] ok [O] null [C] software operation_performance', '[A] android apps [O] null [C] software operation_performance [S] ok', '[O] null [A] android apps [S] ok [C] software operation_performance', '[O] null [A] android apps [C] software operation_performance [S] ok']

task, data: acos laptop16
target: [('display design_features', 'screen', 'bad', 'grimy'), ('fans&cooling general', 'air vent', 'bad', 'null'), ('laptop design_features', 'laptop', 'bad', 'dirty')]
output: ['[A] laptop [O] dirty [S] bad [C] laptop quality', '[A] screen [O] grimy [S] bad [C] display quality']
sent: ['laptop', 'arrived', 'dirty', '(', 'grimy', 'screen', 'and', 'there', 'was', 'actual', 'pet', 'hair', 'in', 'the', 'air', 'vent', ')', '.']
counter: {('laptop quality', 'laptop', 'bad', 'dirty'): 5, ('display quality', 'screen', 'bad', 'grimy'): 5, ('fans&cooling quality', 'air vent', 'bad', 'null'): 1}
output quads: ['[A] laptop [O] dirty [S] bad [C] laptop quality', '[A] screen [O] grimy [S] bad [C] display quality']
multi_path: ['[A] laptop [O] dirty [S] bad [C] laptop quality [SSEP] [A] screen [O] grimy [S] bad [C] display quality [SSEP] [A] air vent [O] null [S] bad [C] fans&cooling quality', '[A] laptop [S] bad [O] dirty [C] laptop quality [SSEP] [A] screen [S] bad [O] grimy [C] display quality', '[A] laptop [O] dirty [C] laptop quality [S] bad [SSEP] [A] screen [O] grimy [C] display quality [S] bad', '[O] dirty [A] laptop [S] bad [C] laptop quality [SSEP] [O] grimy [A] screen [S] bad [C] display quality', '[O] dirty [A] laptop [C] laptop quality [S] bad [SSEP] [O] grimy [A] screen [C] display quality [S] bad']

task, data: acos laptop16
target: [('os operation_performance', "mac's os", 'bad', 'null'), ('support general', 'seller', 'ok', 'not blaming'), ('support general', 'services', 'bad', 'glitchy')]
output: ["[A] mac's os [O] glitchy [S] bad [C] os operation_performance"]
sent: ['i', 'am', 'not', 'blaming', 'the', 'seller', ',', 'i', 'am', 'blaming', 'mac', "'", 's', 'os', 'and', 'its', 'glitchy', 'services', '.']
counter: {('os operation_performance', "mac's os", 'bad', 'glitchy'): 5}
output quads: ["[A] mac's os [O] glitchy [S] bad [C] os operation_performance"]
multi_path: ["[A] mac's os [O] glitchy [S] bad [C] os operation_performance", "[A] mac's os [S] bad [O] glitchy [C] os operation_performance", "[A] mac's os [O] glitchy [C] os operation_performance [S] bad", "[O] glitchy [A] mac's os [S] bad [C] os operation_performance", "[O] glitchy [A] mac's os [C] os operation_performance [S] bad"]

task, data: acos laptop16
target: [('battery general', 'battery', 'great', 'ok'), ('laptop design_features', 'null', 'great', 'aesthetically'), ('laptop design_features', 'null', 'great', 'pleasing'), ('laptop general', 'null', 'great', 'happy')]
output: ['[A] battery [O] ok [S] ok [C] battery general', '[A] null [O] happy [S] great [C] laptop general', '[A] null [O] pleasing [S] great [C] laptop design_features']
sent: ['but', 'currently', 'i', 'am', 'happy', 'with', 'it', ',', 'the', 'battery', 'is', 'ok', ',', 'and', 'its', 'very', 'aesthetically', 'pleasing', '.']
counter: {('laptop general', 'null', 'great', 'happy'): 5, ('battery general', 'battery', 'ok', 'ok'): 5, ('laptop design_features', 'null', 'great', 'pleasing'): 5}
output quads: ['[A] null [O] happy [S] great [C] laptop general', '[A] battery [O] ok [S] ok [C] battery general', '[A] null [O] pleasing [S] great [C] laptop design_features']
multi_path: ['[A] it [O] happy [S] great [C] laptop general [SSEP] [A] battery [O] ok [S] ok [C] battery general [SSEP] [A] it [O] pleasing [S] great [C] laptop design_features', '[A] it [S] great [O] happy [C] laptop general [SSEP] [A] battery [S] ok [O] ok [C] battery general [SSEP] [A] it [S] great [O] pleasing [C] laptop design_features', '[A] it [O] happy [C] laptop general [S] great [SSEP] [A] battery [O] ok [C] battery general [S] ok [SSEP] [A] it [O] pleasing [C] laptop design_features [S] great', '[O] happy [A] it [S] great [C] laptop general [SSEP] [O] ok [A] battery [S] ok [C] battery general [SSEP] [O] pleasing [A] it [S] great [C] laptop design_features', '[O] happy [A] it [C] laptop general [S] great [SSEP] [O] ok [A] battery [C] battery general [S] ok [SSEP] [O] pleasing [A] it [C] laptop design_features [S] great']

task, data: acos laptop16
target: [('hardware general', 'power button', 'ok', 'null'), ('hardware quality', 'trackpad', 'bad', 'null'), ('keyboard quality', 'keyboard', 'bad', 'null'), ('laptop general', 'macbook pro', 'bad', 'null')]
output: ['[A] keyboard [O] null [S] bad [C] keyboard operation_performance', '[A] power button [O] null [S] bad [C] keyboard quality', '[A] trackpad [O] null [S] bad [C] hardware operation_performance']
sent: ['ordered', 'a', 'macbook', 'pro', '13inch', '256gb', 'from', 'this', 'seller', 'and', 'with', 'the', 'exception', 'of', 'the', 'power', 'button', ',', 'the', 'keyboard', 'and', 'the', 'trackpad', 'wasn', "'", 't', 'working', '.']
counter: {('keyboard quality', 'power button', 'bad', 'exception'): 2, ('keyboard operation_performance', 'keyboard', 'bad', 'null'): 5, ('hardware operation_performance', 'trackpad', 'bad', 'null'): 5, ('keyboard quality', 'power button', 'bad', 'null'): 3}
output quads: ['[A] keyboard [O] null [S] bad [C] keyboard operation_performance', '[A] trackpad [O] null [S] bad [C] hardware operation_performance', '[A] power button [O] null [S] bad [C] keyboard quality']
multi_path: ['[A] power button [O] exception [S] bad [C] keyboard quality [SSEP] [A] keyboard [O] null [S] bad [C] keyboard operation_performance [SSEP] [A] trackpad [O] null [S] bad [C] hardware operation_performance', '[A] power button [S] bad [O] null [C] keyboard quality [SSEP] [A] keyboard [S] bad [O] null [C] keyboard operation_performance [SSEP] [A] trackpad [S] bad [O] null [C] hardware operation_performance', '[A] power button [O] exception [C] keyboard quality [S] bad [SSEP] [A] keyboard [O] null [C] keyboard operation_performance [S] bad [SSEP] [A] trackpad [O] null [C] hardware operation_performance [S] bad', '[O] null [A] power button [S] bad [C] keyboard quality [SSEP] [O] null [A] keyboard [S] bad [C] keyboard operation_performance [SSEP] [O] null [A] trackpad [S] bad [C] hardware operation_performance', '[O] null [A] power button [C] keyboard quality [S] bad [SSEP] [O] null [A] keyboard [C] keyboard operation_performance [S] bad [SSEP] [O] null [A] trackpad [C] hardware operation_performance [S] bad']

task, data: acos laptop16
target: [('support general', 'seller', 'bad', 'null')]
output: ['[A] seller [O] null [S] bad [C] laptop general']
sent: ['the', 'seller', "'", 's', 'description', 'is', 'that', 'it', 'was', '`', '`', 'tested', 'and', 'fully', 'functional', '`', '`', 'and', 'it', 'wasn', "'", 't', '.']
counter: {('laptop general', 'seller', 'bad', 'null'): 5}
output quads: ['[A] seller [O] null [S] bad [C] laptop general']
multi_path: ['[A] seller [O] null [S] bad [C] laptop general', '[A] seller [S] bad [O] null [C] laptop general', '[A] seller [O] null [C] laptop general [S] bad', '[O] null [A] seller [S] bad [C] laptop general', '[O] null [A] seller [C] laptop general [S] bad']

task, data: acos laptop16
target: [('laptop quality', 'laptop', 'bad', 'null')]
output: ['[A] laptop [O] null [S] bad [C] laptop design_features']
sent: ['update', ':', 'apparently', 'the', 'laptop', 'sold', 'to', 'me', 'was', 'missing', '5', 'screws', 'on', 'the', 'inside', 'that', 'actually', 'holds', 'everything', 'together', '.']
counter: {('laptop design_features', 'laptop', 'bad', 'null'): 5}
output quads: ['[A] laptop [O] null [S] bad [C] laptop design_features']
multi_path: ['[A] laptop [O] null [S] bad [C] laptop design_features', '[A] laptop [S] bad [O] null [C] laptop design_features', '[A] laptop [O] null [C] laptop design_features [S] bad', '[O] null [A] laptop [S] bad [C] laptop design_features', '[O] null [A] laptop [C] laptop design_features [S] bad']

task, data: acos laptop16
target: [('power_supply design_features', 'charger', 'great', 'great')]
output: ['[A] charger [O] great [S] great [C] power_supply general']
sent: ['while', 'yes', ',', 'the', 'charger', 'does', 'look', 'great', 'coming', 'out', 'of', 'the', 'box', ',', 'plan', 'on', 'buying', 'another', 'shortly', 'thereafter', '-', 'and', 'after', ',', 'as', 'long', 'as', 'your', 'patience', 'holds', 'up', '.']
counter: {('power_supply general', 'charger', 'great', 'great'): 5}
output quads: ['[A] charger [O] great [S] great [C] power_supply general']
multi_path: ['[A] charger [O] great [S] great [C] power_supply general', '[A] charger [S] great [O] great [C] power_supply general', '[A] charger [O] great [C] power_supply general [S] great', '[O] great [A] charger [S] great [C] power_supply general', '[O] great [A] charger [C] power_supply general [S] great']

task, data: acos laptop16
target: [('support general', 'apple', 'bad', 'null')]
output: ['[A] apple [O] null [S] bad [C] company general']
sent: ['do', 'not', 'waste', 'your', 'time', 'calling', 'apple', 'to', 'see', 'if', 'there', 'is', 'anything', 'they', 'can', 'do', 'about', 'it', 'after', '1', 'year', '(', 'unless', 'of', 'course', 'you', 'want', 'to', 'pay', 'even', 'more', 'money', 'on', "'", 'apple', 'care', "'", ')', '.']
counter: {('company general', 'apple', 'bad', 'null'): 5}
output quads: ['[A] apple [O] null [S] bad [C] company general']
multi_path: ['[A] apple [O] null [S] bad [C] company general', '[A] apple [S] bad [O] null [C] company general', '[A] apple [O] null [C] company general [S] bad', '[O] null [A] apple [S] bad [C] company general', '[O] null [A] apple [C] company general [S] bad']

task, data: acos laptop16
target: [('laptop general', 'computer', 'great', 'love'), ('laptop general', 'macbook', 'great', 'love')]
output: ['[A] computer [O] love [S] great [C] laptop general', '[A] null [O] null [S] bad [C] laptop general']
sent: ['as', 'much', 'as', 'i', 'love', 'the', 'computer', ',', 'and', 'tout', 'macbook', 'to', 'all', 'my', 'friends', ',', 'for', 'me', ',', 'it', 'stops', 'here', 'and', 'now', '.']
counter: {('laptop general', 'computer', 'great', 'love'): 5, ('laptop general', 'null', 'bad', 'null'): 5}
output quads: ['[A] computer [O] love [S] great [C] laptop general', '[A] null [O] null [S] bad [C] laptop general']
multi_path: ['[A] computer [O] love [S] great [C] laptop general [SSEP] [A] it [O] null [S] bad [C] laptop general', '[A] computer [S] great [O] love [C] laptop general [SSEP] [A] it [S] bad [O] null [C] laptop general', '[A] computer [O] love [C] laptop general [S] great [SSEP] [A] it [O] null [C] laptop general [S] bad', '[O] love [A] computer [S] great [C] laptop general [SSEP] [O] null [A] it [S] bad [C] laptop general', '[O] love [A] computer [C] laptop general [S] great [SSEP] [O] null [A] it [C] laptop general [S] bad']

task, data: acos laptop16
target: [('laptop quality', 'anti - reflective coating', 'bad', 'null'), ('warranty general', "apple's warranty", 'ok', 'null')]
output: ['[A] anti - reflective coating [O] null [S] bad [C] laptop quality', "[A] apple's warranty [O] null [S] bad [C] warranty general"]
sent: ['the', 'anti', '-', 'reflective', 'coating', 'will', 'wear', 'off', 'and', 'it', 'isn', "'", 't', 'covered', 'under', 'apple', "'", 's', 'warranty', '.']
counter: {('laptop quality', 'anti - reflective coating', 'bad', 'null'): 5, ('warranty general', "apple's warranty", 'bad', 'null'): 5}
output quads: ['[A] anti - reflective coating [O] null [S] bad [C] laptop quality', "[A] apple's warranty [O] null [S] bad [C] warranty general"]
multi_path: ["[A] anti - reflective coating [O] null [S] bad [C] laptop quality [SSEP] [A] apple's warranty [O] null [S] bad [C] warranty general", "[A] anti - reflective coating [S] bad [O] null [C] laptop quality [SSEP] [A] apple's warranty [S] bad [O] null [C] warranty general", "[A] anti - reflective coating [O] null [C] laptop quality [S] bad [SSEP] [A] apple's warranty [O] null [C] warranty general [S] bad", "[O] null [A] anti - reflective coating [S] bad [C] laptop quality [SSEP] [O] null [A] apple's warranty [S] bad [C] warranty general", "[O] null [A] anti - reflective coating [C] laptop quality [S] bad [SSEP] [O] null [A] apple's warranty [C] warranty general [S] bad"]

task, data: acos laptop16
target: [('laptop operation_performance', 'macbook pro', 'great', 'dependable')]
output: ['[A] machine [O] dependable [S] great [C] laptop operation_performance']
sent: ['the', 'macbook', 'pro', 'offers', 'a', 'very', 'dependable', 'machine', 'that', 'will', 'muddle', '-', 'through', 'anything', 'you', 'throw', 'at', 'it', 'without', 'complaining', '.']
counter: {('laptop operation_performance', 'machine', 'great', 'dependable'): 3, ('laptop operation_performance', 'macbook pro', 'great', 'dependable'): 2}
output quads: ['[A] machine [O] dependable [S] great [C] laptop operation_performance']
multi_path: ['[A] machine [O] dependable [S] great [C] laptop operation_performance', '[A] macbook pro [S] great [O] dependable [C] laptop operation_performance', '[A] machine [O] dependable [C] laptop operation_performance [S] great', '[O] dependable [A] machine [S] great [C] laptop operation_performance', '[O] dependable [A] macbook pro [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('ports general', 'thunderbolt ports', 'bad', 'null'), ('ports general', 'usb ports', 'bad', 'null')]
output: ['[A] thunderbolt ports [O] null [S] ok [C] ports general', '[A] usb ports [O] null [S] ok [C] ports general']
sent: ['2', 'usb', 'ports', 'and', '2', 'thunderbolt', 'ports', 'on', 'a', '$', '4500nz', 'laptop', '?']
counter: {('ports general', 'usb ports', 'ok', 'null'): 5, ('ports general', 'thunderbolt ports', 'ok', 'null'): 5}
output quads: ['[A] usb ports [O] null [S] ok [C] ports general', '[A] thunderbolt ports [O] null [S] ok [C] ports general']
multi_path: ['[A] usb ports [O] null [S] ok [C] ports general [SSEP] [A] thunderbolt ports [O] null [S] ok [C] ports general', '[A] usb ports [S] ok [O] null [C] ports general [SSEP] [A] thunderbolt ports [S] ok [O] null [C] ports general', '[A] usb ports [O] null [C] ports general [S] ok [SSEP] [A] thunderbolt ports [O] null [C] ports general [S] ok', '[O] null [A] usb ports [S] ok [C] ports general [SSEP] [O] null [A] thunderbolt ports [S] ok [C] ports general', '[O] null [A] usb ports [C] ports general [S] ok [SSEP] [O] null [A] thunderbolt ports [C] ports general [S] ok']

task, data: acos laptop16
target: [('hard_disc general', 'ssd drive', 'bad', 'null')]
output: ['[A] ssd drive [O] not user replaceable [S] bad [C] hard_disc design_features']
sent: ['the', '`', '`', 'ssd', 'drive', '`', '`', 'is', 'not', 'user', 'replaceable', '.']
counter: {('hard_disc design_features', 'ssd drive', 'bad', 'not user replaceable'): 5}
output quads: ['[A] ssd drive [O] not user replaceable [S] bad [C] hard_disc design_features']
multi_path: ['[A] ssd drive [O] not user replaceable [S] bad [C] hard_disc design_features', '[A] ssd drive [S] bad [O] not user replaceable [C] hard_disc design_features', '[A] ssd drive [O] not user replaceable [C] hard_disc design_features [S] bad', '[O] not user replaceable [A] ssd drive [S] bad [C] hard_disc design_features', '[O] not user replaceable [A] ssd drive [C] hard_disc design_features [S] bad']

task, data: acos laptop16
target: [('power_supply quality', 'charger', 'bad', 'defective')]
output: ['[A] charger [O] defective [S] bad [C] power_supply quality', '[A] charger [O] null [S] bad [C] power_supply quality']
sent: ['the', 'charger', 'is', 'defective', 'and', 'after', '45', 'days', 'of', 'use', 'the', 'charger', 'is', 'shot', '.']
counter: {('power_supply quality', 'charger', 'bad', 'defective'): 4, ('power_supply quality', 'charger', 'bad', 'null'): 4, ('power_supply general', 'charger', 'bad', 'defective'): 1, ('power_supply general', 'charger', 'bad', 'null'): 1}
output quads: ['[A] charger [O] defective [S] bad [C] power_supply quality', '[A] charger [O] null [S] bad [C] power_supply quality']
multi_path: ['[A] charger [O] defective [S] bad [C] power_supply quality [SSEP] [A] charger [O] null [S] bad [C] power_supply quality', '[A] charger [S] bad [O] defective [C] power_supply quality [SSEP] [A] charger [S] bad [O] null [C] power_supply quality', '[A] charger [O] defective [C] power_supply quality [S] bad [SSEP] [A] charger [O] null [C] power_supply quality [S] bad', '[O] defective [A] charger [S] bad [C] power_supply quality [SSEP] [O] null [A] charger [S] bad [C] power_supply quality', '[O] defective [A] charger [C] power_supply general [S] bad [SSEP] [O] null [A] charger [C] power_supply general [S] bad']

task, data: acos laptop16
target: [('laptop design_features', 'laptop', 'great', 'excellent')]
output: ['[A] laptop [O] excellent [S] great [C] laptop design_features', '[A] laptop [O] light [S] great [C] laptop design_features']
sent: ['first', 'impressions', ',', 'excellent', 'looking', 'laptop', 'and', 'very', 'light', '!']
counter: {('laptop design_features', 'laptop', 'great', 'excellent'): 5, ('laptop design_features', 'laptop', 'great', 'light'): 5}
output quads: ['[A] laptop [O] excellent [S] great [C] laptop design_features', '[A] laptop [O] light [S] great [C] laptop design_features']
multi_path: ['[A] laptop [O] excellent [S] great [C] laptop design_features [SSEP] [A] laptop [O] light [S] great [C] laptop design_features', '[A] laptop [S] great [O] excellent [C] laptop design_features [SSEP] [A] laptop [S] great [O] light [C] laptop design_features', '[A] laptop [O] excellent [C] laptop design_features [S] great [SSEP] [A] laptop [O] light [C] laptop design_features [S] great', '[O] excellent [A] laptop [S] great [C] laptop design_features [SSEP] [O] light [A] laptop [S] great [C] laptop design_features', '[O] excellent [A] laptop [C] laptop design_features [S] great [SSEP] [O] light [A] laptop [C] laptop design_features [S] great']

task, data: acos laptop16
target: [('battery general', 'battery life', 'great', 'good')]
output: ['[A] battery life [O] good [S] great [C] battery operation_performance']
sent: ['the', 'battery', 'life', 'is', 'good', '-', 'i', 'get', 'about', '5', '-', '6', 'hours', 'of', 'non', 'stop', 'typing', ',', 'with', '3', 'browsers', 'opened', 'and', 'wifi', 'always', 'on', '.']
counter: {('battery operation_performance', 'battery life', 'great', 'good'): 5}
output quads: ['[A] battery life [O] good [S] great [C] battery operation_performance']
multi_path: ['[A] battery life [O] good [S] great [C] battery operation_performance', '[A] battery life [S] great [O] good [C] battery operation_performance', '[A] battery life [O] good [C] battery operation_performance [S] great', '[O] good [A] battery life [S] great [C] battery operation_performance', '[O] good [A] battery life [C] battery operation_performance [S] great']

task, data: acos laptop16
target: [('company general', 'amazon', 'bad', 'null'), ('laptop general', 'laptops', 'bad', 'null')]
output: ['[A] laptops [O] null [S] great [C] laptop general']
sent: ['didn', "'", 't', 'purchase', 'from', 'amazon', 'but', 'i', 'can', 'not', 'believe', 'these', 'laptops', 'have', '5', 'stars', '.']
counter: {('laptop general', 'laptops', 'great', 'null'): 5}
output quads: ['[A] laptops [O] null [S] great [C] laptop general']
multi_path: ['[A] laptops [O] null [S] great [C] laptop general', '[A] laptops [S] great [O] null [C] laptop general', '[A] laptops [O] null [C] laptop general [S] great', '[O] null [A] laptops [S] great [C] laptop general', '[O] null [A] laptops [C] laptop general [S] great']

task, data: acos laptop16
target: [('os operation_performance', 'null', 'bad', 'null')]
output: ['[A] null [O] null [S] bad [C] laptop operation_performance']
sent: ['then', 'one', 'day', ',', 'it', 'stopped', 'booting', '.']
counter: {('laptop operation_performance', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [O] null [S] bad [C] laptop operation_performance']
multi_path: ['[A] it [O] null [S] bad [C] laptop operation_performance', '[A] it [S] bad [O] null [C] laptop operation_performance', '[A] it [O] null [C] laptop operation_performance [S] bad', '[O] null [A] it [S] bad [C] laptop operation_performance', '[O] null [A] it [C] laptop operation_performance [S] bad']

task, data: acos laptop16
target: [('laptop general', 'null', 'great', 'great'), ('laptop general', 'null', 'great', 'loves')]
output: ['[A] tool [O] great [S] great [C] laptop general', '[A] tool [O] loves [S] great [C] laptop general']
sent: ['my', 'daughter', 'loves', 'it', 'and', 'it', 'will', 'be', 'a', 'great', 'tool', 'to', 'help', 'her', 'through', 'nursing', 'school', '.']
counter: {('laptop general', 'tool', 'great', 'loves'): 5, ('laptop general', 'tool', 'great', 'great'): 5}
output quads: ['[A] tool [O] loves [S] great [C] laptop general', '[A] tool [O] great [S] great [C] laptop general']
multi_path: ['[A] tool [O] loves [S] great [C] laptop general [SSEP] [A] tool [O] great [S] great [C] laptop general', '[A] tool [S] great [O] loves [C] laptop general [SSEP] [A] tool [S] great [O] great [C] laptop general', '[A] tool [O] loves [C] laptop general [S] great [SSEP] [A] tool [O] great [C] laptop general [S] great', '[O] loves [A] tool [S] great [C] laptop general [SSEP] [O] great [A] tool [S] great [C] laptop general', '[O] loves [A] tool [C] laptop general [S] great [SSEP] [O] great [A] tool [C] laptop general [S] great']

task, data: acos laptop16
target: [('company general', 'apple', 'bad', 'horrendous')]
output: ['[A] apple [O] horrendous [S] bad [C] company operation_performance']
sent: ['i', "'", 'm', 'still', 'absolutely', 'blown', 'away', 'how', 'apple', ',', 'a', 'supposed', 'industry', 'leader', ',', 'has', 'such', 'horrendous', 'functionality', '.']
counter: {('company operation_performance', 'apple', 'bad', 'horrendous'): 5}
output quads: ['[A] apple [O] horrendous [S] bad [C] company operation_performance']
multi_path: ['[A] apple [O] horrendous [S] bad [C] company operation_performance', '[A] apple [S] bad [O] horrendous [C] company operation_performance', '[A] apple [O] horrendous [C] company operation_performance [S] bad', '[O] horrendous [A] apple [S] bad [C] company operation_performance', '[O] horrendous [A] apple [C] company operation_performance [S] bad']

task, data: acos laptop16
target: [('laptop general', 'notebook', 'great', 'happy')]
output: ['[A] notebook [O] happy [S] ok [C] laptop general']
sent: ['i', 'purchased', 'this', 'notebook', 'back', 'in', 'july', 'and', 'was', 'initially', 'happy', 'with', 'my', 'purchase', '.']
counter: {('laptop general', 'notebook', 'ok', 'happy'): 4, ('laptop general', 'notebook', 'great', 'happy'): 1}
output quads: ['[A] notebook [O] happy [S] ok [C] laptop general']
multi_path: ['[A] notebook [O] happy [S] ok [C] laptop general', '[A] notebook [S] ok [O] happy [C] laptop general', '[A] notebook [O] happy [C] laptop general [S] ok', '[O] happy [A] notebook [S] ok [C] laptop general', '[O] happy [A] notebook [C] laptop general [S] great']

task, data: acos laptop16
target: [('warranty general', 'warranty', 'bad', 'null')]
output: ['[A] warranty [O] valid [S] ok [C] warranty general']
sent: ['after', 'numerous', 'calls', ',', 'i', 'then', 'received', 'confirmation', 'the', 'warranty', 'was', 'valid', ',', 'but', 'only', 'as', 'a', '‘', 'one', '-', 'off', "'", '.']
counter: {('warranty general', 'warranty', 'ok', 'valid'): 3, ('warranty general', 'warranty', 'ok', 'null'): 2}
output quads: ['[A] warranty [O] valid [S] ok [C] warranty general']
multi_path: ['[A] warranty [O] valid [S] ok [C] warranty general', '[A] warranty [S] ok [O] valid [C] warranty general', '[A] warranty [O] valid [C] warranty general [S] ok', '[O] null [A] warranty [S] ok [C] warranty general', '[O] null [A] warranty [C] warranty general [S] ok']

task, data: acos laptop16
target: [('laptop general', 'device', 'bad', 'null')]
output: ['[A] device [O] solid [S] great [C] laptop quality']
sent: ['my', 'final', 'verdict', '-', 'it', "'", 's', 'somewhat', 'solid', 'as', 'a', 'device', 'now', 'that', '6', 'months', 'of', 'updates', 'and', 'delays', 'are', 'behind', 'us', '.']
counter: {('laptop quality', 'device', 'great', 'solid'): 5}
output quads: ['[A] device [O] solid [S] great [C] laptop quality']
multi_path: ['[A] device [O] solid [S] great [C] laptop quality', '[A] device [S] great [O] solid [C] laptop quality', '[A] device [O] solid [C] laptop quality [S] great', '[O] solid [A] device [S] great [C] laptop quality', '[O] solid [A] device [C] laptop quality [S] great']

task, data: acos laptop16
target: [('display quality', '1080p', 'great', 'bright'), ('display quality', '1080p', 'great', 'perfect')]
output: ['[A] 1080p [O] perfect [S] great [C] display operation_performance', '[A] images [O] sharp [S] great [C] display operation_performance', '[A] null [O] bright [S] great [C] display operation_performance']
sent: ['bright', 'enough', 'for', 'all', 'uses', ',', 'and', '1080p', 'is', 'perfect', '-', 'images', 'are', 'sharp', '.']
counter: {('display operation_performance', 'null', 'great', 'bright'): 5, ('display operation_performance', '1080p', 'great', 'perfect'): 5, ('display operation_performance', 'images', 'great', 'sharp'): 5}
output quads: ['[A] null [O] bright [S] great [C] display operation_performance', '[A] 1080p [O] perfect [S] great [C] display operation_performance', '[A] images [O] sharp [S] great [C] display operation_performance']
multi_path: ['[A] it [O] bright [S] great [C] display operation_performance [SSEP] [A] 1080p [O] perfect [S] great [C] display operation_performance [SSEP] [A] images [O] sharp [S] great [C] display operation_performance', '[A] it [S] great [O] bright [C] display operation_performance [SSEP] [A] 1080p [S] great [O] perfect [C] display operation_performance [SSEP] [A] images [S] great [O] sharp [C] display operation_performance', '[A] it [O] bright [C] display operation_performance [S] great [SSEP] [A] 1080p [O] perfect [C] display operation_performance [S] great [SSEP] [A] images [O] sharp [C] display operation_performance [S] great', '[O] bright [A] it [S] great [C] display operation_performance [SSEP] [O] perfect [A] 1080p [S] great [C] display operation_performance [SSEP] [O] sharp [A] images [S] great [C] display operation_performance', '[O] bright [A] it [C] display operation_performance [S] great [SSEP] [O] perfect [A] 1080p [C] display operation_performance [S] great [SSEP] [O] sharp [A] images [C] display operation_performance [S] great']

task, data: acos laptop16
target: [('battery quality', 'battery life', 'great', 'solid')]
output: ['[A] battery life [O] solid [S] great [C] battery operation_performance']
sent: ['-', 'battery', 'life', 'is', 'solid', ',', 'right', 'around', 'what', 'is', 'claimed', '-', 'probably', '7', 'to', '10', 'hours', 'depending', 'on', 'variables', 'such', 'as', 'screen', 'brightness', 'and', 'how', 'demanding', 'you', "'", 're', 'being', 'with', 'it', '.']
counter: {('battery operation_performance', 'battery life', 'great', 'solid'): 3, ('battery operation_performance', 'battery life', 'ok', 'solid'): 2}
output quads: ['[A] battery life [O] solid [S] great [C] battery operation_performance']
multi_path: ['[A] battery life [O] solid [S] great [C] battery operation_performance', '[A] battery life [S] ok [O] solid [C] battery operation_performance', '[A] battery life [O] solid [C] battery operation_performance [S] ok', '[O] solid [A] battery life [S] great [C] battery operation_performance', '[O] solid [A] battery life [C] battery operation_performance [S] great']

task, data: acos laptop16
target: [('display design_features', 'touchscreen', 'great', 'responsive')]
output: ['[A] touchscreen [O] responsive [S] great [C] display operation_performance']
sent: ['-', 'touchscreen', 'is', 'responsive', 'enough', 'for', 'gaming', '.']
counter: {('display operation_performance', 'touchscreen', 'great', 'responsive'): 5}
output quads: ['[A] touchscreen [O] responsive [S] great [C] display operation_performance']
multi_path: ['[A] touchscreen [O] responsive [S] great [C] display operation_performance', '[A] touchscreen [S] great [O] responsive [C] display operation_performance', '[A] touchscreen [O] responsive [C] display operation_performance [S] great', '[O] responsive [A] touchscreen [S] great [C] display operation_performance', '[O] responsive [A] touchscreen [C] display operation_performance [S] great']

task, data: acos laptop16
target: [('software quality', 'chrome apps', 'great', 'null')]
output: ['[A] chrome apps [O] null [S] great [C] software quality', '[A] chrome os [O] null [S] great [C] os general']
sent: ['i', 'absolutely', 'imagine', 'chrome', 'apps', 'picking', 'up', 'drastically', 'in', 'quality', 'and', 'quantity', 'now', ',', 'since', 'it', 'seems', 'like', 'chrome', 'os', 'is', 'really', 'coming', 'into', 'its', 'own', 'this', 'year', '.']
counter: {('software quality', 'chrome apps', 'great', 'null'): 5, ('os general', 'chrome os', 'great', 'null'): 5}
output quads: ['[A] chrome apps [O] null [S] great [C] software quality', '[A] chrome os [O] null [S] great [C] os general']
multi_path: ['[A] chrome apps [O] null [S] great [C] software quality [SSEP] [A] chrome os [O] null [S] great [C] os general', '[A] chrome apps [S] great [O] null [C] software quality [SSEP] [A] chrome os [S] great [O] null [C] os general', '[A] chrome apps [O] null [C] software quality [S] great [SSEP] [A] chrome os [O] null [C] os general [S] great', '[O] null [A] chrome apps [S] great [C] software quality [SSEP] [O] null [A] chrome os [S] great [C] os general', '[O] null [A] chrome apps [C] software quality [S] great [SSEP] [O] null [A] chrome os [C] os general [S] great']

task, data: acos laptop16
target: [('display design_features', 'screen', 'ok', 'null')]
output: ['[A] screen [O] tall [S] bad [C] display design_features']
sent: ['-', 'in', 'tablet', 'mode', ',', 'the', 'screen', 'looks', 'too', '‘', 'tall', "'", 'to', 'feel', 'natural', '(', 'see', 'the', 'attached', 'picture', ')', '.']
counter: {('display design_features', 'screen', 'bad', 'tall'): 5}
output quads: ['[A] screen [O] tall [S] bad [C] display design_features']
multi_path: ['[A] screen [O] tall [S] bad [C] display design_features', '[A] screen [S] bad [O] tall [C] display design_features', '[A] screen [O] tall [C] display design_features [S] bad', '[O] tall [A] screen [S] bad [C] display design_features', '[O] tall [A] screen [C] display design_features [S] bad']

task, data: acos laptop16
target: [('display design_features', 'screen ratio', 'great', 'great')]
output: ['[A] screen ratio [O] great [S] great [C] display operation_performance']
sent: ['this', 'screen', 'ratio', 'makes', 'it', 'look', 'great', 'in', 'desktop', 'mode', '.']
counter: {('display operation_performance', 'screen ratio', 'great', 'great'): 5}
output quads: ['[A] screen ratio [O] great [S] great [C] display operation_performance']
multi_path: ['[A] screen ratio [O] great [S] great [C] display operation_performance', '[A] screen ratio [S] great [O] great [C] display operation_performance', '[A] screen ratio [O] great [C] display operation_performance [S] great', '[O] great [A] screen ratio [S] great [C] display operation_performance', '[O] great [A] screen ratio [C] display operation_performance [S] great']

task, data: acos laptop16
target: [('software design_features', 'ui', 'bad', 'null')]
output: ['[A] ui [O] null [S] bad [C] os operation_performance']
sent: ['second', 'issue', 'is', 'with', 'scaling', 'of', 'the', 'ui', '.']
counter: {('os operation_performance', 'ui', 'bad', 'null'): 5}
output quads: ['[A] ui [O] null [S] bad [C] os operation_performance']
multi_path: ['[A] ui [O] null [S] bad [C] os operation_performance', '[A] ui [S] bad [O] null [C] os operation_performance', '[A] ui [O] null [C] os operation_performance [S] bad', '[O] null [A] ui [S] bad [C] os operation_performance', '[O] null [A] ui [C] os operation_performance [S] bad']

task, data: acos laptop16
target: [('software design_features', 'ui elements', 'bad', 't look good')]
output: ['[A] screen [O] hd 1080p [S] ok [C] display design_features', '[A] ui elements [O] t look good [S] bad [C] os design_features']
sent: ['the', 'screen', 'itself', 'is', 'hd', '1080p', 'but', 'most', 'ui', 'elements', 'don', "'", 't', 'look', 'good', 'in', 'this', 'resolution', '.']
counter: {('display design_features', 'screen', 'ok', 'hd 1080p'): 5, ('os design_features', 'ui elements', 'bad', 't look good'): 5}
output quads: ['[A] screen [O] hd 1080p [S] ok [C] display design_features', '[A] ui elements [O] t look good [S] bad [C] os design_features']
multi_path: ["[A] screen [O] hd 1080p [S] ok [C] display design_features [SSEP] [A] ui elements [O]'t look good [S] bad [C] os design_features", "[A] screen [S] ok [O] hd 1080p [C] display design_features [SSEP] [A] ui elements [S] bad [O]'t look good [C] os design_features", "[A] screen [O] hd 1080p [C] display design_features [S] ok [SSEP] [A] ui elements [O]'t look good [C] os design_features [S] bad", "[O] hd 1080p [A] screen [S] ok [C] display design_features [SSEP] [O]'t look good [A] ui elements [S] bad [C] os design_features", "[O] hd 1080p [A] screen [C] display design_features [S] ok [SSEP] [O]'t look good [A] ui elements [C] os design_features [S] bad"]

task, data: acos laptop16
target: [('software design_features', 'app', 'bad', 'null'), ('software design_features', 'null', 'bad', 'null')]
output: ['[A] app [O] null [S] bad [C] software design_features']
sent: ['unless', 'the', 'app', 'is', 'specifically', 'designed', 'to', 'access', 'google', 'drive', 'files', ',', 'the', 'app', 'has', 'no', 'way', 'to', 'read', 'and', 'save', 'files', 'directly', 'to', 'the', 'cloud', '.']
counter: {('software design_features', 'app', 'bad', 'null'): 5}
output quads: ['[A] app [O] null [S] bad [C] software design_features']
multi_path: ['[A] app [O] null [S] bad [C] software design_features', '[A] app [S] bad [O] null [C] software design_features', '[A] app [O] null [C] software design_features [S] bad', '[O] null [A] app [S] bad [C] software design_features', '[O] null [A] app [C] software design_features [S] bad']

task, data: acos laptop16
target: [('battery quality', 'battery life', 'great', 'great')]
output: ['[A] battery life [O] great [S] great [C] battery general']
sent: ['•', 'great', 'battery', 'life', '.']
counter: {('battery general', 'battery life', 'great', 'great'): 5}
output quads: ['[A] battery life [O] great [S] great [C] battery general']
multi_path: ['[A] battery life [O] great [S] great [C] battery general', '[A] battery life [S] great [O] great [C] battery general', '[A] battery life [O] great [C] battery general [S] great', '[O] great [A] battery life [S] great [C] battery general', '[O] great [A] battery life [C] battery general [S] great']

task, data: acos laptop16
target: [('multimedia_devices operation_performance', 'null', 'bad', 'low')]
output: ['[A] volume [O] low [S] bad [C] multimedia_devices operation_performance']
sent: ['•', 'volume', 'is', 'incredibly', 'low', '.']
counter: {('multimedia_devices operation_performance', 'volume', 'bad', 'low'): 5}
output quads: ['[A] volume [O] low [S] bad [C] multimedia_devices operation_performance']
multi_path: ['[A] volume [O] low [S] bad [C] multimedia_devices operation_performance', '[A] volume [S] bad [O] low [C] multimedia_devices operation_performance', '[A] volume [O] low [C] multimedia_devices operation_performance [S] bad', '[O] low [A] volume [S] bad [C] multimedia_devices operation_performance', '[O] low [A] volume [C] multimedia_devices operation_performance [S] bad']

task, data: acos laptop16
target: [('laptop design_features', 'asus chromebook', 'great', 'beautiful')]
output: ['[A] asus chromebook [O] beautiful [S] great [C] laptop general']
sent: ['i', 'would', 'like', 'a', 'quick', 'fix', 'but', 'have', 'not', 'found', 'one', 'that', 'would', 'allow', 'me', 'to', 'consider', 'keeping', 'this', 'beautiful', 'asus', 'chromebook', '.']
counter: {('laptop general', 'asus chromebook', 'great', 'beautiful'): 4, ('laptop general', 'asus chromebook', 'bad', 'beautiful'): 1}
output quads: ['[A] asus chromebook [O] beautiful [S] great [C] laptop general']
multi_path: ['[A] asus chromebook [O] beautiful [S] great [C] laptop general', '[A] asus chromebook [S] bad [O] beautiful [C] laptop general', '[A] asus chromebook [O] beautiful [C] laptop general [S] great', '[O] beautiful [A] asus chromebook [S] great [C] laptop general', '[O] beautiful [A] asus chromebook [C] laptop general [S] great']

task, data: acos laptop16
target: [('ports operation_performance', 'null', 'bad', 'slow')]
output: ['[A] transfer speeds [O] miserably [S] bad [C] ports operation_performance', '[A] transfer speeds [O] slow [S] bad [C] ports operation_performance']
sent: ['transfer', 'speeds', '(', 'lan', 'to', 'nas', ')', 'were', 'miserably', 'slow', '(', '10', '-', '30mbps', ')', '.']
counter: {('ports operation_performance', 'transfer speeds', 'bad', 'miserably'): 5, ('ports operation_performance', 'transfer speeds', 'bad', 'slow'): 5}
output quads: ['[A] transfer speeds [O] miserably [S] bad [C] ports operation_performance', '[A] transfer speeds [O] slow [S] bad [C] ports operation_performance']
multi_path: ['[A] transfer speeds [O] miserably [S] bad [C] ports operation_performance [SSEP] [A] transfer speeds [O] slow [S] bad [C] ports operation_performance', '[A] transfer speeds [S] bad [O] miserably [C] ports operation_performance [SSEP] [A] transfer speeds [S] bad [O] slow [C] ports operation_performance', '[A] transfer speeds [O] miserably [C] ports operation_performance [S] bad [SSEP] [A] transfer speeds [O] slow [C] ports operation_performance [S] bad', '[O] miserably [A] transfer speeds [S] bad [C] ports operation_performance [SSEP] [O] slow [A] transfer speeds [S] bad [C] ports operation_performance', '[O] miserably [A] transfer speeds [C] ports operation_performance [S] bad [SSEP] [O] slow [A] transfer speeds [C] ports operation_performance [S] bad']

task, data: acos laptop16
target: [('display general', 'null', 'great', 'perfect')]
output: ['[A] null [O] perfect [S] great [C] display quality']
sent: ['it', 'was', 'perfect', 'with', 'no', 'backlight', 'bleed', ',', 'no', 'shimmery', 'matte', 'texture', ',', 'no', 'uneven', 'backlight', ',', 'no', 'dead', '/', 'stuck', 'pixels', '.']
counter: {('display quality', 'null', 'great', 'perfect'): 5}
output quads: ['[A] null [O] perfect [S] great [C] display quality']
multi_path: ['[A] it [O] perfect [S] great [C] display quality', '[A] it [S] great [O] perfect [C] display quality', '[A] it [O] perfect [C] display quality [S] great', '[O] perfect [A] it [S] great [C] display quality', '[O] perfect [A] it [C] display quality [S] great']

task, data: acos laptop16
target: [('display general', 'screen resolution', 'great', 'great'), ('keyboard general', 'keyboard', 'great', 'great'), ('laptop general', 'product', 'great', 'fantastic'), ('laptop operation_performance', 'null', 'bad', 'null'), ('laptop quality', 'build quality', 'great', 'great')]
output: ['[A] build quality [O] great [S] great [C] laptop quality', '[A] keyboard [O] null [S] bad [C] keyboard general', '[A] product [O] fantastic [S] great [C] laptop general', '[A] screen resolution [O] great [S] great [C] display quality']
sent: ['this', 'product', 'was', 'fantastic', '-', '-', 'great', 'build', 'quality', ',', 'screen', 'resolution', ',', 'keyboard', '-', '-', 'until', 'one', 'day', 'it', 'stopped', 'turning', 'on', '.']
counter: {('laptop general', 'product', 'great', 'fantastic'): 5, ('laptop quality', 'build quality', 'great', 'great'): 5, ('display general', 'screen resolution', 'great', 'great'): 2, ('keyboard general', 'keyboard', 'bad', 'null'): 3, ('keyboard general', 'keyboard', 'great', 'null'): 1, ('display quality', 'screen resolution', 'great', 'great'): 3, ('keyboard operation_performance', 'keyboard', 'bad', 'null'): 1}
output quads: ['[A] product [O] fantastic [S] great [C] laptop general', '[A] build quality [O] great [S] great [C] laptop quality', '[A] keyboard [O] null [S] bad [C] keyboard general', '[A] screen resolution [O] great [S] great [C] display quality']
multi_path: ['[A] product [O] fantastic [S] great [C] laptop general [SSEP] [A] build quality [O] great [S] great [C] laptop quality [SSEP] [A] screen resolution [O] great [S] great [C] display general [SSEP] [A] keyboard [O] null [S] bad [C] keyboard general', '[A] product [S] great [O] fantastic [C] laptop general [SSEP] [A] build quality [S] great [O] great [C] laptop quality [SSEP] [A] screen resolution [S] great [O] great [C] display general [SSEP] [A] keyboard [S] great [O] null [C] keyboard general', '[A] product [O] fantastic [C] laptop general [S] great [SSEP] [A] build quality [O] great [C] laptop quality [S] great [SSEP] [A] screen resolution [O] great [C] display quality [S] great [SSEP] [A] keyboard [O] null [C] keyboard general [S] bad', '[O] fantastic [A] product [S] great [C] laptop general [SSEP] [O] great [A] build quality [S] great [C] laptop quality [SSEP] [O] great [A] screen resolution [S] great [C] display quality [SSEP] [O] null [A] keyboard [S] bad [C] keyboard operation_performance', '[O] fantastic [A] product [C] laptop general [S] great [SSEP] [O] great [A] build quality [C] laptop quality [S] great [SSEP] [O] great [A] screen resolution [C] display quality [S] great [SSEP] [O] null [A] keyboard [C] keyboard general [S] bad']

task, data: acos laptop16
target: [('power_supply operation_performance', 'power _ supply issue', 'bad', 'null')]
output: ['[A] power _ supply [O] null [S] bad [C] power_supply operation_performance']
sent: ['i', "'", 've', 'been', 'repairing', 'products', 'for', 'years', 'and', 'it', 'was', 'clear', 'this', 'was', 'a', 'power', '_', 'supply', 'issue', '.']
counter: {('power_supply operation_performance', 'power _ supply', 'bad', 'null'): 5}
output quads: ['[A] power _ supply [O] null [S] bad [C] power_supply operation_performance']
multi_path: ['[A] power _ supply [O] null [S] bad [C] power_supply operation_performance', '[A] power _ supply [S] bad [O] null [C] power_supply operation_performance', '[A] power _ supply [O] null [C] power_supply operation_performance [S] bad', '[O] null [A] power _ supply [S] bad [C] power_supply operation_performance', '[O] null [A] power _ supply [C] power_supply operation_performance [S] bad']

task, data: acos laptop16
target: [('laptop quality', 'device', 'bad', 'unacceptable')]
output: ['[A] device [O] unacceptable [S] bad [C] laptop price']
sent: ['if', 'this', 'device', 'weren', "'", 't', 'nearly', '$', '500', 'i', 'might', 'expect', 'it', 'to', 'only', 'last', 'a', 'year', ',', 'but', 'at', 'this', 'price', 'point', 'it', "'", 's', 'unacceptable', '.']
counter: {('laptop price', 'device', 'bad', 'unacceptable'): 5}
output quads: ['[A] device [O] unacceptable [S] bad [C] laptop price']
multi_path: ['[A] device [O] unacceptable [S] bad [C] laptop price', '[A] device [S] bad [O] unacceptable [C] laptop price', '[A] device [O] unacceptable [C] laptop price [S] bad', '[O] unacceptable [A] device [S] bad [C] laptop price', '[O] unacceptable [A] device [C] laptop price [S] bad']

task, data: acos laptop16
target: [('os general', 'os', 'bad', 'null')]
output: ['[A] notebook [O] null [S] bad [C] laptop design_features']
sent: ['some', 'of', 'the', 'things', 'i', 'wanted', 'to', 'do', 'with', 'this', 'notebook', 'were', 'limited', 'by', 'the', 'os', '.']
counter: {('laptop usability', 'notebook', 'bad', 'null'): 2, ('laptop design_features', 'notebook', 'bad', 'null'): 3}
output quads: ['[A] notebook [O] null [S] bad [C] laptop design_features']
multi_path: ['[A] notebook [O] null [S] bad [C] laptop usability', '[A] notebook [S] bad [O] null [C] laptop design_features', '[A] notebook [O] null [C] laptop usability [S] bad', '[O] null [A] notebook [S] bad [C] laptop design_features', '[O] null [A] notebook [C] laptop design_features [S] bad']

task, data: acos laptop16
target: [('support quality', 'asus customer service people', 'bad', 'rude')]
output: ['[A] asus customer service [O] rude [S] bad [C] support general']
sent: ['the', 'asus', 'customer', 'service', 'people', 'are', 'rude', 'and', 'have', 'no', 'answers', '.']
counter: {('support general', 'asus customer service', 'bad', 'rude'): 5}
output quads: ['[A] asus customer service [O] rude [S] bad [C] support general']
multi_path: ['[A] asus customer service [O] rude [S] bad [C] support general', '[A] asus customer service [S] bad [O] rude [C] support general', '[A] asus customer service [O] rude [C] support general [S] bad', '[O] rude [A] asus customer service [S] bad [C] support general', '[O] rude [A] asus customer service [C] support general [S] bad']

task, data: acos laptop16
target: [('laptop operation_performance', 'null', 'great', 'fine'), ('power_supply operation_performance', 'null', 'bad', 'null')]
output: ['[A] unit [O] fine [S] great [C] laptop general', '[A] unit [O] null [S] bad [C] power_supply operation_performance']
sent: ['things', 'were', 'fine', 'until', 'the', 'unit', 'stopped', 'charging', '.']
counter: {('power_supply operation_performance', 'unit', 'bad', 'null'): 5, ('laptop general', 'unit', 'great', 'fine'): 4, ('laptop general', 'null', 'ok', 'fine'): 1}
output quads: ['[A] unit [O] null [S] bad [C] power_supply operation_performance', '[A] unit [O] fine [S] great [C] laptop general']
multi_path: ['[A] unit [O] null [S] bad [C] power_supply operation_performance [SSEP] [A] unit [O] fine [S] great [C] laptop general', '[A] unit [S] bad [O] null [C] power_supply operation_performance [SSEP] [A] unit [S] great [O] fine [C] laptop general', '[A] unit [O] null [C] power_supply operation_performance [S] bad [SSEP] [A] unit [O] fine [C] laptop general [S] great', '[O] fine [A] it [S] ok [C] laptop general [SSEP] [O] null [A] unit [S] bad [C] power_supply operation_performance', '[O] fine [A] unit [C] laptop general [S] great [SSEP] [O] null [A] unit [C] power_supply operation_performance [S] bad']

task, data: acos laptop16
target: [('support operation_performance', 'customer service', 'bad', 'null')]
output: ['[A] customer service [O] null [S] bad [C] support general']
sent: ['i', 'call', 'customer', 'service', ',', 'first', 'they', 'argue', 'and', 'say', 'customer', 'damage', 'then', 'to', 'try', 'and', 'placate', 'me', 'they', 'say', 'they', 'have', 'an', 'adp', 'accidental', 'damage', 'and', 'protection', 'plan', 'one', 'time', 'for', 'one', 'year', '.']
counter: {('support general', 'customer service', 'bad', 'null'): 5}
output quads: ['[A] customer service [O] null [S] bad [C] support general']
multi_path: ['[A] customer service [O] null [S] bad [C] support general', '[A] customer service [S] bad [O] null [C] support general', '[A] customer service [O] null [C] support general [S] bad', '[O] null [A] customer service [S] bad [C] support general', '[O] null [A] customer service [C] support general [S] bad']

task, data: acos laptop16
target: [('laptop design_features', 'laptop', 'great', 'beautiful'), ('laptop design_features', 'laptop', 'great', 'well')]
output: ['[A] laptop [O] beautiful [S] great [C] laptop design_features', '[A] laptop [O] well [S] great [C] laptop quality']
sent: ['it', 'is', 'a', 'beautiful', ',', 'well', 'built', 'laptop', '.']
counter: {('laptop design_features', 'laptop', 'great', 'beautiful'): 5, ('laptop quality', 'laptop', 'great', 'well'): 4, ('laptop quality', 'laptop', 'great', 'well built'): 1}
output quads: ['[A] laptop [O] beautiful [S] great [C] laptop design_features', '[A] laptop [O] well [S] great [C] laptop quality']
multi_path: ['[A] laptop [O] beautiful [S] great [C] laptop design_features [SSEP] [A] laptop [O] well [S] great [C] laptop quality', '[A] laptop [S] great [O] beautiful [C] laptop design_features [SSEP] [A] laptop [S] great [O] well [C] laptop quality', '[A] laptop [O] beautiful [C] laptop design_features [S] great [SSEP] [A] laptop [O] well built [C] laptop quality [S] great', '[O] beautiful [A] laptop [S] great [C] laptop design_features [SSEP] [O] well [A] laptop [S] great [C] laptop quality', '[O] beautiful [A] laptop [C] laptop design_features [S] great [SSEP] [O] well [A] laptop [C] laptop quality [S] great']

task, data: acos laptop16
target: [('laptop operation_performance', 'product', 'bad', 'nutty'), ('laptop price', 'product', 'bad', 'expensive')]
output: ['[A] product [O] nutty [S] bad [C] laptop price', '[A] product [O] premium [S] bad [C] laptop quality']
sent: ['that', "'", 's', 'nutty', 'for', 'an', 'expensive', 'premium', 'product', '.']
counter: {('laptop price', 'product', 'bad', 'nutty'): 5, ('laptop quality', 'product', 'bad', 'premium'): 5}
output quads: ['[A] product [O] nutty [S] bad [C] laptop price', '[A] product [O] premium [S] bad [C] laptop quality']
multi_path: ['[A] product [O] nutty [S] bad [C] laptop price [SSEP] [A] product [O] premium [S] bad [C] laptop quality', '[A] product [S] bad [O] nutty [C] laptop price [SSEP] [A] product [S] bad [O] premium [C] laptop quality', '[A] product [O] nutty [C] laptop price [S] bad [SSEP] [A] product [O] premium [C] laptop quality [S] bad', '[O] nutty [A] product [S] bad [C] laptop price [SSEP] [O] premium [A] product [S] bad [C] laptop quality', '[O] nutty [A] product [C] laptop price [S] bad [SSEP] [O] premium [A] product [C] laptop quality [S] bad']

task, data: acos laptop16
target: [('battery quality', 'battery', 'bad', 'null')]
output: ['[A] battery time [O] null [S] bad [C] battery operation_performance']
sent: ['now', 'i', 'only', 'leave', 'it', 'charging', 'until', 'it', "'", 's', 'full', 'but', 'the', 'battery', 'time', 'is', 'still', 'decreasing', '.']
counter: {('battery operation_performance', 'battery time', 'bad', 'null'): 5}
output quads: ['[A] battery time [O] null [S] bad [C] battery operation_performance']
multi_path: ['[A] battery time [O] null [S] bad [C] battery operation_performance', '[A] battery time [S] bad [O] null [C] battery operation_performance', '[A] battery time [O] null [C] battery operation_performance [S] bad', '[O] null [A] battery time [S] bad [C] battery operation_performance', '[O] null [A] battery time [C] battery operation_performance [S] bad']

task, data: acos laptop16
target: [('laptop portability', 'tablet mode', 'bad', 'heavy')]
output: ['[A] null [O] heavy [S] bad [C] laptop portability']
sent: ['i', 'don', "'", 't', 'use', 'it', 'as', 'much', 'in', 'tablet', 'mode', 'as', 'i', 'thought', 'as', 'it', 'is', 'a', 'little', 'heavy', 'when', 'in', 'that', 'configuration', '.']
counter: {('laptop portability', 'null', 'bad', 'heavy'): 5}
output quads: ['[A] null [O] heavy [S] bad [C] laptop portability']
multi_path: ['[A] it [O] heavy [S] bad [C] laptop portability', '[A] it [S] bad [O] heavy [C] laptop portability', '[A] it [O] heavy [C] laptop portability [S] bad', '[O] heavy [A] it [S] bad [C] laptop portability', '[O] heavy [A] it [C] laptop portability [S] bad']

task, data: acos laptop16
target: [('laptop general', 'tablet / computer', 'great', 'high')]
output: ['[A] computer [O] null [S] great [C] laptop general', '[A] tablet [O] null [S] great [C] laptop general']
sent: ['i', 'had', 'high', 'hopes', 'for', 'this', 'tablet', '/', 'computer', 'based', 'on', 'customer', 'reviews', '.']
counter: {('laptop general', 'tablet', 'great', 'null'): 5, ('laptop general', 'computer', 'great', 'null'): 5}
output quads: ['[A] tablet [O] null [S] great [C] laptop general', '[A] computer [O] null [S] great [C] laptop general']
multi_path: ['[A] tablet [O] null [S] great [C] laptop general [SSEP] [A] computer [O] null [S] great [C] laptop general', '[A] tablet [S] great [O] null [C] laptop general [SSEP] [A] computer [S] great [O] null [C] laptop general', '[A] tablet [O] null [C] laptop general [S] great [SSEP] [A] computer [O] null [C] laptop general [S] great', '[O] null [A] tablet [S] great [C] laptop general [SSEP] [O] null [A] computer [S] great [C] laptop general', '[O] null [A] tablet [C] laptop general [S] great [SSEP] [O] null [A] computer [C] laptop general [S] great']

task, data: acos laptop16
target: [('laptop general', 'chromebook', 'great', 'null')]
output: ['[A] chromebook [O] null [S] great [C] laptop operation_performance']
sent: ['a', 'chromebook', 'does', 'most', 'of', 'what', 'i', 'need', ',', 'except', 'gaiming', '.']
counter: {('laptop operation_performance', 'chromebook', 'great', 'null'): 5}
output quads: ['[A] chromebook [O] null [S] great [C] laptop operation_performance']
multi_path: ['[A] chromebook [O] null [S] great [C] laptop operation_performance', '[A] chromebook [S] great [O] null [C] laptop operation_performance', '[A] chromebook [O] null [C] laptop operation_performance [S] great', '[O] null [A] chromebook [S] great [C] laptop operation_performance', '[O] null [A] chromebook [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('ports operation_performance', 'null', 'bad', 'annoying')]
output: ['[A] null [O] annoying [S] bad [C] laptop operation_performance']
sent: ['second', ',', 'and', 'most', 'annoying', ',', 'it', 'would', 'not', 'identify', 'my', 'printer', 'in', 'cloud', 'print', '.']
counter: {('laptop operation_performance', 'null', 'bad', 'annoying'): 5}
output quads: ['[A] null [O] annoying [S] bad [C] laptop operation_performance']
multi_path: ['[A] it [O] annoying [S] bad [C] laptop operation_performance', '[A] it [S] bad [O] annoying [C] laptop operation_performance', '[A] it [O] annoying [C] laptop operation_performance [S] bad', '[O] annoying [A] it [S] bad [C] laptop operation_performance', '[O] annoying [A] it [C] laptop operation_performance [S] bad']

task, data: acos laptop16
target: [('hard_disc operation_performance', 'tpm', 'bad', 'null'), ('laptop operation_performance', 'computer', 'bad', 'useless')]
output: ['[A] computer [O] useless [S] bad [C] laptop operation_performance', '[A] tpm [O] screwed [S] bad [C] software operation_performance']
sent: ['so', ',', 'guess', 'i', "'", 'm', 'screwed', ',', 'because', 'now', 'after', '6', 'months', 'my', 'tpm', 'is', 'no', 'longer', 'working', 'and', 'the', 'whole', 'computer', 'is', 'useless', '.']
counter: {('software operation_performance', 'tpm', 'bad', 'screwed'): 5, ('laptop operation_performance', 'computer', 'bad', 'useless'): 5}
output quads: ['[A] tpm [O] screwed [S] bad [C] software operation_performance', '[A] computer [O] useless [S] bad [C] laptop operation_performance']
multi_path: ['[A] tpm [O] screwed [S] bad [C] software operation_performance [SSEP] [A] computer [O] useless [S] bad [C] laptop operation_performance', '[A] tpm [S] bad [O] screwed [C] software operation_performance [SSEP] [A] computer [S] bad [O] useless [C] laptop operation_performance', '[A] tpm [O] screwed [C] software operation_performance [S] bad [SSEP] [A] computer [O] useless [C] laptop operation_performance [S] bad', '[O] screwed [A] tpm [S] bad [C] software operation_performance [SSEP] [O] useless [A] computer [S] bad [C] laptop operation_performance', '[O] screwed [A] tpm [C] software operation_performance [S] bad [SSEP] [O] useless [A] computer [C] laptop operation_performance [S] bad']

task, data: acos laptop16
target: [('battery quality', 'battery runtime', 'great', 'null'), ('laptop design_features', 'product', 'great', 'lightweight'), ('laptop design_features', 'product', 'great', 'sturdy'), ('laptop operation_performance', 'product', 'great', 'fast')]
output: ['[A] battery runtime [O] null [S] great [C] battery general', '[A] product [O] fast [S] great [C] laptop operation_performance', '[A] product [O] lightweight [S] great [C] laptop design_features', '[A] product [O] sturdy [S] great [C] laptop design_features']
sent: ['product', 'is', 'sturdy', ',', 'lightweight', ',', 'fast', ',', 'and', 'the', 'battery', 'runtime', 'was', 'as', 'advertised', '!']
counter: {('laptop design_features', 'product', 'great', 'sturdy'): 5, ('laptop design_features', 'product', 'great', 'lightweight'): 5, ('laptop operation_performance', 'product', 'great', 'fast'): 5, ('battery general', 'battery runtime', 'great', 'null'): 5}
output quads: ['[A] product [O] sturdy [S] great [C] laptop design_features', '[A] product [O] lightweight [S] great [C] laptop design_features', '[A] product [O] fast [S] great [C] laptop operation_performance', '[A] battery runtime [O] null [S] great [C] battery general']
multi_path: ['[A] product [O] sturdy [S] great [C] laptop design_features [SSEP] [A] product [O] lightweight [S] great [C] laptop design_features [SSEP] [A] product [O] fast [S] great [C] laptop operation_performance [SSEP] [A] battery runtime [O] null [S] great [C] battery general', '[A] product [S] great [O] sturdy [C] laptop design_features [SSEP] [A] product [S] great [O] lightweight [C] laptop design_features [SSEP] [A] product [S] great [O] fast [C] laptop operation_performance [SSEP] [A] battery runtime [S] great [O] null [C] battery general', '[A] product [O] sturdy [C] laptop design_features [S] great [SSEP] [A] product [O] lightweight [C] laptop design_features [S] great [SSEP] [A] product [O] fast [C] laptop operation_performance [S] great [SSEP] [A] battery runtime [O] null [C] battery general [S] great', '[O] sturdy [A] product [S] great [C] laptop design_features [SSEP] [O] lightweight [A] product [S] great [C] laptop design_features [SSEP] [O] fast [A] product [S] great [C] laptop operation_performance [SSEP] [O] null [A] battery runtime [S] great [C] battery general', '[O] sturdy [A] product [C] laptop design_features [S] great [SSEP] [O] lightweight [A] product [C] laptop design_features [S] great [SSEP] [O] fast [A] product [C] laptop operation_performance [S] great [SSEP] [O] null [A] battery runtime [C] battery general [S] great']

task, data: acos laptop16
target: [('keyboard design_features', 'touchpad', 'bad', 'sticky')]
output: ['[A] touchpad [O] sticky [S] bad [C] hardware operation_performance']
sent: ['i', 'had', 'to', 'buy', 'a', 'mouse', 'because', 'the', 'touchpad', 'is', 'very', 'sticky', '.']
counter: {('hardware operation_performance', 'touchpad', 'bad', 'sticky'): 5}
output quads: ['[A] touchpad [O] sticky [S] bad [C] hardware operation_performance']
multi_path: ['[A] touchpad [O] sticky [S] bad [C] hardware operation_performance', '[A] touchpad [S] bad [O] sticky [C] hardware operation_performance', '[A] touchpad [O] sticky [C] hardware operation_performance [S] bad', '[O] sticky [A] touchpad [S] bad [C] hardware operation_performance', '[O] sticky [A] touchpad [C] hardware operation_performance [S] bad']

task, data: acos laptop16
target: [('display quality', 'screen quality', 'ok', 'so - so'), ('laptop general', 'null', 'bad', 'not at all pleasant')]
output: ['[A] null [O] not at all pleasant [S] bad [C] laptop usability', '[A] screen quality [O] so - so [S] great [C] display quality']
sent: ['not', 'at', 'all', 'pleasant', 'to', 'use', 'also', ',', 'the', 'screen', 'quality', 'is', 'just', 'so', '-', 'so', '.']
counter: {('laptop usability', 'null', 'bad', 'not at all pleasant'): 5, ('display quality', 'screen quality', 'great', 'so - so'): 5}
output quads: ['[A] null [O] not at all pleasant [S] bad [C] laptop usability', '[A] screen quality [O] so - so [S] great [C] display quality']
multi_path: ['[A] it [O] not at all pleasant [S] bad [C] laptop usability [SSEP] [A] screen quality [O] so - so [S] great [C] display quality', '[A] it [S] bad [O] not at all pleasant [C] laptop usability [SSEP] [A] screen quality [S] great [O] so - so [C] display quality', '[A] it [O] not at all pleasant [C] laptop usability [S] bad [SSEP] [A] screen quality [O] so - so [C] display quality [S] great', '[O] not at all pleasant [A] it [S] bad [C] laptop usability [SSEP] [O] so - so [A] screen quality [S] great [C] display quality', '[O] not at all pleasant [A] it [C] laptop usability [S] bad [SSEP] [O] so - so [A] screen quality [C] display quality [S] great']

task, data: acos laptop16
target: [('company general', 'asus product', 'bad', 'null')]
output: ['[A] asus product [O] null [S] bad [C] laptop general']
sent: ['and', 'not', 'buy', 'any', 'asus', 'product', 'again']
counter: {('laptop general', 'asus product', 'bad', 'null'): 5}
output quads: ['[A] asus product [O] null [S] bad [C] laptop general']
multi_path: ['[A] asus product [O] null [S] bad [C] laptop general', '[A] asus product [S] bad [O] null [C] laptop general', '[A] asus product [O] null [C] laptop general [S] bad', '[O] null [A] asus product [S] bad [C] laptop general', '[O] null [A] asus product [C] laptop general [S] bad']

task, data: acos laptop16
target: [('laptop general', 'null', 'ok', 'ok')]
output: ['[A] null [O] dead [S] bad [C] laptop quality', '[A] null [O] ok [S] bad [C] laptop general']
sent: ['the', 'third', 'one', 'is', 'ok', 'but', 'has', 'a', 'dead', 'pixel', '.']
counter: {('laptop general', 'null', 'bad', 'ok'): 4, ('laptop quality', 'null', 'bad', 'dead'): 5, ('laptop general', 'null', 'ok', 'ok'): 1}
output quads: ['[A] null [O] ok [S] bad [C] laptop general', '[A] null [O] dead [S] bad [C] laptop quality']
multi_path: ['[A] it [O] ok [S] bad [C] laptop general [SSEP] [A] it [O] dead [S] bad [C] laptop quality', '[A] it [S] bad [O] ok [C] laptop general [SSEP] [A] it [S] bad [O] dead [C] laptop quality', '[A] it [O] ok [C] laptop general [S] bad [SSEP] [A] it [O] dead [C] laptop quality [S] bad', '[O] ok [A] it [S] bad [C] laptop general [SSEP] [O] dead [A] it [S] bad [C] laptop quality', '[O] ok [A] it [C] laptop general [S] ok [SSEP] [O] dead [A] it [C] laptop quality [S] bad']

task, data: acos laptop16
target: [('laptop connectivity', 'crap', 'bad', 'null')]
output: ['[A] crap [O] crap [S] bad [C] laptop connectivity']
sent: ['this', 'piece', 'of', 'crap', 'won', "'", 't', 'hold', 'a', 'wifi', 'signal', 'or', 'has', 'a', 'really', 'weak', 'signal', '.']
counter: {('laptop connectivity', 'crap', 'bad', 'crap'): 5, ('laptop connectivity', 'wifi', 'bad', 'weak'): 2, ('laptop connectivity', 'wifi signal', 'bad', 'weak'): 1, ('laptop connectivity', 'signal', 'bad', 'weak'): 2}
output quads: ['[A] crap [O] crap [S] bad [C] laptop connectivity']
multi_path: ['[A] crap [O] crap [S] bad [C] laptop connectivity [SSEP] [A] wifi [O] weak [S] bad [C] laptop connectivity', '[A] crap [S] bad [O] crap [C] laptop connectivity [SSEP] [A] wifi [S] bad [O] weak [C] laptop connectivity', '[A] crap [O] crap [C] laptop connectivity [S] bad [SSEP] [A] wifi signal [O] weak [C] laptop connectivity [S] bad', '[O] crap [A] crap [S] bad [C] laptop connectivity [SSEP] [O] weak [A] signal [S] bad [C] laptop connectivity', '[O] crap [A] crap [C] laptop connectivity [S] bad [SSEP] [O] weak [A] signal [C] laptop connectivity [S] bad']

task, data: acos laptop16
target: [('cpu operation_performance', 'intel m3 processor', 'great', 'amazing'), ('software general', 'google play store', 'great', 'nice'), ('software operation_performance', 'android apps', 'great', 'null')]
output: ['[A] android apps variants [O] null [S] great [C] software general', '[A] google play store [O] nice [S] great [C] software general', '[A] intel m3 processor [O] amazing [S] great [C] cpu operation_performance']
sent: ['the', 'intel', 'm3', 'processor', 'is', 'amazing', ',', 'this', 'thing', 'can', 'do', 'a', 'ton', 'of', 'multi', '-', 'tasking', 'and', 'the', 'google', 'play', 'store', 'is', 'nice', 'to', 'have', ',', 'the', 'android', 'apps', 'variants', 'trump', 'the', 'chromebook', 'pre', '-', 'loaded', 'apps', '.']
counter: {('cpu operation_performance', 'intel m3 processor', 'great', 'amazing'): 5, ('software general', 'google play store', 'great', 'nice'): 5, ('software general', 'android apps variants', 'great', 'null'): 4}
output quads: ['[A] intel m3 processor [O] amazing [S] great [C] cpu operation_performance', '[A] google play store [O] nice [S] great [C] software general', '[A] android apps variants [O] null [S] great [C] software general']
multi_path: ['[A] intel m3 processor [O] amazing [S] great [C] cpu operation_performance [SSEP] [A] google play store [O] nice [S] great [C] software general [SSEP] [A] android apps variants [O] null [S] great [C] software general', '[A] intel m3 processor [S] great [O] amazing [C] cpu operation_performance [SSEP] [A] google play store [S] great [O] nice [C] software general [SSEP] [A] android apps variants [S] great [O] null [C] software general', '[A] intel m3 processor [O] amazing [C] cpu operation_performance [S] great [SSEP] [A] google play store [O] nice [C] software general [S] great', '[O] amazing [A] intel m3 processor [S] great [C] cpu operation_performance [SSEP] [O] nice [A] google play store [S] great [C] software general [SSEP] [O] null [A] android apps variants [S] great [C] software general', '[O] amazing [A] intel m3 processor [C] cpu operation_performance [S] great [SSEP] [O] nice [A] google play store [C] software general [S] great [SSEP] [O] null [A] android apps variants [C] software general [S] great']

task, data: acos laptop16
target: [('laptop general', 'chromebook', 'great', 'great'), ('laptop operation_performance', 'chromebook', 'bad', 'null')]
output: ['[A] chromebook [O] great [S] great [C] laptop general', '[A] chromebook [O] null [S] bad [C] power_supply operation_performance']
sent: ['a', 'great', 'chromebook', ',', 'but', 'stopped', 'charging', 'in', '3', 'months', '.']
counter: {('laptop general', 'chromebook', 'great', 'great'): 5, ('power_supply operation_performance', 'chromebook', 'bad', 'null'): 5}
output quads: ['[A] chromebook [O] great [S] great [C] laptop general', '[A] chromebook [O] null [S] bad [C] power_supply operation_performance']
multi_path: ['[A] chromebook [O] great [S] great [C] laptop general [SSEP] [A] chromebook [O] null [S] bad [C] power_supply operation_performance', '[A] chromebook [S] great [O] great [C] laptop general [SSEP] [A] chromebook [S] bad [O] null [C] power_supply operation_performance', '[A] chromebook [O] great [C] laptop general [S] great [SSEP] [A] chromebook [O] null [C] power_supply operation_performance [S] bad', '[O] great [A] chromebook [S] great [C] laptop general [SSEP] [O] null [A] chromebook [S] bad [C] power_supply operation_performance', '[O] great [A] chromebook [C] laptop general [S] great [SSEP] [O] null [A] chromebook [C] power_supply operation_performance [S] bad']

task, data: acos laptop16
target: [('laptop general', 'product', 'great', 'excited'), ('laptop price', 'product', 'great', 'affordable')]
output: ['[A] product [O] affordable [S] great [C] laptop price', '[A] product [O] excited [S] great [C] laptop price']
sent: ['i', 'was', 'really', 'excited', 'to', 'purchase', 'this', 'product', 'because', 'it', 'was', 'more', 'affordable', '.']
counter: {('laptop price', 'product', 'great', 'excited'): 5, ('laptop price', 'product', 'great', 'affordable'): 3}
output quads: ['[A] product [O] excited [S] great [C] laptop price', '[A] product [O] affordable [S] great [C] laptop price']
multi_path: ['[A] product [O] excited [S] great [C] laptop price', '[A] product [S] great [O] excited [C] laptop price', '[A] product [O] excited [C] laptop price [S] great [SSEP] [A] product [O] affordable [C] laptop price [S] great', '[O] excited [A] product [S] great [C] laptop price [SSEP] [O] affordable [A] product [S] great [C] laptop price', '[O] excited [A] product [C] laptop price [S] great [SSEP] [O] affordable [A] product [C] laptop price [S] great']

task, data: acos laptop16
target: [('laptop design_features', 'chromebooks', 'great', 'cool'), ('laptop operation_performance', 'chromebooks', 'bad', 'null')]
output: ['[A] chromebooks [O] cool [S] great [C] laptop general']
sent: ['chromebooks', 'are', 'cool', ',', 'but', 'they', 'dont', 'last', 'at', 'all', '.']
counter: {('laptop general', 'chromebooks', 'great', 'cool'): 5}
output quads: ['[A] chromebooks [O] cool [S] great [C] laptop general']
multi_path: ['[A] chromebooks [O] cool [S] great [C] laptop general', '[A] chromebooks [S] great [O] cool [C] laptop general', '[A] chromebooks [O] cool [C] laptop general [S] great', '[O] cool [A] chromebooks [S] great [C] laptop general', '[O] cool [A] chromebooks [C] laptop general [S] great']

task, data: acos laptop16
target: [('battery operation_performance', 'battery', 'bad', 'null')]
output: ['[A] battery [O] null [S] bad [C] battery quality']
sent: ['battery', 'no', 'longer', 'charging', '.']
counter: {('battery quality', 'battery', 'bad', 'null'): 5}
output quads: ['[A] battery [O] null [S] bad [C] battery quality']
multi_path: ['[A] battery [O] null [S] bad [C] battery quality', '[A] battery [S] bad [O] null [C] battery quality', '[A] battery [O] null [C] battery quality [S] bad', '[O] null [A] battery [S] bad [C] battery quality', '[O] null [A] battery [C] battery quality [S] bad']

task, data: acos laptop16
target: [('os usability', 'file system', 'bad', 'complicated')]
output: ['[A] file system [O] complicated [S] bad [C] software usability']
sent: ['furthermore', ',', 'the', 'file', 'system', 'is', 'extremely', 'complicated', 'to', 'use', '.']
counter: {('software usability', 'file system', 'bad', 'complicated'): 5}
output quads: ['[A] file system [O] complicated [S] bad [C] software usability']
multi_path: ['[A] file system [O] complicated [S] bad [C] software usability', '[A] file system [S] bad [O] complicated [C] software usability', '[A] file system [O] complicated [C] software usability [S] bad', '[O] complicated [A] file system [S] bad [C] software usability', '[O] complicated [A] file system [C] software usability [S] bad']

task, data: acos laptop16
target: [('display quality', 'display panel on', 'bad', 'warped')]
output: ['[A] display panel [O] warped [S] bad [C] display operation_performance']
sent: ['the', 'display', 'panel', 'on', 'the', 'machine', 'i', 'received', 'is', 'warped', '.']
counter: {('display operation_performance', 'display panel', 'bad', 'warped'): 5}
output quads: ['[A] display panel [O] warped [S] bad [C] display operation_performance']
multi_path: ['[A] display panel [O] warped [S] bad [C] display operation_performance', '[A] display panel [S] bad [O] warped [C] display operation_performance', '[A] display panel [O] warped [C] display operation_performance [S] bad', '[O] warped [A] display panel [S] bad [C] display operation_performance', '[O] warped [A] display panel [C] display operation_performance [S] bad']

task, data: acos laptop16
target: [('hardware design_features', 'hardware', 'great', 'great'), ('laptop general', 'machine', 'great', 'great'), ('os general', 'chrome os', 'bad', 'sucks'), ('software general', 'cloud applications', 'bad', 'sucks')]
output: ['[A] chrome os [O] sucks [S] bad [C] os design_features', '[A] cloud applications [O] sucks [S] bad [C] software design_features', '[A] machine [O] great [S] great [C] laptop design_features']
sent: ['the', 'machine', 'looks', 'great', 'from', 'the', 'hardware', 'point', ',', 'but', 'the', 'whole', 'concept', 'of', 'chrome', 'os', 'and', 'cloud', 'applications', 'sucks', '.']
counter: {('laptop design_features', 'machine', 'great', 'great'): 5, ('os design_features', 'chrome os', 'bad', 'sucks'): 5, ('software design_features', 'cloud applications', 'bad', 'sucks'): 5}
output quads: ['[A] machine [O] great [S] great [C] laptop design_features', '[A] chrome os [O] sucks [S] bad [C] os design_features', '[A] cloud applications [O] sucks [S] bad [C] software design_features']
multi_path: ['[A] machine [O] great [S] great [C] laptop design_features [SSEP] [A] chrome os [O] sucks [S] bad [C] os design_features [SSEP] [A] cloud applications [O] sucks [S] bad [C] software design_features', '[A] machine [S] great [O] great [C] laptop design_features [SSEP] [A] chrome os [S] bad [O] sucks [C] os design_features [SSEP] [A] cloud applications [S] bad [O] sucks [C] software design_features', '[A] machine [O] great [C] laptop design_features [S] great [SSEP] [A] chrome os [O] sucks [C] os design_features [S] bad [SSEP] [A] cloud applications [O] sucks [C] software design_features [S] bad', '[O] great [A] machine [S] great [C] laptop design_features [SSEP] [O] sucks [A] chrome os [S] bad [C] os design_features [SSEP] [O] sucks [A] cloud applications [S] bad [C] software design_features', '[O] great [A] machine [C] laptop design_features [S] great [SSEP] [O] sucks [A] chrome os [C] os design_features [S] bad [SSEP] [O] sucks [A] cloud applications [C] software design_features [S] bad']

task, data: acos laptop16
target: [('hardware design_features', 'screen hinge', 'bad', 'weak')]
output: ['[A] screen hinge [O] weak [S] bad [C] display quality']
sent: ['the', 'screen', 'hinge', 'feels', 'weak', '.']
counter: {('display quality', 'screen hinge', 'bad', 'weak'): 5}
output quads: ['[A] screen hinge [O] weak [S] bad [C] display quality']
multi_path: ['[A] screen hinge [O] weak [S] bad [C] display quality', '[A] screen hinge [S] bad [O] weak [C] display quality', '[A] screen hinge [O] weak [C] display quality [S] bad', '[O] weak [A] screen hinge [S] bad [C] display quality', '[O] weak [A] screen hinge [C] display quality [S] bad']

task, data: acos laptop16
target: [('display quality', 'screen', 'ok', 'average')]
output: ['[A] screen [O] average [S] ok [C] display general']
sent: ['screen', 'is', 'average', 'by', '2017', 'standards', '.']
counter: {('display general', 'screen', 'ok', 'average'): 4, ('display quality', 'screen', 'ok', 'average'): 1}
output quads: ['[A] screen [O] average [S] ok [C] display general']
multi_path: ['[A] screen [O] average [S] ok [C] display general', '[A] screen [S] ok [O] average [C] display general', '[A] screen [O] average [C] display quality [S] ok', '[O] average [A] screen [S] ok [C] display general', '[O] average [A] screen [C] display general [S] ok']

task, data: acos laptop16
target: [('support general', 'customer support', 'bad', 'null'), ('support general', 'google', 'bad', 'null')]
output: ['[A] google [O] null [S] bad [C] company general']
sent: ['google', 'provides', 'zeros', 'customer', 'support', 'related', 'to', 'the', 'os', '.']
counter: {('company general', 'google', 'bad', 'null'): 4, ('support general', 'google', 'bad', 'null'): 1}
output quads: ['[A] google [O] null [S] bad [C] company general']
multi_path: ['[A] google [O] null [S] bad [C] company general', '[A] google [S] bad [O] null [C] company general', '[A] google [O] null [C] company general [S] bad', '[O] null [A] google [S] bad [C] company general', '[O] null [A] google [C] support general [S] bad']

task, data: acos laptop16
target: [('support general', 'tech support', 'bad', 'no help')]
output: ['[A] tech support [O] null [S] bad [C] support general']
sent: ['tech', 'support', 'is', 'no', 'help', 'unless', 'you', 'are', 'willing', 'to', 'part', 'with', 'your', 'computer', 'for', 'months', 'without', 'guarantee', 'of', 'return', '.']
counter: {('support general', 'tech support', 'bad', 'null'): 5}
output quads: ['[A] tech support [O] null [S] bad [C] support general']
multi_path: ['[A] tech support [O] null [S] bad [C] support general', '[A] tech support [S] bad [O] null [C] support general', '[A] tech support [O] null [C] support general [S] bad', '[O] null [A] tech support [S] bad [C] support general', '[O] null [A] tech support [C] support general [S] bad']

task, data: acos laptop16
target: [('laptop general', 'chromebook', 'bad', 'difficult')]
output: ['[A] chromebook [O] difficult [S] bad [C] laptop operation_performance']
sent: ['i', 'am', 'having', 'a', 'very', 'difficult', 'time', 'with', 'this', 'chromebook', '.']
counter: {('laptop operation_performance', 'chromebook', 'bad', 'difficult'): 5}
output quads: ['[A] chromebook [O] difficult [S] bad [C] laptop operation_performance']
multi_path: ['[A] chromebook [O] difficult [S] bad [C] laptop operation_performance', '[A] chromebook [S] bad [O] difficult [C] laptop operation_performance', '[A] chromebook [O] difficult [C] laptop operation_performance [S] bad', '[O] difficult [A] chromebook [S] bad [C] laptop operation_performance', '[O] difficult [A] chromebook [C] laptop operation_performance [S] bad']

task, data: acos laptop16
target: [('multimedia_devices operation_performance', 'microphone', 'bad', 'null'), ('multimedia_devices operation_performance', 'speaker', 'bad', 'null')]
output: ['[A] microphone [O] null [S] bad [C] multimedia_devices usability']
sent: ['the', 'microphone', 'does', 'not', 'work', 'with', 'regular', 'speaker', '.']
counter: {('multimedia_devices usability', 'microphone', 'bad', 'null'): 5}
output quads: ['[A] microphone [O] null [S] bad [C] multimedia_devices usability']
multi_path: ['[A] microphone [O] null [S] bad [C] multimedia_devices usability', '[A] microphone [S] bad [O] null [C] multimedia_devices usability', '[A] microphone [O] null [C] multimedia_devices usability [S] bad', '[O] null [A] microphone [S] bad [C] multimedia_devices usability', '[O] null [A] microphone [C] multimedia_devices usability [S] bad']

task, data: acos laptop16
target: [('laptop general', 'tablet mode', 'bad', 'horribly'), ('os general', 'os', 'bad', 'horribly'), ('software general', 'applications', 'bad', 'horribly')]
output: ['[A] tablet mode [O] horribly [S] bad [C] laptop design_features']
sent: ['the', 'tablet', 'mode', 'is', 'horribly', 'integrated', 'with', 'the', 'os', 'and', 'applications', '.']
counter: {('laptop design_features', 'tablet mode', 'bad', 'horribly'): 5}
output quads: ['[A] tablet mode [O] horribly [S] bad [C] laptop design_features']
multi_path: ['[A] tablet mode [O] horribly [S] bad [C] laptop design_features', '[A] tablet mode [S] bad [O] horribly [C] laptop design_features', '[A] tablet mode [O] horribly [C] laptop design_features [S] bad', '[O] horribly [A] tablet mode [S] bad [C] laptop design_features', '[O] horribly [A] tablet mode [C] laptop design_features [S] bad']

task, data: acos laptop16
target: [('support general', 'null', 'bad', 'null')]
output: ['[A] null [O] null [S] bad [C] laptop general']
sent: ['i', 'tried', 'returning', 'the', 'second', 'one', 'bu', 'it', 'does', 'n', "'", 't', 'give', 'me', 'the', 'option', 'to', 'return', 'it', '.']
counter: {('laptop general', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [O] null [S] bad [C] laptop general']
multi_path: ['[A] it [O] null [S] bad [C] laptop general', '[A] it [S] bad [O] null [C] laptop general', '[A] it [O] null [C] laptop general [S] bad', '[O] null [A] it [S] bad [C] laptop general', '[O] null [A] it [C] laptop general [S] bad']

task, data: acos laptop16
target: [('laptop general', 'laptop', 'great', 'okay')]
output: ['[A] laptop [O] okay [S] ok [C] laptop general']
sent: ['this', 'is', 'nothing', 'more', 'than', 'an', 'okay', 'laptop', 'to', 'get', 'you', 'through', 'basic', 'work', 'activities', '.']
counter: {('laptop general', 'laptop', 'ok', 'okay'): 5}
output quads: ['[A] laptop [O] okay [S] ok [C] laptop general']
multi_path: ['[A] laptop [O] okay [S] ok [C] laptop general', '[A] laptop [S] ok [O] okay [C] laptop general', '[A] laptop [O] okay [C] laptop general [S] ok', '[O] okay [A] laptop [S] ok [C] laptop general', '[O] okay [A] laptop [C] laptop general [S] ok']

task, data: acos laptop16
target: [('keyboard general', 'trackpad', 'bad', 'annoying')]
output: ['[A] trackpad [O] annoying [S] bad [C] hardware operation_performance']
sent: ['however', ',', 'mine', 'came', 'with', 'an', 'annoying', 'trackpad', '.']
counter: {('hardware operation_performance', 'trackpad', 'bad', 'annoying'): 5}
output quads: ['[A] trackpad [O] annoying [S] bad [C] hardware operation_performance']
multi_path: ['[A] trackpad [O] annoying [S] bad [C] hardware operation_performance', '[A] trackpad [S] bad [O] annoying [C] hardware operation_performance', '[A] trackpad [O] annoying [C] hardware operation_performance [S] bad', '[O] annoying [A] trackpad [S] bad [C] hardware operation_performance', '[O] annoying [A] trackpad [C] hardware operation_performance [S] bad']

task, data: acos laptop16
target: [('hardware design_features', 'top metal monitor casing', 'bad', 'bendable'), ('hardware design_features', 'top metal monitor casing', 'bad', 'soft')]
output: ['[A] metal monitor casing [O] bendable [S] great [C] hardware quality', '[A] metal monitor casing [O] soft [S] great [C] hardware quality']
sent: ['the', 'top', 'metal', 'monitor', 'casing', 'seems', 'to', 'be', 'soft', 'and', 'bendable', '.']
counter: {('hardware quality', 'metal monitor casing', 'great', 'soft'): 5, ('hardware quality', 'metal monitor casing', 'great', 'bendable'): 5}
output quads: ['[A] metal monitor casing [O] soft [S] great [C] hardware quality', '[A] metal monitor casing [O] bendable [S] great [C] hardware quality']
multi_path: ['[A] metal monitor casing [O] soft [S] great [C] hardware quality [SSEP] [A] metal monitor casing [O] bendable [S] great [C] hardware quality', '[A] metal monitor casing [S] great [O] soft [C] hardware quality [SSEP] [A] metal monitor casing [S] great [O] bendable [C] hardware quality', '[A] metal monitor casing [O] soft [C] hardware quality [S] great [SSEP] [A] metal monitor casing [O] bendable [C] hardware quality [S] great', '[O] soft [A] metal monitor casing [S] great [C] hardware quality [SSEP] [O] bendable [A] metal monitor casing [S] great [C] hardware quality', '[O] soft [A] metal monitor casing [C] hardware quality [S] great [SSEP] [O] bendable [A] metal monitor casing [C] hardware quality [S] great']

task, data: acos laptop16
target: [('display quality', 'metal screen casing', 'bad', 'bent')]
output: ['[A] metal screen casing [O] null [S] bad [C] display quality']
sent: ['mine', 'arrived', 'with', 'the', 'metal', 'screen', 'casing', 'slightly', 'bent', ',', 'i', 'can', 'easily', 'bend', 'it', 'back', ',', 'not', 'sure', 'about', 'the', 'durability', 'of', 'this', 'thing', 'in', 'the', 'long', 'term', '.']
counter: {('display quality', 'metal screen casing', 'bad', 'null'): 5}
output quads: ['[A] metal screen casing [O] null [S] bad [C] display quality']
multi_path: ['[A] metal screen casing [O] null [S] bad [C] display quality', '[A] metal screen casing [S] bad [O] null [C] display quality', '[A] metal screen casing [O] null [C] display quality [S] bad', '[O] null [A] metal screen casing [S] bad [C] display quality', '[O] null [A] metal screen casing [C] display quality [S] bad']

task, data: acos laptop16
target: [('ports quality', 'usb port', 'bad', 'null')]
output: ['[A] right side usb port [O] null [S] bad [C] ports operation_performance']
sent: ['however', ',', 'shortly', 'after', 'i', 'received', 'it', ',', 'a', 'buzzing', 'sound', 'started', 'coming', 'out', 'of', 'the', 'right', 'side', 'usb', 'port', '.']
counter: {('ports operation_performance', 'right side usb port', 'bad', 'null'): 5}
output quads: ['[A] right side usb port [O] null [S] bad [C] ports operation_performance']
multi_path: ['[A] right side usb port [O] null [S] bad [C] ports operation_performance', '[A] right side usb port [S] bad [O] null [C] ports operation_performance', '[A] right side usb port [O] null [C] ports operation_performance [S] bad', '[O] null [A] right side usb port [S] bad [C] ports operation_performance', '[O] null [A] right side usb port [C] ports operation_performance [S] bad']

task, data: acos laptop16
target: [('laptop general', 'chromebook', 'bad', 'null'), ('support general', 'customer service', 'bad', 'bad')]
output: ['[A] chromebook [O] null [S] bad [C] laptop design_features', '[A] customer service [O] bad [S] bad [C] support general']
sent: ['so', 'chromebook', 'with', 'some', 'manufacturing', 'issues', '+', 'bad', 'customer', 'service']
counter: {('laptop design_features', 'chromebook', 'bad', 'null'): 3, ('support general', 'customer service', 'bad', 'bad'): 5, ('laptop general', 'chromebook', 'bad', 'null'): 2}
output quads: ['[A] chromebook [O] null [S] bad [C] laptop design_features', '[A] customer service [O] bad [S] bad [C] support general']
multi_path: ['[A] chromebook [O] null [S] bad [C] laptop design_features [SSEP] [A] customer service [O] bad [S] bad [C] support general', '[A] chromebook [S] bad [O] null [C] laptop design_features [SSEP] [A] customer service [S] bad [O] bad [C] support general', '[A] chromebook [O] null [C] laptop general [S] bad [SSEP] [A] customer service [O] bad [C] support general [S] bad', '[O] null [A] chromebook [S] bad [C] laptop design_features [SSEP] [O] bad [A] customer service [S] bad [C] support general', '[O] null [A] chromebook [C] laptop general [S] bad [SSEP] [O] bad [A] customer service [C] support general [S] bad']

task, data: acos laptop16
target: [('display design_features', 'screen', 'bad', 'null')]
output: ['[A] fonts [O] small [S] bad [C] software design_features']
sent: ['they', '1080', 'screen', 'makes', 'the', 'fonts', 'to', 'small', 'for', 'this', 'size', 'screen', '.']
counter: {('software design_features', 'fonts', 'bad', 'small'): 5}
output quads: ['[A] fonts [O] small [S] bad [C] software design_features']
multi_path: ['[A] fonts [O] small [S] bad [C] software design_features', '[A] fonts [S] bad [O] small [C] software design_features', '[A] fonts [O] small [C] software design_features [S] bad', '[O] small [A] fonts [S] bad [C] software design_features', '[O] small [A] fonts [C] software design_features [S] bad']

task, data: acos laptop16
target: [('laptop price', 'windows pc', 'bad', 'cheap'), ('laptop price', 'windows pc', 'bad', 'not recommend'), ('os general', 'chromium os', 'bad', 'limiting')]
output: ['[A] chromium os [O] limiting [S] bad [C] os operation_performance', '[A] chromium os [O] not recommend [S] bad [C] os operation_performance']
sent: ['i', 'find', 'the', 'chromium', 'os', 'to', 'be', 'very', 'limiting', 'and', 'would', 'not', 'recommend', 'it', 'over', 'a', 'cheap', 'windows', 'pc', '.']
counter: {('os operation_performance', 'chromium os', 'bad', 'limiting'): 5, ('os operation_performance', 'chromium os', 'bad', 'not recommend'): 5}
output quads: ['[A] chromium os [O] limiting [S] bad [C] os operation_performance', '[A] chromium os [O] not recommend [S] bad [C] os operation_performance']
multi_path: ['[A] chromium os [O] limiting [S] bad [C] os operation_performance [SSEP] [A] chromium os [O] not recommend [S] bad [C] os operation_performance', '[A] chromium os [S] bad [O] limiting [C] os operation_performance [SSEP] [A] chromium os [S] bad [O] not recommend [C] os operation_performance', '[A] chromium os [O] limiting [C] os operation_performance [S] bad [SSEP] [A] chromium os [O] not recommend [C] os operation_performance [S] bad', '[O] limiting [A] chromium os [S] bad [C] os operation_performance [SSEP] [O] not recommend [A] chromium os [S] bad [C] os operation_performance', '[O] limiting [A] chromium os [C] os operation_performance [S] bad [SSEP] [O] not recommend [A] chromium os [C] os operation_performance [S] bad']

task, data: acos laptop16
target: [('keyboard general', 'keyboard', 'great', 'fantastic')]
output: ['[A] keyboard [O] fantastic [S] great [C] keyboard general', '[A] null [O] null [S] ok [C] keyboard general']
sent: ['the', 'keyboard', 'is', 'fantastic', ',', 'but', 'it', "'", 's', 'just', 'a', 'keyboard', '.']
counter: {('keyboard general', 'keyboard', 'great', 'fantastic'): 5, ('keyboard general', 'null', 'ok', 'null'): 5}
output quads: ['[A] keyboard [O] fantastic [S] great [C] keyboard general', '[A] null [O] null [S] ok [C] keyboard general']
multi_path: ['[A] keyboard [O] fantastic [S] great [C] keyboard general [SSEP] [A] it [O] null [S] ok [C] keyboard general', '[A] keyboard [S] great [O] fantastic [C] keyboard general [SSEP] [A] it [S] ok [O] null [C] keyboard general', '[A] keyboard [O] fantastic [C] keyboard general [S] great [SSEP] [A] it [O] null [C] keyboard general [S] ok', '[O] fantastic [A] keyboard [S] great [C] keyboard general [SSEP] [O] null [A] it [S] ok [C] keyboard general', '[O] fantastic [A] keyboard [C] keyboard general [S] great [SSEP] [O] null [A] it [C] keyboard general [S] ok']

task, data: acos laptop16
target: [('keyboard design_features', 'touchpad', 'bad', 'strange')]
output: ['[A] touchpad [O] strange [S] bad [C] hardware design_features']
sent: ['the', 'touchpad', 'is', 'also', 'some', 'strange', 'off', 'color', 'plastic', '.']
counter: {('hardware design_features', 'touchpad', 'bad', 'strange'): 5}
output quads: ['[A] touchpad [O] strange [S] bad [C] hardware design_features']
multi_path: ['[A] touchpad [O] strange [S] bad [C] hardware design_features', '[A] touchpad [S] bad [O] strange [C] hardware design_features', '[A] touchpad [O] strange [C] hardware design_features [S] bad', '[O] strange [A] touchpad [S] bad [C] hardware design_features', '[O] strange [A] touchpad [C] hardware design_features [S] bad']

task, data: acos laptop16
target: [('keyboard operation_performance', 'trackpad', 'bad', 'erratic'), ('keyboard operation_performance', 'trackpad', 'bad', 'faulty'), ('keyboard operation_performance', 'trackpad', 'bad', 'jerky')]
output: ['[A] cursor [O] jerky [S] bad [C] keyboard operation_performance', '[A] cursor [O] smooth [S] bad [C] keyboard operation_performance', '[A] trackpad [O] faulty [S] bad [C] hardware operation_performance']
sent: ['1', '-', 'faulty', 'trackpad', 'resulting', 'in', 'jerky', 'erratic', 'cursor', 'movement', 'relative', 'to', 'the', 'smooth', 'movement', 'of', 'your', 'finger', '.']
counter: {('hardware operation_performance', 'trackpad', 'bad', 'faulty'): 5, ('keyboard operation_performance', 'cursor', 'bad', 'jerky'): 5, ('keyboard operation_performance', 'cursor', 'bad', 'smooth'): 3, ('keyboard operation_performance', 'finger', 'great', 'smooth'): 2}
output quads: ['[A] trackpad [O] faulty [S] bad [C] hardware operation_performance', '[A] cursor [O] jerky [S] bad [C] keyboard operation_performance', '[A] cursor [O] smooth [S] bad [C] keyboard operation_performance']
multi_path: ['[A] trackpad [O] faulty [S] bad [C] hardware operation_performance [SSEP] [A] cursor [O] jerky [S] bad [C] keyboard operation_performance [SSEP] [A] cursor [O] smooth [S] bad [C] keyboard operation_performance', '[A] trackpad [S] bad [O] faulty [C] hardware operation_performance [SSEP] [A] cursor [S] bad [O] jerky [C] keyboard operation_performance [SSEP] [A] cursor [S] bad [O] smooth [C] keyboard operation_performance', '[A] trackpad [O] faulty [C] hardware operation_performance [S] bad [SSEP] [A] cursor [O] jerky [C] keyboard operation_performance [S] bad [SSEP] [A] cursor [O] smooth [C] keyboard operation_performance [S] bad', '[O] faulty [A] trackpad [S] bad [C] hardware operation_performance [SSEP] [O] jerky [A] cursor [S] bad [C] keyboard operation_performance [SSEP] [O] smooth [A] finger [S] great [C] keyboard operation_performance', '[O] faulty [A] trackpad [C] hardware operation_performance [S] bad [SSEP] [O] jerky [A] cursor [C] keyboard operation_performance [S] bad [SSEP] [O] smooth [A] finger [C] keyboard operation_performance [S] great']

task, data: acos laptop16
target: [('display quality', 'screen', 'bad', 'null')]
output: ['[A] screen [O] dead [S] bad [C] display quality']
sent: ['i', 'then', 'noticed', 'a', 'dead', 'pixel', 'on', 'the', 'screen', '.']
counter: {('display quality', 'screen', 'bad', 'dead'): 5}
output quads: ['[A] screen [O] dead [S] bad [C] display quality']
multi_path: ['[A] screen [O] dead [S] bad [C] display quality', '[A] screen [S] bad [O] dead [C] display quality', '[A] screen [O] dead [C] display quality [S] bad', '[O] dead [A] screen [S] bad [C] display quality', '[O] dead [A] screen [C] display quality [S] bad']

task, data: acos laptop16
target: [('laptop operation_performance', 'chromebook', 'great', 'great'), ('laptop operation_performance', 'chromebook', 'great', 'speedy')]
output: ['[A] chromebook [O] great [S] great [C] laptop general', '[A] chromebook [O] speedy [S] great [C] laptop operation_performance']
sent: ['however', ',', 'if', 'you', 'want', 'a', 'really', 'speedy', 'chromebook', ',', 'it', "'", 's', 'great', '.']
counter: {('laptop operation_performance', 'chromebook', 'great', 'speedy'): 5, ('laptop general', 'chromebook', 'great', 'great'): 5}
output quads: ['[A] chromebook [O] speedy [S] great [C] laptop operation_performance', '[A] chromebook [O] great [S] great [C] laptop general']
multi_path: ['[A] chromebook [O] speedy [S] great [C] laptop operation_performance [SSEP] [A] chromebook [O] great [S] great [C] laptop general', '[A] chromebook [S] great [O] speedy [C] laptop operation_performance [SSEP] [A] chromebook [S] great [O] great [C] laptop general', '[A] chromebook [O] speedy [C] laptop operation_performance [S] great [SSEP] [A] chromebook [O] great [C] laptop general [S] great', '[O] speedy [A] chromebook [S] great [C] laptop operation_performance [SSEP] [O] great [A] chromebook [S] great [C] laptop general', '[O] speedy [A] chromebook [C] laptop operation_performance [S] great [SSEP] [O] great [A] chromebook [C] laptop general [S] great']

task, data: acos laptop16
target: [('laptop quality', 'unit', 'bad', 'died')]
output: ['[A] unit [O] died [S] bad [C] laptop general']
sent: ['the', 'first', 'unit', 'i', 'received', 'shortly', 'died', 'after', 'a', 'few', 'hours', 'of', 'usage', '.']
counter: {('laptop general', 'unit', 'bad', 'died'): 5}
output quads: ['[A] unit [O] died [S] bad [C] laptop general']
multi_path: ['[A] unit [O] died [S] bad [C] laptop general', '[A] unit [S] bad [O] died [C] laptop general', '[A] unit [O] died [C] laptop general [S] bad', '[O] died [A] unit [S] bad [C] laptop general', '[O] died [A] unit [C] laptop general [S] bad']

task, data: acos laptop16
target: [('fans&cooling general', 'thermaltake auto laptop cooling pad', 'ok', 'null')]
output: ['[A] cooler boost button [O] like [S] great [C] fans&cooling design_features']
sent: ['i', 'like', 'the', 'addition', 'of', 'the', 'cooler', 'boost', 'button', ',', 'but', 'most', 'of', 'the', 'time', 'i', 'don', "'", 't', 'have', 'to', 'use', 'it', 'because', 'i', 'have', 'a', 'thermaltake', 'auto', 'laptop', 'cooling', 'pad', 'that', 'monitors', 'the', 'bottom', 'surface', 'of', 'my', 'laptop', '.']
counter: {('fans&cooling design_features', 'cooler boost button', 'great', 'like'): 5}
output quads: ['[A] cooler boost button [O] like [S] great [C] fans&cooling design_features']
multi_path: ['[A] cooler boost button [O] like [S] great [C] fans&cooling design_features', '[A] cooler boost button [S] great [O] like [C] fans&cooling design_features', '[A] cooler boost button [O] like [C] fans&cooling design_features [S] great', '[O] like [A] cooler boost button [S] great [C] fans&cooling design_features', '[O] like [A] cooler boost button [C] fans&cooling design_features [S] great']

task, data: acos laptop16
target: [('hardware design_features', 'wireless card', 'bad', 'finicky')]
output: ['[A] wireless card [O] finicky [S] bad [C] ports usability']
sent: ['wireless', 'card', 'is', 'finicky', 'with', 'both', 'units', 'i', 'had', '.']
counter: {('ports usability', 'wireless card', 'bad', 'finicky'): 5}
output quads: ['[A] wireless card [O] finicky [S] bad [C] ports usability']
multi_path: ['[A] wireless card [O] finicky [S] bad [C] ports usability', '[A] wireless card [S] bad [O] finicky [C] ports usability', '[A] wireless card [O] finicky [C] ports usability [S] bad', '[O] finicky [A] wireless card [S] bad [C] ports usability', '[O] finicky [A] wireless card [C] ports usability [S] bad']

task, data: acos laptop16
target: [('laptop connectivity', 'laptop', 'bad', 'null')]
output: ['[A] laptop [O] null [S] bad [C] laptop operation_performance']
sent: ['my', 'laptop', 'seems', 'to', 'lose', 'its', 'internet', 'connection', 'at', 'random', 'times', '.']
counter: {('laptop operation_performance', 'laptop', 'bad', 'null'): 5}
output quads: ['[A] laptop [O] null [S] bad [C] laptop operation_performance']
multi_path: ['[A] laptop [O] null [S] bad [C] laptop operation_performance', '[A] laptop [S] bad [O] null [C] laptop operation_performance', '[A] laptop [O] null [C] laptop operation_performance [S] bad', '[O] null [A] laptop [S] bad [C] laptop operation_performance', '[O] null [A] laptop [C] laptop operation_performance [S] bad']

task, data: acos laptop16
target: [('hardware quality', 'hardware', 'bad', 'defective')]
output: ['[A] hardware [O] defective [S] bad [C] hardware operation_performance', '[A] hardware [O] replaced [S] bad [C] hardware operation_performance']
sent: ['after', 'being', 'on', 'the', 'phone', 'with', 'technical', 'support', 'and', 'windows', 'support', 'for', 'a', 'combined', '10', 'hours', ',', 'i', 'am', 'told', 'that', 'the', 'hardware', 'is', 'defective', 'and', 'must', 'be', 'replaced', '.']
counter: {('hardware operation_performance', 'hardware', 'bad', 'defective'): 5, ('hardware operation_performance', 'hardware', 'bad', 'replaced'): 3}
output quads: ['[A] hardware [O] defective [S] bad [C] hardware operation_performance', '[A] hardware [O] replaced [S] bad [C] hardware operation_performance']
multi_path: ['[A] hardware [O] defective [S] bad [C] hardware operation_performance [SSEP] [A] hardware [O] replaced [S] bad [C] hardware operation_performance', '[A] hardware [S] bad [O] defective [C] hardware operation_performance [SSEP] [A] hardware [S] bad [O] replaced [C] hardware operation_performance', '[A] hardware [O] defective [C] hardware operation_performance [S] bad', '[O] defective [A] hardware [S] bad [C] hardware operation_performance', '[O] defective [A] hardware [C] hardware operation_performance [S] bad [SSEP] [O] replaced [A] hardware [C] hardware operation_performance [S] bad']

task, data: acos laptop16
target: [('laptop quality', 'null', 'bad', 'break')]
output: ['[A] null [O] null [S] bad [C] laptop operation_performance']
sent: ['it', 'will', 'break', ',', 'even', 'if', 'it', 'works', 'at', 'first', '.']
counter: {('laptop operation_performance', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [O] null [S] bad [C] laptop operation_performance']
multi_path: ['[A] it [O] null [S] bad [C] laptop operation_performance', '[A] it [S] bad [O] null [C] laptop operation_performance', '[A] it [O] null [C] laptop operation_performance [S] bad', '[O] null [A] it [S] bad [C] laptop operation_performance', '[O] null [A] it [C] laptop operation_performance [S] bad']

task, data: acos laptop16
target: [('display quality', 'display', 'bad', 'crash'), ('hard_disc quality', 'disk', 'bad', 'null'), ('laptop quality', 'laptop', 'bad', 'null'), ('software quality', 'some driver', 'bad', 'fail')]
output: ['[A] disk [O] crash [S] bad [C] hard_disc operation_performance', '[A] display [O] crash [S] bad [C] display operation_performance', '[A] driver [O] fail [S] bad [C] software operation_performance', '[A] null [O] null [S] bad [C] laptop operation_performance']
sent: ['literally', 'just', 'closing', 'it', 'and', 'opening', 'it', 'up', 'later', 'was', 'a', '50', '/', '50', 'proposition', 'if', 'it', 'would', 'wake', 'up', ',', 'or', 'the', 'display', 'would', 'crash', ',', 'or', 'the', 'disk', 'would', 'crash', ',', 'or', 'some', 'driver', 'would', 'fail', '-', 'on', 'a', 'brand', 'new', 'laptop', '.']
counter: {('laptop operation_performance', 'null', 'bad', 'null'): 5, ('display operation_performance', 'display', 'bad', 'crash'): 5, ('hard_disc operation_performance', 'disk', 'bad', 'crash'): 5, ('software operation_performance', 'driver', 'bad', 'fail'): 5}
output quads: ['[A] null [O] null [S] bad [C] laptop operation_performance', '[A] display [O] crash [S] bad [C] display operation_performance', '[A] disk [O] crash [S] bad [C] hard_disc operation_performance', '[A] driver [O] fail [S] bad [C] software operation_performance']
multi_path: ['[A] it [O] null [S] bad [C] laptop operation_performance [SSEP] [A] display [O] crash [S] bad [C] display operation_performance [SSEP] [A] disk [O] crash [S] bad [C] hard_disc operation_performance [SSEP] [A] driver [O] fail [S] bad [C] software operation_performance', '[A] it [S] bad [O] null [C] laptop operation_performance [SSEP] [A] display [S] bad [O] crash [C] display operation_performance [SSEP] [A] disk [S] bad [O] crash [C] hard_disc operation_performance [SSEP] [A] driver [S] bad [O] fail [C] software operation_performance', '[A] it [O] null [C] laptop operation_performance [S] bad [SSEP] [A] display [O] crash [C] display operation_performance [S] bad [SSEP] [A] disk [O] crash [C] hard_disc operation_performance [S] bad [SSEP] [A] driver [O] fail [C] software operation_performance [S] bad', '[O] null [A] it [S] bad [C] laptop operation_performance [SSEP] [O] crash [A] display [S] bad [C] display operation_performance [SSEP] [O] crash [A] disk [S] bad [C] hard_disc operation_performance [SSEP] [O] fail [A] driver [S] bad [C] software operation_performance', '[O] null [A] it [C] laptop operation_performance [S] bad [SSEP] [O] crash [A] display [C] display operation_performance [S] bad [SSEP] [O] crash [A] disk [C] hard_disc operation_performance [S] bad [SSEP] [O] fail [A] driver [C] software operation_performance [S] bad']

task, data: acos laptop16
target: [('laptop operation_performance', 'machine', 'great', 'null')]
output: ['[A] machine [O] high [S] great [C] laptop operation_performance']
sent: ['hook', 'up', 'the', 'cat5', 'and', 'the', 'machine', 'is', 'screaming', 'at', 'high', 'speed', 'and', 'exactly', 'what', 'i', 'was', 'hoping', 'for', '.']
counter: {('laptop operation_performance', 'machine', 'great', 'high'): 5}
output quads: ['[A] machine [O] high [S] great [C] laptop operation_performance']
multi_path: ['[A] machine [O] high [S] great [C] laptop operation_performance', '[A] machine [S] great [O] high [C] laptop operation_performance', '[A] machine [O] high [C] laptop operation_performance [S] great', '[O] high [A] machine [S] great [C] laptop operation_performance', '[O] high [A] machine [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('os operation_performance', 'system', 'bad', 'poor')]
output: ['[A] system [O] poor shape [S] bad [C] os quality']
sent: ['by', 'the', 'time', 'i', 'was', 'returning', 'it', ',', 'the', 'system', 'was', 'in', 'such', 'poor', 'shape', 'from', 'the', 'msi', '.']
counter: {('os quality', 'system', 'bad', 'poor shape'): 5}
output quads: ['[A] system [O] poor shape [S] bad [C] os quality']
multi_path: ['[A] system [O] poor shape [S] bad [C] os quality', '[A] system [S] bad [O] poor shape [C] os quality', '[A] system [O] poor shape [C] os quality [S] bad', '[O] poor shape [A] system [S] bad [C] os quality', '[O] poor shape [A] system [C] os quality [S] bad']

task, data: acos laptop16
target: [('laptop operation_performance', 'laptop', 'great', 'well')]
output: ['[A] laptop [O] well [S] great [C] laptop price']
sent: ['i', 'believe', 'if', 'you', 'happen', 'to', 'uninstall', '/', 'install', 'the', 'drivers', 'in', 'exactly', 'the', 'correct', 'order', 'and', '/', 'or', 'do', 'a', 'clean', 'win', '10', 'installation', 'yourself', ',', 'this', 'laptop', 'should', 'perform', 'well', 'for', 'the', 'price', '.']
counter: {('laptop price', 'laptop', 'great', 'well'): 5}
output quads: ['[A] laptop [O] well [S] great [C] laptop price']
multi_path: ['[A] laptop [O] well [S] great [C] laptop price', '[A] laptop [S] great [O] well [C] laptop price', '[A] laptop [O] well [C] laptop price [S] great', '[O] well [A] laptop [S] great [C] laptop price', '[O] well [A] laptop [C] laptop price [S] great']

task, data: acos laptop16
target: [('laptop operation_performance', 'msi', 'great', 'liked'), ('laptop price', 'msi', 'great', 'decent')]
output: ['[A] msi [O] liked [S] great [C] company general', '[A] performance [O] decent [S] great [C] laptop price']
sent: ['i', "'", 've', 'always', 'liked', 'msi', 'for', 'their', 'performance', 'and', 'fairly', 'decent', 'price', '.']
counter: {('company general', 'msi', 'great', 'liked'): 5, ('laptop price', 'performance', 'great', 'decent'): 3, ('company price', 'msi', 'great', 'decent'): 2}
output quads: ['[A] msi [O] liked [S] great [C] company general', '[A] performance [O] decent [S] great [C] laptop price']
multi_path: ['[A] msi [O] liked [S] great [C] company general [SSEP] [A] performance [O] decent [S] great [C] laptop price', '[A] msi [S] great [O] liked [C] company general [SSEP] [A] performance [S] great [O] decent [C] laptop price', '[A] msi [O] liked [C] company general [S] great [SSEP] [A] performance [O] decent [C] laptop price [S] great', '[O] liked [A] msi [S] great [C] company general [SSEP] [O] decent [A] msi [S] great [C] company price', '[O] liked [A] msi [C] company general [S] great [SSEP] [O] decent [A] msi [C] company price [S] great']

task, data: acos laptop16
target: [('battery operation_performance', 'battery', 'bad', 'null')]
output: ['[A] battery [O] null [S] great [C] battery operation_performance']
sent: ['it', 'was', 'actually', 'more', 'like', '1h45m', 'and', 'this', 'was', 'also', 'after', 'optimizing', 'the', 'battery', '.']
counter: {('battery operation_performance', 'battery', 'great', 'null'): 5}
output quads: ['[A] battery [O] null [S] great [C] battery operation_performance']
multi_path: ['[A] battery [O] null [S] great [C] battery operation_performance', '[A] battery [S] great [O] null [C] battery operation_performance', '[A] battery [O] null [C] battery operation_performance [S] great', '[O] null [A] battery [S] great [C] battery operation_performance', '[O] null [A] battery [C] battery operation_performance [S] great']

task, data: acos laptop16
target: [('laptop operation_performance', 'laptop', 'bad', 'null')]
output: ['[A] laptop [O] null [S] bad [C] laptop quality']
sent: ['so', ',', 'four', 'days', 'after', 'buying', 'this', 'laptop', ',', 'it', 'stopped', 'booting', '.']
counter: {('laptop quality', 'laptop', 'bad', 'null'): 5}
output quads: ['[A] laptop [O] null [S] bad [C] laptop quality']
multi_path: ['[A] laptop [O] null [S] bad [C] laptop quality', '[A] laptop [S] bad [O] null [C] laptop quality', '[A] laptop [O] null [C] laptop quality [S] bad', '[O] null [A] laptop [S] bad [C] laptop quality', '[O] null [A] laptop [C] laptop quality [S] bad']

task, data: acos laptop16
target: [('laptop general', 'laptop', 'bad', 'not worth')]
output: ['[A] laptop [O] not worth [S] bad [C] laptop general', '[A] laptop [O] not worth [S] bad [C] laptop price']
sent: ['this', 'laptop', 'is', 'not', 'worth', 'the', 'time', 'and', 'definitely', 'not', 'the', 'money', '.']
counter: {('laptop general', 'laptop', 'bad', 'not worth'): 5, ('laptop price', 'laptop', 'bad', 'not worth'): 5}
output quads: ['[A] laptop [O] not worth [S] bad [C] laptop general', '[A] laptop [O] not worth [S] bad [C] laptop price']
multi_path: ['[A] laptop [O] not worth [S] bad [C] laptop general [SSEP] [A] laptop [O] not worth [S] bad [C] laptop price', '[A] laptop [S] bad [O] not worth [C] laptop general [SSEP] [A] laptop [S] bad [O] not worth [C] laptop price', '[A] laptop [O] not worth [C] laptop general [S] bad [SSEP] [A] laptop [O] not worth [C] laptop price [S] bad', '[O] not worth [A] laptop [S] bad [C] laptop general [SSEP] [O] not worth [A] laptop [S] bad [C] laptop price', '[O] not worth [A] laptop [C] laptop general [S] bad [SSEP] [O] not worth [A] laptop [C] laptop price [S] bad']

task, data: acos laptop16
target: [('support operation_performance', 'tech support', 'bad', 'null')]
output: ['[A] tech support [O] null [S] bad [C] support general']
sent: ['we', 'call', 'tech', 'support', 'together', 'and', 'the', 'guy', 'who', 'answers', 'is', 'just', 'so', 'not', 'interested', 'in', 'helping', '.']
counter: {('support general', 'tech support', 'bad', 'null'): 5}
output quads: ['[A] tech support [O] null [S] bad [C] support general']
multi_path: ['[A] tech support [O] null [S] bad [C] support general', '[A] tech support [S] bad [O] null [C] support general', '[A] tech support [O] null [C] support general [S] bad', '[O] null [A] tech support [S] bad [C] support general', '[O] null [A] tech support [C] support general [S] bad']

task, data: acos laptop16
target: [('laptop general', 'second laptop', 'bad', 'died')]
output: ['[A] laptop [O] died [S] bad [C] laptop general']
sent: ['got', 'the', 'second', 'laptop', ',', 'died', 'within', 'a', 'month', 'and', 'same', 'thing', '.']
counter: {('laptop general', 'laptop', 'bad', 'died'): 5}
output quads: ['[A] laptop [O] died [S] bad [C] laptop general']
multi_path: ['[A] laptop [O] died [S] bad [C] laptop general', '[A] laptop [S] bad [O] died [C] laptop general', '[A] laptop [O] died [C] laptop general [S] bad', '[O] died [A] laptop [S] bad [C] laptop general', '[O] died [A] laptop [C] laptop general [S] bad']

task, data: acos laptop16
target: [('hardware quality', 'hardware', 'bad', 'null'), ('laptop quality', 'laptop', 'bad', 'null')]
output: ['[A] hardware [O] null [S] bad [C] hardware general', '[A] laptop [O] null [S] bad [C] laptop general']
sent: ['this', 'kept', 'plaguing', 'the', 'laptop', 'as', 'more', 'problems', 'kept', 'piling', 'up', 'including', 'various', 'bsod', 'errors', 'mostly', 'involving', 'the', 'hardware', '.']
counter: {('laptop general', 'laptop', 'bad', 'null'): 5, ('hardware general', 'hardware', 'bad', 'null'): 5}
output quads: ['[A] laptop [O] null [S] bad [C] laptop general', '[A] hardware [O] null [S] bad [C] hardware general']
multi_path: ['[A] laptop [O] null [S] bad [C] laptop general [SSEP] [A] hardware [O] null [S] bad [C] hardware general', '[A] laptop [S] bad [O] null [C] laptop general [SSEP] [A] hardware [S] bad [O] null [C] hardware general', '[A] laptop [O] null [C] laptop general [S] bad [SSEP] [A] hardware [O] null [C] hardware general [S] bad', '[O] null [A] laptop [S] bad [C] laptop general [SSEP] [O] null [A] hardware [S] bad [C] hardware general', '[O] null [A] laptop [C] laptop general [S] bad [SSEP] [O] null [A] hardware [C] hardware general [S] bad']

task, data: acos laptop16
target: [('laptop general', 'laptop', 'great', 'like'), ('multimedia_devices general', 'msi headset', 'great', 'nice')]
output: ['[A] laptop [O] like [S] great [C] laptop general', '[A] msi headset [O] nice [S] great [C] connectivity general']
sent: ['quite', 'like', 'this', 'laptop', 'so', 'far', ',', 'only', 'writing', 'this', 'review', 'so', 'early', 'from', 'owning', 'it', 'to', 'receive', 'that', 'nice', 'msi', 'headset', '.']
counter: {('laptop general', 'laptop', 'great', 'like'): 5, ('connectivity general', 'msi headset', 'great', 'nice'): 5}
output quads: ['[A] laptop [O] like [S] great [C] laptop general', '[A] msi headset [O] nice [S] great [C] connectivity general']
multi_path: ['[A] laptop [O] like [S] great [C] laptop general [SSEP] [A] msi headset [O] nice [S] great [C] connectivity general', '[A] laptop [S] great [O] like [C] laptop general [SSEP] [A] msi headset [S] great [O] nice [C] connectivity general', '[A] laptop [O] like [C] laptop general [S] great [SSEP] [A] msi headset [O] nice [C] connectivity general [S] great', '[O] like [A] laptop [S] great [C] laptop general [SSEP] [O] nice [A] msi headset [S] great [C] connectivity general', '[O] like [A] laptop [C] laptop general [S] great [SSEP] [O] nice [A] msi headset [C] connectivity general [S] great']

task, data: acos laptop16
target: [('company general', 'msi', 'bad', 'not too happy'), ('laptop general', 'laptop', 'bad', 'not too happy')]
output: ['[A] msi [O] not too happy [S] bad [C] company general']
sent: ['not', 'too', 'happy', 'with', 'msi', ',', 'likely', 'to', 'return', 'this', 'laptop', '.']
counter: {('company general', 'msi', 'bad', 'not too happy'): 5}
output quads: ['[A] msi [O] not too happy [S] bad [C] company general']
multi_path: ['[A] msi [O] not too happy [S] bad [C] company general', '[A] msi [S] bad [O] not too happy [C] company general', '[A] msi [O] not too happy [C] company general [S] bad', '[O] not too happy [A] msi [S] bad [C] company general', '[O] not too happy [A] msi [C] company general [S] bad']

task, data: acos laptop16
target: [('laptop general', 'laptop', 'great', 'great')]
output: ['[A] laptop [O] great [S] great [C] laptop operation_performance']
sent: ['this', 'laptop', 'was', 'great', 'starting', 'out', 'of', 'the', 'box', '.']
counter: {('laptop operation_performance', 'laptop', 'great', 'great'): 5}
output quads: ['[A] laptop [O] great [S] great [C] laptop operation_performance']
multi_path: ['[A] laptop [O] great [S] great [C] laptop operation_performance', '[A] laptop [S] great [O] great [C] laptop operation_performance', '[A] laptop [O] great [C] laptop operation_performance [S] great', '[O] great [A] laptop [S] great [C] laptop operation_performance', '[O] great [A] laptop [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('support general', 'customer tech support', 'bad', 'good luck'), ('support general', 'msi', 'bad', 'good luck')]
output: ['[A] customer tech support [O] null [S] bad [C] support general']
sent: ['good', 'luck', 'this', 'customer', 'tech', 'support', 'and', 'msi', 'has', 'absolutely', 'no', 'idea', 'how', 'to', 'help', 'you', '.']
counter: {('support general', 'customer tech support', 'bad', 'null'): 5}
output quads: ['[A] customer tech support [O] null [S] bad [C] support general']
multi_path: ['[A] customer tech support [O] null [S] bad [C] support general', '[A] customer tech support [S] bad [O] null [C] support general', '[A] customer tech support [O] null [C] support general [S] bad', '[O] null [A] customer tech support [S] bad [C] support general', '[O] null [A] customer tech support [C] support general [S] bad']

task, data: acos laptop16
target: [('laptop general', 'null', 'bad', 'garbage')]
output: ['[A] garbage [O] garbage [S] bad [C] laptop general']
sent: ['i', "'", 've', 'had', 'to', 'do', 'a', 'factory', 'reset', 'on', 'this', 'piece', 'of', 'garbage', '4', 'times', 'and', 'i', "'", 've', 'only', 'owned', 'it', 'for', '4', 'months', '.']
counter: {('laptop general', 'garbage', 'bad', 'garbage'): 5}
output quads: ['[A] garbage [O] garbage [S] bad [C] laptop general']
multi_path: ['[A] garbage [O] garbage [S] bad [C] laptop general', '[A] garbage [S] bad [O] garbage [C] laptop general', '[A] garbage [O] garbage [C] laptop general [S] bad', '[O] garbage [A] garbage [S] bad [C] laptop general', '[O] garbage [A] garbage [C] laptop general [S] bad']

task, data: acos laptop16
target: [('laptop general', 'msi product', 'bad', 'null')]
output: ['[A] msi product [O] null [S] bad [C] company general']
sent: ['i', 'will', 'never', 'own', 'another', 'msi', 'product', '.']
counter: {('company general', 'msi product', 'bad', 'null'): 5}
output quads: ['[A] msi product [O] null [S] bad [C] company general']
multi_path: ['[A] msi product [O] null [S] bad [C] company general', '[A] msi product [S] bad [O] null [C] company general', '[A] msi product [O] null [C] company general [S] bad', '[O] null [A] msi product [S] bad [C] company general', '[O] null [A] msi product [C] company general [S] bad']

task, data: acos laptop16
target: [('laptop general', 'laptop', 'bad', 'bad'), ('laptop general', 'laptop', 'bad', 'solid')]
output: ['[A] laptop [O] bad [S] bad [C] laptop general', '[A] laptop [O] solid [S] great [C] laptop general']
sent: ['now', 'i', 'feel', 'bad', 'buying', 'this', 'for', 'my', 'child', ',', 'as', 'this', 'laptop', 'seem', 'to', 'have', 'a', 'solid', 'rating', 'elsewhere', '.']
counter: {('laptop general', 'laptop', 'bad', 'bad'): 5, ('laptop general', 'laptop', 'great', 'solid'): 5}
output quads: ['[A] laptop [O] bad [S] bad [C] laptop general', '[A] laptop [O] solid [S] great [C] laptop general']
multi_path: ['[A] laptop [O] bad [S] bad [C] laptop general [SSEP] [A] laptop [O] solid [S] great [C] laptop general', '[A] laptop [S] bad [O] bad [C] laptop general [SSEP] [A] laptop [S] great [O] solid [C] laptop general', '[A] laptop [O] bad [C] laptop general [S] bad [SSEP] [A] laptop [O] solid [C] laptop general [S] great', '[O] bad [A] laptop [S] bad [C] laptop general [SSEP] [O] solid [A] laptop [S] great [C] laptop general', '[O] bad [A] laptop [C] laptop general [S] bad [SSEP] [O] solid [A] laptop [C] laptop general [S] great']

task, data: acos laptop16
target: [('laptop general', 'laptop', 'bad', 'stuck')]
output: ['[A] laptop [O] null [S] bad [C] laptop quality']
sent: ['so', 'i', "'", 'm', 'stuck', 'with', 'a', '3', 'month', 'old', 'laptop', 'that', 'does', 'n', "'", 't', 'work', '.']
counter: {('laptop quality', 'laptop', 'bad', 'null'): 5}
output quads: ['[A] laptop [O] null [S] bad [C] laptop quality']
multi_path: ['[A] laptop [O] null [S] bad [C] laptop quality', '[A] laptop [S] bad [O] null [C] laptop quality', '[A] laptop [O] null [C] laptop quality [S] bad', '[O] null [A] laptop [S] bad [C] laptop quality', '[O] null [A] laptop [C] laptop quality [S] bad']

task, data: acos laptop16
target: [('laptop quality', 'product', 'bad', 'slow')]
output: ['[A] product [O] slow [S] bad [C] laptop operation_performance']
sent: ['eventually', 'got', 'to', 'the', 'point', 'that', 'even', 'when', 'i', 'reinstalled', 'windows', 'it', 'was', 'so', 'slow', 'that', 'there', 'are', 'clearly', 'serious', 'build', 'defects', '/', 'instabilities', 'on', 'this', 'product', '.']
counter: {('laptop operation_performance', 'product', 'bad', 'slow'): 5}
output quads: ['[A] product [O] slow [S] bad [C] laptop operation_performance']
multi_path: ['[A] product [O] slow [S] bad [C] laptop operation_performance', '[A] product [S] bad [O] slow [C] laptop operation_performance', '[A] product [O] slow [C] laptop operation_performance [S] bad', '[O] slow [A] product [S] bad [C] laptop operation_performance', '[O] slow [A] product [C] laptop operation_performance [S] bad']

task, data: acos laptop16
target: [('laptop operation_performance', 'null', 'bad', 'great')]
output: ['[A] null [O] great [S] great [C] laptop operation_performance']
sent: ['when', 'it', 'is', 'functioning', 'it', 'works', 'great', '.']
counter: {('laptop operation_performance', 'null', 'great', 'great'): 5}
output quads: ['[A] null [O] great [S] great [C] laptop operation_performance']
multi_path: ['[A] it [O] great [S] great [C] laptop operation_performance', '[A] it [S] great [O] great [C] laptop operation_performance', '[A] it [O] great [C] laptop operation_performance [S] great', '[O] great [A] it [S] great [C] laptop operation_performance', '[O] great [A] it [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('laptop general', 'null', 'bad', 'garbage')]
output: ['[A] null [O] garbage [S] bad [C] laptop price']
sent: ['finding', 'out', 'you', 'bought', 'garbage', 'for', 'the', 'steep', 'price', 'of', '$', '700', '+', '.']
counter: {('laptop price', 'null', 'bad', 'garbage'): 5}
output quads: ['[A] null [O] garbage [S] bad [C] laptop price']
multi_path: ['[A] it [O] garbage [S] bad [C] laptop price', '[A] it [S] bad [O] garbage [C] laptop price', '[A] it [O] garbage [C] laptop price [S] bad', '[O] garbage [A] it [S] bad [C] laptop price', '[O] garbage [A] it [C] laptop price [S] bad']

task, data: acos laptop16
target: [('laptop general', 'laptop', 'great', 'decent'), ('laptop operation_performance', 'null', 'bad', 'null')]
output: ['[A] laptop [O] decent [S] bad [C] laptop general']
sent: ['overall', 'a', 'decent', 'laptop', 'if', 'not', 'for', 'these', 'problems', ',', 'also', ',', 'the', 'laptop', 'has', 'minor', 'screen', 'freezes', 'even', 'while', 'playing', 'low', 'graphical', 'games', 'like', 'league', 'of', 'legends', '.']
counter: {('laptop general', 'laptop', 'great', 'decent'): 2, ('laptop general', 'laptop', 'bad', 'decent'): 3}
output quads: ['[A] laptop [O] decent [S] bad [C] laptop general']
multi_path: ['[A] laptop [O] decent [S] great [C] laptop general', '[A] laptop [S] bad [O] decent [C] laptop general', '[A] laptop [O] decent [C] laptop general [S] bad', '[O] decent [A] laptop [S] great [C] laptop general', '[O] decent [A] laptop [C] laptop general [S] bad']

task, data: acos laptop16
target: [('laptop operation_performance', 'laptop', 'bad', 'null')]
output: ['[A] laptop [O] malfunctioned [S] bad [C] laptop operation_performance', '[A] laptop [O] null [S] bad [C] laptop operation_performance']
sent: ['laptop', 'malfunctioned', 'and', 'stopped', 'working', 'after', 'only', '3', 'months', '.']
counter: {('laptop operation_performance', 'laptop', 'bad', 'malfunctioned'): 5, ('laptop operation_performance', 'laptop', 'bad', 'null'): 5}
output quads: ['[A] laptop [O] malfunctioned [S] bad [C] laptop operation_performance', '[A] laptop [O] null [S] bad [C] laptop operation_performance']
multi_path: ['[A] laptop [O] malfunctioned [S] bad [C] laptop operation_performance [SSEP] [A] laptop [O] null [S] bad [C] laptop operation_performance', '[A] laptop [S] bad [O] malfunctioned [C] laptop operation_performance [SSEP] [A] laptop [S] bad [O] null [C] laptop operation_performance', '[A] laptop [O] malfunctioned [C] laptop operation_performance [S] bad [SSEP] [A] laptop [O] null [C] laptop operation_performance [S] bad', '[O] malfunctioned [A] laptop [S] bad [C] laptop operation_performance [SSEP] [O] null [A] laptop [S] bad [C] laptop operation_performance', '[O] malfunctioned [A] laptop [C] laptop operation_performance [S] bad [SSEP] [O] null [A] laptop [C] laptop operation_performance [S] bad']

task, data: acos laptop16
target: [('display general', 'screen', 'great', 'bright'), ('display general', 'screen', 'great', 'decent'), ('display general', 'screen', 'great', 'nice'), ('display general', 'screen', 'great', 'ok')]
output: ['[A] screen [O] bright [S] great [C] display quality', '[A] screen [O] decent [S] great [C] display quality', '[A] screen [O] nice [S] great [C] display design_features', '[A] screen [O] ok [S] ok [C] display quality']
sent: ['it', 'does', 'have', 'a', 'nice', 'screen', 'that', 'is', 'very', 'bright', ',', 'decent', 'viewing', 'angle', 'and', 'ok', 'for', 'contrast', '.']
counter: {('display design_features', 'screen', 'great', 'nice'): 5, ('display quality', 'screen', 'great', 'bright'): 4, ('display quality', 'screen', 'great', 'decent'): 4, ('display quality', 'screen', 'ok', 'ok'): 4, ('display design_features', 'screen', 'great', 'bright'): 1, ('display design_features', 'screen', 'great', 'decent'): 1, ('display design_features', 'screen', 'ok', 'ok'): 1}
output quads: ['[A] screen [O] nice [S] great [C] display design_features', '[A] screen [O] bright [S] great [C] display quality', '[A] screen [O] decent [S] great [C] display quality', '[A] screen [O] ok [S] ok [C] display quality']
multi_path: ['[A] screen [O] nice [S] great [C] display design_features [SSEP] [A] screen [O] bright [S] great [C] display quality [SSEP] [A] screen [O] decent [S] great [C] display quality [SSEP] [A] screen [O] ok [S] ok [C] display quality', '[A] screen [S] great [O] nice [C] display design_features [SSEP] [A] screen [S] great [O] bright [C] display design_features [SSEP] [A] screen [S] great [O] decent [C] display design_features [SSEP] [A] screen [S] ok [O] ok [C] display design_features', '[A] screen [O] nice [C] display design_features [S] great [SSEP] [A] screen [O] bright [C] display quality [S] great [SSEP] [A] screen [O] decent [C] display quality [S] great [SSEP] [A] screen [O] ok [C] display quality [S] ok', '[O] nice [A] screen [S] great [C] display design_features [SSEP] [O] bright [A] screen [S] great [C] display quality [SSEP] [O] decent [A] screen [S] great [C] display quality [SSEP] [O] ok [A] screen [S] ok [C] display quality', '[O] nice [A] screen [C] display design_features [S] great [SSEP] [O] bright [A] screen [C] display quality [S] great [SSEP] [O] decent [A] screen [C] display quality [S] great [SSEP] [O] ok [A] screen [C] display quality [S] ok']

task, data: acos laptop16
target: [('keyboard operation_performance', 'keyboard', 'great', 'nice'), ('keyboard operation_performance', 'keyboard', 'great', 'responsive')]
output: ['[A] keyboard [O] nice [S] great [C] keyboard general', '[A] keyboard [O] responsive [S] great [C] keyboard operation_performance']
sent: ['the', 'keyboard', 'is', 'very', 'nice', 'and', 'very', 'responsive', '.']
counter: {('keyboard general', 'keyboard', 'great', 'nice'): 5, ('keyboard operation_performance', 'keyboard', 'great', 'responsive'): 4, ('keyboard general', 'keyboard', 'great', 'responsive'): 1}
output quads: ['[A] keyboard [O] nice [S] great [C] keyboard general', '[A] keyboard [O] responsive [S] great [C] keyboard operation_performance']
multi_path: ['[A] keyboard [O] nice [S] great [C] keyboard general [SSEP] [A] keyboard [O] responsive [S] great [C] keyboard operation_performance', '[A] keyboard [S] great [O] nice [C] keyboard general [SSEP] [A] keyboard [S] great [O] responsive [C] keyboard operation_performance', '[A] keyboard [O] nice [C] keyboard general [S] great [SSEP] [A] keyboard [O] responsive [C] keyboard operation_performance [S] great', '[O] nice [A] keyboard [S] great [C] keyboard general [SSEP] [O] responsive [A] keyboard [S] great [C] keyboard operation_performance', '[O] nice [A] keyboard [C] keyboard general [S] great [SSEP] [O] responsive [A] keyboard [C] keyboard general [S] great']

task, data: acos laptop16
target: [('memory operation_performance', 'optane memory', 'great', 'love'), ('os operation_performance', 'bootup', 'great', 'love')]
output: ['[A] bootup time [O] love [S] great [C] os operation_performance', '[A] optane memory [O] fast [S] great [C] memory operation_performance', '[A] optane memory [O] nice [S] great [C] memory operation_performance']
sent: ['i', 'love', 'the', 'fast', 'bootup', 'time', 'with', 'the', 'optane', 'memory', ',', 'a', 'nice', 'alternative', 'to', 'a', 'very', 'expensive', 'ssd', '.']
counter: {('os operation_performance', 'bootup time', 'great', 'love'): 5, ('memory operation_performance', 'optane memory', 'great', 'fast'): 5, ('memory operation_performance', 'optane memory', 'great', 'nice'): 3, ('memory general', 'optane memory', 'great', 'nice'): 2}
output quads: ['[A] bootup time [O] love [S] great [C] os operation_performance', '[A] optane memory [O] fast [S] great [C] memory operation_performance', '[A] optane memory [O] nice [S] great [C] memory operation_performance']
multi_path: ['[A] bootup time [O] love [S] great [C] os operation_performance [SSEP] [A] optane memory [O] fast [S] great [C] memory operation_performance [SSEP] [A] optane memory [O] nice [S] great [C] memory operation_performance', '[A] bootup time [S] great [O] love [C] os operation_performance [SSEP] [A] optane memory [S] great [O] fast [C] memory operation_performance [SSEP] [A] optane memory [S] great [O] nice [C] memory operation_performance', '[A] bootup time [O] love [C] os operation_performance [S] great [SSEP] [A] optane memory [O] fast [C] memory operation_performance [S] great [SSEP] [A] optane memory [O] nice [C] memory general [S] great', '[O] love [A] bootup time [S] great [C] os operation_performance [SSEP] [O] fast [A] optane memory [S] great [C] memory operation_performance [SSEP] [O] nice [A] optane memory [S] great [C] memory operation_performance', '[O] love [A] bootup time [C] os operation_performance [S] great [SSEP] [O] fast [A] optane memory [C] memory operation_performance [S] great [SSEP] [O] nice [A] optane memory [C] memory general [S] great']

task, data: acos laptop16
target: [('power_supply operation_performance', 'charge', 'bad', 'null')]
output: ['[A] charge [O] null [S] great [C] power_supply operation_performance']
sent: ['the', 'charge', 'doesn', "'", 't', 'last', 'like', 'the', 'five', 'hours', 'it', 'stated', 'but', 'instead', 'last', 'three', 'hours', '.']
counter: {('power_supply operation_performance', 'charge', 'great', 'null'): 5}
output quads: ['[A] charge [O] null [S] great [C] power_supply operation_performance']
multi_path: ['[A] charge [O] null [S] great [C] power_supply operation_performance', '[A] charge [S] great [O] null [C] power_supply operation_performance', '[A] charge [O] null [C] power_supply operation_performance [S] great', '[O] null [A] charge [S] great [C] power_supply operation_performance', '[O] null [A] charge [C] power_supply operation_performance [S] great']

task, data: acos laptop16
target: [('laptop general', 'null', 'bad', 'null')]
output: ['[A] null [O] null [S] bad [C] laptop operation_performance']
sent: ['had', 'it', 'for', 'a', 'month', 'and', 'it', "'", 's', 'riddled', 'with', 'problems', '.']
counter: {('laptop operation_performance', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [O] null [S] bad [C] laptop operation_performance']
multi_path: ['[A] it [O] null [S] bad [C] laptop operation_performance', '[A] it [S] bad [O] null [C] laptop operation_performance', '[A] it [O] null [C] laptop operation_performance [S] bad', '[O] null [A] it [S] bad [C] laptop operation_performance', '[O] null [A] it [C] laptop operation_performance [S] bad']

task, data: acos laptop16
target: [('hard_disc operation_performance', 'hard drive', 'bad', 'slow')]
output: ['[A] hard drive [O] downside [S] bad [C] hard_disc operation_performance']
sent: ['as', 'others', 'have', 'said', ',', 'the', 'only', 'downside', 'is', 'the', 'slow', '5400', 'rpm', '1', 'tb', 'hard', 'drive', '.']
counter: {('hard_disc operation_performance', 'hard drive', 'bad', 'downside'): 5, ('hard_disc operation_performance', 'hard drive', 'bad', 'slow'): 1}
output quads: ['[A] hard drive [O] downside [S] bad [C] hard_disc operation_performance']
multi_path: ['[A] hard drive [O] downside [S] bad [C] hard_disc operation_performance', '[A] hard drive [S] bad [O] downside [C] hard_disc operation_performance', '[A] hard drive [O] downside [C] hard_disc operation_performance [S] bad', '[O] downside [A] hard drive [S] bad [C] hard_disc operation_performance', '[O] downside [A] hard drive [C] hard_disc operation_performance [S] bad [SSEP] [O] slow [A] hard drive [C] hard_disc operation_performance [S] bad']

task, data: acos laptop16
target: [('display design_features', 'ips matte fhd panel', 'great', 'good')]
output: ['[A] ips matte fhd panel [O] good [S] great [C] display design_features', '[A] ips matte fhd panel [O] null [S] great [C] display design_features']
sent: ['+', 'very', 'good', 'ips', 'matte', 'fhd', 'panel', ',', 'zero', 'reflections', ',', 'almost', 'zero', 'light', 'bleed', ',', 'average', 'brightness', '.']
counter: {('display design_features', 'ips matte fhd panel', 'great', 'good'): 5, ('display design_features', 'ips matte fhd panel', 'great', 'null'): 5, ('display design_features', 'brightness', 'great', 'average'): 1, ('display quality', 'brightness', 'great', 'average'): 1}
output quads: ['[A] ips matte fhd panel [O] good [S] great [C] display design_features', '[A] ips matte fhd panel [O] null [S] great [C] display design_features']
multi_path: ['[A] ips matte fhd panel [O] good [S] great [C] display design_features [SSEP] [A] ips matte fhd panel [O] null [S] great [C] display design_features', '[A] ips matte fhd panel [S] great [O] good [C] display design_features [SSEP] [A] ips matte fhd panel [S] great [O] null [C] display design_features [SSEP] [A] brightness [S] great [O] average [C] display design_features', '[A] ips matte fhd panel [O] good [C] display design_features [S] great [SSEP] [A] ips matte fhd panel [O] null [C] display design_features [S] great', '[O] good [A] ips matte fhd panel [S] great [C] display design_features [SSEP] [O] null [A] ips matte fhd panel [S] great [C] display design_features [SSEP] [O] average [A] brightness [S] great [C] display quality', '[O] good [A] ips matte fhd panel [C] display design_features [S] great [SSEP] [O] null [A] ips matte fhd panel [C] display design_features [S] great']

task, data: acos laptop16
target: [('ports design_features', 'ethernet port', 'bad', 'null')]
output: ['[A] ethernet port [O] null [S] bad [C] ports general']
sent: ['-', 'no', 'ethernet', 'port', '(', 'not', 'that', 'i', "'", 've', 'used', 'or', 'needed', 'one', 'that', 'i', 'can', 'recall', ')']
counter: {('ports general', 'ethernet port', 'bad', 'null'): 5}
output quads: ['[A] ethernet port [O] null [S] bad [C] ports general']
multi_path: ['[A] ethernet port [O] null [S] bad [C] ports general', '[A] ethernet port [S] bad [O] null [C] ports general', '[A] ethernet port [O] null [C] ports general [S] bad', '[O] null [A] ethernet port [S] bad [C] ports general', '[O] null [A] ethernet port [C] ports general [S] bad']

task, data: acos laptop16
target: [('keyboard design_features', 'keyboard', 'bad', 'null')]
output: ['[A] backlit keyboard [O] null [S] bad [C] keyboard general']
sent: ['no', 'backlit', 'keyboard', '.']
counter: {('keyboard general', 'backlit keyboard', 'bad', 'null'): 5}
output quads: ['[A] backlit keyboard [O] null [S] bad [C] keyboard general']
multi_path: ['[A] backlit keyboard [O] null [S] bad [C] keyboard general', '[A] backlit keyboard [S] bad [O] null [C] keyboard general', '[A] backlit keyboard [O] null [C] keyboard general [S] bad', '[O] null [A] backlit keyboard [S] bad [C] keyboard general', '[O] null [A] backlit keyboard [C] keyboard general [S] bad']

task, data: acos laptop16
target: [('power_supply operation_performance', 'power', 'great', 'null')]
output: ['[A] null [O] null [S] great [C] laptop operation_performance']
sent: ['it', 'has', 'plenty', 'of', 'power', 'for', 'most', 'tasks', '.']
counter: {('laptop operation_performance', 'null', 'great', 'null'): 5}
output quads: ['[A] null [O] null [S] great [C] laptop operation_performance']
multi_path: ['[A] it [O] null [S] great [C] laptop operation_performance', '[A] it [S] great [O] null [C] laptop operation_performance', '[A] it [O] null [C] laptop operation_performance [S] great', '[O] null [A] it [S] great [C] laptop operation_performance', '[O] null [A] it [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('laptop design_features', 'null', 'great', 'extendable'), ('laptop design_features', 'null', 'great', 'luckily')]
output: ['[A] hard drive [O] weak [S] bad [C] hard_disc design_features', '[A] laptop [O] extendable [S] great [C] laptop design_features']
sent: ['the', 'only', 'weak', 'point', 'of', 'the', 'laptop', 'is', 'the', 'hard', 'drive', 'it', 'come', 'with', ',', 'but', 'luckily', 'this', 'laptop', 'is', 'extendable', '-', '2', 'ram', 'slots', 'and', 'one', 'm', '.']
counter: {('hard_disc design_features', 'hard drive', 'bad', 'weak'): 5, ('laptop design_features', 'laptop', 'great', 'extendable'): 5}
output quads: ['[A] hard drive [O] weak [S] bad [C] hard_disc design_features', '[A] laptop [O] extendable [S] great [C] laptop design_features']
multi_path: ['[A] hard drive [O] weak [S] bad [C] hard_disc design_features [SSEP] [A] laptop [O] extendable [S] great [C] laptop design_features', '[A] hard drive [S] bad [O] weak [C] hard_disc design_features [SSEP] [A] laptop [S] great [O] extendable [C] laptop design_features', '[A] hard drive [O] weak [C] hard_disc design_features [S] bad [SSEP] [A] laptop [O] extendable [C] laptop design_features [S] great', '[O] weak [A] hard drive [S] bad [C] hard_disc design_features [SSEP] [O] extendable [A] laptop [S] great [C] laptop design_features', '[O] weak [A] hard drive [C] hard_disc design_features [S] bad [SSEP] [O] extendable [A] laptop [C] laptop design_features [S] great']

task, data: acos laptop16
target: [('laptop design_features', 'null', 'great', 'extendable'), ('laptop design_features', 'null', 'great', 'happy'), ('laptop design_features', 'weight', 'great', 'reasonable')]
output: ['[A] cpu [O] happy [S] great [C] cpu price', '[A] i5 - 8250u cpu [O] reasonable [S] great [C] cpu quality']
sent: ['i', 'paid', '$', '500', 'for', 'a', '15', '`', '`', 'notebook', 'with', '8gb', 'ram', ',', 'latest', 'i5', '-', '8250u', 'cpu', 'with', 'reasonable', 'weight', 'and', 'its', 'quite', 'extendable', ',', 'i', 'am', 'happy', 'for', 'this', 'deal', '.']
counter: {('cpu price', 'cpu', 'great', 'happy'): 3, ('cpu quality', 'i5 - 8250u cpu', 'great', 'reasonable'): 4, ('laptop design_features', 'null', 'great', 'extendable'): 2, ('laptop portability', 'null', 'great', 'extendable'): 1, ('laptop price', 'null', 'great', 'happy'): 2, ('cpu quality', 'cpu', 'great', 'reasonable'): 1, ('cpu operation_performance', 'cpu', 'great', 'extendable'): 2}
output quads: ['[A] cpu [O] happy [S] great [C] cpu price', '[A] i5 - 8250u cpu [O] reasonable [S] great [C] cpu quality']
multi_path: ['[A] cpu [O] happy [S] great [C] cpu price [SSEP] [A] i5 - 8250u cpu [O] reasonable [S] great [C] cpu quality [SSEP] [A] it [O] extendable [S] great [C] laptop design_features', '[A] cpu [S] great [O] happy [C] cpu price [SSEP] [A] i5 - 8250u cpu [S] great [O] reasonable [C] cpu quality [SSEP] [A] it [S] great [O] extendable [C] laptop design_features', '[A] cpu [O] happy [C] cpu price [S] great [SSEP] [A] i5 - 8250u cpu [O] reasonable [C] cpu quality [S] great [SSEP] [A] it [O] extendable [C] laptop portability [S] great', '[O] happy [A] it [S] great [C] laptop price [SSEP] [O] reasonable [A] cpu [S] great [C] cpu quality [SSEP] [O] extendable [A] cpu [S] great [C] cpu operation_performance', '[O] happy [A] it [C] laptop price [S] great [SSEP] [O] reasonable [A] i5 - 8250u cpu [C] cpu quality [S] great [SSEP] [O] extendable [A] cpu [C] cpu operation_performance [S] great']

task, data: acos laptop16
target: [('keyboard design_features', 'delete and power button', 'bad', 'complaining')]
output: ['[A] delete and power button [O] null [S] bad [C] keyboard design_features', '[A] power button [O] null [S] bad [C] keyboard design_features']
sent: ['also', ',', 'i', "'", 'm', 'not', 'a', 'fan', 'of', 'the', 'delete', 'and', 'power', 'button', 'being', 'next', 'to', 'each', 'other', ',', 'now', 'i', 'see', 'what', 'the', 'other', 'people', 'are', 'complaining', 'about', 'accidentally', 'shutting', 'it', 'off', '.']
counter: {('keyboard design_features', 'delete and power button', 'bad', 'null'): 5, ('keyboard design_features', 'power button', 'bad', 'null'): 5}
output quads: ['[A] delete and power button [O] null [S] bad [C] keyboard design_features', '[A] power button [O] null [S] bad [C] keyboard design_features']
multi_path: ['[A] delete and power button [O] null [S] bad [C] keyboard design_features [SSEP] [A] power button [O] null [S] bad [C] keyboard design_features', '[A] delete and power button [S] bad [O] null [C] keyboard design_features [SSEP] [A] power button [S] bad [O] null [C] keyboard design_features', '[A] delete and power button [O] null [C] keyboard design_features [S] bad [SSEP] [A] power button [O] null [C] keyboard design_features [S] bad', '[O] null [A] delete and power button [S] bad [C] keyboard design_features [SSEP] [O] null [A] power button [S] bad [C] keyboard design_features', '[O] null [A] delete and power button [C] keyboard design_features [S] bad [SSEP] [O] null [A] power button [C] keyboard design_features [S] bad']

task, data: acos laptop16
target: [('laptop operation_performance', 'null', 'great', 'glad')]
output: ['[A] null [O] glad [S] great [C] laptop general']
sent: ['haven', "'", 't', 'had', 'any', 'issues', 'yet', 'so', 'pretty', 'glad', 'i', 'chose', 'this', '.']
counter: {('laptop general', 'null', 'great', 'glad'): 5}
output quads: ['[A] null [O] glad [S] great [C] laptop general']
multi_path: ['[A] it [O] glad [S] great [C] laptop general', '[A] it [S] great [O] glad [C] laptop general', '[A] it [O] glad [C] laptop general [S] great', '[O] glad [A] it [S] great [C] laptop general', '[O] glad [A] it [C] laptop general [S] great']

task, data: acos laptop16
target: [('laptop design_features', 'laptop', 'great', 'nice looking'), ('laptop price', 'laptop', 'great', 'null')]
output: ['[A] laptop [O] nice [S] great [C] laptop price']
sent: ['very', 'nice', 'looking', 'laptop', 'for', 'the', 'money', '.']
counter: {('laptop price', 'laptop', 'great', 'nice'): 5}
output quads: ['[A] laptop [O] nice [S] great [C] laptop price']
multi_path: ['[A] laptop [O] nice [S] great [C] laptop price', '[A] laptop [S] great [O] nice [C] laptop price', '[A] laptop [O] nice [C] laptop price [S] great', '[O] nice [A] laptop [S] great [C] laptop price', '[O] nice [A] laptop [C] laptop price [S] great']

task, data: acos laptop16
target: [('display operation_performance', 'display', 'great', 'sharp'), ('os general', 'windows 10', 'great', 'null'), ('ports general', 'card slot', 'great', 'null')]
output: ['[A] card slot [O] null [S] great [C] memory design_features', '[A] display [O] sharp [S] great [C] display design_features', '[A] windows 10 [O] null [S] great [C] os design_features']
sent: ['features', 'windows', '10', ',', 'sharp', 'display', ',', 'and', 'card', 'slot', 'for', 'm', '.']
counter: {('os design_features', 'windows 10', 'great', 'null'): 5, ('display design_features', 'display', 'great', 'sharp'): 5, ('memory design_features', 'card slot', 'great', 'null'): 5}
output quads: ['[A] windows 10 [O] null [S] great [C] os design_features', '[A] display [O] sharp [S] great [C] display design_features', '[A] card slot [O] null [S] great [C] memory design_features']
multi_path: ['[A] windows 10 [O] null [S] great [C] os design_features [SSEP] [A] display [O] sharp [S] great [C] display design_features [SSEP] [A] card slot [O] null [S] great [C] memory design_features', '[A] windows 10 [S] great [O] null [C] os design_features [SSEP] [A] display [S] great [O] sharp [C] display design_features [SSEP] [A] card slot [S] great [O] null [C] memory design_features', '[A] windows 10 [O] null [C] os design_features [S] great [SSEP] [A] display [O] sharp [C] display design_features [S] great [SSEP] [A] card slot [O] null [C] memory design_features [S] great', '[O] null [A] windows 10 [S] great [C] os design_features [SSEP] [O] sharp [A] display [S] great [C] display design_features [SSEP] [O] null [A] card slot [S] great [C] memory design_features', '[O] null [A] windows 10 [C] os design_features [S] great [SSEP] [O] sharp [A] display [C] display design_features [S] great [SSEP] [O] null [A] card slot [C] memory design_features [S] great']

task, data: acos laptop16
target: [('laptop general', 'flip', 'great', 'like'), ('laptop quality', 'build quality', 'great', 'good')]
output: ['[A] build quality [O] good [S] great [C] laptop quality']
sent: ['like', 'the', 'flip', ',', 'this', 'has', 'good', 'build', 'quality', '.']
counter: {('laptop quality', 'build quality', 'great', 'good'): 5}
output quads: ['[A] build quality [O] good [S] great [C] laptop quality']
multi_path: ['[A] build quality [O] good [S] great [C] laptop quality', '[A] build quality [S] great [O] good [C] laptop quality', '[A] build quality [O] good [C] laptop quality [S] great', '[O] good [A] build quality [S] great [C] laptop quality', '[O] good [A] build quality [C] laptop quality [S] great']

task, data: acos laptop16
target: [('laptop general', 'stuff', 'great', 'good')]
output: ['[A] null [O] good [S] great [C] laptop general']
sent: ['all', 'in', 'all', ',', 'pretty', 'good', 'stuff', '.']
counter: {('laptop general', 'null', 'great', 'good'): 5}
output quads: ['[A] null [O] good [S] great [C] laptop general']
multi_path: ['[A] it [O] good [S] great [C] laptop general', '[A] it [S] great [O] good [C] laptop general', '[A] it [O] good [C] laptop general [S] great', '[O] good [A] it [S] great [C] laptop general', '[O] good [A] it [C] laptop general [S] great']

task, data: acos laptop16
target: [('laptop general', 'laptop', 'great', 'epic')]
output: ['[A] laptop [O] epic [S] great [C] laptop price']
sent: ['2', 'and', 'this', 'laptop', 'is', 'an', 'epic', 'powerhouse', 'for', 'under', '$', '700', '.']
counter: {('laptop price', 'laptop', 'great', 'epic'): 5, ('laptop operation_performance', 'laptop', 'great', 'powerhouse'): 2}
output quads: ['[A] laptop [O] epic [S] great [C] laptop price']
multi_path: ['[A] laptop [O] epic [S] great [C] laptop price', '[A] laptop [S] great [O] epic [C] laptop price', '[A] laptop [O] epic [C] laptop price [S] great [SSEP] [A] laptop [O] powerhouse [C] laptop operation_performance [S] great', '[O] epic [A] laptop [S] great [C] laptop price', '[O] epic [A] laptop [C] laptop price [S] great [SSEP] [O] powerhouse [A] laptop [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('laptop design_features', 'laptop', 'great', 'good'), ('laptop design_features', 'laptop', 'great', 'lightweight')]
output: ['[A] laptop [O] good [S] great [C] laptop general', '[A] laptop [O] lightweight [S] great [C] laptop portability']
sent: ['very', 'good', 'laptop', 'if', 'you', 'want', 'something', 'lightweight', 'for', 'everyday', 'browsing', '.']
counter: {('laptop general', 'laptop', 'great', 'good'): 5, ('laptop portability', 'laptop', 'great', 'lightweight'): 5}
output quads: ['[A] laptop [O] good [S] great [C] laptop general', '[A] laptop [O] lightweight [S] great [C] laptop portability']
multi_path: ['[A] laptop [O] good [S] great [C] laptop general [SSEP] [A] laptop [O] lightweight [S] great [C] laptop portability', '[A] laptop [S] great [O] good [C] laptop general [SSEP] [A] laptop [S] great [O] lightweight [C] laptop portability', '[A] laptop [O] good [C] laptop general [S] great [SSEP] [A] laptop [O] lightweight [C] laptop portability [S] great', '[O] good [A] laptop [S] great [C] laptop general [SSEP] [O] lightweight [A] laptop [S] great [C] laptop portability', '[O] good [A] laptop [C] laptop general [S] great [SSEP] [O] lightweight [A] laptop [C] laptop portability [S] great']

task, data: acos laptop16
target: [('hardware general', 'hardware', 'great', 'excellent'), ('os general', 'windows 10', 'great', 'nasty')]
output: ['[A] hardware [O] excellent [S] great [C] hardware general', '[A] windows 10 [O] nasty [S] bad [C] os operation_performance']
sent: ['excellent', 'hardware', ',', 'however', 'i', 'ran', 'into', 'some', 'nasty', 'trouble', 'after', 'updating', 'windows', '10', '.']
counter: {('hardware general', 'hardware', 'great', 'excellent'): 5, ('os operation_performance', 'windows 10', 'bad', 'nasty'): 5}
output quads: ['[A] hardware [O] excellent [S] great [C] hardware general', '[A] windows 10 [O] nasty [S] bad [C] os operation_performance']
multi_path: ['[A] hardware [O] excellent [S] great [C] hardware general [SSEP] [A] windows 10 [O] nasty [S] bad [C] os operation_performance', '[A] hardware [S] great [O] excellent [C] hardware general [SSEP] [A] windows 10 [S] bad [O] nasty [C] os operation_performance', '[A] hardware [O] excellent [C] hardware general [S] great [SSEP] [A] windows 10 [O] nasty [C] os operation_performance [S] bad', '[O] excellent [A] hardware [S] great [C] hardware general [SSEP] [O] nasty [A] windows 10 [S] bad [C] os operation_performance', '[O] excellent [A] hardware [C] hardware general [S] great [SSEP] [O] nasty [A] windows 10 [C] os operation_performance [S] bad']

task, data: acos laptop16
target: [('laptop operation_performance', 'null', 'bad', 'null')]
output: ['[A] null [O] null [S] bad [C] laptop general']
sent: ['so', ',', 'shortly', 'after', 'buying', 'it', 'i', 'had', 'to', 'format', 'it', '.']
counter: {('laptop general', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [O] null [S] bad [C] laptop general']
multi_path: ['[A] it [O] null [S] bad [C] laptop general', '[A] it [S] bad [O] null [C] laptop general', '[A] it [O] null [C] laptop general [S] bad', '[O] null [A] it [S] bad [C] laptop general', '[O] null [A] it [C] laptop general [S] bad']

task, data: acos laptop16
target: [('hardware operation_performance', 'fingerprint reader', 'great', 'null')]
output: ['[A] fingerprint reader [O] null [S] ok [C] hardware operation_performance']
sent: ['the', 'fingerprint', 'reader', 'works', 'most', 'of', 'the', 'time', '.']
counter: {('hardware operation_performance', 'fingerprint reader', 'ok', 'null'): 5}
output quads: ['[A] fingerprint reader [O] null [S] ok [C] hardware operation_performance']
multi_path: ['[A] fingerprint reader [O] null [S] ok [C] hardware operation_performance', '[A] fingerprint reader [S] ok [O] null [C] hardware operation_performance', '[A] fingerprint reader [O] null [C] hardware operation_performance [S] ok', '[O] null [A] fingerprint reader [S] ok [C] hardware operation_performance', '[O] null [A] fingerprint reader [C] hardware operation_performance [S] ok']

task, data: acos laptop16
target: [('multimedia_devices operation_performance', 'external speakers', 'great', 'good'), ('multimedia_devices operation_performance', 'sound', 'great', 'fine')]
output: ['[A] external speakers [O] not as good [S] bad [C] multimedia_devices general', '[A] sound [O] fine [S] ok [C] multimedia_devices general']
sent: ['the', 'sound', 'is', 'fine', 'for', 'me', 'but', 'not', 'as', 'good', 'as', 'external', 'speakers', '.']
counter: {('multimedia_devices general', 'sound', 'great', 'fine'): 2, ('multimedia_devices general', 'external speakers', 'bad', 'not as good'): 5, ('multimedia_devices general', 'sound', 'ok', 'fine'): 3}
output quads: ['[A] external speakers [O] not as good [S] bad [C] multimedia_devices general', '[A] sound [O] fine [S] ok [C] multimedia_devices general']
multi_path: ['[A] sound [O] fine [S] great [C] multimedia_devices general [SSEP] [A] external speakers [O] not as good [S] bad [C] multimedia_devices general', '[A] sound [S] ok [O] fine [C] multimedia_devices general [SSEP] [A] external speakers [S] bad [O] not as good [C] multimedia_devices general', '[A] sound [O] fine [C] multimedia_devices general [S] ok [SSEP] [A] external speakers [O] not as good [C] multimedia_devices general [S] bad', '[O] fine [A] sound [S] great [C] multimedia_devices general [SSEP] [O] not as good [A] external speakers [S] bad [C] multimedia_devices general', '[O] fine [A] sound [C] multimedia_devices general [S] ok [SSEP] [O] not as good [A] external speakers [C] multimedia_devices general [S] bad']

task, data: acos laptop16
target: [('laptop operation_performance', 'boots up', 'bad', 'slow'), ('laptop operation_performance', 'machine', 'bad', 'slow')]
output: ['[A] machine [O] not that this machine boots up slow [S] great [C] laptop operation_performance']
sent: ['not', 'that', 'this', 'machine', 'boots', 'up', 'slow', '.']
counter: {('laptop operation_performance', 'machine', 'great', 'not that this machine boots up slow'): 3, ('laptop operation_performance', 'machine', 'great', 'not that this machine'): 2, ('laptop operation_performance', 'machine', 'great', 'slow'): 2}
output quads: ['[A] machine [O] not that this machine boots up slow [S] great [C] laptop operation_performance']
multi_path: ['[A] machine [O] not that this machine boots up slow [S] great [C] laptop operation_performance', '[A] machine [S] great [O] not that this machine boots up slow [C] laptop operation_performance', '[A] machine [O] not that this machine boots up slow [C] laptop operation_performance [S] great', '[O] not that this machine [A] machine [S] great [C] laptop operation_performance [SSEP] [O] slow [A] machine [S] great [C] laptop operation_performance', '[O] not that this machine [A] machine [C] laptop operation_performance [S] great [SSEP] [O] slow [A] machine [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('display general', '15 inch screen', 'great', 'love')]
output: ['[A] 15 inch screen [O] love [S] great [C] display design_features']
sent: ['love', 'the', '15', 'inch', 'screen', 'in', 'the', 'body', 'of', 'a', '14', 'inch', 'body', '.']
counter: {('display design_features', '15 inch screen', 'great', 'love'): 5}
output quads: ['[A] 15 inch screen [O] love [S] great [C] display design_features']
multi_path: ['[A] 15 inch screen [O] love [S] great [C] display design_features', '[A] 15 inch screen [S] great [O] love [C] display design_features', '[A] 15 inch screen [O] love [C] display design_features [S] great', '[O] love [A] 15 inch screen [S] great [C] display design_features', '[O] love [A] 15 inch screen [C] display design_features [S] great']

task, data: acos laptop16
target: [('laptop operation_performance', 'null', 'great', 'well'), ('laptop operation_performance', 'null', 'great', 'worth'), ('laptop quality', 'null', 'bad', 'cheaply made')]
output: ['[A] laptop [O] cheaply made [S] bad [C] laptop design_features', '[A] laptop [O] worth [S] great [C] laptop operation_performance']
sent: ['cheaply', 'made', 'plastic', 'but', 'performance', 'is', 'well', 'worth', 'the', 'trade', 'for', 'a', '$', '500', 'laptop', '.']
counter: {('laptop design_features', 'laptop', 'bad', 'cheaply made'): 4, ('laptop operation_performance', 'laptop', 'great', 'worth'): 5, ('laptop design_features', 'laptop', 'bad', 'cheaply'): 1}
output quads: ['[A] laptop [O] cheaply made [S] bad [C] laptop design_features', '[A] laptop [O] worth [S] great [C] laptop operation_performance']
multi_path: ['[A] laptop [O] cheaply made [S] bad [C] laptop design_features [SSEP] [A] laptop [O] worth [S] great [C] laptop operation_performance', '[A] laptop [S] bad [O] cheaply [C] laptop design_features [SSEP] [A] laptop [S] great [O] worth [C] laptop operation_performance', '[A] laptop [O] cheaply made [C] laptop design_features [S] bad [SSEP] [A] laptop [O] worth [C] laptop operation_performance [S] great', '[O] cheaply made [A] laptop [S] bad [C] laptop design_features [SSEP] [O] worth [A] laptop [S] great [C] laptop operation_performance', '[O] cheaply made [A] laptop [C] laptop design_features [S] bad [SSEP] [O] worth [A] laptop [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('keyboard design_features', 'touchpad', 'great', 'well')]
output: ['[A] touchpad [O] well [S] great [C] hardware operation_performance']
sent: ['touchpad', 'works', 'well', '.']
counter: {('hardware operation_performance', 'touchpad', 'great', 'well'): 5}
output quads: ['[A] touchpad [O] well [S] great [C] hardware operation_performance']
multi_path: ['[A] touchpad [O] well [S] great [C] hardware operation_performance', '[A] touchpad [S] great [O] well [C] hardware operation_performance', '[A] touchpad [O] well [C] hardware operation_performance [S] great', '[O] well [A] touchpad [S] great [C] hardware operation_performance', '[O] well [A] touchpad [C] hardware operation_performance [S] great']

task, data: acos laptop16
target: [('display general', 'screen', 'great', 'clean'), ('display general', 'screen', 'great', 'crisp'), ('display general', 'screen', 'great', 'like'), ('memory general', 'ram', 'great', 'enjoying')]
output: ['[A] images [O] clean [S] great [C] display design_features', '[A] images [O] crisp [S] great [C] display design_features', '[A] ram [O] enjoying [S] great [C] memory operation_performance', '[A] screen [O] like [S] great [C] display design_features']
sent: ['i', 'do', 'like', 'the', 'screen', 'on', 'this', ',', 'images', 'are', 'clean', 'and', 'crisp', ',', 'enjoying', 'the', '4', 'gigs', 'of', 'ram', 'which', 'allow', 'me', 'to', 'have', 'a', 'few', 'more', 'tab', 'open', '.']
counter: {('display design_features', 'screen', 'great', 'like'): 5, ('display design_features', 'images', 'great', 'clean'): 3, ('display design_features', 'images', 'great', 'crisp'): 3, ('memory operation_performance', 'ram', 'great', 'enjoying'): 5, ('display design_features', 'screen', 'great', 'clean'): 2, ('display design_features', 'screen', 'great', 'crisp'): 2}
output quads: ['[A] screen [O] like [S] great [C] display design_features', '[A] images [O] clean [S] great [C] display design_features', '[A] images [O] crisp [S] great [C] display design_features', '[A] ram [O] enjoying [S] great [C] memory operation_performance']
multi_path: ['[A] screen [O] like [S] great [C] display design_features [SSEP] [A] images [O] clean [S] great [C] display design_features [SSEP] [A] images [O] crisp [S] great [C] display design_features [SSEP] [A] ram [O] enjoying [S] great [C] memory operation_performance', '[A] screen [S] great [O] like [C] display design_features [SSEP] [A] images [S] great [O] clean [C] display design_features [SSEP] [A] images [S] great [O] crisp [C] display design_features [SSEP] [A] ram [S] great [O] enjoying [C] memory operation_performance', '[A] screen [O] like [C] display design_features [S] great [SSEP] [A] images [O] clean [C] display design_features [S] great [SSEP] [A] images [O] crisp [C] display design_features [S] great [SSEP] [A] ram [O] enjoying [C] memory operation_performance [S] great', '[O] like [A] screen [S] great [C] display design_features [SSEP] [O] clean [A] screen [S] great [C] display design_features [SSEP] [O] crisp [A] screen [S] great [C] display design_features [SSEP] [O] enjoying [A] ram [S] great [C] memory operation_performance', '[O] like [A] screen [C] display design_features [S] great [SSEP] [O] clean [A] screen [C] display design_features [S] great [SSEP] [O] crisp [A] screen [C] display design_features [S] great [SSEP] [O] enjoying [A] ram [C] memory operation_performance [S] great']

task, data: acos laptop16
target: [('laptop design_features', 'null', 'great', 'simple')]
output: ['[A] null [O] like [S] great [C] laptop design_features', '[A] null [O] simple [S] great [C] laptop design_features']
sent: ['i', 'like', 'how', 'it', "'", 's', 'so', 'simple', ',', 'without', 'so', 'much', 'clutter', 'and', 'complexity', '.']
counter: {('laptop design_features', 'null', 'great', 'like'): 5, ('laptop design_features', 'null', 'great', 'simple'): 5}
output quads: ['[A] null [O] like [S] great [C] laptop design_features', '[A] null [O] simple [S] great [C] laptop design_features']
multi_path: ['[A] it [O] like [S] great [C] laptop design_features [SSEP] [A] it [O] simple [S] great [C] laptop design_features', '[A] it [S] great [O] like [C] laptop design_features [SSEP] [A] it [S] great [O] simple [C] laptop design_features', '[A] it [O] like [C] laptop design_features [S] great [SSEP] [A] it [O] simple [C] laptop design_features [S] great', '[O] like [A] it [S] great [C] laptop design_features [SSEP] [O] simple [A] it [S] great [C] laptop design_features', '[O] like [A] it [C] laptop design_features [S] great [SSEP] [O] simple [A] it [C] laptop design_features [S] great']

task, data: acos laptop16
target: [('power_supply general', 'laptop', 'bad', 'null')]
output: ['[A] laptop [O] null [S] bad [C] laptop operation_performance']
sent: ['laptop', 'would', 'never', 'power', 'on', ',', 'even', 'after', 'being', 'charged', 'for', '24', 'hours', '.']
counter: {('laptop operation_performance', 'laptop', 'bad', 'null'): 5}
output quads: ['[A] laptop [O] null [S] bad [C] laptop operation_performance']
multi_path: ['[A] laptop [O] null [S] bad [C] laptop operation_performance', '[A] laptop [S] bad [O] null [C] laptop operation_performance', '[A] laptop [O] null [C] laptop operation_performance [S] bad', '[O] null [A] laptop [S] bad [C] laptop operation_performance', '[O] null [A] laptop [C] laptop operation_performance [S] bad']

task, data: acos laptop16
target: [('laptop design_features', 'laptop', 'great', 'lightweight'), ('laptop design_features', 'laptop', 'great', 'love'), ('laptop design_features', 'laptop', 'great', 'sleek')]
output: ['[A] laptop [O] lightweight [S] great [C] laptop design_features', '[A] laptop [O] love [S] great [C] laptop general', '[A] laptop [O] sleek [S] great [C] laptop design_features']
sent: ['i', 'want', 'to', 'love', 'this', 'laptop', 'because', 'it', 'is', 'so', 'lightweight', 'and', 'sleek', '.']
counter: {('laptop general', 'laptop', 'great', 'love'): 5, ('laptop design_features', 'laptop', 'great', 'lightweight'): 5, ('laptop design_features', 'laptop', 'great', 'sleek'): 5}
output quads: ['[A] laptop [O] love [S] great [C] laptop general', '[A] laptop [O] lightweight [S] great [C] laptop design_features', '[A] laptop [O] sleek [S] great [C] laptop design_features']
multi_path: ['[A] laptop [O] love [S] great [C] laptop general [SSEP] [A] laptop [O] lightweight [S] great [C] laptop design_features [SSEP] [A] laptop [O] sleek [S] great [C] laptop design_features', '[A] laptop [S] great [O] love [C] laptop general [SSEP] [A] laptop [S] great [O] lightweight [C] laptop design_features [SSEP] [A] laptop [S] great [O] sleek [C] laptop design_features', '[A] laptop [O] love [C] laptop general [S] great [SSEP] [A] laptop [O] lightweight [C] laptop design_features [S] great [SSEP] [A] laptop [O] sleek [C] laptop design_features [S] great', '[O] love [A] laptop [S] great [C] laptop general [SSEP] [O] lightweight [A] laptop [S] great [C] laptop design_features [SSEP] [O] sleek [A] laptop [S] great [C] laptop design_features', '[O] love [A] laptop [C] laptop general [S] great [SSEP] [O] lightweight [A] laptop [C] laptop design_features [S] great [SSEP] [O] sleek [A] laptop [C] laptop design_features [S] great']

task, data: acos laptop16
target: [('hard_disc quality', 'ssd', 'bad', 'null')]
output: ['[A] ssd hardware [O] null [S] bad [C] hardware general']
sent: ['ssd', 'hardware', 'issue']
counter: {('hardware general', 'ssd hardware', 'bad', 'null'): 5}
output quads: ['[A] ssd hardware [O] null [S] bad [C] hardware general']
multi_path: ['[A] ssd hardware [O] null [S] bad [C] hardware general', '[A] ssd hardware [S] bad [O] null [C] hardware general', '[A] ssd hardware [O] null [C] hardware general [S] bad', '[O] null [A] ssd hardware [S] bad [C] hardware general', '[O] null [A] ssd hardware [C] hardware general [S] bad']

task, data: acos laptop16
target: [('support quality', 'amazon customer service', 'great', 'good'), ('support quality', 'support for amazon', 'great', 'good')]
output: ['[A] amazon customer service [O] thank god [S] great [C] support general', '[A] support for amazon [O] good [S] great [C] support general']
sent: ['note', ':', 'support', 'for', 'amazon', 'is', 'making', 'it', 'good', 'and', 'immediately', 'sent', 'me', 'the', 'return', 'label', ',', 'bought', 'through', 'third', 'party', 'but', 'i', 'will', 'get', 'my', 'money', 'back', ',', 'thank', 'god', 'for', 'amazon', 'customer', 'service']
counter: {('support general', 'support for amazon', 'great', 'good'): 5, ('support general', 'amazon customer service', 'great', 'thank god'): 5}
output quads: ['[A] support for amazon [O] good [S] great [C] support general', '[A] amazon customer service [O] thank god [S] great [C] support general']
multi_path: ['[A] support for amazon [O] good [S] great [C] support general [SSEP] [A] amazon customer service [O] thank god [S] great [C] support general', '[A] support for amazon [S] great [O] good [C] support general [SSEP] [A] amazon customer service [S] great [O] thank god [C] support general', '[A] support for amazon [O] good [C] support general [S] great [SSEP] [A] amazon customer service [O] thank god [C] support general [S] great', '[O] good [A] support for amazon [S] great [C] support general [SSEP] [O] thank god [A] amazon customer service [S] great [C] support general', '[O] good [A] support for amazon [C] support general [S] great [SSEP] [O] thank god [A] amazon customer service [C] support general [S] great']

task, data: acos laptop16
target: [('laptop general', 'null', 'bad', 'null')]
output: ['[A] null [O] null [S] bad [C] laptop quality']
sent: ['daughter', 'opened', 'it', 'for', 'christmas', 'and', 'it', 'doesn', "'", 't', 'stay', 'on', '.']
counter: {('laptop quality', 'null', 'bad', 'null'): 3, ('laptop operation_performance', 'null', 'bad', 'null'): 2}
output quads: ['[A] null [O] null [S] bad [C] laptop quality']
multi_path: ['[A] it [O] null [S] bad [C] laptop quality', '[A] it [S] bad [O] null [C] laptop operation_performance', '[A] it [O] null [C] laptop operation_performance [S] bad', '[O] null [A] it [S] bad [C] laptop quality', '[O] null [A] it [C] laptop quality [S] bad']

task, data: acos laptop16
target: [('laptop quality', 'build quality', 'bad', 'null')]
output: ['[A] build quality [O] props [S] great [C] laptop quality']
sent: ['i', 'will', 'give', 'them', 'props', 'for', 'the', 'build', 'quality', '.']
counter: {('laptop quality', 'build quality', 'great', 'props'): 5}
output quads: ['[A] build quality [O] props [S] great [C] laptop quality']
multi_path: ['[A] build quality [O] props [S] great [C] laptop quality', '[A] build quality [S] great [O] props [C] laptop quality', '[A] build quality [O] props [C] laptop quality [S] great', '[O] props [A] build quality [S] great [C] laptop quality', '[O] props [A] build quality [C] laptop quality [S] great']

task, data: acos laptop16
target: [('laptop general', 'null', 'bad', 'frustrating')]
output: ['[A] item [O] frustrating [S] bad [C] laptop general']
sent: ['combine', 'these', 'items', 'together', 'and', 'this', 'item', 'became', 'very', 'frustrating', '.']
counter: {('laptop general', 'item', 'bad', 'frustrating'): 5}
output quads: ['[A] item [O] frustrating [S] bad [C] laptop general']
multi_path: ['[A] item [O] frustrating [S] bad [C] laptop general', '[A] item [S] bad [O] frustrating [C] laptop general', '[A] item [O] frustrating [C] laptop general [S] bad', '[O] frustrating [A] item [S] bad [C] laptop general', '[O] frustrating [A] item [C] laptop general [S] bad']

task, data: acos laptop16
target: [('hardware operation_performance', 'touchpad', 'great', 'exceptional'), ('keyboard general', 'keyboard', 'great', 'exceptional')]
output: ['[A] keyboard [O] exceptional [S] great [C] keyboard operation_performance', '[A] touchpad [O] exceptional [S] great [C] keyboard operation_performance']
sent: ['-', 'exceptional', 'keyboard', 'and', 'touchpad', 'feel']
counter: {('keyboard operation_performance', 'keyboard', 'great', 'exceptional'): 5, ('keyboard operation_performance', 'touchpad', 'great', 'exceptional'): 5}
output quads: ['[A] keyboard [O] exceptional [S] great [C] keyboard operation_performance', '[A] touchpad [O] exceptional [S] great [C] keyboard operation_performance']
multi_path: ['[A] keyboard [O] exceptional [S] great [C] keyboard operation_performance [SSEP] [A] touchpad [O] exceptional [S] great [C] keyboard operation_performance', '[A] keyboard [S] great [O] exceptional [C] keyboard operation_performance [SSEP] [A] touchpad [S] great [O] exceptional [C] keyboard operation_performance', '[A] keyboard [O] exceptional [C] keyboard operation_performance [S] great [SSEP] [A] touchpad [O] exceptional [C] keyboard operation_performance [S] great', '[O] exceptional [A] keyboard [S] great [C] keyboard operation_performance [SSEP] [O] exceptional [A] touchpad [S] great [C] keyboard operation_performance', '[O] exceptional [A] keyboard [C] keyboard operation_performance [S] great [SSEP] [O] exceptional [A] touchpad [C] keyboard operation_performance [S] great']

task, data: acos laptop16
target: [('display design_features', 'screen', 'bad', 'below average')]
output: ['[A] screen brightness [O] below average [S] bad [C] display quality']
sent: ['-', 'below', 'average', 'screen', 'brightness', 'about', '200', 'nits', ',', 'average', 'is', '250', '-', '275', '.']
counter: {('display quality', 'screen brightness', 'bad', 'below average'): 5}
output quads: ['[A] screen brightness [O] below average [S] bad [C] display quality']
multi_path: ['[A] screen brightness [O] below average [S] bad [C] display quality', '[A] screen brightness [S] bad [O] below average [C] display quality', '[A] screen brightness [O] below average [C] display quality [S] bad', '[O] below average [A] screen brightness [S] bad [C] display quality', '[O] below average [A] screen brightness [C] display quality [S] bad']

task, data: acos laptop16
target: [('laptop general', 'acer aspire', 'bad', 'null'), ('laptop general', 'acer aspire', 'great', 'great')]
output: ['[A] acer aspire e 15 [O] great [S] great [C] laptop operation_performance']
sent: ['my', 'acer', 'aspire', 'e', '15', 'worked', 'great', 'for', 'a', 'day', ',', 'and', 'then', 'shut', 'off', 'by', 'itself', '.']
counter: {('laptop operation_performance', 'acer aspire e 15', 'great', 'great'): 5}
output quads: ['[A] acer aspire e 15 [O] great [S] great [C] laptop operation_performance']
multi_path: ['[A] acer aspire e 15 [O] great [S] great [C] laptop operation_performance', '[A] acer aspire e 15 [S] great [O] great [C] laptop operation_performance', '[A] acer aspire e 15 [O] great [C] laptop operation_performance [S] great', '[O] great [A] acer aspire e 15 [S] great [C] laptop operation_performance', '[O] great [A] acer aspire e 15 [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('laptop operation_performance', 'null', 'great', 'good'), ('laptop price', 'null', 'great', 'good')]
output: ['[A] null [O] good [S] great [C] laptop price']
sent: ['good', 'performance', 'for', 'the', 'price', 'and', 'my', 'intention', 'as', 'the', 'support', 'for', 'my', 'family', 'was', 'to', 'have', 'everyone', 'on', 'these', 'with', 'a', 'spare', 'to', 'deal', 'with', 'ones', 'that', 'break', 'down', '.']
counter: {('laptop price', 'null', 'great', 'good'): 5}
output quads: ['[A] null [O] good [S] great [C] laptop price']
multi_path: ['[A] it [O] good [S] great [C] laptop price', '[A] it [S] great [O] good [C] laptop price', '[A] it [O] good [C] laptop price [S] great', '[O] good [A] it [S] great [C] laptop price', '[O] good [A] it [C] laptop price [S] great']

task, data: acos laptop16
target: [('laptop general', 'computer', 'great', 'highly rated')]
output: ['[A] computer [O] null [S] great [C] laptop general']
sent: ['i', 'purchased', 'this', 'computer', 'because', 'it', 'came', 'highly', 'rated', 'by', 'consumer', 'reports', ',', 'pc', 'magazine', ',', 'and', 'other', 'raters', '.']
counter: {('laptop general', 'computer', 'great', 'null'): 3, ('laptop general', 'computer', 'great', 'highly'): 2}
output quads: ['[A] computer [O] null [S] great [C] laptop general']
multi_path: ['[A] computer [O] null [S] great [C] laptop general', '[A] computer [S] great [O] null [C] laptop general', '[A] computer [O] null [C] laptop general [S] great', '[O] highly [A] computer [S] great [C] laptop general', '[O] highly [A] computer [C] laptop general [S] great']

task, data: acos laptop16
target: [('battery design_features', 'battery', 'bad', 'null')]
output: ['[A] battery [O] null [S] bad [C] battery quality']
sent: ['can', 'not', 'remove', 'the', 'battery', '.']
counter: {('battery quality', 'battery', 'bad', 'null'): 5}
output quads: ['[A] battery [O] null [S] bad [C] battery quality']
multi_path: ['[A] battery [O] null [S] bad [C] battery quality', '[A] battery [S] bad [O] null [C] battery quality', '[A] battery [O] null [C] battery quality [S] bad', '[O] null [A] battery [S] bad [C] battery quality', '[O] null [A] battery [C] battery quality [S] bad']

task, data: acos laptop16
target: [('display operation_performance', 'screen', 'bad', 'null')]
output: ['[A] black screen [O] null [S] bad [C] display operation_performance']
sent: ['i', 'too', 'have', 'the', 'black', 'screen', 'problem', '.']
counter: {('display operation_performance', 'black screen', 'bad', 'null'): 5}
output quads: ['[A] black screen [O] null [S] bad [C] display operation_performance']
multi_path: ['[A] black screen [O] null [S] bad [C] display operation_performance', '[A] black screen [S] bad [O] null [C] display operation_performance', '[A] black screen [O] null [C] display operation_performance [S] bad', '[O] null [A] black screen [S] bad [C] display operation_performance', '[O] null [A] black screen [C] display operation_performance [S] bad']

task, data: acos laptop16
target: [('laptop price', 'computer', 'great', 'good'), ('ports operation_performance', 'hdmi port', 'bad', 'null')]
output: ['[A] computer [O] good [S] great [C] laptop price', '[A] hdmi port [O] broken [S] bad [C] ports general']
sent: ['the', 'computer', 'is', 'good', 'for', 'the', 'price', ',', 'but', 'the', 'hdmi', 'port', 'is', 'already', 'broken', '.']
counter: {('laptop price', 'computer', 'great', 'good'): 5, ('ports general', 'hdmi port', 'bad', 'broken'): 4, ('ports connectivity', 'hdmi port', 'bad', 'broken'): 1}
output quads: ['[A] computer [O] good [S] great [C] laptop price', '[A] hdmi port [O] broken [S] bad [C] ports general']
multi_path: ['[A] computer [O] good [S] great [C] laptop price [SSEP] [A] hdmi port [O] broken [S] bad [C] ports general', '[A] computer [S] great [O] good [C] laptop price [SSEP] [A] hdmi port [S] bad [O] broken [C] ports general', '[A] computer [O] good [C] laptop price [S] great [SSEP] [A] hdmi port [O] broken [C] ports general [S] bad', '[O] good [A] computer [S] great [C] laptop price [SSEP] [O] broken [A] hdmi port [S] bad [C] ports general', '[O] good [A] computer [C] laptop price [S] great [SSEP] [O] broken [A] hdmi port [C] ports connectivity [S] bad']

task, data: acos laptop16
target: [('laptop general', 'laptop', 'ok', 'null')]
output: ['[A] laptop [O] null [S] bad [C] laptop general']
sent: ['i', 'want', 'to', 'insist', 'that', 'this', 'is', 'not', 'a', 'game', 'laptop', ',', 'as', 'many', 'have', 'reviewed', 'it', 'as', '.']
counter: {('laptop general', 'laptop', 'bad', 'null'): 5}
output quads: ['[A] laptop [O] null [S] bad [C] laptop general']
multi_path: ['[A] laptop [O] null [S] bad [C] laptop general', '[A] laptop [S] bad [O] null [C] laptop general', '[A] laptop [O] null [C] laptop general [S] bad', '[O] null [A] laptop [S] bad [C] laptop general', '[O] null [A] laptop [C] laptop general [S] bad']

task, data: acos laptop16
target: [('battery operation_performance', 'battery', 'ok', 'null')]
output: ['[A] battery life [O] null [S] great [C] battery operation_performance']
sent: ['battery', 'life', 'can', 'last', 'me', 'roughly', '5', 'or', '6', 'hours', 'on', 'internet', 'usage', 'alone', 'with', 'multiple', 'tabs', '.']
counter: {('battery operation_performance', 'battery life', 'great', 'null'): 5}
output quads: ['[A] battery life [O] null [S] great [C] battery operation_performance']
multi_path: ['[A] battery life [O] null [S] great [C] battery operation_performance', '[A] battery life [S] great [O] null [C] battery operation_performance', '[A] battery life [O] null [C] battery operation_performance [S] great', '[O] null [A] battery life [S] great [C] battery operation_performance', '[O] null [A] battery life [C] battery operation_performance [S] great']

task, data: acos laptop16
target: [('laptop price', 'laptop', 'great', 'cheap'), ('laptop quality', 'laptop', 'bad', 'flimsy')]
output: ['[A] laptop [O] cheap [S] bad [C] laptop price', '[A] laptop [O] flimsy [S] bad [C] laptop quality']
sent: ['overall', 'the', 'laptop', 'is', 'cheap', 'and', 'flimsy', '.']
counter: {('laptop price', 'laptop', 'bad', 'cheap'): 5, ('laptop quality', 'laptop', 'bad', 'flimsy'): 5}
output quads: ['[A] laptop [O] cheap [S] bad [C] laptop price', '[A] laptop [O] flimsy [S] bad [C] laptop quality']
multi_path: ['[A] laptop [O] cheap [S] bad [C] laptop price [SSEP] [A] laptop [O] flimsy [S] bad [C] laptop quality', '[A] laptop [S] bad [O] cheap [C] laptop price [SSEP] [A] laptop [S] bad [O] flimsy [C] laptop quality', '[A] laptop [O] cheap [C] laptop price [S] bad [SSEP] [A] laptop [O] flimsy [C] laptop quality [S] bad', '[O] cheap [A] laptop [S] bad [C] laptop price [SSEP] [O] flimsy [A] laptop [S] bad [C] laptop quality', '[O] cheap [A] laptop [C] laptop price [S] bad [SSEP] [O] flimsy [A] laptop [C] laptop quality [S] bad']

task, data: acos laptop16
target: [('graphics general', 'mx150 gaphics card', 'bad', 'bad')]
output: ['[A] mx150 gaphics card [O] bad [S] bad [C] memory general']
sent: ['mx150', 'gaphics', 'card', 'is', 'also', 'pretty', 'bad', '.']
counter: {('memory general', 'mx150 gaphics card', 'bad', 'bad'): 5}
output quads: ['[A] mx150 gaphics card [O] bad [S] bad [C] memory general']
multi_path: ['[A] mx150 gaphics card [O] bad [S] bad [C] memory general', '[A] mx150 gaphics card [S] bad [O] bad [C] memory general', '[A] mx150 gaphics card [O] bad [C] memory general [S] bad', '[O] bad [A] mx150 gaphics card [S] bad [C] memory general', '[O] bad [A] mx150 gaphics card [C] memory general [S] bad']

task, data: acos laptop16
target: [('keyboard quality', 'touch pad', 'bad', 'null')]
output: ['[A] acer [O] null [S] bad [C] company general', '[A] touch pad [O] null [S] bad [C] keyboard operation_performance']
sent: ['and', 'i', 'genuinely', 'believed', 'in', 'acer', ',', 'but', 'first', 'i', 'had', 'a', 'lot', 'of', 'issues', 'setting', 'up', 'the', 'computer', 'and', 'after', 'hours', 'of', 'customer', 'service', 'help', 'the', 'touch', 'pad', 'did', 'n', "'", 't', 'even', 'work', '.']
counter: {('company general', 'acer', 'bad', 'null'): 5, ('hardware operation_performance', 'touch pad', 'bad', 'null'): 2, ('keyboard operation_performance', 'touch pad', 'bad', 'null'): 3}
output quads: ['[A] acer [O] null [S] bad [C] company general', '[A] touch pad [O] null [S] bad [C] keyboard operation_performance']
multi_path: ['[A] acer [O] null [S] bad [C] company general [SSEP] [A] touch pad [O] null [S] bad [C] hardware operation_performance', '[A] acer [S] bad [O] null [C] company general [SSEP] [A] touch pad [S] bad [O] null [C] hardware operation_performance', '[A] acer [O] null [C] company general [S] bad [SSEP] [A] touch pad [O] null [C] keyboard operation_performance [S] bad', '[O] null [A] acer [S] bad [C] company general [SSEP] [O] null [A] touch pad [S] bad [C] keyboard operation_performance', '[O] null [A] acer [C] company general [S] bad [SSEP] [O] null [A] touch pad [C] keyboard operation_performance [S] bad']

task, data: acos laptop16
target: [('motherboard general', 'board', 'bad', 'bad')]
output: ['[A] board [O] bad [S] bad [C] display design_features']
sent: ['i', 'took', 'it', 'to', 'my', 'local', 'computer', 'repair', 'who', 'states', 'it', 'has', 'a', 'bad', 'board', '.']
counter: {('display design_features', 'board', 'bad', 'bad'): 5}
output quads: ['[A] board [O] bad [S] bad [C] display design_features']
multi_path: ['[A] board [O] bad [S] bad [C] display design_features', '[A] board [S] bad [O] bad [C] display design_features', '[A] board [O] bad [C] display design_features [S] bad', '[O] bad [A] board [S] bad [C] display design_features', '[O] bad [A] board [C] display design_features [S] bad']

task, data: acos laptop16
target: [('laptop general', 'laptop', 'bad', 'wrong')]
output: ['[A] laptop [O] wrong [S] bad [C] laptop quality']
sent: ['there', "'", 's', 'something', 'wrong', 'with', 'my', 'laptop', '.']
counter: {('laptop quality', 'laptop', 'bad', 'wrong'): 5}
output quads: ['[A] laptop [O] wrong [S] bad [C] laptop quality']
multi_path: ['[A] laptop [O] wrong [S] bad [C] laptop quality', '[A] laptop [S] bad [O] wrong [C] laptop quality', '[A] laptop [O] wrong [C] laptop quality [S] bad', '[O] wrong [A] laptop [S] bad [C] laptop quality', '[O] wrong [A] laptop [C] laptop quality [S] bad']

task, data: acos laptop16
target: [('battery general', 'power management', 'bad', 'wrong')]
output: ['[A] power management [O] wrong [S] bad [C] power_supply operation_performance']
sent: ['something', 'is', 'wrong', 'with', 'the', 'power', 'management', '.']
counter: {('power_supply operation_performance', 'power management', 'bad', 'wrong'): 5}
output quads: ['[A] power management [O] wrong [S] bad [C] power_supply operation_performance']
multi_path: ['[A] power management [O] wrong [S] bad [C] power_supply operation_performance', '[A] power management [S] bad [O] wrong [C] power_supply operation_performance', '[A] power management [O] wrong [C] power_supply operation_performance [S] bad', '[O] wrong [A] power management [S] bad [C] power_supply operation_performance', '[O] wrong [A] power management [C] power_supply operation_performance [S] bad']

task, data: acos laptop16
target: [('laptop general', 'e 15', 'bad', 'disappointed')]
output: ['[A] null [O] disappointed [S] bad [C] laptop price']
sent: ['very', 'disappointed', 'in', 'the', '$', '600', 'e', '15', ',', 'as', 'opposed', 'to', 'the', 'no', 'frills', ',', 'plain', 'old', ',', '<', '$', '200', '15', 'i', "'", 've', 'had', 'for', '2', '.']
counter: {('laptop price', 'null', 'bad', 'disappointed'): 5}
output quads: ['[A] null [O] disappointed [S] bad [C] laptop price']
multi_path: ['[A] it [O] disappointed [S] bad [C] laptop price', '[A] it [S] bad [O] disappointed [C] laptop price', '[A] it [O] disappointed [C] laptop price [S] bad', '[O] disappointed [A] it [S] bad [C] laptop price', '[O] disappointed [A] it [C] laptop price [S] bad']

task, data: acos laptop16
target: [('hardware operation_performance', 'trackpad', 'bad', 'null')]
output: ['[A] trackpad [O] null [S] bad [C] keyboard operation_performance']
sent: ['the', 'trackpad', 'stopped', 'working', 'after', 'four', 'weeks', 'of', 'using', 'it', '.']
counter: {('keyboard operation_performance', 'trackpad', 'bad', 'null'): 5}
output quads: ['[A] trackpad [O] null [S] bad [C] keyboard operation_performance']
multi_path: ['[A] trackpad [O] null [S] bad [C] keyboard operation_performance', '[A] trackpad [S] bad [O] null [C] keyboard operation_performance', '[A] trackpad [O] null [C] keyboard operation_performance [S] bad', '[O] null [A] trackpad [S] bad [C] keyboard operation_performance', '[O] null [A] trackpad [C] keyboard operation_performance [S] bad']

task, data: acos laptop16
target: [('display design_features', 'screen', 'bad', 'annoying')]
output: ['[A] screen [O] annoying [S] bad [C] display operation_performance']
sent: ['there', 'is', 'a', 'flicker', 'in', 'the', 'middle', 'of', 'the', 'screen', 'that', 'is', 'very', 'annoying', '.']
counter: {('display operation_performance', 'screen', 'bad', 'annoying'): 5}
output quads: ['[A] screen [O] annoying [S] bad [C] display operation_performance']
multi_path: ['[A] screen [O] annoying [S] bad [C] display operation_performance', '[A] screen [S] bad [O] annoying [C] display operation_performance', '[A] screen [O] annoying [C] display operation_performance [S] bad', '[O] annoying [A] screen [S] bad [C] display operation_performance', '[O] annoying [A] screen [C] display operation_performance [S] bad']

task, data: acos laptop16
target: [('keyboard design_features', 'keypad', 'bad', 'null')]
output: ['[A] computer [O] decent [S] great [C] laptop operation_performance', '[A] keypad [O] null [S] bad [C] keyboard operation_performance']
sent: ['the', 'computer', 'runs', 'decent', 'but', 'the', 'keypad', 'turns', 'off', 'every', 'time', 'the', 'computer', 'sleeps', '.']
counter: {('laptop operation_performance', 'computer', 'great', 'decent'): 5, ('keyboard operation_performance', 'keypad', 'bad', 'null'): 5}
output quads: ['[A] computer [O] decent [S] great [C] laptop operation_performance', '[A] keypad [O] null [S] bad [C] keyboard operation_performance']
multi_path: ['[A] computer [O] decent [S] great [C] laptop operation_performance [SSEP] [A] keypad [O] null [S] bad [C] keyboard operation_performance', '[A] computer [S] great [O] decent [C] laptop operation_performance [SSEP] [A] keypad [S] bad [O] null [C] keyboard operation_performance', '[A] computer [O] decent [C] laptop operation_performance [S] great [SSEP] [A] keypad [O] null [C] keyboard operation_performance [S] bad', '[O] decent [A] computer [S] great [C] laptop operation_performance [SSEP] [O] null [A] keypad [S] bad [C] keyboard operation_performance', '[O] decent [A] computer [C] laptop operation_performance [S] great [SSEP] [O] null [A] keypad [C] keyboard operation_performance [S] bad']

task, data: acos laptop16
target: [('laptop general', 'machine', 'bad', 'defective')]
output: ['[A] machine [O] defective [S] bad [C] laptop quality']
sent: ['i', 'presented', 'my', 'son', 'with', 'a', 'gift', 'of', 'a', 'defective', 'machine', '.']
counter: {('laptop quality', 'machine', 'bad', 'defective'): 5}
output quads: ['[A] machine [O] defective [S] bad [C] laptop quality']
multi_path: ['[A] machine [O] defective [S] bad [C] laptop quality', '[A] machine [S] bad [O] defective [C] laptop quality', '[A] machine [O] defective [C] laptop quality [S] bad', '[O] defective [A] machine [S] bad [C] laptop quality', '[O] defective [A] machine [C] laptop quality [S] bad']

task, data: acos laptop16
target: [('cpu quality', 'processor', 'great', 'fast'), ('hard_disc quality', 'ssd', 'great', 'fast'), ('laptop general', 'computer', 'great', 'good'), ('laptop operation_performance', 'computer', 'great', 'fast')]
output: ['[A] computer [O] fast [S] great [C] laptop operation_performance', '[A] processor [O] good [S] great [C] cpu operation_performance', '[A] ssd [O] good [S] great [C] hard_disc operation_performance']
sent: ['the', 'computer', 'itself', 'is', 'actually', 'quite', 'fast', 'with', 'the', 'ssd', 'and', 'processor', ',', 'so', 'my', 'experience', 'there', 'so', 'far', 'has', 'been', 'good', '.']
counter: {('laptop operation_performance', 'computer', 'great', 'fast'): 5, ('hard_disc operation_performance', 'ssd', 'great', 'good'): 5, ('cpu operation_performance', 'processor', 'great', 'good'): 5}
output quads: ['[A] computer [O] fast [S] great [C] laptop operation_performance', '[A] ssd [O] good [S] great [C] hard_disc operation_performance', '[A] processor [O] good [S] great [C] cpu operation_performance']
multi_path: ['[A] computer [O] fast [S] great [C] laptop operation_performance [SSEP] [A] ssd [O] good [S] great [C] hard_disc operation_performance [SSEP] [A] processor [O] good [S] great [C] cpu operation_performance', '[A] computer [S] great [O] fast [C] laptop operation_performance [SSEP] [A] ssd [S] great [O] good [C] hard_disc operation_performance [SSEP] [A] processor [S] great [O] good [C] cpu operation_performance', '[A] computer [O] fast [C] laptop operation_performance [S] great [SSEP] [A] ssd [O] good [C] hard_disc operation_performance [S] great [SSEP] [A] processor [O] good [C] cpu operation_performance [S] great', '[O] fast [A] computer [S] great [C] laptop operation_performance [SSEP] [O] good [A] ssd [S] great [C] hard_disc operation_performance [SSEP] [O] good [A] processor [S] great [C] cpu operation_performance', '[O] fast [A] computer [C] laptop operation_performance [S] great [SSEP] [O] good [A] ssd [C] hard_disc operation_performance [S] great [SSEP] [O] good [A] processor [C] cpu operation_performance [S] great']

task, data: acos laptop16
target: [('keyboard operation_performance', 'keyboard', 'bad', 'null'), ('keyboard operation_performance', 'track pad', 'bad', 'null')]
output: ['[A] keyboard [O] null [S] bad [C] keyboard quality', '[A] track pad [O] null [S] bad [C] keyboard quality']
sent: ['keyboard', 'and', 'track', 'pad', 'shoved', 'way', 'left', '.']
counter: {('keyboard quality', 'keyboard', 'bad', 'null'): 5, ('keyboard quality', 'track pad', 'bad', 'null'): 5}
output quads: ['[A] keyboard [O] null [S] bad [C] keyboard quality', '[A] track pad [O] null [S] bad [C] keyboard quality']
multi_path: ['[A] keyboard [O] null [S] bad [C] keyboard quality [SSEP] [A] track pad [O] null [S] bad [C] keyboard quality', '[A] keyboard [S] bad [O] null [C] keyboard quality [SSEP] [A] track pad [S] bad [O] null [C] keyboard quality', '[A] keyboard [O] null [C] keyboard quality [S] bad [SSEP] [A] track pad [O] null [C] keyboard quality [S] bad', '[O] null [A] keyboard [S] bad [C] keyboard quality [SSEP] [O] null [A] track pad [S] bad [C] keyboard quality', '[O] null [A] keyboard [C] keyboard quality [S] bad [SSEP] [O] null [A] track pad [C] keyboard quality [S] bad']

task, data: acos laptop16
target: [('display operation_performance', 'screen', 'bad', 'null'), ('ports connectivity', 'wifi', 'bad', 'null')]
output: ['[A] amd screen [O] null [S] bad [C] display operation_performance']
sent: ['will', 'not', 'connect', 'to', 'wifi', ',', 'amd', 'screen', 'flashes', 'when', 'adjusting', 'while', 'on', '.']
counter: {('display operation_performance', 'amd screen', 'bad', 'null'): 5}
output quads: ['[A] amd screen [O] null [S] bad [C] display operation_performance']
multi_path: ['[A] amd screen [O] null [S] bad [C] display operation_performance', '[A] amd screen [S] bad [O] null [C] display operation_performance', '[A] amd screen [O] null [C] display operation_performance [S] bad', '[O] null [A] amd screen [S] bad [C] display operation_performance', '[O] null [A] amd screen [C] display operation_performance [S] bad']

task, data: acos laptop16
target: [('multimedia_devices operation_performance', 'speakers', 'bad', 'horrible')]
output: ['[A] speakers [O] horrible [S] bad [C] multimedia_devices general']
sent: ['but', 'the', 'speakers', 'are', 'absolutely', 'horrible', '!']
counter: {('multimedia_devices general', 'speakers', 'bad', 'horrible'): 5}
output quads: ['[A] speakers [O] horrible [S] bad [C] multimedia_devices general']
multi_path: ['[A] speakers [O] horrible [S] bad [C] multimedia_devices general', '[A] speakers [S] bad [O] horrible [C] multimedia_devices general', '[A] speakers [O] horrible [C] multimedia_devices general [S] bad', '[O] horrible [A] speakers [S] bad [C] multimedia_devices general', '[O] horrible [A] speakers [C] multimedia_devices general [S] bad']

task, data: acos laptop16
target: [('keyboard design_features', 'keyboard', 'ok', 'null')]
output: ['[A] keyboard [O] null [S] great [C] keyboard design_features']
sent: ['keyboard', 'has', 'flex']
counter: {('keyboard design_features', 'keyboard', 'great', 'null'): 5}
output quads: ['[A] keyboard [O] null [S] great [C] keyboard design_features']
multi_path: ['[A] keyboard [O] null [S] great [C] keyboard design_features', '[A] keyboard [S] great [O] null [C] keyboard design_features', '[A] keyboard [O] null [C] keyboard design_features [S] great', '[O] null [A] keyboard [S] great [C] keyboard design_features', '[O] null [A] keyboard [C] keyboard design_features [S] great']

task, data: acos laptop16
target: [('keyboard design_features', 'backlight', 'bad', 'null'), ('keyboard design_features', 'keyboard', 'bad', 'null')]
output: ['[A] keyboard [O] null [S] bad [C] keyboard design_features']
sent: ['no', 'backlight', 'at', 'keyboard']
counter: {('keyboard design_features', 'keyboard', 'bad', 'null'): 5}
output quads: ['[A] keyboard [O] null [S] bad [C] keyboard design_features']
multi_path: ['[A] keyboard [O] null [S] bad [C] keyboard design_features', '[A] keyboard [S] bad [O] null [C] keyboard design_features', '[A] keyboard [O] null [C] keyboard design_features [S] bad', '[O] null [A] keyboard [S] bad [C] keyboard design_features', '[O] null [A] keyboard [C] keyboard design_features [S] bad']

task, data: acos laptop16
target: [('keyboard usability', 'key', 'bad', 'stiff')]
output: ['[A] key presses [O] stiff [S] bad [C] keyboard design_features']
sent: ['key', 'presses', 'are', 'too', 'stiff', 'to', 'press', '.']
counter: {('keyboard design_features', 'key presses', 'bad', 'stiff'): 5}
output quads: ['[A] key presses [O] stiff [S] bad [C] keyboard design_features']
multi_path: ['[A] key presses [O] stiff [S] bad [C] keyboard design_features', '[A] key presses [S] bad [O] stiff [C] keyboard design_features', '[A] key presses [O] stiff [C] keyboard design_features [S] bad', '[O] stiff [A] key presses [S] bad [C] keyboard design_features', '[O] stiff [A] key presses [C] keyboard design_features [S] bad']

task, data: acos laptop16
target: [('hard_disc design_features', 'hdd', 'bad', 'slow'), ('laptop design_features', 'laptop', 'bad', 'slow')]
output: ['[A] hdd [O] slow [S] bad [C] hard_disc operation_performance', '[A] laptop [O] slow [S] bad [C] laptop operation_performance']
sent: ['hdd', 'makes', 'this', 'laptop', 'very', 'slow', '.']
counter: {('hard_disc operation_performance', 'hdd', 'bad', 'slow'): 5, ('laptop operation_performance', 'laptop', 'bad', 'slow'): 5}
output quads: ['[A] hdd [O] slow [S] bad [C] hard_disc operation_performance', '[A] laptop [O] slow [S] bad [C] laptop operation_performance']
multi_path: ['[A] hdd [O] slow [S] bad [C] hard_disc operation_performance [SSEP] [A] laptop [O] slow [S] bad [C] laptop operation_performance', '[A] hdd [S] bad [O] slow [C] hard_disc operation_performance [SSEP] [A] laptop [S] bad [O] slow [C] laptop operation_performance', '[A] hdd [O] slow [C] hard_disc operation_performance [S] bad [SSEP] [A] laptop [O] slow [C] laptop operation_performance [S] bad', '[O] slow [A] hdd [S] bad [C] hard_disc operation_performance [SSEP] [O] slow [A] laptop [S] bad [C] laptop operation_performance', '[O] slow [A] hdd [C] hard_disc operation_performance [S] bad [SSEP] [O] slow [A] laptop [C] laptop operation_performance [S] bad']

task, data: acos laptop16
target: [('laptop operation_performance', 'case', 'bad', 'null'), ('laptop operation_performance', 'laptop', 'bad', 'null')]
output: ['[A] asus engineers [O] null [S] bad [C] company design_features']
sent: ['but', 'asus', 'engineers', 'designed', 'the', 'case', 'and', 'laptop', 'not', 'to', 'be', 'opened', 'by', 'users', '.']
counter: {('company design_features', 'asus engineers', 'bad', 'null'): 5}
output quads: ['[A] asus engineers [O] null [S] bad [C] company design_features']
multi_path: ['[A] asus engineers [O] null [S] bad [C] company design_features', '[A] asus engineers [S] bad [O] null [C] company design_features', '[A] asus engineers [O] null [C] company design_features [S] bad', '[O] null [A] asus engineers [S] bad [C] company design_features', '[O] null [A] asus engineers [C] company design_features [S] bad']

task, data: acos laptop16
target: [('keyboard design_features', 'backlight', 'bad', 'stiff'), ('keyboard design_features', 'keys', 'bad', 'stiff')]
output: ['[A] backlight [O] null [S] bad [C] keyboard design_features', '[A] keys [O] stiff [S] bad [C] keyboard design_features']
sent: ['there', 'is', 'no', 'backlight', 'and', 'keys', 'are', 'too', 'stiff', '.']
counter: {('keyboard design_features', 'backlight', 'bad', 'null'): 5, ('keyboard design_features', 'keys', 'bad', 'stiff'): 5}
output quads: ['[A] backlight [O] null [S] bad [C] keyboard design_features', '[A] keys [O] stiff [S] bad [C] keyboard design_features']
multi_path: ['[A] backlight [O] null [S] bad [C] keyboard design_features [SSEP] [A] keys [O] stiff [S] bad [C] keyboard design_features', '[A] backlight [S] bad [O] null [C] keyboard design_features [SSEP] [A] keys [S] bad [O] stiff [C] keyboard design_features', '[A] backlight [O] null [C] keyboard design_features [S] bad [SSEP] [A] keys [O] stiff [C] keyboard design_features [S] bad', '[O] null [A] backlight [S] bad [C] keyboard design_features [SSEP] [O] stiff [A] keys [S] bad [C] keyboard design_features', '[O] null [A] backlight [C] keyboard design_features [S] bad [SSEP] [O] stiff [A] keys [C] keyboard design_features [S] bad']

task, data: acos laptop16
target: [('keyboard miscellaneous', 'keyboard', 'bad', 'not healthy')]
output: ['[A] keyboard [O] not healthy [S] bad [C] keyboard general']
sent: ['i', 'believe', 'it', 'is', 'not', 'healthy', 'to', 'use', 'this', 'keyboard', 'for', 'a', 'long', 'time', '.']
counter: {('keyboard general', 'keyboard', 'bad', 'not healthy'): 5}
output quads: ['[A] keyboard [O] not healthy [S] bad [C] keyboard general']
multi_path: ['[A] keyboard [O] not healthy [S] bad [C] keyboard general', '[A] keyboard [S] bad [O] not healthy [C] keyboard general', '[A] keyboard [O] not healthy [C] keyboard general [S] bad', '[O] not healthy [A] keyboard [S] bad [C] keyboard general', '[O] not healthy [A] keyboard [C] keyboard general [S] bad']

task, data: acos laptop16
target: [('hardware general', 'fingerprint reader', 'bad', 'null')]
output: ['[A] fingerprint reader [O] null [S] bad [C] hardware general', '[A] linux [O] compatible [S] great [C] os general']
sent: ['linux', 'is', 'mostly', 'compatible', 'with', 'this', 'laptop', 'except', 'fingerprint', 'reader', '.']
counter: {('os general', 'linux', 'great', 'compatible'): 5, ('hardware general', 'fingerprint reader', 'bad', 'null'): 5}
output quads: ['[A] linux [O] compatible [S] great [C] os general', '[A] fingerprint reader [O] null [S] bad [C] hardware general']
multi_path: ['[A] linux [O] compatible [S] great [C] os general [SSEP] [A] fingerprint reader [O] null [S] bad [C] hardware general', '[A] linux [S] great [O] compatible [C] os general [SSEP] [A] fingerprint reader [S] bad [O] null [C] hardware general', '[A] linux [O] compatible [C] os general [S] great [SSEP] [A] fingerprint reader [O] null [C] hardware general [S] bad', '[O] compatible [A] linux [S] great [C] os general [SSEP] [O] null [A] fingerprint reader [S] bad [C] hardware general', '[O] compatible [A] linux [C] os general [S] great [SSEP] [O] null [A] fingerprint reader [C] hardware general [S] bad']

task, data: acos laptop16
target: [('display quality', 'screen', 'bad', 'creak')]
output: ['[A] screen [O] creak [S] bad [C] display operation_performance']
sent: ['3', ')', 'you', 'can', 'hear', 'the', 'screen', 'creak', '.']
counter: {('display operation_performance', 'screen', 'bad', 'creak'): 5}
output quads: ['[A] screen [O] creak [S] bad [C] display operation_performance']
multi_path: ['[A] screen [O] creak [S] bad [C] display operation_performance', '[A] screen [S] bad [O] creak [C] display operation_performance', '[A] screen [O] creak [C] display operation_performance [S] bad', '[O] creak [A] screen [S] bad [C] display operation_performance', '[O] creak [A] screen [C] display operation_performance [S] bad']

task, data: acos laptop16
target: [('laptop connectivity', 'null', 'ok', 'null')]
output: ['[A] null [O] null [S] bad [C] laptop design_features']
sent: ['it', 'doesn', "'", 't', 'support', 'a', 'hardwire', 'connection', '.']
counter: {('laptop design_features', 'null', 'bad', 'null'): 4, ('laptop connectivity', 'null', 'bad', 'null'): 1}
output quads: ['[A] null [O] null [S] bad [C] laptop design_features']
multi_path: ['[A] it [O] null [S] bad [C] laptop design_features', '[A] it [S] bad [O] null [C] laptop design_features', '[A] it [O] null [C] laptop design_features [S] bad', '[O] null [A] it [S] bad [C] laptop design_features', '[O] null [A] it [C] laptop connectivity [S] bad']

task, data: acos laptop16
target: [('hard_disc operation_performance', 'null', 'bad', 'null')]
output: ['[A] lawn mower [O] null [S] bad [C] laptop operation_performance']
sent: ['did', 'i', 'mention', 'it', 'sounds', 'like', 'a', 'lawn', 'mower', '?']
counter: {('laptop operation_performance', 'lawn mower', 'bad', 'null'): 5}
output quads: ['[A] lawn mower [O] null [S] bad [C] laptop operation_performance']
multi_path: ['[A] lawn mower [O] null [S] bad [C] laptop operation_performance', '[A] lawn mower [S] bad [O] null [C] laptop operation_performance', '[A] lawn mower [O] null [C] laptop operation_performance [S] bad', '[O] null [A] lawn mower [S] bad [C] laptop operation_performance', '[O] null [A] lawn mower [C] laptop operation_performance [S] bad']

task, data: acos laptop16
target: [('ports operation_performance', 'wifi', 'great', 'fast')]
output: ['[A] screen quality [O] enjoy [S] great [C] display quality', '[A] wifi [O] fast [S] great [C] ports operation_performance']
sent: ['i', 'will', 'say', 'i', 'do', 'enjoy', 'the', 'screen', 'quality', ',', 'the', 'wifi', 'is', 'fast', 'on', 'this', 'laptop', '.']
counter: {('display quality', 'screen quality', 'great', 'enjoy'): 5, ('ports operation_performance', 'wifi', 'great', 'fast'): 5}
output quads: ['[A] screen quality [O] enjoy [S] great [C] display quality', '[A] wifi [O] fast [S] great [C] ports operation_performance']
multi_path: ['[A] screen quality [O] enjoy [S] great [C] display quality [SSEP] [A] wifi [O] fast [S] great [C] ports operation_performance', '[A] screen quality [S] great [O] enjoy [C] display quality [SSEP] [A] wifi [S] great [O] fast [C] ports operation_performance', '[A] screen quality [O] enjoy [C] display quality [S] great [SSEP] [A] wifi [O] fast [C] ports operation_performance [S] great', '[O] enjoy [A] screen quality [S] great [C] display quality [SSEP] [O] fast [A] wifi [S] great [C] ports operation_performance', '[O] enjoy [A] screen quality [C] display quality [S] great [SSEP] [O] fast [A] wifi [C] ports operation_performance [S] great']

task, data: acos laptop16
target: [('hardware usability', 'track pad', 'bad', 'null')]
output: ['[A] finger [O] null [S] bad [C] hardware design_features']
sent: ['-', 'finger', 'doesn', "'", 't', 'side', 'smoothly', 'along', 'track', 'pad', '.']
counter: {('hardware design_features', 'finger', 'bad', 'null'): 5}
output quads: ['[A] finger [O] null [S] bad [C] hardware design_features']
multi_path: ['[A] finger [O] null [S] bad [C] hardware design_features', '[A] finger [S] bad [O] null [C] hardware design_features', '[A] finger [O] null [C] hardware design_features [S] bad', '[O] null [A] finger [S] bad [C] hardware design_features', '[O] null [A] finger [C] hardware design_features [S] bad']

task, data: acos laptop16
target: [('company general', 'asus product', 'bad', 'null')]
output: ['[A] asus product [O] null [S] bad [C] laptop general']
sent: ['i', 'will', 'never', 'buy', 'an', 'other', 'asus', 'product', '.']
counter: {('laptop general', 'asus product', 'bad', 'null'): 5}
output quads: ['[A] asus product [O] null [S] bad [C] laptop general']
multi_path: ['[A] asus product [O] null [S] bad [C] laptop general', '[A] asus product [S] bad [O] null [C] laptop general', '[A] asus product [O] null [C] laptop general [S] bad', '[O] null [A] asus product [S] bad [C] laptop general', '[O] null [A] asus product [C] laptop general [S] bad']

task, data: acos laptop16
target: [('display general', 'screen', 'great', 'good')]
output: ['[A] screen [O] good [S] great [C] display design_features']
sent: ['-', 'the', 'screen', 'looks', 'pretty', 'good', ',', 'except', 'when', 'viewing', 'anything', 'dark', '.']
counter: {('display design_features', 'screen', 'great', 'good'): 5}
output quads: ['[A] screen [O] good [S] great [C] display design_features']
multi_path: ['[A] screen [O] good [S] great [C] display design_features', '[A] screen [S] great [O] good [C] display design_features', '[A] screen [O] good [C] display design_features [S] great', '[O] good [A] screen [S] great [C] display design_features', '[O] good [A] screen [C] display design_features [S] great']

task, data: acos laptop16
target: [('keyboard general', 'keyboard', 'bad', 'awful')]
output: ['[A] keyboard [O] awful [S] bad [C] keyboard quality']
sent: ['-', 'the', 'keyboard', 'is', 'awful', '.']
counter: {('keyboard quality', 'keyboard', 'bad', 'awful'): 5}
output quads: ['[A] keyboard [O] awful [S] bad [C] keyboard quality']
multi_path: ['[A] keyboard [O] awful [S] bad [C] keyboard quality', '[A] keyboard [S] bad [O] awful [C] keyboard quality', '[A] keyboard [O] awful [C] keyboard quality [S] bad', '[O] awful [A] keyboard [S] bad [C] keyboard quality', '[O] awful [A] keyboard [C] keyboard quality [S] bad']

task, data: acos laptop16
target: [('support general', 'asus', 'ok', 'null')]
output: ['[A] asus [O] null [S] bad [C] support general']
sent: ['when', 'i', 'asked', 'asus', 'for', 'a', 'replacement', 'key', ',', 'they', 'said', 'i', "'", 'd', 'have', 'to', 'ship', 'it', 'back', 'to', 'them', ',', 'which', 'would', 'have', 'left', 'me', 'without', 'a', 'computer', 'for', '2', 'weeks', '.']
counter: {('support general', 'asus', 'bad', 'null'): 5}
output quads: ['[A] asus [O] null [S] bad [C] support general']
multi_path: ['[A] asus [O] null [S] bad [C] support general', '[A] asus [S] bad [O] null [C] support general', '[A] asus [O] null [C] support general [S] bad', '[O] null [A] asus [S] bad [C] support general', '[O] null [A] asus [C] support general [S] bad']

task, data: acos laptop16
target: [('os operation_performance', 'boot up', 'bad', 'damaged')]
output: ['[A] null [O] damaged [S] bad [C] laptop quality']
sent: ['after', 'my', '3rd', 'boot', 'up', 'it', "'", 's', 'damaged', '.']
counter: {('laptop quality', 'null', 'bad', 'damaged'): 3, ('os quality', 'boot up', 'bad', 'damaged'): 2}
output quads: ['[A] null [O] damaged [S] bad [C] laptop quality']
multi_path: ['[A] it [O] damaged [S] bad [C] laptop quality', '[A] it [S] bad [O] damaged [C] laptop quality', '[A] it [O] damaged [C] laptop quality [S] bad', '[O] damaged [A] boot up [S] bad [C] os quality', '[O] damaged [A] boot up [C] os quality [S] bad']

task, data: acos laptop16
target: [('hard_disc operation_performance', 'null', 'bad', 'null')]
output: ['[A] disk [O] null [S] great [C] hard_disc operation_performance']
sent: ['after', 'a', 'month', 'of', 'use', ',', 'disk', '(', 'c', ':', ')', 'runs', 'at', '100', '%', 'all', 'the', 'time', '.']
counter: {('hard_disc operation_performance', 'disk', 'great', 'null'): 5}
output quads: ['[A] disk [O] null [S] great [C] hard_disc operation_performance']
multi_path: ['[A] disk [O] null [S] great [C] hard_disc operation_performance', '[A] disk [S] great [O] null [C] hard_disc operation_performance', '[A] disk [O] null [C] hard_disc operation_performance [S] great', '[O] null [A] disk [S] great [C] hard_disc operation_performance', '[O] null [A] disk [C] hard_disc operation_performance [S] great']

task, data: acos laptop16
target: [('laptop general', 'computer', 'bad', 'null')]
output: ['[A] computer [O] null [S] bad [C] laptop operation_performance']
sent: ['do', 'not', 'buy', 'this', 'computer', 'if', 'your', 'plan', 'is', 'to', 'multitask', ',', 'play', 'an', 'occasional', 'game', 'and', '/', 'or', 'play', 'music', 'while', 'searching', 'the', 'web', '.']
counter: {('laptop operation_performance', 'computer', 'bad', 'null'): 5}
output quads: ['[A] computer [O] null [S] bad [C] laptop operation_performance']
multi_path: ['[A] computer [O] null [S] bad [C] laptop operation_performance', '[A] computer [S] bad [O] null [C] laptop operation_performance', '[A] computer [O] null [C] laptop operation_performance [S] bad', '[O] null [A] computer [S] bad [C] laptop operation_performance', '[O] null [A] computer [C] laptop operation_performance [S] bad']

task, data: acos laptop16
target: [('hardware operation_performance', 'fingerprint scanner', 'bad', 'null')]
output: ['[A] fingerprint scanner [O] null [S] bad [C] multimedia_devices operation_performance']
sent: ['the', 'fingerprint', 'scanner', 'is', 'half', 'jotted', 'and', 'barely', 'works', '.']
counter: {('multimedia_devices operation_performance', 'fingerprint scanner', 'bad', 'null'): 5}
output quads: ['[A] fingerprint scanner [O] null [S] bad [C] multimedia_devices operation_performance']
multi_path: ['[A] fingerprint scanner [O] null [S] bad [C] multimedia_devices operation_performance', '[A] fingerprint scanner [S] bad [O] null [C] multimedia_devices operation_performance', '[A] fingerprint scanner [O] null [C] multimedia_devices operation_performance [S] bad', '[O] null [A] fingerprint scanner [S] bad [C] multimedia_devices operation_performance', '[O] null [A] fingerprint scanner [C] multimedia_devices operation_performance [S] bad']

task, data: acos laptop16
target: [('hardware quality', 'finger print scanner', 'bad', 'null')]
output: ['[A] finger print scanner [O] null [S] bad [C] hardware operation_performance']
sent: ['finger', 'print', 'scanner', 'not', 'working', 'whatsoever', '.']
counter: {('hardware operation_performance', 'finger print scanner', 'bad', 'null'): 5}
output quads: ['[A] finger print scanner [O] null [S] bad [C] hardware operation_performance']
multi_path: ['[A] finger print scanner [O] null [S] bad [C] hardware operation_performance', '[A] finger print scanner [S] bad [O] null [C] hardware operation_performance', '[A] finger print scanner [O] null [C] hardware operation_performance [S] bad', '[O] null [A] finger print scanner [S] bad [C] hardware operation_performance', '[O] null [A] finger print scanner [C] hardware operation_performance [S] bad']

task, data: acos laptop16
target: [('hard_disc general', 'hard drive', 'bad', 'null'), ('hardware general', 'hardware', 'great', 'great'), ('hardware general', 'spec', 'great', 'great')]
output: ['[A] hard drive [O] null [S] bad [C] hard_disc general', '[A] spec hardware [O] great [S] great [C] hardware general']
sent: ['with', 'all', 'the', 'great', 'spec', 'hardware', 'in', 'this', 'laptop', ',', 'why', 'would', 'you', 'put', 'a', '5400rpm', 'hard', 'drive', 'in', 'this', 'unit', '?']
counter: {('hardware general', 'spec hardware', 'great', 'great'): 5, ('hard_disc general', 'hard drive', 'bad', 'null'): 5}
output quads: ['[A] spec hardware [O] great [S] great [C] hardware general', '[A] hard drive [O] null [S] bad [C] hard_disc general']
multi_path: ['[A] spec hardware [O] great [S] great [C] hardware general [SSEP] [A] hard drive [O] null [S] bad [C] hard_disc general', '[A] spec hardware [S] great [O] great [C] hardware general [SSEP] [A] hard drive [S] bad [O] null [C] hard_disc general', '[A] spec hardware [O] great [C] hardware general [S] great [SSEP] [A] hard drive [O] null [C] hard_disc general [S] bad', '[O] great [A] spec hardware [S] great [C] hardware general [SSEP] [O] null [A] hard drive [S] bad [C] hard_disc general', '[O] great [A] spec hardware [C] hardware general [S] great [SSEP] [O] null [A] hard drive [C] hard_disc general [S] bad']

task, data: acos laptop16
target: [('hardware general', 'touch pad', 'bad', 'poor'), ('hardware general', 'touch pad', 'bad', 'stuck')]
output: ['[A] touch pad [O] poor [S] bad [C] keyboard operation_performance']
sent: ['poor', 'touch', 'pad', ',', 'it', 'get', 'stuck', '.']
counter: {('keyboard operation_performance', 'touch pad', 'bad', 'poor'): 5}
output quads: ['[A] touch pad [O] poor [S] bad [C] keyboard operation_performance']
multi_path: ['[A] touch pad [O] poor [S] bad [C] keyboard operation_performance', '[A] touch pad [S] bad [O] poor [C] keyboard operation_performance', '[A] touch pad [O] poor [C] keyboard operation_performance [S] bad', '[O] poor [A] touch pad [S] bad [C] keyboard operation_performance', '[O] poor [A] touch pad [C] keyboard operation_performance [S] bad']

task, data: acos laptop16
target: [('laptop quality', 'production quality', 'great', 'null')]
output: ['[A] physical case [O] null [S] great [C] laptop price', '[A] physical case [O] solid [S] great [C] laptop quality']
sent: ['-', 'the', 'physical', 'case', 'is', 'solid', 'and', 'of', 'a', 'production', 'quality', 'you', "'", 'd', 'expect', 'in', 'machine', '3', '-', '5x', 'the', 'price', 'of', 'this', 'machine']
counter: {('laptop quality', 'physical case', 'great', 'solid'): 5, ('laptop price', 'physical case', 'great', 'null'): 5}
output quads: ['[A] physical case [O] solid [S] great [C] laptop quality', '[A] physical case [O] null [S] great [C] laptop price']
multi_path: ['[A] physical case [O] solid [S] great [C] laptop quality [SSEP] [A] physical case [O] null [S] great [C] laptop price', '[A] physical case [S] great [O] solid [C] laptop quality [SSEP] [A] physical case [S] great [O] null [C] laptop price', '[A] physical case [O] solid [C] laptop quality [S] great [SSEP] [A] physical case [O] null [C] laptop price [S] great', '[O] solid [A] physical case [S] great [C] laptop quality [SSEP] [O] null [A] physical case [S] great [C] laptop price', '[O] solid [A] physical case [C] laptop quality [S] great [SSEP] [O] null [A] physical case [C] laptop price [S] great']

task, data: acos laptop16
target: [('os operation_performance', 'user interfaces', 'great', 'responsive'), ('os operation_performance', 'user interfaces', 'great', 'tight')]
output: ['[A] user interfaces [O] responsive [S] great [C] software operation_performance', '[A] user interfaces [O] tight [S] great [C] software operation_performance']
sent: ['-', 'user', 'interfaces', 'that', 'are', 'tight', ',', 'responsive']
counter: {('software operation_performance', 'user interfaces', 'great', 'tight'): 5, ('software operation_performance', 'user interfaces', 'great', 'responsive'): 5}
output quads: ['[A] user interfaces [O] tight [S] great [C] software operation_performance', '[A] user interfaces [O] responsive [S] great [C] software operation_performance']
multi_path: ['[A] user interfaces [O] tight [S] great [C] software operation_performance [SSEP] [A] user interfaces [O] responsive [S] great [C] software operation_performance', '[A] user interfaces [S] great [O] tight [C] software operation_performance [SSEP] [A] user interfaces [S] great [O] responsive [C] software operation_performance', '[A] user interfaces [O] tight [C] software operation_performance [S] great [SSEP] [A] user interfaces [O] responsive [C] software operation_performance [S] great', '[O] tight [A] user interfaces [S] great [C] software operation_performance [SSEP] [O] responsive [A] user interfaces [S] great [C] software operation_performance', '[O] tight [A] user interfaces [C] software operation_performance [S] great [SSEP] [O] responsive [A] user interfaces [C] software operation_performance [S] great']

task, data: acos laptop16
target: [('os design_features', 'null', 'great', 'light'), ('os operation_performance', 'null', 'great', 'robust')]
output: ["[A] cloud9's collaboration features [O] convenience [S] great [C] software design_features", '[A] development stack [O] light [S] great [C] software design_features', '[A] development stack [O] robust [S] great [C] software design_features']
sent: ['all', 'and', 'all', ',', 'it', "'", 's', 'a', 'light', 'weight', ',', 'but', 'very', 'robust', 'development', 'stack', ',', 'that', 'also', 'has', 'the', 'added', 'convenience', 'of', 'cloud9', "'", 's', 'collaboration', 'features', 'wherein', 'multiple', 'developers', 'can', 'be', 'writing', 'code', 'in', 'even', 'the', 'same', 'file', 'simultaneously', '.']
counter: {('software design_features', 'development stack', 'great', 'light'): 5, ('software design_features', 'development stack', 'great', 'robust'): 5, ('software design_features', "cloud9's collaboration features", 'great', 'convenience'): 5}
output quads: ['[A] development stack [O] light [S] great [C] software design_features', '[A] development stack [O] robust [S] great [C] software design_features', "[A] cloud9's collaboration features [O] convenience [S] great [C] software design_features"]
multi_path: ["[A] development stack [O] light [S] great [C] software design_features [SSEP] [A] development stack [O] robust [S] great [C] software design_features [SSEP] [A] cloud9's collaboration features [O] convenience [S] great [C] software design_features", "[A] development stack [S] great [O] light [C] software design_features [SSEP] [A] development stack [S] great [O] robust [C] software design_features [SSEP] [A] cloud9's collaboration features [S] great [O] convenience [C] software design_features", "[A] development stack [O] light [C] software design_features [S] great [SSEP] [A] development stack [O] robust [C] software design_features [S] great [SSEP] [A] cloud9's collaboration features [O] convenience [C] software design_features [S] great", "[O] light [A] development stack [S] great [C] software design_features [SSEP] [O] robust [A] development stack [S] great [C] software design_features [SSEP] [O] convenience [A] cloud9's collaboration features [S] great [C] software design_features", "[O] light [A] development stack [C] software design_features [S] great [SSEP] [O] robust [A] development stack [C] software design_features [S] great [SSEP] [O] convenience [A] cloud9's collaboration features [C] software design_features [S] great"]

task, data: acos laptop16
target: [('software operation_performance', 'android apps', 'great', 'well'), ('software operation_performance', 'null', 'great', 'well')]
output: ['[A] games [O] well [S] great [C] software operation_performance', '[A] network scanning android apps [O] well [S] great [C] software operation_performance', '[A] password vault [O] well [S] great [C] software operation_performance', '[A] productivity apps [O] well [S] great [C] software operation_performance', '[A] spotify [O] well [S] great [C] software operation_performance']
sent: ['thus', 'far', ',', 'i', "'", 've', 'loaded', 'a', 'number', 'of', 'games', ',', 'my', 'password', 'vault', ',', 'several', 'productivity', 'apps', ',', 'skype', ',', 'spotify', 'and', 'some', 'network', 'scanning', 'android', 'apps', 'and', 'they', "'", 've', 'all', 'worked', 'very', 'well', '.']
counter: {('software operation_performance', 'games', 'great', 'well'): 5, ('software operation_performance', 'password vault', 'great', 'well'): 5, ('software operation_performance', 'productivity apps', 'great', 'well'): 5, ('software operation_performance', 'spotify', 'great', 'well'): 5, ('software operation_performance', 'network scanning android apps', 'great', 'well'): 5, ('software operation_performance', 'skype', 'great', 'well'): 2}
output quads: ['[A] games [O] well [S] great [C] software operation_performance', '[A] password vault [O] well [S] great [C] software operation_performance', '[A] productivity apps [O] well [S] great [C] software operation_performance', '[A] spotify [O] well [S] great [C] software operation_performance', '[A] network scanning android apps [O] well [S] great [C] software operation_performance']
multi_path: ['[A] games [O] well [S] great [C] software operation_performance [SSEP] [A] password vault [O] well [S] great [C] software operation_performance [SSEP] [A] productivity apps [O] well [S] great [C] software operation_performance [SSEP] [A] spotify [O] well [S] great [C] software operation_performance [SSEP] [A] network scanning android apps [O] well [S] great [C] software operation_performance', '[A] games [S] great [O] well [C] software operation_performance [SSEP] [A] password vault [S] great [O] well [C] software operation_performance [SSEP] [A] productivity apps [S] great [O] well [C] software operation_performance [SSEP] [A] spotify [S] great [O] well [C] software operation_performance [SSEP] [A] network scanning android apps [S] great [O] well [C] software operation_performance', '[A] games [O] well [C] software operation_performance [S] great [SSEP] [A] password vault [O] well [C] software operation_performance [S] great [SSEP] [A] productivity apps [O] well [C] software operation_performance [S] great [SSEP] [A] spotify [O] well [C] software operation_performance [S] great [SSEP] [A] network scanning android apps [O] well [C] software operation_performance [S] great', '[O] well [A] games [S] great [C] software operation_performance [SSEP] [O] well [A] password vault [S] great [C] software operation_performance [SSEP] [O] well [A] productivity apps [S] great [C] software operation_performance [SSEP] [O] well [A] skype [S] great [C] software operation_performance [SSEP] [O] well [A] spotify [S] great [C] software operation_performance [SSEP] [O] well [A] network scanning android apps [S] great [C] software operation_performance', '[O] well [A] games [C] software operation_performance [S] great [SSEP] [O] well [A] password vault [C] software operation_performance [S] great [SSEP] [O] well [A] productivity apps [C] software operation_performance [S] great [SSEP] [O] well [A] skype [C] software operation_performance [S] great [SSEP] [O] well [A] spotify [C] software operation_performance [S] great [SSEP] [O] well [A] network scanning android apps [C] software operation_performance [S] great']

task, data: acos laptop16
target: [('software design_features', 'mouse', 'bad', 'minimalist'), ('software design_features', 'power management options', 'bad', 'minimalist'), ('software design_features', 'trackpad settings', 'bad', 'minimalist')]
output: ['[A] mouse [O] minimalist [S] bad [C] hardware design_features', '[A] power management options [O] null [S] bad [C] keyboard design_features', '[A] trackpad [O] minimalist [S] bad [C] hardware design_features']
sent: ['mouse', 'and', 'trackpad', 'settings', 'are', 'very', 'minimalist', ',', 'there', "'", 's', 'no', 'way', 'to', 'modify', 'short', '-', 'cut', 'keys', ',', 'and', 'the', 'power', 'management', 'options', 'are', 'pretty', 'minimal', ',', 'too', '.']
counter: {('hardware design_features', 'mouse', 'bad', 'minimalist'): 5, ('hardware design_features', 'trackpad', 'bad', 'minimalist'): 5, ('keyboard design_features', 'power management options', 'bad', 'null'): 4, ('keyboard design_features', 'short - cut keys', 'bad', 'null'): 1, ('power_supply general', 'power management options', 'bad', 'null'): 1}
output quads: ['[A] mouse [O] minimalist [S] bad [C] hardware design_features', '[A] trackpad [O] minimalist [S] bad [C] hardware design_features', '[A] power management options [O] null [S] bad [C] keyboard design_features']
multi_path: ['[A] mouse [O] minimalist [S] bad [C] hardware design_features [SSEP] [A] trackpad [O] minimalist [S] bad [C] hardware design_features [SSEP] [A] power management options [O] null [S] bad [C] keyboard design_features', '[A] mouse [S] bad [O] minimalist [C] hardware design_features [SSEP] [A] trackpad [S] bad [O] minimalist [C] hardware design_features [SSEP] [A] power management options [S] bad [O] null [C] keyboard design_features', '[A] mouse [O] minimalist [C] hardware design_features [S] bad [SSEP] [A] trackpad [O] minimalist [C] hardware design_features [S] bad [SSEP] [A] power management options [O] null [C] keyboard design_features [S] bad', '[O] minimalist [A] mouse [S] bad [C] hardware design_features [SSEP] [O] minimalist [A] trackpad [S] bad [C] hardware design_features [SSEP] [O] null [A] short - cut keys [S] bad [C] keyboard design_features [SSEP] [O] null [A] power management options [S] bad [C] power_supply general', '[O] minimalist [A] mouse [C] hardware design_features [S] bad [SSEP] [O] minimalist [A] trackpad [C] hardware design_features [S] bad [SSEP] [O] null [A] power management options [C] keyboard design_features [S] bad']

task, data: acos laptop16
target: [('software design_features', 'apps', 'great', 'great'), ('software design_features', 'google play store', 'great', 'great')]
output: ['[A] google play store [O] great [S] great [C] software general']
sent: ['and', 'the', 'google', 'play', 'store', 'is', 'chock', '-', 'full', 'of', 'great', 'apps', 'and', 'games', '.']
counter: {('software general', 'google play store', 'great', 'great'): 5}
output quads: ['[A] google play store [O] great [S] great [C] software general']
multi_path: ['[A] google play store [O] great [S] great [C] software general', '[A] google play store [S] great [O] great [C] software general', '[A] google play store [O] great [C] software general [S] great', '[O] great [A] google play store [S] great [C] software general', '[O] great [A] google play store [C] software general [S] great']

task, data: acos laptop16
target: [('os operation_performance', 'environments', 'great', 'effortless'), ('os operation_performance', 'environments', 'great', 'seamless'), ('os operation_performance', 'environments', 'great', 'smooth'), ('os operation_performance', 'linux configs', 'great', 'effortless'), ('os operation_performance', 'linux configs', 'great', 'seamless'), ('os operation_performance', 'linux configs', 'great', 'smooth')]
output: ['[A] linux configs [O] effortless [S] great [C] laptop usability', '[A] null [O] seamless [S] great [C] laptop usability', '[A] null [O] smooth [S] great [C] laptop usability']
sent: ['it', "'", 's', 'really', 'seamless', 'and', 'smooth', 'to', 'move', 'back', 'and', 'forth', 'and', 'makes', 'experimenting', 'with', 'different', 'linux', 'configs', 'and', 'environments', 'effortless', '.']
counter: {('laptop usability', 'null', 'great', 'seamless'): 5, ('laptop usability', 'null', 'great', 'smooth'): 5, ('laptop usability', 'linux configs', 'great', 'effortless'): 3, ('laptop usability', 'null', 'great', 'effortless'): 2}
output quads: ['[A] null [O] seamless [S] great [C] laptop usability', '[A] null [O] smooth [S] great [C] laptop usability', '[A] linux configs [O] effortless [S] great [C] laptop usability']
multi_path: ['[A] it [O] seamless [S] great [C] laptop usability [SSEP] [A] it [O] smooth [S] great [C] laptop usability [SSEP] [A] linux configs [O] effortless [S] great [C] laptop usability', '[A] it [S] great [O] seamless [C] laptop usability [SSEP] [A] it [S] great [O] smooth [C] laptop usability [SSEP] [A] linux configs [S] great [O] effortless [C] laptop usability', '[A] it [O] seamless [C] laptop usability [S] great [SSEP] [A] it [O] smooth [C] laptop usability [S] great [SSEP] [A] linux configs [O] effortless [C] laptop usability [S] great', '[O] seamless [A] it [S] great [C] laptop usability [SSEP] [O] smooth [A] it [S] great [C] laptop usability [SSEP] [O] effortless [A] it [S] great [C] laptop usability', '[O] seamless [A] it [C] laptop usability [S] great [SSEP] [O] smooth [A] it [C] laptop usability [S] great [SSEP] [O] effortless [A] it [C] laptop usability [S] great']

task, data: acos laptop16
target: [('laptop general', 'computer', 'great', 'fun'), ('laptop general', 'computer', 'great', 'valuable'), ('laptop general', 'machine', 'great', 'great'), ('laptop general', 'machine', 'great', 't be disappointed'), ('laptop general', 'null', 'great', 'fun'), ('laptop general', 'null', 'great', 'valuable')]
output: ['[A] machine [O] great [S] great [C] laptop general', '[A] machine [O] versatility [S] great [C] laptop operation_performance']
sent: ['you', 'won', "'", 't', 'be', 'disappointed', 'with', 'this', 'great', 'little', 'machine', 'how', 'ever', 'you', 'end', 'up', 'using', 'it', ',', 'and', 'that', 'versatility', 'is', 'what', 'really', 'makes', 'this', 'machine', 'such', 'a', 'fun', 'and', 'valuable', 'computer', '.']
counter: {('laptop general', 'machine', 'great', 'great'): 5, ('laptop operation_performance', 'machine', 'great', 'fun'): 2, ('laptop general', 'machine', 'great', 'valuable'): 2, ('laptop operation_performance', 'machine', 'great', 'versatility'): 3, ('laptop operation_performance', 'computer', 'great', 'fun'): 2, ('laptop general', 'computer', 'great', 'valuable'): 2}
output quads: ['[A] machine [O] great [S] great [C] laptop general', '[A] machine [O] versatility [S] great [C] laptop operation_performance']
multi_path: ['[A] machine [O] great [S] great [C] laptop general [SSEP] [A] machine [O] fun [S] great [C] laptop operation_performance [SSEP] [A] machine [O] valuable [S] great [C] laptop general', '[A] machine [S] great [O] great [C] laptop general [SSEP] [A] machine [S] great [O] versatility [C] laptop operation_performance [SSEP] [A] computer [S] great [O] fun [C] laptop operation_performance [SSEP] [A] computer [S] great [O] valuable [C] laptop general', '[A] machine [O] great [C] laptop general [S] great [SSEP] [A] machine [O] fun [C] laptop operation_performance [S] great [SSEP] [A] machine [O] valuable [C] laptop general [S] great', '[O] great [A] machine [S] great [C] laptop general [SSEP] [O] versatility [A] machine [S] great [C] laptop operation_performance', '[O] great [A] machine [C] laptop general [S] great [SSEP] [O] versatility [A] machine [C] laptop operation_performance [S] great [SSEP] [O] fun [A] computer [C] laptop operation_performance [S] great [SSEP] [O] valuable [A] computer [C] laptop general [S] great']

task, data: acos laptop16
target: [('display general', 'null', 'great', 'gorgeous'), ('display operation_performance', 'screen protector', 'great', 'fitted'), ('display operation_performance', 'screen protector', 'great', 'nice')]
output: ['[A] screen protector [O] fitted [S] great [C] display design_features', '[A] screen protector [O] nice [S] great [C] display design_features']
sent: ['for', '~', '$', '15', 'you', 'can', 'get', 'a', 'nice', ',', 'fitted', 'anti', '-', 'glare', 'screen', 'protector', 'that', 'reduces', 'the', 'fingerprint', '/', 'glare', 'problems', 'and', 'gives', 'you', 'some', 'piece', 'of', 'mind', 'about', 'protecting', 'that', 'gorgeous', 'screen', '.']
counter: {('display design_features', 'screen protector', 'great', 'nice'): 5, ('display design_features', 'screen protector', 'great', 'fitted'): 5, ('display quality', 'screen', 'great', 'gorgeous'): 1}
output quads: ['[A] screen protector [O] nice [S] great [C] display design_features', '[A] screen protector [O] fitted [S] great [C] display design_features']
multi_path: ['[A] screen protector [O] nice [S] great [C] display design_features [SSEP] [A] screen protector [O] fitted [S] great [C] display design_features', '[A] screen protector [S] great [O] nice [C] display design_features [SSEP] [A] screen protector [S] great [O] fitted [C] display design_features', '[A] screen protector [O] nice [C] display design_features [S] great [SSEP] [A] screen protector [O] fitted [C] display design_features [S] great', '[O] nice [A] screen protector [S] great [C] display design_features [SSEP] [O] fitted [A] screen protector [S] great [C] display design_features [SSEP] [O] gorgeous [A] screen [S] great [C] display quality', '[O] nice [A] screen protector [C] display design_features [S] great [SSEP] [O] fitted [A] screen protector [C] display design_features [S] great']

task, data: acos laptop16
target: [('cpu general', 'intel core m3 processor', 'great', 'drawn to'), ('laptop general', 'c302', 'great', 'drawn to')]
output: ['[A] c302 [O] drawn [S] great [C] laptop general']
sent: ['i', 'saw', 'this', 'c302', 'was', 'announced', 'at', 'ces', 'and', 'was', 'immediately', 'drawn', 'to', 'it', 'since', 'it', 'has', 'the', 'intel', 'core', 'm3', 'processor', '.']
counter: {('laptop general', 'c302', 'great', 'drawn'): 5}
output quads: ['[A] c302 [O] drawn [S] great [C] laptop general']
multi_path: ['[A] c302 [O] drawn [S] great [C] laptop general', '[A] c302 [S] great [O] drawn [C] laptop general', '[A] c302 [O] drawn [C] laptop general [S] great', '[O] drawn [A] c302 [S] great [C] laptop general', '[O] drawn [A] c302 [C] laptop general [S] great']

task, data: acos laptop16
target: [('software operation_performance', 'apps', 'great', 'wonderfully'), ('software operation_performance', 'excel', 'great', 'wonderfully'), ('software operation_performance', 'microsoft word', 'great', 'wonderfully')]
output: ['[A] apps [O] wonderfully [S] great [C] software operation_performance']
sent: ['apps', 'like', 'microsoft', 'word', ',', 'excel', ',', 'etc', 'run', 'wonderfully', '.']
counter: {('software operation_performance', 'apps', 'great', 'wonderfully'): 5, ('software operation_performance', 'microsoft word', 'great', 'wonderfully'): 2, ('software operation_performance', 'excel', 'great', 'wonderfully'): 2}
output quads: ['[A] apps [O] wonderfully [S] great [C] software operation_performance']
multi_path: ['[A] apps [O] wonderfully [S] great [C] software operation_performance', '[A] apps [S] great [O] wonderfully [C] software operation_performance', '[A] apps [O] wonderfully [C] software operation_performance [S] great [SSEP] [A] microsoft word [O] wonderfully [C] software operation_performance [S] great [SSEP] [A] excel [O] wonderfully [C] software operation_performance [S] great', '[O] wonderfully [A] apps [S] great [C] software operation_performance', '[O] wonderfully [A] apps [C] software operation_performance [S] great [SSEP] [O] wonderfully [A] microsoft word [C] software operation_performance [S] great [SSEP] [O] wonderfully [A] excel [C] software operation_performance [S] great']

task, data: acos laptop16
target: [('laptop operation_performance', 'c302', 'great', 'excellently'), ('laptop operation_performance', 'c302', 'great', 'null')]
output: ['[A] c302 [O] excellently [S] great [C] laptop operation_performance', '[A] null [O] happy [S] great [C] laptop operation_performance', '[A] null [O] relieved [S] great [C] laptop operation_performance']
sent: ['so', 'i', "'", 'm', 'very', 'happy', 'and', 'relieved', 'to', 'see', 'it', 'working', 'excellently', 'on', 'the', 'c302', '.']
counter: {('laptop operation_performance', 'null', 'great', 'happy'): 5, ('laptop operation_performance', 'null', 'great', 'relieved'): 5, ('laptop operation_performance', 'c302', 'great', 'excellently'): 5}
output quads: ['[A] null [O] happy [S] great [C] laptop operation_performance', '[A] null [O] relieved [S] great [C] laptop operation_performance', '[A] c302 [O] excellently [S] great [C] laptop operation_performance']
multi_path: ['[A] it [O] happy [S] great [C] laptop operation_performance [SSEP] [A] it [O] relieved [S] great [C] laptop operation_performance [SSEP] [A] c302 [O] excellently [S] great [C] laptop operation_performance', '[A] it [S] great [O] happy [C] laptop operation_performance [SSEP] [A] it [S] great [O] relieved [C] laptop operation_performance [SSEP] [A] c302 [S] great [O] excellently [C] laptop operation_performance', '[A] it [O] happy [C] laptop operation_performance [S] great [SSEP] [A] it [O] relieved [C] laptop operation_performance [S] great [SSEP] [A] c302 [O] excellently [C] laptop operation_performance [S] great', '[O] happy [A] it [S] great [C] laptop operation_performance [SSEP] [O] relieved [A] it [S] great [C] laptop operation_performance [SSEP] [O] excellently [A] c302 [S] great [C] laptop operation_performance', '[O] happy [A] it [C] laptop operation_performance [S] great [SSEP] [O] relieved [A] it [C] laptop operation_performance [S] great [SSEP] [O] excellently [A] c302 [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('laptop general', 'chromebook', 'great', 'best')]
output: ['[A] chromebook [O] best [S] great [C] laptop price']
sent: ['this', 'is', 'easily', 'the', 'best', 'overall', 'chromebook', 'out', 'there', 'right', 'now', '(', 'under', '$', '500', ')', '.']
counter: {('laptop price', 'chromebook', 'great', 'best'): 5}
output quads: ['[A] chromebook [O] best [S] great [C] laptop price']
multi_path: ['[A] chromebook [O] best [S] great [C] laptop price', '[A] chromebook [S] great [O] best [C] laptop price', '[A] chromebook [O] best [C] laptop price [S] great', '[O] best [A] chromebook [S] great [C] laptop price', '[O] best [A] chromebook [C] laptop price [S] great']

task, data: acos laptop16
target: [('battery general', 'battery', 'great', 'great'), ('battery general', 'battery life', 'great', 'great')]
output: ['[A] battery life [O] great [S] great [C] battery general']
sent: ['*', 'battery', '*', '-', 'battery', 'life', 'is', 'great', '.']
counter: {('battery general', 'battery life', 'great', 'great'): 5}
output quads: ['[A] battery life [O] great [S] great [C] battery general']
multi_path: ['[A] battery life [O] great [S] great [C] battery general', '[A] battery life [S] great [O] great [C] battery general', '[A] battery life [O] great [C] battery general [S] great', '[O] great [A] battery life [S] great [C] battery general', '[O] great [A] battery life [C] battery general [S] great']

task, data: acos laptop16
target: [('keyboard operation_performance', 'multi - touch input', 'great', 'great')]
output: ['[A] multi - touch input [O] great [S] great [C] hardware operation_performance']
sent: ['multi', '-', 'touch', 'input', 'works', 'great', '.']
counter: {('hardware operation_performance', 'multi - touch input', 'great', 'great'): 5}
output quads: ['[A] multi - touch input [O] great [S] great [C] hardware operation_performance']
multi_path: ['[A] multi - touch input [O] great [S] great [C] hardware operation_performance', '[A] multi - touch input [S] great [O] great [C] hardware operation_performance', '[A] multi - touch input [O] great [C] hardware operation_performance [S] great', '[O] great [A] multi - touch input [S] great [C] hardware operation_performance', '[O] great [A] multi - touch input [C] hardware operation_performance [S] great']

task, data: acos laptop16
target: [('laptop quality', 'build quality', 'great', 'pleased'), ('laptop quality', 'null', 'great', 'pleased')]
output: ['[A] build quality [O] pleased [S] great [C] laptop quality', '[A] overall quality [O] pleased [S] great [C] laptop quality']
sent: ['*', 'build', 'quality', '*', '-', 'i', "'", 'm', 'really', 'pleased', 'with', 'the', 'overall', 'quality', '.']
counter: {('laptop quality', 'build quality', 'great', 'pleased'): 5, ('laptop quality', 'overall quality', 'great', 'pleased'): 5}
output quads: ['[A] build quality [O] pleased [S] great [C] laptop quality', '[A] overall quality [O] pleased [S] great [C] laptop quality']
multi_path: ['[A] build quality [O] pleased [S] great [C] laptop quality [SSEP] [A] overall quality [O] pleased [S] great [C] laptop quality', '[A] build quality [S] great [O] pleased [C] laptop quality [SSEP] [A] overall quality [S] great [O] pleased [C] laptop quality', '[A] build quality [O] pleased [C] laptop quality [S] great [SSEP] [A] overall quality [O] pleased [C] laptop quality [S] great', '[O] pleased [A] build quality [S] great [C] laptop quality [SSEP] [O] pleased [A] overall quality [S] great [C] laptop quality', '[O] pleased [A] build quality [C] laptop quality [S] great [SSEP] [O] pleased [A] overall quality [C] laptop quality [S] great']

task, data: acos laptop16
target: [('os operation_performance', 'starts up', 'ok', 'null')]
output: ['[A] runs [O] null [S] great [C] laptop operation_performance', '[A] starts up [O] null [S] great [C] laptop operation_performance']
sent: ['it', 'starts', 'up', ',', 'runs', 'without', 'issues', '.']
counter: {('laptop operation_performance', 'starts up', 'great', 'null'): 5, ('laptop operation_performance', 'runs', 'great', 'null'): 5}
output quads: ['[A] starts up [O] null [S] great [C] laptop operation_performance', '[A] runs [O] null [S] great [C] laptop operation_performance']
multi_path: ['[A] starts up [O] null [S] great [C] laptop operation_performance [SSEP] [A] runs [O] null [S] great [C] laptop operation_performance', '[A] starts up [S] great [O] null [C] laptop operation_performance [SSEP] [A] runs [S] great [O] null [C] laptop operation_performance', '[A] starts up [O] null [C] laptop operation_performance [S] great [SSEP] [A] runs [O] null [C] laptop operation_performance [S] great', '[O] null [A] starts up [S] great [C] laptop operation_performance [SSEP] [O] null [A] runs [S] great [C] laptop operation_performance', '[O] null [A] starts up [C] laptop operation_performance [S] great [SSEP] [O] null [A] runs [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('laptop general', 'chromebook', 'great', 'null')]
output: ['[A] chromebook [O] null [S] great [C] laptop price']
sent: ['this', 'is', 'finally', 'the', 'chromebook', 'i', "'", 've', 'been', 'waiting', 'for', ',', 'that', 'is', 'not', 'a', '$', '1300', 'pixel', '.']
counter: {('laptop price', 'chromebook', 'great', 'null'): 5}
output quads: ['[A] chromebook [O] null [S] great [C] laptop price']
multi_path: ['[A] chromebook [O] null [S] great [C] laptop price', '[A] chromebook [S] great [O] null [C] laptop price', '[A] chromebook [O] null [C] laptop price [S] great', '[O] null [A] chromebook [S] great [C] laptop price', '[O] null [A] chromebook [C] laptop price [S] great']

task, data: acos laptop16
target: [('display operation_performance', 'screen', 'great', 'glossy'), ('display operation_performance', 'screen', 'great', 'great'), ('display operation_performance', 'screen', 'great', 'sharp')]
output: ['[A] screen [O] glossy [S] great [C] display design_features', '[A] screen [O] great [S] great [C] display design_features', '[A] screen [O] sharp [S] great [C] display design_features']
sent: ['-', 'the', 'screen', 'has', 'great', 'contrast', 'and', 'is', 'glossy', 'and', 'sharp']
counter: {('display design_features', 'screen', 'great', 'great'): 5, ('display design_features', 'screen', 'great', 'glossy'): 5, ('display design_features', 'screen', 'great', 'sharp'): 5}
output quads: ['[A] screen [O] great [S] great [C] display design_features', '[A] screen [O] glossy [S] great [C] display design_features', '[A] screen [O] sharp [S] great [C] display design_features']
multi_path: ['[A] screen [O] great [S] great [C] display design_features [SSEP] [A] screen [O] glossy [S] great [C] display design_features [SSEP] [A] screen [O] sharp [S] great [C] display design_features', '[A] screen [S] great [O] great [C] display design_features [SSEP] [A] screen [S] great [O] glossy [C] display design_features [SSEP] [A] screen [S] great [O] sharp [C] display design_features', '[A] screen [O] great [C] display design_features [S] great [SSEP] [A] screen [O] glossy [C] display design_features [S] great [SSEP] [A] screen [O] sharp [C] display design_features [S] great', '[O] great [A] screen [S] great [C] display design_features [SSEP] [O] glossy [A] screen [S] great [C] display design_features [SSEP] [O] sharp [A] screen [S] great [C] display design_features', '[O] great [A] screen [C] display design_features [S] great [SSEP] [O] glossy [A] screen [C] display design_features [S] great [SSEP] [O] sharp [A] screen [C] display design_features [S] great']

task, data: acos laptop16
target: [('display design_features', 'screen', 'bad', 'brighter')]
output: ['[A] screen [O] null [S] bad [C] display design_features']
sent: ['-', 'this', 'may', 'be', 'a', 'personal', 'preference', 'but', 'i', 'did', 'wish', 'the', 'screen', 'was', 'a', 'tad', 'bit', 'brighter', '.']
counter: {('display design_features', 'screen', 'bad', 'null'): 5}
output quads: ['[A] screen [O] null [S] bad [C] display design_features']
multi_path: ['[A] screen [O] null [S] bad [C] display design_features', '[A] screen [S] bad [O] null [C] display design_features', '[A] screen [O] null [C] display design_features [S] bad', '[O] null [A] screen [S] bad [C] display design_features', '[O] null [A] screen [C] display design_features [S] bad']

task, data: acos laptop16
target: [('display design_features', 'screen', 'great', 'nicer'), ('hard_disc design_features', 'drive space', 'great', 'null'), ('laptop operation_performance', 'null', 'great', 'faster'), ('memory design_features', 'memory', 'great', 'null')]
output: ['[A] drive space [O] null [S] great [C] hard_disc design_features', '[A] memory [O] null [S] great [C] memory design_features', '[A] null [O] faster [S] great [C] laptop operation_performance', '[A] screen [O] nicer [S] great [C] display general']
sent: ['it', "'", 's', 'faster', ',', 'the', 'screen', 'is', 'much', 'nicer', ',', 'and', 'it', 'has', 'twice', 'the', 'memory', 'and', 'four', 'times', 'the', 'drive', 'space', '.']
counter: {('laptop operation_performance', 'null', 'great', 'faster'): 5, ('display general', 'screen', 'great', 'nicer'): 5, ('memory design_features', 'memory', 'great', 'null'): 5, ('hard_disc design_features', 'drive space', 'great', 'null'): 5}
output quads: ['[A] null [O] faster [S] great [C] laptop operation_performance', '[A] screen [O] nicer [S] great [C] display general', '[A] memory [O] null [S] great [C] memory design_features', '[A] drive space [O] null [S] great [C] hard_disc design_features']
multi_path: ['[A] it [O] faster [S] great [C] laptop operation_performance [SSEP] [A] screen [O] nicer [S] great [C] display general [SSEP] [A] memory [O] null [S] great [C] memory design_features [SSEP] [A] drive space [O] null [S] great [C] hard_disc design_features', '[A] it [S] great [O] faster [C] laptop operation_performance [SSEP] [A] screen [S] great [O] nicer [C] display general [SSEP] [A] memory [S] great [O] null [C] memory design_features [SSEP] [A] drive space [S] great [O] null [C] hard_disc design_features', '[A] it [O] faster [C] laptop operation_performance [S] great [SSEP] [A] screen [O] nicer [C] display general [S] great [SSEP] [A] memory [O] null [C] memory design_features [S] great [SSEP] [A] drive space [O] null [C] hard_disc design_features [S] great', '[O] faster [A] it [S] great [C] laptop operation_performance [SSEP] [O] nicer [A] screen [S] great [C] display general [SSEP] [O] null [A] memory [S] great [C] memory design_features [SSEP] [O] null [A] drive space [S] great [C] hard_disc design_features', '[O] faster [A] it [C] laptop operation_performance [S] great [SSEP] [O] nicer [A] screen [C] display general [S] great [SSEP] [O] null [A] memory [C] memory design_features [S] great [SSEP] [O] null [A] drive space [C] hard_disc design_features [S] great']

task, data: acos laptop16
target: [('laptop design_features', 'design', 'great', 'sleek')]
output: ['[A] c302 [O] sleek [S] great [C] laptop design_features', '[A] core m3 processor [O] null [S] great [C] cpu design_features']
sent: ['the', 'core', 'm3', 'processor', 'allows', 'the', 'c302', 'to', 'be', 'fanless', ',', 'as', 'well', ',', 'adding', 'to', 'the', 'sleek', 'design', '.']
counter: {('cpu design_features', 'core m3 processor', 'great', 'null'): 5, ('laptop design_features', 'c302', 'great', 'sleek'): 5}
output quads: ['[A] core m3 processor [O] null [S] great [C] cpu design_features', '[A] c302 [O] sleek [S] great [C] laptop design_features']
multi_path: ['[A] core m3 processor [O] null [S] great [C] cpu design_features [SSEP] [A] c302 [O] sleek [S] great [C] laptop design_features', '[A] core m3 processor [S] great [O] null [C] cpu design_features [SSEP] [A] c302 [S] great [O] sleek [C] laptop design_features', '[A] core m3 processor [O] null [C] cpu design_features [S] great [SSEP] [A] c302 [O] sleek [C] laptop design_features [S] great', '[O] null [A] core m3 processor [S] great [C] cpu design_features [SSEP] [O] sleek [A] c302 [S] great [C] laptop design_features', '[O] null [A] core m3 processor [C] cpu design_features [S] great [SSEP] [O] sleek [A] c302 [C] laptop design_features [S] great']

task, data: acos laptop16
target: [('display usability', 'null', 'great', 'null')]
output: ['[A] null [O] null [S] great [C] laptop general']
sent: ['it', "'", 's', 'a', 'real', 'timesaver', ',', 'honestly', '.']
counter: {('laptop general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [O] null [S] great [C] laptop general']
multi_path: ['[A] it [O] null [S] great [C] laptop general', '[A] it [S] great [O] null [C] laptop general', '[A] it [O] null [C] laptop general [S] great', '[O] null [A] it [S] great [C] laptop general', '[O] null [A] it [C] laptop general [S] great']

task, data: acos laptop16
target: [('display design_features', 'display', 'great', 'sharp'), ('keyboard operation_performance', 'touch', 'great', 'excellent'), ('keyboard operation_performance', 'touch', 'great', 'responsive')]
output: ['[A] display [O] excellent [S] great [C] display operation_performance', '[A] display [O] sharp [S] great [C] display operation_performance', '[A] display [O] touch responsive [S] great [C] display operation_performance']
sent: ['i', 'find', 'the', 'display', 'sharp', 'and', 'touch', 'responsive', 'to', 'be', 'quite', 'excellent', '.']
counter: {('display operation_performance', 'display', 'great', 'sharp'): 5, ('display operation_performance', 'display', 'great', 'responsive'): 2, ('display operation_performance', 'display', 'great', 'excellent'): 5, ('display operation_performance', 'display', 'great', 'touch responsive'): 3}
output quads: ['[A] display [O] sharp [S] great [C] display operation_performance', '[A] display [O] excellent [S] great [C] display operation_performance', '[A] display [O] touch responsive [S] great [C] display operation_performance']
multi_path: ['[A] display [O] sharp [S] great [C] display operation_performance [SSEP] [A] display [O] responsive [S] great [C] display operation_performance [SSEP] [A] display [O] excellent [S] great [C] display operation_performance', '[A] display [S] great [O] sharp [C] display operation_performance [SSEP] [A] display [S] great [O] touch responsive [C] display operation_performance [SSEP] [A] display [S] great [O] excellent [C] display operation_performance', '[A] display [O] sharp [C] display operation_performance [S] great [SSEP] [A] display [O] touch responsive [C] display operation_performance [S] great [SSEP] [A] display [O] excellent [C] display operation_performance [S] great', '[O] sharp [A] display [S] great [C] display operation_performance [SSEP] [O] responsive [A] display [S] great [C] display operation_performance [SSEP] [O] excellent [A] display [S] great [C] display operation_performance', '[O] sharp [A] display [C] display operation_performance [S] great [SSEP] [O] touch responsive [A] display [C] display operation_performance [S] great [SSEP] [O] excellent [A] display [C] display operation_performance [S] great']

task, data: acos laptop16
target: [('laptop general', 'null', 'great', 'worth')]
output: ['[A] null [O] worth [S] great [C] laptop general', '[A] product [O] premium [S] great [C] laptop general']
sent: ['at', 'the', 'end', 'of', 'the', 'day', 'i', 'think', 'it', 'is', 'worth', 'the', 'extra', 'cost', 'if', 'you', 'are', 'looking', 'for', 'a', 'premium', 'product', 'feel', '.']
counter: {('laptop general', 'null', 'great', 'worth'): 5, ('laptop general', 'product', 'great', 'premium'): 4, ('laptop quality', 'product', 'great', 'premium'): 1}
output quads: ['[A] null [O] worth [S] great [C] laptop general', '[A] product [O] premium [S] great [C] laptop general']
multi_path: ['[A] it [O] worth [S] great [C] laptop general [SSEP] [A] product [O] premium [S] great [C] laptop general', '[A] it [S] great [O] worth [C] laptop general [SSEP] [A] product [S] great [O] premium [C] laptop general', '[A] it [O] worth [C] laptop general [S] great [SSEP] [A] product [O] premium [C] laptop general [S] great', '[O] worth [A] it [S] great [C] laptop general [SSEP] [O] premium [A] product [S] great [C] laptop general', '[O] worth [A] it [C] laptop general [S] great [SSEP] [O] premium [A] product [C] laptop quality [S] great']

task, data: acos laptop16
target: [('display design_features', 'screen', 'great', 'bright'), ('display design_features', 'screen', 'great', 'nice'), ('display design_features', 'touchscreen', 'great', 'bright'), ('display design_features', 'touchscreen', 'great', 'nice')]
output: ['[A] screen [O] bright [S] great [C] display design_features', '[A] screen [O] nice [S] great [C] display design_features']
sent: ['-', 'nice', ',', 'bright', 'screen', '(', 'touchscreen', ',', 'too', '!', ')']
counter: {('display design_features', 'screen', 'great', 'nice'): 5, ('display design_features', 'screen', 'great', 'bright'): 5}
output quads: ['[A] screen [O] nice [S] great [C] display design_features', '[A] screen [O] bright [S] great [C] display design_features']
multi_path: ['[A] screen [O] nice [S] great [C] display design_features [SSEP] [A] screen [O] bright [S] great [C] display design_features', '[A] screen [S] great [O] nice [C] display design_features [SSEP] [A] screen [S] great [O] bright [C] display design_features', '[A] screen [O] nice [C] display design_features [S] great [SSEP] [A] screen [O] bright [C] display design_features [S] great', '[O] nice [A] screen [S] great [C] display design_features [SSEP] [O] bright [A] screen [S] great [C] display design_features', '[O] nice [A] screen [C] display design_features [S] great [SSEP] [O] bright [A] screen [C] display design_features [S] great']

task, data: acos laptop16
target: [('hardware operation_performance', 'trackpad', 'ok', 't the best')]
output: ['[A] trackpad [O] t the best [S] ok [C] hardware general']
sent: ['-', 'trackpad', 'isn', "'", 't', 'the', 'best', '.']
counter: {('hardware general', 'trackpad', 'ok', 't the best'): 5}
output quads: ['[A] trackpad [O] t the best [S] ok [C] hardware general']
multi_path: ["[A] trackpad [O]'t the best [S] ok [C] hardware general", "[A] trackpad [S] ok [O]'t the best [C] hardware general", "[A] trackpad [O]'t the best [C] hardware general [S] ok", "[O]'t the best [A] trackpad [S] ok [C] hardware general", "[O]'t the best [A] trackpad [C] hardware general [S] ok"]

task, data: acos laptop16
target: [('display general', 'touch screen', 'bad', 'null')]
output: ['[A] touch screen [O] t as accurate [S] bad [C] display operation_performance']
sent: ['-', 'the', 'touch', 'screen', 'isn', "'", 't', 'as', 'accurate', 'as', 'i', 'wish', ',', 'for', 'cases', 'like', 'tapping', 'tiny', 'things', 'around', 'the', 'edges', '.']
counter: {('display operation_performance', 'touch screen', 'bad', 't as accurate'): 5}
output quads: ['[A] touch screen [O] t as accurate [S] bad [C] display operation_performance']
multi_path: ["[A] touch screen [O]'t as accurate [S] bad [C] display operation_performance", "[A] touch screen [S] bad [O]'t as accurate [C] display operation_performance", "[A] touch screen [O]'t as accurate [C] display operation_performance [S] bad", "[O]'t as accurate [A] touch screen [S] bad [C] display operation_performance", "[O]'t as accurate [A] touch screen [C] display operation_performance [S] bad"]

task, data: acos laptop16
target: [('display design_features', 'screen', 'bad', 'awkward')]
output: ['[A] screen size [O] awkward [S] bad [C] display design_features']
sent: ['-', 'the', 'screen', 'size', 'is', 'an', 'awkward', '16', ':', '9', 'and', 'provides', 'a', '1920x1080', 'resolution', '(', 'although', 'the', 'default', 'is', 'set', 'to', '1536x864', ')', '.']
counter: {('display design_features', 'screen size', 'bad', 'awkward'): 5}
output quads: ['[A] screen size [O] awkward [S] bad [C] display design_features']
multi_path: ['[A] screen size [O] awkward [S] bad [C] display design_features', '[A] screen size [S] bad [O] awkward [C] display design_features', '[A] screen size [O] awkward [C] display design_features [S] bad', '[O] awkward [A] screen size [S] bad [C] display design_features', '[O] awkward [A] screen size [C] display design_features [S] bad']

task, data: acos laptop16
target: [('laptop price', 'null', 'great', 'well worth')]
output: ['[A] null [O] well worth [S] great [C] laptop quality']
sent: ['nevertheless', ',', 'i', 'did', 'have', 'my', 'own', 'nitpicking', 'issues', 'with', 'it', 'but', 'for', 'the', '$', '250', 'price', 'tag', 'it', 'launched', 'with', ',', 'it', 'was', 'well', 'worth', 'it', '.']
counter: {('laptop quality', 'null', 'great', 'well worth'): 5}
output quads: ['[A] null [O] well worth [S] great [C] laptop quality']
multi_path: ['[A] it [O] well worth [S] great [C] laptop quality', '[A] it [S] great [O] well worth [C] laptop quality', '[A] it [O] well worth [C] laptop quality [S] great', '[O] well worth [A] it [S] great [C] laptop quality', '[O] well worth [A] it [C] laptop quality [S] great']

task, data: acos laptop16
target: [('display design_features', 'display', 'great', 'excellent'), ('display design_features', 'display', 'great', 'vibrant')]
output: ['[A] display [O] excellent [S] great [C] display operation_performance', '[A] display [O] vibrant [S] great [C] display operation_performance']
sent: ['i', 'found', 'the', 'display', 'to', 'be', 'very', 'vibrant', ',', 'with', 'excellent', 'pixel', 'density', '.']
counter: {('display operation_performance', 'display', 'great', 'vibrant'): 5, ('display operation_performance', 'display', 'great', 'excellent'): 5}
output quads: ['[A] display [O] vibrant [S] great [C] display operation_performance', '[A] display [O] excellent [S] great [C] display operation_performance']
multi_path: ['[A] display [O] vibrant [S] great [C] display operation_performance [SSEP] [A] display [O] excellent [S] great [C] display operation_performance', '[A] display [S] great [O] vibrant [C] display operation_performance [SSEP] [A] display [S] great [O] excellent [C] display operation_performance', '[A] display [O] vibrant [C] display operation_performance [S] great [SSEP] [A] display [O] excellent [C] display operation_performance [S] great', '[O] vibrant [A] display [S] great [C] display operation_performance [SSEP] [O] excellent [A] display [S] great [C] display operation_performance', '[O] vibrant [A] display [C] display operation_performance [S] great [SSEP] [O] excellent [A] display [C] display operation_performance [S] great']

task, data: acos laptop16
target: [('ports usability', 'ports', 'great', 'null')]
output: ['[A] null [O] ergonomics [S] great [C] ports design_features', '[A] ports [O] like [S] great [C] ports design_features']
sent: ['i', 'like', 'the', 'dispersion', 'of', 'ports', 'and', 'feel', 'it', 'helps', 'with', 'the', 'ergonomics', 'of', 'your', 'daily', 'usage', '.']
counter: {('ports design_features', 'ports', 'great', 'like'): 5, ('ports design_features', 'ports', 'great', 'ergonomics'): 1, ('ports design_features', 'null', 'great', 'ergonomics'): 3, ('ports design_features', 'ergonomics', 'great', 'like'): 1}
output quads: ['[A] ports [O] like [S] great [C] ports design_features', '[A] null [O] ergonomics [S] great [C] ports design_features']
multi_path: ['[A] ports [O] like [S] great [C] ports design_features [SSEP] [A] ports [O] ergonomics [S] great [C] ports design_features', '[A] ports [S] great [O] like [C] ports design_features [SSEP] [A] it [S] great [O] ergonomics [C] ports design_features', '[A] ports [O] like [C] ports design_features [S] great [SSEP] [A] ergonomics [O] like [C] ports design_features [S] great', '[O] like [A] ports [S] great [C] ports design_features [SSEP] [O] ergonomics [A] it [S] great [C] ports design_features', '[O] like [A] ports [C] ports design_features [S] great [SSEP] [O] ergonomics [A] it [C] ports design_features [S] great']

task, data: acos laptop16
target: [('display general', 'screen', 'great', 'null'), ('laptop quality', 'build quality', 'great', 'excellent')]
output: ['[A] build quality [O] excellent [S] great [C] laptop quality', '[A] screen [O] fan [S] great [C] display general']
sent: ['still', ',', 'for', '$', '450', 'i', "'", 'm', 'a', 'huge', 'fan', 'of', 'the', 'screen', 'and', 'the', 'excellent', 'overall', 'build', 'quality', '.']
counter: {('display general', 'screen', 'great', 'fan'): 5, ('laptop quality', 'build quality', 'great', 'excellent'): 5}
output quads: ['[A] screen [O] fan [S] great [C] display general', '[A] build quality [O] excellent [S] great [C] laptop quality']
multi_path: ['[A] screen [O] fan [S] great [C] display general [SSEP] [A] build quality [O] excellent [S] great [C] laptop quality', '[A] screen [S] great [O] fan [C] display general [SSEP] [A] build quality [S] great [O] excellent [C] laptop quality', '[A] screen [O] fan [C] display general [S] great [SSEP] [A] build quality [O] excellent [C] laptop quality [S] great', '[O] fan [A] screen [S] great [C] display general [SSEP] [O] excellent [A] build quality [S] great [C] laptop quality', '[O] fan [A] screen [C] display general [S] great [SSEP] [O] excellent [A] build quality [C] laptop quality [S] great']

task, data: acos laptop16
target: [('laptop price', 'c302', 'great', 'respectable'), ('os general', 'chrome os', 'great', 'best'), ('os general', 'chrome os', 'great', 'premium')]
output: ['[A] c302 [O] best [S] great [C] laptop price', '[A] c302 [O] respectable [S] great [C] laptop price', '[A] chrome os [O] premium [S] great [C] os operation_performance']
sent: ['and', 'even', 'with', 'all', 'of', 'the', 'new', 'competition', 'hitting', 'the', 'market', 'with', 'higher', 'price', 'points', ',', 'the', 'c302', 'still', 'offers', 'the', 'best', 'premium', 'chrome', 'os', 'experience', 'at', 'a', 'respectable', 'price', '.']
counter: {('laptop price', 'c302', 'great', 'best'): 5, ('os operation_performance', 'chrome os', 'great', 'premium'): 5, ('laptop price', 'c302', 'great', 'respectable'): 5}
output quads: ['[A] c302 [O] best [S] great [C] laptop price', '[A] chrome os [O] premium [S] great [C] os operation_performance', '[A] c302 [O] respectable [S] great [C] laptop price']
multi_path: ['[A] c302 [O] best [S] great [C] laptop price [SSEP] [A] chrome os [O] premium [S] great [C] os operation_performance [SSEP] [A] c302 [O] respectable [S] great [C] laptop price', '[A] c302 [S] great [O] best [C] laptop price [SSEP] [A] chrome os [S] great [O] premium [C] os operation_performance [SSEP] [A] c302 [S] great [O] respectable [C] laptop price', '[A] c302 [O] best [C] laptop price [S] great [SSEP] [A] chrome os [O] premium [C] os operation_performance [S] great [SSEP] [A] c302 [O] respectable [C] laptop price [S] great', '[O] best [A] c302 [S] great [C] laptop price [SSEP] [O] premium [A] chrome os [S] great [C] os operation_performance [SSEP] [O] respectable [A] c302 [S] great [C] laptop price', '[O] best [A] c302 [C] laptop price [S] great [SSEP] [O] premium [A] chrome os [C] os operation_performance [S] great [SSEP] [O] respectable [A] c302 [C] laptop price [S] great']

task, data: acos laptop16
target: [('mouse usability', 'mousepad', 'great', 'comfortable')]
output: ['[A] mousepad [O] comfortable [S] great [C] hardware usability']
sent: ['the', 'mousepad', 'feels', 'very', 'comfortable', 'to', 'use', '.']
counter: {('hardware usability', 'mousepad', 'great', 'comfortable'): 5}
output quads: ['[A] mousepad [O] comfortable [S] great [C] hardware usability']
multi_path: ['[A] mousepad [O] comfortable [S] great [C] hardware usability', '[A] mousepad [S] great [O] comfortable [C] hardware usability', '[A] mousepad [O] comfortable [C] hardware usability [S] great', '[O] comfortable [A] mousepad [S] great [C] hardware usability', '[O] comfortable [A] mousepad [C] hardware usability [S] great']

task, data: acos laptop16
target: [('battery operation_performance', 'battery performance', 'great', 'null')]
output: ['[A] battery performance [O] null [S] bad [C] battery general']
sent: ['the', 'battery', 'performance', 'is', 'all', 'it', "'", 's', 'cracked', 'up', 'to', 'be', '.']
counter: {('battery general', 'battery performance', 'bad', 'null'): 5}
output quads: ['[A] battery performance [O] null [S] bad [C] battery general']
multi_path: ['[A] battery performance [O] null [S] bad [C] battery general', '[A] battery performance [S] bad [O] null [C] battery general', '[A] battery performance [O] null [C] battery general [S] bad', '[O] null [A] battery performance [S] bad [C] battery general', '[O] null [A] battery performance [C] battery general [S] bad']

task, data: acos laptop16
target: [('multimedia_devices operation_performance', 'sound', 'bad', 'loud'), ('multimedia_devices operation_performance', 'sound', 'bad', 'rich')]
output: ['[A] sound [O] loud [S] great [C] multimedia_devices quality', '[A] sound [O] rich [S] great [C] multimedia_devices quality']
sent: ['the', 'sound', 'is', 'rich', 'and', 'plenty', 'loud', 'enough', ',', 'but', 'it', 'won', "'", 't', 'replace', 'your', 'music', 'system', '.']
counter: {('multimedia_devices quality', 'sound', 'great', 'rich'): 3, ('multimedia_devices quality', 'sound', 'great', 'loud'): 3, ('multimedia_devices operation_performance', 'sound', 'great', 'rich'): 2, ('multimedia_devices operation_performance', 'sound', 'great', 'loud'): 2}
output quads: ['[A] sound [O] rich [S] great [C] multimedia_devices quality', '[A] sound [O] loud [S] great [C] multimedia_devices quality']
multi_path: ['[A] sound [O] rich [S] great [C] multimedia_devices quality [SSEP] [A] sound [O] loud [S] great [C] multimedia_devices quality', '[A] sound [S] great [O] rich [C] multimedia_devices operation_performance [SSEP] [A] sound [S] great [O] loud [C] multimedia_devices operation_performance', '[A] sound [O] rich [C] multimedia_devices operation_performance [S] great [SSEP] [A] sound [O] loud [C] multimedia_devices operation_performance [S] great', '[O] rich [A] sound [S] great [C] multimedia_devices quality [SSEP] [O] loud [A] sound [S] great [C] multimedia_devices quality', '[O] rich [A] sound [C] multimedia_devices quality [S] great [SSEP] [O] loud [A] sound [C] multimedia_devices quality [S] great']

task, data: acos laptop16
target: [('keyboard design_features', 'backlit', 'great', 'comfortably'), ('keyboard design_features', 'keyboard', 'great', 'comfortably')]
output: ['[A] backlit [O] comfortably [S] great [C] keyboard usability']
sent: ['backlit', 'allow', 'even', 'guys', 'with', 'large', 'hands', 'to', 'use', 'this', 'keyboard', 'comfortably', 'in', 'any', 'lighting', '.']
counter: {('keyboard usability', 'backlit', 'great', 'comfortably'): 3, ('keyboard design_features', 'backlit', 'great', 'comfortably'): 2}
output quads: ['[A] backlit [O] comfortably [S] great [C] keyboard usability']
multi_path: ['[A] backlit [O] comfortably [S] great [C] keyboard usability', '[A] backlit [S] great [O] comfortably [C] keyboard usability', '[A] backlit [O] comfortably [C] keyboard usability [S] great', '[O] comfortably [A] backlit [S] great [C] keyboard design_features', '[O] comfortably [A] backlit [C] keyboard design_features [S] great']

task, data: acos laptop16
target: [('display general', 'touchscreen', 'great', 'excellent'), ('keyboard general', 'trackpad', 'great', 'excellent')]
output: ['[A] touchscreen [O] excellent [S] great [C] keyboard general', '[A] trackpad [O] excellent [S] great [C] keyboard general']
sent: ['the', 'trackpad', 'and', 'touchscreen', 'are', 'both', 'excellent', '.']
counter: {('keyboard general', 'trackpad', 'great', 'excellent'): 5, ('keyboard general', 'touchscreen', 'great', 'excellent'): 5}
output quads: ['[A] trackpad [O] excellent [S] great [C] keyboard general', '[A] touchscreen [O] excellent [S] great [C] keyboard general']
multi_path: ['[A] trackpad [O] excellent [S] great [C] keyboard general [SSEP] [A] touchscreen [O] excellent [S] great [C] keyboard general', '[A] trackpad [S] great [O] excellent [C] keyboard general [SSEP] [A] touchscreen [S] great [O] excellent [C] keyboard general', '[A] trackpad [O] excellent [C] keyboard general [S] great [SSEP] [A] touchscreen [O] excellent [C] keyboard general [S] great', '[O] excellent [A] trackpad [S] great [C] keyboard general [SSEP] [O] excellent [A] touchscreen [S] great [C] keyboard general', '[O] excellent [A] trackpad [C] keyboard general [S] great [SSEP] [O] excellent [A] touchscreen [C] keyboard general [S] great']

task, data: acos laptop16
target: [('laptop general', 'chromebook', 'great', 'love'), ('laptop general', 'chromebook', 'great', 'perfect')]
output: ['[A] chromebook [O] large [S] great [C] laptop operation_performance', '[A] chromebook [O] love [S] great [C] laptop general', '[A] chromebook [O] perfect [S] great [C] laptop operation_performance']
sent: ['i', 'really', 'do', 'love', 'this', 'chromebook', 'because', 'it', 'provides', 'a', 'large', 'amount', 'of', 'utility', 'and', 'is', 'perfect', 'for', 'a', 'university', 'setting', 'and', 'environment', '.']
counter: {('laptop general', 'chromebook', 'great', 'love'): 5, ('laptop operation_performance', 'chromebook', 'great', 'large'): 5, ('laptop operation_performance', 'chromebook', 'great', 'perfect'): 5}
output quads: ['[A] chromebook [O] love [S] great [C] laptop general', '[A] chromebook [O] large [S] great [C] laptop operation_performance', '[A] chromebook [O] perfect [S] great [C] laptop operation_performance']
multi_path: ['[A] chromebook [O] love [S] great [C] laptop general [SSEP] [A] chromebook [O] large [S] great [C] laptop operation_performance [SSEP] [A] chromebook [O] perfect [S] great [C] laptop operation_performance', '[A] chromebook [S] great [O] love [C] laptop general [SSEP] [A] chromebook [S] great [O] large [C] laptop operation_performance [SSEP] [A] chromebook [S] great [O] perfect [C] laptop operation_performance', '[A] chromebook [O] love [C] laptop general [S] great [SSEP] [A] chromebook [O] large [C] laptop operation_performance [S] great [SSEP] [A] chromebook [O] perfect [C] laptop operation_performance [S] great', '[O] love [A] chromebook [S] great [C] laptop general [SSEP] [O] large [A] chromebook [S] great [C] laptop operation_performance [SSEP] [O] perfect [A] chromebook [S] great [C] laptop operation_performance', '[O] love [A] chromebook [C] laptop general [S] great [SSEP] [O] large [A] chromebook [C] laptop operation_performance [S] great [SSEP] [O] perfect [A] chromebook [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('multimedia_devices operation_performance', 'null', 'great', 'good'), ('multimedia_devices operation_performance', 'speakers', 'great', 'good')]
output: ['[A] speakers [O] good [S] great [C] multimedia_devices general', '[A] speakers [O] not the loudest [S] great [C] multimedia_devices general']
sent: ['speaker', ':', 'good', 'speakers', 'but', 'not', 'the', 'loudest', '.']
counter: {('multimedia_devices general', 'speakers', 'great', 'good'): 5, ('multimedia_devices general', 'speakers', 'great', 'not the loudest'): 3, ('multimedia_devices general', 'speakers', 'ok', 'not the loudest'): 2}
output quads: ['[A] speakers [O] good [S] great [C] multimedia_devices general', '[A] speakers [O] not the loudest [S] great [C] multimedia_devices general']
multi_path: ['[A] speakers [O] good [S] great [C] multimedia_devices general [SSEP] [A] speakers [O] not the loudest [S] great [C] multimedia_devices general', '[A] speakers [S] great [O] good [C] multimedia_devices general [SSEP] [A] speakers [S] great [O] not the loudest [C] multimedia_devices general', '[A] speakers [O] good [C] multimedia_devices general [S] great [SSEP] [A] speakers [O] not the loudest [C] multimedia_devices general [S] ok', '[O] good [A] speakers [S] great [C] multimedia_devices general [SSEP] [O] not the loudest [A] speakers [S] great [C] multimedia_devices general', '[O] good [A] speakers [C] multimedia_devices general [S] great [SSEP] [O] not the loudest [A] speakers [C] multimedia_devices general [S] ok']

task, data: acos laptop16
target: [('laptop design_features', 'device', 'great', 'clean'), ('laptop design_features', 'device', 'great', 'pleasure'), ('laptop design_features', 'device', 'great', 'sturdy')]
output: ['[A] device [O] clean [S] great [C] laptop design_features', '[A] device [O] pleasure [S] great [C] laptop usability', '[A] device [O] sturdy [S] great [C] laptop design_features']
sent: ['the', 'device', 'is', 'so', 'sturdy', 'and', 'clean', 'looking', 'it', 'is', 'a', 'pleasure', 'to', 'hold', 'in', 'my', 'hands', '.']
counter: {('laptop design_features', 'device', 'great', 'sturdy'): 5, ('laptop design_features', 'device', 'great', 'clean looking'): 2, ('laptop usability', 'device', 'great', 'pleasure'): 5, ('laptop design_features', 'device', 'great', 'clean'): 3}
output quads: ['[A] device [O] sturdy [S] great [C] laptop design_features', '[A] device [O] pleasure [S] great [C] laptop usability', '[A] device [O] clean [S] great [C] laptop design_features']
multi_path: ['[A] device [O] sturdy [S] great [C] laptop design_features [SSEP] [A] device [O] clean looking [S] great [C] laptop design_features [SSEP] [A] device [O] pleasure [S] great [C] laptop usability', '[A] device [S] great [O] sturdy [C] laptop design_features [SSEP] [A] device [S] great [O] clean [C] laptop design_features [SSEP] [A] device [S] great [O] pleasure [C] laptop usability', '[A] device [O] sturdy [C] laptop design_features [S] great [SSEP] [A] device [O] clean looking [C] laptop design_features [S] great [SSEP] [A] device [O] pleasure [C] laptop usability [S] great', '[O] sturdy [A] device [S] great [C] laptop design_features [SSEP] [O] clean [A] device [S] great [C] laptop design_features [SSEP] [O] pleasure [A] device [S] great [C] laptop usability', '[O] sturdy [A] device [C] laptop design_features [S] great [SSEP] [O] clean [A] device [C] laptop design_features [S] great [SSEP] [O] pleasure [A] device [C] laptop usability [S] great']

task, data: acos laptop16
target: [('battery operation_performance', 'battery life', 'bad', 'null')]
output: ['[A] battery life [O] null [S] ok [C] battery operation_performance']
sent: ['the', 'battery', 'life', 'is', 'touted', 'as', '10', 'hours', 'but', 'i', 'find', 'that', '7', '.']
counter: {('battery operation_performance', 'battery life', 'ok', 'null'): 5}
output quads: ['[A] battery life [O] null [S] ok [C] battery operation_performance']
multi_path: ['[A] battery life [O] null [S] ok [C] battery operation_performance', '[A] battery life [S] ok [O] null [C] battery operation_performance', '[A] battery life [O] null [C] battery operation_performance [S] ok', '[O] null [A] battery life [S] ok [C] battery operation_performance', '[O] null [A] battery life [C] battery operation_performance [S] ok']

task, data: acos laptop16
target: [('battery operation_performance', 'battery charge', 'great', 'null')]
output: ['[A] battery [O] null [S] great [C] battery operation_performance']
sent: ['-', 'single', 'battery', 'charge', 'can', 'last', '13', '-', '9', 'hours', 'depending', 'on', 'wifi', '/', 'video', '/', 'app', 'demand']
counter: {('battery operation_performance', 'battery', 'great', 'null'): 5}
output quads: ['[A] battery [O] null [S] great [C] battery operation_performance']
multi_path: ['[A] battery [O] null [S] great [C] battery operation_performance', '[A] battery [S] great [O] null [C] battery operation_performance', '[A] battery [O] null [C] battery operation_performance [S] great', '[O] null [A] battery [S] great [C] battery operation_performance', '[O] null [A] battery [C] battery operation_performance [S] great']

task, data: acos laptop16
target: [('software operation_performance', 'android apps', 'great', 'null')]
output: ['[A] android apps [O] null [S] great [C] software operation_performance', '[A] touchscreen [O] well [S] great [C] display operation_performance']
sent: ['the', 'touchscreen', 'works', 'very', 'well', ',', 'and', 'android', 'apps', 'are', 'working', 'right', 'now', 'if', 'you', "'", 're', 'on', 'the', 'beta', 'channel', 'for', 'chrome', 'os', '.']
counter: {('display operation_performance', 'touchscreen', 'great', 'well'): 5, ('software operation_performance', 'android apps', 'great', 'null'): 5}
output quads: ['[A] touchscreen [O] well [S] great [C] display operation_performance', '[A] android apps [O] null [S] great [C] software operation_performance']
multi_path: ['[A] touchscreen [O] well [S] great [C] display operation_performance [SSEP] [A] android apps [O] null [S] great [C] software operation_performance', '[A] touchscreen [S] great [O] well [C] display operation_performance [SSEP] [A] android apps [S] great [O] null [C] software operation_performance', '[A] touchscreen [O] well [C] display operation_performance [S] great [SSEP] [A] android apps [O] null [C] software operation_performance [S] great', '[O] well [A] touchscreen [S] great [C] display operation_performance [SSEP] [O] null [A] android apps [S] great [C] software operation_performance', '[O] well [A] touchscreen [C] display operation_performance [S] great [SSEP] [O] null [A] android apps [C] software operation_performance [S] great']

task, data: acos laptop16
target: [('laptop design_features', 'edges of the bezel', 'bad', 'sharp')]
output: ['[A] bezel [O] not especially comfortable [S] bad [C] laptop usability', '[A] device [O] drawback [S] bad [C] laptop usability']
sent: ['the', 'only', 'drawback', 'to', 'the', 'device', 'so', 'far', 'is', 'that', 'it', "'", 's', 'not', 'especially', 'comfortable', 'to', 'use', 'in', 'tablet', 'mode', ';', 'the', 'edges', 'of', 'the', 'bezel', 'are', 'little', 'too', '`', '`', 'sharp', '`', '`', 'to', 'comfortably', 'rest', 'your', 'palms', 'and', 'at', '2', '.']
counter: {('laptop usability', 'device', 'bad', 'drawback'): 5, ('laptop usability', 'bezel', 'bad', 'not especially comfortable'): 3, ('laptop usability', 'tablet mode', 'bad', 'not especially comfortable'): 2, ('laptop design_features', 'edges of the bezel', 'bad', 'sharp'): 2}
output quads: ['[A] device [O] drawback [S] bad [C] laptop usability', '[A] bezel [O] not especially comfortable [S] bad [C] laptop usability']
multi_path: ['[A] device [O] drawback [S] bad [C] laptop usability [SSEP] [A] bezel [O] not especially comfortable [S] bad [C] laptop usability', '[A] device [S] bad [O] drawback [C] laptop usability [SSEP] [A] bezel [S] bad [O] not especially comfortable [C] laptop usability', '[A] device [O] drawback [C] laptop usability [S] bad [SSEP] [A] bezel [O] not especially comfortable [C] laptop usability [S] bad', '[O] drawback [A] device [S] bad [C] laptop usability [SSEP] [O] not especially comfortable [A] tablet mode [S] bad [C] laptop usability [SSEP] [O] sharp [A] edges of the bezel [S] bad [C] laptop design_features', '[O] drawback [A] device [C] laptop usability [S] bad [SSEP] [O] not especially comfortable [A] tablet mode [C] laptop usability [S] bad [SSEP] [O] sharp [A] edges of the bezel [C] laptop design_features [S] bad']

task, data: acos laptop16
target: [('keyboard general', 'keyboard', 'great', 'praised'), ('keyboard general', 'keyboard', 'ok', 't find it particularly spectacular')]
output: ['[A] keyboard [O] praised [S] great [C] keyboard general', '[A] keyboard [O] t find it particularly spectacular [S] bad [C] keyboard general']
sent: ['the', 'keyboard', 'is', 'often', '-', 'praised', ',', 'but', 'i', 'don', "'", 't', 'find', 'it', 'particularly', 'spectacular', '.']
counter: {('keyboard general', 'keyboard', 'great', 'praised'): 5, ('keyboard general', 'keyboard', 'bad', 't find it particularly spectacular'): 4, ('keyboard general', 'keyboard', 'ok', 't find it particularly spectacular'): 1}
output quads: ['[A] keyboard [O] praised [S] great [C] keyboard general', '[A] keyboard [O] t find it particularly spectacular [S] bad [C] keyboard general']
multi_path: ["[A] keyboard [O] praised [S] great [C] keyboard general [SSEP] [A] keyboard [O]'t find it particularly spectacular [S] bad [C] keyboard general", "[A] keyboard [S] great [O] praised [C] keyboard general [SSEP] [A] keyboard [S] ok [O]'t find it particularly spectacular [C] keyboard general", "[A] keyboard [O] praised [C] keyboard general [S] great [SSEP] [A] keyboard [O]'t find it particularly spectacular [C] keyboard general [S] bad", "[O] praised [A] keyboard [S] great [C] keyboard general [SSEP] [O]'t find it particularly spectacular [A] keyboard [S] bad [C] keyboard general", "[O] praised [A] keyboard [C] keyboard general [S] great [SSEP] [O]'t find it particularly spectacular [A] keyboard [C] keyboard general [S] bad"]

task, data: acos laptop16
target: [('battery general', 'battery life', 'ok', 'null')]
output: ['[A] battery life [O] null [S] great [C] battery general']
sent: ['the', 'battery', 'life', 'seems', 'just', 'as', 'promised', '.']
counter: {('battery general', 'battery life', 'great', 'null'): 5}
output quads: ['[A] battery life [O] null [S] great [C] battery general']
multi_path: ['[A] battery life [O] null [S] great [C] battery general', '[A] battery life [S] great [O] null [C] battery general', '[A] battery life [O] null [C] battery general [S] great', '[O] null [A] battery life [S] great [C] battery general', '[O] null [A] battery life [C] battery general [S] great']

task, data: acos laptop16
target: [('display design_features', 'screen', 'great', 'bright'), ('display design_features', 'screen', 'great', 'clear'), ('os operation_performance', 'system', 'great', 'null')]
output: ['[A] screen [O] bright [S] great [C] display quality', '[A] screen [O] clear [S] great [C] display quality', '[A] system [O] null [S] great [C] os operation_performance']
sent: ['the', 'screen', 'is', 'clear', 'and', 'bright', 'and', 'the', 'system', 'doesn', "'", 't', 'lag', 'unless', 'i', 'have', 'a', 'large', 'number', 'of', 'tabs', 'open', '.']
counter: {('display quality', 'screen', 'great', 'clear'): 5, ('display quality', 'screen', 'great', 'bright'): 5, ('os operation_performance', 'system', 'great', 'null'): 5}
output quads: ['[A] screen [O] clear [S] great [C] display quality', '[A] screen [O] bright [S] great [C] display quality', '[A] system [O] null [S] great [C] os operation_performance']
multi_path: ['[A] screen [O] clear [S] great [C] display quality [SSEP] [A] screen [O] bright [S] great [C] display quality [SSEP] [A] system [O] null [S] great [C] os operation_performance', '[A] screen [S] great [O] clear [C] display quality [SSEP] [A] screen [S] great [O] bright [C] display quality [SSEP] [A] system [S] great [O] null [C] os operation_performance', '[A] screen [O] clear [C] display quality [S] great [SSEP] [A] screen [O] bright [C] display quality [S] great [SSEP] [A] system [O] null [C] os operation_performance [S] great', '[O] clear [A] screen [S] great [C] display quality [SSEP] [O] bright [A] screen [S] great [C] display quality [SSEP] [O] null [A] system [S] great [C] os operation_performance', '[O] clear [A] screen [C] display quality [S] great [SSEP] [O] bright [A] screen [C] display quality [S] great [SSEP] [O] null [A] system [C] os operation_performance [S] great']

task, data: acos laptop16
target: [('battery operation_performance', 'battery', 'great', 'incredibly'), ('battery operation_performance', 'battery', 'great', 'long')]
output: ['[A] battery [O] long [S] great [C] battery operation_performance']
sent: ['battery', 'last', 'incredibly', 'long', '.']
counter: {('battery operation_performance', 'battery', 'great', 'long'): 5}
output quads: ['[A] battery [O] long [S] great [C] battery operation_performance']
multi_path: ['[A] battery [O] long [S] great [C] battery operation_performance', '[A] battery [S] great [O] long [C] battery operation_performance', '[A] battery [O] long [C] battery operation_performance [S] great', '[O] long [A] battery [S] great [C] battery operation_performance', '[O] long [A] battery [C] battery operation_performance [S] great']

task, data: acos laptop16
target: [('laptop general', 'computer', 'great', 'null')]
output: ['[A] computer [O] null [S] ok [C] laptop general']
sent: ['i', 'now', 'feel', 'like', 'this', 'could', 'be', 'my', 'main', 'computer', 'for', 'work', 'and', 'fun', '.']
counter: {('laptop general', 'computer', 'ok', 'null'): 5}
output quads: ['[A] computer [O] null [S] ok [C] laptop general']
multi_path: ['[A] computer [O] null [S] ok [C] laptop general', '[A] computer [S] ok [O] null [C] laptop general', '[A] computer [O] null [C] laptop general [S] ok', '[O] null [A] computer [S] ok [C] laptop general', '[O] null [A] computer [C] laptop general [S] ok']

task, data: acos laptop16
target: [('battery general', 'battery life', 'great', 'good'), ('keyboard operation_performance', 'keyboard', 'great', 'great')]
output: ['[A] battery life [O] good [S] great [C] battery operation_performance', '[A] keyboard experience [O] great [S] great [C] keyboard general']
sent: ['its', 'battery', 'life', 'is', 'quite', 'good', 'and', 'the', 'keyboard', 'experience', 'is', 'great', '.']
counter: {('battery operation_performance', 'battery life', 'great', 'good'): 5, ('keyboard general', 'keyboard experience', 'great', 'great'): 5}
output quads: ['[A] battery life [O] good [S] great [C] battery operation_performance', '[A] keyboard experience [O] great [S] great [C] keyboard general']
multi_path: ['[A] battery life [O] good [S] great [C] battery operation_performance [SSEP] [A] keyboard experience [O] great [S] great [C] keyboard general', '[A] battery life [S] great [O] good [C] battery operation_performance [SSEP] [A] keyboard experience [S] great [O] great [C] keyboard general', '[A] battery life [O] good [C] battery operation_performance [S] great [SSEP] [A] keyboard experience [O] great [C] keyboard general [S] great', '[O] good [A] battery life [S] great [C] battery operation_performance [SSEP] [O] great [A] keyboard experience [S] great [C] keyboard general', '[O] good [A] battery life [C] battery operation_performance [S] great [SSEP] [O] great [A] keyboard experience [C] keyboard general [S] great']

task, data: acos laptop16
target: [('ports general', 'plugs', 'ok', 'good and bad')]
output: ['[A] plugs [O] bad [S] great [C] power_supply general', '[A] plugs [O] good [S] great [C] power_supply general']
sent: ['the', 'plugs', 'are', 'good', 'and', 'bad', '.']
counter: {('power_supply general', 'plugs', 'great', 'good'): 5, ('power_supply general', 'plugs', 'great', 'bad'): 3, ('power_supply general', 'plugs', 'bad', 'bad'): 2}
output quads: ['[A] plugs [O] good [S] great [C] power_supply general', '[A] plugs [O] bad [S] great [C] power_supply general']
multi_path: ['[A] plugs [O] good [S] great [C] power_supply general [SSEP] [A] plugs [O] bad [S] great [C] power_supply general', '[A] plugs [S] great [O] good [C] power_supply general [SSEP] [A] plugs [S] great [O] bad [C] power_supply general', '[A] plugs [O] good [C] power_supply general [S] great [SSEP] [A] plugs [O] bad [C] power_supply general [S] bad', '[O] good [A] plugs [S] great [C] power_supply general [SSEP] [O] bad [A] plugs [S] great [C] power_supply general', '[O] good [A] plugs [C] power_supply general [S] great [SSEP] [O] bad [A] plugs [C] power_supply general [S] bad']

task, data: acos laptop16
target: [('multimedia_devices operation_performance', 'headphones', 'bad', 'horribly'), ('multimedia_devices operation_performance', 'headphones', 'bad', 'low'), ('multimedia_devices operation_performance', 'headphones', 'bad', 'unenjoyable')]
output: ['[A] headphones [O] horribly low [S] bad [C] multimedia_devices operation_performance', '[A] null [O] unenjoyable [S] bad [C] multimedia_devices operation_performance']
sent: ['i', 'plugged', 'in', 'regular', 'headphones', 'and', 'it', 'was', 'horribly', 'low', '-', 'very', 'unenjoyable', 'to', 'listen', 'to', 'music', 'this', 'way', '.']
counter: {('multimedia_devices operation_performance', 'headphones', 'bad', 'horribly low'): 5, ('multimedia_devices operation_performance', 'null', 'bad', 'unenjoyable'): 5}
output quads: ['[A] headphones [O] horribly low [S] bad [C] multimedia_devices operation_performance', '[A] null [O] unenjoyable [S] bad [C] multimedia_devices operation_performance']
multi_path: ['[A] headphones [O] horribly low [S] bad [C] multimedia_devices operation_performance [SSEP] [A] it [O] unenjoyable [S] bad [C] multimedia_devices operation_performance', '[A] headphones [S] bad [O] horribly low [C] multimedia_devices operation_performance [SSEP] [A] it [S] bad [O] unenjoyable [C] multimedia_devices operation_performance', '[A] headphones [O] horribly low [C] multimedia_devices operation_performance [S] bad [SSEP] [A] it [O] unenjoyable [C] multimedia_devices operation_performance [S] bad', '[O] horribly low [A] headphones [S] bad [C] multimedia_devices operation_performance [SSEP] [O] unenjoyable [A] it [S] bad [C] multimedia_devices operation_performance', '[O] horribly low [A] headphones [C] multimedia_devices operation_performance [S] bad [SSEP] [O] unenjoyable [A] it [C] multimedia_devices operation_performance [S] bad']

task, data: acos laptop16
target: [('keyboard design_features', 'keyboard', 'great', 'nice'), ('laptop design_features', 'tablet', 'great', 'great')]
output: ['[A] keyboard [O] nice [S] great [C] keyboard design_features', '[A] tablet [O] great [S] great [C] laptop operation_performance']
sent: ['nice', 'sized', 'keyboard', ',', 'works', 'great', 'as', 'a', 'tablet', '(', 'even', 'shuts', 'off', 'the', 'keyboard', 'in', 'tablet', 'mode', ')', '.']
counter: {('keyboard design_features', 'keyboard', 'great', 'nice'): 5, ('laptop operation_performance', 'tablet', 'great', 'great'): 5}
output quads: ['[A] keyboard [O] nice [S] great [C] keyboard design_features', '[A] tablet [O] great [S] great [C] laptop operation_performance']
multi_path: ['[A] keyboard [O] nice [S] great [C] keyboard design_features [SSEP] [A] tablet [O] great [S] great [C] laptop operation_performance', '[A] keyboard [S] great [O] nice [C] keyboard design_features [SSEP] [A] tablet [S] great [O] great [C] laptop operation_performance', '[A] keyboard [O] nice [C] keyboard design_features [S] great [SSEP] [A] tablet [O] great [C] laptop operation_performance [S] great', '[O] nice [A] keyboard [S] great [C] keyboard design_features [SSEP] [O] great [A] tablet [S] great [C] laptop operation_performance', '[O] nice [A] keyboard [C] keyboard design_features [S] great [SSEP] [O] great [A] tablet [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('laptop design_features', 'size', 'great', 'bright'), ('laptop design_features', 'size', 'great', 'nice'), ('laptop design_features', 'size', 'great', 'perfect')]
output: ['[A] null [O] bright [S] great [C] laptop design_features', '[A] null [O] nice [S] great [C] laptop design_features', '[A] null [O] perfect [S] great [C] laptop design_features']
sent: ['perfect', 'size', 'to', 'use', 'in', 'bed', 'and', 'nice', 'and', 'bright', '.']
counter: {('laptop design_features', 'null', 'great', 'perfect'): 5, ('laptop design_features', 'null', 'great', 'nice'): 5, ('laptop design_features', 'null', 'great', 'bright'): 5}
output quads: ['[A] null [O] perfect [S] great [C] laptop design_features', '[A] null [O] nice [S] great [C] laptop design_features', '[A] null [O] bright [S] great [C] laptop design_features']
multi_path: ['[A] it [O] perfect [S] great [C] laptop design_features [SSEP] [A] it [O] nice [S] great [C] laptop design_features [SSEP] [A] it [O] bright [S] great [C] laptop design_features', '[A] it [S] great [O] perfect [C] laptop design_features [SSEP] [A] it [S] great [O] nice [C] laptop design_features [SSEP] [A] it [S] great [O] bright [C] laptop design_features', '[A] it [O] perfect [C] laptop design_features [S] great [SSEP] [A] it [O] nice [C] laptop design_features [S] great [SSEP] [A] it [O] bright [C] laptop design_features [S] great', '[O] perfect [A] it [S] great [C] laptop design_features [SSEP] [O] nice [A] it [S] great [C] laptop design_features [SSEP] [O] bright [A] it [S] great [C] laptop design_features', '[O] perfect [A] it [C] laptop design_features [S] great [SSEP] [O] nice [A] it [C] laptop design_features [S] great [SSEP] [O] bright [A] it [C] laptop design_features [S] great']

task, data: acos laptop16
target: [('laptop price', 'laptop', 'great', "t think you'll find a better")]
output: ['[A] laptop [O] null [S] bad [C] laptop price']
sent: ['i', 'don', "'", 't', 'think', 'you', "'", 'll', 'find', 'a', 'better', 'laptop', 'at', 'this', 'price', 'point', '.']
counter: {('laptop price', 'laptop', 'bad', 'null'): 5}
output quads: ['[A] laptop [O] null [S] bad [C] laptop price']
multi_path: ['[A] laptop [O] null [S] bad [C] laptop price', '[A] laptop [S] bad [O] null [C] laptop price', '[A] laptop [O] null [C] laptop price [S] bad', '[O] null [A] laptop [S] bad [C] laptop price', '[O] null [A] laptop [C] laptop price [S] bad']

task, data: acos laptop16
target: [('laptop general', 'asus c302', 'great', 'null')]
output: ['[A] asus c302 [O] t recommend [S] bad [C] laptop general']
sent: ['i', 'can', "'", 't', 'recommend', 'the', 'asus', 'c302', 'enough', '.']
counter: {('laptop general', 'asus c302', 'bad', 't recommend'): 5}
output quads: ['[A] asus c302 [O] t recommend [S] bad [C] laptop general']
multi_path: ["[A] asus c302 [O]'t recommend [S] bad [C] laptop general", "[A] asus c302 [S] bad [O]'t recommend [C] laptop general", "[A] asus c302 [O]'t recommend [C] laptop general [S] bad", "[O]'t recommend [A] asus c302 [S] bad [C] laptop general", "[O]'t recommend [A] asus c302 [C] laptop general [S] bad"]

task, data: acos laptop16
target: [('laptop operation_performance', 'null', 'great', 'handy')]
output: ['[A] null [O] handy [S] great [C] laptop usability', '[A] null [O] null [S] great [C] laptop operation_performance']
sent: ['but', ',', 'it', 'does', 'work', 'and', 'is', 'handy', '.']
counter: {('laptop operation_performance', 'null', 'great', 'null'): 5, ('laptop usability', 'null', 'great', 'handy'): 4, ('laptop portability', 'null', 'great', 'handy'): 1}
output quads: ['[A] null [O] null [S] great [C] laptop operation_performance', '[A] null [O] handy [S] great [C] laptop usability']
multi_path: ['[A] it [O] null [S] great [C] laptop operation_performance [SSEP] [A] it [O] handy [S] great [C] laptop usability', '[A] it [S] great [O] null [C] laptop operation_performance [SSEP] [A] it [S] great [O] handy [C] laptop usability', '[A] it [O] null [C] laptop operation_performance [S] great [SSEP] [A] it [O] handy [C] laptop usability [S] great', '[O] null [A] it [S] great [C] laptop operation_performance [SSEP] [O] handy [A] it [S] great [C] laptop portability', '[O] null [A] it [C] laptop operation_performance [S] great [SSEP] [O] handy [A] it [C] laptop usability [S] great']

task, data: acos laptop16
target: [('laptop design_features', 'null', 'great', 'light'), ('laptop usability', 'null', 'great', 'comfortable')]
output: ['[A] couch [O] comfortable [S] great [C] laptop usability', '[A] null [O] light [S] great [C] laptop design_features']
sent: ['it', "'", 's', 'very', 'light', 'and', 'sitting', 'on', 'the', 'couch', 'typing', 'this', 'is', 'comfortable', '.']
counter: {('laptop design_features', 'null', 'great', 'light'): 5, ('laptop usability', 'couch', 'great', 'comfortable'): 5}
output quads: ['[A] null [O] light [S] great [C] laptop design_features', '[A] couch [O] comfortable [S] great [C] laptop usability']
multi_path: ['[A] it [O] light [S] great [C] laptop design_features [SSEP] [A] couch [O] comfortable [S] great [C] laptop usability', '[A] it [S] great [O] light [C] laptop design_features [SSEP] [A] couch [S] great [O] comfortable [C] laptop usability', '[A] it [O] light [C] laptop design_features [S] great [SSEP] [A] couch [O] comfortable [C] laptop usability [S] great', '[O] light [A] it [S] great [C] laptop design_features [SSEP] [O] comfortable [A] couch [S] great [C] laptop usability', '[O] light [A] it [C] laptop design_features [S] great [SSEP] [O] comfortable [A] couch [C] laptop usability [S] great']

task, data: acos laptop16
target: [('multimedia_devices operation_performance', 'aux speaker / headphone', 'bad', 'low'), ('multimedia_devices operation_performance', 'sound', 'bad', 'low')]
output: ['[A] sound [O] low [S] bad [C] multimedia_devices operation_performance']
sent: ['sound', 'is', 'really', 'low', 'while', 'using', 'an', 'aux', 'speaker', '/', 'headphone', '.']
counter: {('multimedia_devices operation_performance', 'sound', 'bad', 'low'): 5}
output quads: ['[A] sound [O] low [S] bad [C] multimedia_devices operation_performance']
multi_path: ['[A] sound [O] low [S] bad [C] multimedia_devices operation_performance', '[A] sound [S] bad [O] low [C] multimedia_devices operation_performance', '[A] sound [O] low [C] multimedia_devices operation_performance [S] bad', '[O] low [A] sound [S] bad [C] multimedia_devices operation_performance', '[O] low [A] sound [C] multimedia_devices operation_performance [S] bad']

task, data: acos laptop16
target: [('keyboard operation_performance', 'spacebar', 'bad', 'null')]
output: ['[A] spacebar [O] null [S] bad [C] keyboard design_features']
sent: ['spacebar', 'doesn', "'", 't', 'always', 'accept', 'input']
counter: {('keyboard design_features', 'spacebar', 'bad', 'null'): 5}
output quads: ['[A] spacebar [O] null [S] bad [C] keyboard design_features']
multi_path: ['[A] spacebar [O] null [S] bad [C] keyboard design_features', '[A] spacebar [S] bad [O] null [C] keyboard design_features', '[A] spacebar [O] null [C] keyboard design_features [S] bad', '[O] null [A] spacebar [S] bad [C] keyboard design_features', '[O] null [A] spacebar [C] keyboard design_features [S] bad']

task, data: acos laptop16
target: [('laptop general', 'purchase', 'great', 'satisfied')]
output: ['[A] null [O] satisfied [S] great [C] laptop general']
sent: ['i', "'", 've', 'just', 'gotten', 'started', 'so', 'this', 'review', 'may', 'evolve', 'over', 'time', 'but', 'after', 'several', 'days', 'i', "'", 'm', 'insanely', 'satisfied', 'with', 'this', 'purchase', 'and', 'am', 'going', 'to', 'be', 'showing', 'off', 'to', 'my', 'friends', 'for', 'the', 'foreseeable', 'future', '.']
counter: {('laptop general', 'null', 'great', 'satisfied'): 5}
output quads: ['[A] null [O] satisfied [S] great [C] laptop general']
multi_path: ['[A] it [O] satisfied [S] great [C] laptop general', '[A] it [S] great [O] satisfied [C] laptop general', '[A] it [O] satisfied [C] laptop general [S] great', '[O] satisfied [A] it [S] great [C] laptop general', '[O] satisfied [A] it [C] laptop general [S] great']

task, data: acos laptop16
target: [('laptop design_features', 'asus chromebook flip 302ca', 'great', 'incredibly'), ('laptop design_features', 'asus chromebook flip 302ca', 'great', 'well'), ('laptop operation_performance', 'asus chromebook flip 302ca', 'great', 'fast'), ('laptop operation_performance', 'asus chromebook flip 302ca', 'great', 'smooth')]
output: ['[A] asus chromebook flip 302ca [O] fast [S] great [C] laptop operation_performance', '[A] asus chromebook flip 302ca [O] smooth [S] great [C] laptop operation_performance', '[A] asus chromebook flip 302ca [O] well [S] great [C] laptop design_features', '[A] built [O] well [S] great [C] laptop design_features']
sent: ['the', 'asus', 'chromebook', 'flip', '302ca', 'is', 'smooth', ',', 'fast', 'and', 'incredibly', 'well', 'engineered', 'and', 'built', '.']
counter: {('laptop operation_performance', 'asus chromebook flip 302ca', 'great', 'smooth'): 5, ('laptop operation_performance', 'asus chromebook flip 302ca', 'great', 'fast'): 5, ('laptop design_features', 'asus chromebook flip 302ca', 'great', 'well'): 3, ('laptop design_features', 'built', 'great', 'well'): 5, ('laptop design_features', 'engineered', 'great', 'well'): 2}
output quads: ['[A] asus chromebook flip 302ca [O] smooth [S] great [C] laptop operation_performance', '[A] asus chromebook flip 302ca [O] fast [S] great [C] laptop operation_performance', '[A] asus chromebook flip 302ca [O] well [S] great [C] laptop design_features', '[A] built [O] well [S] great [C] laptop design_features']
multi_path: ['[A] asus chromebook flip 302ca [O] smooth [S] great [C] laptop operation_performance [SSEP] [A] asus chromebook flip 302ca [O] fast [S] great [C] laptop operation_performance [SSEP] [A] asus chromebook flip 302ca [O] well [S] great [C] laptop design_features [SSEP] [A] built [O] well [S] great [C] laptop design_features', '[A] asus chromebook flip 302ca [S] great [O] smooth [C] laptop operation_performance [SSEP] [A] asus chromebook flip 302ca [S] great [O] fast [C] laptop operation_performance [SSEP] [A] asus chromebook flip 302ca [S] great [O] well [C] laptop design_features [SSEP] [A] built [S] great [O] well [C] laptop design_features', '[A] asus chromebook flip 302ca [O] smooth [C] laptop operation_performance [S] great [SSEP] [A] asus chromebook flip 302ca [O] fast [C] laptop operation_performance [S] great [SSEP] [A] asus chromebook flip 302ca [O] well [C] laptop design_features [S] great [SSEP] [A] built [O] well [C] laptop design_features [S] great', '[O] smooth [A] asus chromebook flip 302ca [S] great [C] laptop operation_performance [SSEP] [O] fast [A] asus chromebook flip 302ca [S] great [C] laptop operation_performance [SSEP] [O] well [A] engineered [S] great [C] laptop design_features [SSEP] [O] well [A] built [S] great [C] laptop design_features', '[O] smooth [A] asus chromebook flip 302ca [C] laptop operation_performance [S] great [SSEP] [O] fast [A] asus chromebook flip 302ca [C] laptop operation_performance [S] great [SSEP] [O] well [A] engineered [C] laptop design_features [S] great [SSEP] [O] well [A] built [C] laptop design_features [S] great']

task, data: acos laptop16
target: [('display general', 'screen resolution', 'great', 'great')]
output: ['[A] screen resolution [O] great [S] great [C] display design_features']
sent: ['the', 'screen', 'resolution', 'is', 'great', '.']
counter: {('display design_features', 'screen resolution', 'great', 'great'): 5}
output quads: ['[A] screen resolution [O] great [S] great [C] display design_features']
multi_path: ['[A] screen resolution [O] great [S] great [C] display design_features', '[A] screen resolution [S] great [O] great [C] display design_features', '[A] screen resolution [O] great [C] display design_features [S] great', '[O] great [A] screen resolution [S] great [C] display design_features', '[O] great [A] screen resolution [C] display design_features [S] great']

task, data: acos laptop16
target: [('display design_features', 'screen brightness', 'bad', 'null'), ('keyboard design_features', 'keyboard backlight', 'bad', 'null')]
output: ['[A] keyboard backlight [O] null [S] bad [C] keyboard operation_performance', '[A] screen brightness [O] null [S] bad [C] display operation_performance']
sent: ['my', 'only', 'gripe', 'is', 'that', 'i', 'wish', 'there', 'was', 'a', 'way', 'to', 'default', 'the', 'screen', 'brightness', 'as', 'well', 'as', 'default', 'the', 'keyboard', 'backlight', 'to', 'off', '.']
counter: {('display operation_performance', 'screen brightness', 'bad', 'null'): 5, ('keyboard operation_performance', 'keyboard backlight', 'bad', 'null'): 5}
output quads: ['[A] screen brightness [O] null [S] bad [C] display operation_performance', '[A] keyboard backlight [O] null [S] bad [C] keyboard operation_performance']
multi_path: ['[A] screen brightness [O] null [S] bad [C] display operation_performance [SSEP] [A] keyboard backlight [O] null [S] bad [C] keyboard operation_performance', '[A] screen brightness [S] bad [O] null [C] display operation_performance [SSEP] [A] keyboard backlight [S] bad [O] null [C] keyboard operation_performance', '[A] screen brightness [O] null [C] display operation_performance [S] bad [SSEP] [A] keyboard backlight [O] null [C] keyboard operation_performance [S] bad', '[O] null [A] screen brightness [S] bad [C] display operation_performance [SSEP] [O] null [A] keyboard backlight [S] bad [C] keyboard operation_performance', '[O] null [A] screen brightness [C] display operation_performance [S] bad [SSEP] [O] null [A] keyboard backlight [C] keyboard operation_performance [S] bad']

task, data: acos laptop16
target: [('laptop general', 'purchase', 'great', 'pleased'), ('laptop price', 'chromebook', 'great', 'worth')]
output: ['[A] chromebook [O] pleased [S] great [C] laptop general', '[A] chromebook [O] worth [S] great [C] laptop price']
sent: ['at', 'a', '$', '500', 'price', 'tag', 'for', 'a', 'chromebook', 'i', 'was', 'a', 'little', 'hesitant', 'to', 'pull', 'the', 'trigger', 'but', 'at', 'this', 'point', 'i', 'am', 'very', 'pleased', 'with', 'the', 'purchase', 'and', 'i', 'believe', 'it', 'is', 'worth', 'the', 'price', '.']
counter: {('laptop general', 'chromebook', 'great', 'pleased'): 5, ('laptop price', 'chromebook', 'great', 'worth'): 5}
output quads: ['[A] chromebook [O] pleased [S] great [C] laptop general', '[A] chromebook [O] worth [S] great [C] laptop price']
multi_path: ['[A] chromebook [O] pleased [S] great [C] laptop general [SSEP] [A] chromebook [O] worth [S] great [C] laptop price', '[A] chromebook [S] great [O] pleased [C] laptop general [SSEP] [A] chromebook [S] great [O] worth [C] laptop price', '[A] chromebook [O] pleased [C] laptop general [S] great [SSEP] [A] chromebook [O] worth [C] laptop price [S] great', '[O] pleased [A] chromebook [S] great [C] laptop general [SSEP] [O] worth [A] chromebook [S] great [C] laptop price', '[O] pleased [A] chromebook [C] laptop general [S] great [SSEP] [O] worth [A] chromebook [C] laptop price [S] great']

task, data: acos laptop16
target: [('display design_features', 'screen', 'great', 'sharp'), ('keyboard usability', 'keyboard', 'great', 'comfortable')]
output: ['[A] keyboard [O] comfortable [S] great [C] keyboard usability', '[A] screen [O] sharp [S] great [C] display usability']
sent: ['keyboard', 'is', 'comfortable', 'and', 'screen', 'is', 'sharp', '.']
counter: {('keyboard usability', 'keyboard', 'great', 'comfortable'): 5, ('display usability', 'screen', 'great', 'sharp'): 3, ('display design_features', 'screen', 'great', 'sharp'): 2}
output quads: ['[A] keyboard [O] comfortable [S] great [C] keyboard usability', '[A] screen [O] sharp [S] great [C] display usability']
multi_path: ['[A] keyboard [O] comfortable [S] great [C] keyboard usability [SSEP] [A] screen [O] sharp [S] great [C] display usability', '[A] keyboard [S] great [O] comfortable [C] keyboard usability [SSEP] [A] screen [S] great [O] sharp [C] display usability', '[A] keyboard [O] comfortable [C] keyboard usability [S] great [SSEP] [A] screen [O] sharp [C] display usability [S] great', '[O] comfortable [A] keyboard [S] great [C] keyboard usability [SSEP] [O] sharp [A] screen [S] great [C] display design_features', '[O] comfortable [A] keyboard [C] keyboard usability [S] great [SSEP] [O] sharp [A] screen [C] display design_features [S] great']

task, data: acos laptop16
target: [('battery operation_performance', 'battery', 'great', 'null'), ('laptop portability', 'null', 'great', 'portable')]
output: ['[A] battery [O] null [S] great [C] battery operation_performance']
sent: ['its', 'very', 'portable', 'and', 'battery', 'should', 'last', 'full', 'day', 'of', 'normal', 'usage', '.']
counter: {('battery operation_performance', 'battery', 'great', 'null'): 5, ('laptop portability', 'null', 'great', 'portable'): 2}
output quads: ['[A] battery [O] null [S] great [C] battery operation_performance']
multi_path: ['[A] battery [O] null [S] great [C] battery operation_performance', '[A] battery [S] great [O] null [C] battery operation_performance', '[A] battery [O] null [C] battery operation_performance [S] great', '[O] portable [A] it [S] great [C] laptop portability [SSEP] [O] null [A] battery [S] great [C] battery operation_performance', '[O] portable [A] it [C] laptop portability [S] great [SSEP] [O] null [A] battery [C] battery operation_performance [S] great']

task, data: acos laptop16
target: [('out_of_scope design_features', '360 flip', 'great', 'easy')]
output: ['[A] 360 flip feature [O] easy [S] great [C] laptop design_features', '[A] touch screen [O] accurate [S] great [C] display general']
sent: ['the', 'touch', 'screen', 'is', 'really', 'accurate', ',', 'and', 'the', '360', 'flip', 'feature', 'is', 'really', 'easy', '-', 'i', 'can', 'switch', 'to', 'tablet', 'mode', 'anytime', ',', 'although', 'i', 'use', 'this', 'much', 'more', 'often', 'as', 'a', 'laptop', '.']
counter: {('display general', 'touch screen', 'great', 'accurate'): 5, ('laptop design_features', '360 flip feature', 'great', 'easy'): 5}
output quads: ['[A] touch screen [O] accurate [S] great [C] display general', '[A] 360 flip feature [O] easy [S] great [C] laptop design_features']
multi_path: ['[A] touch screen [O] accurate [S] great [C] display general [SSEP] [A] 360 flip feature [O] easy [S] great [C] laptop design_features', '[A] touch screen [S] great [O] accurate [C] display general [SSEP] [A] 360 flip feature [S] great [O] easy [C] laptop design_features', '[A] touch screen [O] accurate [C] display general [S] great [SSEP] [A] 360 flip feature [O] easy [C] laptop design_features [S] great', '[O] accurate [A] touch screen [S] great [C] display general [SSEP] [O] easy [A] 360 flip feature [S] great [C] laptop design_features', '[O] accurate [A] touch screen [C] display general [S] great [SSEP] [O] easy [A] 360 flip feature [C] laptop design_features [S] great']

task, data: acos laptop16
target: [('laptop general', 'chromebook', 'great', 'null')]
output: ['[A] chromebook [O] cons [S] great [C] laptop general', '[A] chromebook [O] pros [S] great [C] laptop general']
sent: ['the', 'pros', 'definitely', 'outweigh', 'the', 'cons', ',', 'earning', 'this', 'chromebook', '5', 'stars', '.']
counter: {('laptop general', 'chromebook', 'great', 'pros'): 5, ('laptop general', 'chromebook', 'great', 'cons'): 5}
output quads: ['[A] chromebook [O] pros [S] great [C] laptop general', '[A] chromebook [O] cons [S] great [C] laptop general']
multi_path: ['[A] chromebook [O] pros [S] great [C] laptop general [SSEP] [A] chromebook [O] cons [S] great [C] laptop general', '[A] chromebook [S] great [O] pros [C] laptop general [SSEP] [A] chromebook [S] great [O] cons [C] laptop general', '[A] chromebook [O] pros [C] laptop general [S] great [SSEP] [A] chromebook [O] cons [C] laptop general [S] great', '[O] pros [A] chromebook [S] great [C] laptop general [SSEP] [O] cons [A] chromebook [S] great [C] laptop general', '[O] pros [A] chromebook [C] laptop general [S] great [SSEP] [O] cons [A] chromebook [C] laptop general [S] great']

task, data: acos laptop16
target: [('laptop general', 'computer', 'great', 'great'), ('laptop price', 'computer', 'great', 'great')]
output: ['[A] computer [O] great [S] great [C] laptop price']
sent: ['great', 'computer', ',', 'especially', 'for', 'the', 'price', '.']
counter: {('laptop price', 'computer', 'great', 'great'): 5}
output quads: ['[A] computer [O] great [S] great [C] laptop price']
multi_path: ['[A] computer [O] great [S] great [C] laptop price', '[A] computer [S] great [O] great [C] laptop price', '[A] computer [O] great [C] laptop price [S] great', '[O] great [A] computer [S] great [C] laptop price', '[O] great [A] computer [C] laptop price [S] great']

task, data: acos laptop16
target: [('ports general', 'usb - c', 'great', 'null')]
output: ['[A] usb - c [O] null [S] great [C] ports design_features']
sent: ['-', 'two', 'usb', '-', 'c', 'for', 'charging', '(', 'no', 'more', 'odd', 'angles', '!', ')']
counter: {('ports design_features', 'usb - c', 'great', 'null'): 5}
output quads: ['[A] usb - c [O] null [S] great [C] ports design_features']
multi_path: ['[A] usb - c [O] null [S] great [C] ports design_features', '[A] usb - c [S] great [O] null [C] ports design_features', '[A] usb - c [O] null [C] ports design_features [S] great', '[O] null [A] usb - c [S] great [C] ports design_features', '[O] null [A] usb - c [C] ports design_features [S] great']

task, data: acos laptop16
target: [('laptop general', 'null', 'great', 'perfect')]
output: ['[A] null [O] perfect [S] great [C] laptop usability']
sent: ['it', "'", 's', 'perfect', 'for', 'school', ',', 'surfing', 'the', 'web', ',', 'and', 'watching', 'videos', '.']
counter: {('laptop usability', 'null', 'great', 'perfect'): 5}
output quads: ['[A] null [O] perfect [S] great [C] laptop usability']
multi_path: ['[A] it [O] perfect [S] great [C] laptop usability', '[A] it [S] great [O] perfect [C] laptop usability', '[A] it [O] perfect [C] laptop usability [S] great', '[O] perfect [A] it [S] great [C] laptop usability', '[O] perfect [A] it [C] laptop usability [S] great']

task, data: acos laptop16
target: [('ports operation_performance', 'wifi connectivity', 'great', 'consistent'), ('ports operation_performance', 'wifi connectivity', 'great', 'strong')]
output: ['[A] wifi connectivity [O] consistent [S] great [C] ports connectivity', '[A] wifi connectivity [O] strong [S] great [C] ports connectivity']
sent: ['the', 'wifi', 'connectivity', 'is', 'strong', 'and', 'consistent', 'in', 'my', 'experience', '.']
counter: {('ports connectivity', 'wifi connectivity', 'great', 'strong'): 5, ('ports connectivity', 'wifi connectivity', 'great', 'consistent'): 5}
output quads: ['[A] wifi connectivity [O] strong [S] great [C] ports connectivity', '[A] wifi connectivity [O] consistent [S] great [C] ports connectivity']
multi_path: ['[A] wifi connectivity [O] strong [S] great [C] ports connectivity [SSEP] [A] wifi connectivity [O] consistent [S] great [C] ports connectivity', '[A] wifi connectivity [S] great [O] strong [C] ports connectivity [SSEP] [A] wifi connectivity [S] great [O] consistent [C] ports connectivity', '[A] wifi connectivity [O] strong [C] ports connectivity [S] great [SSEP] [A] wifi connectivity [O] consistent [C] ports connectivity [S] great', '[O] strong [A] wifi connectivity [S] great [C] ports connectivity [SSEP] [O] consistent [A] wifi connectivity [S] great [C] ports connectivity', '[O] strong [A] wifi connectivity [C] ports connectivity [S] great [SSEP] [O] consistent [A] wifi connectivity [C] ports connectivity [S] great']

task, data: acos laptop16
target: [('display operation_performance', 'screen', 'bad', 't bright'), ('display operation_performance', 'screen', 'bad', 't like'), ('multimedia_devices operation_performance', 'speakers', 'bad', 't louder')]
output: ['[A] screen [O] t like [S] bad [C] display design_features', '[A] speakers [O] t louder [S] bad [C] multimedia_devices design_features']
sent: ['the', 'only', 'thing', 'i', 'didn', "'", 't', 'like', 'is', 'the', 'screen', 'isn', "'", 't', 'bright', 'enough', 'and', 'the', 'speakers', 'aren', "'", 't', 'louder', '.']
counter: {('display design_features', 'screen', 'bad', 't like'): 4, ('multimedia_devices design_features', 'speakers', 'bad', 't louder'): 5, ('display design_features', 'screen', 'bad', 't bright'): 1}
output quads: ['[A] screen [O] t like [S] bad [C] display design_features', '[A] speakers [O] t louder [S] bad [C] multimedia_devices design_features']
multi_path: ["[A] screen [O]'t like [S] bad [C] display design_features [SSEP] [A] speakers [O]'t louder [S] bad [C] multimedia_devices design_features", "[A] screen [S] bad [O]'t like [C] display design_features [SSEP] [A] speakers [S] bad [O]'t louder [C] multimedia_devices design_features", "[A] screen [O]'t bright [C] display design_features [S] bad [SSEP] [A] speakers [O]'t louder [C] multimedia_devices design_features [S] bad", "[O]'t like [A] screen [S] bad [C] display design_features [SSEP] [O]'t louder [A] speakers [S] bad [C] multimedia_devices design_features", "[O]'t like [A] screen [C] display design_features [S] bad [SSEP] [O]'t louder [A] speakers [C] multimedia_devices design_features [S] bad"]

task, data: acos laptop16
target: [('laptop operation_performance', 'c302ca - dh54', 'great', 'null')]
output: ['[A] c302ca - dh54 [O] null [S] great [C] cpu operation_performance']
sent: ['c302ca', '-', 'dh54', 'gets', 'the', 'job', 'done', 'for', 'work', 'that', 'doesn', "'", 't', 'require', 'multiple', 'cores', 'for', 'rendering', ',', 'weight', 'painting', 'or', 'ripping', '.']
counter: {('cpu operation_performance', 'c302ca - dh54', 'great', 'null'): 3, ('laptop operation_performance', 'c302ca - dh54', 'great', 'null'): 2}
output quads: ['[A] c302ca - dh54 [O] null [S] great [C] cpu operation_performance']
multi_path: ['[A] c302ca - dh54 [O] null [S] great [C] cpu operation_performance', '[A] c302ca - dh54 [S] great [O] null [C] cpu operation_performance', '[A] c302ca - dh54 [O] null [C] cpu operation_performance [S] great', '[O] null [A] c302ca - dh54 [S] great [C] laptop operation_performance', '[O] null [A] c302ca - dh54 [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('laptop general', 'null', 'great', 'worth'), ('laptop price', 'null', 'bad', 'pricey')]
output: ['[A] chromebook [O] pricey [S] bad [C] laptop price', '[A] chromebook [O] worth [S] great [C] laptop general']
sent: ['it', "'", 's', 'a', 'bit', 'pricey', 'for', 'a', 'chromebook', 'but', 'worth', 'it', 'right', 'now', '.']
counter: {('laptop price', 'chromebook', 'bad', 'pricey'): 5, ('laptop general', 'chromebook', 'great', 'worth'): 5}
output quads: ['[A] chromebook [O] pricey [S] bad [C] laptop price', '[A] chromebook [O] worth [S] great [C] laptop general']
multi_path: ['[A] chromebook [O] pricey [S] bad [C] laptop price [SSEP] [A] chromebook [O] worth [S] great [C] laptop general', '[A] chromebook [S] bad [O] pricey [C] laptop price [SSEP] [A] chromebook [S] great [O] worth [C] laptop general', '[A] chromebook [O] pricey [C] laptop price [S] bad [SSEP] [A] chromebook [O] worth [C] laptop general [S] great', '[O] pricey [A] chromebook [S] bad [C] laptop price [SSEP] [O] worth [A] chromebook [S] great [C] laptop general', '[O] pricey [A] chromebook [C] laptop price [S] bad [SSEP] [O] worth [A] chromebook [C] laptop general [S] great']

task, data: acos laptop16
target: [('software operation_performance', 'microsoft office', 'bad', 'drawback')]
output: ['[A] null [O] drawback [S] bad [C] laptop usability']
sent: ['the', 'only', 'drawback', 'is', 'that', 'it', 'does', 'not', 'run', 'the', 'native', 'android', 'versions', 'of', 'microsoft', 'office', ',', 'and', 'they', 'should', 'warn', 'you', 'about', 'that', '.']
counter: {('laptop usability', 'null', 'bad', 'drawback'): 5}
output quads: ['[A] null [O] drawback [S] bad [C] laptop usability']
multi_path: ['[A] it [O] drawback [S] bad [C] laptop usability', '[A] it [S] bad [O] drawback [C] laptop usability', '[A] it [O] drawback [C] laptop usability [S] bad', '[O] drawback [A] it [S] bad [C] laptop usability', '[O] drawback [A] it [C] laptop usability [S] bad']

task, data: acos laptop16
target: [('laptop design_features', 'product', 'great', 'ideal'), ('laptop design_features', 'product', 'great', 'small'), ('laptop design_features', 'product', 'great', 'well built')]
output: ['[A] product [O] ideal [S] great [C] laptop general', '[A] product [O] small [S] great [C] laptop design_features', '[A] product [O] well [S] great [C] laptop quality']
sent: ['this', 'is', 'a', 'small', ',', 'well', 'built', 'product', 'ideal', 'for', 'general', 'usage', '.']
counter: {('laptop design_features', 'product', 'great', 'small'): 5, ('laptop quality', 'product', 'great', 'well'): 5, ('laptop general', 'product', 'great', 'ideal'): 5}
output quads: ['[A] product [O] small [S] great [C] laptop design_features', '[A] product [O] well [S] great [C] laptop quality', '[A] product [O] ideal [S] great [C] laptop general']
multi_path: ['[A] product [O] small [S] great [C] laptop design_features [SSEP] [A] product [O] well [S] great [C] laptop quality [SSEP] [A] product [O] ideal [S] great [C] laptop general', '[A] product [S] great [O] small [C] laptop design_features [SSEP] [A] product [S] great [O] well [C] laptop quality [SSEP] [A] product [S] great [O] ideal [C] laptop general', '[A] product [O] small [C] laptop design_features [S] great [SSEP] [A] product [O] well [C] laptop quality [S] great [SSEP] [A] product [O] ideal [C] laptop general [S] great', '[O] small [A] product [S] great [C] laptop design_features [SSEP] [O] well [A] product [S] great [C] laptop quality [SSEP] [O] ideal [A] product [S] great [C] laptop general', '[O] small [A] product [C] laptop design_features [S] great [SSEP] [O] well [A] product [C] laptop quality [S] great [SSEP] [O] ideal [A] product [C] laptop general [S] great']

task, data: acos laptop16
target: [('keyboard design_features', 'backlight', 'great', 'love')]
output: ['[A] backlight [O] love [S] great [C] display operation_performance']
sent: ['i', 'love', 'the', 'backlight', ',', 'it', "'", 's', 'not', 'so', 'bright', 'as', 'to', 'blind', 'you', 'at', 'night', 'time', '.']
counter: {('display operation_performance', 'backlight', 'great', 'love'): 5}
output quads: ['[A] backlight [O] love [S] great [C] display operation_performance']
multi_path: ['[A] backlight [O] love [S] great [C] display operation_performance', '[A] backlight [S] great [O] love [C] display operation_performance', '[A] backlight [O] love [C] display operation_performance [S] great', '[O] love [A] backlight [S] great [C] display operation_performance', '[O] love [A] backlight [C] display operation_performance [S] great']

task, data: acos laptop16
target: [('multimedia_devices operation_performance', 'speaker', 'great', 'null'), ('multimedia_devices operation_performance', 'speaker', 'great', 'well')]
output: ["[A] speaker's [O] like [S] great [C] multimedia_devices design_features", "[A] speaker's [O] not amazing [S] ok [C] multimedia_devices general", "[A] speaker's [O] ok [S] ok [C] multimedia_devices general"]
sent: ['speaker', "'", 's', 'are', 'ok', 'but', 'not', 'amazing', ',', 'i', 'do', 'like', 'that', 'they', 'are', 'mounted', 'on', 'the', 'sides', 'so', 'they', 'work', 'well', 'in', 'laptop', 'or', 'tablet', 'mode', 'equally', 'well', '.']
counter: {('multimedia_devices general', "speaker's", 'ok', 'ok'): 5, ('multimedia_devices general', "speaker's", 'ok', 'not amazing'): 4, ('multimedia_devices design_features', "speaker's", 'great', 'like'): 3, ('laptop operation_performance', 'laptop', 'great', 'well'): 2, ('laptop operation_performance', 'tablet', 'great', 'well'): 2, ('multimedia_devices general', "speaker's", 'great', 'not amazing'): 1}
output quads: ["[A] speaker's [O] ok [S] ok [C] multimedia_devices general", "[A] speaker's [O] not amazing [S] ok [C] multimedia_devices general", "[A] speaker's [O] like [S] great [C] multimedia_devices design_features"]
multi_path: ["[A] speaker's [O] ok [S] ok [C] multimedia_devices general [SSEP] [A] speaker's [O] not amazing [S] ok [C] multimedia_devices general [SSEP] [A] speaker's [O] like [S] great [C] multimedia_devices design_features [SSEP] [A] laptop [O] well [S] great [C] laptop operation_performance [SSEP] [A] tablet [O] well [S] great [C] laptop operation_performance", "[A] speaker's [S] ok [O] ok [C] multimedia_devices general [SSEP] [A] speaker's [S] great [O] not amazing [C] multimedia_devices general [SSEP] [A] speaker's [S] great [O] like [C] multimedia_devices design_features", "[A] speaker's [O] ok [C] multimedia_devices general [S] ok [SSEP] [A] speaker's [O] not amazing [C] multimedia_devices general [S] ok", "[O] ok [A] speaker's [S] ok [C] multimedia_devices general [SSEP] [O] not amazing [A] speaker's [S] ok [C] multimedia_devices general [SSEP] [O] like [A] speaker's [S] great [C] multimedia_devices design_features [SSEP] [O] well [A] laptop [S] great [C] laptop operation_performance [SSEP] [O] well [A] tablet [S] great [C] laptop operation_performance", "[O] ok [A] speaker's [C] multimedia_devices general [S] ok [SSEP] [O] not amazing [A] speaker's [C] multimedia_devices general [S] ok"]

task, data: acos laptop16
target: [('software usability', 'google docs', 'great', 'comfortable')]
output: ['[A] play store apps [O] comfortable [S] great [C] software usability']
sent: ['being', 'able', 'to', 'use', 'play', 'store', 'apps', 'has', 'been', 'a', 'huge', 'plus', 'and', 'i', "'", 'm', 'now', 'so', 'comfortable', 'with', 'google', 'docs', ',', 'i', "'", 'very', 'already', 'forgotten', 'i', 'even', 'owned', 'a', 'windows', 'laptop', '.']
counter: {('software usability', 'play store apps', 'great', 'comfortable'): 5}
output quads: ['[A] play store apps [O] comfortable [S] great [C] software usability']
multi_path: ['[A] play store apps [O] comfortable [S] great [C] software usability', '[A] play store apps [S] great [O] comfortable [C] software usability', '[A] play store apps [O] comfortable [C] software usability [S] great', '[O] comfortable [A] play store apps [S] great [C] software usability', '[O] comfortable [A] play store apps [C] software usability [S] great']

task, data: acos laptop16
target: [('display general', 'screen', 'great', 'good'), ('keyboard general', 'keyboard', 'great', 'better'), ('laptop design_features', 'form factor', 'great', 'better')]
output: ['[A] form factor [O] better [S] great [C] laptop design_features', '[A] keyboard [O] better [S] great [C] keyboard design_features', '[A] screen [O] good [S] great [C] display general']
sent: ['but', 'this', 'screen', 'is', 'really', 'good', 'and', 'the', 'keyboard', 'and', 'form', 'factor', 'are', 'much', 'better', '.']
counter: {('display general', 'screen', 'great', 'good'): 5, ('keyboard design_features', 'keyboard', 'great', 'better'): 5, ('laptop design_features', 'form factor', 'great', 'better'): 5}
output quads: ['[A] screen [O] good [S] great [C] display general', '[A] keyboard [O] better [S] great [C] keyboard design_features', '[A] form factor [O] better [S] great [C] laptop design_features']
multi_path: ['[A] screen [O] good [S] great [C] display general [SSEP] [A] keyboard [O] better [S] great [C] keyboard design_features [SSEP] [A] form factor [O] better [S] great [C] laptop design_features', '[A] screen [S] great [O] good [C] display general [SSEP] [A] keyboard [S] great [O] better [C] keyboard design_features [SSEP] [A] form factor [S] great [O] better [C] laptop design_features', '[A] screen [O] good [C] display general [S] great [SSEP] [A] keyboard [O] better [C] keyboard design_features [S] great [SSEP] [A] form factor [O] better [C] laptop design_features [S] great', '[O] good [A] screen [S] great [C] display general [SSEP] [O] better [A] keyboard [S] great [C] keyboard design_features [SSEP] [O] better [A] form factor [S] great [C] laptop design_features', '[O] good [A] screen [C] display general [S] great [SSEP] [O] better [A] keyboard [C] keyboard design_features [S] great [SSEP] [O] better [A] form factor [C] laptop design_features [S] great']

task, data: acos laptop16
target: [('laptop general', 'tablet mode', 'great', 'like')]
output: ['[A] tablet mode [O] enjoy [S] great [C] laptop design_features', '[A] tablet mode [O] like [S] great [C] laptop design_features']
sent: ['i', 'really', 'enjoy', 'the', '2', '-', '1', 'aspect', 'of', 'the', 'device', 'and', 'really', 'like', 'how', 'when', 'folded', 'into', 'tablet', 'mode', ',', 'there', 'aren', "'", 't', 'any', 'weird', 'groves', 'on', 'the', 'sides', '.']
counter: {('laptop design_features', 'tablet mode', 'great', 'enjoy'): 5, ('laptop design_features', 'tablet mode', 'great', 'like'): 5}
output quads: ['[A] tablet mode [O] enjoy [S] great [C] laptop design_features', '[A] tablet mode [O] like [S] great [C] laptop design_features']
multi_path: ['[A] tablet mode [O] enjoy [S] great [C] laptop design_features [SSEP] [A] tablet mode [O] like [S] great [C] laptop design_features', '[A] tablet mode [S] great [O] enjoy [C] laptop design_features [SSEP] [A] tablet mode [S] great [O] like [C] laptop design_features', '[A] tablet mode [O] enjoy [C] laptop design_features [S] great [SSEP] [A] tablet mode [O] like [C] laptop design_features [S] great', '[O] enjoy [A] tablet mode [S] great [C] laptop design_features [SSEP] [O] like [A] tablet mode [S] great [C] laptop design_features', '[O] enjoy [A] tablet mode [C] laptop design_features [S] great [SSEP] [O] like [A] tablet mode [C] laptop design_features [S] great']

task, data: acos laptop16
target: [('display general', 'touch screen', 'great', 'good'), ('hardware design_features', '360 rotation', 'great', 'good'), ('laptop general', 'computer', 'ok', 'not bad')]
output: ['[A] 360 rotation [O] good [S] great [C] display operation_performance', '[A] computer [O] not bad [S] ok [C] laptop general', '[A] touch screen [O] good [S] great [C] display operation_performance']
sent: ['the', 'computer', 'itself', 'is', 'not', 'bad', ',', 'the', '360', 'rotation', 'and', 'touch', 'screen', 'feel', 'good', '.']
counter: {('laptop general', 'computer', 'ok', 'not bad'): 5, ('display operation_performance', '360 rotation', 'great', 'good'): 5, ('display operation_performance', 'touch screen', 'great', 'good'): 5}
output quads: ['[A] computer [O] not bad [S] ok [C] laptop general', '[A] 360 rotation [O] good [S] great [C] display operation_performance', '[A] touch screen [O] good [S] great [C] display operation_performance']
multi_path: ['[A] computer [O] not bad [S] ok [C] laptop general [SSEP] [A] 360 rotation [O] good [S] great [C] display operation_performance [SSEP] [A] touch screen [O] good [S] great [C] display operation_performance', '[A] computer [S] ok [O] not bad [C] laptop general [SSEP] [A] 360 rotation [S] great [O] good [C] display operation_performance [SSEP] [A] touch screen [S] great [O] good [C] display operation_performance', '[A] computer [O] not bad [C] laptop general [S] ok [SSEP] [A] 360 rotation [O] good [C] display operation_performance [S] great [SSEP] [A] touch screen [O] good [C] display operation_performance [S] great', '[O] not bad [A] computer [S] ok [C] laptop general [SSEP] [O] good [A] 360 rotation [S] great [C] display operation_performance [SSEP] [O] good [A] touch screen [S] great [C] display operation_performance', '[O] not bad [A] computer [C] laptop general [S] ok [SSEP] [O] good [A] 360 rotation [C] display operation_performance [S] great [SSEP] [O] good [A] touch screen [C] display operation_performance [S] great']

task, data: acos laptop16
target: [('laptop general', 'laptop form', 'ok', 'mediocre')]
output: ['[A] laptop [O] mediocre [S] bad [C] laptop general']
sent: ['in', 'laptop', 'form', ',', 'it', "'", 's', 'mediocre', 'at', 'best', '.']
counter: {('laptop general', 'laptop', 'bad', 'mediocre'): 3, ('laptop general', 'laptop form', 'bad', 'mediocre'): 2}
output quads: ['[A] laptop [O] mediocre [S] bad [C] laptop general']
multi_path: ['[A] laptop [O] mediocre [S] bad [C] laptop general', '[A] laptop [S] bad [O] mediocre [C] laptop general', '[A] laptop [O] mediocre [C] laptop general [S] bad', '[O] mediocre [A] laptop form [S] bad [C] laptop general', '[O] mediocre [A] laptop form [C] laptop general [S] bad']

task, data: acos laptop16
target: [('laptop general', 'chromebook', 'great', 'best'), ('laptop general', 'laptops', 'great', 'null')]
output: ['[A] chromebook [O] best [S] great [C] laptop general', '[A] laptops [O] best [S] great [C] laptop general']
sent: ['this', 'chromebook', 'is', 'really', 'one', 'of', 'the', 'best', 'you', 'can', 'own', ',', 'in', 'my', 'opinion', 'one', 'of', 'the', 'best', 'laptops', 'in', 'general', '!']
counter: {('laptop general', 'chromebook', 'great', 'best'): 5, ('laptop general', 'laptops', 'great', 'best'): 5}
output quads: ['[A] chromebook [O] best [S] great [C] laptop general', '[A] laptops [O] best [S] great [C] laptop general']
multi_path: ['[A] chromebook [O] best [S] great [C] laptop general [SSEP] [A] laptops [O] best [S] great [C] laptop general', '[A] chromebook [S] great [O] best [C] laptop general [SSEP] [A] laptops [S] great [O] best [C] laptop general', '[A] chromebook [O] best [C] laptop general [S] great [SSEP] [A] laptops [O] best [C] laptop general [S] great', '[O] best [A] chromebook [S] great [C] laptop general [SSEP] [O] best [A] laptops [S] great [C] laptop general', '[O] best [A] chromebook [C] laptop general [S] great [SSEP] [O] best [A] laptops [C] laptop general [S] great']

task, data: acos laptop16
target: [('battery general', 'battery life', 'great', 'great'), ('display general', 'null', 'great', 'love')]
output: ['[A] battery life [O] great [S] great [C] battery general', '[A] touchscreen / flip feature [O] love [S] great [C] display general']
sent: ['the', 'battery', 'life', 'is', 'great', 'and', 'i', 'love', 'the', 'touchscreen', '/', 'flip', 'feature', '.']
counter: {('battery general', 'battery life', 'great', 'great'): 5, ('display general', 'touchscreen / flip feature', 'great', 'love'): 5}
output quads: ['[A] battery life [O] great [S] great [C] battery general', '[A] touchscreen / flip feature [O] love [S] great [C] display general']
multi_path: ['[A] battery life [O] great [S] great [C] battery general [SSEP] [A] touchscreen / flip feature [O] love [S] great [C] display general', '[A] battery life [S] great [O] great [C] battery general [SSEP] [A] touchscreen / flip feature [S] great [O] love [C] display general', '[A] battery life [O] great [C] battery general [S] great [SSEP] [A] touchscreen / flip feature [O] love [C] display general [S] great', '[O] great [A] battery life [S] great [C] battery general [SSEP] [O] love [A] touchscreen / flip feature [S] great [C] display general', '[O] great [A] battery life [C] battery general [S] great [SSEP] [O] love [A] touchscreen / flip feature [C] display general [S] great']

task, data: acos laptop16
target: [('ports operation_performance', 'usb - c ports', 'great', 'perfectly')]
output: ['[A] audio quest dragonfly [O] perfectly [S] great [C] software operation_performance']
sent: ['audio', 'quest', 'dragonfly', 'is', 'automatically', 'detected', 'and', 'runs', 'perfectly', 'when', 'attached', 'to', 'one', 'of', 'the', 'usb', '-', 'c', 'ports', '.']
counter: {('software operation_performance', 'audio quest dragonfly', 'great', 'perfectly'): 5}
output quads: ['[A] audio quest dragonfly [O] perfectly [S] great [C] software operation_performance']
multi_path: ['[A] audio quest dragonfly [O] perfectly [S] great [C] software operation_performance', '[A] audio quest dragonfly [S] great [O] perfectly [C] software operation_performance', '[A] audio quest dragonfly [O] perfectly [C] software operation_performance [S] great', '[O] perfectly [A] audio quest dragonfly [S] great [C] software operation_performance', '[O] perfectly [A] audio quest dragonfly [C] software operation_performance [S] great']

task, data: acos laptop16
target: [('keyboard design_features', 'keyboard', 'great', 'null')]
output: ['[A] keyboard [O] backlit [S] great [C] keyboard design_features', '[A] keyboard [O] big [S] great [C] keyboard design_features']
sent: ['the', 'keyboard', 'is', 'backlit', 'and', 'big', 'enough', 'for', 'my', 'fingers', '.']
counter: {('keyboard design_features', 'keyboard', 'great', 'backlit'): 5, ('keyboard design_features', 'keyboard', 'great', 'big'): 5}
output quads: ['[A] keyboard [O] backlit [S] great [C] keyboard design_features', '[A] keyboard [O] big [S] great [C] keyboard design_features']
multi_path: ['[A] keyboard [O] backlit [S] great [C] keyboard design_features [SSEP] [A] keyboard [O] big [S] great [C] keyboard design_features', '[A] keyboard [S] great [O] backlit [C] keyboard design_features [SSEP] [A] keyboard [S] great [O] big [C] keyboard design_features', '[A] keyboard [O] backlit [C] keyboard design_features [S] great [SSEP] [A] keyboard [O] big [C] keyboard design_features [S] great', '[O] backlit [A] keyboard [S] great [C] keyboard design_features [SSEP] [O] big [A] keyboard [S] great [C] keyboard design_features', '[O] backlit [A] keyboard [C] keyboard design_features [S] great [SSEP] [O] big [A] keyboard [C] keyboard design_features [S] great']

task, data: acos laptop16
target: [('display general', 'screen resolution', 'great', 'love'), ('keyboard general', 'keyboard', 'great', 'love'), ('laptop general', 'laptop', 'great', 'love')]
output: ['[A] keyboard [O] love [S] great [C] keyboard general', '[A] laptop [O] love [S] great [C] laptop general', '[A] screen resolution [O] love [S] great [C] display general', '[A] speed [O] love [S] great [C] laptop operation_performance']
sent: ['i', 'love', 'everything', 'about', 'this', 'laptop', ',', 'the', 'keyboard', ',', 'screen', 'resolution', ',', 'and', 'speed', '.']
counter: {('laptop general', 'laptop', 'great', 'love'): 5, ('keyboard general', 'keyboard', 'great', 'love'): 5, ('display general', 'screen resolution', 'great', 'love'): 5, ('laptop operation_performance', 'speed', 'great', 'love'): 4, ('cpu operation_performance', 'speed', 'great', 'love'): 1}
output quads: ['[A] laptop [O] love [S] great [C] laptop general', '[A] keyboard [O] love [S] great [C] keyboard general', '[A] screen resolution [O] love [S] great [C] display general', '[A] speed [O] love [S] great [C] laptop operation_performance']
multi_path: ['[A] laptop [O] love [S] great [C] laptop general [SSEP] [A] keyboard [O] love [S] great [C] keyboard general [SSEP] [A] screen resolution [O] love [S] great [C] display general [SSEP] [A] speed [O] love [S] great [C] laptop operation_performance', '[A] laptop [S] great [O] love [C] laptop general [SSEP] [A] keyboard [S] great [O] love [C] keyboard general [SSEP] [A] screen resolution [S] great [O] love [C] display general [SSEP] [A] speed [S] great [O] love [C] laptop operation_performance', '[A] laptop [O] love [C] laptop general [S] great [SSEP] [A] keyboard [O] love [C] keyboard general [S] great [SSEP] [A] screen resolution [O] love [C] display general [S] great [SSEP] [A] speed [O] love [C] laptop operation_performance [S] great', '[O] love [A] laptop [S] great [C] laptop general [SSEP] [O] love [A] keyboard [S] great [C] keyboard general [SSEP] [O] love [A] screen resolution [S] great [C] display general [SSEP] [O] love [A] speed [S] great [C] cpu operation_performance', '[O] love [A] laptop [C] laptop general [S] great [SSEP] [O] love [A] keyboard [C] keyboard general [S] great [SSEP] [O] love [A] screen resolution [C] display general [S] great [SSEP] [O] love [A] speed [C] laptop operation_performance [S] great']

task, data: acos laptop16
target: [('laptop design_features', 'machine', 'great', 'clean'), ('laptop design_features', 'machine', 'great', 'mean')]
output: ['[A] machine [O] clean [S] great [C] laptop design_features', '[A] machine [O] lean [S] great [C] laptop design_features', '[A] machine [O] mean [S] great [C] laptop design_features']
sent: ['it', "'", 's', 'a', 'clean', ',', 'mean', ',', 'lean', ',', 'machine', '.']
counter: {('laptop design_features', 'machine', 'great', 'clean'): 5, ('laptop design_features', 'machine', 'great', 'mean'): 5, ('laptop design_features', 'machine', 'great', 'lean'): 5}
output quads: ['[A] machine [O] clean [S] great [C] laptop design_features', '[A] machine [O] mean [S] great [C] laptop design_features', '[A] machine [O] lean [S] great [C] laptop design_features']
multi_path: ['[A] machine [O] clean [S] great [C] laptop design_features [SSEP] [A] machine [O] mean [S] great [C] laptop design_features [SSEP] [A] machine [O] lean [S] great [C] laptop design_features', '[A] machine [S] great [O] clean [C] laptop design_features [SSEP] [A] machine [S] great [O] mean [C] laptop design_features [SSEP] [A] machine [S] great [O] lean [C] laptop design_features', '[A] machine [O] clean [C] laptop design_features [S] great [SSEP] [A] machine [O] mean [C] laptop design_features [S] great [SSEP] [A] machine [O] lean [C] laptop design_features [S] great', '[O] clean [A] machine [S] great [C] laptop design_features [SSEP] [O] mean [A] machine [S] great [C] laptop design_features [SSEP] [O] lean [A] machine [S] great [C] laptop design_features', '[O] clean [A] machine [C] laptop design_features [S] great [SSEP] [O] mean [A] machine [C] laptop design_features [S] great [SSEP] [O] lean [A] machine [C] laptop design_features [S] great']

task, data: acos laptop16
target: [('hardware general', 'switch', 'great', 'awesome')]
output: ['[A] switch [O] awesome [S] great [C] hardware design_features']
sent: ['the', 'switch', 'has', 'been', 'awesome', '.']
counter: {('hardware design_features', 'switch', 'great', 'awesome'): 5}
output quads: ['[A] switch [O] awesome [S] great [C] hardware design_features']
multi_path: ['[A] switch [O] awesome [S] great [C] hardware design_features', '[A] switch [S] great [O] awesome [C] hardware design_features', '[A] switch [O] awesome [C] hardware design_features [S] great', '[O] awesome [A] switch [S] great [C] hardware design_features', '[O] awesome [A] switch [C] hardware design_features [S] great']

task, data: acos laptop16
target: [('keyboard design_features', 'backlit keyboard', 'great', 'awesome')]
output: ['[A] backlit keyboard [O] awesome [S] great [C] keyboard operation_performance']
sent: ['the', 'backlit', 'keyboard', 'is', 'awesome', 'at', 'night', '.']
counter: {('keyboard operation_performance', 'backlit keyboard', 'great', 'awesome'): 5}
output quads: ['[A] backlit keyboard [O] awesome [S] great [C] keyboard operation_performance']
multi_path: ['[A] backlit keyboard [O] awesome [S] great [C] keyboard operation_performance', '[A] backlit keyboard [S] great [O] awesome [C] keyboard operation_performance', '[A] backlit keyboard [O] awesome [C] keyboard operation_performance [S] great', '[O] awesome [A] backlit keyboard [S] great [C] keyboard operation_performance', '[O] awesome [A] backlit keyboard [C] keyboard operation_performance [S] great']

task, data: acos laptop16
target: [('display operation_performance', 'screen display', 'great', 'bright'), ('graphics general', 'graphics', 'great', 'excellent')]
output: ['[A] screen display [O] bright [S] great [C] display quality', '[A] screen display [O] excellent [S] great [C] display quality']
sent: ['screen', 'display', 'is', 'bright', 'and', 'has', 'excellent', 'graphics', '.']
counter: {('display quality', 'screen display', 'great', 'bright'): 5, ('display quality', 'screen display', 'great', 'excellent'): 5}
output quads: ['[A] screen display [O] bright [S] great [C] display quality', '[A] screen display [O] excellent [S] great [C] display quality']
multi_path: ['[A] screen display [O] bright [S] great [C] display quality [SSEP] [A] screen display [O] excellent [S] great [C] display quality', '[A] screen display [S] great [O] bright [C] display quality [SSEP] [A] screen display [S] great [O] excellent [C] display quality', '[A] screen display [O] bright [C] display quality [S] great [SSEP] [A] screen display [O] excellent [C] display quality [S] great', '[O] bright [A] screen display [S] great [C] display quality [SSEP] [O] excellent [A] screen display [S] great [C] display quality', '[O] bright [A] screen display [C] display quality [S] great [SSEP] [O] excellent [A] screen display [C] display quality [S] great']

pred labels count Counter({1: 569, 2: 178, 3: 47, 4: 18, 5: 3, 6: 1})
gold  [A] unit [O] not worth [S] bad [C] laptop price
pred  [A] unit [O] not worth [S] bad [C] laptop price

gold  [A] acer 11 [O] difficult [S] bad [C] laptop design_features [SSEP] [A] acer 11 [O] small [S] bad [C] laptop design_features
pred  [A] acer 11 [O] difficult [S] bad [C] laptop design_features [SSEP] [A] 11 inches [O] too small [S] bad [C] laptop design_features

gold  [A] ssd drive [O] null [S] bad [C] hard_disc operation_performance
pred  [A] emmc [O] null [S] great [C] hard_disc general

gold  [A] computer [O] difficulty [S] bad [C] laptop usability
pred  [A] computer [O] null [S] bad [C] laptop usability

gold  [A] chrome os [O] null [S] ok [C] os general
pred  [A] chrome os [O] null [S] ok [C] os general

gold  [A] chrome [O] null [S] bad [C] os operation_performance
pred  [A] chrome [O] null [S] bad [C] os operation_performance

gold  [A] it [O] suck [S] bad [C] laptop general [SSEP] [A] it [O] badly [S] bad [C] laptop general
pred  [A] null [O] badly [S] great [C] laptop general

gold  [A] it [O] null [S] ok [C] laptop general
pred  [A] null [O] null [S] ok [C] laptop general

gold  [A] keyboard [O] rarely [S] bad [C] keyboard general
pred  [A] keyboard [O] rarely [S] bad [C] keyboard general

gold  [A] touchscreen chromebook [O] great [S] great [C] laptop price
pred  [A] touchscreen chromebook [O] great [S] great [C] laptop price

number of gold spans: 1156, predicted spans: 1159, hit: 500
acos laptop16 {'precision': 43.14063848144953, 'recall': 43.25259515570934, 'f1': 43.196544276457885}
Total examples = 583
Total examples = 583
Ori sent size: 583
Input size: 2915 2915
Examples:
[['acos', ':', 'rest16', ':', 'yum', '!', '[A]', '[O]', '[S]', '[C]'], ['acos', ':', 'rest16', ':', 'yum', '!', '[A]', '[O]', '[C]', '[S]'], ['acos', ':', 'rest16', ':', 'yum', '!', '[A]', '[S]', '[O]', '[C]'], ['acos', ':', 'rest16', ':', 'yum', '!', '[O]', '[A]', '[C]', '[S]'], ['acos', ':', 'rest16', ':', 'yum', '!', '[O]', '[A]', '[S]', '[C]'], ['acos', ':', 'rest16', ':', 'serves', 'really', 'good', 'sushi', '.', '[A]', '[O]', '[S]', '[C]'], ['acos', ':', 'rest16', ':', 'serves', 'really', 'good', 'sushi', '.', '[A]', '[O]', '[C]', '[S]'], ['acos', ':', 'rest16', ':', 'serves', 'really', 'good', 'sushi', '.', '[A]', '[S]', '[O]', '[C]'], ['acos', ':', 'rest16', ':', 'serves', 'really', 'good', 'sushi', '.', '[O]', '[A]', '[C]', '[S]'], ['acos', ':', 'rest16', ':', 'serves', 'really', 'good', 'sushi', '.', '[O]', '[A]', '[S]', '[C]']]
['[A] it [O] yum [S] great [C] food quality', '[A] it [O] yum [C] food quality [S] great', '[A] it [S] great [O] yum [C] food quality', '[O] yum [A] it [C] food quality [S] great', '[O] yum [A] it [S] great [C] food quality', '[A] sushi [O] good [S] great [C] food quality', '[A] sushi [O] good [C] food quality [S] great', '[A] sushi [S] great [O] good [C] food quality', '[O] good [A] sushi [C] food quality [S] great', '[O] good [A] sushi [S] great [C] food quality']
task, data: acos rest16
target: [('food quality', 'null', 'great', 'yum')]
output: ['[A] null [O] null [S] great [C] food quality']
sent: ['yum', '!']
counter: {('food quality', 'null', 'great', 'null'): 3, ('food quality', 'null', 'great', 'yum'): 2}
output quads: ['[A] null [O] null [S] great [C] food quality']
multi_path: ['[A] it [O] null [S] great [C] food quality', '[A] it [O] null [C] food quality [S] great', '[A] it [S] great [O] null [C] food quality', '[O] yum [A] it [C] food quality [S] great', '[O] yum [A] it [S] great [C] food quality']

task, data: acos rest16
target: [('food style_options', 'portions', 'ok', 'adequate'), ('food style_options', 'portions', 'ok', 'not the biggest')]
output: ['[A] portions [O] adequate [S] great [C] food style_options', '[A] portions [O] not the biggest [S] bad [C] food style_options']
sent: ['not', 'the', 'biggest', 'portions', 'but', 'adequate', '.']
counter: {('food style_options', 'portions', 'bad', 'not the biggest'): 5, ('food style_options', 'portions', 'great', 'adequate'): 5}
output quads: ['[A] portions [O] not the biggest [S] bad [C] food style_options', '[A] portions [O] adequate [S] great [C] food style_options']
multi_path: ['[A] portions [O] not the biggest [S] bad [C] food style_options [SSEP] [A] portions [O] adequate [S] great [C] food style_options', '[A] portions [O] not the biggest [C] food style_options [S] bad [SSEP] [A] portions [O] adequate [C] food style_options [S] great', '[A] portions [S] bad [O] not the biggest [C] food style_options [SSEP] [A] portions [S] great [O] adequate [C] food style_options', '[O] not the biggest [A] portions [C] food style_options [S] bad [SSEP] [O] adequate [A] portions [C] food style_options [S] great', '[O] not the biggest [A] portions [S] bad [C] food style_options [SSEP] [O] adequate [A] portions [S] great [C] food style_options']

task, data: acos rest16
target: [('restaurant general', 'restaurant', 'great', 'no complaints')]
output: ['[A] restaurant [O] null [S] great [C] restaurant general']
sent: ['i', "'", 've', 'been', 'to', 'this', 'restaurant', 'over', 'a', 'dozen', 'times', 'with', 'no', 'complaints', 'to', 'date', '.']
counter: {('restaurant general', 'restaurant', 'great', 'null'): 5}
output quads: ['[A] restaurant [O] null [S] great [C] restaurant general']
multi_path: ['[A] restaurant [O] null [S] great [C] restaurant general', '[A] restaurant [O] null [C] restaurant general [S] great', '[A] restaurant [S] great [O] null [C] restaurant general', '[O] null [A] restaurant [C] restaurant general [S] great', '[O] null [A] restaurant [S] great [C] restaurant general']

task, data: acos rest16
target: [('food quality', 'meal', 'great', 'delicious'), ('restaurant general', 'place', 'great', 'great')]
output: ['[A] meal [O] delicious [S] great [C] food quality', '[A] meal [O] great [S] great [C] food quality']
sent: ['this', 'is', 'a', 'great', 'place', 'to', 'get', 'a', 'delicious', 'meal', '.']
counter: {('food quality', 'meal', 'great', 'great'): 3, ('food quality', 'meal', 'great', 'delicious'): 5, ('restaurant general', 'place', 'great', 'great'): 2}
output quads: ['[A] meal [O] great [S] great [C] food quality', '[A] meal [O] delicious [S] great [C] food quality']
multi_path: ['[A] meal [O] great [S] great [C] food quality [SSEP] [A] meal [O] delicious [S] great [C] food quality', '[A] meal [O] great [C] food quality [S] great [SSEP] [A] meal [O] delicious [C] food quality [S] great', '[A] meal [S] great [O] great [C] food quality [SSEP] [A] meal [S] great [O] delicious [C] food quality', '[O] great [A] place [C] restaurant general [S] great [SSEP] [O] delicious [A] meal [C] food quality [S] great', '[O] great [A] place [S] great [C] restaurant general [SSEP] [O] delicious [A] meal [S] great [C] food quality']

task, data: acos rest16
target: [('food quality', 'honey walnut prawns', 'bad', 'not good'), ('food quality', 'lemon chicken', 'bad', 'sticky sweet'), ('food style_options', 'honey walnut prawns', 'bad', 'not good')]
output: ['[A] honey walnut prawns [O] not good [S] bad [C] food quality', '[A] lemon chicken [O] not good [S] bad [C] food quality']
sent: ['the', 'lemon', 'chicken', 'tasted', 'like', 'sticky', 'sweet', 'donuts', 'and', 'the', 'honey', 'walnut', 'prawns', ',', 'the', 'few', 'they', 'actually', 'give', 'you', '.', '.', '.', '.', '.', 'were', 'not', 'good', '.']
counter: {('food quality', 'lemon chicken', 'bad', 'not good'): 5, ('food quality', 'honey walnut prawns', 'bad', 'not good'): 5}
output quads: ['[A] lemon chicken [O] not good [S] bad [C] food quality', '[A] honey walnut prawns [O] not good [S] bad [C] food quality']
multi_path: ['[A] lemon chicken [O] not good [S] bad [C] food quality [SSEP] [A] honey walnut prawns [O] not good [S] bad [C] food quality', '[A] lemon chicken [O] not good [C] food quality [S] bad [SSEP] [A] honey walnut prawns [O] not good [C] food quality [S] bad', '[A] lemon chicken [S] bad [O] not good [C] food quality [SSEP] [A] honey walnut prawns [S] bad [O] not good [C] food quality', '[O] not good [A] lemon chicken [C] food quality [S] bad [SSEP] [O] not good [A] honey walnut prawns [C] food quality [S] bad', '[O] not good [A] lemon chicken [S] bad [C] food quality [SSEP] [O] not good [A] honey walnut prawns [S] bad [C] food quality']

task, data: acos rest16
target: [('service general', 'service', 'great', 'worst')]
output: ['[A] service [O] worst [S] bad [C] service general']
sent: ['worst', 'service', 'i', 'ever', 'had']
counter: {('service general', 'service', 'bad', 'worst'): 5}
output quads: ['[A] service [O] worst [S] bad [C] service general']
multi_path: ['[A] service [O] worst [S] bad [C] service general', '[A] service [O] worst [C] service general [S] bad', '[A] service [S] bad [O] worst [C] service general', '[O] worst [A] service [C] service general [S] bad', '[O] worst [A] service [S] bad [C] service general']

task, data: acos rest16
target: [('service general', 'waiter', 'bad', 'non - existent')]
output: ['[A] food [O] null [S] bad [C] food quality', '[A] waiter [O] null [S] bad [C] service general']
sent: ['our', 'waiter', 'was', 'non', '-', 'existent', 'and', 'after', 'our', 'food', 'finally', 'arrived', 'over', 'an', 'hour', 'after', 'we', 'ordered', ',', 'we', 'were', 'not', 'given', 'any', 'water', 'or', 'utensils', '.']
counter: {('service general', 'waiter', 'bad', 'null'): 5, ('food quality', 'food', 'bad', 'null'): 5}
output quads: ['[A] waiter [O] null [S] bad [C] service general', '[A] food [O] null [S] bad [C] food quality']
multi_path: ['[A] waiter [O] null [S] bad [C] service general [SSEP] [A] food [O] null [S] bad [C] food quality', '[A] waiter [O] null [C] service general [S] bad [SSEP] [A] food [O] null [C] food quality [S] bad', '[A] waiter [S] bad [O] null [C] service general [SSEP] [A] food [S] bad [O] null [C] food quality', '[O] null [A] waiter [C] service general [S] bad [SSEP] [O] null [A] food [C] food quality [S] bad', '[O] null [A] waiter [S] bad [C] service general [SSEP] [O] null [A] food [S] bad [C] food quality']

task, data: acos rest16
target: [('service general', 'manager', 'bad', 'not even apologetic')]
output: ['[A] manager [O] null [S] bad [C] service general']
sent: ['i', 'complained', 'to', 'the', 'manager', ',', 'but', 'he', 'was', 'not', 'even', 'apologetic', '.']
counter: {('service general', 'manager', 'bad', 'null'): 5}
output quads: ['[A] manager [O] null [S] bad [C] service general']
multi_path: ['[A] manager [O] null [S] bad [C] service general', '[A] manager [O] null [C] service general [S] bad', '[A] manager [S] bad [O] null [C] service general', '[O] null [A] manager [C] service general [S] bad', '[O] null [A] manager [S] bad [C] service general']

task, data: acos rest16
target: [('food prices', 'food', 'great', 'reasonably'), ('food quality', 'food', 'great', 'reasonably')]
output: ['[A] food [O] null [S] great [C] food quality', '[A] null [O] reasonably [S] great [C] restaurant prices']
sent: ['it', "'", 's', '*', 'very', '*', 'reasonably', 'priced', ',', 'esp', 'for', 'the', 'quality', 'of', 'the', 'food', '.']
counter: {('restaurant prices', 'null', 'great', 'reasonably'): 4, ('food quality', 'food', 'great', 'null'): 5, ('food prices', 'null', 'great', 'reasonably'): 1}
output quads: ['[A] null [O] reasonably [S] great [C] restaurant prices', '[A] food [O] null [S] great [C] food quality']
multi_path: ['[A] it [O] reasonably [S] great [C] restaurant prices [SSEP] [A] food [O] null [S] great [C] food quality', '[A] it [O] reasonably [C] food prices [S] great [SSEP] [A] food [O] null [C] food quality [S] great', '[A] it [S] great [O] reasonably [C] restaurant prices [SSEP] [A] food [S] great [O] null [C] food quality', '[O] reasonably [A] it [C] restaurant prices [S] great [SSEP] [O] null [A] food [C] food quality [S] great', '[O] reasonably [A] it [S] great [C] restaurant prices [SSEP] [O] null [A] food [S] great [C] food quality']

task, data: acos rest16
target: [('ambience general', 'place', 'great', 'enjoy'), ('ambience general', 'place', 'great', 'relax'), ('food quality', 'food', 'great', 'finest quality')]
output: ['[A] food [O] finest [S] great [C] food quality', '[A] food [O] relax [S] great [C] ambience general']
sent: ['this', 'is', 'the', 'place', 'to', 'relax', 'and', 'enjoy', 'the', 'finest', 'quality', 'food', 'the', 'industry', 'can', 'offer', '.']
counter: {('ambience general', 'food', 'great', 'relax'): 3, ('food quality', 'food', 'great', 'finest'): 5, ('ambience general', 'place', 'great', 'relax'): 2, ('food quality', 'food', 'great', 'enjoy'): 2}
output quads: ['[A] food [O] relax [S] great [C] ambience general', '[A] food [O] finest [S] great [C] food quality']
multi_path: ['[A] food [O] relax [S] great [C] ambience general [SSEP] [A] food [O] finest [S] great [C] food quality', '[A] food [O] relax [C] ambience general [S] great [SSEP] [A] food [O] finest [C] food quality [S] great', '[A] food [S] great [O] relax [C] ambience general [SSEP] [A] food [S] great [O] finest [C] food quality', '[O] relax [A] place [C] ambience general [S] great [SSEP] [O] enjoy [A] food [C] food quality [S] great [SSEP] [O] finest [A] food [C] food quality [S] great', '[O] relax [A] place [S] great [C] ambience general [SSEP] [O] enjoy [A] food [S] great [C] food quality [SSEP] [O] finest [A] food [S] great [C] food quality']

task, data: acos rest16
target: [('food quality', 'food', 'great', 'best'), ('food quality', 'food', 'great', 'real')]
output: ['[A] food [O] real [S] great [C] food quality']
sent: ['caution', '-', 'its', 'real', 'food', 'for', 'people', 'who', 'love', 'the', 'best', '.']
counter: {('food quality', 'food', 'great', 'real'): 5}
output quads: ['[A] food [O] real [S] great [C] food quality']
multi_path: ['[A] food [O] real [S] great [C] food quality', '[A] food [O] real [C] food quality [S] great', '[A] food [S] great [O] real [C] food quality', '[O] real [A] food [C] food quality [S] great', '[O] real [A] food [S] great [C] food quality']

task, data: acos rest16
target: [('ambience general', 'atmosphere', 'great', 'liked'), ('food prices', 'food', 'bad', 'not worth'), ('food quality', 'food', 'bad', 'not worth')]
output: ['[A] atmosphere [O] liked [S] great [C] ambience general', '[A] food [O] not worth [S] bad [C] food prices']
sent: ['i', 'liked', 'the', 'atmosphere', 'very', 'much', 'but', 'the', 'food', 'was', 'not', 'worth', 'the', 'price', '.']
counter: {('ambience general', 'atmosphere', 'great', 'liked'): 5, ('food prices', 'food', 'bad', 'not worth'): 5, ('food quality', 'food', 'bad', 'not worth'): 1}
output quads: ['[A] atmosphere [O] liked [S] great [C] ambience general', '[A] food [O] not worth [S] bad [C] food prices']
multi_path: ['[A] atmosphere [O] liked [S] great [C] ambience general [SSEP] [A] food [O] not worth [S] bad [C] food prices', '[A] atmosphere [O] liked [C] ambience general [S] great [SSEP] [A] food [O] not worth [C] food prices [S] bad', '[A] atmosphere [S] great [O] liked [C] ambience general [SSEP] [A] food [S] bad [O] not worth [C] food prices', '[O] liked [A] atmosphere [C] ambience general [S] great [SSEP] [O] not worth [A] food [C] food quality [S] bad [SSEP] [O] not worth [A] food [C] food prices [S] bad', '[O] liked [A] atmosphere [S] great [C] ambience general [SSEP] [O] not worth [A] food [S] bad [C] food prices']

task, data: acos rest16
target: [('food quality', 'food', 'bad', 'okay')]
output: ['[A] food [O] okay [S] ok [C] food quality']
sent: ['i', 'may', 'not', 'be', 'a', 'sushi', 'guru', 'but', 'i', 'can', 'tell', 'you', 'that', 'the', 'food', 'here', 'is', 'just', 'okay', 'and', 'that', 'there', 'is', 'not', 'much', 'else', 'to', 'it', '.']
counter: {('food quality', 'food', 'ok', 'okay'): 5}
output quads: ['[A] food [O] okay [S] ok [C] food quality']
multi_path: ['[A] food [O] okay [S] ok [C] food quality', '[A] food [O] okay [C] food quality [S] ok', '[A] food [S] ok [O] okay [C] food quality', '[O] okay [A] food [C] food quality [S] ok', '[O] okay [A] food [S] ok [C] food quality']

task, data: acos rest16
target: [('food quality', 'rice', 'bad', 'dry'), ('food quality', 'tuna', 'bad', "'t so fresh")]
output: ['[A] rice [O] dry [S] bad [C] food quality', "[A] tuna [O] wasn't so fresh [S] bad [C] food quality"]
sent: ['rice', 'is', 'too', 'dry', ',', 'tuna', 'was', 'n', "'", 't', 'so', 'fresh', 'either', '.']
counter: {('food quality', 'rice', 'bad', 'dry'): 5, ('food quality', 'tuna', 'bad', "wasn't so fresh"): 5}
output quads: ['[A] rice [O] dry [S] bad [C] food quality', "[A] tuna [O] wasn't so fresh [S] bad [C] food quality"]
multi_path: ["[A] rice [O] dry [S] bad [C] food quality [SSEP] [A] tuna [O] wasn't so fresh [S] bad [C] food quality", "[A] rice [O] dry [C] food quality [S] bad [SSEP] [A] tuna [O] wasn't so fresh [C] food quality [S] bad", "[A] rice [S] bad [O] dry [C] food quality [SSEP] [A] tuna [S] bad [O] wasn't so fresh [C] food quality", "[O] dry [A] rice [C] food quality [S] bad [SSEP] [O] wasn't so fresh [A] tuna [C] food quality [S] bad", "[O] dry [A] rice [S] bad [C] food quality [SSEP] [O] wasn't so fresh [A] tuna [S] bad [C] food quality"]

task, data: acos rest16
target: [('restaurant prices', 'value', 'bad', 'lacking'), ('service general', 'service', 'bad', 'lacking')]
output: ['[A] null [O] lacking [S] bad [C] restaurant prices', '[A] service [O] lacking [S] bad [C] service general']
sent: ['however', ',', 'the', 'value', 'and', 'service', 'are', 'both', 'severely', 'lacking', '.']
counter: {('restaurant prices', 'null', 'bad', 'lacking'): 5, ('service general', 'service', 'bad', 'lacking'): 5}
output quads: ['[A] null [O] lacking [S] bad [C] restaurant prices', '[A] service [O] lacking [S] bad [C] service general']
multi_path: ['[A] it [O] lacking [S] bad [C] restaurant prices [SSEP] [A] service [O] lacking [S] bad [C] service general', '[A] it [O] lacking [C] restaurant prices [S] bad [SSEP] [A] service [O] lacking [C] service general [S] bad', '[A] it [S] bad [O] lacking [C] restaurant prices [SSEP] [A] service [S] bad [O] lacking [C] service general', '[O] lacking [A] it [C] restaurant prices [S] bad [SSEP] [O] lacking [A] service [C] service general [S] bad', '[O] lacking [A] it [S] bad [C] restaurant prices [SSEP] [O] lacking [A] service [S] bad [C] service general']

task, data: acos rest16
target: [('food quality', 'miso soup', 'great', 'null'), ('food quality', 'rolls', 'great', 'complex')]
output: ['[A] null [O] null [S] great [C] service general']
sent: ['they', 'pay', 'such', 'detail', 'to', 'everything', 'from', 'miso', 'soup', 'to', 'complex', 'rolls', '.']
counter: {('service general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [O] null [S] great [C] service general']
multi_path: ['[A] it [O] null [S] great [C] service general', '[A] it [O] null [C] service general [S] great', '[A] it [S] great [O] null [C] service general', '[O] null [A] it [C] service general [S] great', '[O] null [A] it [S] great [C] service general']

task, data: acos rest16
target: [('food quality', 'food', 'great', 'fine'), ('food quality', 'salsa', 'great', 'fine')]
output: ['[A] food [O] fine [S] great [C] food quality', '[A] salsa [O] tastier [S] great [C] food quality']
sent: ['food', 'was', 'fine', ',', 'with', 'a', 'some', 'little', '-', 'tastier', '-', 'than', '-', 'normal', 'salsa', '.']
counter: {('food quality', 'food', 'great', 'fine'): 5, ('food quality', 'salsa', 'great', 'tastier'): 4, ('food quality', 'salsa', 'great', '- tastier'): 1}
output quads: ['[A] food [O] fine [S] great [C] food quality', '[A] salsa [O] tastier [S] great [C] food quality']
multi_path: ['[A] food [O] fine [S] great [C] food quality [SSEP] [A] salsa [O] tastier [S] great [C] food quality', '[A] food [O] fine [C] food quality [S] great [SSEP] [A] salsa [O] tastier [C] food quality [S] great', '[A] food [S] great [O] fine [C] food quality [SSEP] [A] salsa [S] great [O] tastier [C] food quality', '[O] fine [A] food [C] food quality [S] great [SSEP] [O] - tastier [A] salsa [C] food quality [S] great', '[O] fine [A] food [S] great [C] food quality [SSEP] [O] tastier [A] salsa [S] great [C] food quality']

task, data: acos rest16
target: [('food quality', 'food', 'great', 'great'), ('food quality', 'margaritas', 'great', 'great'), ('service general', 'waitress', 'bad', 'busy')]
output: ['[A] food [O] great [S] great [C] food quality', '[A] margaritas [O] great [S] great [C] drinks quality', '[A] waitress [O] busy [S] bad [C] service general']
sent: ['the', 'food', 'was', 'great', ',', 'the', 'margaritas', 'too', 'but', 'the', 'waitress', 'was', 'too', 'busy', 'being', 'nice', 'to', 'her', 'other', 'larger', 'party', 'than', 'to', 'take', 'better', 'care', 'of', 'my', 'friend', 'and', 'me', '.']
counter: {('food quality', 'food', 'great', 'great'): 5, ('drinks quality', 'margaritas', 'great', 'great'): 5, ('service general', 'waitress', 'bad', 'busy'): 5}
output quads: ['[A] food [O] great [S] great [C] food quality', '[A] margaritas [O] great [S] great [C] drinks quality', '[A] waitress [O] busy [S] bad [C] service general']
multi_path: ['[A] food [O] great [S] great [C] food quality [SSEP] [A] margaritas [O] great [S] great [C] drinks quality [SSEP] [A] waitress [O] busy [S] bad [C] service general', '[A] food [O] great [C] food quality [S] great [SSEP] [A] margaritas [O] great [C] drinks quality [S] great [SSEP] [A] waitress [O] busy [C] service general [S] bad', '[A] food [S] great [O] great [C] food quality [SSEP] [A] margaritas [S] great [O] great [C] drinks quality [SSEP] [A] waitress [S] bad [O] busy [C] service general', '[O] great [A] food [C] food quality [S] great [SSEP] [O] great [A] margaritas [C] drinks quality [S] great [SSEP] [O] busy [A] waitress [C] service general [S] bad', '[O] great [A] food [S] great [C] food quality [SSEP] [O] great [A] margaritas [S] great [C] drinks quality [SSEP] [O] busy [A] waitress [S] bad [C] service general']

task, data: acos rest16
target: [('food quality', 'pizza', 'bad', 'problem')]
output: ['[A] pizza [O] null [S] bad [C] food quality']
sent: ['the', 'only', 'problem', 'is', 'you', 'really', 'have', 'to', 'warm', 'up', 'the', 'pizza', 'before', 'it', "'", 's', 'edible', ',', 'even', 'when', 'you', 'order', 'ahead', '.']
counter: {('food quality', 'pizza', 'bad', 'null'): 5}
output quads: ['[A] pizza [O] null [S] bad [C] food quality']
multi_path: ['[A] pizza [O] null [S] bad [C] food quality', '[A] pizza [O] null [C] food quality [S] bad', '[A] pizza [S] bad [O] null [C] food quality', '[O] null [A] pizza [C] food quality [S] bad', '[O] null [A] pizza [S] bad [C] food quality']

task, data: acos rest16
target: [('food quality', 'null', 'great', 'null')]
output: ['[A] cheese [O] not too much [S] great [C] food quality', '[A] null [O] null [S] great [C] food style_options', '[A] sauce [O] not too much [S] great [C] food quality']
sent: ['but', 'once', 'done', ',', 'it', "'", 's', 'not', 'too', 'much', 'dough', ',', 'not', 'too', 'much', 'cheese', ',', 'not', 'too', 'much', 'sauce', '.']
counter: {('food style_options', 'null', 'great', 'null'): 3, ('food quality', 'cheese', 'great', 'not too much'): 5, ('food quality', 'sauce', 'great', 'not too much'): 5, ('food style_options', 'null', 'great', 'not too much'): 2}
output quads: ['[A] null [O] null [S] great [C] food style_options', '[A] cheese [O] not too much [S] great [C] food quality', '[A] sauce [O] not too much [S] great [C] food quality']
multi_path: ['[A] it [O] null [S] great [C] food style_options [SSEP] [A] cheese [O] not too much [S] great [C] food quality [SSEP] [A] sauce [O] not too much [S] great [C] food quality', '[A] it [O] null [C] food style_options [S] great [SSEP] [A] cheese [O] not too much [C] food quality [S] great [SSEP] [A] sauce [O] not too much [C] food quality [S] great', '[A] it [S] great [O] null [C] food style_options [SSEP] [A] cheese [S] great [O] not too much [C] food quality [SSEP] [A] sauce [S] great [O] not too much [C] food quality', '[O] not too much [A] it [C] food style_options [S] great [SSEP] [O] not too much [A] cheese [C] food quality [S] great [SSEP] [O] not too much [A] sauce [C] food quality [S] great', '[O] not too much [A] it [S] great [C] food style_options [SSEP] [O] not too much [A] cheese [S] great [C] food quality [SSEP] [O] not too much [A] sauce [S] great [C] food quality']

task, data: acos rest16
target: [('ambience general', 'deck', 'great', 'best'), ('service general', 'null', 'great', 'best')]
output: ['[A] null [O] best [S] great [C] service general']
sent: ['–', '.', '.', '.', 'and', 'the', 'best', 'summertime', 'deck', 'experience', '-', '-', 'they', 'will', 'even', 'bring', 'you', 'a', 'blanket', 'if', 'you', 'get', 'cold', 'in', 'the', 'seattle', 'evening', 'weather', '.']
counter: {('service general', 'null', 'great', 'best'): 5}
output quads: ['[A] null [O] best [S] great [C] service general']
multi_path: ['[A] it [O] best [S] great [C] service general', '[A] it [O] best [C] service general [S] great', '[A] it [S] great [O] best [C] service general', '[O] best [A] it [C] service general [S] great', '[O] best [A] it [S] great [C] service general']

task, data: acos rest16
target: [('restaurant general', 'place', 'great', 'perfect')]
output: ['[A] place [O] perfect [S] great [C] restaurant miscellaneous']
sent: ['a', 'perfect', 'place', 'to', 'take', 'out', 'of', 'town', 'guests', 'any', 'time', 'of', 'the', 'year', '.']
counter: {('restaurant miscellaneous', 'place', 'great', 'perfect'): 5}
output quads: ['[A] place [O] perfect [S] great [C] restaurant miscellaneous']
multi_path: ['[A] place [O] perfect [S] great [C] restaurant miscellaneous', '[A] place [O] perfect [C] restaurant miscellaneous [S] great', '[A] place [S] great [O] perfect [C] restaurant miscellaneous', '[O] perfect [A] place [C] restaurant miscellaneous [S] great', '[O] perfect [A] place [S] great [C] restaurant miscellaneous']

task, data: acos rest16
target: [('ambience general', 'music', 'great', 'awesome'), ('restaurant general', 'null', 'great', 'fun'), ('service general', 'staff', 'great', 'great')]
output: ['[A] music [O] awesome [S] great [C] ambience general', '[A] null [O] fun [S] great [C] ambience general', '[A] staff [O] great [S] great [C] service general']
sent: ['endless', 'fun', ',', 'awesome', 'music', ',', 'great', 'staff', '!', '!', '!']
counter: {('ambience general', 'null', 'great', 'fun'): 5, ('ambience general', 'music', 'great', 'awesome'): 5, ('service general', 'staff', 'great', 'great'): 5}
output quads: ['[A] null [O] fun [S] great [C] ambience general', '[A] music [O] awesome [S] great [C] ambience general', '[A] staff [O] great [S] great [C] service general']
multi_path: ['[A] it [O] fun [S] great [C] ambience general [SSEP] [A] music [O] awesome [S] great [C] ambience general [SSEP] [A] staff [O] great [S] great [C] service general', '[A] it [O] fun [C] ambience general [S] great [SSEP] [A] music [O] awesome [C] ambience general [S] great [SSEP] [A] staff [O] great [C] service general [S] great', '[A] it [S] great [O] fun [C] ambience general [SSEP] [A] music [S] great [O] awesome [C] ambience general [SSEP] [A] staff [S] great [O] great [C] service general', '[O] fun [A] it [C] ambience general [S] great [SSEP] [O] awesome [A] music [C] ambience general [S] great [SSEP] [O] great [A] staff [C] service general [S] great', '[O] fun [A] it [S] great [C] ambience general [SSEP] [O] awesome [A] music [S] great [C] ambience general [SSEP] [O] great [A] staff [S] great [C] service general']

task, data: acos rest16
target: [('drinks style_options', 'draft and bottle selection', 'great', 'great'), ('food quality', 'pizza', 'great', 'great')]
output: ['[A] bottle selection [O] great [S] great [C] drinks style_options', '[A] draft [O] great [S] great [C] drinks style_options', '[A] pizza [O] null [S] great [C] food quality']
sent: ['great', 'draft', 'and', 'bottle', 'selection', 'and', 'the', 'pizza', 'rocks', '.']
counter: {('drinks style_options', 'draft', 'great', 'great'): 5, ('drinks style_options', 'bottle selection', 'great', 'great'): 5, ('food quality', 'pizza', 'great', 'null'): 5}
output quads: ['[A] draft [O] great [S] great [C] drinks style_options', '[A] bottle selection [O] great [S] great [C] drinks style_options', '[A] pizza [O] null [S] great [C] food quality']
multi_path: ['[A] draft [O] great [S] great [C] drinks style_options [SSEP] [A] bottle selection [O] great [S] great [C] drinks style_options [SSEP] [A] pizza [O] null [S] great [C] food quality', '[A] draft [O] great [C] drinks style_options [S] great [SSEP] [A] bottle selection [O] great [C] drinks style_options [S] great [SSEP] [A] pizza [O] null [C] food quality [S] great', '[A] draft [S] great [O] great [C] drinks style_options [SSEP] [A] bottle selection [S] great [O] great [C] drinks style_options [SSEP] [A] pizza [S] great [O] null [C] food quality', '[O] great [A] draft [C] drinks style_options [S] great [SSEP] [O] great [A] bottle selection [C] drinks style_options [S] great [SSEP] [O] null [A] pizza [C] food quality [S] great', '[O] great [A] draft [S] great [C] drinks style_options [SSEP] [O] great [A] bottle selection [S] great [C] drinks style_options [SSEP] [O] null [A] pizza [S] great [C] food quality']

task, data: acos rest16
target: [('ambience general', "jukebox's", 'great', 'best')]
output: ['[A] jukebox [O] best [S] great [C] drinks quality']
sent: ['definitely', 'has', 'one', 'of', 'the', 'best', 'jukebox', "'", 's', 'i', "'", 've', 'seen', 'in', 'a', 'long', 'long', 'time', '.']
counter: {('drinks quality', 'jukebox', 'great', 'best'): 5}
output quads: ['[A] jukebox [O] best [S] great [C] drinks quality']
multi_path: ['[A] jukebox [O] best [S] great [C] drinks quality', '[A] jukebox [O] best [C] drinks quality [S] great', '[A] jukebox [S] great [O] best [C] drinks quality', '[O] best [A] jukebox [C] drinks quality [S] great', '[O] best [A] jukebox [S] great [C] drinks quality']

task, data: acos rest16
target: [('drinks style_options', 'beer selection', 'great', 'worth staying for'), ('service general', 'owners', 'great', 'fun'), ('service general', 'owners', 'great', 'great')]
output: ['[A] beer selection [O] worth [S] great [C] drinks style_options', '[A] owners [O] fun [S] great [C] service general', '[A] owners [O] great [S] great [C] service general']
sent: ['the', 'owners', 'are', 'great', 'fun', 'and', 'the', 'beer', 'selection', 'is', 'worth', 'staying', 'for', '.']
counter: {('service general', 'owners', 'great', 'great fun'): 2, ('drinks style_options', 'beer selection', 'great', 'worth'): 5, ('service general', 'owners', 'great', 'great'): 3, ('service general', 'owners', 'great', 'fun'): 3}
output quads: ['[A] beer selection [O] worth [S] great [C] drinks style_options', '[A] owners [O] great [S] great [C] service general', '[A] owners [O] fun [S] great [C] service general']
multi_path: ['[A] owners [O] great fun [S] great [C] service general [SSEP] [A] beer selection [O] worth [S] great [C] drinks style_options', '[A] owners [O] great fun [C] service general [S] great [SSEP] [A] beer selection [O] worth [C] drinks style_options [S] great', '[A] owners [S] great [O] great [C] service general [SSEP] [A] owners [S] great [O] fun [C] service general [SSEP] [A] beer selection [S] great [O] worth [C] drinks style_options', '[O] great [A] owners [C] service general [S] great [SSEP] [O] fun [A] owners [C] service general [S] great [SSEP] [O] worth [A] beer selection [C] drinks style_options [S] great', '[O] great [A] owners [S] great [C] service general [SSEP] [O] fun [A] owners [S] great [C] service general [SSEP] [O] worth [A] beer selection [S] great [C] drinks style_options']

task, data: acos rest16
target: [('restaurant miscellaneous', 'balconey', 'great', 'favorite')]
output: ['[A] smoking balconey [O] favorite [S] great [C] ambience general']
sent: ['not', 'alot', 'of', 'smoking', 'places', 'left', 'in', 'new', 'york', ',', 'but', 'i', 'have', 'found', 'my', 'favorite', 'smoking', 'balconey', 'in', 'the', 'city', '.']
counter: {('ambience general', 'smoking balconey', 'great', 'favorite'): 5}
output quads: ['[A] smoking balconey [O] favorite [S] great [C] ambience general']
multi_path: ['[A] smoking balconey [O] favorite [S] great [C] ambience general', '[A] smoking balconey [O] favorite [C] ambience general [S] great', '[A] smoking balconey [S] great [O] favorite [C] ambience general', '[O] favorite [A] smoking balconey [C] ambience general [S] great', '[O] favorite [A] smoking balconey [S] great [C] ambience general']

task, data: acos rest16
target: [('food style_options', 'fish', 'great', 'wide')]
output: ['[A] fish [O] wide [S] great [C] food style_options', '[A] null [O] null [S] great [C] service general']
sent: ['they', 'have', 'a', 'wide', 'variety', 'of', 'fish', 'and', 'they', 'even', 'list', 'which', 'oceans', 'they', 'come', 'from', ';', 'atlantic', 'or', 'pacific', '.']
counter: {('food style_options', 'fish', 'great', 'wide'): 5, ('service general', 'null', 'great', 'null'): 5}
output quads: ['[A] fish [O] wide [S] great [C] food style_options', '[A] null [O] null [S] great [C] service general']
multi_path: ['[A] fish [O] wide [S] great [C] food style_options [SSEP] [A] it [O] null [S] great [C] service general', '[A] fish [O] wide [C] food style_options [S] great [SSEP] [A] it [O] null [C] service general [S] great', '[A] fish [S] great [O] wide [C] food style_options [SSEP] [A] it [S] great [O] null [C] service general', '[O] wide [A] fish [C] food style_options [S] great [SSEP] [O] null [A] it [C] service general [S] great', '[O] wide [A] fish [S] great [C] food style_options [SSEP] [O] null [A] it [S] great [C] service general']

task, data: acos rest16
target: [('food style_options', 'pieces', 'bad', 'null')]
output: ['[A] pieces [O] negative [S] bad [C] food style_options']
sent: ['my', 'only', 'negative', 'comment', 'is', 'that', 'i', 'wish', 'the', 'pieces', 'were', 'a', 'little', 'bigger', '.']
counter: {('food style_options', 'pieces', 'bad', 'negative'): 5}
output quads: ['[A] pieces [O] negative [S] bad [C] food style_options']
multi_path: ['[A] pieces [O] negative [S] bad [C] food style_options', '[A] pieces [O] negative [C] food style_options [S] bad', '[A] pieces [S] bad [O] negative [C] food style_options', '[O] negative [A] pieces [C] food style_options [S] bad', '[O] negative [A] pieces [S] bad [C] food style_options']

task, data: acos rest16
target: [('ambience general', 'decor', 'ok', 'rustic'), ('ambience general', 'decor', 'ok', 'traditional japanese')]
output: ['[A] decor [O] rustic [S] great [C] ambience general', '[A] decor [O] traditional [S] great [C] ambience general']
sent: ['the', 'decor', 'is', 'rustic', ',', 'traditional', 'japanese', '.']
counter: {('ambience general', 'decor', 'great', 'rustic'): 5, ('ambience general', 'decor', 'great', 'traditional'): 5}
output quads: ['[A] decor [O] rustic [S] great [C] ambience general', '[A] decor [O] traditional [S] great [C] ambience general']
multi_path: ['[A] decor [O] rustic [S] great [C] ambience general [SSEP] [A] decor [O] traditional [S] great [C] ambience general', '[A] decor [O] rustic [C] ambience general [S] great [SSEP] [A] decor [O] traditional [C] ambience general [S] great', '[A] decor [S] great [O] rustic [C] ambience general [SSEP] [A] decor [S] great [O] traditional [C] ambience general', '[O] rustic [A] decor [C] ambience general [S] great [SSEP] [O] traditional [A] decor [C] ambience general [S] great', '[O] rustic [A] decor [S] great [C] ambience general [SSEP] [O] traditional [A] decor [S] great [C] ambience general']

task, data: acos rest16
target: [('restaurant miscellaneous', 'crowd', 'ok', 'null')]
output: ['[A] crowd [O] mixed [S] ok [C] restaurant miscellaneous']
sent: ['the', 'crowd', 'is', 'mixed', 'yuppies', ',', 'young', 'and', 'old', '.']
counter: {('restaurant miscellaneous', 'crowd', 'ok', 'mixed'): 3, ('restaurant miscellaneous', 'crowd', 'ok', 'null'): 2}
output quads: ['[A] crowd [O] mixed [S] ok [C] restaurant miscellaneous']
multi_path: ['[A] crowd [O] mixed [S] ok [C] restaurant miscellaneous', '[A] crowd [O] mixed [C] restaurant miscellaneous [S] ok', '[A] crowd [S] ok [O] mixed [C] restaurant miscellaneous', '[O] null [A] crowd [C] restaurant miscellaneous [S] ok', '[O] null [A] crowd [S] ok [C] restaurant miscellaneous']

task, data: acos rest16
target: [('food quality', 'food', 'ok', 'mediocre')]
output: ['[A] food [O] mediocre [S] bad [C] food quality']
sent: ['mediocre', 'food']
counter: {('food quality', 'food', 'bad', 'mediocre'): 4, ('food quality', 'food', 'ok', 'mediocre'): 1}
output quads: ['[A] food [O] mediocre [S] bad [C] food quality']
multi_path: ['[A] food [O] mediocre [S] bad [C] food quality', '[A] food [O] mediocre [C] food quality [S] bad', '[A] food [S] ok [O] mediocre [C] food quality', '[O] mediocre [A] food [C] food quality [S] bad', '[O] mediocre [A] food [S] bad [C] food quality']

task, data: acos rest16
target: [('food style_options', 'menu', 'ok', 'abbreviated')]
output: ['[A] outside patio area [O] null [S] ok [C] ambience general']
sent: ['the', 'outside', 'patio', 'area', 'has', 'an', 'abbreviated', 'menu', '.']
counter: {('ambience general', 'outside patio area', 'ok', 'null'): 5}
output quads: ['[A] outside patio area [O] null [S] ok [C] ambience general']
multi_path: ['[A] outside patio area [O] null [S] ok [C] ambience general', '[A] outside patio area [O] null [C] ambience general [S] ok', '[A] outside patio area [S] ok [O] null [C] ambience general', '[O] null [A] outside patio area [C] ambience general [S] ok', '[O] null [A] outside patio area [S] ok [C] ambience general']

task, data: acos rest16
target: [('food prices', 'food', 'bad', 'mediocre'), ('food quality', 'food', 'bad', 'mediocre')]
output: ['[A] food [O] mediocre [S] ok [C] food quality']
sent: ['my', 'g', '/', 'f', 'and', 'i', 'both', 'agreed', 'the', 'food', 'was', 'very', 'mediocre', 'especially', 'considering', 'the', 'price', '.']
counter: {('food quality', 'food', 'ok', 'mediocre'): 5}
output quads: ['[A] food [O] mediocre [S] ok [C] food quality']
multi_path: ['[A] food [O] mediocre [S] ok [C] food quality', '[A] food [O] mediocre [C] food quality [S] ok', '[A] food [S] ok [O] mediocre [C] food quality', '[O] mediocre [A] food [C] food quality [S] ok', '[O] mediocre [A] food [S] ok [C] food quality']

task, data: acos rest16
target: [('food quality', 'food', 'bad', 'average'), ('restaurant general', 'place', 'bad', 'null')]
output: ['[A] food [O] average [S] bad [C] food quality']
sent: ['we', 'are', 'locals', ',', 'and', 'get', 'the', 'feeling', 'the', 'only', 'way', 'this', 'place', 'survives', 'with', 'such', 'average', 'food', 'is', 'because', 'most', 'customers', 'are', 'probably', 'one', '-', 'time', 'customer', 'tourists', '.']
counter: {('food quality', 'food', 'bad', 'average'): 4, ('food quality', 'food', 'ok', 'average'): 1}
output quads: ['[A] food [O] average [S] bad [C] food quality']
multi_path: ['[A] food [O] average [S] bad [C] food quality', '[A] food [O] average [C] food quality [S] bad', '[A] food [S] ok [O] average [C] food quality', '[O] average [A] food [C] food quality [S] bad', '[O] average [A] food [S] bad [C] food quality']

task, data: acos rest16
target: [('food quality', 'filet mignon on top of spinach and mashed potatoes', 'great', 'loved'), ('food quality', 'goat cheese gnocchi', 'great', 'loved'), ('food quality', 'pumpkin ravioli', 'great', 'loved'), ('food style_options', 'goat cheese gnocchi', 'great', 'null')]
output: ['[A] filet mignon on top of spinach and mashed potatoes [O] null [S] great [C] food quality', '[A] goat cheese gnocchi ( 5 big ones to a plate instead of 20 or so little gnocchis) [O] loved [S] great [C] food quality', '[A] pumpkin ravioli [O] loved [S] great [C] food quality']
sent: ['–', 'i', 'loved', 'the', 'pumpkin', 'ravioli', 'and', 'the', 'goat', 'cheese', 'gnocchi', '(', '5', 'big', 'ones', 'to', 'a', 'plate', 'instead', 'of', '20', 'or', 'so', 'little', 'gnocchis', ')', 'and', 'my', 'sister', 'loved', 'her', 'filet', 'mignon', 'on', 'top', 'of', 'spinach', 'and', 'mashed', 'potatoes', '.']
counter: {('food quality', 'pumpkin ravioli', 'great', 'loved'): 5, ('food quality', 'goat cheese gnocchi ( 5 big ones to a plate instead of 20 or so little gnocchis)', 'great', 'loved'): 5, ('food quality', 'filet mignon on top of spinach and mashed potatoes', 'great', 'null'): 3, ('food quality', 'filet mignon on top of spinach and mashed potatoes', 'great', 'loved'): 2}
output quads: ['[A] pumpkin ravioli [O] loved [S] great [C] food quality', '[A] goat cheese gnocchi ( 5 big ones to a plate instead of 20 or so little gnocchis) [O] loved [S] great [C] food quality', '[A] filet mignon on top of spinach and mashed potatoes [O] null [S] great [C] food quality']
multi_path: ['[A] pumpkin ravioli [O] loved [S] great [C] food quality [SSEP] [A] goat cheese gnocchi ( 5 big ones to a plate instead of 20 or so little gnocchis) [O] loved [S] great [C] food quality [SSEP] [A] filet mignon on top of spinach and mashed potatoes [O] null [S] great [C] food quality', '[A] pumpkin ravioli [O] loved [C] food quality [S] great [SSEP] [A] goat cheese gnocchi ( 5 big ones to a plate instead of 20 or so little gnocchis) [O] loved [C] food quality [S] great [SSEP] [A] filet mignon on top of spinach and mashed potatoes [O] null [C] food quality [S] great', '[A] pumpkin ravioli [S] great [O] loved [C] food quality [SSEP] [A] goat cheese gnocchi ( 5 big ones to a plate instead of 20 or so little gnocchis) [S] great [O] loved [C] food quality [SSEP] [A] filet mignon on top of spinach and mashed potatoes [S] great [O] null [C] food quality', '[O] loved [A] pumpkin ravioli [C] food quality [S] great [SSEP] [O] loved [A] goat cheese gnocchi ( 5 big ones to a plate instead of 20 or so little gnocchis) [C] food quality [S] great [SSEP] [O] loved [A] filet mignon on top of spinach and mashed potatoes [C] food quality [S] great', '[O] loved [A] pumpkin ravioli [S] great [C] food quality [SSEP] [O] loved [A] goat cheese gnocchi ( 5 big ones to a plate instead of 20 or so little gnocchis) [S] great [C] food quality [SSEP] [O] loved [A] filet mignon on top of spinach and mashed potatoes [S] great [C] food quality']

task, data: acos rest16
target: [('food quality', 'chana masala ( garbanzo beans )', 'great', 'also')]
output: ['[A] chana masala ( garbanzo beans ) [O] excellent [S] great [C] food quality']
sent: ['the', 'chana', 'masala', '(', 'garbanzo', 'beans', ')', 'are', 'also', 'excellent', '.']
counter: {('food quality', 'chana masala ( garbanzo beans )', 'great', 'excellent'): 5}
output quads: ['[A] chana masala ( garbanzo beans ) [O] excellent [S] great [C] food quality']
multi_path: ['[A] chana masala ( garbanzo beans ) [O] excellent [S] great [C] food quality', '[A] chana masala ( garbanzo beans ) [O] excellent [C] food quality [S] great', '[A] chana masala ( garbanzo beans ) [S] great [O] excellent [C] food quality', '[O] excellent [A] chana masala ( garbanzo beans ) [C] food quality [S] great', '[O] excellent [A] chana masala ( garbanzo beans ) [S] great [C] food quality']

task, data: acos rest16
target: [('food quality', 'food', 'great', 'null'), ('location general', 'location', 'ok', 'not the greatest')]
output: ['[A] food [O] null [S] great [C] food quality', '[A] null [O] not the greatest [S] ok [C] location general']
sent: ['it', "'", 's', 'located', 'in', 'a', 'strip', 'mall', 'near', 'the', 'beverly', 'center', ',', 'not', 'the', 'greatest', 'location', ',', 'but', 'the', 'food', 'keeps', 'me', 'coming', 'back', 'for', 'more', '.']
counter: {('location general', 'null', 'bad', 'not the greatest'): 2, ('food quality', 'food', 'great', 'null'): 5, ('location general', 'null', 'ok', 'not the greatest'): 3}
output quads: ['[A] food [O] null [S] great [C] food quality', '[A] null [O] not the greatest [S] ok [C] location general']
multi_path: ['[A] it [O] not the greatest [S] bad [C] location general [SSEP] [A] food [O] null [S] great [C] food quality', '[A] it [O] not the greatest [C] location general [S] ok [SSEP] [A] food [O] null [C] food quality [S] great', '[A] it [S] ok [O] not the greatest [C] location general [SSEP] [A] food [S] great [O] null [C] food quality', '[O] not the greatest [A] it [C] location general [S] ok [SSEP] [O] null [A] food [C] food quality [S] great', '[O] not the greatest [A] it [S] bad [C] location general [SSEP] [O] null [A] food [S] great [C] food quality']

task, data: acos rest16
target: [('restaurant miscellaneous', 'null', 'great', 'never too crowded'), ('service general', 'service', 'great', 'great')]
output: ['[A] service [O] great [S] great [C] service general', '[A] service [O] never too crowded [S] great [C] service general']
sent: ['never', 'too', 'crowded', 'and', 'always', 'great', 'service', '.']
counter: {('service general', 'service', 'great', 'never too crowded'): 3, ('service general', 'service', 'great', 'great'): 5, ('restaurant miscellaneous', 'null', 'great', 'never too crowded'): 2}
output quads: ['[A] service [O] never too crowded [S] great [C] service general', '[A] service [O] great [S] great [C] service general']
multi_path: ['[A] service [O] never too crowded [S] great [C] service general [SSEP] [A] service [O] great [S] great [C] service general', '[A] service [O] never too crowded [C] service general [S] great [SSEP] [A] service [O] great [C] service general [S] great', '[A] service [S] great [O] never too crowded [C] service general [SSEP] [A] service [S] great [O] great [C] service general', '[O] never too crowded [A] it [C] restaurant miscellaneous [S] great [SSEP] [O] great [A] service [C] service general [S] great', '[O] never too crowded [A] it [S] great [C] restaurant miscellaneous [SSEP] [O] great [A] service [S] great [C] service general']

task, data: acos rest16
target: [('food quality', 'food', 'bad', 'null'), ('food quality', 'food', 'great', 'nice')]
output: ['[A] food [O] nice [S] great [C] food quality', '[A] spice [O] null [S] bad [C] food quality']
sent: ['nice', 'food', 'but', 'no', 'spice', '!']
counter: {('food quality', 'food', 'great', 'nice'): 5, ('food quality', 'spice', 'bad', 'null'): 5}
output quads: ['[A] food [O] nice [S] great [C] food quality', '[A] spice [O] null [S] bad [C] food quality']
multi_path: ['[A] food [O] nice [S] great [C] food quality [SSEP] [A] spice [O] null [S] bad [C] food quality', '[A] food [O] nice [C] food quality [S] great [SSEP] [A] spice [O] null [C] food quality [S] bad', '[A] food [S] great [O] nice [C] food quality [SSEP] [A] spice [S] bad [O] null [C] food quality', '[O] nice [A] food [C] food quality [S] great [SSEP] [O] null [A] spice [C] food quality [S] bad', '[O] nice [A] food [S] great [C] food quality [SSEP] [O] null [A] spice [S] bad [C] food quality']

task, data: acos rest16
target: [('food quality', 'food', 'bad', 'too mild'), ('food quality', 'food', 'great', 'good')]
output: ['[A] food [O] good [S] great [C] food quality', '[A] food [O] mild [S] bad [C] food quality']
sent: ['the', 'food', 'was', 'all', 'good', 'but', 'it', 'was', 'way', 'too', 'mild', '.']
counter: {('food quality', 'food', 'great', 'good'): 5, ('food quality', 'food', 'bad', 'mild'): 5}
output quads: ['[A] food [O] good [S] great [C] food quality', '[A] food [O] mild [S] bad [C] food quality']
multi_path: ['[A] food [O] good [S] great [C] food quality [SSEP] [A] food [O] mild [S] bad [C] food quality', '[A] food [O] good [C] food quality [S] great [SSEP] [A] food [O] mild [C] food quality [S] bad', '[A] food [S] great [O] good [C] food quality [SSEP] [A] food [S] bad [O] mild [C] food quality', '[O] good [A] food [C] food quality [S] great [SSEP] [O] mild [A] food [C] food quality [S] bad', '[O] good [A] food [S] great [C] food quality [SSEP] [O] mild [A] food [S] bad [C] food quality']

task, data: acos rest16
target: [('food quality', 'colorado', 'great', 'delicious'), ('food quality', 'fajita salad', 'great', 'delicious'), ('food quality', 'fajitas', 'great', 'delicious'), ('food quality', 'null', 'great', 'delicious')]
output: ['[A] colorado [O] delicious [S] great [C] food quality', '[A] fajita salad [O] delicious [S] great [C] food quality', '[A] fajitas [O] delicious [S] great [C] food quality']
sent: ['–', 'i', 'do', 'n', "'", 't', 'understand', 'how', 'i', 'was', 'a', 'stranger', 'to', 'this', 'place', 'for', 'so', 'long', '.', '.', '.', 'the', 'fajita', 'salad', ',', 'the', 'colorado', ',', 'the', 'fajitas', '-', 'everything', 'is', 'delicious', '.']
counter: {('food quality', 'fajita salad', 'great', 'delicious'): 5, ('food quality', 'colorado', 'great', 'delicious'): 5, ('food quality', 'fajitas', 'great', 'delicious'): 5}
output quads: ['[A] fajita salad [O] delicious [S] great [C] food quality', '[A] colorado [O] delicious [S] great [C] food quality', '[A] fajitas [O] delicious [S] great [C] food quality']
multi_path: ['[A] fajita salad [O] delicious [S] great [C] food quality [SSEP] [A] colorado [O] delicious [S] great [C] food quality [SSEP] [A] fajitas [O] delicious [S] great [C] food quality', '[A] fajita salad [O] delicious [C] food quality [S] great [SSEP] [A] colorado [O] delicious [C] food quality [S] great [SSEP] [A] fajitas [O] delicious [C] food quality [S] great', '[A] fajita salad [S] great [O] delicious [C] food quality [SSEP] [A] colorado [S] great [O] delicious [C] food quality [SSEP] [A] fajitas [S] great [O] delicious [C] food quality', '[O] delicious [A] fajita salad [C] food quality [S] great [SSEP] [O] delicious [A] colorado [C] food quality [S] great [SSEP] [O] delicious [A] fajitas [C] food quality [S] great', '[O] delicious [A] fajita salad [S] great [C] food quality [SSEP] [O] delicious [A] colorado [S] great [C] food quality [SSEP] [O] delicious [A] fajitas [S] great [C] food quality']

task, data: acos rest16
target: [('ambience general', 'environment', 'great', 'cosy'), ('ambience general', 'environment', 'great', 'warm')]
output: ['[A] environment [O] cosy [S] great [C] ambience general', '[A] environment [O] love [S] great [C] ambience general', '[A] environment [O] warm [S] great [C] ambience general']
sent: ['i', 'love', 'the', 'warm', '&', 'cosy', 'environment', '.']
counter: {('ambience general', 'environment', 'great', 'love'): 5, ('ambience general', 'environment', 'great', 'warm'): 5, ('ambience general', 'environment', 'great', 'cosy'): 5}
output quads: ['[A] environment [O] love [S] great [C] ambience general', '[A] environment [O] warm [S] great [C] ambience general', '[A] environment [O] cosy [S] great [C] ambience general']
multi_path: ['[A] environment [O] love [S] great [C] ambience general [SSEP] [A] environment [O] warm [S] great [C] ambience general [SSEP] [A] environment [O] cosy [S] great [C] ambience general', '[A] environment [O] love [C] ambience general [S] great [SSEP] [A] environment [O] warm [C] ambience general [S] great [SSEP] [A] environment [O] cosy [C] ambience general [S] great', '[A] environment [S] great [O] love [C] ambience general [SSEP] [A] environment [S] great [O] warm [C] ambience general [SSEP] [A] environment [S] great [O] cosy [C] ambience general', '[O] love [A] environment [C] ambience general [S] great [SSEP] [O] warm [A] environment [C] ambience general [S] great [SSEP] [O] cosy [A] environment [C] ambience general [S] great', '[O] love [A] environment [S] great [C] ambience general [SSEP] [O] warm [A] environment [S] great [C] ambience general [SSEP] [O] cosy [A] environment [S] great [C] ambience general']

task, data: acos rest16
target: [('ambience general', 'decor', 'great', 'great'), ('restaurant general', 'restaurant', 'great', 'best'), ('service general', 'customer service', 'great', 'great'), ('service general', 'manager', 'great', 'friendly')]
output: ['[A] customer service [O] great [S] great [C] service general', '[A] decor [O] great [S] great [C] ambience general', '[A] manager [O] friendly [S] great [C] service general', '[A] null [O] best [S] great [C] restaurant general']
sent: ['best', 'restaurant', 'in', 'the', 'world', ',', 'great', 'decor', ',', 'great', 'customer', 'service', ',', 'friendly', 'manager']
counter: {('restaurant general', 'null', 'great', 'best'): 5, ('ambience general', 'decor', 'great', 'great'): 5, ('service general', 'customer service', 'great', 'great'): 5, ('service general', 'manager', 'great', 'friendly'): 5}
output quads: ['[A] null [O] best [S] great [C] restaurant general', '[A] decor [O] great [S] great [C] ambience general', '[A] customer service [O] great [S] great [C] service general', '[A] manager [O] friendly [S] great [C] service general']
multi_path: ['[A] it [O] best [S] great [C] restaurant general [SSEP] [A] decor [O] great [S] great [C] ambience general [SSEP] [A] customer service [O] great [S] great [C] service general [SSEP] [A] manager [O] friendly [S] great [C] service general', '[A] it [O] best [C] restaurant general [S] great [SSEP] [A] decor [O] great [C] ambience general [S] great [SSEP] [A] customer service [O] great [C] service general [S] great [SSEP] [A] manager [O] friendly [C] service general [S] great', '[A] it [S] great [O] best [C] restaurant general [SSEP] [A] decor [S] great [O] great [C] ambience general [SSEP] [A] customer service [S] great [O] great [C] service general [SSEP] [A] manager [S] great [O] friendly [C] service general', '[O] best [A] it [C] restaurant general [S] great [SSEP] [O] great [A] decor [C] ambience general [S] great [SSEP] [O] great [A] customer service [C] service general [S] great [SSEP] [O] friendly [A] manager [C] service general [S] great', '[O] best [A] it [S] great [C] restaurant general [SSEP] [O] great [A] decor [S] great [C] ambience general [SSEP] [O] great [A] customer service [S] great [C] service general [SSEP] [O] friendly [A] manager [S] great [C] service general']

task, data: acos rest16
target: [('restaurant general', 'mexican spot', 'great', 'great')]
output: ['[A] spot [O] great [S] great [C] restaurant general']
sent: ['–', 'great', 'financial', 'district', 'mexican', 'spot', '.']
counter: {('restaurant general', 'spot', 'great', 'great'): 3, ('restaurant general', 'financial district mexican spot', 'great', 'great'): 2}
output quads: ['[A] spot [O] great [S] great [C] restaurant general']
multi_path: ['[A] spot [O] great [S] great [C] restaurant general', '[A] spot [O] great [C] restaurant general [S] great', '[A] spot [S] great [O] great [C] restaurant general', '[O] great [A] financial district mexican spot [C] restaurant general [S] great', '[O] great [A] financial district mexican spot [S] great [C] restaurant general']

task, data: acos rest16
target: [('service general', 'null', 'great', 'good'), ('service general', 'service', 'great', 'quick')]
output: ['[A] null [O] busy [S] bad [C] service general', '[A] null [O] good [S] great [C] service general', '[A] seating [O] promptly [S] great [C] service general', '[A] service [O] quick [S] great [C] service general']
sent: ['always', 'busy', ',', 'but', 'they', 'are', 'good', 'at', 'seating', 'you', 'promptly', 'and', 'have', 'quick', 'service', '.']
counter: {('service general', 'null', 'bad', 'busy'): 5, ('service general', 'null', 'great', 'good'): 5, ('service general', 'seating', 'great', 'promptly'): 3, ('service general', 'service', 'great', 'quick'): 5, ('service general', 'null', 'great', 'promptly'): 2}
output quads: ['[A] null [O] busy [S] bad [C] service general', '[A] null [O] good [S] great [C] service general', '[A] seating [O] promptly [S] great [C] service general', '[A] service [O] quick [S] great [C] service general']
multi_path: ['[A] it [O] busy [S] bad [C] service general [SSEP] [A] it [O] good [S] great [C] service general [SSEP] [A] seating [O] promptly [S] great [C] service general [SSEP] [A] service [O] quick [S] great [C] service general', '[A] it [O] busy [C] service general [S] bad [SSEP] [A] it [O] good [C] service general [S] great [SSEP] [A] seating [O] promptly [C] service general [S] great [SSEP] [A] service [O] quick [C] service general [S] great', '[A] it [S] bad [O] busy [C] service general [SSEP] [A] it [S] great [O] good [C] service general [SSEP] [A] seating [S] great [O] promptly [C] service general [SSEP] [A] service [S] great [O] quick [C] service general', '[O] busy [A] it [C] service general [S] bad [SSEP] [O] good [A] it [C] service general [S] great [SSEP] [O] promptly [A] it [C] service general [S] great [SSEP] [O] quick [A] service [C] service general [S] great', '[O] busy [A] it [S] bad [C] service general [SSEP] [O] good [A] it [S] great [C] service general [SSEP] [O] promptly [A] it [S] great [C] service general [SSEP] [O] quick [A] service [S] great [C] service general']

task, data: acos rest16
target: [('food quality', 'burritos', 'great', 'good'), ('food quality', 'enchiladas', 'great', 'good'), ('food quality', 'null', 'great', 'good'), ('food quality', 'taco salads', 'great', 'good'), ('restaurant general', 'place', 'great', 'love')]
output: ['[A] burritos [O] love [S] great [C] food quality', '[A] enchiladas [O] love [S] great [C] food quality', '[A] null [O] good [S] great [C] food quality', '[A] taco salads [O] love [S] great [C] food quality']
sent: ['everything', 'i', "'", 've', 'had', 'here', 'is', 'good', ',', 'taco', 'salads', ',', 'burritos', ',', 'enchiladas', 'i', 'love', 'this', 'place', '.']
counter: {('food quality', 'null', 'great', 'good'): 5, ('food quality', 'taco salads', 'great', 'love'): 5, ('food quality', 'burritos', 'great', 'love'): 5, ('food quality', 'enchiladas', 'great', 'love'): 5}
output quads: ['[A] null [O] good [S] great [C] food quality', '[A] taco salads [O] love [S] great [C] food quality', '[A] burritos [O] love [S] great [C] food quality', '[A] enchiladas [O] love [S] great [C] food quality']
multi_path: ['[A] it [O] good [S] great [C] food quality [SSEP] [A] taco salads [O] love [S] great [C] food quality [SSEP] [A] burritos [O] love [S] great [C] food quality [SSEP] [A] enchiladas [O] love [S] great [C] food quality', '[A] it [O] good [C] food quality [S] great [SSEP] [A] taco salads [O] love [C] food quality [S] great [SSEP] [A] burritos [O] love [C] food quality [S] great [SSEP] [A] enchiladas [O] love [C] food quality [S] great', '[A] it [S] great [O] good [C] food quality [SSEP] [A] taco salads [S] great [O] love [C] food quality [SSEP] [A] burritos [S] great [O] love [C] food quality [SSEP] [A] enchiladas [S] great [O] love [C] food quality', '[O] good [A] it [C] food quality [S] great [SSEP] [O] love [A] taco salads [C] food quality [S] great [SSEP] [O] love [A] burritos [C] food quality [S] great [SSEP] [O] love [A] enchiladas [C] food quality [S] great', '[O] good [A] it [S] great [C] food quality [SSEP] [O] love [A] taco salads [S] great [C] food quality [SSEP] [O] love [A] burritos [S] great [C] food quality [SSEP] [O] love [A] enchiladas [S] great [C] food quality']

task, data: acos rest16
target: [('food quality', 'food', 'great', 'great'), ('food style_options', 'food', 'great', 'bonus')]
output: ['[A] food [O] great [S] great [C] food style_options']
sent: ['the', 'presentation', 'of', 'the', 'food', 'was', 'an', 'added', 'bonus', ',', 'it', 'looked', 'just', 'as', 'great', 'as', 'it', 'tasted', '!']
counter: {('food style_options', 'food', 'great', 'great'): 5}
output quads: ['[A] food [O] great [S] great [C] food style_options']
multi_path: ['[A] food [O] great [S] great [C] food style_options', '[A] food [O] great [C] food style_options [S] great', '[A] food [S] great [O] great [C] food style_options', '[O] great [A] food [C] food style_options [S] great', '[O] great [A] food [S] great [C] food style_options']

task, data: acos rest16
target: [('food quality', 'chicken shawarma', 'great', 'best')]
output: ['[A] chicken shawarma [O] raves [S] great [C] food quality']
sent: ['my', 'best', 'friend', 'had', 'the', 'chicken', 'shawarma', 'and', 'she', 'still', 'raves', 'about', 'it', 'being', 'the', 'best', 'anywhere', '!']
counter: {('food quality', 'chicken shawarma', 'great', 'raves'): 5}
output quads: ['[A] chicken shawarma [O] raves [S] great [C] food quality']
multi_path: ['[A] chicken shawarma [O] raves [S] great [C] food quality', '[A] chicken shawarma [O] raves [C] food quality [S] great', '[A] chicken shawarma [S] great [O] raves [C] food quality', '[O] raves [A] chicken shawarma [C] food quality [S] great', '[O] raves [A] chicken shawarma [S] great [C] food quality']

task, data: acos rest16
target: [('restaurant general', 'open sesame', 'great', 'null')]
output: ['[A] sesame [O] null [S] great [C] food quality']
sent: ['go', 'to', 'open', 'sesame', '!', '!', '!']
counter: {('food quality', 'sesame', 'great', 'null'): 5}
output quads: ['[A] sesame [O] null [S] great [C] food quality']
multi_path: ['[A] sesame [O] null [S] great [C] food quality', '[A] sesame [O] null [C] food quality [S] great', '[A] sesame [S] great [O] null [C] food quality', '[O] null [A] sesame [C] food quality [S] great', '[O] null [A] sesame [S] great [C] food quality']

task, data: acos rest16
target: [('food quality', 'food', 'great', 'incredible'), ('food quality', 'lunch', 'bad', 'inconsistent')]
output: ['[A] food [O] inconsistent [S] bad [C] food quality', '[A] food [O] incredible [S] great [C] food quality']
sent: ['–', 'the', 'food', 'is', 'here', 'is', 'incredible', ',', 'though', 'the', 'quality', 'is', 'inconsistent', 'during', 'lunch', '.']
counter: {('food quality', 'food', 'great', 'incredible'): 5, ('food quality', 'food', 'bad', 'inconsistent'): 5}
output quads: ['[A] food [O] incredible [S] great [C] food quality', '[A] food [O] inconsistent [S] bad [C] food quality']
multi_path: ['[A] food [O] incredible [S] great [C] food quality [SSEP] [A] food [O] inconsistent [S] bad [C] food quality', '[A] food [O] incredible [C] food quality [S] great [SSEP] [A] food [O] inconsistent [C] food quality [S] bad', '[A] food [S] great [O] incredible [C] food quality [SSEP] [A] food [S] bad [O] inconsistent [C] food quality', '[O] incredible [A] food [C] food quality [S] great [SSEP] [O] inconsistent [A] food [C] food quality [S] bad', '[O] incredible [A] food [S] great [C] food quality [SSEP] [O] inconsistent [A] food [S] bad [C] food quality']

task, data: acos rest16
target: [('food prices', 'open sesame combo plate', 'great', 'bargain'), ('food style_options', 'open sesame combo plate', 'great', 'null')]
output: ['[A] open sesame combo plate [O] bargain [S] great [C] food prices']
sent: ['the', 'open', 'sesame', 'combo', 'plate', 'is', 'a', 'bargain', 'for', 'the', 'heap', 'of', 'food', 'given', '.']
counter: {('food prices', 'open sesame combo plate', 'great', 'bargain'): 5}
output quads: ['[A] open sesame combo plate [O] bargain [S] great [C] food prices']
multi_path: ['[A] open sesame combo plate [O] bargain [S] great [C] food prices', '[A] open sesame combo plate [O] bargain [C] food prices [S] great', '[A] open sesame combo plate [S] great [O] bargain [C] food prices', '[O] bargain [A] open sesame combo plate [C] food prices [S] great', '[O] bargain [A] open sesame combo plate [S] great [C] food prices']

task, data: acos rest16
target: [('food quality', 'hummus', 'great', 'best'), ('food style_options', 'hummus', 'great', 'best')]
output: ['[A] hummus [O] best [S] great [C] food quality', '[A] olive oil [O] fragrant [S] great [C] food quality']
sent: ['also', ',', 'they', 'serve', 'the', 'best', 'hummus', 'in', 'america', ',', 'with', 'a', 'drizzle', 'of', 'fragrant', 'olive', 'oil', '(', 'which', ',', 'i', 'believe', 'is', 'the', 'traditional', 'way', ')', '!']
counter: {('food quality', 'hummus', 'great', 'best'): 5, ('food quality', 'olive oil', 'great', 'fragrant'): 5}
output quads: ['[A] hummus [O] best [S] great [C] food quality', '[A] olive oil [O] fragrant [S] great [C] food quality']
multi_path: ['[A] hummus [O] best [S] great [C] food quality [SSEP] [A] olive oil [O] fragrant [S] great [C] food quality', '[A] hummus [O] best [C] food quality [S] great [SSEP] [A] olive oil [O] fragrant [C] food quality [S] great', '[A] hummus [S] great [O] best [C] food quality [SSEP] [A] olive oil [S] great [O] fragrant [C] food quality', '[O] best [A] hummus [C] food quality [S] great [SSEP] [O] fragrant [A] olive oil [C] food quality [S] great', '[O] best [A] hummus [S] great [C] food quality [SSEP] [O] fragrant [A] olive oil [S] great [C] food quality']

task, data: acos rest16
target: [('restaurant miscellaneous', 'seating', 'bad', 'crowded'), ('service general', 'service', 'bad', 'slow')]
output: ['[A] seating [O] drawback [S] bad [C] restaurant miscellaneous', '[A] service [O] slow [S] bad [C] service general']
sent: ['the', 'only', 'drawback', 'is', 'the', 'crowded', 'seating', 'and', 'the', 'slow', 'service', '.']
counter: {('restaurant miscellaneous', 'seating', 'bad', 'drawback'): 5, ('service general', 'service', 'bad', 'slow'): 5, ('ambience general', 'seating', 'bad', 'crowded'): 2}
output quads: ['[A] seating [O] drawback [S] bad [C] restaurant miscellaneous', '[A] service [O] slow [S] bad [C] service general']
multi_path: ['[A] seating [O] drawback [S] bad [C] restaurant miscellaneous [SSEP] [A] service [O] slow [S] bad [C] service general', '[A] seating [O] drawback [C] restaurant miscellaneous [S] bad [SSEP] [A] seating [O] crowded [C] ambience general [S] bad [SSEP] [A] service [O] slow [C] service general [S] bad', '[A] seating [S] bad [O] drawback [C] restaurant miscellaneous [SSEP] [A] service [S] bad [O] slow [C] service general', '[O] drawback [A] seating [C] restaurant miscellaneous [S] bad [SSEP] [O] crowded [A] seating [C] ambience general [S] bad [SSEP] [O] slow [A] service [C] service general [S] bad', '[O] drawback [A] seating [S] bad [C] restaurant miscellaneous [SSEP] [O] slow [A] service [S] bad [C] service general']

task, data: acos rest16
target: [('food quality', 'fried brie with fruit', 'great', 'good'), ('food quality', 'goat cheese pizza', 'great', 'good'), ('food quality', 'grilled asparagus', 'great', 'good'), ('food quality', 'shoe string onions', 'great', 'good')]
output: ['[A] fried brie with fruit [O] good [S] great [C] food quality', '[A] goat cheese pizza [O] good [S] great [C] food quality', '[A] grilled asparagus [O] good [S] great [C] food quality', '[A] shoe string onions [O] good [S] great [C] food quality', '[A] small plates [O] good [S] great [C] food style_options']
sent: ['we', 'ordered', 'a', 'selection', 'of', 'the', 'small', 'plates', ',', 'and', 'the', 'shoe', 'string', 'onions', ',', 'goat', 'cheese', 'pizza', ',', 'grilled', 'asparagus', 'and', 'fried', 'brie', 'with', 'fruit', 'were', 'all', 'very', 'good', '.']
counter: {('food style_options', 'small plates', 'great', 'good'): 5, ('food quality', 'shoe string onions', 'great', 'good'): 5, ('food quality', 'goat cheese pizza', 'great', 'good'): 5, ('food quality', 'grilled asparagus', 'great', 'good'): 5, ('food quality', 'fried brie with fruit', 'great', 'good'): 5}
output quads: ['[A] small plates [O] good [S] great [C] food style_options', '[A] shoe string onions [O] good [S] great [C] food quality', '[A] goat cheese pizza [O] good [S] great [C] food quality', '[A] grilled asparagus [O] good [S] great [C] food quality', '[A] fried brie with fruit [O] good [S] great [C] food quality']
multi_path: ['[A] small plates [O] good [S] great [C] food style_options [SSEP] [A] shoe string onions [O] good [S] great [C] food quality [SSEP] [A] goat cheese pizza [O] good [S] great [C] food quality [SSEP] [A] grilled asparagus [O] good [S] great [C] food quality [SSEP] [A] fried brie with fruit [O] good [S] great [C] food quality', '[A] small plates [O] good [C] food style_options [S] great [SSEP] [A] shoe string onions [O] good [C] food quality [S] great [SSEP] [A] goat cheese pizza [O] good [C] food quality [S] great [SSEP] [A] grilled asparagus [O] good [C] food quality [S] great [SSEP] [A] fried brie with fruit [O] good [C] food quality [S] great', '[A] small plates [S] great [O] good [C] food style_options [SSEP] [A] shoe string onions [S] great [O] good [C] food quality [SSEP] [A] goat cheese pizza [S] great [O] good [C] food quality [SSEP] [A] grilled asparagus [S] great [O] good [C] food quality [SSEP] [A] fried brie with fruit [S] great [O] good [C] food quality', '[O] good [A] small plates [C] food style_options [S] great [SSEP] [O] good [A] shoe string onions [C] food quality [S] great [SSEP] [O] good [A] goat cheese pizza [C] food quality [S] great [SSEP] [O] good [A] grilled asparagus [C] food quality [S] great [SSEP] [O] good [A] fried brie with fruit [C] food quality [S] great', '[O] good [A] small plates [S] great [C] food style_options [SSEP] [O] good [A] shoe string onions [S] great [C] food quality [SSEP] [O] good [A] goat cheese pizza [S] great [C] food quality [SSEP] [O] good [A] grilled asparagus [S] great [C] food quality [SSEP] [O] good [A] fried brie with fruit [S] great [C] food quality']

task, data: acos rest16
target: [('drinks style_options', 'diverse wine', 'great', 'most')]
output: ['[A] wine list [O] best [S] great [C] drinks style_options', '[A] wine list [O] diverse [S] great [C] drinks style_options']
sent: ['–', 'ray', "'", 's', '(', 'suprisingly', ')', 'has', 'the', 'city', "'", 's', 'best', '&', 'most', 'diverse', 'wine', 'list', '.']
counter: {('drinks style_options', 'wine list', 'great', 'best'): 5, ('drinks style_options', 'wine list', 'great', 'diverse'): 5}
output quads: ['[A] wine list [O] best [S] great [C] drinks style_options', '[A] wine list [O] diverse [S] great [C] drinks style_options']
multi_path: ['[A] wine list [O] best [S] great [C] drinks style_options [SSEP] [A] wine list [O] diverse [S] great [C] drinks style_options', '[A] wine list [O] best [C] drinks style_options [S] great [SSEP] [A] wine list [O] diverse [C] drinks style_options [S] great', '[A] wine list [S] great [O] best [C] drinks style_options [SSEP] [A] wine list [S] great [O] diverse [C] drinks style_options', '[O] best [A] wine list [C] drinks style_options [S] great [SSEP] [O] diverse [A] wine list [C] drinks style_options [S] great', '[O] best [A] wine list [S] great [C] drinks style_options [SSEP] [O] diverse [A] wine list [S] great [C] drinks style_options']

task, data: acos rest16
target: [('drinks quality', 'wine', 'bad', 'null')]
output: ['[A] wine [O] null [S] great [C] drinks quality']
sent: ['i', 'would', 'go', 'back', 'for', 'the', 'wine', 'experience', 'alone', '.']
counter: {('drinks quality', 'wine', 'great', 'null'): 5}
output quads: ['[A] wine [O] null [S] great [C] drinks quality']
multi_path: ['[A] wine [O] null [S] great [C] drinks quality', '[A] wine [O] null [C] drinks quality [S] great', '[A] wine [S] great [O] null [C] drinks quality', '[O] null [A] wine [C] drinks quality [S] great', '[O] null [A] wine [S] great [C] drinks quality']

task, data: acos rest16
target: [('restaurant general', 'place', 'bad', 'null')]
output: ['[A] place [O] not the place [S] bad [C] restaurant general']
sent: ['not', 'the', 'place', 'it', 'once', 'was']
counter: {('restaurant general', 'place', 'bad', 'not the place'): 5}
output quads: ['[A] place [O] not the place [S] bad [C] restaurant general']
multi_path: ['[A] place [O] not the place [S] bad [C] restaurant general', '[A] place [O] not the place [C] restaurant general [S] bad', '[A] place [S] bad [O] not the place [C] restaurant general', '[O] not the place [A] place [C] restaurant general [S] bad', '[O] not the place [A] place [S] bad [C] restaurant general']

task, data: acos rest16
target: [('restaurant general', 'scooner or later', 'bad', 'null')]
output: ['[A] scooner [O] null [S] bad [C] restaurant general']
sent: ['perhaps', 'now', ',', 'scooner', 'or', 'later', 'falls', 'into', 'the', '`', '`', 'dive', "'", "'", 'category', '.']
counter: {('restaurant general', 'scooner', 'bad', 'null'): 5}
output quads: ['[A] scooner [O] null [S] bad [C] restaurant general']
multi_path: ['[A] scooner [O] null [S] bad [C] restaurant general', '[A] scooner [O] null [C] restaurant general [S] bad', '[A] scooner [S] bad [O] null [C] restaurant general', '[O] null [A] scooner [C] restaurant general [S] bad', '[O] null [A] scooner [S] bad [C] restaurant general']

task, data: acos rest16
target: [('food prices', 'food', 'bad', 'null'), ('food quality', 'food', 'bad', 'null'), ('service general', 'service', 'bad', 'worst'), ('service general', 'the', 'bad', 'the')]
output: ['[A] food [O] null [S] bad [C] food quality', '[A] potions [O] downsizing [S] bad [C] drinks style_options', '[A] service [O] worst [S] bad [C] service general']
sent: ['the', 'food', 'is', 'not', 'what', 'it', 'once', 'was', '(', 'potions', 'have', 'seriously', 'seen', 'downsizing', ')', 'prices', 'have', 'gone', 'up', ',', 'and', 'the', 'service', 'is', 'the', 'worst', 'i', 'have', 'experienced', 'anywhere', '(', 'including', 'mainland', 'europe', ')', '.']
counter: {('food quality', 'food', 'bad', 'not what it once was'): 2, ('drinks style_options', 'potions', 'bad', 'downsizing'): 3, ('service general', 'service', 'bad', 'worst'): 5, ('food quality', 'food', 'bad', 'null'): 3, ('drinks style_options', 'potions', 'bad', 'null'): 2}
output quads: ['[A] potions [O] downsizing [S] bad [C] drinks style_options', '[A] service [O] worst [S] bad [C] service general', '[A] food [O] null [S] bad [C] food quality']
multi_path: ['[A] food [O] not what it once was [S] bad [C] food quality [SSEP] [A] potions [O] downsizing [S] bad [C] drinks style_options [SSEP] [A] service [O] worst [S] bad [C] service general', '[A] food [O] not what it once was [C] food quality [S] bad [SSEP] [A] potions [O] downsizing [C] drinks style_options [S] bad [SSEP] [A] service [O] worst [C] service general [S] bad', '[A] food [S] bad [O] null [C] food quality [SSEP] [A] potions [S] bad [O] downsizing [C] drinks style_options [SSEP] [A] service [S] bad [O] worst [C] service general', '[O] null [A] food [C] food quality [S] bad [SSEP] [O] null [A] potions [C] drinks style_options [S] bad [SSEP] [O] worst [A] service [C] service general [S] bad', '[O] null [A] food [S] bad [C] food quality [SSEP] [O] null [A] potions [S] bad [C] drinks style_options [SSEP] [O] worst [A] service [S] bad [C] service general']

task, data: acos rest16
target: [('service general', 'owners', 'bad', 'worst')]
output: ['[A] owners [O] worst [S] bad [C] restaurant general']
sent: ['what', 'may', 'be', 'interesting', 'to', 'most', 'is', 'the', 'worst', 'sevice', '/', 'attitude', 'comes', 'from', 'the', 'owners', 'of', 'this', 'establishment', '.']
counter: {('restaurant general', 'owners', 'bad', 'worst'): 5}
output quads: ['[A] owners [O] worst [S] bad [C] restaurant general']
multi_path: ['[A] owners [O] worst [S] bad [C] restaurant general', '[A] owners [O] worst [C] restaurant general [S] bad', '[A] owners [S] bad [O] worst [C] restaurant general', '[O] worst [A] owners [C] restaurant general [S] bad', '[O] worst [A] owners [S] bad [C] restaurant general']

task, data: acos rest16
target: [('restaurant general', 'establishment', 'bad', 'null')]
output: ['[A] establishment [O] decline [S] bad [C] restaurant general']
sent: ['this', 'establishment', 'really', 'made', 'a', 'marked', 'decline', 'after', '(', 'and', 'this', 'is', 'recurring', 'story', ')', 'the', 'airing', 'of', 'food', 'televisions', '`', '`', 'diners', ',', 'drive', '-', 'ins', ',', 'and', 'dives', "'", "'", 'hosted', 'by', 'guy', 'fieri', ',', 'in', 'which', 'schooner', 'or', 'later', 'was', 'subject', 'of', '.']
counter: {('restaurant general', 'establishment', 'bad', 'decline'): 5}
output quads: ['[A] establishment [O] decline [S] bad [C] restaurant general']
multi_path: ['[A] establishment [O] decline [S] bad [C] restaurant general', '[A] establishment [O] decline [C] restaurant general [S] bad', '[A] establishment [S] bad [O] decline [C] restaurant general', '[O] decline [A] establishment [C] restaurant general [S] bad', '[O] decline [A] establishment [S] bad [C] restaurant general']

task, data: acos rest16
target: [('ambience general', 'place', 'great', 'cool'), ('food quality', 'coffee', 'great', 'best'), ('food quality', 'pizza', 'great', 'best')]
output: ['[A] coffee [O] best [S] great [C] drinks quality', '[A] pizza [O] best [S] great [C] food quality', '[A] place [O] cool [S] great [C] ambience general', '[A] place [O] open [S] great [C] ambience general']
sent: ['open', '&', 'cool', 'place', 'with', 'the', 'best', 'pizza', 'and', 'coffee']
counter: {('ambience general', 'place', 'great', 'open'): 5, ('ambience general', 'place', 'great', 'cool'): 5, ('food quality', 'pizza', 'great', 'best'): 5, ('drinks quality', 'coffee', 'great', 'best'): 5}
output quads: ['[A] place [O] open [S] great [C] ambience general', '[A] place [O] cool [S] great [C] ambience general', '[A] pizza [O] best [S] great [C] food quality', '[A] coffee [O] best [S] great [C] drinks quality']
multi_path: ['[A] place [O] open [S] great [C] ambience general [SSEP] [A] place [O] cool [S] great [C] ambience general [SSEP] [A] pizza [O] best [S] great [C] food quality [SSEP] [A] coffee [O] best [S] great [C] drinks quality', '[A] place [O] open [C] ambience general [S] great [SSEP] [A] place [O] cool [C] ambience general [S] great [SSEP] [A] pizza [O] best [C] food quality [S] great [SSEP] [A] coffee [O] best [C] drinks quality [S] great', '[A] place [S] great [O] open [C] ambience general [SSEP] [A] place [S] great [O] cool [C] ambience general [SSEP] [A] pizza [S] great [O] best [C] food quality [SSEP] [A] coffee [S] great [O] best [C] drinks quality', '[O] open [A] place [C] ambience general [S] great [SSEP] [O] cool [A] place [C] ambience general [S] great [SSEP] [O] best [A] pizza [C] food quality [S] great [SSEP] [O] best [A] coffee [C] drinks quality [S] great', '[O] open [A] place [S] great [C] ambience general [SSEP] [O] cool [A] place [S] great [C] ambience general [SSEP] [O] best [A] pizza [S] great [C] food quality [SSEP] [O] best [A] coffee [S] great [C] drinks quality']

task, data: acos rest16
target: [('service general', 'servers behind the counter', 'great', 'friendly'), ('service general', 'servers behind the counter', 'great', 'helpful')]
output: ['[A] servers [O] friendly [S] great [C] service general', '[A] servers [O] helpful [S] great [C] service general']
sent: ['the', 'servers', 'behind', 'the', 'counter', 'are', 'always', 'friendly', 'and', 'helpful', '.']
counter: {('service general', 'servers', 'great', 'friendly'): 5, ('service general', 'servers', 'great', 'helpful'): 5}
output quads: ['[A] servers [O] friendly [S] great [C] service general', '[A] servers [O] helpful [S] great [C] service general']
multi_path: ['[A] servers [O] friendly [S] great [C] service general [SSEP] [A] servers [O] helpful [S] great [C] service general', '[A] servers [O] friendly [C] service general [S] great [SSEP] [A] servers [O] helpful [C] service general [S] great', '[A] servers [S] great [O] friendly [C] service general [SSEP] [A] servers [S] great [O] helpful [C] service general', '[O] friendly [A] servers [C] service general [S] great [SSEP] [O] helpful [A] servers [C] service general [S] great', '[O] friendly [A] servers [S] great [C] service general [SSEP] [O] helpful [A] servers [S] great [C] service general']

task, data: acos rest16
target: [('food quality', 'food', 'great', 'enjoy'), ('restaurant miscellaneous', 'place', 'great', 'great')]
output: ['[A] place [O] great [S] great [C] restaurant miscellaneous']
sent: ['it', "'", 's', 'a', 'great', 'place', 'to', 'enjoy', 'food', 'and', 'meet', 'friends', '.']
counter: {('restaurant miscellaneous', 'place', 'great', 'great'): 5, ('food quality', 'food', 'great', 'enjoy'): 1}
output quads: ['[A] place [O] great [S] great [C] restaurant miscellaneous']
multi_path: ['[A] place [O] great [S] great [C] restaurant miscellaneous', '[A] place [O] great [C] restaurant miscellaneous [S] great', '[A] place [S] great [O] great [C] restaurant miscellaneous', '[O] great [A] place [C] restaurant miscellaneous [S] great [SSEP] [O] enjoy [A] food [C] food quality [S] great', '[O] great [A] place [S] great [C] restaurant miscellaneous']

task, data: acos rest16
target: [('food quality', 'food', 'great', 'amazing'), ('restaurant general', 'null', 'great', 'null'), ('service general', 'people', 'great', 'nice')]
output: ['[A] food [O] amazing [S] great [C] food quality', '[A] people [O] nice [S] great [C] service general']
sent: ['what', 'else', 'can', 'you', 'say', 'nice', 'people', 'amazing', 'food', 'wow']
counter: {('service general', 'people', 'great', 'nice'): 5, ('food quality', 'food', 'great', 'amazing'): 5}
output quads: ['[A] people [O] nice [S] great [C] service general', '[A] food [O] amazing [S] great [C] food quality']
multi_path: ['[A] people [O] nice [S] great [C] service general [SSEP] [A] food [O] amazing [S] great [C] food quality', '[A] people [O] nice [C] service general [S] great [SSEP] [A] food [O] amazing [C] food quality [S] great', '[A] people [S] great [O] nice [C] service general [SSEP] [A] food [S] great [O] amazing [C] food quality', '[O] nice [A] people [C] service general [S] great [SSEP] [O] amazing [A] food [C] food quality [S] great', '[O] nice [A] people [S] great [C] service general [SSEP] [O] amazing [A] food [S] great [C] food quality']

task, data: acos rest16
target: [('food quality', 'eggs', 'great', 'delicious'), ('food quality', 'fresh fruit', 'great', 'delicious'), ('food quality', 'null', 'great', 'delicious'), ('food quality', 'pancakes', 'great', 'delicious'), ('food quality', 'potatoes', 'great', 'delicious'), ('food quality', 'yogurt', 'great', 'delicious')]
output: ['[A] eggs [O] null [S] great [C] food quality', '[A] fruit [O] fresh [S] great [C] food quality', '[A] pancakes [O] null [S] great [C] food quality', '[A] potatoes [O] null [S] great [C] food quality', '[A] yogurt [O] delicious [S] great [C] food quality']
sent: ['–', 'eggs', ',', 'pancakes', ',', 'potatoes', ',', 'fresh', 'fruit', 'and', 'yogurt', '-', '-', 'everything', 'they', 'serve', 'is', 'delicious', '.']
counter: {('food quality', 'eggs', 'great', 'null'): 5, ('food quality', 'pancakes', 'great', 'null'): 5, ('food quality', 'potatoes', 'great', 'null'): 5, ('food quality', 'fruit', 'great', 'fresh'): 5, ('food quality', 'yogurt', 'great', 'delicious'): 5}
output quads: ['[A] eggs [O] null [S] great [C] food quality', '[A] pancakes [O] null [S] great [C] food quality', '[A] potatoes [O] null [S] great [C] food quality', '[A] fruit [O] fresh [S] great [C] food quality', '[A] yogurt [O] delicious [S] great [C] food quality']
multi_path: ['[A] eggs [O] null [S] great [C] food quality [SSEP] [A] pancakes [O] null [S] great [C] food quality [SSEP] [A] potatoes [O] null [S] great [C] food quality [SSEP] [A] fruit [O] fresh [S] great [C] food quality [SSEP] [A] yogurt [O] delicious [S] great [C] food quality', '[A] eggs [O] null [C] food quality [S] great [SSEP] [A] pancakes [O] null [C] food quality [S] great [SSEP] [A] potatoes [O] null [C] food quality [S] great [SSEP] [A] fruit [O] fresh [C] food quality [S] great [SSEP] [A] yogurt [O] delicious [C] food quality [S] great', '[A] eggs [S] great [O] null [C] food quality [SSEP] [A] pancakes [S] great [O] null [C] food quality [SSEP] [A] potatoes [S] great [O] null [C] food quality [SSEP] [A] fruit [S] great [O] fresh [C] food quality [SSEP] [A] yogurt [S] great [O] delicious [C] food quality', '[O] null [A] eggs [C] food quality [S] great [SSEP] [O] null [A] pancakes [C] food quality [S] great [SSEP] [O] null [A] potatoes [C] food quality [S] great [SSEP] [O] fresh [A] fruit [C] food quality [S] great [SSEP] [O] delicious [A] yogurt [C] food quality [S] great', '[O] null [A] eggs [S] great [C] food quality [SSEP] [O] null [A] pancakes [S] great [C] food quality [SSEP] [O] null [A] potatoes [S] great [C] food quality [SSEP] [O] fresh [A] fruit [S] great [C] food quality [SSEP] [O] delicious [A] yogurt [S] great [C] food quality']

task, data: acos rest16
target: [('restaurant miscellaneous', 'place', 'great', 'best')]
output: ['[A] breakfast [O] leisure [S] great [C] food quality', "[A] farmer's market [O] best [S] great [C] restaurant miscellaneous", '[A] place [O] best [S] great [C] location general']
sent: ['the', 'best', 'place', 'for', 'a', 'leisure', 'sunday', 'breakfast', 'amidst', 'yachts', ',', 'then', 'take', 'a', 'stroll', 'through', 'the', 'nearby', 'farmer', "'", 's', 'market', '.']
counter: {('location general', 'place', 'great', 'best'): 5, ('food quality', 'breakfast', 'great', 'leisure'): 4, ('restaurant miscellaneous', "farmer's market", 'great', 'best'): 3, ('food quality', 'leisure sunday breakfast', 'great', 'leisure'): 1, ('restaurant miscellaneous', "farmer's market", 'great', 'null'): 2}
output quads: ['[A] place [O] best [S] great [C] location general', '[A] breakfast [O] leisure [S] great [C] food quality', "[A] farmer's market [O] best [S] great [C] restaurant miscellaneous"]
multi_path: ["[A] place [O] best [S] great [C] location general [SSEP] [A] breakfast [O] leisure [S] great [C] food quality [SSEP] [A] farmer's market [O] best [S] great [C] restaurant miscellaneous", "[A] place [O] best [C] location general [S] great [SSEP] [A] leisure sunday breakfast [O] leisure [C] food quality [S] great [SSEP] [A] farmer's market [O] best [C] restaurant miscellaneous [S] great", "[A] place [S] great [O] best [C] location general [SSEP] [A] breakfast [S] great [O] leisure [C] food quality [SSEP] [A] farmer's market [S] great [O] best [C] restaurant miscellaneous", "[O] best [A] place [C] location general [S] great [SSEP] [O] leisure [A] breakfast [C] food quality [S] great [SSEP] [O] null [A] farmer's market [C] restaurant miscellaneous [S] great", "[O] best [A] place [S] great [C] location general [SSEP] [O] leisure [A] breakfast [S] great [C] food quality [SSEP] [O] null [A] farmer's market [S] great [C] restaurant miscellaneous"]

task, data: acos rest16
target: [('food quality', 'fish on the omikase platter', 'great', 'decadent'), ('food quality', 'fish on the omikase platter', 'great', 'perfect'), ('food quality', 'meal', 'great', 'great')]
output: ['[A] fish [O] perfect [S] great [C] food quality', '[A] fish on the omikase platter [O] decadent [S] great [C] food quality', '[A] meal [O] great [S] great [C] food quality']
sent: ['great', 'meal', '–', 'the', 'fish', 'on', 'the', 'omikase', 'platter', 'was', 'absolutely', 'decadent', '-', '-', 'there', 'was', 'none', 'of', 'the', 'stringiness', 'that', 'sometimes', 'accompanies', 'fair', 'sushi', '-', '-', 'this', 'fish', 'was', 'perfect', '!', '!', '!', '!']
counter: {('food quality', 'meal', 'great', 'great'): 5, ('food quality', 'fish on the omikase platter', 'great', 'decadent'): 5, ('food quality', 'fish', 'great', 'perfect'): 5}
output quads: ['[A] meal [O] great [S] great [C] food quality', '[A] fish on the omikase platter [O] decadent [S] great [C] food quality', '[A] fish [O] perfect [S] great [C] food quality']
multi_path: ['[A] meal [O] great [S] great [C] food quality [SSEP] [A] fish on the omikase platter [O] decadent [S] great [C] food quality [SSEP] [A] fish [O] perfect [S] great [C] food quality', '[A] meal [O] great [C] food quality [S] great [SSEP] [A] fish on the omikase platter [O] decadent [C] food quality [S] great [SSEP] [A] fish [O] perfect [C] food quality [S] great', '[A] meal [S] great [O] great [C] food quality [SSEP] [A] fish on the omikase platter [S] great [O] decadent [C] food quality [SSEP] [A] fish [S] great [O] perfect [C] food quality', '[O] great [A] meal [C] food quality [S] great [SSEP] [O] decadent [A] fish on the omikase platter [C] food quality [S] great [SSEP] [O] perfect [A] fish [C] food quality [S] great', '[O] great [A] meal [S] great [C] food quality [SSEP] [O] decadent [A] fish on the omikase platter [S] great [C] food quality [SSEP] [O] perfect [A] fish [S] great [C] food quality']

task, data: acos rest16
target: [('service general', 'waitstaff', 'great', 'accomodating')]
output: ['[A] waitstaff [O] unbelievably accomodating [S] great [C] service general']
sent: ['plus', ',', 'i', 'am', 'allergic', 'to', 'rice', ',', 'and', 'the', 'waitstaff', 'was', 'unbelievably', 'accomodating', '-', '-', 'did', 'n', "'", 't', 'even', 'bat', 'an', 'eye', '!']
counter: {('service general', 'waitstaff', 'great', 'unbelievably accomodating'): 5}
output quads: ['[A] waitstaff [O] unbelievably accomodating [S] great [C] service general']
multi_path: ['[A] waitstaff [O] unbelievably accomodating [S] great [C] service general', '[A] waitstaff [O] unbelievably accomodating [C] service general [S] great', '[A] waitstaff [S] great [O] unbelievably accomodating [C] service general', '[O] unbelievably accomodating [A] waitstaff [C] service general [S] great', '[O] unbelievably accomodating [A] waitstaff [S] great [C] service general']

task, data: acos rest16
target: [('drinks quality', 'sake', 'great', 'perfect'), ('service general', 'waiter', 'great', 'null')]
output: ['[A] waiter [O] perfect [S] great [C] service general']
sent: ['and', 'the', 'waiter', 'suggested', 'a', 'perfect', 'sake', '!', '!']
counter: {('service general', 'waiter', 'great', 'perfect'): 5}
output quads: ['[A] waiter [O] perfect [S] great [C] service general']
multi_path: ['[A] waiter [O] perfect [S] great [C] service general', '[A] waiter [O] perfect [C] service general [S] great', '[A] waiter [S] great [O] perfect [C] service general', '[O] perfect [A] waiter [C] service general [S] great', '[O] perfect [A] waiter [S] great [C] service general']

task, data: acos rest16
target: [('food quality', 'nigiri', 'great', 'null'), ('food quality', 'rolls', 'great', 'tasty'), ('food quality', 'sashmi', 'great', 'null')]
output: ['[A] nigiri [O] melt [S] great [C] food quality', '[A] rolls [O] tasty [S] great [C] food quality', '[A] sashmi [O] melt [S] great [C] food quality']
sent: ['melt', 'in', 'your', 'mouth', 'nigiri', 'and', 'sashmi', ',', 'and', 'very', 'tasty', 'rolls', 'too', '.']
counter: {('food quality', 'nigiri', 'great', 'melt'): 5, ('food quality', 'sashmi', 'great', 'melt'): 5, ('food quality', 'rolls', 'great', 'tasty'): 5}
output quads: ['[A] nigiri [O] melt [S] great [C] food quality', '[A] sashmi [O] melt [S] great [C] food quality', '[A] rolls [O] tasty [S] great [C] food quality']
multi_path: ['[A] nigiri [O] melt [S] great [C] food quality [SSEP] [A] sashmi [O] melt [S] great [C] food quality [SSEP] [A] rolls [O] tasty [S] great [C] food quality', '[A] nigiri [O] melt [C] food quality [S] great [SSEP] [A] sashmi [O] melt [C] food quality [S] great [SSEP] [A] rolls [O] tasty [C] food quality [S] great', '[A] nigiri [S] great [O] melt [C] food quality [SSEP] [A] sashmi [S] great [O] melt [C] food quality [SSEP] [A] rolls [S] great [O] tasty [C] food quality', '[O] melt [A] nigiri [C] food quality [S] great [SSEP] [O] melt [A] sashmi [C] food quality [S] great [SSEP] [O] tasty [A] rolls [C] food quality [S] great', '[O] melt [A] nigiri [S] great [C] food quality [SSEP] [O] melt [A] sashmi [S] great [C] food quality [SSEP] [O] tasty [A] rolls [S] great [C] food quality']

task, data: acos rest16
target: [('food quality', 'oyster roll', 'great', 'try')]
output: ['[A] oyster roll [O] null [S] great [C] food quality']
sent: ['be', 'sure', 'to', 'try', 'the', 'oyster', 'roll', '.']
counter: {('food quality', 'oyster roll', 'great', 'null'): 5}
output quads: ['[A] oyster roll [O] null [S] great [C] food quality']
multi_path: ['[A] oyster roll [O] null [S] great [C] food quality', '[A] oyster roll [O] null [C] food quality [S] great', '[A] oyster roll [S] great [O] null [C] food quality', '[O] null [A] oyster roll [C] food quality [S] great', '[O] null [A] oyster roll [S] great [C] food quality']

task, data: acos rest16
target: [('food quality', 'sushi', 'great', 'amazing'), ('food quality', 'sushi', 'great', 'best'), ('food quality', 'sushi', 'great', 'delicious'), ('food quality', 'sushi', 'great', 'fantastic'), ('food quality', 'sushi', 'great', 'perfect'), ('food quality', 'sushi', 'great', 'suculent')]
output: ['[A] sushi [O] amazing [S] great [C] food quality', '[A] sushi [O] delicious [S] great [C] food quality', '[A] sushi [O] perfect [S] great [C] food quality', '[A] sushi [O] suculent [S] great [C] food quality']
sent: ['–', 'how', 'to', 'describe', 'the', 'best', 'sushi', 'in', 'nyc', ':', 'hmmmm', ',', 'delicious', ',', 'amazing', ',', 'fantastic', ',', 'suculent', ',', 'perfect', ',', 'nah', ',', 'all', 'of', 'the', 'above', '.']
counter: {('food quality', 'sushi', 'great', 'delicious'): 5, ('food quality', 'sushi', 'great', 'amazing'): 5, ('food quality', 'sushi', 'great', 'suculent'): 5, ('food quality', 'sushi', 'great', 'perfect'): 5}
output quads: ['[A] sushi [O] delicious [S] great [C] food quality', '[A] sushi [O] amazing [S] great [C] food quality', '[A] sushi [O] suculent [S] great [C] food quality', '[A] sushi [O] perfect [S] great [C] food quality']
multi_path: ['[A] sushi [O] delicious [S] great [C] food quality [SSEP] [A] sushi [O] amazing [S] great [C] food quality [SSEP] [A] sushi [O] suculent [S] great [C] food quality [SSEP] [A] sushi [O] perfect [S] great [C] food quality', '[A] sushi [O] delicious [C] food quality [S] great [SSEP] [A] sushi [O] amazing [C] food quality [S] great [SSEP] [A] sushi [O] suculent [C] food quality [S] great [SSEP] [A] sushi [O] perfect [C] food quality [S] great', '[A] sushi [S] great [O] delicious [C] food quality [SSEP] [A] sushi [S] great [O] amazing [C] food quality [SSEP] [A] sushi [S] great [O] suculent [C] food quality [SSEP] [A] sushi [S] great [O] perfect [C] food quality', '[O] delicious [A] sushi [C] food quality [S] great [SSEP] [O] amazing [A] sushi [C] food quality [S] great [SSEP] [O] suculent [A] sushi [C] food quality [S] great [SSEP] [O] perfect [A] sushi [C] food quality [S] great', '[O] delicious [A] sushi [S] great [C] food quality [SSEP] [O] amazing [A] sushi [S] great [C] food quality [SSEP] [O] suculent [A] sushi [S] great [C] food quality [SSEP] [O] perfect [A] sushi [S] great [C] food quality']

task, data: acos rest16
target: [('food prices', 'sushi', 'bad', 'high'), ('food quality', 'sushi', 'great', 'good')]
output: ['[A] null [O] high [S] bad [C] restaurant prices', '[A] sushi [O] good [S] great [C] food quality']
sent: ['good', 'sushi', ',', 'high', 'price']
counter: {('food quality', 'sushi', 'great', 'good'): 5, ('restaurant prices', 'null', 'bad', 'high'): 5}
output quads: ['[A] sushi [O] good [S] great [C] food quality', '[A] null [O] high [S] bad [C] restaurant prices']
multi_path: ['[A] sushi [O] good [S] great [C] food quality [SSEP] [A] it [O] high [S] bad [C] restaurant prices', '[A] sushi [O] good [C] food quality [S] great [SSEP] [A] it [O] high [C] restaurant prices [S] bad', '[A] sushi [S] great [O] good [C] food quality [SSEP] [A] it [S] bad [O] high [C] restaurant prices', '[O] good [A] sushi [C] food quality [S] great [SSEP] [O] high [A] it [C] restaurant prices [S] bad', '[O] good [A] sushi [S] great [C] food quality [SSEP] [O] high [A] it [S] bad [C] restaurant prices']

task, data: acos rest16
target: [('restaurant general', 'sushi place', 'great', 'best')]
output: ['[A] sushi [O] best [S] great [C] food quality']
sent: ['one', 'of', 'the', 'best', 'sushi', 'place', 'in', 'town', '.']
counter: {('food quality', 'sushi', 'great', 'best'): 3, ('restaurant general', 'sushi place', 'great', 'best'): 2}
output quads: ['[A] sushi [O] best [S] great [C] food quality']
multi_path: ['[A] sushi [O] best [S] great [C] food quality', '[A] sushi [O] best [C] food quality [S] great', '[A] sushi [S] great [O] best [C] food quality', '[O] best [A] sushi place [C] restaurant general [S] great', '[O] best [A] sushi place [S] great [C] restaurant general']

task, data: acos rest16
target: [('food quality', 'brunch', 'great', 'null'), ('food quality', 'egg white omelet', 'great', 'freshly prepared'), ('food quality', 'food', 'great', 'freshly prepared')]
output: ['[A] brunch [O] die for [S] great [C] food quality', '[A] egg white omelet [O] specialty [S] great [C] food quality', '[A] food [O] freshly prepared [S] great [C] food quality']
sent: ['brunch', 'at', 'murphy', "'", 's', 'is', 'to', 'die', 'for', ',', 'my', 'specialty', '.', '.', '.', 'egg', 'white', 'omelet', ',', 'the', 'food', 'is', 'always', 'freshly', 'prepared', '.']
counter: {('food quality', 'brunch', 'great', 'die for'): 5, ('food quality', 'egg white omelet', 'great', 'specialty'): 5, ('food quality', 'food', 'great', 'freshly prepared'): 5}
output quads: ['[A] brunch [O] die for [S] great [C] food quality', '[A] egg white omelet [O] specialty [S] great [C] food quality', '[A] food [O] freshly prepared [S] great [C] food quality']
multi_path: ['[A] brunch [O] die for [S] great [C] food quality [SSEP] [A] egg white omelet [O] specialty [S] great [C] food quality [SSEP] [A] food [O] freshly prepared [S] great [C] food quality', '[A] brunch [O] die for [C] food quality [S] great [SSEP] [A] egg white omelet [O] specialty [C] food quality [S] great [SSEP] [A] food [O] freshly prepared [C] food quality [S] great', '[A] brunch [S] great [O] die for [C] food quality [SSEP] [A] egg white omelet [S] great [O] specialty [C] food quality [SSEP] [A] food [S] great [O] freshly prepared [C] food quality', '[O] die for [A] brunch [C] food quality [S] great [SSEP] [O] specialty [A] egg white omelet [C] food quality [S] great [SSEP] [O] freshly prepared [A] food [C] food quality [S] great', '[O] die for [A] brunch [S] great [C] food quality [SSEP] [O] specialty [A] egg white omelet [S] great [C] food quality [SSEP] [O] freshly prepared [A] food [S] great [C] food quality']

task, data: acos rest16
target: [('ambience general', 'spot', 'great', 'perfect'), ('restaurant miscellaneous', 'spot', 'great', 'perfect')]
output: ['[A] spot [O] perfect [S] great [C] restaurant miscellaneous']
sent: ['it', "'", 's', 'the', 'perfect', 'spot', 'for', 'a', 'romantic', 'date', 'for', '2', 'or', 'a', 'secret', 'rendezvous', '!']
counter: {('restaurant miscellaneous', 'spot', 'great', 'perfect'): 5}
output quads: ['[A] spot [O] perfect [S] great [C] restaurant miscellaneous']
multi_path: ['[A] spot [O] perfect [S] great [C] restaurant miscellaneous', '[A] spot [O] perfect [C] restaurant miscellaneous [S] great', '[A] spot [S] great [O] perfect [C] restaurant miscellaneous', '[O] perfect [A] spot [C] restaurant miscellaneous [S] great', '[O] perfect [A] spot [S] great [C] restaurant miscellaneous']

task, data: acos rest16
target: [('restaurant general', 'mexican place', 'great', 'best')]
output: ['[A] null [O] best [S] great [C] restaurant general']
sent: ['–', 'best', 'mexican', 'place', 'for', 'lunch', 'in', 'the', 'financial', 'district', '.']
counter: {('restaurant general', 'null', 'great', 'best'): 5}
output quads: ['[A] null [O] best [S] great [C] restaurant general']
multi_path: ['[A] it [O] best [S] great [C] restaurant general', '[A] it [O] best [C] restaurant general [S] great', '[A] it [S] great [O] best [C] restaurant general', '[O] best [A] it [C] restaurant general [S] great', '[O] best [A] it [S] great [C] restaurant general']

task, data: acos rest16
target: [('service general', 'service', 'great', 'efficient')]
output: ['[A] null [O] busy [S] bad [C] service general', '[A] service [O] efficient [S] great [C] service general']
sent: ['can', 'get', 'busy', 'on', 'fridays', 'for', 'a', 'table', 'but', 'once', 'seated', ',', 'the', 'service', 'is', 'so', 'efficient', 'you', 'can', 'be', 'in', 'and', 'out', 'of', 'there', 'quickly', '.']
counter: {('service general', 'null', 'bad', 'busy'): 5, ('service general', 'service', 'great', 'efficient'): 5}
output quads: ['[A] null [O] busy [S] bad [C] service general', '[A] service [O] efficient [S] great [C] service general']
multi_path: ['[A] it [O] busy [S] bad [C] service general [SSEP] [A] service [O] efficient [S] great [C] service general', '[A] it [O] busy [C] service general [S] bad [SSEP] [A] service [O] efficient [C] service general [S] great', '[A] it [S] bad [O] busy [C] service general [SSEP] [A] service [S] great [O] efficient [C] service general', '[O] busy [A] it [C] service general [S] bad [SSEP] [O] efficient [A] service [C] service general [S] great', '[O] busy [A] it [S] bad [C] service general [SSEP] [O] efficient [A] service [S] great [C] service general']

task, data: acos rest16
target: [('food quality', 'food', 'great', 'null'), ('restaurant miscellaneous', 'space', 'bad', 'limited')]
output: ['[A] food [O] null [S] great [C] food quality', '[A] space [O] limited [S] bad [C] ambience general']
sent: ['space', 'was', 'limited', ',', 'but', 'the', 'food', 'made', 'up', 'for', 'it', '.']
counter: {('ambience general', 'space', 'bad', 'limited'): 4, ('food quality', 'food', 'great', 'null'): 5, ('restaurant miscellaneous', 'space', 'bad', 'limited'): 1}
output quads: ['[A] space [O] limited [S] bad [C] ambience general', '[A] food [O] null [S] great [C] food quality']
multi_path: ['[A] space [O] limited [S] bad [C] ambience general [SSEP] [A] food [O] null [S] great [C] food quality', '[A] space [O] limited [C] restaurant miscellaneous [S] bad [SSEP] [A] food [O] null [C] food quality [S] great', '[A] space [S] bad [O] limited [C] ambience general [SSEP] [A] food [S] great [O] null [C] food quality', '[O] limited [A] space [C] ambience general [S] bad [SSEP] [O] null [A] food [C] food quality [S] great', '[O] limited [A] space [S] bad [C] ambience general [SSEP] [O] null [A] food [S] great [C] food quality']

task, data: acos rest16
target: [('service general', 'employees', 'bad', 'ignoring')]
output: ['[A] employees [O] null [S] bad [C] service general']
sent: ['we', 'stood', 'there', 'for', '10', 'minutes', 'while', 'employees', 'walked', 'back', 'and', 'forth', 'ignoring', 'us', '.']
counter: {('service general', 'employees', 'bad', 'null'): 5}
output quads: ['[A] employees [O] null [S] bad [C] service general']
multi_path: ['[A] employees [O] null [S] bad [C] service general', '[A] employees [O] null [C] service general [S] bad', '[A] employees [S] bad [O] null [C] service general', '[O] null [A] employees [C] service general [S] bad', '[O] null [A] employees [S] bad [C] service general']

task, data: acos rest16
target: [('drinks quality', 'margaritas', 'great', 'amazing'), ('food style_options', 'portions', 'great', 'huge'), ('restaurant general', 'null', 'great', 'top'), ('service general', 'service', 'great', 'fast')]
output: ['[A] margaritas [O] amazing [S] great [C] drinks quality', '[A] portions [O] huge [S] great [C] food style_options', '[A] service [O] fast [S] great [C] service general']
sent: ['–', 'this', 'is', 'one', 'of', 'my', 'top', 'lunch', 'spots', ',', 'huge', 'portions', ',', 'fast', 'service', 'and', 'amazing', 'margaritas', '!', '!']
counter: {('food style_options', 'portions', 'great', 'huge'): 5, ('service general', 'service', 'great', 'fast'): 5, ('food quality', 'margaritas', 'great', 'amazing'): 2, ('drinks quality', 'margaritas', 'great', 'amazing'): 3}
output quads: ['[A] portions [O] huge [S] great [C] food style_options', '[A] service [O] fast [S] great [C] service general', '[A] margaritas [O] amazing [S] great [C] drinks quality']
multi_path: ['[A] portions [O] huge [S] great [C] food style_options [SSEP] [A] service [O] fast [S] great [C] service general [SSEP] [A] margaritas [O] amazing [S] great [C] food quality', '[A] portions [O] huge [C] food style_options [S] great [SSEP] [A] service [O] fast [C] service general [S] great [SSEP] [A] margaritas [O] amazing [C] drinks quality [S] great', '[A] portions [S] great [O] huge [C] food style_options [SSEP] [A] service [S] great [O] fast [C] service general [SSEP] [A] margaritas [S] great [O] amazing [C] food quality', '[O] huge [A] portions [C] food style_options [S] great [SSEP] [O] fast [A] service [C] service general [S] great [SSEP] [O] amazing [A] margaritas [C] drinks quality [S] great', '[O] huge [A] portions [S] great [C] food style_options [SSEP] [O] fast [A] service [S] great [C] service general [SSEP] [O] amazing [A] margaritas [S] great [C] drinks quality']

task, data: acos rest16
target: [('service general', 'service', 'great', 'quick')]
output: ['[A] null [O] busy [S] ok [C] restaurant miscellaneous', '[A] service [O] not bad [S] great [C] service general', '[A] service [O] quick [S] great [C] service general']
sent: ['it', 'gets', 'really', 'busy', ',', 'so', 'get', 'there', 'on', 'the', 'early', 'side', 'so', 'you', 'can', 'grab', 'a', 'seat', ',', 'if', 'you', 'do', 'have', 'to', 'wait', ',', 'its', 'not', 'bad', 'because', 'the', 'service', 'is', 'quick', '!']
counter: {('restaurant miscellaneous', 'null', 'ok', 'busy'): 4, ('service general', 'service', 'great', 'not bad'): 5, ('service general', 'service', 'great', 'quick'): 3, ('restaurant miscellaneous', 'null', 'great', 'busy'): 1}
output quads: ['[A] null [O] busy [S] ok [C] restaurant miscellaneous', '[A] service [O] not bad [S] great [C] service general', '[A] service [O] quick [S] great [C] service general']
multi_path: ['[A] it [O] busy [S] ok [C] restaurant miscellaneous [SSEP] [A] service [O] not bad [S] great [C] service general [SSEP] [A] service [O] quick [S] great [C] service general', '[A] it [O] busy [C] restaurant miscellaneous [S] ok [SSEP] [A] service [O] not bad [C] service general [S] great [SSEP] [A] service [O] quick [C] service general [S] great', '[A] it [S] ok [O] busy [C] restaurant miscellaneous [SSEP] [A] service [S] great [O] not bad [C] service general [SSEP] [A] service [S] great [O] quick [C] service general', '[O] busy [A] it [C] restaurant miscellaneous [S] great [SSEP] [O] not bad [A] service [C] service general [S] great', '[O] busy [A] it [S] ok [C] restaurant miscellaneous [SSEP] [O] not bad [A] service [S] great [C] service general']

task, data: acos rest16
target: [('food quality', 'meal', 'great', 'bad')]
output: ['[A] meal [O] never had one bad [S] great [C] food quality']
sent: ['–', 'i', 'have', 'been', 'eating', 'at', 'this', 'place', 'for', 'over', '8', 'years', 'now', 'and', 'i', 'have', 'never', 'had', 'one', 'bad', 'meal', '.']
counter: {('food quality', 'meal', 'great', 'never had one bad'): 5}
output quads: ['[A] meal [O] never had one bad [S] great [C] food quality']
multi_path: ['[A] meal [O] never had one bad [S] great [C] food quality', '[A] meal [O] never had one bad [C] food quality [S] great', '[A] meal [S] great [O] never had one bad [C] food quality', '[O] never had one bad [A] meal [C] food quality [S] great', '[O] never had one bad [A] meal [S] great [C] food quality']

task, data: acos rest16
target: [('food quality', 'indain food', 'great', 'recommend')]
output: ['[A] indain food [O] recommend [S] great [C] food quality', '[A] place [O] recommend [S] great [C] restaurant general']
sent: ['i', 'highly', 'recommend', 'this', 'place', 'to', 'all', 'that', 'want', 'to', 'try', 'indain', 'food', 'for', 'the', 'first', 'time', '.']
counter: {('restaurant general', 'place', 'great', 'recommend'): 5, ('food quality', 'indain food', 'great', 'recommend'): 3, ('food quality', 'indain food', 'great', 'indain'): 2}
output quads: ['[A] place [O] recommend [S] great [C] restaurant general', '[A] indain food [O] recommend [S] great [C] food quality']
multi_path: ['[A] place [O] recommend [S] great [C] restaurant general [SSEP] [A] indain food [O] recommend [S] great [C] food quality', '[A] place [O] recommend [C] restaurant general [S] great [SSEP] [A] indain food [O] recommend [C] food quality [S] great', '[A] place [S] great [O] recommend [C] restaurant general [SSEP] [A] indain food [S] great [O] recommend [C] food quality', '[O] recommend [A] place [C] restaurant general [S] great [SSEP] [O] indain [A] indain food [C] food quality [S] great', '[O] recommend [A] place [S] great [C] restaurant general [SSEP] [O] indain [A] indain food [S] great [C] food quality']

task, data: acos rest16
target: [('food style_options', 'food', 'great', 'plenty of')]
output: ['[A] food [O] null [S] great [C] food quality']
sent: ['plenty', 'of', 'food', ',', 'trust', 'me', '.']
counter: {('food quality', 'food', 'great', 'null'): 5}
output quads: ['[A] food [O] null [S] great [C] food quality']
multi_path: ['[A] food [O] null [S] great [C] food quality', '[A] food [O] null [C] food quality [S] great', '[A] food [S] great [O] null [C] food quality', '[O] null [A] food [C] food quality [S] great', '[O] null [A] food [S] great [C] food quality']

task, data: acos rest16
target: [('food quality', 'ingrediants', 'great', 'fresh'), ('food quality', 'null', 'great', 'super')]
output: ['[A] ingrediants [O] fresh [S] great [C] food quality', '[A] ingrediants [O] tasty [S] great [C] food quality']
sent: ['fresh', 'ingrediants', 'and', 'super', 'tasty', '.']
counter: {('food quality', 'ingrediants', 'great', 'fresh'): 5, ('food quality', 'ingrediants', 'great', 'tasty'): 5}
output quads: ['[A] ingrediants [O] fresh [S] great [C] food quality', '[A] ingrediants [O] tasty [S] great [C] food quality']
multi_path: ['[A] ingrediants [O] fresh [S] great [C] food quality [SSEP] [A] ingrediants [O] tasty [S] great [C] food quality', '[A] ingrediants [O] fresh [C] food quality [S] great [SSEP] [A] ingrediants [O] tasty [C] food quality [S] great', '[A] ingrediants [S] great [O] fresh [C] food quality [SSEP] [A] ingrediants [S] great [O] tasty [C] food quality', '[O] fresh [A] ingrediants [C] food quality [S] great [SSEP] [O] tasty [A] ingrediants [C] food quality [S] great', '[O] fresh [A] ingrediants [S] great [C] food quality [SSEP] [O] tasty [A] ingrediants [S] great [C] food quality']

task, data: acos rest16
target: [('food style_options', 'selection', 'great', 'innovative'), ('food style_options', 'sushi', 'great', 'nice')]
output: ['[A] balance of traditional sushi [O] nice [S] great [C] food quality', '[A] selection [O] innovative [S] great [C] food style_options']
sent: ['not', 'only', 'can', 'the', 'selection', 'be', 'innovative', ',', 'but', 'there', "'", 's', 'a', 'nice', 'balance', 'of', 'traditional', 'sushi', 'as', 'well', '.']
counter: {('food style_options', 'selection', 'great', 'innovative'): 5, ('food quality', 'balance of traditional sushi', 'great', 'nice'): 5}
output quads: ['[A] selection [O] innovative [S] great [C] food style_options', '[A] balance of traditional sushi [O] nice [S] great [C] food quality']
multi_path: ['[A] selection [O] innovative [S] great [C] food style_options [SSEP] [A] balance of traditional sushi [O] nice [S] great [C] food quality', '[A] selection [O] innovative [C] food style_options [S] great [SSEP] [A] balance of traditional sushi [O] nice [C] food quality [S] great', '[A] selection [S] great [O] innovative [C] food style_options [SSEP] [A] balance of traditional sushi [S] great [O] nice [C] food quality', '[O] innovative [A] selection [C] food style_options [S] great [SSEP] [O] nice [A] balance of traditional sushi [C] food quality [S] great', '[O] innovative [A] selection [S] great [C] food style_options [SSEP] [O] nice [A] balance of traditional sushi [S] great [C] food quality']

task, data: acos rest16
target: [('food quality', 'brunch food', 'ok', 'average'), ('service general', 'null', 'bad', 'null')]
output: ['[A] brunch food [O] average [S] great [C] food quality']
sent: ['if', 'i', 'want', 'to', 'stand', 'in', 'line', 'on', 'sunday', 'for', 'an', 'hour', 'to', 'get', 'average', 'brunch', 'food', ',', 'then', 'i', 'would', 'put', 'murphy', "'", 's', 'at', 'the', 'top', 'of', 'the', 'list', '.']
counter: {('food quality', 'brunch food', 'great', 'average'): 5}
output quads: ['[A] brunch food [O] average [S] great [C] food quality']
multi_path: ['[A] brunch food [O] average [S] great [C] food quality', '[A] brunch food [O] average [C] food quality [S] great', '[A] brunch food [S] great [O] average [C] food quality', '[O] average [A] brunch food [C] food quality [S] great', '[O] average [A] brunch food [S] great [C] food quality']

task, data: acos rest16
target: [('food quality', 'regular menu', 'ok', 'above average'), ('food quality', 'regular menu', 'ok', 'not worth'), ('service general', 'null', 'bad', 'snotty')]
output: ['[A] regular menu [O] above average [S] bad [C] food quality', '[A] regular menu [O] not worth [S] bad [C] food quality']
sent: ['the', 'regular', 'menu', 'here', 'is', 'slightly', 'above', 'average', 'that', 'is', 'not', 'worth', 'the', 'snotty', 'attitude', 'that', 'you', 'receive', '.']
counter: {('food quality', 'regular menu', 'bad', 'above average'): 5, ('food style_options', 'regular menu', 'bad', 'not worth'): 2, ('food quality', 'regular menu', 'bad', 'not worth'): 3}
output quads: ['[A] regular menu [O] above average [S] bad [C] food quality', '[A] regular menu [O] not worth [S] bad [C] food quality']
multi_path: ['[A] regular menu [O] above average [S] bad [C] food quality [SSEP] [A] regular menu [O] not worth [S] bad [C] food style_options', '[A] regular menu [O] above average [C] food quality [S] bad [SSEP] [A] regular menu [O] not worth [C] food quality [S] bad', '[A] regular menu [S] bad [O] above average [C] food quality [SSEP] [A] regular menu [S] bad [O] not worth [C] food quality', '[O] above average [A] regular menu [C] food quality [S] bad [SSEP] [O] not worth [A] regular menu [C] food quality [S] bad', '[O] above average [A] regular menu [S] bad [C] food quality [SSEP] [O] not worth [A] regular menu [S] bad [C] food style_options']

task, data: acos rest16
target: [('drinks quality', 'sake', 'great', 'great'), ('food quality', 'blue fin tuna', 'great', 'null'), ('food quality', 'cod', 'great', 'null'), ('food quality', 'crab', 'great', 'null'), ('food quality', 'eel', 'great', 'null'), ('food quality', 'fluke', 'great', 'null'), ('food quality', 'jellyfish', 'great', 'null'), ('food quality', 'lobster', 'great', 'null'), ('food quality', 'mackeral', 'great', 'null'), ('food quality', 'milk fish', 'great', 'null'), ('food quality', 'monk fish', 'great', 'null'), ('food quality', 'oysters', 'great', 'null'), ('food quality', 'roe', 'great', 'null'), ('food quality', 'salmon', 'great', 'null'), ('food quality', 'sardine', 'great', 'null'), ('food quality', 'scallop', 'great', 'null'), ('food quality', 'sea bream', 'great', 'null'), ('food quality', 'sea urchin', 'great', 'null'), ('food quality', 'shrimp', 'great', 'null'), ('food quality', 'sushi', 'great', 'null'), ('food quality', 'trout', 'great', 'null'), ('food quality', 'tuna', 'great', 'null'), ('food quality', 'yellow tail', 'great', 'null'), ('food style_options', 'fish', 'great', 'love'), ('food style_options', 'toro', 'great', 'null'), ('location general', 'soho location', 'great', 'killer')]
output: ['[A] fish [O] expertly [S] great [C] food quality', '[A] sake [O] great [S] great [C] drinks quality', '[A] salmon [O] null [S] great [C] food quality', '[A] soho location [O] killer [S] great [C] location general', '[A] tuna [O] null [S] great [C] food quality']
sent: ['your', 'a', 'sushi', 'fan', ',', 'you', 'love', 'expertly', 'cut', 'fish', ',', 'great', 'sake', ',', 'a', 'killer', 'soho', 'location', ',', 'and', 'of', 'course', ':', 'salmon', ',', 'tuna', ',', 'fluke', ',', 'yellow', 'tail', ',', 'cod', ',', 'mackeral', ',', 'jellyfish', ',', 'sea', 'urchin', ',', 'shrimp', ',', 'lobster', ',', 'sea', 'bream', ',', 'trout', ',', 'milk', 'fish', ',', 'blue', 'fin', 'tuna', ',', 'eel', ',', 'crab', ',', 'sardine', ',', 'monk', 'fish', ',', 'roe', ',', 'scallop', ',', 'oysters', ',', 'and', 'a', 'varity', 'of', 'toro', '.']
counter: {('food quality', 'fish', 'great', 'expertly'): 3, ('drinks quality', 'sake', 'great', 'great'): 5, ('location general', 'soho location', 'great', 'killer'): 4, ('food quality', 'salmon', 'great', 'null'): 10, ('food quality', 'tuna', 'great', 'null'): 4, ('food quality', 'sea urchin', 'great', 'null'): 1, ('null', 'eel', 'great [C', 'null'): 1, ('food quality', 'lobster', 'great', 'null'): 2, ('food quality', 'trout', 'great', 'null'): 2, ('food quality', 'crab', 'great [SS', 'null'): 1, ('food quality', 'mackeral', 'great', 'null'): 1, ('food quality', 'crab', 'great', 'null'): 1, ('food quality', 'roe', 'great', 'null'): 1, ('food', 'oysters', 'great', 'null'): 1, ('food quality', 'sushi', 'great', 'love'): 2, ('food style_options', 'fish', 'great', 'expertly cut'): 2, ('food quality', 'sea bream', 'great', 'null'): 2, ('food quality', 'trout', 'null', 'null'): 1, ('null', 'trout', 'great [', 'null'): 1}
output quads: ['[A] fish [O] expertly [S] great [C] food quality', '[A] sake [O] great [S] great [C] drinks quality', '[A] soho location [O] killer [S] great [C] location general', '[A] salmon [O] null [S] great [C] food quality', '[A] tuna [O] null [S] great [C] food quality']
multi_path: ['[A] fish [O] expertly [S] great [C] food quality [SSEP] [A] sake [O] great [S] great [C] drinks quality [SSEP] [A] soho location [O] killer [S] great [C] location general [SSEP] [A] salmon [O] null [S] great [C] food quality [SSEP] [A] tuna [O] null [S] great [C] food quality [SSEP] [A] salmon [O] null [S] great [C] food quality [SSEP] [A] sea urchin [O] null [S] great [C] food quality [SSEP] [A] salmon [O] null [S] great [C] food quality [SSEP] [A] eel [O] null [S] great [C', '[A] fish [O] expertly [C] food quality [S] great [SSEP] [A] sake [O] great [C] drinks quality [S] great [SSEP] [A] soho location [O] killer [C] location general [S] great [SSEP] [A] salmon [O] null [C] food quality [S] great [SSEP] [A] tuna [O] null [C] food quality [S] great [SSEP] [A] salmon [O] null [C] food quality [S] great [SSEP] [A] lobster [O] null [C] food quality [S] great [SSEP] [A] trout [O] null [C] food quality [S] great [SSEP] [A] crab [O] null [C] food quality [S] great [SS', '[A] fish [S] great [O] expertly [C] food quality [SSEP] [A] sake [S] great [O] great [C] drinks quality [SSEP] [A] salmon [S] great [O] null [C] food quality [SSEP] [A] mackeral [S] great [O] null [C] food quality [SSEP] [A] lobster [S] great [O] null [C] food quality [SSEP] [A] trout [S] great [O] null [C] food quality [SSEP] [A] crab [S] great [O] null [C] food quality [SSEP] [A] roe [S] great [O] null [C] food quality [SSEP] [A] oysters [S] great [O] null [C] food', '[O] love [A] sushi [C] food quality [S] great [SSEP] [O] expertly cut [A] fish [C] food style_options [S] great [SSEP] [O] great [A] sake [C] drinks quality [S] great [SSEP] [O] killer [A] soho location [C] location general [S] great [SSEP] [O] null [A] salmon [C] food quality [S] great [SSEP] [O] null [A] tuna [C] food quality [S] great [SSEP] [O] null [A] salmon [C] food quality [S] great [SSEP] [O] null [A] sea bream [C] food quality [S] great [SSEP] [O] null [A] trout [C] food quality', '[O] love [A] sushi [S] great [C] food quality [SSEP] [O] expertly cut [A] fish [S] great [C] food style_options [SSEP] [O] great [A] sake [S] great [C] drinks quality [SSEP] [O] killer [A] soho location [S] great [C] location general [SSEP] [O] null [A] salmon [S] great [C] food quality [SSEP] [O] null [A] tuna [S] great [C] food quality [SSEP] [O] null [A] salmon [S] great [C] food quality [SSEP] [O] null [A] sea bream [S] great [C] food quality [SSEP] [O] null [A] trout [S] great [']

task, data: acos rest16
target: [('restaurant general', 'blue ribbon sushi', 'great', 'best')]
output: ['[A] blue ribbon sushi [O] best [S] great [C] food quality']
sent: ['bring', 'your', 'cell', 'phone', 'cause', 'you', 'may', 'have', 'to', 'wait', 'to', 'get', 'into', 'the', 'best', 'sushi', 'restaurant', 'in', 'the', 'world', ':', 'blue', 'ribbon', 'sushi', '.']
counter: {('food quality', 'blue ribbon sushi', 'great', 'best'): 3, ('restaurant general', 'blue ribbon sushi', 'great', 'best'): 2}
output quads: ['[A] blue ribbon sushi [O] best [S] great [C] food quality']
multi_path: ['[A] blue ribbon sushi [O] best [S] great [C] food quality', '[A] blue ribbon sushi [O] best [C] food quality [S] great', '[A] blue ribbon sushi [S] great [O] best [C] food quality', '[O] best [A] blue ribbon sushi [C] restaurant general [S] great', '[O] best [A] blue ribbon sushi [S] great [C] restaurant general']

task, data: acos rest16
target: [('ambience general', 'setting', 'great', 'nice'), ('food prices', 'sushi', 'great', 'great'), ('food prices', 'sushi', 'great', 'value'), ('food quality', 'sushi', 'great', 'high')]
output: ['[A] setting [O] nice [S] great [C] ambience general', '[A] sushi [O] great [S] great [C] food quality', '[A] sushi [O] high [S] great [C] food quality']
sent: ['great', 'value', 'sushi', 'with', 'high', 'quality', '&', 'nice', 'setting', '.']
counter: {('food quality', 'sushi', 'great', 'great'): 4, ('food quality', 'sushi', 'great', 'high'): 5, ('ambience general', 'setting', 'great', 'nice'): 5, ('food prices', 'sushi', 'great', 'great'): 1}
output quads: ['[A] sushi [O] great [S] great [C] food quality', '[A] sushi [O] high [S] great [C] food quality', '[A] setting [O] nice [S] great [C] ambience general']
multi_path: ['[A] sushi [O] great [S] great [C] food quality [SSEP] [A] sushi [O] high [S] great [C] food quality [SSEP] [A] setting [O] nice [S] great [C] ambience general', '[A] sushi [O] great [C] food prices [S] great [SSEP] [A] sushi [O] high [C] food quality [S] great [SSEP] [A] setting [O] nice [C] ambience general [S] great', '[A] sushi [S] great [O] great [C] food quality [SSEP] [A] sushi [S] great [O] high [C] food quality [SSEP] [A] setting [S] great [O] nice [C] ambience general', '[O] great [A] sushi [C] food quality [S] great [SSEP] [O] high [A] sushi [C] food quality [S] great [SSEP] [O] nice [A] setting [C] ambience general [S] great', '[O] great [A] sushi [S] great [C] food quality [SSEP] [O] high [A] sushi [S] great [C] food quality [SSEP] [O] nice [A] setting [S] great [C] ambience general']

task, data: acos rest16
target: [('food quality', "chef's choice for sushi", 'great', 'null'), ('food quality', 'rolls', 'great', 'tasty'), ('food quality', 'smoked yellowtail', 'great', 'incredible')]
output: ["[A] chef's choice for sushi [O] try [S] great [C] food quality", '[A] rolls [O] tasty [S] great [C] food quality', '[A] smoked yellowtail [O] incredible [S] great [C] food quality']
sent: ['try', 'the', 'chef', "'", 's', 'choice', 'for', 'sushi', 'as', 'the', 'smoked', 'yellowtail', 'was', 'incredible', 'and', 'the', 'rolls', 'were', 'also', 'tasty', '.']
counter: {('food quality', "chef's choice for sushi", 'great', 'try'): 5, ('food quality', 'smoked yellowtail', 'great', 'incredible'): 5, ('food quality', 'rolls', 'great', 'tasty'): 5}
output quads: ["[A] chef's choice for sushi [O] try [S] great [C] food quality", '[A] smoked yellowtail [O] incredible [S] great [C] food quality', '[A] rolls [O] tasty [S] great [C] food quality']
multi_path: ["[A] chef's choice for sushi [O] try [S] great [C] food quality [SSEP] [A] smoked yellowtail [O] incredible [S] great [C] food quality [SSEP] [A] rolls [O] tasty [S] great [C] food quality", "[A] chef's choice for sushi [O] try [C] food quality [S] great [SSEP] [A] smoked yellowtail [O] incredible [C] food quality [S] great [SSEP] [A] rolls [O] tasty [C] food quality [S] great", "[A] chef's choice for sushi [S] great [O] try [C] food quality [SSEP] [A] smoked yellowtail [S] great [O] incredible [C] food quality [SSEP] [A] rolls [S] great [O] tasty [C] food quality", "[O] try [A] chef's choice for sushi [C] food quality [S] great [SSEP] [O] incredible [A] smoked yellowtail [C] food quality [S] great [SSEP] [O] tasty [A] rolls [C] food quality [S] great", "[O] try [A] chef's choice for sushi [S] great [C] food quality [SSEP] [O] incredible [A] smoked yellowtail [S] great [C] food quality [SSEP] [O] tasty [A] rolls [S] great [C] food quality"]

task, data: acos rest16
target: [('food prices', 'food', 'bad', 'overpriced'), ('service general', 'service', 'bad', 'bad')]
output: ['[A] food [O] overpriced [S] bad [C] food prices', "[A] mioposto's service [O] bad [S] bad [C] service general"]
sent: ['–', 'as', 'with', 'most', 'restaurants', 'in', 'seattle', ',', 'mioposto', "'", 's', 'service', 'was', 'bad', 'and', 'the', 'food', 'was', 'overpriced', '.']
counter: {('service general', "mioposto's service", 'bad', 'bad'): 5, ('food prices', 'food', 'bad', 'overpriced'): 5}
output quads: ["[A] mioposto's service [O] bad [S] bad [C] service general", '[A] food [O] overpriced [S] bad [C] food prices']
multi_path: ["[A] mioposto's service [O] bad [S] bad [C] service general [SSEP] [A] food [O] overpriced [S] bad [C] food prices", "[A] mioposto's service [O] bad [C] service general [S] bad [SSEP] [A] food [O] overpriced [C] food prices [S] bad", "[A] mioposto's service [S] bad [O] bad [C] service general [SSEP] [A] food [S] bad [O] overpriced [C] food prices", "[O] bad [A] mioposto's service [C] service general [S] bad [SSEP] [O] overpriced [A] food [C] food prices [S] bad", "[O] bad [A] mioposto's service [S] bad [C] service general [SSEP] [O] overpriced [A] food [S] bad [C] food prices"]

task, data: acos rest16
target: [('food quality', 'pizza', 'bad', 'lacks quality')]
output: ["[A] mioposto's pizza [O] good [S] bad [C] food quality", "[A] mioposto's pizza [O] null [S] bad [C] food quality"]
sent: ['i', 'know', 'many', 'people', 'have', 'their', 'favorite', 'types', 'of', 'pizza', 'and', 'pizza', 'places', ',', 'but', 'mioposto', "'", 's', 'pizza', 'lacks', 'quality', 'and', 'good', 'taste', '.']
counter: {('food quality', "mioposto's pizza", 'bad', 'null'): 5, ('food quality', "mioposto's pizza", 'bad', 'good'): 5}
output quads: ["[A] mioposto's pizza [O] null [S] bad [C] food quality", "[A] mioposto's pizza [O] good [S] bad [C] food quality"]
multi_path: ["[A] mioposto's pizza [O] null [S] bad [C] food quality [SSEP] [A] mioposto's pizza [O] good [S] bad [C] food quality", "[A] mioposto's pizza [O] null [C] food quality [S] bad [SSEP] [A] mioposto's pizza [O] good [C] food quality [S] bad", "[A] mioposto's pizza [S] bad [O] null [C] food quality [SSEP] [A] mioposto's pizza [S] bad [O] good [C] food quality", "[O] null [A] mioposto's pizza [C] food quality [S] bad [SSEP] [O] good [A] mioposto's pizza [C] food quality [S] bad", "[O] null [A] mioposto's pizza [S] bad [C] food quality [SSEP] [O] good [A] mioposto's pizza [S] bad [C] food quality"]

task, data: acos rest16
target: [('food quality', 'pizza', 'bad', 'better')]
output: ['[A] frozen pizza [O] better [S] bad [C] food quality']
sent: ['to', 'be', 'honest', ',', 'i', "'", 've', 'had', 'better', 'frozen', 'pizza', '.']
counter: {('food quality', 'frozen pizza', 'bad', 'better'): 5}
output quads: ['[A] frozen pizza [O] better [S] bad [C] food quality']
multi_path: ['[A] frozen pizza [O] better [S] bad [C] food quality', '[A] frozen pizza [O] better [C] food quality [S] bad', '[A] frozen pizza [S] bad [O] better [C] food quality', '[O] better [A] frozen pizza [C] food quality [S] bad', '[O] better [A] frozen pizza [S] bad [C] food quality']

task, data: acos rest16
target: [('location general', 'location', 'great', 'nice'), ('restaurant general', 'mioposto', 'bad', 'null')]
output: ['[A] location [O] nice [S] great [C] location general', '[A] mioposto [O] positive [S] great [C] location general']
sent: ['the', 'only', 'positive', 'thing', 'about', 'mioposto', 'is', 'the', 'nice', 'location', '.']
counter: {('restaurant general', 'mioposto', 'great', 'positive'): 2, ('location general', 'location', 'great', 'nice'): 5, ('location general', 'mioposto', 'great', 'positive'): 3}
output quads: ['[A] location [O] nice [S] great [C] location general', '[A] mioposto [O] positive [S] great [C] location general']
multi_path: ['[A] mioposto [O] positive [S] great [C] restaurant general [SSEP] [A] location [O] nice [S] great [C] location general', '[A] mioposto [O] positive [C] location general [S] great [SSEP] [A] location [O] nice [C] location general [S] great', '[A] mioposto [S] great [O] positive [C] restaurant general [SSEP] [A] location [S] great [O] nice [C] location general', '[O] positive [A] mioposto [C] location general [S] great [SSEP] [O] nice [A] location [C] location general [S] great', '[O] positive [A] mioposto [S] great [C] location general [SSEP] [O] nice [A] location [S] great [C] location general']

task, data: acos rest16
target: [('service general', 'wait', 'ok', 'null')]
output: ['[A] null [O] null [S] bad [C] service general']
sent: ['the', 'only', 'problem', 'would', 'be', 'the', 'wait', ',', 'but', 'we', 'usually', 'just', 'have', 'a', 'drink', 'in', 'the', 'front', 'while', 'waiting', '.']
counter: {('service general', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [O] null [S] bad [C] service general']
multi_path: ['[A] it [O] null [S] bad [C] service general', '[A] it [O] null [C] service general [S] bad', '[A] it [S] bad [O] null [C] service general', '[O] null [A] it [C] service general [S] bad', '[O] null [A] it [S] bad [C] service general']

task, data: acos rest16
target: [('food quality', 'dessert', 'great', 'null')]
output: ['[A] dessert [O] null [S] bad [C] food quality']
sent: ['leave', 'room', 'for', 'dessert', '.']
counter: {('food quality', 'dessert', 'bad', 'null'): 5}
output quads: ['[A] dessert [O] null [S] bad [C] food quality']
multi_path: ['[A] dessert [O] null [S] bad [C] food quality', '[A] dessert [O] null [C] food quality [S] bad', '[A] dessert [S] bad [O] null [C] food quality', '[O] null [A] dessert [C] food quality [S] bad', '[O] null [A] dessert [S] bad [C] food quality']

task, data: acos rest16
target: [('service general', 'service', 'ok', 'null')]
output: ['[A] service [O] null [S] bad [C] service general']
sent: ['i', 'waited', 'for', '10', '-', '15', 'minutes', 'for', 'service', 'ordered', 'a', 'beer', '&', 'was', 'never', 'served', 'again', '.']
counter: {('service general', 'service', 'bad', 'null'): 5}
output quads: ['[A] service [O] null [S] bad [C] service general']
multi_path: ['[A] service [O] null [S] bad [C] service general', '[A] service [O] null [C] service general [S] bad', '[A] service [S] bad [O] null [C] service general', '[O] null [A] service [C] service general [S] bad', '[O] null [A] service [S] bad [C] service general']

task, data: acos rest16
target: [('food quality', 'food', 'ok', 'ok'), ('service general', 'service', 'bad', 'poor')]
output: ['[A] food [O] cold [S] bad [C] food quality', '[A] food [O] ok [S] ok [C] food quality', '[A] service [O] poor [S] bad [C] service general']
sent: ['the', 'food', 'was', 'ok', ',', 'but', 'the', 'service', 'was', 'so', 'poor', 'that', 'the', 'food', 'was', 'cold', 'buy', 'the', 'time', 'everyone', 'in', 'my', 'party', 'was', 'served', '.']
counter: {('food quality', 'food', 'ok', 'ok'): 5, ('service general', 'service', 'bad', 'poor'): 5, ('food quality', 'food', 'bad', 'cold'): 5}
output quads: ['[A] food [O] ok [S] ok [C] food quality', '[A] service [O] poor [S] bad [C] service general', '[A] food [O] cold [S] bad [C] food quality']
multi_path: ['[A] food [O] ok [S] ok [C] food quality [SSEP] [A] service [O] poor [S] bad [C] service general [SSEP] [A] food [O] cold [S] bad [C] food quality', '[A] food [O] ok [C] food quality [S] ok [SSEP] [A] service [O] poor [C] service general [S] bad [SSEP] [A] food [O] cold [C] food quality [S] bad', '[A] food [S] ok [O] ok [C] food quality [SSEP] [A] service [S] bad [O] poor [C] service general [SSEP] [A] food [S] bad [O] cold [C] food quality', '[O] ok [A] food [C] food quality [S] ok [SSEP] [O] poor [A] service [C] service general [S] bad [SSEP] [O] cold [A] food [C] food quality [S] bad', '[O] ok [A] food [S] ok [C] food quality [SSEP] [O] poor [A] service [S] bad [C] service general [SSEP] [O] cold [A] food [S] bad [C] food quality']

task, data: acos rest16
target: [('food quality', 'cakes', 'great', 'better')]
output: ['[A] null [O] better [S] great [C] restaurant general']
sent: ['–', 'thats', 'a', 'big', 'statement', 'considering', 'i', "'", 've', 'been', 'pulling', 'crab', 'traps', 'and', 'making', 'the', 'cakes', 'myself', 'since', 'i', 'was', 'about', 'seven', '-', 'but', 'something', 'about', 'these', 'little', 'devils', 'gets', 'better', 'every', 'time', '.']
counter: {('restaurant general', 'null', 'great', 'better'): 4, ('food quality', 'null', 'great', 'better'): 1}
output quads: ['[A] null [O] better [S] great [C] restaurant general']
multi_path: ['[A] it [O] better [S] great [C] restaurant general', '[A] it [O] better [C] food quality [S] great', '[A] it [S] great [O] better [C] restaurant general', '[O] better [A] it [C] restaurant general [S] great', '[O] better [A] it [S] great [C] restaurant general']

task, data: acos rest16
target: [('restaurant miscellaneous', 'place', 'great', 'null')]
output: ['[A] place [O] null [S] great [C] restaurant general']
sent: ['if', 'you', 'can', ',', 'come', 'to', 'this', 'place', 'by', 'boat', 'and', 'make', 'it', 'a', 'whole', 'evening', '.']
counter: {('restaurant general', 'place', 'great', 'null'): 5}
output quads: ['[A] place [O] null [S] great [C] restaurant general']
multi_path: ['[A] place [O] null [S] great [C] restaurant general', '[A] place [O] null [C] restaurant general [S] great', '[A] place [S] great [O] null [C] restaurant general', '[O] null [A] place [C] restaurant general [S] great', '[O] null [A] place [S] great [C] restaurant general']

task, data: acos rest16
target: [('ambience general', 'waterfront setting', 'great', 'classy'), ('food quality', 'seafood', 'great', 'great'), ('food quality', 'seasonal fish', 'great', 'great')]
output: ['[A] fish [O] great [S] great [C] food quality', '[A] seafood [O] great [S] great [C] food quality', '[A] waterfront setting [O] classy [S] great [C] ambience general']
sent: ['great', 'seasonal', 'fish', 'and', 'seafood', ',', 'with', 'a', 'classy', 'waterfront', 'setting', '.']
counter: {('food quality', 'fish', 'great', 'great'): 5, ('food quality', 'seafood', 'great', 'great'): 5, ('ambience general', 'waterfront setting', 'great', 'classy'): 5}
output quads: ['[A] fish [O] great [S] great [C] food quality', '[A] seafood [O] great [S] great [C] food quality', '[A] waterfront setting [O] classy [S] great [C] ambience general']
multi_path: ['[A] fish [O] great [S] great [C] food quality [SSEP] [A] seafood [O] great [S] great [C] food quality [SSEP] [A] waterfront setting [O] classy [S] great [C] ambience general', '[A] fish [O] great [C] food quality [S] great [SSEP] [A] seafood [O] great [C] food quality [S] great [SSEP] [A] waterfront setting [O] classy [C] ambience general [S] great', '[A] fish [S] great [O] great [C] food quality [SSEP] [A] seafood [S] great [O] great [C] food quality [SSEP] [A] waterfront setting [S] great [O] classy [C] ambience general', '[O] great [A] fish [C] food quality [S] great [SSEP] [O] great [A] seafood [C] food quality [S] great [SSEP] [O] classy [A] waterfront setting [C] ambience general [S] great', '[O] great [A] fish [S] great [C] food quality [SSEP] [O] great [A] seafood [S] great [C] food quality [SSEP] [O] classy [A] waterfront setting [S] great [C] ambience general']

task, data: acos rest16
target: [('service general', 'servers', 'bad', "'t like"), ('service general', 'young woman', 'bad', "'t like")]
output: ["[A] servers [O] 't like [S] bad [C] service general"]
sent: ['prefer', 'to', 'order', 'it', 'and', 'pick', 'it', 'up', 'though', 'because', 'i', 'do', 'n', "'", 't', 'like', 'the', 'servers', ',', 'one', 'young', 'woman', 'in', 'particular', '.']
counter: {('service general', 'servers', 'bad', "'t like"): 5}
output quads: ["[A] servers [O] 't like [S] bad [C] service general"]
multi_path: ["[A] servers [O]n't like [S] bad [C] service general", "[A] servers [O]n't like [C] service general [S] bad", "[A] servers [S] bad [O]n't like [C] service general", "[O]n't like [A] servers [C] service general [S] bad", "[O]n't like [A] servers [S] bad [C] service general"]

task, data: acos rest16
target: [('restaurant general', 'place', 'great', 'great little'), ('service general', 'service', 'bad', "'t so impersonal")]
output: ['[A] place [O] great [S] great [C] restaurant general', '[A] service [O] corporate - like [S] bad [C] service general', '[A] service [O] impersonal [S] bad [C] service general']
sent: ['it', "'", 's', 'a', 'great', 'little', 'place', 'with', 'tons', 'of', 'potential', 'to', 'be', 'a', 'neighborhood', 'joint', 'if', 'the', 'service', 'were', 'n', "'", 't', 'so', 'impersonal', 'and', 'corporate', '-', 'like', '.']
counter: {('restaurant general', 'place', 'great', 'great'): 5, ('service general', 'service', 'bad', 'impersonal'): 4, ('service general', 'service', 'bad', 'corporate - like'): 4, ('service general', 'service', 'great', 'impersonal'): 1, ('service general', 'service', 'great', 'corporate - like'): 1}
output quads: ['[A] place [O] great [S] great [C] restaurant general', '[A] service [O] impersonal [S] bad [C] service general', '[A] service [O] corporate - like [S] bad [C] service general']
multi_path: ['[A] place [O] great [S] great [C] restaurant general [SSEP] [A] service [O] impersonal [S] bad [C] service general [SSEP] [A] service [O] corporate - like [S] bad [C] service general', '[A] place [O] great [C] restaurant general [S] great [SSEP] [A] service [O] impersonal [C] service general [S] bad [SSEP] [A] service [O] corporate - like [C] service general [S] bad', '[A] place [S] great [O] great [C] restaurant general [SSEP] [A] service [S] great [O] impersonal [C] service general [SSEP] [A] service [S] great [O] corporate - like [C] service general', '[O] great [A] place [C] restaurant general [S] great [SSEP] [O] impersonal [A] service [C] service general [S] bad [SSEP] [O] corporate - like [A] service [C] service general [S] bad', '[O] great [A] place [S] great [C] restaurant general [SSEP] [O] impersonal [A] service [S] bad [C] service general [SSEP] [O] corporate - like [A] service [S] bad [C] service general']

task, data: acos rest16
target: [('drinks quality', 'bloody mary', 'great', 'mean'), ('food quality', 'food', 'great', 'great')]
output: ['[A] food [O] great [S] great [C] food quality', '[A] null [O] mean [S] great [C] food quality']
sent: ['the', 'food', 'is', 'great', 'and', 'they', 'make', 'a', 'mean', 'bloody', 'mary', '.']
counter: {('food quality', 'food', 'great', 'great'): 5, ('food quality', 'null', 'great', 'mean'): 5}
output quads: ['[A] food [O] great [S] great [C] food quality', '[A] null [O] mean [S] great [C] food quality']
multi_path: ['[A] food [O] great [S] great [C] food quality [SSEP] [A] it [O] mean [S] great [C] food quality', '[A] food [O] great [C] food quality [S] great [SSEP] [A] it [O] mean [C] food quality [S] great', '[A] food [S] great [O] great [C] food quality [SSEP] [A] it [S] great [O] mean [C] food quality', '[O] great [A] food [C] food quality [S] great [SSEP] [O] mean [A] it [C] food quality [S] great', '[O] great [A] food [S] great [C] food quality [SSEP] [O] mean [A] it [S] great [C] food quality']

task, data: acos rest16
target: [('drinks style_options', 'null', 'great', 'hit'), ('food quality', 'menu items', 'great', 'hit')]
output: ['[A] menu items [O] hit [S] great [C] food quality', '[A] mimosas [O] null [S] great [C] food quality']
sent: ['all', 'their', 'menu', 'items', 'are', 'a', 'hit', ',', 'and', 'they', 'serve', 'mimosas', '.']
counter: {('food quality', 'menu items', 'great', 'hit'): 5, ('food quality', 'mimosas', 'great', 'null'): 3, ('drinks quality', 'mimosas', 'great', 'null'): 2}
output quads: ['[A] menu items [O] hit [S] great [C] food quality', '[A] mimosas [O] null [S] great [C] food quality']
multi_path: ['[A] menu items [O] hit [S] great [C] food quality [SSEP] [A] mimosas [O] null [S] great [C] food quality', '[A] menu items [O] hit [C] food quality [S] great [SSEP] [A] mimosas [O] null [C] drinks quality [S] great', '[A] menu items [S] great [O] hit [C] food quality [SSEP] [A] mimosas [S] great [O] null [C] drinks quality', '[O] hit [A] menu items [C] food quality [S] great [SSEP] [O] null [A] mimosas [C] food quality [S] great', '[O] hit [A] menu items [S] great [C] food quality [SSEP] [O] null [A] mimosas [S] great [C] food quality']

task, data: acos rest16
target: [('ambience general', 'ambiance', 'great', 'good'), ('ambience general', 'ambiance', 'great', 'nice')]
output: ['[A] ambiance [O] good [S] great [C] ambience general', '[A] ambiance [O] nice [S] great [C] ambience general', '[A] dinning [O] fine [S] great [C] food quality']
sent: ['the', 'ambiance', 'of', 'the', 'restaurant', 'was', 'nice', 'and', 'good', 'for', 'fine', 'dinning', '.']
counter: {('ambience general', 'ambiance', 'great', 'nice'): 5, ('ambience general', 'ambiance', 'great', 'good'): 5, ('food quality', 'dinning', 'great', 'fine'): 5}
output quads: ['[A] ambiance [O] nice [S] great [C] ambience general', '[A] ambiance [O] good [S] great [C] ambience general', '[A] dinning [O] fine [S] great [C] food quality']
multi_path: ['[A] ambiance [O] nice [S] great [C] ambience general [SSEP] [A] ambiance [O] good [S] great [C] ambience general [SSEP] [A] dinning [O] fine [S] great [C] food quality', '[A] ambiance [O] nice [C] ambience general [S] great [SSEP] [A] ambiance [O] good [C] ambience general [S] great [SSEP] [A] dinning [O] fine [C] food quality [S] great', '[A] ambiance [S] great [O] nice [C] ambience general [SSEP] [A] ambiance [S] great [O] good [C] ambience general [SSEP] [A] dinning [S] great [O] fine [C] food quality', '[O] nice [A] ambiance [C] ambience general [S] great [SSEP] [O] good [A] ambiance [C] ambience general [S] great [SSEP] [O] fine [A] dinning [C] food quality [S] great', '[O] nice [A] ambiance [S] great [C] ambience general [SSEP] [O] good [A] ambiance [S] great [C] ambience general [SSEP] [O] fine [A] dinning [S] great [C] food quality']

task, data: acos rest16
target: [('service general', 'staff', 'great', 'courteous'), ('service general', 'staff', 'great', 'nice')]
output: ['[A] staff [O] chinese [S] great [C] service general', '[A] staff [O] courteous [S] great [C] service general', '[A] staff [O] nice [S] great [C] service general']
sent: ['the', 'staff', 'was', 'very', 'nice', 'and', 'courteous', 'and', 'obviously', 'chinese', '.']
counter: {('service general', 'staff', 'great', 'nice'): 5, ('service general', 'staff', 'great', 'courteous'): 5, ('service general', 'staff', 'great', 'chinese'): 5}
output quads: ['[A] staff [O] nice [S] great [C] service general', '[A] staff [O] courteous [S] great [C] service general', '[A] staff [O] chinese [S] great [C] service general']
multi_path: ['[A] staff [O] nice [S] great [C] service general [SSEP] [A] staff [O] courteous [S] great [C] service general [SSEP] [A] staff [O] chinese [S] great [C] service general', '[A] staff [O] nice [C] service general [S] great [SSEP] [A] staff [O] courteous [C] service general [S] great [SSEP] [A] staff [O] chinese [C] service general [S] great', '[A] staff [S] great [O] nice [C] service general [SSEP] [A] staff [S] great [O] courteous [C] service general [SSEP] [A] staff [S] great [O] chinese [C] service general', '[O] nice [A] staff [C] service general [S] great [SSEP] [O] courteous [A] staff [C] service general [S] great [SSEP] [O] chinese [A] staff [C] service general [S] great', '[O] nice [A] staff [S] great [C] service general [SSEP] [O] courteous [A] staff [S] great [C] service general [SSEP] [O] chinese [A] staff [S] great [C] service general']

task, data: acos rest16
target: [('food quality', 'brocolli', 'great', 'null'), ('food quality', 'prawns', 'great', 'fresh'), ('food quality', 'prawns', 'great', 'nicely cooked'), ('food quality', 'scallops', 'great', 'fresh'), ('food quality', 'scallops', 'great', 'nicely cooked')]
output: ['[A] brocolli [O] eventful [S] great [C] food style_options', '[A] prawns [O] nicely cooked [S] great [C] food quality', '[A] scallops [O] fresh [S] great [C] food quality']
sent: ['i', 'would', 'normally', 'not', 'finish', 'the', 'brocolli', 'when', 'i', 'order', 'these', 'kinds', 'of', 'food', 'but', 'for', 'the', 'first', 'time', ',', 'every', 'piece', 'was', 'as', 'eventful', 'as', 'the', 'first', 'one', '.', '.', '.', 'the', 'scallops', 'and', 'prawns', 'was', 'so', 'fresh', 'and', 'nicely', 'cooked', '.']
counter: {('food style_options', 'brocolli', 'great', 'eventful'): 3, ('food quality', 'scallops', 'great', 'fresh'): 5, ('food quality', 'prawns', 'great', 'nicely cooked'): 5}
output quads: ['[A] brocolli [O] eventful [S] great [C] food style_options', '[A] scallops [O] fresh [S] great [C] food quality', '[A] prawns [O] nicely cooked [S] great [C] food quality']
multi_path: ['[A] brocolli [O] eventful [S] great [C] food style_options [SSEP] [A] scallops [O] fresh [S] great [C] food quality [SSEP] [A] prawns [O] nicely cooked [S] great [C] food quality', '[A] brocolli [O] eventful [C] food style_options [S] great [SSEP] [A] scallops [O] fresh [C] food quality [S] great [SSEP] [A] prawns [O] nicely cooked [C] food quality [S] great', '[A] brocolli [S] great [O] eventful [C] food style_options [SSEP] [A] scallops [S] great [O] fresh [C] food quality [SSEP] [A] prawns [S] great [O] nicely cooked [C] food quality', '[O] fresh [A] scallops [C] food quality [S] great [SSEP] [O] nicely cooked [A] prawns [C] food quality [S] great', '[O] fresh [A] scallops [S] great [C] food quality [SSEP] [O] nicely cooked [A] prawns [S] great [C] food quality']

task, data: acos rest16
target: [('food prices', 'sushi', 'bad', 'null'), ('food quality', 'sushi', 'bad', 'good'), ('food style_options', 'sushi', 'bad', 'null'), ('restaurant prices', 'restaurant', 'bad', 'moderately priced')]
output: ['[A] restaurant [O] moderately [S] bad [C] restaurant prices', '[A] slices of fish [O] null [S] bad [C] food style_options', '[A] sushi [O] perfectly good [S] great [C] food quality']
sent: ['–', 'the', 'sushi', 'here', 'is', 'perfectly', 'good', ',', 'but', 'for', '$', '5', 'a', 'piece', ',', 'either', 'the', 'slices', 'of', 'fish', 'should', 'be', 'larger', ',', 'or', 'there', 'should', 'be', 'no', 'pretense', 'that', 'this', 'is', 'a', 'moderately', 'priced', 'restaurant', '(', 'even', 'for', 'nyc', ')', '.']
counter: {('food quality', 'sushi', 'great', 'perfectly good'): 3, ('food style_options', 'slices of fish', 'bad', 'null'): 5, ('restaurant prices', 'restaurant', 'bad', 'moderately'): 5, ('food quality', 'sushi', 'great', 'perfectly'): 2}
output quads: ['[A] sushi [O] perfectly good [S] great [C] food quality', '[A] slices of fish [O] null [S] bad [C] food style_options', '[A] restaurant [O] moderately [S] bad [C] restaurant prices']
multi_path: ['[A] sushi [O] perfectly good [S] great [C] food quality [SSEP] [A] slices of fish [O] null [S] bad [C] food style_options [SSEP] [A] restaurant [O] moderately [S] bad [C] restaurant prices', '[A] sushi [O] perfectly good [C] food quality [S] great [SSEP] [A] slices of fish [O] null [C] food style_options [S] bad [SSEP] [A] restaurant [O] moderately [C] restaurant prices [S] bad', '[A] sushi [S] great [O] perfectly good [C] food quality [SSEP] [A] slices of fish [S] bad [O] null [C] food style_options [SSEP] [A] restaurant [S] bad [O] moderately [C] restaurant prices', '[O] perfectly [A] sushi [C] food quality [S] great [SSEP] [O] null [A] slices of fish [C] food style_options [S] bad [SSEP] [O] moderately [A] restaurant [C] restaurant prices [S] bad', '[O] perfectly [A] sushi [S] great [C] food quality [SSEP] [O] null [A] slices of fish [S] bad [C] food style_options [SSEP] [O] moderately [A] restaurant [S] bad [C] restaurant prices']

task, data: acos rest16
target: [('ambience general', 'restaurant', 'ok', "'t a fancy"), ('food prices', 'food', 'bad', 'pricey'), ('food quality', 'food', 'ok', 'ok')]
output: ['[A] food [O] ok [S] ok [C] food quality', '[A] food [O] pricey [S] bad [C] food prices']
sent: ['food', 'wise', ',', 'its', 'ok', 'but', 'a', 'bit', 'pricey', 'for', 'what', 'you', 'get', 'considering', 'the', 'restaurant', 'is', 'n', "'", 't', 'a', 'fancy', 'place', '.']
counter: {('food quality', 'food', 'ok', 'ok'): 5, ('food prices', 'food', 'bad', 'pricey'): 5}
output quads: ['[A] food [O] ok [S] ok [C] food quality', '[A] food [O] pricey [S] bad [C] food prices']
multi_path: ['[A] food [O] ok [S] ok [C] food quality [SSEP] [A] food [O] pricey [S] bad [C] food prices', '[A] food [O] ok [C] food quality [S] ok [SSEP] [A] food [O] pricey [C] food prices [S] bad', '[A] food [S] ok [O] ok [C] food quality [SSEP] [A] food [S] bad [O] pricey [C] food prices', '[O] ok [A] food [C] food quality [S] ok [SSEP] [O] pricey [A] food [C] food prices [S] bad', '[O] ok [A] food [S] ok [C] food quality [SSEP] [O] pricey [A] food [S] bad [C] food prices']

task, data: acos rest16
target: [('location general', 'location', 'bad', 'null')]
output: ['[A] null [O] null [S] ok [C] restaurant miscellaneous']
sent: ['if', 'i', 'needed', 'to', 'name', 'some', 'they', 'would', 'include', 'the', 'location', 'to', 'the', 'beach', 'or', 'golden', 'gate', 'park', '.']
counter: {('restaurant miscellaneous', 'null', 'ok', 'null'): 5}
output quads: ['[A] null [O] null [S] ok [C] restaurant miscellaneous']
multi_path: ['[A] it [O] null [S] ok [C] restaurant miscellaneous', '[A] it [O] null [C] restaurant miscellaneous [S] ok', '[A] it [S] ok [O] null [C] restaurant miscellaneous', '[O] null [A] it [C] restaurant miscellaneous [S] ok', '[O] null [A] it [S] ok [C] restaurant miscellaneous']

task, data: acos rest16
target: [('ambience general', 'feel', 'great', 'plus')]
output: ['[A] restaurant [O] plus [S] great [C] ambience general']
sent: ['another', 'plus', 'is', 'the', 'open', 'feel', 'of', 'the', 'restaurant', 'with', 'glass', 'walls', 'on', 'all', 'sides', '.']
counter: {('ambience general', 'restaurant', 'great', 'plus'): 5}
output quads: ['[A] restaurant [O] plus [S] great [C] ambience general']
multi_path: ['[A] restaurant [O] plus [S] great [C] ambience general', '[A] restaurant [O] plus [C] ambience general [S] great', '[A] restaurant [S] great [O] plus [C] ambience general', '[O] plus [A] restaurant [C] ambience general [S] great', '[O] plus [A] restaurant [S] great [C] ambience general']

task, data: acos rest16
target: [('food quality', 'box sushi', 'great', 'perfect'), ('food quality', 'spanish mackeral special appetizer', 'great', 'amazing'), ('food quality', 'that eel with', 'great', 'null')]
output: ['[A] box sushi [O] perfect [S] great [C] food quality', '[A] spanish mackeral special appetizer [O] amazing [S] great [C] food quality']
sent: ['amazing', 'spanish', 'mackeral', 'special', 'appetizer', 'and', 'perfect', 'box', 'sushi', '(', 'that', 'eel', 'with', 'avodcao', '-', '-', 'um', 'um', 'um', ')', '.']
counter: {('food quality', 'spanish mackeral special appetizer', 'great', 'amazing'): 5, ('food quality', 'box sushi', 'great', 'perfect'): 5}
output quads: ['[A] spanish mackeral special appetizer [O] amazing [S] great [C] food quality', '[A] box sushi [O] perfect [S] great [C] food quality']
multi_path: ['[A] spanish mackeral special appetizer [O] amazing [S] great [C] food quality [SSEP] [A] box sushi [O] perfect [S] great [C] food quality', '[A] spanish mackeral special appetizer [O] amazing [C] food quality [S] great [SSEP] [A] box sushi [O] perfect [C] food quality [S] great', '[A] spanish mackeral special appetizer [S] great [O] amazing [C] food quality [SSEP] [A] box sushi [S] great [O] perfect [C] food quality', '[O] amazing [A] spanish mackeral special appetizer [C] food quality [S] great [SSEP] [O] perfect [A] box sushi [C] food quality [S] great', '[O] amazing [A] spanish mackeral special appetizer [S] great [C] food quality [SSEP] [O] perfect [A] box sushi [S] great [C] food quality']

task, data: acos rest16
target: [('food quality', 'omikase', 'great', "'t disappoint"), ('food style_options', 'omikase', 'bad', 'null')]
output: ["[A] omikase [O] 't disappoint [S] great [C] food quality", '[A] omikase [O] low [S] bad [C] food style_options']
sent: ['as', 'usual', 'the', 'omikase', 'did', 'n', "'", 't', 'disappoint', 'in', 'freshness', ',', 'although', 'it', 'scored', 'low', 'on', 'creativity', 'and', 'selection', '.']
counter: {('food quality', 'omikase', 'great', "'t disappoint"): 5, ('food style_options', 'omikase', 'bad', 'low'): 5}
output quads: ["[A] omikase [O] 't disappoint [S] great [C] food quality", '[A] omikase [O] low [S] bad [C] food style_options']
multi_path: ["[A] omikase [O]n't disappoint [S] great [C] food quality [SSEP] [A] omikase [O] low [S] bad [C] food style_options", "[A] omikase [O]n't disappoint [C] food quality [S] great [SSEP] [A] omikase [O] low [C] food style_options [S] bad", "[A] omikase [S] great [O]n't disappoint [C] food quality [SSEP] [A] omikase [S] bad [O] low [C] food style_options", "[O]n't disappoint [A] omikase [C] food quality [S] great [SSEP] [O] low [A] omikase [C] food style_options [S] bad", "[O]n't disappoint [A] omikase [S] great [C] food quality [SSEP] [O] low [A] omikase [S] bad [C] food style_options"]

task, data: acos rest16
target: [('food prices', 'sushi', 'ok', "'t the cheapest"), ('food quality', 'sushi', 'great', 'worth')]
output: ["[A] sushi [O] isn't the cheapest [S] bad [C] food prices", '[A] sushi [O] worth [S] great [C] food quality']
sent: ['it', 'is', 'n', "'", 't', 'the', 'cheapest', 'sushi', 'but', 'has', 'been', 'worth', 'it', 'every', 'time', '.']
counter: {('food prices', 'sushi', 'bad', "isn't the cheapest"): 5, ('food quality', 'sushi', 'great', 'worth'): 5}
output quads: ["[A] sushi [O] isn't the cheapest [S] bad [C] food prices", '[A] sushi [O] worth [S] great [C] food quality']
multi_path: ["[A] sushi [O] isn't the cheapest [S] bad [C] food prices [SSEP] [A] sushi [O] worth [S] great [C] food quality", "[A] sushi [O] isn't the cheapest [C] food prices [S] bad [SSEP] [A] sushi [O] worth [C] food quality [S] great", "[A] sushi [S] bad [O] isn't the cheapest [C] food prices [SSEP] [A] sushi [S] great [O] worth [C] food quality", "[O] isn't the cheapest [A] sushi [C] food prices [S] bad [SSEP] [O] worth [A] sushi [C] food quality [S] great", "[O] isn't the cheapest [A] sushi [S] bad [C] food prices [SSEP] [O] worth [A] sushi [S] great [C] food quality"]

task, data: acos rest16
target: [('food quality', 'food', 'ok', 'average'), ('location general', 'location along the marina in long beach', 'great', 'charming'), ('service general', 'customer service', 'bad', 'poor')]
output: ['[A] customer service [O] poor [S] bad [C] service general', '[A] food [O] average [S] ok [C] food quality', '[A] location [O] charming [S] great [C] location general']
sent: ['–', 'schooner', 'or', 'later', "'", 's', 'charming', 'location', 'along', 'the', 'marina', 'in', 'long', 'beach', 'and', 'average', 'food', 'does', 'not', ',', 'unfortunately', ',', 'compensate', 'for', 'its', 'very', 'poor', 'customer', 'service', '.']
counter: {('location general', 'location', 'great', 'charming'): 5, ('food quality', 'food', 'ok', 'average'): 5, ('service general', 'customer service', 'bad', 'poor'): 5}
output quads: ['[A] location [O] charming [S] great [C] location general', '[A] food [O] average [S] ok [C] food quality', '[A] customer service [O] poor [S] bad [C] service general']
multi_path: ['[A] location [O] charming [S] great [C] location general [SSEP] [A] food [O] average [S] ok [C] food quality [SSEP] [A] customer service [O] poor [S] bad [C] service general', '[A] location [O] charming [C] location general [S] great [SSEP] [A] food [O] average [C] food quality [S] ok [SSEP] [A] customer service [O] poor [C] service general [S] bad', '[A] location [S] great [O] charming [C] location general [SSEP] [A] food [S] ok [O] average [C] food quality [SSEP] [A] customer service [S] bad [O] poor [C] service general', '[O] charming [A] location [C] location general [S] great [SSEP] [O] average [A] food [C] food quality [S] ok [SSEP] [O] poor [A] customer service [C] service general [S] bad', '[O] charming [A] location [S] great [C] location general [SSEP] [O] average [A] food [S] ok [C] food quality [SSEP] [O] poor [A] customer service [S] bad [C] service general']

task, data: acos rest16
target: [('food quality', 'food', 'great', 'good'), ('service general', 'restaurant staff', 'bad', 'indifferent')]
output: ['[A] food [O] good [S] great [C] food quality', '[A] staff [O] indifferent [S] bad [C] service general']
sent: ['while', 'this', 'diner', 'had', 'reasonably', 'good', 'food', ',', 'the', 'restaurant', 'staff', 'seemed', 'completely', 'indifferent', 'to', 'our', 'presence', ',', 'and', 'this', 'attitude', 'was', 'reflected', 'in', 'the', 'lack', 'of', 'service', '.']
counter: {('food quality', 'food', 'great', 'good'): 5, ('service general', 'staff', 'bad', 'indifferent'): 5}
output quads: ['[A] food [O] good [S] great [C] food quality', '[A] staff [O] indifferent [S] bad [C] service general']
multi_path: ['[A] food [O] good [S] great [C] food quality [SSEP] [A] staff [O] indifferent [S] bad [C] service general', '[A] food [O] good [C] food quality [S] great [SSEP] [A] staff [O] indifferent [C] service general [S] bad', '[A] food [S] great [O] good [C] food quality [SSEP] [A] staff [S] bad [O] indifferent [C] service general', '[O] good [A] food [C] food quality [S] great [SSEP] [O] indifferent [A] staff [C] service general [S] bad', '[O] good [A] food [S] great [C] food quality [SSEP] [O] indifferent [A] staff [S] bad [C] service general']

task, data: acos rest16
target: [('food quality', 'fish', 'bad', 'thin'), ('food quality', 'fish', 'great', 'fresh')]
output: ['[A] fish [O] fresh [S] great [C] food quality', '[A] fish [O] thin [S] bad [C] food style_options']
sent: ['the', 'fish', 'was', 'fresh', ',', 'though', 'it', 'was', 'cut', 'very', 'thin', '.']
counter: {('food quality', 'fish', 'great', 'fresh'): 5, ('food style_options', 'fish', 'bad', 'thin'): 5}
output quads: ['[A] fish [O] fresh [S] great [C] food quality', '[A] fish [O] thin [S] bad [C] food style_options']
multi_path: ['[A] fish [O] fresh [S] great [C] food quality [SSEP] [A] fish [O] thin [S] bad [C] food style_options', '[A] fish [O] fresh [C] food quality [S] great [SSEP] [A] fish [O] thin [C] food style_options [S] bad', '[A] fish [S] great [O] fresh [C] food quality [SSEP] [A] fish [S] bad [O] thin [C] food style_options', '[O] fresh [A] fish [C] food quality [S] great [SSEP] [O] thin [A] fish [C] food style_options [S] bad', '[O] fresh [A] fish [S] great [C] food quality [SSEP] [O] thin [A] fish [S] bad [C] food style_options']

task, data: acos rest16
target: [('food quality', 'black cod in sake kasu', 'great', 'enjoyed')]
output: ['[A] black cod in sake kasu [O] enjoyed [S] great [C] food quality', '[A] family platter [O] enjoyed [S] great [C] food quality']
sent: ['we', 'shared', 'the', 'family', 'platter', 'and', 'i', 'especially', 'enjoyed', 'the', 'black', 'cod', 'in', 'sake', 'kasu', '.']
counter: {('food quality', 'family platter', 'great', 'enjoyed'): 5, ('food quality', 'black cod in sake kasu', 'great', 'enjoyed'): 5}
output quads: ['[A] family platter [O] enjoyed [S] great [C] food quality', '[A] black cod in sake kasu [O] enjoyed [S] great [C] food quality']
multi_path: ['[A] family platter [O] enjoyed [S] great [C] food quality [SSEP] [A] black cod in sake kasu [O] enjoyed [S] great [C] food quality', '[A] family platter [O] enjoyed [C] food quality [S] great [SSEP] [A] black cod in sake kasu [O] enjoyed [C] food quality [S] great', '[A] family platter [S] great [O] enjoyed [C] food quality [SSEP] [A] black cod in sake kasu [S] great [O] enjoyed [C] food quality', '[O] enjoyed [A] family platter [C] food quality [S] great [SSEP] [O] enjoyed [A] black cod in sake kasu [C] food quality [S] great', '[O] enjoyed [A] family platter [S] great [C] food quality [SSEP] [O] enjoyed [A] black cod in sake kasu [S] great [C] food quality']

task, data: acos rest16
target: [('food quality', 'dessert of a port and chocolate tasting', 'great', 'unusual'), ('food quality', 'dessert of a port and chocolate tasting', 'great', 'yummy')]
output: ['[A] dessert [O] unusual [S] great [C] food quality', '[A] port and chocolate tasting [O] yummy [S] great [C] food quality']
sent: ['i', 'ended', 'the', 'meal', 'with', 'the', 'unusual', 'dessert', 'of', 'a', 'port', 'and', 'chocolate', 'tasting', '.', '.', '.', '.', 'yummy', '!']
counter: {('food quality', 'dessert', 'great', 'unusual'): 5, ('food quality', 'port and chocolate tasting', 'great', 'yummy'): 4, ('food quality', 'port', 'great', 'yummy'): 1}
output quads: ['[A] dessert [O] unusual [S] great [C] food quality', '[A] port and chocolate tasting [O] yummy [S] great [C] food quality']
multi_path: ['[A] dessert [O] unusual [S] great [C] food quality [SSEP] [A] port and chocolate tasting [O] yummy [S] great [C] food quality', '[A] dessert [O] unusual [C] food quality [S] great [SSEP] [A] port and chocolate tasting [O] yummy [C] food quality [S] great', '[A] dessert [S] great [O] unusual [C] food quality [SSEP] [A] port [S] great [O] yummy [C] food quality', '[O] unusual [A] dessert [C] food quality [S] great [SSEP] [O] yummy [A] port and chocolate tasting [C] food quality [S] great', '[O] unusual [A] dessert [S] great [C] food quality [SSEP] [O] yummy [A] port and chocolate tasting [S] great [C] food quality']

task, data: acos rest16
target: [('drinks quality', 'coffee', 'great', 'great'), ('drinks quality', 'drinks', 'great', 'great'), ('food quality', 'b fast burritos', 'great', 'great'), ('food quality', 'corn beef hash', 'great', 'great'), ('food style_options', 'menu', 'great', 'great')]
output: ['[A] b fast burritos [O] fast [S] great [C] food quality', '[A] coffee [O] great [S] great [C] drinks quality', '[A] corn beef hash [O] great [S] great [C] food quality', '[A] drinks [O] great [S] great [C] drinks quality', '[A] menu [O] gluten free [S] great [C] food quality']
sent: ['–', 'great', 'drinks', ',', 'corn', 'beef', 'hash', ',', 'coffee', ',', 'b', 'fast', 'burritos', ',', 'gluten', 'free', 'menu', '.']
counter: {('drinks quality', 'drinks', 'great', 'great'): 5, ('food quality', 'corn beef hash', 'great', 'great'): 5, ('drinks quality', 'coffee', 'great', 'great'): 5, ('food quality', 'b fast burritos', 'great', 'fast'): 3, ('food style_options', 'menu', 'great', 'gluten free'): 2, ('food quality', 'menu', 'great', 'gluten free'): 3, ('food quality', 'burritos', 'great', 'fast'): 2}
output quads: ['[A] drinks [O] great [S] great [C] drinks quality', '[A] corn beef hash [O] great [S] great [C] food quality', '[A] coffee [O] great [S] great [C] drinks quality', '[A] b fast burritos [O] fast [S] great [C] food quality', '[A] menu [O] gluten free [S] great [C] food quality']
multi_path: ['[A] drinks [O] great [S] great [C] drinks quality [SSEP] [A] corn beef hash [O] great [S] great [C] food quality [SSEP] [A] coffee [O] great [S] great [C] drinks quality [SSEP] [A] b fast burritos [O] fast [S] great [C] food quality [SSEP] [A] menu [O] gluten free [S] great [C] food style_options', '[A] drinks [O] great [C] drinks quality [S] great [SSEP] [A] corn beef hash [O] great [C] food quality [S] great [SSEP] [A] coffee [O] great [C] drinks quality [S] great [SSEP] [A] b fast burritos [O] fast [C] food quality [S] great [SSEP] [A] menu [O] gluten free [C] food quality [S] great', '[A] drinks [S] great [O] great [C] drinks quality [SSEP] [A] corn beef hash [S] great [O] great [C] food quality [SSEP] [A] coffee [S] great [O] great [C] drinks quality [SSEP] [A] b fast burritos [S] great [O] fast [C] food quality [SSEP] [A] menu [S] great [O] gluten free [C] food style_options', '[O] great [A] drinks [C] drinks quality [S] great [SSEP] [O] great [A] corn beef hash [C] food quality [S] great [SSEP] [O] great [A] coffee [C] drinks quality [S] great [SSEP] [O] fast [A] burritos [C] food quality [S] great [SSEP] [O] gluten free [A] menu [C] food quality [S] great', '[O] great [A] drinks [S] great [C] drinks quality [SSEP] [O] great [A] corn beef hash [S] great [C] food quality [SSEP] [O] great [A] coffee [S] great [C] drinks quality [SSEP] [O] fast [A] burritos [S] great [C] food quality [SSEP] [O] gluten free [A] menu [S] great [C] food quality']

task, data: acos rest16
target: [('restaurant general', 'place', 'great', 'fun'), ('service general', 'service', 'great', 'fantastic')]
output: ['[A] place [O] fun [S] great [C] ambience general', '[A] service [O] fantastic [S] great [C] service general']
sent: ['the', 'service', 'is', 'fantastic', 'at', 'this', 'fun', 'place', '.']
counter: {('service general', 'service', 'great', 'fantastic'): 5, ('ambience general', 'place', 'great', 'fun'): 5}
output quads: ['[A] service [O] fantastic [S] great [C] service general', '[A] place [O] fun [S] great [C] ambience general']
multi_path: ['[A] service [O] fantastic [S] great [C] service general [SSEP] [A] place [O] fun [S] great [C] ambience general', '[A] service [O] fantastic [C] service general [S] great [SSEP] [A] place [O] fun [C] ambience general [S] great', '[A] service [S] great [O] fantastic [C] service general [SSEP] [A] place [S] great [O] fun [C] ambience general', '[O] fantastic [A] service [C] service general [S] great [SSEP] [O] fun [A] place [C] ambience general [S] great', '[O] fantastic [A] service [S] great [C] service general [SSEP] [O] fun [A] place [S] great [C] ambience general']

task, data: acos rest16
target: [('restaurant general', 'place', 'great', 'great')]
output: ['[A] null [O] great [S] great [C] service general']
sent: ['if', 'there', 'is', 'a', 'line', 'very', 'day', 'of', 'the', 'week', 'for', 'the', 'entire', 'time', 'a', 'place', 'is', 'open', ',', 'you', 'know', 'it', 'is', 'great', '.']
counter: {('service general', 'null', 'great', 'great'): 5}
output quads: ['[A] null [O] great [S] great [C] service general']
multi_path: ['[A] it [O] great [S] great [C] service general', '[A] it [O] great [C] service general [S] great', '[A] it [S] great [O] great [C] service general', '[O] great [A] it [C] service general [S] great', '[O] great [A] it [S] great [C] service general']

task, data: acos rest16
target: [('restaurant general', 'standby', 'great', 'best')]
output: ['[A] standby [O] best [S] great [C] restaurant miscellaneous']
sent: ['best', 'neighborhood', 'standby', '.']
counter: {('restaurant miscellaneous', 'standby', 'great', 'best'): 4, ('restaurant general', 'standby', 'great', 'best'): 1}
output quads: ['[A] standby [O] best [S] great [C] restaurant miscellaneous']
multi_path: ['[A] standby [O] best [S] great [C] restaurant miscellaneous', '[A] standby [O] best [C] restaurant miscellaneous [S] great', '[A] standby [S] great [O] best [C] restaurant miscellaneous', '[O] best [A] standby [C] restaurant miscellaneous [S] great', '[O] best [A] standby [S] great [C] restaurant general']

task, data: acos rest16
target: [('ambience general', 'atmosphere', 'great', 'lighthearted'), ('ambience general', 'music', 'great', 'great'), ('drinks style_options', 'bar tenders', 'great', 'generous')]
output: ['[A] atmosphere [O] lighthearted [S] great [C] ambience general', '[A] bar tenders [O] generous [S] great [C] service general', '[A] music [O] great [S] great [C] ambience general']
sent: ['the', 'music', 'is', 'great', ',', 'no', 'night', 'better', 'or', 'worse', ',', 'the', 'bar', 'tenders', 'are', 'generous', 'with', 'the', 'pouring', ',', 'and', 'the', 'lighthearted', 'atmosphere', 'will', 'lifts', 'you', 'spirits', '.']
counter: {('ambience general', 'music', 'great', 'great'): 5, ('service general', 'bar tenders', 'great', 'generous'): 5, ('ambience general', 'atmosphere', 'great', 'lighthearted'): 5}
output quads: ['[A] music [O] great [S] great [C] ambience general', '[A] bar tenders [O] generous [S] great [C] service general', '[A] atmosphere [O] lighthearted [S] great [C] ambience general']
multi_path: ['[A] music [O] great [S] great [C] ambience general [SSEP] [A] bar tenders [O] generous [S] great [C] service general [SSEP] [A] atmosphere [O] lighthearted [S] great [C] ambience general', '[A] music [O] great [C] ambience general [S] great [SSEP] [A] bar tenders [O] generous [C] service general [S] great [SSEP] [A] atmosphere [O] lighthearted [C] ambience general [S] great', '[A] music [S] great [O] great [C] ambience general [SSEP] [A] bar tenders [S] great [O] generous [C] service general [SSEP] [A] atmosphere [S] great [O] lighthearted [C] ambience general', '[O] great [A] music [C] ambience general [S] great [SSEP] [O] generous [A] bar tenders [C] service general [S] great [SSEP] [O] lighthearted [A] atmosphere [C] ambience general [S] great', '[O] great [A] music [S] great [C] ambience general [SSEP] [O] generous [A] bar tenders [S] great [C] service general [SSEP] [O] lighthearted [A] atmosphere [S] great [C] ambience general']

task, data: acos rest16
target: [('ambience general', 'music', 'great', 'very'), ('ambience general', 'subwoofer to the sound system', 'bad', 'annoying')]
output: ['[A] music [O] hip [S] great [C] ambience general', '[A] subwoofer [O] annoying [S] bad [C] ambience general']
sent: ['the', 'music', 'playing', 'was', 'very', 'hip', ',', '20', '-', '30', 'something', 'pop', 'music', ',', 'but', 'the', 'subwoofer', 'to', 'the', 'sound', 'system', 'was', 'located', 'under', 'my', 'seat', ',', 'which', 'became', 'annoying', 'midway', 'through', 'dinner', '.']
counter: {('ambience general', 'music', 'great', 'hip'): 5, ('ambience general', 'subwoofer', 'bad', 'annoying'): 5}
output quads: ['[A] music [O] hip [S] great [C] ambience general', '[A] subwoofer [O] annoying [S] bad [C] ambience general']
multi_path: ['[A] music [O] hip [S] great [C] ambience general [SSEP] [A] subwoofer [O] annoying [S] bad [C] ambience general', '[A] music [O] hip [C] ambience general [S] great [SSEP] [A] subwoofer [O] annoying [C] ambience general [S] bad', '[A] music [S] great [O] hip [C] ambience general [SSEP] [A] subwoofer [S] bad [O] annoying [C] ambience general', '[O] hip [A] music [C] ambience general [S] great [SSEP] [O] annoying [A] subwoofer [C] ambience general [S] bad', '[O] hip [A] music [S] great [C] ambience general [SSEP] [O] annoying [A] subwoofer [S] bad [C] ambience general']

task, data: acos rest16
target: [('food quality', 'shellfish and shrimp appetizer', 'ok', 'alright')]
output: ['[A] shellfish [O] alright [S] ok [C] food quality', '[A] shrimp appetizer [O] alright [S] ok [C] food quality']
sent: ['i', 'got', 'the', 'shellfish', 'and', 'shrimp', 'appetizer', 'and', 'it', 'was', 'alright', '.']
counter: {('food quality', 'shellfish', 'ok', 'alright'): 5, ('food quality', 'shrimp appetizer', 'ok', 'alright'): 5}
output quads: ['[A] shellfish [O] alright [S] ok [C] food quality', '[A] shrimp appetizer [O] alright [S] ok [C] food quality']
multi_path: ['[A] shellfish [O] alright [S] ok [C] food quality [SSEP] [A] shrimp appetizer [O] alright [S] ok [C] food quality', '[A] shellfish [O] alright [C] food quality [S] ok [SSEP] [A] shrimp appetizer [O] alright [C] food quality [S] ok', '[A] shellfish [S] ok [O] alright [C] food quality [SSEP] [A] shrimp appetizer [S] ok [O] alright [C] food quality', '[O] alright [A] shellfish [C] food quality [S] ok [SSEP] [O] alright [A] shrimp appetizer [C] food quality [S] ok', '[O] alright [A] shellfish [S] ok [C] food quality [SSEP] [O] alright [A] shrimp appetizer [S] ok [C] food quality']

task, data: acos rest16
target: [('food quality', 'seafood', 'ok', 'ok'), ('food style_options', 'seafood', 'ok', 'ok')]
output: ['[A] null [O] ok [S] ok [C] food quality', "[A] seafood [O] 't the freshest [S] bad [C] food quality"]
sent: ['it', 'was', 'n', "'", 't', 'the', 'freshest', 'seafood', 'ever', ',', 'but', 'the', 'taste', 'and', 'presentation', 'was', 'ok', '.']
counter: {('food quality', 'seafood', 'bad', "'t the freshest"): 4, ('food quality', 'null', 'ok', 'ok'): 5, ('food quality', 'seafood', 'bad', 'freshest'): 1}
output quads: ["[A] seafood [O] 't the freshest [S] bad [C] food quality", '[A] null [O] ok [S] ok [C] food quality']
multi_path: ["[A] seafood [O]n't the freshest [S] bad [C] food quality [SSEP] [A] it [O] ok [S] ok [C] food quality", "[A] seafood [O]n't the freshest [C] food quality [S] bad [SSEP] [A] it [O] ok [C] food quality [S] ok", '[A] seafood [S] bad [O] freshest [C] food quality [SSEP] [A] it [S] ok [O] ok [C] food quality', "[O]n't the freshest [A] seafood [C] food quality [S] bad [SSEP] [O] ok [A] it [C] food quality [S] ok", "[O]n't the freshest [A] seafood [S] bad [C] food quality [SSEP] [O] ok [A] it [S] ok [C] food quality"]

task, data: acos rest16
target: [('food quality', 'peppercorn sauce', 'ok', 'indistinguishable'), ('food quality', 'red wine reduction', 'ok', 'indistinguishable')]
output: ['[A] null [O] null [S] great [C] food quality']
sent: ['it', '?', 's', 'served', 'with', 'either', 'a', 'peppercorn', 'sauce', 'or', 'red', 'wine', 'reduction', ',', 'though', 'both', 'were', 'indistinguishable', 'in', 'taste', '.']
counter: {('food quality', 'null', 'great', 'null'): 5}
output quads: ['[A] null [O] null [S] great [C] food quality']
multi_path: ['[A] it [O] null [S] great [C] food quality', '[A] it [O] null [C] food quality [S] great', '[A] it [S] great [O] null [C] food quality', '[O] null [A] it [C] food quality [S] great', '[O] null [A] it [S] great [C] food quality']

task, data: acos rest16
target: [('food quality', 'steak', 'bad', 'null')]
output: ['[A] meat tenderizer [O] null [S] bad [C] food quality']
sent: ['though', ',', 'one', 'thing', 'i', 'realized', 'later', 'on', 'was', 'that', 'the', 'restaurant', 'either', 'used', 'msg', 'or', 'a', 'meat', 'tenderizer', 'on', 'the', 'steak', '.']
counter: {('food quality', 'meat tenderizer', 'bad', 'null'): 5}
output quads: ['[A] meat tenderizer [O] null [S] bad [C] food quality']
multi_path: ['[A] meat tenderizer [O] null [S] bad [C] food quality', '[A] meat tenderizer [O] null [C] food quality [S] bad', '[A] meat tenderizer [S] bad [O] null [C] food quality', '[O] null [A] meat tenderizer [C] food quality [S] bad', '[O] null [A] meat tenderizer [S] bad [C] food quality']

task, data: acos rest16
target: [('food quality', 'desert', 'great', 'perfect'), ('food quality', 'dinner', 'great', 'perfect')]
output: ['[A] desert [O] perfect [S] great [C] food quality']
sent: ['the', 'desert', 'was', 'the', 'perfect', 'ending', 'to', 'an', 'almost', 'perfect', 'dinner', '.']
counter: {('food quality', 'desert', 'great', 'perfect'): 5, ('food quality', 'dinner', 'great', 'null'): 2}
output quads: ['[A] desert [O] perfect [S] great [C] food quality']
multi_path: ['[A] desert [O] perfect [S] great [C] food quality', '[A] desert [O] perfect [C] food quality [S] great [SSEP] [A] dinner [O] null [C] food quality [S] great', '[A] desert [S] great [O] perfect [C] food quality', '[O] perfect [A] desert [C] food quality [S] great [SSEP] [O] null [A] dinner [C] food quality [S] great', '[O] perfect [A] desert [S] great [C] food quality']

task, data: acos rest16
target: [('drinks quality', 'sake', 'great', 'good'), ('food quality', 'food', 'great', 'good')]
output: ['[A] food [O] null [S] great [C] food quality', '[A] sake [O] good [S] great [C] drinks quality']
sent: ['good', 'sake', ',', 'good', 'food', '–', 'i', 'honestly', 'do', 'n', "'", 't', 'know', 'much', 'about', 'japanese', 'food', 'at', 'all', '.']
counter: {('drinks quality', 'sake', 'great', 'good'): 5, ('food quality', 'food', 'great', 'null'): 5}
output quads: ['[A] sake [O] good [S] great [C] drinks quality', '[A] food [O] null [S] great [C] food quality']
multi_path: ['[A] sake [O] good [S] great [C] drinks quality [SSEP] [A] food [O] null [S] great [C] food quality', '[A] sake [O] good [C] drinks quality [S] great [SSEP] [A] food [O] null [C] food quality [S] great', '[A] sake [S] great [O] good [C] drinks quality [SSEP] [A] food [S] great [O] null [C] food quality', '[O] good [A] sake [C] drinks quality [S] great [SSEP] [O] null [A] food [C] food quality [S] great', '[O] good [A] sake [S] great [C] drinks quality [SSEP] [O] null [A] food [S] great [C] food quality']

task, data: acos rest16
target: [('drinks quality', 'sake', 'great', 'good'), ('service general', 'server', 'great', 'good')]
output: ['[A] server [O] good [S] great [C] service general']
sent: ['server', 'made', 'several', 'sake', 'suggestions', 'which', 'were', 'very', 'good', '.']
counter: {('service general', 'server', 'great', 'good'): 5}
output quads: ['[A] server [O] good [S] great [C] service general']
multi_path: ['[A] server [O] good [S] great [C] service general', '[A] server [O] good [C] service general [S] great', '[A] server [S] great [O] good [C] service general', '[O] good [A] server [C] service general [S] great', '[O] good [A] server [S] great [C] service general']

task, data: acos rest16
target: [('food quality', 'lobster 3 ways', 'great', 'best')]
output: ['[A] dishes [O] null [S] great [C] food style_options', '[A] lobster 3 ways [O] best [S] great [C] food quality']
sent: ['had', 'many', 'dishes', 'but', 'the', 'best', 'was', 'the', 'lobster', '3', 'ways', '.']
counter: {('food style_options', 'dishes', 'great', 'null'): 5, ('food quality', 'lobster 3 ways', 'great', 'best'): 5}
output quads: ['[A] dishes [O] null [S] great [C] food style_options', '[A] lobster 3 ways [O] best [S] great [C] food quality']
multi_path: ['[A] dishes [O] null [S] great [C] food style_options [SSEP] [A] lobster 3 ways [O] best [S] great [C] food quality', '[A] dishes [O] null [C] food style_options [S] great [SSEP] [A] lobster 3 ways [O] best [C] food quality [S] great', '[A] dishes [S] great [O] null [C] food style_options [SSEP] [A] lobster 3 ways [S] great [O] best [C] food quality', '[O] null [A] dishes [C] food style_options [S] great [SSEP] [O] best [A] lobster 3 ways [C] food quality [S] great', '[O] null [A] dishes [S] great [C] food style_options [SSEP] [O] best [A] lobster 3 ways [S] great [C] food quality']

task, data: acos rest16
target: [('ambience general', 'feel', 'bad', 'crowded'), ('service general', 'waiter', 'bad', 'unfriendly')]
output: ['[A] feel of the restaurant [O] crowded [S] bad [C] ambience general', '[A] waiter [O] unfriendly [S] bad [C] service general']
sent: ['the', 'waiter', 'was', 'a', 'bit', 'unfriendly', 'and', 'the', 'feel', 'of', 'the', 'restaurant', 'was', 'crowded', '.']
counter: {('service general', 'waiter', 'bad', 'unfriendly'): 5, ('ambience general', 'feel of the restaurant', 'bad', 'crowded'): 4, ('ambience general', 'feel of the restaurant', 'ok', 'crowded'): 1}
output quads: ['[A] waiter [O] unfriendly [S] bad [C] service general', '[A] feel of the restaurant [O] crowded [S] bad [C] ambience general']
multi_path: ['[A] waiter [O] unfriendly [S] bad [C] service general [SSEP] [A] feel of the restaurant [O] crowded [S] bad [C] ambience general', '[A] waiter [O] unfriendly [C] service general [S] bad [SSEP] [A] feel of the restaurant [O] crowded [C] ambience general [S] bad', '[A] waiter [S] bad [O] unfriendly [C] service general [SSEP] [A] feel of the restaurant [S] ok [O] crowded [C] ambience general', '[O] unfriendly [A] waiter [C] service general [S] bad [SSEP] [O] crowded [A] feel of the restaurant [C] ambience general [S] bad', '[O] unfriendly [A] waiter [S] bad [C] service general [SSEP] [O] crowded [A] feel of the restaurant [S] bad [C] ambience general']

task, data: acos rest16
target: [('restaurant miscellaneous', 'bathroom stall', 'great', 'null')]
output: ['[A] bathroom stall [O] null [S] bad [C] ambience general']
sent: ['also', ',', 'there', 'was', 'only', 'one', 'bathroom', 'stall', '-', 'probably', 'need', 'more', 'for', 'such', 'big', 'crowds', '.']
counter: {('ambience general', 'bathroom stall', 'bad', 'null'): 5}
output quads: ['[A] bathroom stall [O] null [S] bad [C] ambience general']
multi_path: ['[A] bathroom stall [O] null [S] bad [C] ambience general', '[A] bathroom stall [O] null [C] ambience general [S] bad', '[A] bathroom stall [S] bad [O] null [C] ambience general', '[O] null [A] bathroom stall [C] ambience general [S] bad', '[O] null [A] bathroom stall [S] bad [C] ambience general']

task, data: acos rest16
target: [('food style_options', 'menu', 'great', 'creative')]
output: ['[A] food [O] excited [S] great [C] food quality', '[A] menu [O] creative [S] great [C] food style_options']
sent: ['most', 'importantly', ',', 'we', 'were', 'so', 'excited', 'about', 'the', 'food', 'after', 'seeing', 'the', 'very', 'creative', 'menu', '.']
counter: {('food quality', 'food', 'great', 'excited'): 5, ('food style_options', 'menu', 'great', 'creative'): 5}
output quads: ['[A] food [O] excited [S] great [C] food quality', '[A] menu [O] creative [S] great [C] food style_options']
multi_path: ['[A] food [O] excited [S] great [C] food quality [SSEP] [A] menu [O] creative [S] great [C] food style_options', '[A] food [O] excited [C] food quality [S] great [SSEP] [A] menu [O] creative [C] food style_options [S] great', '[A] food [S] great [O] excited [C] food quality [SSEP] [A] menu [S] great [O] creative [C] food style_options', '[O] excited [A] food [C] food quality [S] great [SSEP] [O] creative [A] menu [C] food style_options [S] great', '[O] excited [A] food [S] great [C] food quality [SSEP] [O] creative [A] menu [S] great [C] food style_options']

task, data: acos rest16
target: [('food quality', 'food', 'bad', 'overpriced'), ('food quality', 'food', 'great', 'good')]
output: ['[A] food [O] good [S] bad [C] food quality', '[A] food [O] overpriced [S] bad [C] food prices']
sent: ['at', 'best', ',', 'the', 'food', 'was', 'good', 'and', 'definately', 'overpriced', '.']
counter: {('food quality', 'food', 'bad', 'good'): 3, ('food prices', 'food', 'bad', 'overpriced'): 5, ('food quality', 'food', 'great', 'good'): 2}
output quads: ['[A] food [O] good [S] bad [C] food quality', '[A] food [O] overpriced [S] bad [C] food prices']
multi_path: ['[A] food [O] good [S] bad [C] food quality [SSEP] [A] food [O] overpriced [S] bad [C] food prices', '[A] food [O] good [C] food quality [S] bad [SSEP] [A] food [O] overpriced [C] food prices [S] bad', '[A] food [S] bad [O] good [C] food quality [SSEP] [A] food [S] bad [O] overpriced [C] food prices', '[O] good [A] food [C] food quality [S] great [SSEP] [O] overpriced [A] food [C] food prices [S] bad', '[O] good [A] food [S] great [C] food quality [SSEP] [O] overpriced [A] food [S] bad [C] food prices']

task, data: acos rest16
target: [('food prices', 'food', 'bad', 'null'), ('food style_options', 'food', 'bad', 'null')]
output: ['[A] null [O] null [S] bad [C] restaurant prices']
sent: ['for', 'the', 'amount', 'of', 'food', 'we', 'got', 'the', 'prices', 'should', 'have', 'been', 'lower', '.']
counter: {('restaurant prices', 'null', 'bad', 'null'): 5, ('food quality', 'food', 'bad', 'null'): 2}
output quads: ['[A] null [O] null [S] bad [C] restaurant prices']
multi_path: ['[A] it [O] null [S] bad [C] restaurant prices', '[A] it [O] null [C] restaurant prices [S] bad [SSEP] [A] food [O] null [C] food quality [S] bad', '[A] it [S] bad [O] null [C] restaurant prices', '[O] null [A] it [C] restaurant prices [S] bad [SSEP] [O] null [A] food [C] food quality [S] bad', '[O] null [A] it [S] bad [C] restaurant prices']

task, data: acos rest16
target: [('restaurant general', 'pizza joint', 'great', 'favortie')]
output: ['[A] pizza joint [O] favor [S] great [C] restaurant general']
sent: ['my', 'favortie', 'pizza', 'joint', 'in', 'seattle']
counter: {('restaurant general', 'pizza joint', 'great', 'favor'): 5}
output quads: ['[A] pizza joint [O] favor [S] great [C] restaurant general']
multi_path: ['[A] pizza joint [O] favor [S] great [C] restaurant general', '[A] pizza joint [O] favor [C] restaurant general [S] great', '[A] pizza joint [S] great [O] favor [C] restaurant general', '[O] favor [A] pizza joint [C] restaurant general [S] great', '[O] favor [A] pizza joint [S] great [C] restaurant general']

task, data: acos rest16
target: [('restaurant general', 'restaurant', 'great', 'enjoy'), ('restaurant general', 'restaurant', 'great', 'rave')]
output: ['[A] restaurant [O] enjoy [S] great [C] restaurant miscellaneous', '[A] restaurant [O] rave [S] great [C] restaurant miscellaneous']
sent: ['–', 'this', 'is', 'my', '`', '`', 'must', 'bring', 'out', 'of', 'town', 'guests', 'to', "'", "'", 'restaurant', 'and', 'they', 'always', 'enjoy', 'and', 'rave', 'about', 'it', '.']
counter: {('restaurant miscellaneous', 'restaurant', 'great', 'enjoy'): 5, ('restaurant miscellaneous', 'restaurant', 'great', 'rave'): 3}
output quads: ['[A] restaurant [O] enjoy [S] great [C] restaurant miscellaneous', '[A] restaurant [O] rave [S] great [C] restaurant miscellaneous']
multi_path: ['[A] restaurant [O] enjoy [S] great [C] restaurant miscellaneous [SSEP] [A] restaurant [O] rave [S] great [C] restaurant miscellaneous', '[A] restaurant [O] enjoy [C] restaurant miscellaneous [S] great', '[A] restaurant [S] great [O] enjoy [C] restaurant miscellaneous [SSEP] [A] restaurant [S] great [O] rave [C] restaurant miscellaneous', '[O] enjoy [A] restaurant [C] restaurant miscellaneous [S] great', '[O] enjoy [A] restaurant [S] great [C] restaurant miscellaneous [SSEP] [O] rave [A] restaurant [S] great [C] restaurant miscellaneous']

task, data: acos rest16
target: [('ambience general', 'decor', 'great', 'enjoy'), ('ambience general', 'decor', 'great', 'simplicity'), ('ambience general', 'feeling', 'great', 'intimate')]
output: ['[A] decor [O] enjoy [S] great [C] ambience general', '[A] decor [O] simplicity [S] great [C] ambience general', '[A] restaurant [O] intimate [S] great [C] ambience general']
sent: ['i', 'also', 'really', 'enjoy', 'the', 'simplicity', 'of', 'the', 'decor', 'and', 'intimate', 'feeling', 'of', 'a', 'small', 'restaurant', '.']
counter: {('ambience general', 'decor', 'great', 'enjoy'): 5, ('ambience general', 'decor', 'great', 'simplicity'): 5, ('ambience general', 'restaurant', 'great', 'intimate'): 5}
output quads: ['[A] decor [O] enjoy [S] great [C] ambience general', '[A] decor [O] simplicity [S] great [C] ambience general', '[A] restaurant [O] intimate [S] great [C] ambience general']
multi_path: ['[A] decor [O] enjoy [S] great [C] ambience general [SSEP] [A] decor [O] simplicity [S] great [C] ambience general [SSEP] [A] restaurant [O] intimate [S] great [C] ambience general', '[A] decor [O] enjoy [C] ambience general [S] great [SSEP] [A] decor [O] simplicity [C] ambience general [S] great [SSEP] [A] restaurant [O] intimate [C] ambience general [S] great', '[A] decor [S] great [O] enjoy [C] ambience general [SSEP] [A] decor [S] great [O] simplicity [C] ambience general [SSEP] [A] restaurant [S] great [O] intimate [C] ambience general', '[O] enjoy [A] decor [C] ambience general [S] great [SSEP] [O] simplicity [A] decor [C] ambience general [S] great [SSEP] [O] intimate [A] restaurant [C] ambience general [S] great', '[O] enjoy [A] decor [S] great [C] ambience general [SSEP] [O] simplicity [A] decor [S] great [C] ambience general [SSEP] [O] intimate [A] restaurant [S] great [C] ambience general']

task, data: acos rest16
target: [('food quality', 'delicious', 'great', 'pizza ’ s')]
output: ["[A] gourmet pizza's [O] delicious [S] great [C] food quality"]
sent: ['we', "'", 're', 'ca', 'n', "'", 't', 'say', 'enough', 'about', 'their', 'delicious', 'gourmet', 'pizza', '’', 's', '!']
counter: {('food quality', "gourmet pizza's", 'great', 'delicious'): 4, ('food quality', 'gourmet pizza ’ s', 'great', 'delicious'): 1}
output quads: ["[A] gourmet pizza's [O] delicious [S] great [C] food quality"]
multi_path: ["[A] gourmet pizza's [O] delicious [S] great [C] food quality", "[A] gourmet pizza's [O] delicious [C] food quality [S] great", "[A] gourmet pizza's [S] great [O] delicious [C] food quality", "[O] delicious [A] gourmet pizza's [C] food quality [S] great", '[O] delicious [A] gourmet pizza ’ s [S] great [C] food quality']

task, data: acos rest16
target: [('food style_options', 'menu', 'great', 'creative'), ('food style_options', "pizza's", 'great', 'thin')]
output: ['[A] menu [O] creative [S] great [C] food style_options', "[A] pizza's [O] thin [S] great [C] food quality"]
sent: ['the', 'pizza', "'", 's', 'are', 'thin', 'crust', 'and', 'the', 'menu', 'offers', 'very', 'creative', 'combinations', 'and', 'toppings', '.']
counter: {('food quality', "pizza's", 'great', 'thin'): 5, ('food style_options', 'menu', 'great', 'creative'): 5}
output quads: ["[A] pizza's [O] thin [S] great [C] food quality", '[A] menu [O] creative [S] great [C] food style_options']
multi_path: ["[A] pizza's [O] thin [S] great [C] food quality [SSEP] [A] menu [O] creative [S] great [C] food style_options", "[A] pizza's [O] thin [C] food quality [S] great [SSEP] [A] menu [O] creative [C] food style_options [S] great", "[A] pizza's [S] great [O] thin [C] food quality [SSEP] [A] menu [S] great [O] creative [C] food style_options", "[O] thin [A] pizza's [C] food quality [S] great [SSEP] [O] creative [A] menu [C] food style_options [S] great", "[O] thin [A] pizza's [S] great [C] food quality [SSEP] [O] creative [A] menu [S] great [C] food style_options"]

task, data: acos rest16
target: [('food quality', 'pizza ensalata', 'great', 'try')]
output: ['[A] pizza ensalata [O] null [S] great [C] food quality']
sent: ['try', 'the', 'pizza', 'ensalata', '!']
counter: {('food quality', 'pizza ensalata', 'great', 'null'): 5}
output quads: ['[A] pizza ensalata [O] null [S] great [C] food quality']
multi_path: ['[A] pizza ensalata [O] null [S] great [C] food quality', '[A] pizza ensalata [O] null [C] food quality [S] great', '[A] pizza ensalata [S] great [O] null [C] food quality', '[O] null [A] pizza ensalata [C] food quality [S] great', '[O] null [A] pizza ensalata [S] great [C] food quality']

task, data: acos rest16
target: [('food style_options', 'crust', 'great', 'thin'), ('food style_options', "pizza's", 'great', 'not huge')]
output: ['[A] crust [O] thin [S] great [C] food quality', "[A] pizza's [O] not huge [S] ok [C] food style_options"]
sent: ['the', 'pizza', "'", 's', 'are', 'not', 'huge', 'and', 'the', 'crust', 'is', 'thin', '…', 'keep', 'that', 'in', 'mind', 'when', 'you', '’', 're', 'ordering', '.']
counter: {('food style_options', "pizza's", 'ok', 'not huge'): 5, ('food quality', 'crust', 'great', 'thin'): 5}
output quads: ["[A] pizza's [O] not huge [S] ok [C] food style_options", '[A] crust [O] thin [S] great [C] food quality']
multi_path: ["[A] pizza's [O] not huge [S] ok [C] food style_options [SSEP] [A] crust [O] thin [S] great [C] food quality", "[A] pizza's [O] not huge [C] food style_options [S] ok [SSEP] [A] crust [O] thin [C] food quality [S] great", "[A] pizza's [S] ok [O] not huge [C] food style_options [SSEP] [A] crust [S] great [O] thin [C] food quality", "[O] not huge [A] pizza's [C] food style_options [S] ok [SSEP] [O] thin [A] crust [C] food quality [S] great", "[O] not huge [A] pizza's [S] ok [C] food style_options [SSEP] [O] thin [A] crust [S] great [C] food quality"]

task, data: acos rest16
target: [('food quality', 'food', 'great', 'sinful')]
output: ['[A] food [O] sinful [S] bad [C] food quality']
sent: ['the', 'food', 'is', 'sinful', '.']
counter: {('food quality', 'food', 'bad', 'sinful'): 5}
output quads: ['[A] food [O] sinful [S] bad [C] food quality']
multi_path: ['[A] food [O] sinful [S] bad [C] food quality', '[A] food [O] sinful [C] food quality [S] bad', '[A] food [S] bad [O] sinful [C] food quality', '[O] sinful [A] food [C] food quality [S] bad', '[O] sinful [A] food [S] bad [C] food quality']

task, data: acos rest16
target: [('food quality', 'pancakes', 'great', 'decadent')]
output: ['[A] null [O] wowed [S] great [C] restaurant general', '[A] pancakes [O] decadent [S] great [C] food quality']
sent: ['the', 'specialty', 'here', 'is', 'decadent', 'pancakes', ',', 'but', 'i', "'", 've', 'been', 'back', 'now', 'four', 'times', ',', 'and', 'i', "'", 've', 'been', 'wowed', 'every', 'time', '.']
counter: {('food quality', 'pancakes', 'great', 'decadent'): 5, ('restaurant general', 'null', 'great', 'wowed'): 5}
output quads: ['[A] pancakes [O] decadent [S] great [C] food quality', '[A] null [O] wowed [S] great [C] restaurant general']
multi_path: ['[A] pancakes [O] decadent [S] great [C] food quality [SSEP] [A] it [O] wowed [S] great [C] restaurant general', '[A] pancakes [O] decadent [C] food quality [S] great [SSEP] [A] it [O] wowed [C] restaurant general [S] great', '[A] pancakes [S] great [O] decadent [C] food quality [SSEP] [A] it [S] great [O] wowed [C] restaurant general', '[O] decadent [A] pancakes [C] food quality [S] great [SSEP] [O] wowed [A] it [C] restaurant general [S] great', '[O] decadent [A] pancakes [S] great [C] food quality [SSEP] [O] wowed [A] it [S] great [C] restaurant general']

task, data: acos rest16
target: [('food quality', 'fish', 'bad', 'decent')]
output: ['[A] null [O] good [S] great [C] restaurant miscellaneous']
sent: ['maybe', 'it', 'is', 'good', 'for', 'that', 'one', 'night', 'once', 'in', 'a', 'blue', 'moon', 'when', 'the', 'chefs', 'decide', 'to', 'use', 'fish', 'that', "'", 's', 'half', '-', 'way', 'decent', '.']
counter: {('restaurant miscellaneous', 'null', 'great', 'good'): 5}
output quads: ['[A] null [O] good [S] great [C] restaurant miscellaneous']
multi_path: ['[A] it [O] good [S] great [C] restaurant miscellaneous', '[A] it [O] good [C] restaurant miscellaneous [S] great', '[A] it [S] great [O] good [C] restaurant miscellaneous', '[O] good [A] it [C] restaurant miscellaneous [S] great', '[O] good [A] it [S] great [C] restaurant miscellaneous']

task, data: acos rest16
target: [('food prices', 'chef special dinner', 'bad', 'dissappointment'), ('food quality', 'chef special dinner', 'bad', 'dissappointment')]
output: ['[A] chef special dinner [O] dissappointment [S] bad [C] food quality']
sent: ['i', 'have', 'been', 'here', ',', 'spent', 'tons', 'of', 'money', 'on', 'a', 'chef', 'special', 'dinner', 'and', 'it', 'was', 'a', 'major', 'dissappointment', '.']
counter: {('food quality', 'chef special dinner', 'bad', 'dissappointment'): 5}
output quads: ['[A] chef special dinner [O] dissappointment [S] bad [C] food quality']
multi_path: ['[A] chef special dinner [O] dissappointment [S] bad [C] food quality', '[A] chef special dinner [O] dissappointment [C] food quality [S] bad', '[A] chef special dinner [S] bad [O] dissappointment [C] food quality', '[O] dissappointment [A] chef special dinner [C] food quality [S] bad', '[O] dissappointment [A] chef special dinner [S] bad [C] food quality']

task, data: acos rest16
target: [('food prices', 'plate', 'bad', 'null'), ('food quality', 'exotic fish', 'bad', 'null'), ('food style_options', 'exotic fish', 'bad', 'fancy')]
output: ['[A] fish [O] fancy [S] great [C] food style_options', '[A] fish [O] null [S] bad [C] food prices', '[A] fish [O] null [S] bad [C] food quality']
sent: ['fancy', 'pieces', 'of', 'exotic', 'fish', 'on', 'a', '$', '100', 'dollar', 'plate', 'and', 'not', 'one', 'was', 'eatable', '.']
counter: {('food style_options', 'fish', 'great', 'fancy'): 5, ('food quality', 'fish', 'bad', 'null'): 5, ('food prices', 'fish', 'bad', 'null'): 5}
output quads: ['[A] fish [O] fancy [S] great [C] food style_options', '[A] fish [O] null [S] bad [C] food quality', '[A] fish [O] null [S] bad [C] food prices']
multi_path: ['[A] fish [O] fancy [S] great [C] food style_options [SSEP] [A] fish [O] null [S] bad [C] food quality [SSEP] [A] fish [O] null [S] bad [C] food prices', '[A] fish [O] fancy [C] food style_options [S] great [SSEP] [A] fish [O] null [C] food quality [S] bad [SSEP] [A] fish [O] null [C] food prices [S] bad', '[A] fish [S] great [O] fancy [C] food style_options [SSEP] [A] fish [S] bad [O] null [C] food quality [SSEP] [A] fish [S] bad [O] null [C] food prices', '[O] fancy [A] fish [C] food style_options [S] great [SSEP] [O] null [A] fish [C] food quality [S] bad [SSEP] [O] null [A] fish [C] food prices [S] bad', '[O] fancy [A] fish [S] great [C] food style_options [SSEP] [O] null [A] fish [S] bad [C] food quality [SSEP] [O] null [A] fish [S] bad [C] food prices']

task, data: acos rest16
target: [('restaurant general', 'restaurant', 'great', 'delightful')]
output: ['[A] restaurant [O] delightful [S] great [C] restaurant general', '[A] restaurant [O] great [S] great [C] restaurant general']
sent: ['–', 'i', 'recently', 'had', 'the', 'pleasure', 'of', 'dining', 'as', 'this', 'delightful', 'restaurant', 'on', '2nd', 'street', 'and', 'wow', 'what', 'a', 'great', 'evening', 'we', 'had', '.']
counter: {('restaurant general', 'restaurant', 'great', 'delightful'): 5, ('restaurant general', 'restaurant', 'great', 'great'): 5}
output quads: ['[A] restaurant [O] delightful [S] great [C] restaurant general', '[A] restaurant [O] great [S] great [C] restaurant general']
multi_path: ['[A] restaurant [O] delightful [S] great [C] restaurant general [SSEP] [A] restaurant [O] great [S] great [C] restaurant general', '[A] restaurant [O] delightful [C] restaurant general [S] great [SSEP] [A] restaurant [O] great [C] restaurant general [S] great', '[A] restaurant [S] great [O] delightful [C] restaurant general [SSEP] [A] restaurant [S] great [O] great [C] restaurant general', '[O] delightful [A] restaurant [C] restaurant general [S] great [SSEP] [O] great [A] restaurant [C] restaurant general [S] great', '[O] delightful [A] restaurant [S] great [C] restaurant general [SSEP] [O] great [A] restaurant [S] great [C] restaurant general']

task, data: acos rest16
target: [('ambience general', 'atmosphere', 'great', 'good'), ('ambience general', 'music', 'great', 'good'), ('ambience general', 'vibe', 'great', 'nice'), ('restaurant miscellaneous', 'people', 'great', 'happy')]
output: ['[A] atmosphere [O] good [S] great [C] ambience general', '[A] music [O] good [S] great [C] ambience general', '[A] people [O] happy [S] great [C] service general', '[A] vibe [O] nice [S] great [C] ambience general']
sent: ['there', 'was', 'a', 'really', 'nice', 'vibe', 'about', 'the', 'place', '.', '.', '.', 'good', 'music', ',', 'atmosphere', 'and', 'happy', 'looking', 'people', '.']
counter: {('ambience general', 'vibe', 'great', 'nice'): 5, ('ambience general', 'music', 'great', 'good'): 5, ('ambience general', 'atmosphere', 'great', 'good'): 5, ('service general', 'people', 'great', 'happy'): 5}
output quads: ['[A] vibe [O] nice [S] great [C] ambience general', '[A] music [O] good [S] great [C] ambience general', '[A] atmosphere [O] good [S] great [C] ambience general', '[A] people [O] happy [S] great [C] service general']
multi_path: ['[A] vibe [O] nice [S] great [C] ambience general [SSEP] [A] music [O] good [S] great [C] ambience general [SSEP] [A] atmosphere [O] good [S] great [C] ambience general [SSEP] [A] people [O] happy [S] great [C] service general', '[A] vibe [O] nice [C] ambience general [S] great [SSEP] [A] music [O] good [C] ambience general [S] great [SSEP] [A] atmosphere [O] good [C] ambience general [S] great [SSEP] [A] people [O] happy [C] service general [S] great', '[A] vibe [S] great [O] nice [C] ambience general [SSEP] [A] music [S] great [O] good [C] ambience general [SSEP] [A] atmosphere [S] great [O] good [C] ambience general [SSEP] [A] people [S] great [O] happy [C] service general', '[O] nice [A] vibe [C] ambience general [S] great [SSEP] [O] good [A] music [C] ambience general [S] great [SSEP] [O] good [A] atmosphere [C] ambience general [S] great [SSEP] [O] happy [A] people [C] service general [S] great', '[O] nice [A] vibe [S] great [C] ambience general [SSEP] [O] good [A] music [S] great [C] ambience general [SSEP] [O] good [A] atmosphere [S] great [C] ambience general [SSEP] [O] happy [A] people [S] great [C] service general']

task, data: acos rest16
target: [('restaurant general', 'open sesame', 'great', 'null')]
output: ['[A] owners of open sesame [O] null [S] great [C] restaurant general']
sent: ['to', 'the', 'owners', 'of', 'open', 'sesame', '.', '.', '.', 'bravo', '.', '.', '.', 'i', 'ca', 'n', "'", 't', 'wait', 'to', 'come', 'back', 'to', 'dine', 'at', 'your', 'restaurant', '!']
counter: {('restaurant general', 'owners of open sesame', 'great', 'null'): 5}
output quads: ['[A] owners of open sesame [O] null [S] great [C] restaurant general']
multi_path: ['[A] owners of open sesame [O] null [S] great [C] restaurant general', '[A] owners of open sesame [O] null [C] restaurant general [S] great', '[A] owners of open sesame [S] great [O] null [C] restaurant general', '[O] null [A] owners of open sesame [C] restaurant general [S] great', '[O] null [A] owners of open sesame [S] great [C] restaurant general']

task, data: acos rest16
target: [('restaurant miscellaneous', 'place', 'ok', 'tiny')]
output: ['[A] place [O] tiny [S] bad [C] restaurant miscellaneous', '[A] seat [O] easier [S] great [C] restaurant miscellaneous', '[A] table [O] easier [S] great [C] restaurant miscellaneous']
sent: ['it', "'", 's', 'a', 'tiny', 'place', 'so', 'if', 'you', 'get', 'there', 'before', '8pm', 'on', 'a', 'weekend', '(', 'thurs', '?', 'sun', ')', 'you', 'will', 'find', 'it', 'easier', 'to', 'get', 'a', 'table', 'or', 'a', 'seat', 'at', 'the', 'sushi', 'bar', '.']
counter: {('restaurant miscellaneous', 'place', 'bad', 'tiny'): 5, ('restaurant miscellaneous', 'table', 'great', 'easier'): 4, ('restaurant miscellaneous', 'seat', 'great', 'easier'): 3, ('restaurant miscellaneous', 'table', 'ok', 'easier'): 1, ('restaurant miscellaneous', 'seat', 'ok', 'easier'): 2}
output quads: ['[A] place [O] tiny [S] bad [C] restaurant miscellaneous', '[A] table [O] easier [S] great [C] restaurant miscellaneous', '[A] seat [O] easier [S] great [C] restaurant miscellaneous']
multi_path: ['[A] place [O] tiny [S] bad [C] restaurant miscellaneous [SSEP] [A] table [O] easier [S] great [C] restaurant miscellaneous [SSEP] [A] seat [O] easier [S] great [C] restaurant miscellaneous', '[A] place [O] tiny [C] restaurant miscellaneous [S] bad [SSEP] [A] table [O] easier [C] restaurant miscellaneous [S] ok [SSEP] [A] seat [O] easier [C] restaurant miscellaneous [S] ok', '[A] place [S] bad [O] tiny [C] restaurant miscellaneous [SSEP] [A] table [S] great [O] easier [C] restaurant miscellaneous [SSEP] [A] seat [S] great [O] easier [C] restaurant miscellaneous', '[O] tiny [A] place [C] restaurant miscellaneous [S] bad [SSEP] [O] easier [A] table [C] restaurant miscellaneous [S] great [SSEP] [O] easier [A] seat [C] restaurant miscellaneous [S] ok', '[O] tiny [A] place [S] bad [C] restaurant miscellaneous [SSEP] [O] easier [A] table [S] great [C] restaurant miscellaneous [SSEP] [O] easier [A] seat [S] great [C] restaurant miscellaneous']

task, data: acos rest16
target: [('food quality', 'null', 'great', 'good'), ('food style_options', 'portions', 'great', 'large'), ('food style_options', 'sushi dishes', 'great', 'creative')]
output: ['[A] null [O] good tasting [S] great [C] food quality', '[A] portions [O] large [S] great [C] food style_options', '[A] sushi dishes [O] creative [S] great [C] food style_options']
sent: ['if', 'you', "'", 're', 'interested', 'in', 'good', 'tasting', '(', 'without', 'the', 'fish', 'taste', 'or', 'smell', ')', ',', 'large', 'portions', 'and', 'creative', 'sushi', 'dishes', 'this', 'is', 'your', 'place', '.', '.', '.']
counter: {('food quality', 'null', 'great', 'good tasting'): 5, ('food style_options', 'portions', 'great', 'large'): 5, ('food style_options', 'sushi dishes', 'great', 'creative'): 5}
output quads: ['[A] null [O] good tasting [S] great [C] food quality', '[A] portions [O] large [S] great [C] food style_options', '[A] sushi dishes [O] creative [S] great [C] food style_options']
multi_path: ['[A] it [O] good tasting [S] great [C] food quality [SSEP] [A] portions [O] large [S] great [C] food style_options [SSEP] [A] sushi dishes [O] creative [S] great [C] food style_options', '[A] it [O] good tasting [C] food quality [S] great [SSEP] [A] portions [O] large [C] food style_options [S] great [SSEP] [A] sushi dishes [O] creative [C] food style_options [S] great', '[A] it [S] great [O] good tasting [C] food quality [SSEP] [A] portions [S] great [O] large [C] food style_options [SSEP] [A] sushi dishes [S] great [O] creative [C] food style_options', '[O] good tasting [A] it [C] food quality [S] great [SSEP] [O] large [A] portions [C] food style_options [S] great [SSEP] [O] creative [A] sushi dishes [C] food style_options [S] great', '[O] good tasting [A] it [S] great [C] food quality [SSEP] [O] large [A] portions [S] great [C] food style_options [SSEP] [O] creative [A] sushi dishes [S] great [C] food style_options']

task, data: acos rest16
target: [('food style_options', 'pepperoni', 'great', 'big'), ('food style_options', 'pepperoni', 'great', 'thick')]
output: ['[A] pepperoni [O] big [S] great [C] food style_options', '[A] pepperoni [O] thick [S] great [C] food quality']
sent: ['big', 'thick', 'pepperoni']
counter: {('food style_options', 'pepperoni', 'great', 'big'): 5, ('food quality', 'pepperoni', 'great', 'thick'): 5}
output quads: ['[A] pepperoni [O] big [S] great [C] food style_options', '[A] pepperoni [O] thick [S] great [C] food quality']
multi_path: ['[A] pepperoni [O] big [S] great [C] food style_options [SSEP] [A] pepperoni [O] thick [S] great [C] food quality', '[A] pepperoni [O] big [C] food style_options [S] great [SSEP] [A] pepperoni [O] thick [C] food quality [S] great', '[A] pepperoni [S] great [O] big [C] food style_options [SSEP] [A] pepperoni [S] great [O] thick [C] food quality', '[O] big [A] pepperoni [C] food style_options [S] great [SSEP] [O] thick [A] pepperoni [C] food quality [S] great', '[O] big [A] pepperoni [S] great [C] food style_options [SSEP] [O] thick [A] pepperoni [S] great [C] food quality']

task, data: acos rest16
target: [('food style_options', "pepperoni's", 'great', 'thick'), ('food style_options', "pepperoni's", 'great', 'yum')]
output: ['[A] pepperoni [O] thick [S] great [C] food quality']
sent: ['–', 'the', 'pepperoni', "'", 's', 'cut', 'real', 'thick', '-', '-', 'yum', '.']
counter: {('food quality', 'pepperoni', 'great', 'thick'): 5}
output quads: ['[A] pepperoni [O] thick [S] great [C] food quality']
multi_path: ['[A] pepperoni [O] thick [S] great [C] food quality', '[A] pepperoni [O] thick [C] food quality [S] great', '[A] pepperoni [S] great [O] thick [C] food quality', '[O] thick [A] pepperoni [C] food quality [S] great', '[O] thick [A] pepperoni [S] great [C] food quality']

task, data: acos rest16
target: [('food quality', 'pizza', 'great', 'good')]
output: ['[A] pizza [O] good [S] great [C] food quality', '[A] pizza [O] not exactly the best [S] ok [C] food quality']
sent: ['the', 'pizza', 'itself', 'is', 'not', 'exactly', 'the', 'best', 'i', "'", 've', 'had', 'ever', ',', 'but', 'still', 'pretty', 'good', '.']
counter: {('food quality', 'pizza', 'ok', 'not exactly the best'): 5, ('food quality', 'pizza', 'great', 'good'): 5}
output quads: ['[A] pizza [O] not exactly the best [S] ok [C] food quality', '[A] pizza [O] good [S] great [C] food quality']
multi_path: ['[A] pizza [O] not exactly the best [S] ok [C] food quality [SSEP] [A] pizza [O] good [S] great [C] food quality', '[A] pizza [O] not exactly the best [C] food quality [S] ok [SSEP] [A] pizza [O] good [C] food quality [S] great', '[A] pizza [S] ok [O] not exactly the best [C] food quality [SSEP] [A] pizza [S] great [O] good [C] food quality', '[O] not exactly the best [A] pizza [C] food quality [S] ok [SSEP] [O] good [A] pizza [C] food quality [S] great', '[O] not exactly the best [A] pizza [S] ok [C] food quality [SSEP] [O] good [A] pizza [S] great [C] food quality']

task, data: acos rest16
target: [('food style_options', 'menu selection', 'ok', 'fair')]
output: ['[A] menu selection [O] fair [S] great [C] food style_options']
sent: ['fair', 'menu', 'selection', '.']
counter: {('food style_options', 'menu selection', 'great', 'fair'): 5}
output quads: ['[A] menu selection [O] fair [S] great [C] food style_options']
multi_path: ['[A] menu selection [O] fair [S] great [C] food style_options', '[A] menu selection [O] fair [C] food style_options [S] great', '[A] menu selection [S] great [O] fair [C] food style_options', '[O] fair [A] menu selection [C] food style_options [S] great', '[O] fair [A] menu selection [S] great [C] food style_options']

task, data: acos rest16
target: [('ambience general', 'balcony', 'great', 'nice')]
output: ['[A] null [O] nice [S] great [C] ambience general']
sent: ['if', 'it', "'", 's', 'nice', 'outside', ',', 'request', 'for', 'a', 'table', 'in', 'the', 'balcony', '.']
counter: {('ambience general', 'null', 'great', 'nice'): 5}
output quads: ['[A] null [O] nice [S] great [C] ambience general']
multi_path: ['[A] it [O] nice [S] great [C] ambience general', '[A] it [O] nice [C] ambience general [S] great', '[A] it [S] great [O] nice [C] ambience general', '[O] nice [A] it [C] ambience general [S] great', '[O] nice [A] it [S] great [C] ambience general']

task, data: acos rest16
target: [('food style_options', 'portions', 'ok', 'big')]
output: ['[A] portions [O] big [S] great [C] food style_options']
sent: ['the', 'portions', 'are', 'big', 'though', ',', 'so', 'do', 'not', 'order', 'too', 'much', '.']
counter: {('food style_options', 'portions', 'great', 'big'): 5}
output quads: ['[A] portions [O] big [S] great [C] food style_options']
multi_path: ['[A] portions [O] big [S] great [C] food style_options', '[A] portions [O] big [C] food style_options [S] great', '[A] portions [S] great [O] big [C] food style_options', '[O] big [A] portions [C] food style_options [S] great', '[O] big [A] portions [S] great [C] food style_options']

task, data: acos rest16
target: [('ambience general', 'music', 'great', 'casual')]
output: ['[A] dinner [O] casual [S] ok [C] food style_options', '[A] music [O] groovy [S] great [C] ambience general']
sent: ['groovy', 'music', 'made', 'the', 'dinner', 'casual', '.']
counter: {('ambience general', 'music', 'great', 'groovy'): 5, ('food style_options', 'dinner', 'ok', 'casual'): 5}
output quads: ['[A] music [O] groovy [S] great [C] ambience general', '[A] dinner [O] casual [S] ok [C] food style_options']
multi_path: ['[A] music [O] groovy [S] great [C] ambience general [SSEP] [A] dinner [O] casual [S] ok [C] food style_options', '[A] music [O] groovy [C] ambience general [S] great [SSEP] [A] dinner [O] casual [C] food style_options [S] ok', '[A] music [S] great [O] groovy [C] ambience general [SSEP] [A] dinner [S] ok [O] casual [C] food style_options', '[O] groovy [A] music [C] ambience general [S] great [SSEP] [O] casual [A] dinner [C] food style_options [S] ok', '[O] groovy [A] music [S] great [C] ambience general [SSEP] [O] casual [A] dinner [S] ok [C] food style_options']

task, data: acos rest16
target: [('restaurant miscellaneous', 'restroom', 'bad', 'odd')]
output: ['[A] bathroom attendant [O] odd [S] bad [C] service general']
sent: ['i', 'have', 'a', 'but', 'here', '-', 'there', 'was', 'a', 'bathroom', 'attendant', 'in', 'the', 'restroom', 'which', 'was', 'odd', '.']
counter: {('service general', 'bathroom attendant', 'bad', 'odd'): 5}
output quads: ['[A] bathroom attendant [O] odd [S] bad [C] service general']
multi_path: ['[A] bathroom attendant [O] odd [S] bad [C] service general', '[A] bathroom attendant [O] odd [C] service general [S] bad', '[A] bathroom attendant [S] bad [O] odd [C] service general', '[O] odd [A] bathroom attendant [C] service general [S] bad', '[O] odd [A] bathroom attendant [S] bad [C] service general']

task, data: acos rest16
target: [('restaurant miscellaneous', 'bathroom', 'bad', 'small')]
output: ['[A] bathroom [O] small [S] bad [C] ambience general', '[A] girl [O] null [S] bad [C] service general']
sent: ['the', 'bathroom', 'itself', 'is', 'very', 'small', 'with', 'two', 'toilets', 'and', 'only', 'one', 'sink', ',', 'the', 'girl', 'was', 'staying', 'totally', 'on', 'the', 'way', 'hanging', 'out', 'paper', 'towels', 'from', 'the', 'dispenser', '.']
counter: {('ambience general', 'bathroom', 'bad', 'small'): 5, ('service general', 'girl', 'bad', 'null'): 5}
output quads: ['[A] bathroom [O] small [S] bad [C] ambience general', '[A] girl [O] null [S] bad [C] service general']
multi_path: ['[A] bathroom [O] small [S] bad [C] ambience general [SSEP] [A] girl [O] null [S] bad [C] service general', '[A] bathroom [O] small [C] ambience general [S] bad [SSEP] [A] girl [O] null [C] service general [S] bad', '[A] bathroom [S] bad [O] small [C] ambience general [SSEP] [A] girl [S] bad [O] null [C] service general', '[O] small [A] bathroom [C] ambience general [S] bad [SSEP] [O] null [A] girl [C] service general [S] bad', '[O] small [A] bathroom [S] bad [C] ambience general [SSEP] [O] null [A] girl [S] bad [C] service general']

task, data: acos rest16
target: [('food quality', 'null', 'great', 'tasty'), ('service general', 'service', 'great', 'awesome')]
output: ['[A] mercedes restaurant [O] tasty [S] great [C] restaurant general', '[A] service [O] awesome [S] great [C] service general']
sent: ['–', 'mercedes', 'restaurant', 'is', 'so', 'tasty', ',', 'the', 'service', 'is', 'undeniably', 'awesome', '!']
counter: {('restaurant general', 'mercedes restaurant', 'great', 'tasty'): 5, ('service general', 'service', 'great', 'awesome'): 5}
output quads: ['[A] mercedes restaurant [O] tasty [S] great [C] restaurant general', '[A] service [O] awesome [S] great [C] service general']
multi_path: ['[A] mercedes restaurant [O] tasty [S] great [C] restaurant general [SSEP] [A] service [O] awesome [S] great [C] service general', '[A] mercedes restaurant [O] tasty [C] restaurant general [S] great [SSEP] [A] service [O] awesome [C] service general [S] great', '[A] mercedes restaurant [S] great [O] tasty [C] restaurant general [SSEP] [A] service [S] great [O] awesome [C] service general', '[O] tasty [A] mercedes restaurant [C] restaurant general [S] great [SSEP] [O] awesome [A] service [C] service general [S] great', '[O] tasty [A] mercedes restaurant [S] great [C] restaurant general [SSEP] [O] awesome [A] service [S] great [C] service general']

task, data: acos rest16
target: [('food quality', 'catering', 'great', 'out of this world'), ('food quality', 'raouls chicken vegetable soup', 'great', 'rocks')]
output: ['[A] catering [O] out of this world [S] great [C] service general', '[A] raouls chicken vegetable soup [O] null [S] great [C] food quality']
sent: ['the', 'catering', 'is', 'out', 'of', 'this', 'world', ',', 'and', 'raouls', 'chicken', 'vegetable', 'soup', 'rocks', 'my', 'world', '!', '!', '!']
counter: {('service general', 'catering', 'great', 'out of this world'): 5, ('food quality', 'raouls chicken vegetable soup', 'great', 'null'): 5}
output quads: ['[A] catering [O] out of this world [S] great [C] service general', '[A] raouls chicken vegetable soup [O] null [S] great [C] food quality']
multi_path: ['[A] catering [O] out of this world [S] great [C] service general [SSEP] [A] raouls chicken vegetable soup [O] null [S] great [C] food quality', '[A] catering [O] out of this world [C] service general [S] great [SSEP] [A] raouls chicken vegetable soup [O] null [C] food quality [S] great', '[A] catering [S] great [O] out of this world [C] service general [SSEP] [A] raouls chicken vegetable soup [S] great [O] null [C] food quality', '[O] out of this world [A] catering [C] service general [S] great [SSEP] [O] null [A] raouls chicken vegetable soup [C] food quality [S] great', '[O] out of this world [A] catering [S] great [C] service general [SSEP] [O] null [A] raouls chicken vegetable soup [S] great [C] food quality']

task, data: acos rest16
target: [('ambience general', 'null', 'great', 'null'), ('drinks quality', 'drinks', 'great', 'suberb')]
output: ['[A] drinks [O] suberb [S] great [C] drinks quality']
sent: ['drinks', 'are', 'suberb', ',', 'and', 'i', 'feel', 'like', 'i', 'am', 'in', 'a', 'third', 'world', 'country', 'when', 'i', 'walk', 'in', 'the', 'door', '.']
counter: {('drinks quality', 'drinks', 'great', 'suberb'): 5}
output quads: ['[A] drinks [O] suberb [S] great [C] drinks quality']
multi_path: ['[A] drinks [O] suberb [S] great [C] drinks quality', '[A] drinks [O] suberb [C] drinks quality [S] great', '[A] drinks [S] great [O] suberb [C] drinks quality', '[O] suberb [A] drinks [C] drinks quality [S] great', '[O] suberb [A] drinks [S] great [C] drinks quality']

task, data: acos rest16
target: [('ambience general', 'snooze', 'bad', 'excellent'), ('food style_options', 'menu', 'bad', 'high brow'), ('restaurant prices', 'snooze', 'bad', 'overpriced')]
output: ['[A] ihop [O] overpriced [S] bad [C] food prices', '[A] menu [O] high brow [S] bad [C] food style_options', '[A] presentation of snooze [O] excellent [S] great [C] drinks style_options']
sent: ['the', 'presentation', 'of', 'snooze', 'is', 'excellent', 'and', 'it', 'is', 'one', 'of', 'those', 'places', 'that', 'you', 'feel', 'more', 'sophisticated', 'just', 'for', 'being', 'there', ';', 'but', 'peel', 'back', 'the', 'layers', 'and', 'you', 'have', 'an', 'overpriced', 'ihop', 'with', 'a', 'high', 'brow', 'menu', '.']
counter: {('drinks style_options', 'presentation of snooze', 'great', 'excellent'): 5, ('food prices', 'ihop', 'bad', 'overpriced'): 5, ('food style_options', 'menu', 'bad', 'high brow'): 5}
output quads: ['[A] presentation of snooze [O] excellent [S] great [C] drinks style_options', '[A] ihop [O] overpriced [S] bad [C] food prices', '[A] menu [O] high brow [S] bad [C] food style_options']
multi_path: ['[A] presentation of snooze [O] excellent [S] great [C] drinks style_options [SSEP] [A] ihop [O] overpriced [S] bad [C] food prices [SSEP] [A] menu [O] high brow [S] bad [C] food style_options', '[A] presentation of snooze [O] excellent [C] drinks style_options [S] great [SSEP] [A] ihop [O] overpriced [C] food prices [S] bad [SSEP] [A] menu [O] high brow [C] food style_options [S] bad', '[A] presentation of snooze [S] great [O] excellent [C] drinks style_options [SSEP] [A] ihop [S] bad [O] overpriced [C] food prices [SSEP] [A] menu [S] bad [O] high brow [C] food style_options', '[O] excellent [A] presentation of snooze [C] drinks style_options [S] great [SSEP] [O] overpriced [A] ihop [C] food prices [S] bad [SSEP] [O] high brow [A] menu [C] food style_options [S] bad', '[O] excellent [A] presentation of snooze [S] great [C] drinks style_options [SSEP] [O] overpriced [A] ihop [S] bad [C] food prices [SSEP] [O] high brow [A] menu [S] bad [C] food style_options']

task, data: acos rest16
target: [('drinks prices', 'orange juice', 'bad', 'null')]
output: ['[A] orange juice [O] null [S] bad [C] food prices']
sent: ['to', 'start', 'off', ',', 'approximately', '8', '-', '10', 'oz', 'of', 'orange', 'juice', 'will', 'cost', 'you', '$', '3', '.']
counter: {('food prices', 'orange juice', 'bad', 'null'): 5}
output quads: ['[A] orange juice [O] null [S] bad [C] food prices']
multi_path: ['[A] orange juice [O] null [S] bad [C] food prices', '[A] orange juice [O] null [C] food prices [S] bad', '[A] orange juice [S] bad [O] null [C] food prices', '[O] null [A] orange juice [C] food prices [S] bad', '[O] null [A] orange juice [S] bad [C] food prices']

task, data: acos rest16
target: [('drinks prices', 'juice', 'bad', 'small'), ('drinks style_options', 'juice', 'bad', 'small')]
output: ['[A] null [O] null [S] bad [C] food prices', '[A] null [O] skinny [S] bad [C] food style_options', '[A] null [O] tall [S] bad [C] food style_options']
sent: ['they', 'serve', 'it', 'in', 'a', 'tall', ',', 'skinny', 'hour', '-', 'glass', 'shaped', 'glass', 'to', 'disguise', 'the', 'fact', 'that', 'you', 'a', 'getting', 'a', 'small', 'juice', 'at', 'the', 'price', 'of', 'a', 'half', 'gallon', 'in', 'a', 'supermarket', '.']
counter: {('food prices', 'null', 'bad', 'null'): 5, ('food style_options', 'null', 'bad', 'tall'): 5, ('food style_options', 'null', 'bad', 'skinny'): 5}
output quads: ['[A] null [O] null [S] bad [C] food prices', '[A] null [O] tall [S] bad [C] food style_options', '[A] null [O] skinny [S] bad [C] food style_options']
multi_path: ['[A] it [O] null [S] bad [C] food prices [SSEP] [A] it [O] tall [S] bad [C] food style_options [SSEP] [A] it [O] skinny [S] bad [C] food style_options', '[A] it [O] null [C] food prices [S] bad [SSEP] [A] it [O] tall [C] food style_options [S] bad [SSEP] [A] it [O] skinny [C] food style_options [S] bad', '[A] it [S] bad [O] null [C] food prices [SSEP] [A] it [S] bad [O] tall [C] food style_options [SSEP] [A] it [S] bad [O] skinny [C] food style_options', '[O] null [A] it [C] food prices [S] bad [SSEP] [O] tall [A] it [C] food style_options [S] bad [SSEP] [O] skinny [A] it [C] food style_options [S] bad', '[O] null [A] it [S] bad [C] food prices [SSEP] [O] tall [A] it [S] bad [C] food style_options [SSEP] [O] skinny [A] it [S] bad [C] food style_options']

task, data: acos rest16
target: [('food prices', 'pancakes', 'bad', 'null'), ('food style_options', 'pancakes', 'bad', 'null')]
output: ['[A] pancakes [O] larger [S] bad [C] food style_options']
sent: ['the', 'pancakes', 'should', 'be', 'larger', '(', 'at', 'least', '8', "'", "'", ')', 'to', 'justify', 'the', 'expense', 'even', 'with', 'the', 'unique', 'offerings', '.']
counter: {('food style_options', 'pancakes', 'bad', 'larger'): 5, ('food style_options', 'pancakes', 'great', 'unique'): 1}
output quads: ['[A] pancakes [O] larger [S] bad [C] food style_options']
multi_path: ['[A] pancakes [O] larger [S] bad [C] food style_options', '[A] pancakes [O] larger [C] food style_options [S] bad', '[A] pancakes [S] bad [O] larger [C] food style_options [SSEP] [A] pancakes [S] great [O] unique [C] food style_options', '[O] larger [A] pancakes [C] food style_options [S] bad', '[O] larger [A] pancakes [S] bad [C] food style_options']

task, data: acos rest16
target: [('food quality', 'eggs', 'bad', 'null'), ('food quality', 'meal', 'bad', 'null')]
output: ['[A] eggs [O] null [S] bad [C] food quality']
sent: ['on', 'my', 'meal', 'i', 'had', 'to', 'send', 'back', 'my', 'eggs', 'for', 'a', 'simple', 'request', 'of', 'breaking', 'the', 'yokes', 'before', 'cooking', ',', 'and', 'would', 'have', 'had', 'to', 'send', 'them', 'back', 'again', 'if', 'i', 'had', 'n', "'", 't', 'rejected', 'the', 'meal', 'all', 'together', '.']
counter: {('food quality', 'eggs', 'bad', 'null'): 5}
output quads: ['[A] eggs [O] null [S] bad [C] food quality']
multi_path: ['[A] eggs [O] null [S] bad [C] food quality', '[A] eggs [O] null [C] food quality [S] bad', '[A] eggs [S] bad [O] null [C] food quality', '[O] null [A] eggs [C] food quality [S] bad', '[O] null [A] eggs [S] bad [C] food quality']

task, data: acos rest16
target: [('food quality', 'dish', 'bad', 'frustrated')]
output: ['[A] null [O] frustrated [S] bad [C] restaurant general']
sent: ['i', 'rejected', 'it', 'because', 'in', 'the', 'process', 'of', 'attempting', 'to', 'fix', 'the', 'eggs', 'they', 'broke', 'something', 'else', 'in', 'the', 'dish', 'and', 'i', 'was', 'too', 'frustrated', 'to', 'continue', '.']
counter: {('restaurant general', 'null', 'bad', 'frustrated'): 5}
output quads: ['[A] null [O] frustrated [S] bad [C] restaurant general']
multi_path: ['[A] it [O] frustrated [S] bad [C] restaurant general', '[A] it [O] frustrated [C] restaurant general [S] bad', '[A] it [S] bad [O] frustrated [C] restaurant general', '[O] frustrated [A] it [C] restaurant general [S] bad', '[O] frustrated [A] it [S] bad [C] restaurant general']

task, data: acos rest16
target: [('drinks prices', 'iced tea', 'bad', 'small'), ('drinks prices', 'orange juice', 'bad', 'small'), ('food prices', 'breakfast burrito', 'bad', 'small'), ('food prices', 'pancakes', 'bad', 'small'), ('food style_options', 'pancakes', 'bad', 'small')]
output: ['[A] breakfast burrito [O] null [S] bad [C] food quality', '[A] iced tea [O] null [S] bad [C] food quality', '[A] null [O] null [S] bad [C] restaurant prices', '[A] orange juice [O] null [S] bad [C] drinks quality', '[A] pancakes [O] null [S] bad [C] food style_options']
sent: ['in', 'the', 'end', 'our', 'check', 'came', 'to', '$', '27', 'for', '4', 'small', 'pancakes', ',', 'a', 'breakfast', 'burrito', ',', 'an', 'orange', 'juice', 'and', 'an', 'iced', 'tea', '(', 'i', 'had', 'water', ')', '.']
counter: {('restaurant prices', 'null', 'bad', 'null'): 5, ('food style_options', 'pancakes', 'bad', 'null'): 4, ('food quality', 'breakfast burrito', 'bad', 'null'): 5, ('drinks quality', 'orange juice', 'bad', 'null'): 5, ('food quality', 'iced tea', 'bad', 'null'): 5, ('food style_options', 'pancakes', 'bad', 'small'): 1}
output quads: ['[A] null [O] null [S] bad [C] restaurant prices', '[A] pancakes [O] null [S] bad [C] food style_options', '[A] breakfast burrito [O] null [S] bad [C] food quality', '[A] orange juice [O] null [S] bad [C] drinks quality', '[A] iced tea [O] null [S] bad [C] food quality']
multi_path: ['[A] it [O] null [S] bad [C] restaurant prices [SSEP] [A] pancakes [O] null [S] bad [C] food style_options [SSEP] [A] breakfast burrito [O] null [S] bad [C] food quality [SSEP] [A] orange juice [O] null [S] bad [C] drinks quality [SSEP] [A] iced tea [O] null [S] bad [C] food quality', '[A] it [O] null [C] restaurant prices [S] bad [SSEP] [A] pancakes [O] null [C] food style_options [S] bad [SSEP] [A] breakfast burrito [O] null [C] food quality [S] bad [SSEP] [A] orange juice [O] null [C] drinks quality [S] bad [SSEP] [A] iced tea [O] null [C] food quality [S] bad', '[A] it [S] bad [O] null [C] restaurant prices [SSEP] [A] pancakes [S] bad [O] small [C] food style_options [SSEP] [A] breakfast burrito [S] bad [O] null [C] food quality [SSEP] [A] orange juice [S] bad [O] null [C] drinks quality [SSEP] [A] iced tea [S] bad [O] null [C] food quality', '[O] null [A] it [C] restaurant prices [S] bad [SSEP] [O] null [A] pancakes [C] food style_options [S] bad [SSEP] [O] null [A] breakfast burrito [C] food quality [S] bad [SSEP] [O] null [A] orange juice [C] drinks quality [S] bad [SSEP] [O] null [A] iced tea [C] food quality [S] bad', '[O] null [A] it [S] bad [C] restaurant prices [SSEP] [O] null [A] pancakes [S] bad [C] food style_options [SSEP] [O] null [A] breakfast burrito [S] bad [C] food quality [SSEP] [O] null [A] orange juice [S] bad [C] drinks quality [SSEP] [O] null [A] iced tea [S] bad [C] food quality']

task, data: acos rest16
target: [('location general', 'view', 'great', 'great'), ('restaurant general', 'null', 'great', 'great')]
output: ['[A] view [O] great [S] great [C] location general']
sent: ['much', 'more', 'than', 'just', 'a', 'great', 'view', '!']
counter: {('location general', 'view', 'great', 'great'): 5}
output quads: ['[A] view [O] great [S] great [C] location general']
multi_path: ['[A] view [O] great [S] great [C] location general', '[A] view [O] great [C] location general [S] great', '[A] view [S] great [O] great [C] location general', '[O] great [A] view [C] location general [S] great', '[O] great [A] view [S] great [C] location general']

task, data: acos rest16
target: [('restaurant general', "ray's boathouse", 'great', 'pleased')]
output: ['[A] dinner [O] pleased [S] great [C] food quality', "[A] ray's boathouse [O] exceeded [S] great [C] restaurant general"]
sent: ['–', 'i', 'am', 'exceedingly', 'pleased', 'to', 'report', 'that', 'my', 'dinner', 'at', 'ray', "'", 's', 'boathouse', 'last', 'friday', 'completely', 'exceeded', 'my', 'expectations', '.']
counter: {('food quality', 'dinner', 'great', 'pleased'): 5, ('restaurant general', "ray's boathouse", 'great', 'exceeded'): 5}
output quads: ['[A] dinner [O] pleased [S] great [C] food quality', "[A] ray's boathouse [O] exceeded [S] great [C] restaurant general"]
multi_path: ["[A] dinner [O] pleased [S] great [C] food quality [SSEP] [A] ray's boathouse [O] exceeded [S] great [C] restaurant general", "[A] dinner [O] pleased [C] food quality [S] great [SSEP] [A] ray's boathouse [O] exceeded [C] restaurant general [S] great", "[A] dinner [S] great [O] pleased [C] food quality [SSEP] [A] ray's boathouse [S] great [O] exceeded [C] restaurant general", "[O] pleased [A] dinner [C] food quality [S] great [SSEP] [O] exceeded [A] ray's boathouse [C] restaurant general [S] great", "[O] pleased [A] dinner [S] great [C] food quality [SSEP] [O] exceeded [A] ray's boathouse [S] great [C] restaurant general"]

task, data: acos rest16
target: [('location general', 'sound views', 'great', 'gorgeous')]
output: ['[A] scenery [O] null [S] great [C] ambience general', '[A] service [O] null [S] great [C] service general', '[A] sound views [O] gorgeous [S] great [C] location general']
sent: ['ray', "'", 's', 'is', 'something', 'of', 'a', 'seattle', 'institution', ',', 'but', 'given', 'its', 'gorgeous', 'sound', 'views', ',', 'i', 'had', 'suspected', 'that', 'the', 'accolades', 'were', 'more', 'due', 'to', 'the', 'scenery', 'than', 'to', 'the', 'food', 'and', 'service', '.']
counter: {('location general', 'sound views', 'great', 'gorgeous'): 5, ('ambience general', 'scenery', 'great', 'null'): 5, ('service general', 'service', 'great', 'null'): 5}
output quads: ['[A] sound views [O] gorgeous [S] great [C] location general', '[A] scenery [O] null [S] great [C] ambience general', '[A] service [O] null [S] great [C] service general']
multi_path: ['[A] sound views [O] gorgeous [S] great [C] location general [SSEP] [A] scenery [O] null [S] great [C] ambience general [SSEP] [A] service [O] null [S] great [C] service general', '[A] sound views [O] gorgeous [C] location general [S] great [SSEP] [A] scenery [O] null [C] ambience general [S] great [SSEP] [A] service [O] null [C] service general [S] great', '[A] sound views [S] great [O] gorgeous [C] location general [SSEP] [A] scenery [S] great [O] null [C] ambience general [SSEP] [A] service [S] great [O] null [C] service general', '[O] gorgeous [A] sound views [C] location general [S] great [SSEP] [O] null [A] scenery [C] ambience general [S] great [SSEP] [O] null [A] service [C] service general [S] great', '[O] gorgeous [A] sound views [S] great [C] location general [SSEP] [O] null [A] scenery [S] great [C] ambience general [SSEP] [O] null [A] service [S] great [C] service general']

task, data: acos rest16
target: [('location general', 'views', 'great', 'third - best'), ('restaurant general', "ray's", 'great', 'happy')]
output: ['[A] views [O] best [S] great [C] location general', '[A] views [O] happy [S] great [C] location general']
sent: ['imagine', 'my', 'happy', 'surprise', 'upon', 'finding', 'that', 'the', 'views', 'are', 'only', 'the', 'third', '-', 'best', 'thing', 'about', 'ray', "'", 's', '!']
counter: {('location general', 'views', 'great', 'happy'): 5, ('location general', 'views', 'great', 'best'): 5}
output quads: ['[A] views [O] happy [S] great [C] location general', '[A] views [O] best [S] great [C] location general']
multi_path: ['[A] views [O] happy [S] great [C] location general [SSEP] [A] views [O] best [S] great [C] location general', '[A] views [O] happy [C] location general [S] great [SSEP] [A] views [O] best [C] location general [S] great', '[A] views [S] great [O] happy [C] location general [SSEP] [A] views [S] great [O] best [C] location general', '[O] happy [A] views [C] location general [S] great [SSEP] [O] best [A] views [C] location general [S] great', '[O] happy [A] views [S] great [C] location general [SSEP] [O] best [A] views [S] great [C] location general']

task, data: acos rest16
target: [('service general', 'brooke', 'great', 'lovely'), ('service general', 'brooke', 'great', 'quickly')]
output: ['[A] server [O] lovely [S] great [C] service general']
sent: ['to', 'start', 'things', 'off', ',', 'our', 'lovely', 'server', 'brooke', 'was', 'quickly', 'on', 'hand', 'to', 'take', 'my', 'drink', 'order', '.']
counter: {('service general', 'server', 'great', 'lovely'): 5}
output quads: ['[A] server [O] lovely [S] great [C] service general']
multi_path: ['[A] server [O] lovely [S] great [C] service general', '[A] server [O] lovely [C] service general [S] great', '[A] server [S] great [O] lovely [C] service general', '[O] lovely [A] server [C] service general [S] great', '[O] lovely [A] server [S] great [C] service general']

task, data: acos rest16
target: [('food quality', 'butter sauce', 'great', 'sublime'), ('food quality', 'manila clams', 'great', 'fantastic'), ('food quality', 'soy dressing', 'great', 'tasty'), ('food style_options', 'white gulf prawns', 'great', 'enormous')]
output: ['[A] dungeness crab [O] null [S] great [C] food quality', '[A] enormous white gulf prawns [O] beautiful [S] great [C] food style_options', "[A] ray's fantastic manila clams seasoned with dill [O] fantastic [S] great [C] food quality", '[A] scallops in a tasty soy dressing [O] null [S] great [C] food quality', '[A] shilshole sampler [O] beautiful [S] great [C] food quality', '[A] smoked albacore tuna [O] fantastic [S] great [C] food quality']
sent: ['my', 'party', 'of', 'two', 'was', 'feeling', 'particularly', 'ambitious', ',', 'and', 'we', 'splurged', 'on', 'the', 'shilshole', 'sampler', '.', '.', '.', 'a', 'beautiful', 'assortment', 'of', 'enormous', 'white', 'gulf', 'prawns', ',', 'smoked', 'albacore', 'tuna', ',', 'ray', "'", 's', 'fantastic', 'manila', 'clams', 'seasoned', 'with', 'dill', ',', 'scallops', 'in', 'a', 'tasty', 'soy', 'dressing', ',', 'and', 'a', 'tiny', 'pile', 'of', 'dungeness', 'crab', 'atop', 'a', 'sublime', 'butter', 'sauce', '.']
counter: {('food quality', 'shilshole sampler', 'great', 'beautiful'): 5, ('food style_options', 'enormous white gulf prawns', 'great', 'beautiful'): 5, ('food quality', 'smoked albacore tuna', 'great', 'fantastic'): 5, ('food quality', "ray's fantastic manila clams", 'great', 'fantastic'): 1, ('food quality', 'scallops in a tasty soy dressing', 'great', 'null'): 3, ('food quality', 'dungeness crab', 'great', 'null'): 4, ('food quality', "ray's fantastic manila clams seasoned with dill", 'great', 'fantastic'): 4, ('food quality', 'scallops', 'great', 'tasty'): 2, ('food quality', 'butter sauce', 'great', 'sublime'): 1}
output quads: ['[A] shilshole sampler [O] beautiful [S] great [C] food quality', '[A] enormous white gulf prawns [O] beautiful [S] great [C] food style_options', '[A] smoked albacore tuna [O] fantastic [S] great [C] food quality', '[A] scallops in a tasty soy dressing [O] null [S] great [C] food quality', '[A] dungeness crab [O] null [S] great [C] food quality', "[A] ray's fantastic manila clams seasoned with dill [O] fantastic [S] great [C] food quality"]
multi_path: ["[A] shilshole sampler [O] beautiful [S] great [C] food quality [SSEP] [A] enormous white gulf prawns [O] beautiful [S] great [C] food style_options [SSEP] [A] smoked albacore tuna [O] fantastic [S] great [C] food quality [SSEP] [A] ray's fantastic manila clams [O] fantastic [S] great [C] food quality [SSEP] [A] scallops in a tasty soy dressing [O] null [S] great [C] food quality [SSEP] [A] dungeness crab [O] null [S] great [C] food quality", "[A] shilshole sampler [O] beautiful [C] food quality [S] great [SSEP] [A] enormous white gulf prawns [O] beautiful [C] food style_options [S] great [SSEP] [A] smoked albacore tuna [O] fantastic [C] food quality [S] great [SSEP] [A] ray's fantastic manila clams seasoned with dill [O] fantastic [C] food quality [S] great [SSEP] [A] scallops in a tasty soy dressing [O] null [C] food quality [S] great [SSEP] [A] dungeness crab [O] null [C] food quality [S] great", "[A] shilshole sampler [S] great [O] beautiful [C] food quality [SSEP] [A] enormous white gulf prawns [S] great [O] beautiful [C] food style_options [SSEP] [A] smoked albacore tuna [S] great [O] fantastic [C] food quality [SSEP] [A] ray's fantastic manila clams seasoned with dill [S] great [O] fantastic [C] food quality [SSEP] [A] scallops in a tasty soy dressing [S] great [O] null [C] food quality [SSEP] [A] dungeness crab [S] great [O] null [C] food quality", "[O] beautiful [A] shilshole sampler [C] food quality [S] great [SSEP] [O] beautiful [A] enormous white gulf prawns [C] food style_options [S] great [SSEP] [O] fantastic [A] smoked albacore tuna [C] food quality [S] great [SSEP] [O] fantastic [A] ray's fantastic manila clams seasoned with dill [C] food quality [S] great [SSEP] [O] tasty [A] scallops [C] food quality [S] great [SSEP] [O] null [A] dungeness crab [C] food quality [S] great", "[O] beautiful [A] shilshole sampler [S] great [C] food quality [SSEP] [O] beautiful [A] enormous white gulf prawns [S] great [C] food style_options [SSEP] [O] fantastic [A] smoked albacore tuna [S] great [C] food quality [SSEP] [O] fantastic [A] ray's fantastic manila clams seasoned with dill [S] great [C] food quality [SSEP] [O] tasty [A] scallops [S] great [C] food quality [SSEP] [O] sublime [A] butter sauce [S] great [C] food quality"]

task, data: acos rest16
target: [('food quality', 'seared alaskan sea scallops', 'great', 'enjoyed'), ('food style_options', 'seared alaskan sea scallops', 'great', 'enjoyed')]
output: ['[A] artichoke hearts [O] enjoyed [S] great [C] food quality', '[A] fennel [O] enjoyed [S] great [C] food quality', '[A] pecorino toscano [O] enjoyed [S] great [C] food quality', '[A] seared alaskan sea scallops [O] enjoyed [S] great [C] food quality']
sent: ['for', 'my', 'entr', '&', 'eacute', ';', 'e', ',', 'i', 'completely', 'enjoyed', 'the', 'seared', 'alaskan', 'sea', 'scallops', 'complemented', 'by', 'chard', ',', 'artichoke', 'hearts', ',', 'fennel', ',', 'and', 'pecorino', 'toscano', '.']
counter: {('food quality', 'seared alaskan sea scallops', 'great', 'enjoyed'): 5, ('food quality', 'artichoke hearts', 'great', 'enjoyed'): 5, ('food quality', 'fennel', 'great', 'enjoyed'): 5, ('food quality', 'pecorino toscano', 'great', 'enjoyed'): 5}
output quads: ['[A] seared alaskan sea scallops [O] enjoyed [S] great [C] food quality', '[A] artichoke hearts [O] enjoyed [S] great [C] food quality', '[A] fennel [O] enjoyed [S] great [C] food quality', '[A] pecorino toscano [O] enjoyed [S] great [C] food quality']
multi_path: ['[A] seared alaskan sea scallops [O] enjoyed [S] great [C] food quality [SSEP] [A] artichoke hearts [O] enjoyed [S] great [C] food quality [SSEP] [A] fennel [O] enjoyed [S] great [C] food quality [SSEP] [A] pecorino toscano [O] enjoyed [S] great [C] food quality', '[A] seared alaskan sea scallops [O] enjoyed [C] food quality [S] great [SSEP] [A] artichoke hearts [O] enjoyed [C] food quality [S] great [SSEP] [A] fennel [O] enjoyed [C] food quality [S] great [SSEP] [A] pecorino toscano [O] enjoyed [C] food quality [S] great', '[A] seared alaskan sea scallops [S] great [O] enjoyed [C] food quality [SSEP] [A] artichoke hearts [S] great [O] enjoyed [C] food quality [SSEP] [A] fennel [S] great [O] enjoyed [C] food quality [SSEP] [A] pecorino toscano [S] great [O] enjoyed [C] food quality', '[O] enjoyed [A] seared alaskan sea scallops [C] food quality [S] great [SSEP] [O] enjoyed [A] artichoke hearts [C] food quality [S] great [SSEP] [O] enjoyed [A] fennel [C] food quality [S] great [SSEP] [O] enjoyed [A] pecorino toscano [C] food quality [S] great', '[O] enjoyed [A] seared alaskan sea scallops [S] great [C] food quality [SSEP] [O] enjoyed [A] artichoke hearts [S] great [C] food quality [SSEP] [O] enjoyed [A] fennel [S] great [C] food quality [SSEP] [O] enjoyed [A] pecorino toscano [S] great [C] food quality']

task, data: acos rest16
target: [('food quality', 'scallops', 'great', 'tasty'), ('food style_options', 'scallops', 'great', 'unique')]
output: ['[A] scallops [O] tasty [S] great [C] food quality', '[A] scallops [O] unique [S] great [C] food quality']
sent: ['the', 'scallops', 'are', 'apparently', 'cooked', 'in', 'a', 'black', 'olive', 'butter', 'which', 'really', 'makes', 'them', 'unique', '(', 'not', 'to', 'mention', 'tasty', ')', '.']
counter: {('food quality', 'scallops', 'great', 'unique'): 5, ('food quality', 'scallops', 'great', 'tasty'): 5}
output quads: ['[A] scallops [O] unique [S] great [C] food quality', '[A] scallops [O] tasty [S] great [C] food quality']
multi_path: ['[A] scallops [O] unique [S] great [C] food quality [SSEP] [A] scallops [O] tasty [S] great [C] food quality', '[A] scallops [O] unique [C] food quality [S] great [SSEP] [A] scallops [O] tasty [C] food quality [S] great', '[A] scallops [S] great [O] unique [C] food quality [SSEP] [A] scallops [S] great [O] tasty [C] food quality', '[O] unique [A] scallops [C] food quality [S] great [SSEP] [O] tasty [A] scallops [C] food quality [S] great', '[O] unique [A] scallops [S] great [C] food quality [SSEP] [O] tasty [A] scallops [S] great [C] food quality']

task, data: acos rest16
target: [('food quality', 'creamed washington russet potatoes', 'great', 'delectable'), ('food quality', 'green beans', 'great', 'crisp'), ('food quality', 'grilled alaskan king salmon', 'great', 'enjoyed')]
output: ['[A] grilled alaskan king salmon with crisp green beans [O] enjoyed [S] great [C] food quality']
sent: ['my', 'friend', 'enjoyed', 'the', 'grilled', 'alaskan', 'king', 'salmon', 'with', 'delectable', 'creamed', 'washington', 'russet', 'potatoes', 'and', 'crisp', 'green', 'beans', '.']
counter: {('food quality', 'grilled alaskan king salmon with crisp green beans', 'great', 'enjoyed'): 5, ('food quality', 'creamed washington russet potatoes and crisp green beans', 'great', 'delectable'): 1}
output quads: ['[A] grilled alaskan king salmon with crisp green beans [O] enjoyed [S] great [C] food quality']
multi_path: ['[A] grilled alaskan king salmon with crisp green beans [O] enjoyed [S] great [C] food quality', '[A] grilled alaskan king salmon with crisp green beans [O] enjoyed [C] food quality [S] great', '[A] grilled alaskan king salmon with crisp green beans [S] great [O] enjoyed [C] food quality', '[O] enjoyed [A] grilled alaskan king salmon with crisp green beans [C] food quality [S] great [SSEP] [O] delectable [A] creamed washington russet potatoes and crisp green beans [C] food quality [S] great', '[O] enjoyed [A] grilled alaskan king salmon with crisp green beans [S] great [C] food quality']

task, data: acos rest16
target: [('food quality', 'plate', 'great', 'superb')]
output: ['[A] null [O] superb [S] great [C] food quality']
sent: ['i', 'had', 'a', 'taste', 'of', 'all', 'three', 'items', 'on', 'her', 'plate', ',', 'and', 'they', 'were', 'superb', '.']
counter: {('food quality', 'null', 'great', 'superb'): 5}
output quads: ['[A] null [O] superb [S] great [C] food quality']
multi_path: ['[A] it [O] superb [S] great [C] food quality', '[A] it [O] superb [C] food quality [S] great', '[A] it [S] great [O] superb [C] food quality', '[O] superb [A] it [C] food quality [S] great', '[O] superb [A] it [S] great [C] food quality']

task, data: acos rest16
target: [('restaurant miscellaneous', "ray's", 'ok', 'null'), ('service general', 'server', 'great', 'attentive')]
output: ["[A] ray's [O] null [S] bad [C] restaurant miscellaneous", '[A] server [O] attentive [S] great [C] service general']
sent: ['our', 'server', 'continued', 'to', 'be', 'attentive', 'throughout', 'the', 'night', ',', 'but', 'i', 'did', 'remain', 'puzzled', 'by', 'one', 'issue', ':', 'who', 'thinks', 'that', 'ray', "'", 's', 'is', 'an', 'appropriate', 'place', 'to', 'take', 'young', 'children', 'for', 'dinner', '?']
counter: {('service general', 'server', 'great', 'attentive'): 5, ('restaurant miscellaneous', "ray's", 'bad', 'null'): 5}
output quads: ['[A] server [O] attentive [S] great [C] service general', "[A] ray's [O] null [S] bad [C] restaurant miscellaneous"]
multi_path: ["[A] server [O] attentive [S] great [C] service general [SSEP] [A] ray's [O] null [S] bad [C] restaurant miscellaneous", "[A] server [O] attentive [C] service general [S] great [SSEP] [A] ray's [O] null [C] restaurant miscellaneous [S] bad", "[A] server [S] great [O] attentive [C] service general [SSEP] [A] ray's [S] bad [O] null [C] restaurant miscellaneous", "[O] attentive [A] server [C] service general [S] great [SSEP] [O] null [A] ray's [C] restaurant miscellaneous [S] bad", "[O] attentive [A] server [S] great [C] service general [SSEP] [O] null [A] ray's [S] bad [C] restaurant miscellaneous"]

task, data: acos rest16
target: [('food quality', 'food', 'great', 'wonderful'), ('restaurant miscellaneous', 'null', 'bad', 'positive'), ('service general', 'server', 'great', 'wonderful')]
output: ['[A] food [O] positive [S] great [C] food quality', '[A] server [O] wonderful [S] great [C] service general', '[A] youth [O] null [S] great [C] service general']
sent: ['while', 'i', 'could', 'have', 'done', 'without', 'the', 'youth', 'who', 'shared', 'the', 'evening', 'with', 'us', ',', 'our', 'wonderful', 'server', 'and', 'food', 'made', 'the', 'experience', 'a', 'very', 'positive', 'one', '.']
counter: {('service general', 'youth', 'great', 'null'): 3, ('service general', 'server', 'great', 'wonderful'): 5, ('food quality', 'food', 'great', 'positive'): 5}
output quads: ['[A] youth [O] null [S] great [C] service general', '[A] server [O] wonderful [S] great [C] service general', '[A] food [O] positive [S] great [C] food quality']
multi_path: ['[A] youth [O] null [S] great [C] service general [SSEP] [A] server [O] wonderful [S] great [C] service general [SSEP] [A] food [O] positive [S] great [C] food quality', '[A] youth [O] null [C] service general [S] great [SSEP] [A] server [O] wonderful [C] service general [S] great [SSEP] [A] food [O] positive [C] food quality [S] great', '[A] youth [S] great [O] null [C] service general [SSEP] [A] server [S] great [O] wonderful [C] service general [SSEP] [A] food [S] great [O] positive [C] food quality', '[O] wonderful [A] server [C] service general [S] great [SSEP] [O] positive [A] food [C] food quality [S] great', '[O] wonderful [A] server [S] great [C] service general [SSEP] [O] positive [A] food [S] great [C] food quality']

task, data: acos rest16
target: [('food quality', 'null', 'great', 'yum')]
output: ['[A] null [O] null [S] great [C] food quality']
sent: ['yum', '!']
counter: {('food quality', 'null', 'great', 'null'): 3, ('food quality', 'null', 'great', 'yum'): 2}
output quads: ['[A] null [O] null [S] great [C] food quality']
multi_path: ['[A] it [O] null [S] great [C] food quality', '[A] it [O] null [C] food quality [S] great', '[A] it [S] great [O] null [C] food quality', '[O] yum [A] it [C] food quality [S] great', '[O] yum [A] it [S] great [C] food quality']

task, data: acos rest16
target: [('food quality', 'null', 'great', 'null')]
output: ['[A] restaurant [O] null [S] great [C] restaurant general']
sent: ['do', 'n', "'", 't', 'leave', 'the', 'restaurant', 'without', 'it', '.']
counter: {('restaurant general', 'restaurant', 'great', 'null'): 5}
output quads: ['[A] restaurant [O] null [S] great [C] restaurant general']
multi_path: ['[A] restaurant [O] null [S] great [C] restaurant general', '[A] restaurant [O] null [C] restaurant general [S] great', '[A] restaurant [S] great [O] null [C] restaurant general', '[O] null [A] restaurant [C] restaurant general [S] great', '[O] null [A] restaurant [S] great [C] restaurant general']

task, data: acos rest16
target: [('service general', 'null', 'bad', 'snotty')]
output: ['[A] attitude [O] snotty [S] bad [C] service general']
sent: ['snotty', 'attitude']
counter: {('service general', 'attitude', 'bad', 'snotty'): 5}
output quads: ['[A] attitude [O] snotty [S] bad [C] service general']
multi_path: ['[A] attitude [O] snotty [S] bad [C] service general', '[A] attitude [O] snotty [C] service general [S] bad', '[A] attitude [S] bad [O] snotty [C] service general', '[O] snotty [A] attitude [C] service general [S] bad', '[O] snotty [A] attitude [S] bad [C] service general']

task, data: acos rest16
target: [('food quality', 'food', 'bad', 'disappointed')]
output: ['[A] food [O] disappointed [S] bad [C] food quality', '[A] pagoda [O] disappointed [S] bad [C] restaurant general']
sent: ['–', 'i', 'was', 'highly', 'disappointed', 'in', 'the', 'food', 'at', 'pagoda', '.']
counter: {('food quality', 'food', 'bad', 'disappointed'): 5, ('restaurant general', 'pagoda', 'bad', 'disappointed'): 5}
output quads: ['[A] food [O] disappointed [S] bad [C] food quality', '[A] pagoda [O] disappointed [S] bad [C] restaurant general']
multi_path: ['[A] food [O] disappointed [S] bad [C] food quality [SSEP] [A] pagoda [O] disappointed [S] bad [C] restaurant general', '[A] food [O] disappointed [C] food quality [S] bad [SSEP] [A] pagoda [O] disappointed [C] restaurant general [S] bad', '[A] food [S] bad [O] disappointed [C] food quality [SSEP] [A] pagoda [S] bad [O] disappointed [C] restaurant general', '[O] disappointed [A] food [C] food quality [S] bad [SSEP] [O] disappointed [A] pagoda [C] restaurant general [S] bad', '[O] disappointed [A] food [S] bad [C] food quality [SSEP] [O] disappointed [A] pagoda [S] bad [C] restaurant general']

task, data: acos rest16
target: [('restaurant general', 'null', 'great', 'good')]
output: ['[A] null [O] good [S] great [C] food quality']
sent: ['mmm', '.', '.', '.', 'good', '!']
counter: {('food quality', 'null', 'great', 'good'): 5}
output quads: ['[A] null [O] good [S] great [C] food quality']
multi_path: ['[A] it [O] good [S] great [C] food quality', '[A] it [O] good [C] food quality [S] great', '[A] it [S] great [O] good [C] food quality', '[O] good [A] it [C] food quality [S] great', '[O] good [A] it [S] great [C] food quality']

task, data: acos rest16
target: [('food quality', 'null', 'bad', 'null')]
output: ['[A] null [O] nothing really outstanding [S] bad [C] food quality']
sent: ['nothing', 'really', 'came', 'across', 'as', 'outstanding', '.']
counter: {('food quality', 'null', 'bad', 'nothing really came across as outstanding'): 2, ('food quality', 'null', 'bad', 'nothing really outstanding'): 3}
output quads: ['[A] null [O] nothing really outstanding [S] bad [C] food quality']
multi_path: ['[A] it [O] nothing really came across as outstanding [S] bad [C] food quality', '[A] it [O] nothing really came across as outstanding [C] food quality [S] bad', '[A] it [S] bad [O] nothing really outstanding [C] food quality', '[O] nothing really outstanding [A] it [C] food quality [S] bad', '[O] nothing really outstanding [A] it [S] bad [C] food quality']

task, data: acos rest16
target: [('restaurant general', 'null', 'bad', 'disappointed')]
output: ['[A] null [O] disappointed [S] bad [C] food quality']
sent: ['very', 'disappointed', '.']
counter: {('food quality', 'null', 'bad', 'disappointed'): 5}
output quads: ['[A] null [O] disappointed [S] bad [C] food quality']
multi_path: ['[A] it [O] disappointed [S] bad [C] food quality', '[A] it [O] disappointed [C] food quality [S] bad', '[A] it [S] bad [O] disappointed [C] food quality', '[O] disappointed [A] it [C] food quality [S] bad', '[O] disappointed [A] it [S] bad [C] food quality']

task, data: acos rest16
target: [('service general', 'null', 'bad', 'expensive')]
output: ['[A] sake [O] expensive [S] bad [C] drinks prices']
sent: ['we', 'were', 'then', 'charged', 'for', 'their', 'most', 'expensive', 'sake', '(', '$', '20', '+', 'per', 'serving', ')', 'when', 'we', 'in', 'fact', 'drank', 'a', 'sake', 'of', 'less', 'than', 'half', 'that', 'price', '.']
counter: {('drinks prices', 'sake', 'bad', 'expensive'): 5, ('drinks quality', 'sake', 'bad', 'null'): 1}
output quads: ['[A] sake [O] expensive [S] bad [C] drinks prices']
multi_path: ['[A] sake [O] expensive [S] bad [C] drinks prices', '[A] sake [O] expensive [C] drinks prices [S] bad [SSEP] [A] sake [O] null [C] drinks quality [S] bad', '[A] sake [S] bad [O] expensive [C] drinks prices', '[O] expensive [A] sake [C] drinks prices [S] bad', '[O] expensive [A] sake [S] bad [C] drinks prices']

task, data: acos rest16
target: [('restaurant general', 'null', 'great', 'charming')]
output: ['[A] null [O] charming [S] great [C] ambience general']
sent: ['you', 'are', 'bound', 'to', 'have', 'a', 'very', 'charming', 'time', '.']
counter: {('ambience general', 'null', 'great', 'charming'): 4, ('restaurant miscellaneous', 'null', 'great', 'charming'): 1}
output quads: ['[A] null [O] charming [S] great [C] ambience general']
multi_path: ['[A] it [O] charming [S] great [C] ambience general', '[A] it [O] charming [C] ambience general [S] great', '[A] it [S] great [O] charming [C] restaurant miscellaneous', '[O] charming [A] it [C] ambience general [S] great', '[O] charming [A] it [S] great [C] ambience general']

task, data: acos rest16
target: [('restaurant general', 'null', 'bad', 'not worth')]
output: ['[A] null [O] not worth [S] bad [C] restaurant general', '[A] null [O] not worth [S] bad [C] restaurant prices']
sent: ['it', 'is', 'not', 'worth', 'going', 'at', 'all', 'and', 'spend', 'your', 'money', 'there', '!', '!', '!']
counter: {('restaurant general', 'null', 'bad', 'not worth'): 5, ('restaurant prices', 'null', 'bad', 'not worth'): 5}
output quads: ['[A] null [O] not worth [S] bad [C] restaurant general', '[A] null [O] not worth [S] bad [C] restaurant prices']
multi_path: ['[A] it [O] not worth [S] bad [C] restaurant general [SSEP] [A] it [O] not worth [S] bad [C] restaurant prices', '[A] it [O] not worth [C] restaurant general [S] bad [SSEP] [A] it [O] not worth [C] restaurant prices [S] bad', '[A] it [S] bad [O] not worth [C] restaurant general [SSEP] [A] it [S] bad [O] not worth [C] restaurant prices', '[O] not worth [A] it [C] restaurant general [S] bad [SSEP] [O] not worth [A] it [C] restaurant prices [S] bad', '[O] not worth [A] it [S] bad [C] restaurant general [SSEP] [O] not worth [A] it [S] bad [C] restaurant prices']

task, data: acos rest16
target: [('location general', 'null', 'great', 'cheap'), ('restaurant prices', 'null', 'great', 'cheap')]
output: ['[A] null [O] cheap [S] great [C] restaurant prices']
sent: ['–', 'pretty', 'cheap', 'for', 'sit', 'down', 'mexican', 'and', 'downtown', '.']
counter: {('restaurant prices', 'null', 'great', 'cheap'): 5}
output quads: ['[A] null [O] cheap [S] great [C] restaurant prices']
multi_path: ['[A] it [O] cheap [S] great [C] restaurant prices', '[A] it [O] cheap [C] restaurant prices [S] great', '[A] it [S] great [O] cheap [C] restaurant prices', '[O] cheap [A] it [C] restaurant prices [S] great', '[O] cheap [A] it [S] great [C] restaurant prices']

task, data: acos rest16
target: [('restaurant general', 'null', 'bad', 'bad')]
output: ['[A] null [O] ok [S] bad [C] restaurant general']
sent: ['ok', '.', '.', '.', '.', '–', 'maybe', 'i', 'went', 'in', 'on', 'someone', "'", 's', 'bad', 'day', '.', '.', '.', '.']
counter: {('restaurant general', 'null', 'bad', 'ok'): 5}
output quads: ['[A] null [O] ok [S] bad [C] restaurant general']
multi_path: ['[A] it [O] ok [S] bad [C] restaurant general', '[A] it [O] ok [C] restaurant general [S] bad', '[A] it [S] bad [O] ok [C] restaurant general', '[O] ok [A] it [C] restaurant general [S] bad', '[O] ok [A] it [S] bad [C] restaurant general']

task, data: acos rest16
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] null [O] fast [S] bad [C] service general', '[A] null [O] null [S] bad [C] service general', '[A] water refills [O] too much [S] bad [C] drinks prices']
sent: ['took', 'forever', 'to', 'get', 'our', 'order', 'taken', ',', 'water', 'refills', 'were', 'too', 'much', 'to', 'ask', 'for', 'and', 'the', 'only', 'time', 'she', 'was', 'fast', 'was', 'when', 'we', 'asked', 'for', 'our', 'bill', 'when', 'we', 'could', 'get', 'her', 'attention', '.']
counter: {('service general', 'null', 'bad', 'null'): 5, ('drinks prices', 'water refills', 'bad', 'too much'): 3, ('service general', 'null', 'bad', 'fast'): 4, ('drinks prices', 'water refills', 'bad', 'null'): 1, ('drinks style_options', 'water refills', 'bad', 'null'): 1}
output quads: ['[A] null [O] null [S] bad [C] service general', '[A] water refills [O] too much [S] bad [C] drinks prices', '[A] null [O] fast [S] bad [C] service general']
multi_path: ['[A] it [O] null [S] bad [C] service general [SSEP] [A] water refills [O] too much [S] bad [C] drinks prices [SSEP] [A] it [O] fast [S] bad [C] service general', '[A] it [O] null [C] service general [S] bad [SSEP] [A] water refills [O] too much [C] drinks prices [S] bad [SSEP] [A] it [O] fast [C] service general [S] bad', '[A] it [S] bad [O] null [C] service general [SSEP] [A] water refills [S] bad [O] too much [C] drinks prices [SSEP] [A] it [S] bad [O] fast [C] service general', '[O] null [A] it [C] service general [S] bad [SSEP] [O] null [A] water refills [C] drinks prices [S] bad [SSEP] [O] fast [A] it [C] service general [S] bad', '[O] null [A] it [S] bad [C] service general [SSEP] [O] null [A] water refills [S] bad [C] drinks style_options']

task, data: acos rest16
target: [('food quality', 'null', 'great', 'fresh'), ('food style_options', 'null', 'great', 'null')]
output: ['[A] null [O] fresh [S] great [C] food quality']
sent: ['everything', 'you', 'want', 'and', 'more', ',', 'very', 'fresh', '.']
counter: {('food quality', 'null', 'great', 'fresh'): 5}
output quads: ['[A] null [O] fresh [S] great [C] food quality']
multi_path: ['[A] it [O] fresh [S] great [C] food quality', '[A] it [O] fresh [C] food quality [S] great', '[A] it [S] great [O] fresh [C] food quality', '[O] fresh [A] it [C] food quality [S] great', '[O] fresh [A] it [S] great [C] food quality']

task, data: acos rest16
target: [('restaurant general', 'null', 'great', 'worth'), ('service general', 'null', 'great', 'worth')]
output: ['[A] null [O] worth [S] great [C] service general']
sent: ['its', 'worth', 'the', 'wait', ',', 'especially', 'since', 'they', "'", 'll', 'give', 'you', 'a', 'call', 'when', 'the', 'table', 'is', 'ready', '.']
counter: {('service general', 'null', 'great', 'worth'): 10}
output quads: ['[A] null [O] worth [S] great [C] service general']
multi_path: ['[A] it [O] worth [S] great [C] service general [SSEP] [A] it [O] worth [S] great [C] service general', '[A] it [O] worth [C] service general [S] great [SSEP] [A] it [O] worth [C] service general [S] great', '[A] it [S] great [O] worth [C] service general [SSEP] [A] it [S] great [O] worth [C] service general', '[O] worth [A] it [C] service general [S] great [SSEP] [O] worth [A] it [C] service general [S] great', '[O] worth [A] it [S] great [C] service general [SSEP] [O] worth [A] it [S] great [C] service general']

task, data: acos rest16
target: [('service general', 'bartender', 'great', 'null')]
output: ['[A] bartender [O] null [S] bad [C] service general']
sent: ['every', 'time', '`', '`', '0', '-', 'sixtynine', "'", "'", 'is', 'called', 'the', 'bartender', 'buys', 'everyone', 'drinks', '!']
counter: {('service general', 'bartender', 'bad', 'null'): 5}
output quads: ['[A] bartender [O] null [S] bad [C] service general']
multi_path: ['[A] bartender [O] null [S] bad [C] service general', '[A] bartender [O] null [C] service general [S] bad', '[A] bartender [S] bad [O] null [C] service general', '[O] null [A] bartender [C] service general [S] bad', '[O] null [A] bartender [S] bad [C] service general']

task, data: acos rest16
target: [('restaurant general', 'null', 'great', 'null')]
output: ['[A] home [O] null [S] great [C] location general']
sent: ['i', 'found', 'a', 'new', 'home', 'on', 'second', 'avenue', '!', '!', '!', '!', '!', '!', '!', '!', '!', '!', '!', '!']
counter: {('location general', 'home', 'great', 'null'): 4, ('restaurant general', 'home', 'great', 'null'): 1}
output quads: ['[A] home [O] null [S] great [C] location general']
multi_path: ['[A] home [O] null [S] great [C] location general', '[A] home [O] null [C] location general [S] great', '[A] home [S] great [O] null [C] restaurant general', '[O] null [A] home [C] location general [S] great', '[O] null [A] home [S] great [C] location general']

task, data: acos rest16
target: [('restaurant general', 'null', 'great', 'kudos')]
output: ['[A] guys [O] kudos [S] great [C] restaurant general']
sent: ['kudos', 'to', 'these', 'guys', '.']
counter: {('restaurant general', 'guys', 'great', 'kudos'): 5}
output quads: ['[A] guys [O] kudos [S] great [C] restaurant general']
multi_path: ['[A] guys [O] kudos [S] great [C] restaurant general', '[A] guys [O] kudos [C] restaurant general [S] great', '[A] guys [S] great [O] kudos [C] restaurant general', '[O] kudos [A] guys [C] restaurant general [S] great', '[O] kudos [A] guys [S] great [C] restaurant general']

task, data: acos rest16
target: [('restaurant general', 'null', 'great', 'null')]
output: ['[A] null [O] null [S] ok [C] restaurant general']
sent: ['i', 'found', 'a', 'new', 'home', 'and', 'just', 'moved', 'with', 'a', 'long', 'lease', '.']
counter: {('restaurant general', 'null', 'ok', 'null'): 3, ('restaurant miscellaneous', 'null', 'ok', 'null'): 2}
output quads: ['[A] null [O] null [S] ok [C] restaurant general']
multi_path: ['[A] it [O] null [S] ok [C] restaurant general', '[A] it [O] null [C] restaurant miscellaneous [S] ok', '[A] it [S] ok [O] null [C] restaurant general', '[O] null [A] it [C] restaurant miscellaneous [S] ok', '[O] null [A] it [S] ok [C] restaurant general']

task, data: acos rest16
target: [('drinks quality', 'drinks', 'great', 'null'), ('restaurant general', 'null', 'bad', "'t recommend")]
output: ["[A] null [O] 't recommend [S] bad [C] restaurant general"]
sent: ['unless', 'you', 'are', 'just', 'stopping', 'in', 'for', 'a', 'few', 'drinks', 'i', 'would', 'n', "'", 't', 'recommend', 'going', 'here', '.']
counter: {('restaurant general', 'null', 'bad', "'t recommend"): 5}
output quads: ["[A] null [O] 't recommend [S] bad [C] restaurant general"]
multi_path: ["[A] it [O]n't recommend [S] bad [C] restaurant general", "[A] it [O]n't recommend [C] restaurant general [S] bad", "[A] it [S] bad [O]n't recommend [C] restaurant general", "[O]n't recommend [A] it [C] restaurant general [S] bad", "[O]n't recommend [A] it [S] bad [C] restaurant general"]

task, data: acos rest16
target: [('restaurant general', 'null', 'bad', 'disappointed')]
output: ['[A] null [O] disappointed [S] bad [C] food quality']
sent: ['you', 'are', 'likely', 'to', 'be', 'disappointed', '.']
counter: {('food quality', 'null', 'bad', 'disappointed'): 5}
output quads: ['[A] null [O] disappointed [S] bad [C] food quality']
multi_path: ['[A] it [O] disappointed [S] bad [C] food quality', '[A] it [O] disappointed [C] food quality [S] bad', '[A] it [S] bad [O] disappointed [C] food quality', '[O] disappointed [A] it [C] food quality [S] bad', '[O] disappointed [A] it [S] bad [C] food quality']

task, data: acos rest16
target: [('ambience general', 'artwork', 'great', 'null'), ('ambience general', 'music', 'great', 'null'), ('ambience general', 'null', 'great', 'romantic')]
output: ['[A] artwork [O] null [S] great [C] ambience general', '[A] music [O] null [S] great [C] ambience general', '[A] null [O] nice [S] great [C] ambience general', '[A] null [O] romantic [S] great [C] ambience general']
sent: ['it', 'was', 'romantic', '-', 'and', 'even', 'nice', 'even', 'with', 'my', 'sister', ',', 'reminded', 'me', 'of', 'italy', ',', 'and', 'had', 'artwork', 'and', 'music', 'that', 'kept', 'up', 'the', 'feeling', 'of', 'being', 'in', 'a', 'mediterrean', 'villa', '.']
counter: {('ambience general', 'null', 'great', 'romantic'): 5, ('ambience general', 'null', 'great', 'nice'): 5, ('ambience general', 'artwork', 'great', 'null'): 5, ('ambience general', 'music', 'great', 'null'): 5}
output quads: ['[A] null [O] romantic [S] great [C] ambience general', '[A] null [O] nice [S] great [C] ambience general', '[A] artwork [O] null [S] great [C] ambience general', '[A] music [O] null [S] great [C] ambience general']
multi_path: ['[A] it [O] romantic [S] great [C] ambience general [SSEP] [A] it [O] nice [S] great [C] ambience general [SSEP] [A] artwork [O] null [S] great [C] ambience general [SSEP] [A] music [O] null [S] great [C] ambience general', '[A] it [O] romantic [C] ambience general [S] great [SSEP] [A] it [O] nice [C] ambience general [S] great [SSEP] [A] artwork [O] null [C] ambience general [S] great [SSEP] [A] music [O] null [C] ambience general [S] great', '[A] it [S] great [O] romantic [C] ambience general [SSEP] [A] it [S] great [O] nice [C] ambience general [SSEP] [A] artwork [S] great [O] null [C] ambience general [SSEP] [A] music [S] great [O] null [C] ambience general', '[O] romantic [A] it [C] ambience general [S] great [SSEP] [O] nice [A] it [C] ambience general [S] great [SSEP] [O] null [A] artwork [C] ambience general [S] great [SSEP] [O] null [A] music [C] ambience general [S] great', '[O] romantic [A] it [S] great [C] ambience general [SSEP] [O] nice [A] it [S] great [C] ambience general [SSEP] [O] null [A] artwork [S] great [C] ambience general [SSEP] [O] null [A] music [S] great [C] ambience general']

task, data: acos rest16
target: [('restaurant general', 'null', 'great', 'recommend'), ('restaurant prices', 'null', 'bad', 'expensive')]
output: ['[A] null [O] recommend [S] great [C] restaurant prices']
sent: ['i', 'recommend', 'it', 'for', 'a', 'night', 'when', 'you', 'want', 'to', 'splurge', '!', '(', 'it', 'was', 'a', 'bit', 'expensive', ')']
counter: {('restaurant prices', 'null', 'great', 'recommend'): 3, ('restaurant general', 'null', 'great', 'recommend'): 2, ('restaurant prices', 'null', 'bad', 'expensive'): 2}
output quads: ['[A] null [O] recommend [S] great [C] restaurant prices']
multi_path: ['[A] it [O] recommend [S] great [C] restaurant prices', '[A] it [O] recommend [C] restaurant prices [S] great', '[A] it [S] great [O] recommend [C] restaurant prices', '[O] recommend [A] it [C] restaurant general [S] great [SSEP] [O] expensive [A] it [C] restaurant prices [S] bad', '[O] recommend [A] it [S] great [C] restaurant general [SSEP] [O] expensive [A] it [S] bad [C] restaurant prices']

task, data: acos rest16
target: [('restaurant prices', 'null', 'great', 'reasonable')]
output: ['[A] null [O] best [S] great [C] restaurant prices', '[A] null [O] reasonable [S] great [C] restaurant prices']
sent: ['the', 'best', 'thing', 'is', ',', 'the', 'prices', 'are', 'also', 'quite', 'reasonable', '.']
counter: {('restaurant prices', 'null', 'great', 'best'): 5, ('restaurant prices', 'null', 'great', 'reasonable'): 5}
output quads: ['[A] null [O] best [S] great [C] restaurant prices', '[A] null [O] reasonable [S] great [C] restaurant prices']
multi_path: ['[A] it [O] best [S] great [C] restaurant prices [SSEP] [A] it [O] reasonable [S] great [C] restaurant prices', '[A] it [O] best [C] restaurant prices [S] great [SSEP] [A] it [O] reasonable [C] restaurant prices [S] great', '[A] it [S] great [O] best [C] restaurant prices [SSEP] [A] it [S] great [O] reasonable [C] restaurant prices', '[O] best [A] it [C] restaurant prices [S] great [SSEP] [O] reasonable [A] it [C] restaurant prices [S] great', '[O] best [A] it [S] great [C] restaurant prices [SSEP] [O] reasonable [A] it [S] great [C] restaurant prices']

task, data: acos rest16
target: [('restaurant general', 'null', 'great', 'jem')]
output: ['[A] jem [O] null [S] great [C] restaurant miscellaneous']
sent: ['hidden', 'little', 'jem']
counter: {('restaurant miscellaneous', 'jem', 'great', 'null'): 5}
output quads: ['[A] jem [O] null [S] great [C] restaurant miscellaneous']
multi_path: ['[A] jem [O] null [S] great [C] restaurant miscellaneous', '[A] jem [O] null [C] restaurant miscellaneous [S] great', '[A] jem [S] great [O] null [C] restaurant miscellaneous', '[O] null [A] jem [C] restaurant miscellaneous [S] great', '[O] null [A] jem [S] great [C] restaurant miscellaneous']

task, data: acos rest16
target: [('location general', 'null', 'ok', 'null')]
output: ['[A] null [O] null [S] great [C] location general']
sent: ['–', 'tucked', 'away', 'over', 'by', 'the', 'beverly', 'center', '.']
counter: {('location general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [O] null [S] great [C] location general']
multi_path: ['[A] it [O] null [S] great [C] location general', '[A] it [O] null [C] location general [S] great', '[A] it [S] great [O] null [C] location general', '[O] null [A] it [C] location general [S] great', '[O] null [A] it [S] great [C] location general']

task, data: acos rest16
target: [('service general', 'null', 'great', 'nicely')]
output: ['[A] null [O] nicely [S] great [C] food style_options']
sent: ['and', 'they', 'packaged', 'everything', 'nicely', 'so', 'it', 'did', 'n', "'", 't', 'spill', '.']
counter: {('food style_options', 'null', 'great', 'nicely'): 4, ('food quality', 'null', 'great', 'nicely'): 1}
output quads: ['[A] null [O] nicely [S] great [C] food style_options']
multi_path: ['[A] it [O] nicely [S] great [C] food style_options', '[A] it [O] nicely [C] food style_options [S] great', '[A] it [S] great [O] nicely [C] food style_options', '[O] nicely [A] it [C] food quality [S] great', '[O] nicely [A] it [S] great [C] food style_options']

task, data: acos rest16
target: [('service general', 'null', 'great', 'null')]
output: ['[A] null [O] null [S] great [C] restaurant miscellaneous']
sent: ['you', 'can', 'order', 'to', 'go', 'if', 'you', 'have', 'to', 'get', 'back', 'to', 'the', 'office', 'too', '!']
counter: {('restaurant miscellaneous', 'null', 'great', 'null'): 5}
output quads: ['[A] null [O] null [S] great [C] restaurant miscellaneous']
multi_path: ['[A] it [O] null [S] great [C] restaurant miscellaneous', '[A] it [O] null [C] restaurant miscellaneous [S] great', '[A] it [S] great [O] null [C] restaurant miscellaneous', '[O] null [A] it [C] restaurant miscellaneous [S] great', '[O] null [A] it [S] great [C] restaurant miscellaneous']

task, data: acos rest16
target: [('restaurant general', 'open sesame', 'great', 'null')]
output: ['[A] sesame [O] null [S] great [C] food quality']
sent: ['–', 'i', "'", 've', 'been', 'to', 'open', 'sesame', 'only', 'once', ',', 'but', 'i', "'", 'm', 'still', 'reeling', 'from', 'the', 'experience', '!', '!']
counter: {('food quality', 'sesame', 'great', 'null'): 5}
output quads: ['[A] sesame [O] null [S] great [C] food quality']
multi_path: ['[A] sesame [O] null [S] great [C] food quality', '[A] sesame [O] null [C] food quality [S] great', '[A] sesame [S] great [O] null [C] food quality', '[O] null [A] sesame [C] food quality [S] great', '[O] null [A] sesame [S] great [C] food quality']

task, data: acos rest16
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] side dishes [O] null [S] bad [C] food quality']
sent: ['there', 'have', 'been', 'several', 'occasions', 'when', 'we', "'", 've', 'just', 'not', 'gotten', 'some', 'side', 'dishes', 'we', "'", 've', 'ordered', '.']
counter: {('food quality', 'side dishes', 'bad', 'null'): 5}
output quads: ['[A] side dishes [O] null [S] bad [C] food quality']
multi_path: ['[A] side dishes [O] null [S] bad [C] food quality', '[A] side dishes [O] null [C] food quality [S] bad', '[A] side dishes [S] bad [O] null [C] food quality', '[O] null [A] side dishes [C] food quality [S] bad', '[O] null [A] side dishes [S] bad [C] food quality']

task, data: acos rest16
target: [('drinks quality', 'beer', 'great', '('), ('drinks quality', 'beer', 'great', 'and'), ('restaurant general', 'null', 'great', 'great')]
output: ['[A] beer [O] variety [S] great [C] drinks quality', '[A] null [O] great [S] great [C] restaurant general', '[A] plates [O] small [S] great [C] food style_options']
sent: ['we', 'have', 'since', 'returned', 'and', 'also', 'had', 'a', 'great', 'experience', ',', 'sampling', 'more', 'small', 'plates', 'and', 'a', 'variety', 'of', 'the', 'beer', '(', 'cold', 'and', 'good', ')', '.']
counter: {('restaurant general', 'null', 'great', 'great'): 5, ('food style_options', 'plates', 'great', 'small'): 5, ('drinks quality', 'beer', 'great', 'variety'): 4, ('drinks quality', 'beer', 'great', 'cold'): 1, ('drinks quality', 'beer', 'great', 'good'): 1}
output quads: ['[A] null [O] great [S] great [C] restaurant general', '[A] plates [O] small [S] great [C] food style_options', '[A] beer [O] variety [S] great [C] drinks quality']
multi_path: ['[A] it [O] great [S] great [C] restaurant general [SSEP] [A] plates [O] small [S] great [C] food style_options [SSEP] [A] beer [O] variety [S] great [C] drinks quality', '[A] it [O] great [C] restaurant general [S] great [SSEP] [A] plates [O] small [C] food style_options [S] great [SSEP] [A] beer [O] cold [C] drinks quality [S] great [SSEP] [A] beer [O] good [C] drinks quality [S] great', '[A] it [S] great [O] great [C] restaurant general [SSEP] [A] plates [S] great [O] small [C] food style_options [SSEP] [A] beer [S] great [O] variety [C] drinks quality', '[O] great [A] it [C] restaurant general [S] great [SSEP] [O] small [A] plates [C] food style_options [S] great [SSEP] [O] variety [A] beer [C] drinks quality [S] great', '[O] great [A] it [S] great [C] restaurant general [SSEP] [O] small [A] plates [S] great [C] food style_options [SSEP] [O] variety [A] beer [S] great [C] drinks quality']

task, data: acos rest16
target: [('service general', 'waiter', 'great', 'good')]
output: ['[A] service [O] good [S] great [C] service general', '[A] waiter [O] spotty [S] bad [C] service general']
sent: ['we', 'did', 'have', 'the', 'same', 'waiter', 'the', 'second', 'time', ',', 'so', 'maybe', 'the', 'service', 'is', 'spotty', 'and', 'our', 'luck', 'is', 'good', '.']
counter: {('service general', 'waiter', 'bad', 'spotty'): 3, ('service general', 'service', 'great', 'good'): 5, ('service general', 'service', 'bad', 'spotty'): 2}
output quads: ['[A] waiter [O] spotty [S] bad [C] service general', '[A] service [O] good [S] great [C] service general']
multi_path: ['[A] waiter [O] spotty [S] bad [C] service general [SSEP] [A] service [O] good [S] great [C] service general', '[A] waiter [O] spotty [C] service general [S] bad [SSEP] [A] service [O] good [C] service general [S] great', '[A] waiter [S] bad [O] spotty [C] service general [SSEP] [A] service [S] great [O] good [C] service general', '[O] spotty [A] service [C] service general [S] bad [SSEP] [O] good [A] service [C] service general [S] great', '[O] spotty [A] service [S] bad [C] service general [SSEP] [O] good [A] service [S] great [C] service general']

task, data: acos rest16
target: [('ambience general', 'band', 'bad', 'fun')]
output: ['[A] band [O] fun [S] great [C] ambience general']
sent: ['sunday', 'afternoons', 'there', 'is', 'a', 'band', 'playing', 'and', 'it', 'is', 'lots', 'of', 'fun', '.']
counter: {('ambience general', 'band', 'great', 'fun'): 5}
output quads: ['[A] band [O] fun [S] great [C] ambience general']
multi_path: ['[A] band [O] fun [S] great [C] ambience general', '[A] band [O] fun [C] ambience general [S] great', '[A] band [S] great [O] fun [C] ambience general', '[O] fun [A] band [C] ambience general [S] great', '[O] fun [A] band [S] great [C] ambience general']

task, data: acos rest16
target: [('restaurant general', 'null', 'bad', 'sad')]
output: ['[A] null [O] best [S] great [C] restaurant general', '[A] null [O] sad [S] bad [C] restaurant general']
sent: ['this', 'is', 'sad', 'for', 'what', 'once', 'was', 'one', 'of', 'the', 'best', 'places', 'you', 'could', 'ever', 'eat', '.']
counter: {('restaurant general', 'null', 'bad', 'sad'): 5, ('restaurant general', 'null', 'great', 'best'): 5}
output quads: ['[A] null [O] sad [S] bad [C] restaurant general', '[A] null [O] best [S] great [C] restaurant general']
multi_path: ['[A] it [O] sad [S] bad [C] restaurant general [SSEP] [A] it [O] best [S] great [C] restaurant general', '[A] it [O] sad [C] restaurant general [S] bad [SSEP] [A] it [O] best [C] restaurant general [S] great', '[A] it [S] bad [O] sad [C] restaurant general [SSEP] [A] it [S] great [O] best [C] restaurant general', '[O] sad [A] it [C] restaurant general [S] bad [SSEP] [O] best [A] it [C] restaurant general [S] great', '[O] sad [A] it [S] bad [C] restaurant general [SSEP] [O] best [A] it [S] great [C] restaurant general']

task, data: acos rest16
target: [('restaurant general', 'scooner or later', 'bad', 'null')]
output: ['[A] scooner [O] null [S] bad [C] restaurant general']
sent: ['i', 'hope', 'one', 'day', 'scooner', 'or', 'later', 'returns', 'to', 'what', 'it', 'once', 'was', '.']
counter: {('restaurant general', 'scooner', 'bad', 'null'): 5}
output quads: ['[A] scooner [O] null [S] bad [C] restaurant general']
multi_path: ['[A] scooner [O] null [S] bad [C] restaurant general', '[A] scooner [O] null [C] restaurant general [S] bad', '[A] scooner [S] bad [O] null [C] restaurant general', '[O] null [A] scooner [C] restaurant general [S] bad', '[O] null [A] scooner [S] bad [C] restaurant general']

task, data: acos rest16
target: [('restaurant general', "ray's", 'great', 'null')]
output: ["[A] seattle ray's rates [O] null [S] great [C] restaurant general"]
sent: ['–', 'after', '12', 'years', 'in', 'seattle', 'ray', "'", 's', 'rates', 'as', 'the', 'place', 'we', 'always', 'go', 'back', 'to', '.']
counter: {('restaurant general', "seattle ray's rates", 'great', 'null'): 5}
output quads: ["[A] seattle ray's rates [O] null [S] great [C] restaurant general"]
multi_path: ["[A] seattle ray's rates [O] null [S] great [C] restaurant general", "[A] seattle ray's rates [O] null [C] restaurant general [S] great", "[A] seattle ray's rates [S] great [O] null [C] restaurant general", "[O] null [A] seattle ray's rates [C] restaurant general [S] great", "[O] null [A] seattle ray's rates [S] great [C] restaurant general"]

task, data: acos rest16
target: [('food quality', 'null', 'great', 'delicious'), ('food style_options', 'null', 'ok', 'null')]
output: ['[A] null [O] delicious [S] great [C] food quality']
sent: ['it', 'was', 'so', 'much', 'though', 'that', 'i', 'could', 'barely', 'finish', 'but', 'i', 'did', ',', 'since', 'it', 'was', 'delicious', '.']
counter: {('food quality', 'null', 'great', 'delicious'): 5}
output quads: ['[A] null [O] delicious [S] great [C] food quality']
multi_path: ['[A] it [O] delicious [S] great [C] food quality', '[A] it [O] delicious [C] food quality [S] great', '[A] it [S] great [O] delicious [C] food quality', '[O] delicious [A] it [C] food quality [S] great', '[O] delicious [A] it [S] great [C] food quality']

task, data: acos rest16
target: [('restaurant general', 'null', 'great', 'null')]
output: ['[A] null [O] wow [S] great [C] restaurant general']
sent: ['wow', '!', '!', '!', '!', '!', '!', '!', '!']
counter: {('restaurant general', 'null', 'great', 'wow'): 5}
output quads: ['[A] null [O] wow [S] great [C] restaurant general']
multi_path: ['[A] it [O] wow [S] great [C] restaurant general', '[A] it [O] wow [C] restaurant general [S] great', '[A] it [S] great [O] wow [C] restaurant general', '[O] wow [A] it [C] restaurant general [S] great', '[O] wow [A] it [S] great [C] restaurant general']

task, data: acos rest16
target: [('food quality', 'null', 'great', 'thumbs up')]
output: ['[A] null [O] thumbs up [S] great [C] restaurant general']
sent: ['two', 'thumbs', 'up', '!']
counter: {('restaurant general', 'null', 'great', 'thumbs up'): 5}
output quads: ['[A] null [O] thumbs up [S] great [C] restaurant general']
multi_path: ['[A] it [O] thumbs up [S] great [C] restaurant general', '[A] it [O] thumbs up [C] restaurant general [S] great', '[A] it [S] great [O] thumbs up [C] restaurant general', '[O] thumbs up [A] it [C] restaurant general [S] great', '[O] thumbs up [A] it [S] great [C] restaurant general']

task, data: acos rest16
target: [('food quality', 'null', 'great', 'null')]
output: ['[A] null [O] null [S] great [C] restaurant general']
sent: ['this', 'is', 'right', 'up', 'there', 'with', 'places', 'in', 'tokyo', 'as', 'far', 'as', 'the', 'freshness', 'is', 'concerned', '.']
counter: {('restaurant general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [O] null [S] great [C] restaurant general']
multi_path: ['[A] it [O] null [S] great [C] restaurant general', '[A] it [O] null [C] restaurant general [S] great', '[A] it [S] great [O] null [C] restaurant general', '[O] null [A] it [C] restaurant general [S] great', '[O] null [A] it [S] great [C] restaurant general']

task, data: acos rest16
target: [('food quality', 'null', 'great', 'perfect')]
output: ['[A] null [O] perfect [S] great [C] restaurant miscellaneous']
sent: ['perfect', 'on', 'a', 'cold', 'day', '.']
counter: {('restaurant miscellaneous', 'null', 'great', 'perfect'): 5}
output quads: ['[A] null [O] perfect [S] great [C] restaurant miscellaneous']
multi_path: ['[A] it [O] perfect [S] great [C] restaurant miscellaneous', '[A] it [O] perfect [C] restaurant miscellaneous [S] great', '[A] it [S] great [O] perfect [C] restaurant miscellaneous', '[O] perfect [A] it [C] restaurant miscellaneous [S] great', '[O] perfect [A] it [S] great [C] restaurant miscellaneous']

task, data: acos rest16
target: [('restaurant prices', 'null', 'great', 'null')]
output: ['[A] null [O] null [S] bad [C] food prices']
sent: ['$', '6', 'with', 'tip', '.']
counter: {('food prices', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [O] null [S] bad [C] food prices']
multi_path: ['[A] it [O] null [S] bad [C] food prices', '[A] it [O] null [C] food prices [S] bad', '[A] it [S] bad [O] null [C] food prices', '[O] null [A] it [C] food prices [S] bad', '[O] null [A] it [S] bad [C] food prices']

task, data: acos rest16
target: [('restaurant general', 'null', 'great', 'perfection')]
output: ['[A] null [O] perfection [S] great [C] food quality']
sent: ['perfection', '.']
counter: {('food quality', 'null', 'great', 'perfection'): 5}
output quads: ['[A] null [O] perfection [S] great [C] food quality']
multi_path: ['[A] it [O] perfection [S] great [C] food quality', '[A] it [O] perfection [C] food quality [S] great', '[A] it [S] great [O] perfection [C] food quality', '[O] perfection [A] it [C] food quality [S] great', '[O] perfection [A] it [S] great [C] food quality']

task, data: acos rest16
target: [('service general', 'null', 'ok', 'null')]
output: ['[A] null [O] null [S] bad [C] service general']
sent: ['on', 'weekends', ',', 'you', 'might', 'have', 'to', 'wait', 'for', 'couple', 'hours', '.']
counter: {('service general', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [O] null [S] bad [C] service general']
multi_path: ['[A] it [O] null [S] bad [C] service general', '[A] it [O] null [C] service general [S] bad', '[A] it [S] bad [O] null [C] service general', '[O] null [A] it [C] service general [S] bad', '[O] null [A] it [S] bad [C] service general']

task, data: acos rest16
target: [('service general', 'null', 'great', 'null')]
output: ['[A] null [O] null [S] bad [C] service general']
sent: ['however', ',', 'they', 'do', 'take', 'your', 'cellphone', 'numbers', 'so', 'that', 'you', 'can', 'go', 'hang', 'out', 'somewhere', 'else', 'till', 'they', 'call', 'you', 'up', 'on', 'your', 'cellphone', '.']
counter: {('service general', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [O] null [S] bad [C] service general']
multi_path: ['[A] it [O] null [S] bad [C] service general', '[A] it [O] null [C] service general [S] bad', '[A] it [S] bad [O] null [C] service general', '[O] null [A] it [C] service general [S] bad', '[O] null [A] it [S] bad [C] service general']

task, data: acos rest16
target: [('restaurant general', 'null', 'great', "'t be disappointed"), ('restaurant miscellaneous', 'null', 'great', "'t be disappointed")]
output: ["[A] null [O] 't be disappointed [S] great [C] restaurant general", '[A] valet parking [O] null [S] great [C] service general']
sent: ['i', 'guarantee', 'you', 'wo', 'n', "'", 't', 'be', 'disappointed', ',', 'there', "'", 's', 'also', 'valet', 'parking', '.']
counter: {('restaurant general', 'null', 'great', "'t be disappointed"): 4, ('service general', 'valet parking', 'great', 'null'): 4, ('service general', 'null', 'great', "'t be disappointed"): 1}
output quads: ["[A] null [O] 't be disappointed [S] great [C] restaurant general", '[A] valet parking [O] null [S] great [C] service general']
multi_path: ["[A] it [O]n't be disappointed [S] great [C] restaurant general [SSEP] [A] valet parking [O] null [S] great [C] service general", "[A] it [O]n't be disappointed [C] restaurant general [S] great [SSEP] [A] valet parking [O] null [C] service general [S] great", "[A] it [S] great [O]n't be disappointed [C] restaurant general [SSEP] [A] valet parking [S] great [O] null [C] service general", "[O]n't be disappointed [A] it [C] service general [S] great", "[O]n't be disappointed [A] it [S] great [C] restaurant general [SSEP] [O] null [A] valet parking [S] great [C] service general"]

task, data: acos rest16
target: [('restaurant miscellaneous', "murphy's", 'great', 'amazing')]
output: ["[A] murphy's [O] amazing [S] great [C] restaurant general"]
sent: ['–', 'i', 'ca', 'n', "'", 't', 'believe', 'murphy', "'", 's', 'has', 'been', 'around', 'for', 'over', '25', 'years', ',', 'amazing', '.']
counter: {('restaurant general', "murphy's", 'great', 'amazing'): 5}
output quads: ["[A] murphy's [O] amazing [S] great [C] restaurant general"]
multi_path: ["[A] murphy's [O] amazing [S] great [C] restaurant general", "[A] murphy's [O] amazing [C] restaurant general [S] great", "[A] murphy's [S] great [O] amazing [C] restaurant general", "[O] amazing [A] murphy's [C] restaurant general [S] great", "[O] amazing [A] murphy's [S] great [C] restaurant general"]

task, data: acos rest16
target: [('restaurant general', 'null', 'great', 'addicting')]
output: ['[A] null [O] addicting [S] great [C] food quality']
sent: ['addicting', '!']
counter: {('food quality', 'null', 'great', 'addicting'): 5}
output quads: ['[A] null [O] addicting [S] great [C] food quality']
multi_path: ['[A] it [O] addicting [S] great [C] food quality', '[A] it [O] addicting [C] food quality [S] great', '[A] it [S] great [O] addicting [C] food quality', '[O] addicting [A] it [C] food quality [S] great', '[O] addicting [A] it [S] great [C] food quality']

task, data: acos rest16
target: [('restaurant miscellaneous', 'null', 'bad', 'null')]
output: ['[A] null [O] friendly [S] great [C] restaurant miscellaneous']
sent: ['the', 'prior', 'reviews', 'said', 'kid', 'friendly', '.', '.', '.', 'give', 'me', 'a', 'break', 'with', 'two', 'young', 'children', 'that', 'is', 'light', 'years', '.']
counter: {('restaurant miscellaneous', 'null', 'great', 'kid friendly'): 2, ('restaurant miscellaneous', 'null', 'great', 'friendly'): 3}
output quads: ['[A] null [O] friendly [S] great [C] restaurant miscellaneous']
multi_path: ['[A] it [O] kid friendly [S] great [C] restaurant miscellaneous', '[A] it [O] kid friendly [C] restaurant miscellaneous [S] great', '[A] it [S] great [O] friendly [C] restaurant miscellaneous', '[O] friendly [A] it [C] restaurant miscellaneous [S] great', '[O] friendly [A] it [S] great [C] restaurant miscellaneous']

task, data: acos rest16
target: [('food quality', 'null', 'great', 'decent'), ('food quality', 'null', 'ok', 'nothing exceptional')]
output: ['[A] null [O] decent [S] ok [C] restaurant general', '[A] null [O] nothing exceptional [S] ok [C] restaurant general']
sent: ['it', 'was', 'decent', 'but', 'nothing', 'exceptional', '.']
counter: {('restaurant general', 'null', 'ok', 'decent'): 5, ('restaurant general', 'null', 'ok', 'nothing exceptional'): 5}
output quads: ['[A] null [O] decent [S] ok [C] restaurant general', '[A] null [O] nothing exceptional [S] ok [C] restaurant general']
multi_path: ['[A] it [O] decent [S] ok [C] restaurant general [SSEP] [A] it [O] nothing exceptional [S] ok [C] restaurant general', '[A] it [O] decent [C] restaurant general [S] ok [SSEP] [A] it [O] nothing exceptional [C] restaurant general [S] ok', '[A] it [S] ok [O] decent [C] restaurant general [SSEP] [A] it [S] ok [O] nothing exceptional [C] restaurant general', '[O] decent [A] it [C] restaurant general [S] ok [SSEP] [O] nothing exceptional [A] it [C] restaurant general [S] ok', '[O] decent [A] it [S] ok [C] restaurant general [SSEP] [O] nothing exceptional [A] it [S] ok [C] restaurant general']

task, data: acos rest16
target: [('food quality', 'null', 'great', 'best')]
output: ['[A] place [O] best [S] great [C] restaurant general']
sent: ['the', 'place', 'is', 'the', 'next', 'best', 'thing', 'to', 'my', 'moms', 'cooking', '.']
counter: {('restaurant general', 'place', 'great', 'best'): 5}
output quads: ['[A] place [O] best [S] great [C] restaurant general']
multi_path: ['[A] place [O] best [S] great [C] restaurant general', '[A] place [O] best [C] restaurant general [S] great', '[A] place [S] great [O] best [C] restaurant general', '[O] best [A] place [C] restaurant general [S] great', '[O] best [A] place [S] great [C] restaurant general']

task, data: acos rest16
target: [('restaurant general', 'null', 'great', '10')]
output: ['[A] null [O] null [S] great [C] restaurant general']
sent: ['10', '!']
counter: {('restaurant general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [O] null [S] great [C] restaurant general']
multi_path: ['[A] it [O] null [S] great [C] restaurant general', '[A] it [O] null [C] restaurant general [S] great', '[A] it [S] great [O] null [C] restaurant general', '[O] null [A] it [C] restaurant general [S] great', '[O] null [A] it [S] great [C] restaurant general']

task, data: acos rest16
target: [('ambience general', 'null', 'great', 'unpretentious')]
output: ['[A] null [O] underground [S] great [C] ambience general', '[A] null [O] unpretentious [S] great [C] ambience general']
sent: ['it', "'", 's', 'unpretentious', 'and', 'underground', '.']
counter: {('ambience general', 'null', 'great', 'unpretentious'): 5, ('ambience general', 'null', 'great', 'underground'): 5}
output quads: ['[A] null [O] unpretentious [S] great [C] ambience general', '[A] null [O] underground [S] great [C] ambience general']
multi_path: ['[A] it [O] unpretentious [S] great [C] ambience general [SSEP] [A] it [O] underground [S] great [C] ambience general', '[A] it [O] unpretentious [C] ambience general [S] great [SSEP] [A] it [O] underground [C] ambience general [S] great', '[A] it [S] great [O] unpretentious [C] ambience general [SSEP] [A] it [S] great [O] underground [C] ambience general', '[O] unpretentious [A] it [C] ambience general [S] great [SSEP] [O] underground [A] it [C] ambience general [S] great', '[O] unpretentious [A] it [S] great [C] ambience general [SSEP] [O] underground [A] it [S] great [C] ambience general']

task, data: acos rest16
target: [('ambience general', 'null', 'great', 'relaxing'), ('ambience general', 'null', 'great', 'welcoming'), ('food quality', 'null', 'great', 'delicious'), ('food quality', 'null', 'great', 'fresh')]
output: ['[A] null [O] delicious [S] great [C] food quality', '[A] null [O] fresh [S] great [C] ambience general', '[A] null [O] relaxing [S] great [C] ambience general', '[A] null [O] welcoming [S] great [C] ambience general']
sent: ['it', "'", 's', 'fresh', ',', 'welcoming', ',', 'delicious', ',', 'and', 'relaxing', '.']
counter: {('ambience general', 'null', 'great', 'fresh'): 3, ('ambience general', 'null', 'great', 'welcoming'): 5, ('food quality', 'null', 'great', 'delicious'): 5, ('ambience general', 'null', 'great', 'relaxing'): 5, ('food quality', 'null', 'great', 'fresh'): 2}
output quads: ['[A] null [O] fresh [S] great [C] ambience general', '[A] null [O] welcoming [S] great [C] ambience general', '[A] null [O] delicious [S] great [C] food quality', '[A] null [O] relaxing [S] great [C] ambience general']
multi_path: ['[A] it [O] fresh [S] great [C] ambience general [SSEP] [A] it [O] welcoming [S] great [C] ambience general [SSEP] [A] it [O] delicious [S] great [C] food quality [SSEP] [A] it [O] relaxing [S] great [C] ambience general', '[A] it [O] fresh [C] ambience general [S] great [SSEP] [A] it [O] welcoming [C] ambience general [S] great [SSEP] [A] it [O] delicious [C] food quality [S] great [SSEP] [A] it [O] relaxing [C] ambience general [S] great', '[A] it [S] great [O] fresh [C] ambience general [SSEP] [A] it [S] great [O] welcoming [C] ambience general [SSEP] [A] it [S] great [O] delicious [C] food quality [SSEP] [A] it [S] great [O] relaxing [C] ambience general', '[O] fresh [A] it [C] food quality [S] great [SSEP] [O] welcoming [A] it [C] ambience general [S] great [SSEP] [O] delicious [A] it [C] food quality [S] great [SSEP] [O] relaxing [A] it [C] ambience general [S] great', '[O] fresh [A] it [S] great [C] food quality [SSEP] [O] welcoming [A] it [S] great [C] ambience general [SSEP] [O] delicious [A] it [S] great [C] food quality [SSEP] [O] relaxing [A] it [S] great [C] ambience general']

task, data: acos rest16
target: [('restaurant miscellaneous', 'null', 'great', 'null')]
output: ['[A] null [O] good [S] great [C] restaurant miscellaneous']
sent: ['good', 'for', 'late', 'night', 'dining', '(', 'last', 'minute', 'planning', ')', 'without', 'reservations', '.']
counter: {('restaurant miscellaneous', 'null', 'great', 'good'): 5}
output quads: ['[A] null [O] good [S] great [C] restaurant miscellaneous']
multi_path: ['[A] it [O] good [S] great [C] restaurant miscellaneous', '[A] it [O] good [C] restaurant miscellaneous [S] great', '[A] it [S] great [O] good [C] restaurant miscellaneous', '[O] good [A] it [C] restaurant miscellaneous [S] great', '[O] good [A] it [S] great [C] restaurant miscellaneous']

task, data: acos rest16
target: [('restaurant general', 'null', 'great', 'great')]
output: ['[A] dining [O] great [S] great [C] food quality']
sent: ['–', 'this', 'was', 'great', 'dining', 'experience', '.']
counter: {('food quality', 'dining', 'great', 'great'): 5}
output quads: ['[A] dining [O] great [S] great [C] food quality']
multi_path: ['[A] dining [O] great [S] great [C] food quality', '[A] dining [O] great [C] food quality [S] great', '[A] dining [S] great [O] great [C] food quality', '[O] great [A] dining [C] food quality [S] great', '[O] great [A] dining [S] great [C] food quality']

task, data: acos rest16
target: [('restaurant general', 'null', 'great', 'null')]
output: ["[A] danny gans [O] 't miss [S] great [C] restaurant general"]
sent: ['if', 'you', "'", 're', 'going', 'to', 'see', 'danny', 'gans', 'or', 'just', 'staying', 'at', 'the', 'mirage', ',', 'do', 'n', "'", 't', 'miss', 'this', 'one', '.']
counter: {('restaurant general', 'danny gans', 'great', "'t miss"): 5}
output quads: ["[A] danny gans [O] 't miss [S] great [C] restaurant general"]
multi_path: ["[A] danny gans [O]n't miss [S] great [C] restaurant general", "[A] danny gans [O]n't miss [C] restaurant general [S] great", "[A] danny gans [S] great [O]n't miss [C] restaurant general", "[O]n't miss [A] danny gans [C] restaurant general [S] great", "[O]n't miss [A] danny gans [S] great [C] restaurant general"]

task, data: acos rest16
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] order [O] not correct [S] bad [C] service general']
sent: ['even', 'then', ',', 'the', 'order', 'was', 'not', 'correct', 'and', 'we', 'were', 'still', 'waiting', 'for', 'a', 'couple', 'items', '.']
counter: {('service general', 'order', 'bad', 'not correct'): 5}
output quads: ['[A] order [O] not correct [S] bad [C] service general']
multi_path: ['[A] order [O] not correct [S] bad [C] service general', '[A] order [O] not correct [C] service general [S] bad', '[A] order [S] bad [O] not correct [C] service general', '[O] not correct [A] order [C] service general [S] bad', '[O] not correct [A] order [S] bad [C] service general']

task, data: acos rest16
target: [('service general', 'waitress', 'bad', 'null')]
output: ['[A] waitress [O] hard [S] bad [C] service general']
sent: ['we', 'had', 'a', 'very', 'hard', 'time', 'getting', 'the', 'waitress', "'", 'attention', 'and', 'finally', 'had', 'to', 'get', 'up', 'and', 'go', 'inside', 'to', 'speak', 'to', 'a', 'manager', '.']
counter: {('service general', 'waitress', 'bad', 'hard'): 5}
output quads: ['[A] waitress [O] hard [S] bad [C] service general']
multi_path: ['[A] waitress [O] hard [S] bad [C] service general', '[A] waitress [O] hard [C] service general [S] bad', '[A] waitress [S] bad [O] hard [C] service general', '[O] hard [A] waitress [C] service general [S] bad', '[O] hard [A] waitress [S] bad [C] service general']

task, data: acos rest16
target: [('service general', 'owner', 'bad', 'dismissive')]
output: ['[A] owner [O] dismissive [S] great [C] service general']
sent: ['as', 'it', 'turns', 'out', 'the', 'owner', 'was', 'seated', 'right', 'next', 'to', 'us', 'and', 'when', 'he', 'came', 'over', 'to', 'check', 'on', 'our', 'problems', 'was', 'very', 'dismissive', 'and', 'offered', 'a', 'token', '20', '%', 'discount', 'on', 'our', 'bill', '.']
counter: {('service general', 'owner', 'great', 'dismissive'): 5}
output quads: ['[A] owner [O] dismissive [S] great [C] service general']
multi_path: ['[A] owner [O] dismissive [S] great [C] service general', '[A] owner [O] dismissive [C] service general [S] great', '[A] owner [S] great [O] dismissive [C] service general', '[O] dismissive [A] owner [C] service general [S] great', '[O] dismissive [A] owner [S] great [C] service general']

task, data: acos rest16
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] null [O] null [S] bad [C] restaurant general']
sent: ['after', 'sitting', 'there', 'with', 'my', 'empty', 'glass', 'for', 'over', '20', 'minutes', 'i', 'left', '.']
counter: {('restaurant general', 'null', 'bad', 'null'): 3, ('restaurant miscellaneous', 'null', 'bad', 'null'): 2}
output quads: ['[A] null [O] null [S] bad [C] restaurant general']
multi_path: ['[A] it [O] null [S] bad [C] restaurant general', '[A] it [O] null [C] restaurant miscellaneous [S] bad', '[A] it [S] bad [O] null [C] restaurant general', '[O] null [A] it [C] restaurant miscellaneous [S] bad', '[O] null [A] it [S] bad [C] restaurant general']

task, data: acos rest16
target: [('restaurant miscellaneous', 'restaurant', 'bad', 'null')]
output: ['[A] service [O] null [S] bad [C] service general']
sent: ['i', 'went', 'home', '&', 'looked', 'them', 'up', 'online', 'again', 'where', 'i', 'discovered', 'there', 'is', 'a', 'link', 'for', 'a', 'give', 'away', 'that', 'does', 'n', "'", 't', 'work', 'so', 'emailed', 'the', 'restaurant', 'about', 'the', 'non', 'existent', 'service', '&', 'deceptive', 'link', '.']
counter: {('service general', 'service', 'bad', 'null'): 5}
output quads: ['[A] service [O] null [S] bad [C] service general']
multi_path: ['[A] service [O] null [S] bad [C] service general', '[A] service [O] null [C] service general [S] bad', '[A] service [S] bad [O] null [C] service general', '[O] null [A] service [C] service general [S] bad', '[O] null [A] service [S] bad [C] service general']

task, data: acos rest16
target: [('restaurant miscellaneous', 'null', 'bad', 'null')]
output: ['[A] null [O] null [S] bad [C] service general']
sent: ['i', 'never', 'heard', 'back', 'from', 'anyone', 'more', 'than', 'a', 'month', 'ago', '.']
counter: {('service general', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [O] null [S] bad [C] service general']
multi_path: ['[A] it [O] null [S] bad [C] service general', '[A] it [O] null [C] service general [S] bad', '[A] it [S] bad [O] null [C] service general', '[O] null [A] it [C] service general [S] bad', '[O] null [A] it [S] bad [C] service general']

task, data: acos rest16
target: [('restaurant miscellaneous', 'null', 'bad', 'null')]
output: ['[A] null [O] null [S] bad [C] service general']
sent: ['as', 'of', 'writing', 'this', 'i', 'just', 'tried', 'their', 'give', 'away', 'a', 'link', 'again', '&', 'it', 'still', 'does', 'n', "'", 't', 'work', '.']
counter: {('service general', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [O] null [S] bad [C] service general']
multi_path: ['[A] it [O] null [S] bad [C] service general', '[A] it [O] null [C] service general [S] bad', '[A] it [S] bad [O] null [C] service general', '[O] null [A] it [C] service general [S] bad', '[O] null [A] it [S] bad [C] service general']

task, data: acos rest16
target: [('restaurant general', 'null', 'great', 'null')]
output: ['[A] null [O] winner [S] great [C] restaurant general']
sent: ['always', 'a', 'winner', '.']
counter: {('restaurant general', 'null', 'great', 'winner'): 5}
output quads: ['[A] null [O] winner [S] great [C] restaurant general']
multi_path: ['[A] it [O] winner [S] great [C] restaurant general', '[A] it [O] winner [C] restaurant general [S] great', '[A] it [S] great [O] winner [C] restaurant general', '[O] winner [A] it [C] restaurant general [S] great', '[O] winner [A] it [S] great [C] restaurant general']

task, data: acos rest16
target: [('service general', 'null', 'bad', 'annoyance')]
output: ['[A] null [O] null [S] bad [C] service general']
sent: ['she', 'does', 'n', "'", 't', 'make', 'you', 'feel', 'welcome', 'and', 'treats', 'you', 'like', 'an', 'annoyance', '.']
counter: {('service general', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [O] null [S] bad [C] service general']
multi_path: ['[A] it [O] null [S] bad [C] service general', '[A] it [O] null [C] service general [S] bad', '[A] it [S] bad [O] null [C] service general', '[O] null [A] it [C] service general [S] bad', '[O] null [A] it [S] bad [C] service general']

task, data: acos rest16
target: [('service general', 'null', 'bad', 'annoying')]
output: ['[A] null [O] friendly [S] great [C] service general']
sent: ['but', 'she', 'is', 'very', 'friendly', 'with', 'certain', 'people', ',', 'making', 'it', 'even', 'more', 'annoying', '.']
counter: {('service general', 'null', 'great', 'friendly'): 5}
output quads: ['[A] null [O] friendly [S] great [C] service general']
multi_path: ['[A] it [O] friendly [S] great [C] service general', '[A] it [O] friendly [C] service general [S] great', '[A] it [S] great [O] friendly [C] service general', '[O] friendly [A] it [C] service general [S] great', '[O] friendly [A] it [S] great [C] service general']

task, data: acos rest16
target: [('restaurant miscellaneous', 'null', 'great', 'null')]
output: ['[A] null [O] deserve [S] great [C] restaurant general']
sent: ['they', 'have', 'been', 'featured', 'on', 'the', 'food', 'network', 'and', 'they', 'deserve', 'it', '.']
counter: {('restaurant general', 'null', 'great', 'deserve'): 5}
output quads: ['[A] null [O] deserve [S] great [C] restaurant general']
multi_path: ['[A] it [O] deserve [S] great [C] restaurant general', '[A] it [O] deserve [C] restaurant general [S] great', '[A] it [S] great [O] deserve [C] restaurant general', '[O] deserve [A] it [C] restaurant general [S] great', '[O] deserve [A] it [S] great [C] restaurant general']

task, data: acos rest16
target: [('ambience general', 'null', 'great', 'null')]
output: []
sent: ['not', 'too', 'fine', 'thought', 'that', 'you', 'feel', 'uncomfortable', 'and', 'have', 'to', 'dress', 'up', '.']
counter: {('restaurant miscellaneous', 'null', 'great', 'uncomfortable'): 2, ('food quality', 'null', 'great', 'uncomfortable'): 1, ('ambience general', 'null', 'bad', 'uncomfortable'): 2}
output quads: []
multi_path: ['[A] it [O] uncomfortable [S] great [C] restaurant miscellaneous', '[A] it [O] uncomfortable [C] restaurant miscellaneous [S] great', '[A] it [S] great [O] uncomfortable [C] food quality', '[O] uncomfortable [A] it [C] ambience general [S] bad', '[O] uncomfortable [A] it [S] bad [C] ambience general']

task, data: acos rest16
target: [('service general', 'null', 'great', 'fast')]
output: ['[A] food [O] fast [S] great [C] food quality', '[A] food [O] like [S] great [C] food style_options', '[A] null [O] hate [S] bad [C] restaurant miscellaneous']
sent: ['first', 'off', ',', 'the', 'food', 'came', 'fast', 'and', 'all', 'together', ':', ')', 'i', 'like', 'that', '.', '.', '.', 'i', 'hate', 'the', 'pretentiousness', 'of', 'things', 'coming', 'in', 'one', 'after', 'the', 'other', '.']
counter: {('food quality', 'food', 'great', 'fast'): 5, ('food style_options', 'food', 'great', 'like'): 5, ('restaurant miscellaneous', 'null', 'bad', 'hate'): 4, ('service general', 'null', 'bad', 'hate'): 1}
output quads: ['[A] food [O] fast [S] great [C] food quality', '[A] food [O] like [S] great [C] food style_options', '[A] null [O] hate [S] bad [C] restaurant miscellaneous']
multi_path: ['[A] food [O] fast [S] great [C] food quality [SSEP] [A] food [O] like [S] great [C] food style_options [SSEP] [A] it [O] hate [S] bad [C] restaurant miscellaneous', '[A] food [O] fast [C] food quality [S] great [SSEP] [A] food [O] like [C] food style_options [S] great [SSEP] [A] it [O] hate [C] restaurant miscellaneous [S] bad', '[A] food [S] great [O] fast [C] food quality [SSEP] [A] food [S] great [O] like [C] food style_options [SSEP] [A] it [S] bad [O] hate [C] restaurant miscellaneous', '[O] fast [A] food [C] food quality [S] great [SSEP] [O] like [A] food [C] food style_options [S] great [SSEP] [O] hate [A] it [C] restaurant miscellaneous [S] bad', '[O] fast [A] food [S] great [C] food quality [SSEP] [O] like [A] food [S] great [C] food style_options [SSEP] [O] hate [A] it [S] bad [C] service general']

task, data: acos rest16
target: [('restaurant general', 'null', 'great', 'null')]
output: ['[A] null [O] null [S] great [C] restaurant general', '[A] null [O] sad [S] bad [C] restaurant prices']
sent: ['it', 'is', 'sad', 'there', 'is', 'not', 'many', 'people', 'who', 'frequent', 'eating', 'at', 'places', 'like', 'these', 'that', 'look', 'pricey', 'because', 'they', 'are', 'at', 'the', 'hotel', '.', '.', '.', 'but', 'they', 'are', 'definitely', 'one', 'you', 'dont', 'want', 'to', 'miss', ',', 'esp', 'if', 'your', 'in', 'downtown', 'san', 'jose', '.']
counter: {('restaurant prices', 'null', 'bad', 'sad'): 4, ('restaurant general', 'null', 'great', 'null'): 5, ('restaurant prices', 'null', 'great', 'sad'): 1}
output quads: ['[A] null [O] sad [S] bad [C] restaurant prices', '[A] null [O] null [S] great [C] restaurant general']
multi_path: ['[A] it [O] sad [S] bad [C] restaurant prices [SSEP] [A] it [O] null [S] great [C] restaurant general', '[A] it [O] sad [C] restaurant prices [S] bad [SSEP] [A] it [O] null [C] restaurant general [S] great', '[A] it [S] great [O] sad [C] restaurant prices [SSEP] [A] it [S] great [O] null [C] restaurant general', '[O] sad [A] it [C] restaurant prices [S] bad [SSEP] [O] null [A] it [C] restaurant general [S] great', '[O] sad [A] it [S] bad [C] restaurant prices [SSEP] [O] null [A] it [S] great [C] restaurant general']

task, data: acos rest16
target: [('food style_options', 'null', 'bad', 'null'), ('restaurant prices', 'null', 'bad', 'null')]
output: ['[A] null [O] null [S] bad [C] food prices']
sent: ['we', 'easily', 'spent', 'more', 'than', '$', '40', 'per', 'person', '(', 'not', 'including', 'alcohol', ')', 'and', 'were', 'still', 'hungry', '.']
counter: {('food prices', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [O] null [S] bad [C] food prices']
multi_path: ['[A] it [O] null [S] bad [C] food prices', '[A] it [O] null [C] food prices [S] bad', '[A] it [S] bad [O] null [C] food prices', '[O] null [A] it [C] food prices [S] bad', '[O] null [A] it [S] bad [C] food prices']

task, data: acos rest16
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] tables [O] null [S] bad [C] service general']
sent: ['we', 'went', 'back', 'to', 'the', 'restaurant', 'and', 'low', 'and', 'behold', ',', 'we', 'were', 'seated', 'at', 'one', 'of', 'the', 'tables', 'that', 'was', 'available', '30', 'minutes', 'ago', '!', '!']
counter: {('service general', 'tables', 'bad', 'null'): 5}
output quads: ['[A] tables [O] null [S] bad [C] service general']
multi_path: ['[A] tables [O] null [S] bad [C] service general', '[A] tables [O] null [C] service general [S] bad', '[A] tables [S] bad [O] null [C] service general', '[O] null [A] tables [C] service general [S] bad', '[O] null [A] tables [S] bad [C] service general']

task, data: acos rest16
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] appetizers [O] null [S] ok [C] food style_options', '[A] food [O] null [S] bad [C] food quality']
sent: ['we', 'put', 'in', 'our', 'order', 'and', 'although', 'we', 'ordered', '4', 'appetizers', ',', 'the', 'food', 'did', 'n', "'", 't', 'arrive', 'until', '45', 'minutes', 'later', '.', '.', '.', 'with', 'our', 'main', 'course', '.']
counter: {('food quality', 'food', 'bad', 'null'): 5, ('food style_options', 'appetizers', 'ok', 'null'): 3, ('food style_options', 'appetizers', 'bad', 'null'): 2, ('food quality', 'main course', 'bad', 'null'): 1}
output quads: ['[A] food [O] null [S] bad [C] food quality', '[A] appetizers [O] null [S] ok [C] food style_options']
multi_path: ['[A] food [O] null [S] bad [C] food quality [SSEP] [A] appetizers [O] null [S] ok [C] food style_options', '[A] food [O] null [C] food quality [S] bad [SSEP] [A] appetizers [O] null [C] food style_options [S] bad', '[A] food [S] bad [O] null [C] food quality [SSEP] [A] appetizers [S] ok [O] null [C] food style_options', '[O] null [A] food [C] food quality [S] bad [SSEP] [O] null [A] appetizers [C] food style_options [S] bad [SSEP] [O] null [A] main course [C] food quality [S] bad', '[O] null [A] food [S] bad [C] food quality [SSEP] [O] null [A] appetizers [S] ok [C] food style_options']

task, data: acos rest16
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] appetizers [O] null [S] ok [C] food style_options']
sent: ['um', 'so', 'now', 'what', 'are', 'appetizers', 'for', '?', '?', '?']
counter: {('food style_options', 'appetizers', 'ok', 'null'): 3, ('food quality', 'appetizers', 'ok', 'null'): 2}
output quads: ['[A] appetizers [O] null [S] ok [C] food style_options']
multi_path: ['[A] appetizers [O] null [S] ok [C] food style_options', '[A] appetizers [O] null [C] food quality [S] ok', '[A] appetizers [S] ok [O] null [C] food style_options', '[O] null [A] appetizers [C] food quality [S] ok', '[O] null [A] appetizers [S] ok [C] food style_options']

task, data: acos rest16
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] bread service [O] null [S] bad [C] food quality']
sent: ['oh', 'i', 'forgot', 'to', 'mention', 'that', 'they', 'do', 'n', "'", 't', 'have', 'bread', 'service', '.']
counter: {('food quality', 'bread service', 'bad', 'null'): 5}
output quads: ['[A] bread service [O] null [S] bad [C] food quality']
multi_path: ['[A] bread service [O] null [S] bad [C] food quality', '[A] bread service [O] null [C] food quality [S] bad', '[A] bread service [S] bad [O] null [C] food quality', '[O] null [A] bread service [C] food quality [S] bad', '[O] null [A] bread service [S] bad [C] food quality']

task, data: acos rest16
target: [('service general', 'service', 'bad', 'null')]
output: ['[A] null [O] null [S] bad [C] service general']
sent: ['in', 'other', 'words', ',', 'if', 'they', 'are', 'n', "'", 't', 'making', '$', '$', 'off', 'of', 'you', 'then', 'you', 'do', 'n', "'", 't', 'rate', 'high', 'on', 'their', "'", 'service', 'scale', "'", '.']
counter: {('service general', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [O] null [S] bad [C] service general']
multi_path: ['[A] it [O] null [S] bad [C] service general', '[A] it [O] null [C] service general [S] bad', '[A] it [S] bad [O] null [C] service general', '[O] null [A] it [C] service general [S] bad', '[O] null [A] it [S] bad [C] service general']

task, data: acos rest16
target: [('location general', 'null', 'great', 'great')]
output: ['[A] null [O] great [S] great [C] restaurant general']
sent: ['its', 'great', 'if', 'you', 'spent', 'the', 'day', 'there', 'and', 'did', 'n', "'", 't', 'want', 'to', 'drive', 'to', 'eat', '.']
counter: {('restaurant general', 'null', 'great', 'great'): 5}
output quads: ['[A] null [O] great [S] great [C] restaurant general']
multi_path: ['[A] it [O] great [S] great [C] restaurant general', '[A] it [O] great [C] restaurant general [S] great', '[A] it [S] great [O] great [C] restaurant general', '[O] great [A] it [C] restaurant general [S] great', '[O] great [A] it [S] great [C] restaurant general']

task, data: acos rest16
target: [('restaurant miscellaneous', 'null', 'great', 'good')]
output: ['[A] null [O] null [S] great [C] restaurant miscellaneous', '[A] parking [O] reasonably [S] great [C] location general']
sent: ['parking', 'is', 'reasonably', 'good', ',', 'they', 'have', 'their', 'own', 'lot', 'and', 'you', 'can', 'park', 'in', 'the', 'park', 'nearby', '.']
counter: {('location general', 'parking', 'great', 'reasonably'): 5, ('restaurant miscellaneous', 'null', 'great', 'null'): 5}
output quads: ['[A] parking [O] reasonably [S] great [C] location general', '[A] null [O] null [S] great [C] restaurant miscellaneous']
multi_path: ['[A] parking [O] reasonably [S] great [C] location general [SSEP] [A] it [O] null [S] great [C] restaurant miscellaneous', '[A] parking [O] reasonably [C] location general [S] great [SSEP] [A] it [O] null [C] restaurant miscellaneous [S] great', '[A] parking [S] great [O] reasonably [C] location general [SSEP] [A] it [S] great [O] null [C] restaurant miscellaneous', '[O] reasonably [A] parking [C] location general [S] great [SSEP] [O] null [A] it [C] restaurant miscellaneous [S] great', '[O] reasonably [A] parking [S] great [C] location general [SSEP] [O] null [A] it [S] great [C] restaurant miscellaneous']

task, data: acos rest16
target: [('service general', 'null', 'great', 'null')]
output: ['[A] null [O] quickly [S] great [C] service general']
sent: ['6pm', 'on', 'a', 'sat', 'before', 'a', 'broadway', 'play', 'and', 'we', 'were', 'quickly', 'seated', 'and', 'served', '.']
counter: {('service general', 'null', 'great', 'quickly'): 5}
output quads: ['[A] null [O] quickly [S] great [C] service general']
multi_path: ['[A] it [O] quickly [S] great [C] service general', '[A] it [O] quickly [C] service general [S] great', '[A] it [S] great [O] quickly [C] service general', '[O] quickly [A] it [C] service general [S] great', '[O] quickly [A] it [S] great [C] service general']

task, data: acos rest16
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] food [O] null [S] bad [C] food quality']
sent: ['as', 'part', 'of', 'a', 'small', 'party', 'of', 'four', ',', 'our', 'food', 'was', 'dropped', 'off', 'without', 'comment', ';']
counter: {('food quality', 'food', 'bad', 'null'): 5}
output quads: ['[A] food [O] null [S] bad [C] food quality']
multi_path: ['[A] food [O] null [S] bad [C] food quality', '[A] food [O] null [C] food quality [S] bad', '[A] food [S] bad [O] null [C] food quality', '[O] null [A] food [C] food quality [S] bad', '[O] null [A] food [S] bad [C] food quality']

task, data: acos rest16
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] null [O] null [S] great [C] service general']
sent: ['any', 'further', 'needs', 'we', 'may', 'have', 'had', 'could', 'not', 'have', 'been', 'met', 'since', 'no', 'one', 'stopped', 'by', 'the', 'table', '.']
counter: {('service general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [O] null [S] great [C] service general']
multi_path: ['[A] it [O] null [S] great [C] service general', '[A] it [O] null [C] service general [S] great', '[A] it [S] great [O] null [C] service general', '[O] null [A] it [C] service general [S] great', '[O] null [A] it [S] great [C] service general']

task, data: acos rest16
target: [('service general', 'manager', 'bad', 'disappointment')]
output: ['[A] manager [O] null [S] bad [C] service general']
sent: ['the', 'manager', 'continually', 'interrupted', 'with', '`', '`', 'is', 'there', 'anything', 'else', 'i', 'can', 'do', 'for', 'you', '?', '`', '`', ',', 'a', 'strange', 'comment', 'because', 'she', 'had', 'hardly', 'listened', ',', 'let', 'alone', 'responded', 'to', 'our', 'expression', 'of', 'disappointment', 'at', 'our', 'experience', '.']
counter: {('service general', 'manager', 'bad', 'null'): 5}
output quads: ['[A] manager [O] null [S] bad [C] service general']
multi_path: ['[A] manager [O] null [S] bad [C] service general', '[A] manager [O] null [C] service general [S] bad', '[A] manager [S] bad [O] null [C] service general', '[O] null [A] manager [C] service general [S] bad', '[O] null [A] manager [S] bad [C] service general']

task, data: acos rest16
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] null [O] null [S] great [C] restaurant general']
sent: ['in', 'short', ',', 'schooner', 'or', 'later', 'could', 'n', "'", 't', 'have', 'cared', 'less', 'about', 'our', 'being', 'at', 'their', 'establishment', '.']
counter: {('restaurant general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [O] null [S] great [C] restaurant general']
multi_path: ['[A] it [O] null [S] great [C] restaurant general', '[A] it [O] null [C] restaurant general [S] great', '[A] it [S] great [O] null [C] restaurant general', '[O] null [A] it [C] restaurant general [S] great', '[O] null [A] it [S] great [C] restaurant general']

task, data: acos rest16
target: [('food prices', 'null', 'great', 'null'), ('food style_options', 'null', 'great', 'good')]
output: ['[A] null [O] good [S] great [C] food prices', '[A] null [O] good [S] great [C] food style_options', '[A] null [O] good [S] great [C] service general']
sent: ['and', 'they', 'give', 'good', 'quantity', 'for', 'the', 'price', '.']
counter: {('service general', 'null', 'great', 'good'): 5, ('food style_options', 'null', 'great', 'good'): 5, ('restaurant prices', 'null', 'great', 'good'): 2, ('food prices', 'null', 'great', 'good'): 3}
output quads: ['[A] null [O] good [S] great [C] service general', '[A] null [O] good [S] great [C] food style_options', '[A] null [O] good [S] great [C] food prices']
multi_path: ['[A] it [O] good [S] great [C] service general [SSEP] [A] it [O] good [S] great [C] food style_options [SSEP] [A] it [O] good [S] great [C] restaurant prices', '[A] it [O] good [C] service general [S] great [SSEP] [A] it [O] good [C] food style_options [S] great [SSEP] [A] it [O] good [C] food prices [S] great', '[A] it [S] great [O] good [C] service general [SSEP] [A] it [S] great [O] good [C] food style_options [SSEP] [A] it [S] great [O] good [C] restaurant prices', '[O] good [A] it [C] service general [S] great [SSEP] [O] good [A] it [C] food style_options [S] great [SSEP] [O] good [A] it [C] food prices [S] great', '[O] good [A] it [S] great [C] service general [SSEP] [O] good [A] it [S] great [C] food style_options [SSEP] [O] good [A] it [S] great [C] food prices']

task, data: acos rest16
target: [('restaurant general', 'null', 'great', 'null')]
output: ['[A] null [O] gem [S] great [C] restaurant general']
sent: ['this', 'is', 'the', 'case', 'at', 'this', 'gem', '.']
counter: {('restaurant general', 'null', 'great', 'gem'): 5}
output quads: ['[A] null [O] gem [S] great [C] restaurant general']
multi_path: ['[A] it [O] gem [S] great [C] restaurant general', '[A] it [O] gem [C] restaurant general [S] great', '[A] it [S] great [O] gem [C] restaurant general', '[O] gem [A] it [C] restaurant general [S] great', '[O] gem [A] it [S] great [C] restaurant general']

task, data: acos rest16
target: [('ambience general', 'null', 'great', 'fun')]
output: ['[A] null [O] unpretentious [S] great [C] restaurant general']
sent: ['seriously', ',', 'you', 'ca', 'n', "'", 't', 'go', 'wrong', ',', 'if', 'it', 'is', 'unpretentious', 'local', 'fun', 'you', 'seek', '.']
counter: {('restaurant general', 'null', 'great', 'unpretentious'): 5}
output quads: ['[A] null [O] unpretentious [S] great [C] restaurant general']
multi_path: ['[A] it [O] unpretentious [S] great [C] restaurant general', '[A] it [O] unpretentious [C] restaurant general [S] great', '[A] it [S] great [O] unpretentious [C] restaurant general', '[O] unpretentious [A] it [C] restaurant general [S] great', '[O] unpretentious [A] it [S] great [C] restaurant general']

task, data: acos rest16
target: [('food quality', 'null', 'bad', 'null')]
output: ['[A] mouth [O] dry [S] bad [C] food quality']
sent: ['my', 'mouth', 'felt', 'very', 'dry', 'afterwards', 'and', 'i', 'had', 'that', 'signature', '?', 'msg', '?', 'taste', 'lingering', 'in', 'my', 'throat', 'after', 'i', 'left', 'the', 'restaurant', '.']
counter: {('food quality', 'mouth', 'bad', 'dry'): 5}
output quads: ['[A] mouth [O] dry [S] bad [C] food quality']
multi_path: ['[A] mouth [O] dry [S] bad [C] food quality', '[A] mouth [O] dry [C] food quality [S] bad', '[A] mouth [S] bad [O] dry [C] food quality', '[O] dry [A] mouth [C] food quality [S] bad', '[O] dry [A] mouth [S] bad [C] food quality']

task, data: acos rest16
target: [('restaurant prices', 'null', 'ok', 'alright'), ('service general', 'null', 'great', 'null')]
output: ['[A] dinner [O] null [S] great [C] food quality', '[A] null [O] alright [S] ok [C] restaurant prices']
sent: ['the', 'dinner', 'only', 'took', 'us', 'about', 'an', 'hour', 'and', 'the', 'prices', 'were', 'alright', 'for', 'the', 'strip', ',', 'almost', '$', '50', '/', 'pp', 'after', 'tax', 'and', 'tip', '(', 'about', 'average', ')', '.']
counter: {('food quality', 'dinner', 'great', 'null'): 5, ('restaurant prices', 'null', 'ok', 'alright'): 5}
output quads: ['[A] dinner [O] null [S] great [C] food quality', '[A] null [O] alright [S] ok [C] restaurant prices']
multi_path: ['[A] dinner [O] null [S] great [C] food quality [SSEP] [A] it [O] alright [S] ok [C] restaurant prices', '[A] dinner [O] null [C] food quality [S] great [SSEP] [A] it [O] alright [C] restaurant prices [S] ok', '[A] dinner [S] great [O] null [C] food quality [SSEP] [A] it [S] ok [O] alright [C] restaurant prices', '[O] null [A] dinner [C] food quality [S] great [SSEP] [O] alright [A] it [C] restaurant prices [S] ok', '[O] null [A] dinner [S] great [C] food quality [SSEP] [O] alright [A] it [S] ok [C] restaurant prices']

task, data: acos rest16
target: [('restaurant miscellaneous', 'null', 'ok', 'null')]
output: ['[A] null [O] urban - chic [S] great [C] ambience general']
sent: ['just', 'remember', 'to', 'dress', 'a', 'little', 'urban', '-', 'chic', 'so', 'you', 'don', '?', 't', 'look', 'too', 'far', 'out', 'of', 'place', '.']
counter: {('ambience general', 'null', 'great', 'urban - chic'): 5}
output quads: ['[A] null [O] urban - chic [S] great [C] ambience general']
multi_path: ['[A] it [O] urban - chic [S] great [C] ambience general', '[A] it [O] urban - chic [C] ambience general [S] great', '[A] it [S] great [O] urban - chic [C] ambience general', '[O] urban - chic [A] it [C] ambience general [S] great', '[O] urban - chic [A] it [S] great [C] ambience general']

task, data: acos rest16
target: [('restaurant prices', 'null', 'bad', 'overpriced')]
output: ['[A] null [O] overpriced [S] bad [C] food prices']
sent: ['overpriced']
counter: {('food prices', 'null', 'bad', 'overpriced'): 5}
output quads: ['[A] null [O] overpriced [S] bad [C] food prices']
multi_path: ['[A] it [O] overpriced [S] bad [C] food prices', '[A] it [O] overpriced [C] food prices [S] bad', '[A] it [S] bad [O] overpriced [C] food prices', '[O] overpriced [A] it [C] food prices [S] bad', '[O] overpriced [A] it [S] bad [C] food prices']

task, data: acos rest16
target: [('service general', 'null', 'ok', 'ok')]
output: ['[A] null [O] null [S] bad [C] service general']
sent: ['waited', '35', 'minutes', 'for', 'a', 'table', 'for', '8', 'which', 'was', 'ok', 'for', 'such', 'a', 'big', 'crowd', '.']
counter: {('service general', 'null', 'bad', 'null'): 3, ('service general', 'null', 'bad', 'ok'): 2}
output quads: ['[A] null [O] null [S] bad [C] service general']
multi_path: ['[A] it [O] null [S] bad [C] service general', '[A] it [O] null [C] service general [S] bad', '[A] it [S] bad [O] null [C] service general', '[O] ok [A] it [C] service general [S] bad', '[O] ok [A] it [S] bad [C] service general']

task, data: acos rest16
target: [('service general', 'null', 'ok', 'null')]
output: ['[A] null [O] busy [S] bad [C] service general']
sent: ['they', 'are', 'n', "'", 't', 'the', 'most', 'talkative', ',', 'but', 'everytime', 'i', "'", 've', 'been', 'there', 'they', 'have', 'been', 'very', 'busy', ',', 'which', 'probably', 'accounts', 'for', 'the', 'lack', 'of', 'conversation', '.']
counter: {('service general', 'null', 'bad', 'busy'): 5}
output quads: ['[A] null [O] busy [S] bad [C] service general']
multi_path: ['[A] it [O] busy [S] bad [C] service general', '[A] it [O] busy [C] service general [S] bad', '[A] it [S] bad [O] busy [C] service general', '[O] busy [A] it [C] service general [S] bad', '[O] busy [A] it [S] bad [C] service general']

task, data: acos rest16
target: [('restaurant miscellaneous', 'null', 'great', 'right')]
output: ['[A] menu [O] right [S] great [C] food style_options']
sent: ['it', "'", 's', 'just', 'the', 'right', 'size', 'for', 'the', 'menu', '.']
counter: {('food style_options', 'menu', 'great', 'right'): 5}
output quads: ['[A] menu [O] right [S] great [C] food style_options']
multi_path: ['[A] menu [O] right [S] great [C] food style_options', '[A] menu [O] right [C] food style_options [S] great', '[A] menu [S] great [O] right [C] food style_options', '[O] right [A] menu [C] food style_options [S] great', '[O] right [A] menu [S] great [C] food style_options']

task, data: acos rest16
target: [('food quality', 'null', 'great', 'null')]
output: ['[A] null [O] never feel icky [S] great [C] food quality', '[A] null [O] stuffed [S] great [C] food style_options']
sent: ['you', 'never', 'feel', 'icky', 'and', 'stuffed', 'after', 'you', 'eat', 'there', '.']
counter: {('food quality', 'null', 'great', 'never feel icky'): 5, ('food style_options', 'null', 'great', 'stuffed'): 5}
output quads: ['[A] null [O] never feel icky [S] great [C] food quality', '[A] null [O] stuffed [S] great [C] food style_options']
multi_path: ['[A] it [O] never feel icky [S] great [C] food quality [SSEP] [A] it [O] stuffed [S] great [C] food style_options', '[A] it [O] never feel icky [C] food quality [S] great [SSEP] [A] it [O] stuffed [C] food style_options [S] great', '[A] it [S] great [O] never feel icky [C] food quality [SSEP] [A] it [S] great [O] stuffed [C] food style_options', '[O] never feel icky [A] it [C] food quality [S] great [SSEP] [O] stuffed [A] it [C] food style_options [S] great', '[O] never feel icky [A] it [S] great [C] food quality [SSEP] [O] stuffed [A] it [S] great [C] food style_options']

task, data: acos rest16
target: [('restaurant general', 'null', 'great', 'worth')]
output: ['[A] null [O] worth [S] great [C] restaurant general', '[A] wait [O] worth [S] bad [C] service general']
sent: ['worth', 'the', 'wait']
counter: {('restaurant general', 'null', 'great', 'worth'): 5, ('service general', 'wait', 'bad', 'worth'): 5}
output quads: ['[A] null [O] worth [S] great [C] restaurant general', '[A] wait [O] worth [S] bad [C] service general']
multi_path: ['[A] it [O] worth [S] great [C] restaurant general [SSEP] [A] wait [O] worth [S] bad [C] service general', '[A] it [O] worth [C] restaurant general [S] great [SSEP] [A] wait [O] worth [C] service general [S] bad', '[A] it [S] great [O] worth [C] restaurant general [SSEP] [A] wait [S] bad [O] worth [C] service general', '[O] worth [A] it [C] restaurant general [S] great [SSEP] [O] worth [A] wait [C] service general [S] bad', '[O] worth [A] it [S] great [C] restaurant general [SSEP] [O] worth [A] wait [S] bad [C] service general']

task, data: acos rest16
target: [('restaurant general', 'null', 'great', 'worth'), ('restaurant miscellaneous', 'null', 'bad', 'null')]
output: ['[A] null [O] worth [S] great [C] restaurant general']
sent: ['–', 'had', 'to', 'wait', 'thirty', 'minutes', 'to', 'get', 'in', 'the', 'door', 'on', 'a', 'tuesday', 'morning', ',', 'but', 'it', 'was', 'so', 'worth', 'it', '.']
counter: {('restaurant general', 'null', 'great', 'worth'): 5}
output quads: ['[A] null [O] worth [S] great [C] restaurant general']
multi_path: ['[A] it [O] worth [S] great [C] restaurant general', '[A] it [O] worth [C] restaurant general [S] great', '[A] it [S] great [O] worth [C] restaurant general', '[O] worth [A] it [C] restaurant general [S] great', '[O] worth [A] it [S] great [C] restaurant general']

task, data: acos rest16
target: [('food quality', 'breakfast', 'great', 'enjoy'), ('restaurant general', 'null', 'great', 'null')]
output: ['[A] null [O] enjoy [S] great [C] restaurant miscellaneous']
sent: ['go', 'with', 'some', 'friends', ',', 'wait', 'the', 'half', 'hour', 'or', 'so', 'with', 'a', 'cup', 'of', 'joe', ',', 'and', 'enjoy', 'more', 'than', 'your', 'average', 'breakfast', '.']
counter: {('restaurant miscellaneous', 'null', 'great', 'enjoy'): 5}
output quads: ['[A] null [O] enjoy [S] great [C] restaurant miscellaneous']
multi_path: ['[A] it [O] enjoy [S] great [C] restaurant miscellaneous', '[A] it [O] enjoy [C] restaurant miscellaneous [S] great', '[A] it [S] great [O] enjoy [C] restaurant miscellaneous', '[O] enjoy [A] it [C] restaurant miscellaneous [S] great', '[O] enjoy [A] it [S] great [C] restaurant miscellaneous']

task, data: acos rest16
target: [('restaurant general', 'place', 'bad', 'null')]
output: ['[A] place [O] great [S] bad [C] restaurant general']
sent: ['i', 'do', 'n', "'", 't', 'know', 'why', 'anyone', 'would', 'want', 'to', 'write', 'a', 'great', 'review', 'about', 'this', 'place', '.']
counter: {('restaurant general', 'place', 'bad', 'great'): 5}
output quads: ['[A] place [O] great [S] bad [C] restaurant general']
multi_path: ['[A] place [O] great [S] bad [C] restaurant general', '[A] place [O] great [C] restaurant general [S] bad', '[A] place [S] bad [O] great [C] restaurant general', '[O] great [A] place [C] restaurant general [S] bad', '[O] great [A] place [S] bad [C] restaurant general']

task, data: acos rest16
target: [('restaurant general', 'null', 'great', 'worth')]
output: ['[A] null [O] worth [S] great [C] restaurant general', '[A] wait [O] worth [S] bad [C] service general']
sent: ['it', 'was', 'worth', 'the', 'wait', '.']
counter: {('restaurant general', 'null', 'great', 'worth'): 5, ('service general', 'wait', 'bad', 'worth'): 5}
output quads: ['[A] null [O] worth [S] great [C] restaurant general', '[A] wait [O] worth [S] bad [C] service general']
multi_path: ['[A] it [O] worth [S] great [C] restaurant general [SSEP] [A] wait [O] worth [S] bad [C] service general', '[A] it [O] worth [C] restaurant general [S] great [SSEP] [A] wait [O] worth [C] service general [S] bad', '[A] it [S] great [O] worth [C] restaurant general [SSEP] [A] wait [S] bad [O] worth [C] service general', '[O] worth [A] it [C] restaurant general [S] great [SSEP] [O] worth [A] wait [C] service general [S] bad', '[O] worth [A] it [S] great [C] restaurant general [SSEP] [O] worth [A] wait [S] bad [C] service general']

task, data: acos rest16
target: [('service general', 'null', 'ok', 'null')]
output: ['[A] null [O] null [S] bad [C] service general']
sent: ['plan', 'on', 'waiting', '30', '-', '70', 'minutes', '.']
counter: {('service general', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [O] null [S] bad [C] service general']
multi_path: ['[A] it [O] null [S] bad [C] service general', '[A] it [O] null [C] service general [S] bad', '[A] it [S] bad [O] null [C] service general', '[O] null [A] it [C] service general [S] bad', '[O] null [A] it [S] bad [C] service general']

task, data: acos rest16
target: [('restaurant general', 'null', 'bad', 'null')]
output: ['[A] null [O] null [S] great [C] restaurant general']
sent: ['maybe', 'i', "'", 'll', 'go', 'back', 'once', 'more', 'many', 'years', 'from', 'now', 'when', 'i', "'", 've', 'forgotten', 'i', 'went', 'there', 'already', '.']
counter: {('restaurant general', 'null', 'great', 'null'): 5}
output quads: ['[A] null [O] null [S] great [C] restaurant general']
multi_path: ['[A] it [O] null [S] great [C] restaurant general', '[A] it [O] null [C] restaurant general [S] great', '[A] it [S] great [O] null [C] restaurant general', '[O] null [A] it [C] restaurant general [S] great', '[O] null [A] it [S] great [C] restaurant general']

task, data: acos rest16
target: [('ambience general', 'balcony', 'ok', 'null')]
output: ['[A] balcony [O] null [S] great [C] ambience general']
sent: ['sit', 'in', 'the', 'balcony']
counter: {('ambience general', 'balcony', 'great', 'null'): 5}
output quads: ['[A] balcony [O] null [S] great [C] ambience general']
multi_path: ['[A] balcony [O] null [S] great [C] ambience general', '[A] balcony [O] null [C] ambience general [S] great', '[A] balcony [S] great [O] null [C] ambience general', '[O] null [A] balcony [C] ambience general [S] great', '[O] null [A] balcony [S] great [C] ambience general']

task, data: acos rest16
target: [('restaurant prices', 'null', 'bad', 'null'), ('service general', 'service', 'bad', 'null')]
output: ['[A] service [O] improved [S] bad [C] service general']
sent: ['although', 'the', 'service', 'could', 'be', 'improved', 'considering', 'the', 'money', 'you', 'put', 'in', '.']
counter: {('service general', 'service', 'bad', 'improved'): 5}
output quads: ['[A] service [O] improved [S] bad [C] service general']
multi_path: ['[A] service [O] improved [S] bad [C] service general', '[A] service [O] improved [C] service general [S] bad', '[A] service [S] bad [O] improved [C] service general', '[O] improved [A] service [C] service general [S] bad', '[O] improved [A] service [S] bad [C] service general']

task, data: acos rest16
target: [('service general', 'null', 'great', 'null'), ('service general', 'server', 'bad', 'null')]
output: ['[A] drinks [O] null [S] bad [C] drinks quality', '[A] server [O] null [S] bad [C] service general']
sent: ['our', 'drinks', 'kept', 'coming', 'but', 'our', 'server', 'came', 'by', 'a', 'couple', 'times', '.']
counter: {('drinks quality', 'drinks', 'bad', 'null'): 5, ('service general', 'server', 'bad', 'null'): 5}
output quads: ['[A] drinks [O] null [S] bad [C] drinks quality', '[A] server [O] null [S] bad [C] service general']
multi_path: ['[A] drinks [O] null [S] bad [C] drinks quality [SSEP] [A] server [O] null [S] bad [C] service general', '[A] drinks [O] null [C] drinks quality [S] bad [SSEP] [A] server [O] null [C] service general [S] bad', '[A] drinks [S] bad [O] null [C] drinks quality [SSEP] [A] server [S] bad [O] null [C] service general', '[O] null [A] drinks [C] drinks quality [S] bad [SSEP] [O] null [A] server [C] service general [S] bad', '[O] null [A] drinks [S] bad [C] drinks quality [SSEP] [O] null [A] server [S] bad [C] service general']

task, data: acos rest16
target: [('service general', 'null', 'bad', 'null')]
output: ['[A] null [O] null [S] bad [C] restaurant general']
sent: ['should', 'check', '-', 'up', 'on', 'us', 'more', 'frequently', ',', 'do', 'n', "'", 't', 'you', 'think', '?']
counter: {('restaurant general', 'null', 'bad', 'null'): 5}
output quads: ['[A] null [O] null [S] bad [C] restaurant general']
multi_path: ['[A] it [O] null [S] bad [C] restaurant general', '[A] it [O] null [C] restaurant general [S] bad', '[A] it [S] bad [O] null [C] restaurant general', '[O] null [A] it [C] restaurant general [S] bad', '[O] null [A] it [S] bad [C] restaurant general']

task, data: acos rest16
target: [('restaurant prices', 'null', 'great', 'pleasant')]
output: ['[A] check [O] pleasant [S] great [C] service general']
sent: ['the', 'most', 'pleasant', 'surprise', 'was', 'the', 'check', 'that', 'did', 'not', 'exceed', 'my', 'expectations', 'as', 'it', 'always', 'happens', 'in', 'most', 'of', 'the', 'places', '.']
counter: {('service general', 'check', 'great', 'pleasant'): 5}
output quads: ['[A] check [O] pleasant [S] great [C] service general']
multi_path: ['[A] check [O] pleasant [S] great [C] service general', '[A] check [O] pleasant [C] service general [S] great', '[A] check [S] great [O] pleasant [C] service general', '[O] pleasant [A] check [C] service general [S] great', '[O] pleasant [A] check [S] great [C] service general']

task, data: acos rest16
target: [('restaurant prices', 'null', 'bad', 'overpriced')]
output: ['[A] null [O] insultingly [S] bad [C] food prices']
sent: ['insultingly', 'overpriced']
counter: {('food prices', 'null', 'bad', 'insultingly'): 3, ('food quality', 'null', 'bad', 'overpriced'): 2, ('food quality', 'null', 'bad', 'insultingly'): 1, ('food prices', 'null', 'bad', 'insultingly overpriced'): 2}
output quads: ['[A] null [O] insultingly [S] bad [C] food prices']
multi_path: ['[A] it [O] insultingly [S] bad [C] food prices [SSEP] [A] it [O] overpriced [S] bad [C] food quality', '[A] it [O] insultingly [C] food prices [S] bad [SSEP] [A] it [O] insultingly [C] food quality [S] bad', '[A] it [S] bad [O] insultingly [C] food prices [SSEP] [A] it [S] bad [O] overpriced [C] food quality', '[O] insultingly overpriced [A] it [C] food prices [S] bad', '[O] insultingly overpriced [A] it [S] bad [C] food prices']

task, data: acos rest16
target: [('service general', 'service', 'ok', 'mediocre')]
output: ['[A] quality [O] mediocre [S] bad [C] service general', '[A] service [O] mediocre [S] ok [C] service general']
sent: ['-', 'mediocre', 'service', '/', 'quality']
counter: {('service general', 'service', 'ok', 'mediocre'): 5, ('service general', 'quality', 'bad', 'mediocre'): 4, ('restaurant quality', 'null', 'bad', 'mediocre'): 1}
output quads: ['[A] service [O] mediocre [S] ok [C] service general', '[A] quality [O] mediocre [S] bad [C] service general']
multi_path: ['[A] service [O] mediocre [S] ok [C] service general [SSEP] [A] quality [O] mediocre [S] bad [C] service general', '[A] service [O] mediocre [C] service general [S] ok [SSEP] [A] it [O] mediocre [C] restaurant quality [S] bad', '[A] service [S] ok [O] mediocre [C] service general [SSEP] [A] quality [S] bad [O] mediocre [C] service general', '[O] mediocre [A] service [C] service general [S] ok [SSEP] [O] mediocre [A] quality [C] service general [S] bad', '[O] mediocre [A] service [S] ok [C] service general [SSEP] [O] mediocre [A] quality [S] bad [C] service general']

task, data: acos rest16
target: [('service general', 'manager', 'bad', 'null'), ('service general', 'null', 'great', 'to their credit')]
output: ['[A] manager [O] null [S] bad [C] service general']
sent: ['to', 'their', 'credit', 'they', 'removed', 'the', 'dish', 'from', 'the', 'check', ';', 'but', 'no', 'manager', 'stopped', 'by', 'to', 'ask', 'what', 'the', 'problem', 'was', '.']
counter: {('service general', 'manager', 'bad', 'null'): 5}
output quads: ['[A] manager [O] null [S] bad [C] service general']
multi_path: ['[A] manager [O] null [S] bad [C] service general', '[A] manager [O] null [C] service general [S] bad', '[A] manager [S] bad [O] null [C] service general', '[O] null [A] manager [C] service general [S] bad', '[O] null [A] manager [S] bad [C] service general']

task, data: acos rest16
target: [('restaurant miscellaneous', 'null', 'bad', 'null')]
output: ['[A] preteen [O] delightful [S] bad [C] service general']
sent: ['two', 'rascally', 'kids', 'were', 'seated', 'near', 'us', 'for', 'the', 'first', 'part', 'of', 'our', 'dinner', '.', '.', '.', 'they', 'were', 'replaced', 'by', 'a', 'delightful', 'preteen', 'who', 'pretended', 'to', 'gag', 'every', 'time', 'seafood', 'was', 'mentioned', 'at', 'her', 'table', '.']
counter: {('service general', 'preteen', 'bad', 'delightful'): 5}
output quads: ['[A] preteen [O] delightful [S] bad [C] service general']
multi_path: ['[A] preteen [O] delightful [S] bad [C] service general', '[A] preteen [O] delightful [C] service general [S] bad', '[A] preteen [S] bad [O] delightful [C] service general', '[O] delightful [A] preteen [C] service general [S] bad', '[O] delightful [A] preteen [S] bad [C] service general']

task, data: acos rest16
target: [('restaurant general', "ray's boathouse", 'great', 'null')]
output: ["[A] ray's boathouse [O] deserving [S] great [C] restaurant general"]
sent: ['all', 'considered', ',', 'i', 'have', 'to', 'say', 'that', 'ray', "'", 's', 'boathouse', 'is', 'deserving', 'of', 'its', 'title', 'as', 'a', 'seattle', 'institution', '.']
counter: {('restaurant general', "ray's boathouse", 'great', 'deserving'): 5}
output quads: ["[A] ray's boathouse [O] deserving [S] great [C] restaurant general"]
multi_path: ["[A] ray's boathouse [O] deserving [S] great [C] restaurant general", "[A] ray's boathouse [O] deserving [C] restaurant general [S] great", "[A] ray's boathouse [S] great [O] deserving [C] restaurant general", "[O] deserving [A] ray's boathouse [C] restaurant general [S] great", "[O] deserving [A] ray's boathouse [S] great [C] restaurant general"]

pred labels count Counter({1: 369, 2: 140, 3: 54, 4: 13, 5: 5, 6: 2})
gold  [A] it [O] yum [S] great [C] food quality
pred  [A] null [O] null [S] great [C] food quality

gold  [A] sushi [O] good [S] great [C] food quality
pred  [A] sushi [O] good [S] great [C] food quality

gold  [A] portions [O] not the biggest [S] ok [C] food style_options [SSEP] [A] portions [O] adequate [S] ok [C] food style_options
pred  [A] portions [O] not the biggest [S] bad [C] food style_options [SSEP] [A] portions [O] adequate [S] great [C] food style_options

gold  [A] green tea creme brulee [O] must [S] great [C] food quality
pred  [A] green tea creme brulee [O] must [S] great [C] food quality

gold  [A] sushi [O] great [S] great [C] food quality [SSEP] [A] service [O] better [S] great [C] service general
pred  [A] sushi [O] great [S] great [C] food quality [SSEP] [A] service [O] better [S] great [C] service general

gold  [A] staff [O] accomodating [S] great [C] service general
pred  [A] staff [O] accomodating [S] great [C] service general

gold  [A] restaurant [O] no complaints [S] great [C] restaurant general
pred  [A] restaurant [O] null [S] great [C] restaurant general

gold  [A] owner [O] belligerent [S] bad [C] service general
pred  [A] owner [O] belligerent [S] bad [C] service general

gold  [A] food [O] good [S] great [C] food quality
pred  [A] food [O] good [S] great [C] food quality

gold  [A] place [O] great [S] great [C] restaurant general [SSEP] [A] meal [O] delicious [S] great [C] food quality
pred  [A] meal [O] great [S] great [C] food quality [SSEP] [A] meal [O] delicious [S] great [C] food quality

number of gold spans: 916, predicted spans: 900, hit: 550
acos rest16 {'precision': 61.111111111111114, 'recall': 60.043668122270745, 'f1': 60.57268722466961}
Total examples = 537
Total examples = 537
Ori sent size: 537
Input size: 2685 2685
Examples:
[['asqp', ':', 'rest15', ':', 'gross', 'food', '–', 'wow', '-', '[A]', '[O]', '[S]', '[C]'], ['asqp', ':', 'rest15', ':', 'gross', 'food', '–', 'wow', '-', '[O]', '[A]', '[C]', '[S]'], ['asqp', ':', 'rest15', ':', 'gross', 'food', '–', 'wow', '-', '[A]', '[O]', '[C]', '[S]'], ['asqp', ':', 'rest15', ':', 'gross', 'food', '–', 'wow', '-', '[O]', '[A]', '[S]', '[C]'], ['asqp', ':', 'rest15', ':', 'gross', 'food', '–', 'wow', '-', '[O]', '[S]', '[C]', '[A]'], ['asqp', ':', 'rest15', ':', 'its', 'alright', '[A]', '[O]', '[S]', '[C]'], ['asqp', ':', 'rest15', ':', 'its', 'alright', '[O]', '[A]', '[C]', '[S]'], ['asqp', ':', 'rest15', ':', 'its', 'alright', '[A]', '[O]', '[C]', '[S]'], ['asqp', ':', 'rest15', ':', 'its', 'alright', '[O]', '[A]', '[S]', '[C]'], ['asqp', ':', 'rest15', ':', 'its', 'alright', '[O]', '[S]', '[C]', '[A]']]
['[A] food [O] gross [S] bad [C] food quality', '[O] gross [A] food [C] food quality [S] bad', '[A] food [O] gross [C] food quality [S] bad', '[O] gross [A] food [S] bad [C] food quality', '[O] gross [S] bad [C] food quality [A] food', '[A] it [O] alright [S] ok [C] restaurant general', '[O] alright [A] it [C] restaurant general [S] ok', '[A] it [O] alright [C] restaurant general [S] ok', '[O] alright [A] it [S] ok [C] restaurant general', '[O] alright [S] ok [C] restaurant general [A] it']
task, data: asqp rest15
target: [('ambience general', 'decor', 'ok', 'distraction'), ('food prices', 'eggplant', 'bad', '300 bucks'), ('food quality', 'eggplant', 'bad', 'cold'), ('service general', 'null', 'bad', '2 frickin hours')]
output: ['[A] decor [O] distraction [S] bad [C] ambience general', '[A] eggplant [O] cold [S] bad [C] food quality']
sent: ['The', 'decor', 'however', 'seems', 'to', 'be', 'the', 'distraction', 'so', 'you', 'wo', "n't", 'notice', 'that', 'you', 'just', 'payed', '300', 'bucks', 'for', 'some', 'cold', 'eggplant', 'that', 'took', '2', 'FRICKIN', 'HOURS', 'TO', 'COME', '!', '!', '!', '!']
counter: {('ambience general', 'decor', 'bad', 'distraction'): 5, ('food quality', 'cold eggplant', 'bad', 'cold'): 2, ('food quality', 'eggplant', 'bad', 'cold'): 3}
output quads: ['[A] decor [O] distraction [S] bad [C] ambience general', '[A] eggplant [O] cold [S] bad [C] food quality']
multi_path: ['[A] decor [O] distraction [S] bad [C] ambience general [SSEP] [A] cold eggplant [O] cold [S] bad [C] food quality', '[O] distraction [A] decor [C] ambience general [S] bad [SSEP] [O] cold [A] eggplant [C] food quality [S] bad', '[A] decor [O] distraction [C] ambience general [S] bad [SSEP] [A] cold eggplant [O] cold [C] food quality [S] bad', '[O] distraction [A] decor [S] bad [C] ambience general [SSEP] [O] cold [A] eggplant [S] bad [C] food quality', '[O] distraction [S] bad [C] ambience general [A] decor [SSEP] [O] cold [S] bad [C] food quality [A] eggplant']

task, data: asqp rest15
target: [('food quality', 'bun', 'great', 'perfect'), ('food quality', 'hot dogs', 'great', 'good'), ('food quality', 'pork croquette sandwich', 'great', 'fantastic')]
output: ['[A] hot dogs [O] good [S] great [C] food quality', '[A] pork croquette sandwich [O] fantastic [S] great [C] food quality', '[A] pork croquette sandwich [O] perfect [S] great [C] food quality']
sent: ['The', 'hot', 'dogs', 'are', 'good', ',', 'yes', ',', 'but', 'the', 'reason', 'to', 'get', 'over', 'here', 'is', 'the', 'fantastic', 'pork', 'croquette', 'sandwich', ',', 'perfect', 'on', 'its', 'supermarket', 'squishy', 'bun', '.']
counter: {('food quality', 'hot dogs', 'great', 'good'): 5, ('food quality', 'pork croquette sandwich', 'great', 'fantastic'): 5, ('food quality', 'pork croquette sandwich', 'great', 'perfect'): 5}
output quads: ['[A] hot dogs [O] good [S] great [C] food quality', '[A] pork croquette sandwich [O] fantastic [S] great [C] food quality', '[A] pork croquette sandwich [O] perfect [S] great [C] food quality']
multi_path: ['[A] hot dogs [O] good [S] great [C] food quality [SSEP] [A] pork croquette sandwich [O] fantastic [S] great [C] food quality [SSEP] [A] pork croquette sandwich [O] perfect [S] great [C] food quality', '[O] good [A] hot dogs [C] food quality [S] great [SSEP] [O] fantastic [A] pork croquette sandwich [C] food quality [S] great [SSEP] [O] perfect [A] pork croquette sandwich [C] food quality [S] great', '[A] hot dogs [O] good [C] food quality [S] great [SSEP] [A] pork croquette sandwich [O] fantastic [C] food quality [S] great [SSEP] [A] pork croquette sandwich [O] perfect [C] food quality [S] great', '[O] good [A] hot dogs [S] great [C] food quality [SSEP] [O] fantastic [A] pork croquette sandwich [S] great [C] food quality [SSEP] [O] perfect [A] pork croquette sandwich [S] great [C] food quality', '[O] good [S] great [C] food quality [A] hot dogs [SSEP] [O] fantastic [S] great [C] food quality [A] pork croquette sandwich [SSEP] [O] perfect [S] great [C] food quality [A] pork croquette sandwich']

task, data: asqp rest15
target: [('restaurant general', 'null', 'great', 'great'), ('restaurant prices', 'null', 'great', 'fair')]
output: ['[A] null [O] fair [S] ok [C] restaurant prices', '[A] null [O] great time [S] great [C] restaurant general']
sent: ['In', 'the', 'end', 'you', 'end', 'up', 'with', 'a', 'fair', 'tab', 'and', 'NOTHING', 'BUT', 'A', 'GREAT', 'TIME', '!', '!', '!']
counter: {('restaurant prices', 'null', 'great', 'fair'): 1, ('restaurant general', 'null', 'great', 'great time'): 5, ('restaurant prices', 'null', 'ok', 'fair'): 4}
output quads: ['[A] null [O] great time [S] great [C] restaurant general', '[A] null [O] fair [S] ok [C] restaurant prices']
multi_path: ['[A] it [O] fair [S] great [C] restaurant prices [SSEP] [A] it [O] great time [S] great [C] restaurant general', '[O] fair [A] it [C] restaurant prices [S] ok [SSEP] [O] great time [A] it [C] restaurant general [S] great', '[A] it [O] fair [C] restaurant prices [S] ok [SSEP] [A] it [O] great time [C] restaurant general [S] great', '[O] fair [A] it [S] ok [C] restaurant prices [SSEP] [O] great time [A] it [S] great [C] restaurant general', '[O] fair [S] ok [C] restaurant prices [A] it [SSEP] [O] great time [S] great [C] restaurant general [A] it']

task, data: asqp rest15
target: [('service general', 'null', 'bad', 'nearly an hour')]
output: ['[A] appetizers [O] nearly an hour [S] bad [C] food style_options']
sent: ['Appetizers', 'took', 'nearly', 'an', 'hour', '.']
counter: {('food style_options', 'appetizers', 'bad', 'nearly an hour'): 5}
output quads: ['[A] appetizers [O] nearly an hour [S] bad [C] food style_options']
multi_path: ['[A] appetizers [O] nearly an hour [S] bad [C] food style_options', '[O] nearly an hour [A] appetizers [C] food style_options [S] bad', '[A] appetizers [O] nearly an hour [C] food style_options [S] bad', '[O] nearly an hour [A] appetizers [S] bad [C] food style_options', '[O] nearly an hour [S] bad [C] food style_options [A] appetizers']

task, data: asqp rest15
target: [('restaurant miscellaneous', 'casa la femme', 'great', 'recommend')]
output: ['[A] casa la femme [O] impress [S] great [C] restaurant miscellaneous', '[A] casa la femme [O] recommend [S] great [C] restaurant miscellaneous']
sent: ['I', 'completely', 'recommend', 'Casa', 'La', 'Femme', 'for', 'any', 'special', 'occasion', 'and', 'to', 'REALLY', 'impress', 'your', 'date', '.']
counter: {('restaurant miscellaneous', 'casa la femme', 'great', 'recommend'): 5, ('restaurant miscellaneous', 'casa la femme', 'great', 'impress'): 4}
output quads: ['[A] casa la femme [O] recommend [S] great [C] restaurant miscellaneous', '[A] casa la femme [O] impress [S] great [C] restaurant miscellaneous']
multi_path: ['[A] casa la femme [O] recommend [S] great [C] restaurant miscellaneous [SSEP] [A] casa la femme [O] impress [S] great [C] restaurant miscellaneous', '[O] recommend [A] casa la femme [C] restaurant miscellaneous [S] great [SSEP] [O] impress [A] casa la femme [C] restaurant miscellaneous [S] great', '[A] casa la femme [O] recommend [C] restaurant miscellaneous [S] great [SSEP] [A] casa la femme [O] impress [C] restaurant miscellaneous [S] great', '[O] recommend [A] casa la femme [S] great [C] restaurant miscellaneous [SSEP] [O] impress [A] casa la femme [S] great [C] restaurant miscellaneous', '[O] recommend [S] great [C] restaurant miscellaneous [A] casa la femme']

task, data: asqp rest15
target: [('service general', 'null', 'great', 'good')]
output: ['[A] null [O] good [S] great [C] restaurant general']
sent: ['Which', 'lets', 'face', 'it', '...', '.at', 'times', 'it', "'s", 'a', 'good', 'thing', '.']
counter: {('restaurant general', 'null', 'great', 'good'): 5}
output quads: ['[A] null [O] good [S] great [C] restaurant general']
multi_path: ['[A] it [O] good [S] great [C] restaurant general', '[O] good [A] it [C] restaurant general [S] great', '[A] it [O] good [C] restaurant general [S] great', '[O] good [A] it [S] great [C] restaurant general', '[O] good [S] great [C] restaurant general [A] it']

task, data: asqp rest15
target: [('ambience general', 'restaurant', 'great', 'inviting')]
output: ['[A] restaurant [O] inviting [S] great [C] restaurant general', '[A] restaurant [O] warm [S] great [C] ambience general']
sent: ['I', 'was', 'visiting', 'New', 'York', 'City', 'with', 'a', 'friend', 'and', 'we', 'discovered', 'this', 'really', 'warm', 'and', 'inviting', 'restaurant', '.']
counter: {('ambience general', 'restaurant', 'great', 'warm'): 5, ('restaurant general', 'restaurant', 'great', 'inviting'): 5}
output quads: ['[A] restaurant [O] warm [S] great [C] ambience general', '[A] restaurant [O] inviting [S] great [C] restaurant general']
multi_path: ['[A] restaurant [O] warm [S] great [C] ambience general [SSEP] [A] restaurant [O] inviting [S] great [C] restaurant general', '[O] warm [A] restaurant [C] ambience general [S] great [SSEP] [O] inviting [A] restaurant [C] restaurant general [S] great', '[A] restaurant [O] warm [C] ambience general [S] great [SSEP] [A] restaurant [O] inviting [C] restaurant general [S] great', '[O] warm [A] restaurant [S] great [C] ambience general [SSEP] [O] inviting [A] restaurant [S] great [C] restaurant general', '[O] warm [S] great [C] ambience general [A] restaurant [SSEP] [O] inviting [S] great [C] restaurant general [A] restaurant']

task, data: asqp rest15
target: [('service general', 'null', 'great', 'get a table without a reservation')]
output: ['[A] null [O] get there early [S] great [C] service general']
sent: ['You', 'can', 'get', 'a', 'table', 'without', 'a', 'reservation', 'if', 'you', 'get', 'there', 'early', 'I', 'they', 'do', "n't", 'make', 'you', 'by', 'bottles', '.']
counter: {('service general', 'null', 'great', 'get there early'): 5}
output quads: ['[A] null [O] get there early [S] great [C] service general']
multi_path: ['[A] it [O] get there early [S] great [C] service general', '[O] get there early [A] it [C] service general [S] great', '[A] it [O] get there early [C] service general [S] great', '[O] get there early [A] it [S] great [C] service general', '[O] get there early [S] great [C] service general [A] it']

task, data: asqp rest15
target: [('food quality', 'quesadilla', 'bad', 'no sense of proportion or flavor'), ('food style_options', 'quesadilla', 'bad', 'no sense of proportion')]
output: ['[A] quesadilla [O] no sense of proportion or flavor [S] bad [C] food quality']
sent: ['My', 'quesadilla', 'tasted', 'like', 'it', 'had', 'been', 'made', 'by', 'a', 'three-year', 'old', 'with', 'no', 'sense', 'of', 'proportion', 'or', 'flavor', '.']
counter: {('food quality', 'quesadilla', 'bad', 'no sense of proportion or flavor'): 5}
output quads: ['[A] quesadilla [O] no sense of proportion or flavor [S] bad [C] food quality']
multi_path: ['[A] quesadilla [O] no sense of proportion or flavor [S] bad [C] food quality', '[O] no sense of proportion or flavor [A] quesadilla [C] food quality [S] bad', '[A] quesadilla [O] no sense of proportion or flavor [C] food quality [S] bad', '[O] no sense of proportion or flavor [A] quesadilla [S] bad [C] food quality', '[O] no sense of proportion or flavor [S] bad [C] food quality [A] quesadilla']

task, data: asqp rest15
target: [('restaurant miscellaneous', 'the four seasons', 'ok', 'a sort of landmark'), ('restaurant prices', 'the four seasons', 'bad', 'charge you through the nose')]
output: ['[A] null [O] charge you through the nose [S] great [C] service general']
sent: ['The', 'Four', 'Seasons', 'has', 'history', 'and', 'it', 'is', 'a', 'sort', 'of', 'landmark', 'of', 'New', 'York', 'City', 'restaurants', ',', 'but', 'trust', 'me', ',', 'they', 'will', 'charge', 'you', 'through', 'the', 'nose', 'just', 'so', 'that', 'you', 'can', 'say', '``', 'I', "'ve", 'been', 'to', 'the', 'four', 'seasons', 'restaurant', '``', '.']
counter: {('restaurant general', 'four seasons restaurant', 'great', 'landmark'): 2, ('service general', 'null', 'great', 'charge you through the nose'): 3}
output quads: ['[A] null [O] charge you through the nose [S] great [C] service general']
multi_path: ['[A] four seasons restaurant [O] landmark [S] great [C] restaurant general', '[O] charge you through the nose [A] it [C] service general [S] great', '[A] four seasons restaurant [O] landmark [C] restaurant general [S] great', '[O] charge you through the nose [A] it [S] great [C] service general', '[O] charge you through the nose [S] great [C] service general [A] it']

task, data: asqp rest15
target: [('ambience general', 'belly dancers', 'great', 'talented'), ('food quality', 'baba ganoush', 'great', 'enjoy delicious')]
output: ['[A] baba ganoush [O] enjoy [S] great [C] food quality', '[A] baba ganoush [O] lemony than smoky [S] great [C] food quality', '[A] belly dancers [O] talented [S] great [C] ambience general']
sent: ['Watch', 'the', 'talented', 'belly', 'dancers', 'as', 'you', 'enjoy', 'delicious', 'baba', 'ganoush', 'that', "'s", 'more', 'lemony', 'than', 'smoky', '.']
counter: {('ambience general', 'belly dancers', 'great', 'talented'): 5, ('food quality', 'baba ganoush', 'great', 'enjoy'): 3, ('food quality', 'baba ganoush', 'great', 'lemony than smoky'): 3, ('food quality', 'baba ganoush', 'great', 'enjoy delicious'): 2}
output quads: ['[A] belly dancers [O] talented [S] great [C] ambience general', '[A] baba ganoush [O] enjoy [S] great [C] food quality', '[A] baba ganoush [O] lemony than smoky [S] great [C] food quality']
multi_path: ['[A] belly dancers [O] talented [S] great [C] ambience general [SSEP] [A] baba ganoush [O] enjoy [S] great [C] food quality [SSEP] [A] baba ganoush [O] lemony than smoky [S] great [C] food quality', '[O] talented [A] belly dancers [C] ambience general [S] great [SSEP] [O] enjoy delicious [A] baba ganoush [C] food quality [S] great', '[A] belly dancers [O] talented [C] ambience general [S] great [SSEP] [A] baba ganoush [O] enjoy [C] food quality [S] great [SSEP] [A] baba ganoush [O] lemony than smoky [C] food quality [S] great', '[O] talented [A] belly dancers [S] great [C] ambience general [SSEP] [O] enjoy [A] baba ganoush [S] great [C] food quality [SSEP] [O] lemony than smoky [A] baba ganoush [S] great [C] food quality', '[O] talented [S] great [C] ambience general [A] belly dancers [SSEP] [O] enjoy delicious [S] great [C] food quality [A] baba ganoush']

task, data: asqp rest15
target: [('restaurant miscellaneous', 'bfc', 'bad', 'wait'), ('service general', 'front of house staff', 'bad', 'abused'), ('service general', 'null', 'bad', 'over an hour later')]
output: ['[A] front of house staff [O] abused [S] bad [C] service general']
sent: ['As', 'BFC', 'does', "n't", 'take', 'reservations', 'you', 'almost', 'always', 'have', 'to', 'wait', 'by', 'the', 'bar', '-', 'and', 'be', 'abused', 'by', 'the', 'front', 'of', 'house', 'staff', 'until', 'you', 'are', 'seated', ',', 'which', 'can', 'be', 'over', 'an', 'hour', 'later', '!']
counter: {('service general', 'front of house staff', 'bad', 'abused'): 5}
output quads: ['[A] front of house staff [O] abused [S] bad [C] service general']
multi_path: ['[A] front of house staff [O] abused [S] bad [C] service general', '[O] abused [A] front of house staff [C] service general [S] bad', '[A] front of house staff [O] abused [C] service general [S] bad', '[O] abused [A] front of house staff [S] bad [C] service general', '[O] abused [S] bad [C] service general [A] front of house staff']

task, data: asqp rest15
target: [('food quality', 'food', 'great', 'enjoy'), ('service general', 'service', 'great', 'enjoy')]
output: ['[A] noodle pudding [O] enjoy [S] great [C] food quality']
sent: ['Noodle', 'pudding', 'is', 'exactly', 'the', 'type', 'of', 'service', 'and', 'food', 'I', 'enjoy', '.']
counter: {('food quality', 'noodle pudding', 'great', 'enjoy'): 4, ('service general', 'noodle pudding', 'great', 'enjoy'): 1, ('food quality', 'food', 'great', 'enjoy'): 1}
output quads: ['[A] noodle pudding [O] enjoy [S] great [C] food quality']
multi_path: ['[A] noodle pudding [O] enjoy [S] great [C] food quality', '[O] enjoy [A] noodle pudding [C] food quality [S] great', '[A] noodle pudding [O] enjoy [C] food quality [S] great', '[O] enjoy [A] noodle pudding [S] great [C] food quality', '[O] enjoy [S] great [C] service general [A] noodle pudding [SSEP] [O] enjoy [S] great [C] food quality [A] food']

task, data: asqp rest15
target: [('food quality', 'frozen black sesame mousse', 'ok', 'interesting'), ('food quality', 'frozen black sesame mousse', 'ok', 'not extraordinary'), ('food quality', 'matcha ( powdered green tea ) and blueberry cheesecake', 'great', 'phenomenal')]
output: ['[A] blueberry cheesecake [O] phenomenal [S] great [C] food quality', '[A] frozen black sesame mousse [O] interesting [S] great [C] food quality', '[A] frozen black sesame mousse [O] tried [S] great [C] food quality', '[A] matcha ( powdered green tea ) [O] phenomenal [S] great [C] food quality']
sent: ['For', 'desserts', ',', 'we', 'tried', 'the', 'frozen', 'black', 'sesame', 'mousse', '(', 'interesting', 'but', 'not', 'extraordinary', ')', 'and', 'matcha', '(', 'powdered', 'green', 'tea', ')', 'and', 'blueberry', 'cheesecake', ',', 'which', 'was', 'phenomenal', '.']
counter: {('food quality', 'frozen black sesame mousse', 'great', 'tried'): 5, ('food quality', 'frozen black sesame mousse', 'great', 'interesting'): 5, ('food quality', 'matcha ( powdered green tea )', 'great', 'phenomenal'): 5, ('food quality', 'blueberry cheesecake', 'great', 'phenomenal'): 5, ('food quality', 'frozen black sesame mousse', 'bad', 'not extraordinary'): 1, ('food quality', 'frozen black sesame mousse', 'great', 'not extraordinary'): 1}
output quads: ['[A] frozen black sesame mousse [O] tried [S] great [C] food quality', '[A] frozen black sesame mousse [O] interesting [S] great [C] food quality', '[A] matcha ( powdered green tea ) [O] phenomenal [S] great [C] food quality', '[A] blueberry cheesecake [O] phenomenal [S] great [C] food quality']
multi_path: ['[A] frozen black sesame mousse [O] tried [S] great [C] food quality [SSEP] [A] frozen black sesame mousse [O] interesting [S] great [C] food quality [SSEP] [A] matcha ( powdered green tea ) [O] phenomenal [S] great [C] food quality [SSEP] [A] blueberry cheesecake [O] phenomenal [S] great [C] food quality', '[O] tried [A] frozen black sesame mousse [C] food quality [S] great [SSEP] [O] interesting [A] frozen black sesame mousse [C] food quality [S] great [SSEP] [O] not extraordinary [A] frozen black sesame mousse [C] food quality [S] bad [SSEP] [O] phenomenal [A] matcha ( powdered green tea ) [C] food quality [S] great [SSEP] [O] phenomenal [A] blueberry cheesecake [C] food quality [S] great', '[A] frozen black sesame mousse [O] tried [C] food quality [S] great [SSEP] [A] frozen black sesame mousse [O] interesting [C] food quality [S] great [SSEP] [A] matcha ( powdered green tea ) [O] phenomenal [C] food quality [S] great [SSEP] [A] blueberry cheesecake [O] phenomenal [C] food quality [S] great', '[O] tried [A] frozen black sesame mousse [S] great [C] food quality [SSEP] [O] interesting [A] frozen black sesame mousse [S] great [C] food quality [SSEP] [O] not extraordinary [A] frozen black sesame mousse [S] great [C] food quality [SSEP] [O] phenomenal [A] matcha ( powdered green tea ) [S] great [C] food quality [SSEP] [O] phenomenal [A] blueberry cheesecake [S] great [C] food quality', '[O] tried [S] great [C] food quality [A] frozen black sesame mousse [SSEP] [O] interesting [S] great [C] food quality [A] frozen black sesame mousse [SSEP] [O] phenomenal [S] great [C] food quality [A] matcha ( powdered green tea ) [SSEP] [O] phenomenal [S] great [C] food quality [A] blueberry cheesecake']

task, data: asqp rest15
target: [('food quality', 'modern japanese', 'great', 'delivers')]
output: ['[A] spot [O] delivers [S] great [C] restaurant general']
sent: ['I', "'ve", 'had', 'my', 'fair', 'share', 'of', 'modern', 'Japanese', 'and', 'this', 'spot', 'delivers', '.']
counter: {('restaurant general', 'spot', 'great', 'delivers'): 5}
output quads: ['[A] spot [O] delivers [S] great [C] restaurant general']
multi_path: ['[A] spot [O] delivers [S] great [C] restaurant general', '[O] delivers [A] spot [C] restaurant general [S] great', '[A] spot [O] delivers [C] restaurant general [S] great', '[O] delivers [A] spot [S] great [C] restaurant general', '[O] delivers [S] great [C] restaurant general [A] spot']

task, data: asqp rest15
target: [('food quality', 'hot dogs', 'great', 'top notch'), ('food quality', 'slamwich', 'great', 'amazing')]
output: ['[A] hot dogs [O] amazing [S] great [C] food quality', '[A] hot dogs [O] top notch [S] great [C] food quality']
sent: ['The', 'hot', 'dogs', 'are', 'top', 'notch', ',', 'and', 'they', "'re", 'Slamwich', 'is', 'amazing', '!']
counter: {('food quality', 'hot dogs', 'great', 'top notch'): 5, ('food quality', 'hot dogs', 'great', 'amazing'): 5}
output quads: ['[A] hot dogs [O] top notch [S] great [C] food quality', '[A] hot dogs [O] amazing [S] great [C] food quality']
multi_path: ['[A] hot dogs [O] top notch [S] great [C] food quality [SSEP] [A] hot dogs [O] amazing [S] great [C] food quality', '[O] top notch [A] hot dogs [C] food quality [S] great [SSEP] [O] amazing [A] hot dogs [C] food quality [S] great', '[A] hot dogs [O] top notch [C] food quality [S] great [SSEP] [A] hot dogs [O] amazing [C] food quality [S] great', '[O] top notch [A] hot dogs [S] great [C] food quality [SSEP] [O] amazing [A] hot dogs [S] great [C] food quality', '[O] top notch [S] great [C] food quality [A] hot dogs [SSEP] [O] amazing [S] great [C] food quality [A] hot dogs']

task, data: asqp rest15
target: [('service general', 'waiter', 'great', 'cute')]
output: ['[A] waiter [O] cute [S] ok [C] service general']
sent: ['It', '’', 's', 'just', 'you', 'and', 'your', 'date', 'and', 'an', 'occasional', 'cute', '‘', 'excuse', 'me', '’', 'before', 'the', 'waiter', 'opens', 'the', 'little', 'curtain', 'to', 'your', 'booth', '!']
counter: {('service general', 'waiter', 'ok', 'cute'): 4, ('ambience general', 'waiter', 'ok', 'cute'): 1}
output quads: ['[A] waiter [O] cute [S] ok [C] service general']
multi_path: ['[A] waiter [O] cute [S] ok [C] service general', '[O] cute [A] waiter [C] service general [S] ok', '[A] waiter [O] cute [C] service general [S] ok', '[O] cute [A] waiter [S] ok [C] service general', '[O] cute [S] ok [C] ambience general [A] waiter']

task, data: asqp rest15
target: [('ambience general', 'null', 'great', 'unassuming'), ('restaurant general', 'null', 'great', 'great'), ('restaurant prices', 'null', 'great', 'inexpensive')]
output: ['[A] null [O] great time [S] great [C] restaurant general', '[A] null [O] inexpensive [S] great [C] restaurant prices', '[A] null [O] unassuming [S] great [C] restaurant general']
sent: ['Inexpensive', ',', 'unassuming', ',', 'great', 'time', '!']
counter: {('restaurant prices', 'null', 'great', 'inexpensive'): 5, ('restaurant general', 'null', 'great', 'unassuming'): 5, ('restaurant general', 'null', 'great', 'great time'): 5}
output quads: ['[A] null [O] inexpensive [S] great [C] restaurant prices', '[A] null [O] unassuming [S] great [C] restaurant general', '[A] null [O] great time [S] great [C] restaurant general']
multi_path: ['[A] it [O] inexpensive [S] great [C] restaurant prices [SSEP] [A] it [O] unassuming [S] great [C] restaurant general [SSEP] [A] it [O] great time [S] great [C] restaurant general', '[O] inexpensive [A] it [C] restaurant prices [S] great [SSEP] [O] unassuming [A] it [C] restaurant general [S] great [SSEP] [O] great time [A] it [C] restaurant general [S] great', '[A] it [O] inexpensive [C] restaurant prices [S] great [SSEP] [A] it [O] unassuming [C] restaurant general [S] great [SSEP] [A] it [O] great time [C] restaurant general [S] great', '[O] inexpensive [A] it [S] great [C] restaurant prices [SSEP] [O] unassuming [A] it [S] great [C] restaurant general [SSEP] [O] great time [A] it [S] great [C] restaurant general', '[O] inexpensive [S] great [C] restaurant prices [A] it [SSEP] [O] unassuming [S] great [C] restaurant general [A] it [SSEP] [O] great time [S] great [C] restaurant general [A] it']

task, data: asqp rest15
target: [('food prices', 'menu', 'bad', 'complaint')]
output: ['[A] null [O] complaint [S] bad [C] restaurant prices']
sent: ['Only', 'complaint', 'is', 'the', 'pricing', '--', 'I', 'believe', 'it', 'would', 'be', 'more', 'reasonable', 'to', 'pay', 'a', 'dollar', 'less', 'on', 'each', 'item', 'listed', 'on', 'the', 'menu', '.']
counter: {('restaurant prices', 'null', 'bad', 'complaint'): 5}
output quads: ['[A] null [O] complaint [S] bad [C] restaurant prices']
multi_path: ['[A] it [O] complaint [S] bad [C] restaurant prices', '[O] complaint [A] it [C] restaurant prices [S] bad', '[A] it [O] complaint [C] restaurant prices [S] bad', '[O] complaint [A] it [S] bad [C] restaurant prices', '[O] complaint [S] bad [C] restaurant prices [A] it']

task, data: asqp rest15
target: [('food quality', 'menu', 'great', 'great')]
output: ['[A] menu [O] great [S] great [C] food style_options']
sent: ['Everything', 'on', 'the', 'menu', 'is', 'great', '.']
counter: {('food style_options', 'menu', 'great', 'great'): 4, ('food quality', 'menu', 'great', 'great'): 1}
output quads: ['[A] menu [O] great [S] great [C] food style_options']
multi_path: ['[A] menu [O] great [S] great [C] food style_options', '[O] great [A] menu [C] food style_options [S] great', '[A] menu [O] great [C] food style_options [S] great', '[O] great [A] menu [S] great [C] food style_options', '[O] great [S] great [C] food quality [A] menu']

task, data: asqp rest15
target: [('food quality', 'cheese', 'great', 'great'), ('food quality', 'crust', 'great', 'good'), ('food quality', 'crust', 'great', 'great'), ('food quality', 'sauce', 'great', 'light')]
output: ['[A] crust [O] good chew [S] great [C] food quality', '[A] crust [O] great [S] great [C] food quality', '[A] salt from the cheese [O] great [S] great [C] food quality', '[A] sauce [O] light [S] great [C] food quality', '[A] sauce [O] nice [S] great [C] food quality']
sent: ['The', 'crust', 'has', 'a', 'great', 'bite', 'and', 'a', 'good', 'chew', ',', 'the', 'sauce', 'is', 'light', 'with', 'a', 'nice', 'acidity', 'to', 'it', ',', 'the', 'salt', 'from', 'the', 'cheese', 'is', 'great', ',', 'really', 'heightens', 'the', 'flavor', 'of', 'all', 'the', 'other', 'components', '.']
counter: {('food quality', 'crust', 'great', 'great'): 5, ('food quality', 'sauce', 'great', 'light'): 5, ('food quality', 'sauce', 'great', 'nice'): 5, ('food quality', 'salt from the cheese', 'great', 'great'): 5, ('food quality', 'crust', 'great', 'good chew'): 4}
output quads: ['[A] crust [O] great [S] great [C] food quality', '[A] sauce [O] light [S] great [C] food quality', '[A] sauce [O] nice [S] great [C] food quality', '[A] salt from the cheese [O] great [S] great [C] food quality', '[A] crust [O] good chew [S] great [C] food quality']
multi_path: ['[A] crust [O] great [S] great [C] food quality [SSEP] [A] sauce [O] light [S] great [C] food quality [SSEP] [A] sauce [O] nice [S] great [C] food quality [SSEP] [A] salt from the cheese [O] great [S] great [C] food quality', '[O] great [A] crust [C] food quality [S] great [SSEP] [O] good chew [A] crust [C] food quality [S] great [SSEP] [O] light [A] sauce [C] food quality [S] great [SSEP] [O] nice [A] sauce [C] food quality [S] great [SSEP] [O] great [A] salt from the cheese [C] food quality [S] great', '[A] crust [O] great [C] food quality [S] great [SSEP] [A] crust [O] good chew [C] food quality [S] great [SSEP] [A] sauce [O] light [C] food quality [S] great [SSEP] [A] sauce [O] nice [C] food quality [S] great [SSEP] [A] salt from the cheese [O] great [C] food quality [S] great', '[O] great [A] crust [S] great [C] food quality [SSEP] [O] good chew [A] crust [S] great [C] food quality [SSEP] [O] light [A] sauce [S] great [C] food quality [SSEP] [O] nice [A] sauce [S] great [C] food quality [SSEP] [O] great [A] salt from the cheese [S] great [C] food quality', '[O] great [S] great [C] food quality [A] crust [SSEP] [O] good chew [S] great [C] food quality [A] crust [SSEP] [O] light [S] great [C] food quality [A] sauce [SSEP] [O] nice [S] great [C] food quality [A] sauce [SSEP] [O] great [S] great [C] food quality [A] salt from the cheese']

task, data: asqp rest15
target: [('food quality', 'portobello and asparagus mole', 'bad', 'fan')]
output: ["[A] portobello and asparagus mole [O] wasn't a fan of [S] bad [C] food quality"]
sent: ['Also', ',', 'I', 'personally', 'was', "n't", 'a', 'fan', 'of', 'the', 'portobello', 'and', 'asparagus', 'mole', '.']
counter: {('food quality', 'portobello and asparagus mole', 'bad', "wasn't a fan of"): 5}
output quads: ["[A] portobello and asparagus mole [O] wasn't a fan of [S] bad [C] food quality"]
multi_path: ["[A] portobello and asparagus mole [O] wasn't a fan of [S] bad [C] food quality", "[O] wasn't a fan of [A] portobello and asparagus mole [C] food quality [S] bad", "[A] portobello and asparagus mole [O] wasn't a fan of [C] food quality [S] bad", "[O] wasn't a fan of [A] portobello and asparagus mole [S] bad [C] food quality", "[O] wasn't a fan of [S] bad [C] food quality [A] portobello and asparagus mole"]

task, data: asqp rest15
target: [('food prices', 'null', 'bad', 'not cheap'), ('food quality', 'null', 'great', 'yummy')]
output: ['[A] null [O] not cheap [S] great [C] food prices', '[A] null [O] yummy [S] great [C] food quality']
sent: ['Not', 'cheap', 'but', 'very', 'yummy', '.']
counter: {('food prices', 'null', 'great', 'not cheap'): 5, ('food quality', 'null', 'great', 'yummy'): 5}
output quads: ['[A] null [O] not cheap [S] great [C] food prices', '[A] null [O] yummy [S] great [C] food quality']
multi_path: ['[A] it [O] not cheap [S] great [C] food prices [SSEP] [A] it [O] yummy [S] great [C] food quality', '[O] not cheap [A] it [C] food prices [S] great [SSEP] [O] yummy [A] it [C] food quality [S] great', '[A] it [O] not cheap [C] food prices [S] great [SSEP] [A] it [O] yummy [C] food quality [S] great', '[O] not cheap [A] it [S] great [C] food prices [SSEP] [O] yummy [A] it [S] great [C] food quality', '[O] not cheap [S] great [C] food prices [A] it [SSEP] [O] yummy [S] great [C] food quality [A] it']

task, data: asqp rest15
target: [('service general', 'null', 'bad', 'none was made')]
output: ['[A] null [O] none was made so i hung up [S] bad [C] service general']
sent: ['None', 'was', 'made', 'so', 'i', 'hung', 'up', '.']
counter: {('service general', 'null', 'bad', 'none was made so i hung up'): 5}
output quads: ['[A] null [O] none was made so i hung up [S] bad [C] service general']
multi_path: ['[A] it [O] none was made so i hung up [S] bad [C] service general', '[O] none was made so i hung up [A] it [C] service general [S] bad', '[A] it [O] none was made so i hung up [C] service general [S] bad', '[O] none was made so i hung up [A] it [S] bad [C] service general', '[O] none was made so i hung up [S] bad [C] service general [A] it']

task, data: asqp rest15
target: [('food quality', 'spinach', 'bad', 'undercooked')]
output: ['[A] meat and spinach [O] stomach [S] bad [C] food quality', '[A] spinach [O] undercooked [S] bad [C] food quality']
sent: ['So', ',', 'I', 'switch', 'with', 'my', 'boyfriend', 'again', 'to', 'see', 'if', 'maybe', 'I', 'could', 'stomach', 'the', 'meat', 'and', 'spinach', 'again', ',', 'but', 'the', 'spinach', 'was', 'so', 'undercooked', 'that', 'I', 'just', 'could', 'not', 'bite', 'through', 'it', '.']
counter: {('food quality', 'meat and spinach', 'bad', 'stomach'): 5, ('food quality', 'spinach', 'bad', 'undercooked'): 5}
output quads: ['[A] meat and spinach [O] stomach [S] bad [C] food quality', '[A] spinach [O] undercooked [S] bad [C] food quality']
multi_path: ['[A] meat and spinach [O] stomach [S] bad [C] food quality [SSEP] [A] spinach [O] undercooked [S] bad [C] food quality', '[O] stomach [A] meat and spinach [C] food quality [S] bad [SSEP] [O] undercooked [A] spinach [C] food quality [S] bad', '[A] meat and spinach [O] stomach [C] food quality [S] bad [SSEP] [A] spinach [O] undercooked [C] food quality [S] bad', '[O] stomach [A] meat and spinach [S] bad [C] food quality [SSEP] [O] undercooked [A] spinach [S] bad [C] food quality', '[O] stomach [S] bad [C] food quality [A] meat and spinach [SSEP] [O] undercooked [S] bad [C] food quality [A] spinach']

task, data: asqp rest15
target: [('restaurant general', 'null', 'great', 'go back')]
output: ['[A] null [O] go back again [S] great [C] restaurant general']
sent: ['I', "'d", 'definitely', 'go', 'back', 'again', '.']
counter: {('restaurant general', 'null', 'great', 'go back again'): 5}
output quads: ['[A] null [O] go back again [S] great [C] restaurant general']
multi_path: ['[A] it [O] go back again [S] great [C] restaurant general', '[O] go back again [A] it [C] restaurant general [S] great', '[A] it [O] go back again [C] restaurant general [S] great', '[O] go back again [A] it [S] great [C] restaurant general', '[O] go back again [S] great [C] restaurant general [A] it']

task, data: asqp rest15
target: [('restaurant miscellaneous', 'place', 'great', 'open till late')]
output: ['[A] place [O] no dress code [S] ok [C] restaurant miscellaneous']
sent: ['Place', 'is', 'open', 'till', 'late', ',', 'no', 'dress', 'code', '.']
counter: {('restaurant miscellaneous', 'place', 'ok', 'no dress code'): 5}
output quads: ['[A] place [O] no dress code [S] ok [C] restaurant miscellaneous']
multi_path: ['[A] place [O] no dress code [S] ok [C] restaurant miscellaneous', '[O] no dress code [A] place [C] restaurant miscellaneous [S] ok', '[A] place [O] no dress code [C] restaurant miscellaneous [S] ok', '[O] no dress code [A] place [S] ok [C] restaurant miscellaneous', '[O] no dress code [S] ok [C] restaurant miscellaneous [A] place']

task, data: asqp rest15
target: [('service general', 'frontman', 'bad', 'bad')]
output: ['[A] frontman [O] refused to seat her [S] bad [C] service general']
sent: ['This', 'guy', 'refused', 'to', 'seat', 'her', 'and', 'she', 'left', ',', 'followed', 'shortly', 'by', 'the', 'four', 'of', 'us', ',', 'but', 'not', 'before', 'I', 'told', 'him', 'that', 'in', 'my', '40', 'years', 'of', 'world', 'travel', ',', 'including', 'Paris', ',', 'that', 'I', 'had', 'never', 'seen', 'such', 'a', 'display', 'of', 'bad', 'behavior', 'by', 'a', 'frontman', 'in', 'a', 'restaurant', '.']
counter: {('service general', 'frontman', 'bad', 'bad behavior'): 2, ('service general', 'frontman', 'bad', 'refused to seat her'): 3}
output quads: ['[A] frontman [O] refused to seat her [S] bad [C] service general']
multi_path: ['[A] frontman [O] bad behavior [S] bad [C] service general', '[O] refused to seat her [A] frontman [C] service general [S] bad', '[A] frontman [O] bad behavior [C] service general [S] bad', '[O] refused to seat her [A] frontman [S] bad [C] service general', '[O] refused to seat her [S] bad [C] service general [A] frontman']

task, data: asqp rest15
target: [('restaurant general', 'place', 'bad', '0 stars')]
output: ['[A] place [O] give 0 stars [S] great [C] restaurant general']
sent: ['If', 'I', 'could', 'give', '0', 'stars', 'I', 'would', 'do', 'so', 'for', 'this', 'place', '.']
counter: {('restaurant general', 'place', 'great', 'give 0 stars'): 5}
output quads: ['[A] place [O] give 0 stars [S] great [C] restaurant general']
multi_path: ['[A] place [O] give 0 stars [S] great [C] restaurant general', '[O] give 0 stars [A] place [C] restaurant general [S] great', '[A] place [O] give 0 stars [C] restaurant general [S] great', '[O] give 0 stars [A] place [S] great [C] restaurant general', '[O] give 0 stars [S] great [C] restaurant general [A] place']

task, data: asqp rest15
target: [('ambience general', 'null', 'bad', 'no hand towels left')]
output: ['[A] floor [O] wet [S] bad [C] ambience general']
sent: ['The', 'floor', 'was', 'wet', ',', 'the', 'trash', 'can', 'filled', 'with', 'hand', 'towels', 'n', 'all', 'over', 'the', 'floor', ',', 'no', 'soap', ',', 'and', 'no', 'hand', 'towels', 'left', '.']
counter: {('ambience general', 'floor', 'bad', 'wet'): 5, ('food style_options', 'trash can', 'bad', 'filled'): 2, ('food quality', 'trash can', 'bad', 'no soap'): 2, ('food quality', 'hand towels', 'bad', 'no soap'): 2}
output quads: ['[A] floor [O] wet [S] bad [C] ambience general']
multi_path: ['[A] floor [O] wet [S] bad [C] ambience general [SSEP] [A] trash can [O] filled [S] bad [C] food style_options', '[O] wet [A] floor [C] ambience general [S] bad [SSEP] [O] no soap [A] trash can [C] food quality [S] bad', '[A] floor [O] wet [C] ambience general [S] bad [SSEP] [A] trash can [O] filled [C] food style_options [S] bad [SSEP] [A] hand towels [O] no soap [C] food quality [S] bad', '[O] wet [A] floor [S] bad [C] ambience general [SSEP] [O] no soap [A] trash can [S] bad [C] food quality', '[O] wet [S] bad [C] ambience general [A] floor [SSEP] [O] no soap [S] bad [C] food quality [A] hand towels']

task, data: asqp rest15
target: [('restaurant general', 'yamato', 'great', 'just go')]
output: ['[A] red dragon roll [O] order [S] great [C] food quality']
sent: ['Just', 'go', 'to', 'Yamato', 'and', 'order', 'the', 'Red', 'Dragon', 'Roll', '.']
counter: {('food quality', 'red dragon roll', 'great', 'order'): 5}
output quads: ['[A] red dragon roll [O] order [S] great [C] food quality']
multi_path: ['[A] red dragon roll [O] order [S] great [C] food quality', '[O] order [A] red dragon roll [C] food quality [S] great', '[A] red dragon roll [O] order [C] food quality [S] great', '[O] order [A] red dragon roll [S] great [C] food quality', '[O] order [S] great [C] food quality [A] red dragon roll']

task, data: asqp rest15
target: [('restaurant miscellaneous', 'yamato', 'great', 'excellent')]
output: ['[A] yamato [O] excellent [S] great [C] restaurant general']
sent: ['Yamato', 'is', 'an', 'excellent', 'place', 'to', 'go', 'if', 'youre', 'not', 'into', 'sashimi', ',', 'or', 'if', 'you', 'have', 'friends', 'who', 'doesnt', 'like', 'sushi', 'much', '.']
counter: {('restaurant general', 'yamato', 'great', 'excellent'): 5}
output quads: ['[A] yamato [O] excellent [S] great [C] restaurant general']
multi_path: ['[A] yamato [O] excellent [S] great [C] restaurant general', '[O] excellent [A] yamato [C] restaurant general [S] great', '[A] yamato [O] excellent [C] restaurant general [S] great', '[O] excellent [A] yamato [S] great [C] restaurant general', '[O] excellent [S] great [C] restaurant general [A] yamato']

task, data: asqp rest15
target: [('service general', 'null', 'bad', 'missing')]
output: ['[A] main course [O] missing [S] bad [C] food quality']
sent: ['When', 'the', 'main', 'course', 'finally', 'arrived', '(', 'another', '45mins', ')', 'half', 'of', 'our', 'order', 'was', 'missing', '.']
counter: {('food quality', 'main course', 'bad', 'missing'): 5}
output quads: ['[A] main course [O] missing [S] bad [C] food quality']
multi_path: ['[A] main course [O] missing [S] bad [C] food quality', '[O] missing [A] main course [C] food quality [S] bad', '[A] main course [O] missing [C] food quality [S] bad', '[O] missing [A] main course [S] bad [C] food quality', '[O] missing [S] bad [C] food quality [A] main course']

task, data: asqp rest15
target: [('service general', 'server', 'great', 'professionalism'), ('service general', 'server', 'great', 'refreshing'), ('service general', 'server', 'great', 'respects')]
output: ['[A] server [O] refreshing [S] great [C] service general']
sent: ['Sometimes', 'tables', 'do', "n't", 'understand', 'his', 'sense', 'of', 'humor', 'but', 'it', "'s", 'refreshing', 'to', 'have', 'a', 'server', 'who', 'has', 'personality', ',', 'professionalism', ',', 'and', 'respects', 'the', 'privacy', 'of', 'your', 'dinner', '.']
counter: {('service general', 'server', 'great', 'refreshing'): 5}
output quads: ['[A] server [O] refreshing [S] great [C] service general']
multi_path: ['[A] server [O] refreshing [S] great [C] service general', '[O] refreshing [A] server [C] service general [S] great', '[A] server [O] refreshing [C] service general [S] great', '[O] refreshing [A] server [S] great [C] service general', '[O] refreshing [S] great [C] service general [A] server']

task, data: asqp rest15
target: [('service general', 'null', 'bad', 'walked off')]
output: ['[A] null [O] nodded [S] bad [C] service general', '[A] null [O] walked off [S] bad [C] service general']
sent: ['She', 'just', 'nodded', 'and', 'walked', 'off', '.']
counter: {('service general', 'null', 'bad', 'nodded'): 5, ('service general', 'null', 'bad', 'walked off'): 5}
output quads: ['[A] null [O] nodded [S] bad [C] service general', '[A] null [O] walked off [S] bad [C] service general']
multi_path: ['[A] it [O] nodded [S] bad [C] service general [SSEP] [A] it [O] walked off [S] bad [C] service general', '[O] nodded [A] it [C] service general [S] bad [SSEP] [O] walked off [A] it [C] service general [S] bad', '[A] it [O] nodded [C] service general [S] bad [SSEP] [A] it [O] walked off [C] service general [S] bad', '[O] nodded [A] it [S] bad [C] service general [SSEP] [O] walked off [A] it [S] bad [C] service general', '[O] nodded [S] bad [C] service general [A] it [SSEP] [O] walked off [S] bad [C] service general [A] it']

task, data: asqp rest15
target: [('service general', 'waiter', 'bad', 'tag teamed'), ('service general', 'waitress', 'bad', 'tag teamed')]
output: ['[A] waiter [O] tag teamed [S] great [C] service general', '[A] waitress [O] tag teamed [S] great [C] service general']
sent: ['I', 'was', 'there', 'for', 'brunch', 'recently', ',', 'and', 'we', 'were', 'tag', 'teamed', 'by', 'a', 'waitress', 'and', 'a', 'waiter', '.']
counter: {('service general', 'waitress', 'great', 'tag teamed'): 5, ('service general', 'waiter', 'great', 'tag teamed'): 5}
output quads: ['[A] waitress [O] tag teamed [S] great [C] service general', '[A] waiter [O] tag teamed [S] great [C] service general']
multi_path: ['[A] waitress [O] tag teamed [S] great [C] service general [SSEP] [A] waiter [O] tag teamed [S] great [C] service general', '[O] tag teamed [A] waitress [C] service general [S] great [SSEP] [O] tag teamed [A] waiter [C] service general [S] great', '[A] waitress [O] tag teamed [C] service general [S] great [SSEP] [A] waiter [O] tag teamed [C] service general [S] great', '[O] tag teamed [A] waitress [S] great [C] service general [SSEP] [O] tag teamed [A] waiter [S] great [C] service general', '[O] tag teamed [S] great [C] service general [A] waitress [SSEP] [O] tag teamed [S] great [C] service general [A] waiter']

task, data: asqp rest15
target: [('food quality', 'chicken lollipop', 'great', 'favorite'), ('food quality', 'chilli chicken', 'bad', 'oily'), ('food quality', 'chilli chicken', 'bad', 'spicy'), ('food quality', 'dishes', 'bad', 'oily'), ('food quality', 'dishes', 'bad', 'spicy')]
output: ['[A] chicken lollipop [O] favorite [S] great [C] food quality', '[A] dishes [O] oily [S] great [C] food quality', '[A] dishes [O] spicy [S] great [C] food quality']
sent: ['The', 'chicken', 'lollipop', 'is', 'my', 'favorite', ',', 'most', 'of', 'the', 'dishes', '(', 'I', 'have', 'to', 'agree', 'with', 'a', 'previous', 'reviewer', ')', 'are', 'quite', 'oily', 'and', 'very', 'spicy', ',', 'espeically', 'the', 'Chilli', 'Chicken', '.']
counter: {('food quality', 'chicken lollipop', 'great', 'favorite'): 5, ('food quality', 'dishes', 'great', 'oily'): 4, ('food quality', 'dishes', 'great', 'spicy'): 4, ('food quality', 'dishes', 'bad', 'oily'): 1, ('food quality', 'dishes', 'bad', 'spicy'): 1, ('food quality', 'chilli chicken', 'great', 'spicy'): 2}
output quads: ['[A] chicken lollipop [O] favorite [S] great [C] food quality', '[A] dishes [O] oily [S] great [C] food quality', '[A] dishes [O] spicy [S] great [C] food quality']
multi_path: ['[A] chicken lollipop [O] favorite [S] great [C] food quality [SSEP] [A] dishes [O] oily [S] great [C] food quality [SSEP] [A] dishes [O] spicy [S] great [C] food quality', '[O] favorite [A] chicken lollipop [C] food quality [S] great [SSEP] [O] oily [A] dishes [C] food quality [S] bad [SSEP] [O] spicy [A] dishes [C] food quality [S] bad [SSEP] [O] spicy [A] chilli chicken [C] food quality [S] great', '[A] chicken lollipop [O] favorite [C] food quality [S] great [SSEP] [A] dishes [O] oily [C] food quality [S] great [SSEP] [A] dishes [O] spicy [C] food quality [S] great [SSEP] [A] chilli chicken [O] spicy [C] food quality [S] great', '[O] favorite [A] chicken lollipop [S] great [C] food quality [SSEP] [O] oily [A] dishes [S] great [C] food quality [SSEP] [O] spicy [A] dishes [S] great [C] food quality', '[O] favorite [S] great [C] food quality [A] chicken lollipop [SSEP] [O] oily [S] great [C] food quality [A] dishes [SSEP] [O] spicy [S] great [C] food quality [A] dishes']

task, data: asqp rest15
target: [('service general', 'waiter', 'bad', 'forgot')]
output: ['[A] waiter [O] forgot to put in [S] bad [C] service general']
sent: ['We', 'asked', 'for', 'sides', 'which', 'the', 'waiter', 'than', 'admitted', 'that', 'he', 'forgot', 'to', 'put', 'in', 'that', 'part', 'of', 'our', 'order', '.']
counter: {('service general', 'waiter', 'bad', 'forgot to put in'): 5}
output quads: ['[A] waiter [O] forgot to put in [S] bad [C] service general']
multi_path: ['[A] waiter [O] forgot to put in [S] bad [C] service general', '[O] forgot to put in [A] waiter [C] service general [S] bad', '[A] waiter [O] forgot to put in [C] service general [S] bad', '[O] forgot to put in [A] waiter [S] bad [C] service general', '[O] forgot to put in [S] bad [C] service general [A] waiter']

task, data: asqp rest15
target: [('food quality', 'stuff tilapia', 'bad', 'horrid')]
output: ['[A] stuff tilapia [O] cardboard [S] bad [C] food quality', '[A] stuff tilapia [O] horrid [S] bad [C] food quality']
sent: ['The', 'stuff', 'tilapia', 'was', 'horrid', '...', 'tasted', 'like', 'cardboard', '.']
counter: {('food quality', 'stuff tilapia', 'bad', 'horrid'): 5, ('food quality', 'stuff tilapia', 'bad', 'cardboard'): 4}
output quads: ['[A] stuff tilapia [O] horrid [S] bad [C] food quality', '[A] stuff tilapia [O] cardboard [S] bad [C] food quality']
multi_path: ['[A] stuff tilapia [O] horrid [S] bad [C] food quality [SSEP] [A] stuff tilapia [O] cardboard [S] bad [C] food quality', '[O] horrid [A] stuff tilapia [C] food quality [S] bad [SSEP] [O] cardboard [A] stuff tilapia [C] food quality [S] bad', '[A] stuff tilapia [O] horrid [C] food quality [S] bad [SSEP] [A] stuff tilapia [O] cardboard [C] food quality [S] bad', '[O] horrid [A] stuff tilapia [S] bad [C] food quality', '[O] horrid [S] bad [C] food quality [A] stuff tilapia [SSEP] [O] cardboard [S] bad [C] food quality [A] stuff tilapia']

task, data: asqp rest15
target: [('food quality', 'chicken pasta', 'great', 'love')]
output: ['[A] chicken pasta [O] good [S] great [C] food quality', '[A] chicken pasta [O] love [S] great [C] food quality']
sent: ['i', 'love', 'their', 'chicken', 'pasta', 'cant', 'remember', 'the', 'name', 'but', 'is', 'sooo', 'good']
counter: {('food quality', 'chicken pasta', 'great', 'love'): 5, ('food quality', 'chicken pasta', 'great', 'good'): 5}
output quads: ['[A] chicken pasta [O] love [S] great [C] food quality', '[A] chicken pasta [O] good [S] great [C] food quality']
multi_path: ['[A] chicken pasta [O] love [S] great [C] food quality [SSEP] [A] chicken pasta [O] good [S] great [C] food quality', '[O] love [A] chicken pasta [C] food quality [S] great [SSEP] [O] good [A] chicken pasta [C] food quality [S] great', '[A] chicken pasta [O] love [C] food quality [S] great [SSEP] [A] chicken pasta [O] good [C] food quality [S] great', '[O] love [A] chicken pasta [S] great [C] food quality [SSEP] [O] good [A] chicken pasta [S] great [C] food quality', '[O] love [S] great [C] food quality [A] chicken pasta [SSEP] [O] good [S] great [C] food quality [A] chicken pasta']

task, data: asqp rest15
target: [('service general', 'waitress', 'ok', "wasn't mean")]
output: ['[A] waitress [O] not especially warm or attentive [S] bad [C] service general']
sent: ['Our', 'waitress', 'was', "n't", 'mean', ',', 'but', 'not', 'especially', 'warm', 'or', 'attentive', 'either', '.']
counter: {('service general', 'waitress', 'bad', 'not especially warm or attentive'): 5}
output quads: ['[A] waitress [O] not especially warm or attentive [S] bad [C] service general']
multi_path: ['[A] waitress [O] not especially warm or attentive [S] bad [C] service general', '[O] not especially warm or attentive [A] waitress [C] service general [S] bad', '[A] waitress [O] not especially warm or attentive [C] service general [S] bad', '[O] not especially warm or attentive [A] waitress [S] bad [C] service general', '[O] not especially warm or attentive [S] bad [C] service general [A] waitress']

task, data: asqp rest15
target: [('restaurant general', 'null', 'bad', 'retching'), ('restaurant general', 'null', 'bad', 'wretched')]
output: ['[A] null [O] wretched [S] bad [C] food quality']
sent: ['Wretched', 'and', 'retching']
counter: {('food quality', 'null', 'bad', 'wretched'): 5}
output quads: ['[A] null [O] wretched [S] bad [C] food quality']
multi_path: ['[A] it [O] wretched [S] bad [C] food quality', '[O] wretched [A] it [C] food quality [S] bad', '[A] it [O] wretched [C] food quality [S] bad', '[O] wretched [A] it [S] bad [C] food quality', '[O] wretched [S] bad [C] food quality [A] it']

task, data: asqp rest15
target: [('restaurant general', 'null', 'great', 'be back')]
output: ['[A] patio [O] be back [S] great [C] ambience general']
sent: ['Regardless', ',', 'we', "'ll", 'be', 'back', 'and', 'can', "'t", 'wait', 'to', 'visit', 'in', 'the', 'summer', 'to', 'take', 'advantage', 'of', 'the', 'patio', '.']
counter: {('ambience general', 'patio', 'great', 'be back'): 4, ('restaurant general', 'patio', 'great', 'be back'): 1}
output quads: ['[A] patio [O] be back [S] great [C] ambience general']
multi_path: ['[A] patio [O] be back [S] great [C] ambience general', '[O] be back [A] patio [C] ambience general [S] great', '[A] patio [O] be back [C] ambience general [S] great', '[O] be back [A] patio [S] great [C] ambience general', '[O] be back [S] great [C] restaurant general [A] patio']

task, data: asqp rest15
target: [('food quality', 'food', 'bad', 'not appetizing'), ('food quality', 'food', 'bad', 'not comforting')]
output: ['[A] food [O] not appetizing [S] bad [C] food quality', '[A] food [O] not comforting [S] bad [C] food quality', '[A] food [O] uncooked [S] bad [C] food quality']
sent: ['The', 'food', 'they', 'serve', 'is', 'not', 'comforting', ',', 'not', 'appetizing', 'and', 'uncooked', '.']
counter: {('food quality', 'food', 'bad', 'not comforting'): 5, ('food quality', 'food', 'bad', 'not appetizing'): 5, ('food quality', 'food', 'bad', 'uncooked'): 5}
output quads: ['[A] food [O] not comforting [S] bad [C] food quality', '[A] food [O] not appetizing [S] bad [C] food quality', '[A] food [O] uncooked [S] bad [C] food quality']
multi_path: ['[A] food [O] not comforting [S] bad [C] food quality [SSEP] [A] food [O] not appetizing [S] bad [C] food quality [SSEP] [A] food [O] uncooked [S] bad [C] food quality', '[O] not comforting [A] food [C] food quality [S] bad [SSEP] [O] not appetizing [A] food [C] food quality [S] bad [SSEP] [O] uncooked [A] food [C] food quality [S] bad', '[A] food [O] not comforting [C] food quality [S] bad [SSEP] [A] food [O] not appetizing [C] food quality [S] bad [SSEP] [A] food [O] uncooked [C] food quality [S] bad', '[O] not comforting [A] food [S] bad [C] food quality [SSEP] [O] not appetizing [A] food [S] bad [C] food quality [SSEP] [O] uncooked [A] food [S] bad [C] food quality', '[O] not comforting [S] bad [C] food quality [A] food [SSEP] [O] not appetizing [S] bad [C] food quality [A] food [SSEP] [O] uncooked [S] bad [C] food quality [A] food']

task, data: asqp rest15
target: [('food quality', 'shabu shabu', 'great', "won 't find much better")]
output: ["[A] shabu shabu [O] won 't find much better [S] bad [C] food quality"]
sent: ['But', 'for', 'the', 'Shabu', 'Shabu', ',', 'you', 'won', "'t", 'find', 'much', 'better', 'in', 'NY', '.']
counter: {('food quality', 'shabu shabu', 'bad', "won 't find much better"): 5}
output quads: ["[A] shabu shabu [O] won 't find much better [S] bad [C] food quality"]
multi_path: ["[A] shabu shabu [O] won 't find much better [S] bad [C] food quality", "[O] won 't find much better [A] shabu shabu [C] food quality [S] bad", "[A] shabu shabu [O] won 't find much better [C] food quality [S] bad", "[O] won 't find much better [A] shabu shabu [S] bad [C] food quality", "[O] won 't find much better [S] bad [C] food quality [A] shabu shabu"]

task, data: asqp rest15
target: [('service general', 'null', 'bad', 'nasty')]
output: ['[A] person [O] friendly [S] great [C] service general']
sent: ['I', "'m", 'a', 'friendly', 'person', ',', 'so', 'I', 'wouldn', "'t", 'mind', 'had', 'she', 'not', 'been', 'so', 'nasty', 'and', 'gotten', 'so', 'personal', '.']
counter: {('service general', 'person', 'great', 'friendly'): 4, ('service general', 'null', 'great', 'friendly'): 1}
output quads: ['[A] person [O] friendly [S] great [C] service general']
multi_path: ['[A] person [O] friendly [S] great [C] service general', '[O] friendly [A] it [C] service general [S] great', '[A] person [O] friendly [C] service general [S] great', '[O] friendly [A] person [S] great [C] service general', '[O] friendly [S] great [C] service general [A] person']

task, data: asqp rest15
target: [('service general', 'null', 'bad', 'no apology or acknowledgment')]
output: ['[A] food [O] no apology or acknowledgment was made [S] bad [C] food quality']
sent: ['As', 'to', 'my', 'comment', 'about', 'the', 'food', ',', 'no', 'apology', 'or', 'acknowledgment', 'was', 'made', '.']
counter: {('food quality', 'food', 'bad', 'no apology or acknowledgment was made'): 4, ('food quality', 'food', 'bad', 'no apology or acknowledgment'): 1}
output quads: ['[A] food [O] no apology or acknowledgment was made [S] bad [C] food quality']
multi_path: ['[A] food [O] no apology or acknowledgment was made [S] bad [C] food quality', '[O] no apology or acknowledgment was made [A] food [C] food quality [S] bad', '[A] food [O] no apology or acknowledgment [C] food quality [S] bad', '[O] no apology or acknowledgment was made [A] food [S] bad [C] food quality', '[O] no apology or acknowledgment was made [S] bad [C] food quality [A] food']

task, data: asqp rest15
target: [('ambience general', 'null', 'great', 'cozy')]
output: ['[A] null [O] cozy [S] great [C] ambience general', '[A] null [O] dark [S] great [C] ambience general']
sent: ['Its', 'dark', ',', 'and', 'cozy', '.', '.', 'there', 'is', 'always', 'jazz', 'music', 'playing', 'when', 'we', 'go', '.']
counter: {('ambience general', 'null', 'great', 'dark'): 5, ('ambience general', 'null', 'great', 'cozy'): 5}
output quads: ['[A] null [O] dark [S] great [C] ambience general', '[A] null [O] cozy [S] great [C] ambience general']
multi_path: ['[A] it [O] dark [S] great [C] ambience general [SSEP] [A] it [O] cozy [S] great [C] ambience general', '[O] dark [A] it [C] ambience general [S] great [SSEP] [O] cozy [A] it [C] ambience general [S] great', '[A] it [O] dark [C] ambience general [S] great [SSEP] [A] it [O] cozy [C] ambience general [S] great', '[O] dark [A] it [S] great [C] ambience general [SSEP] [O] cozy [A] it [S] great [C] ambience general', '[O] dark [S] great [C] ambience general [A] it [SSEP] [O] cozy [S] great [C] ambience general [A] it']

task, data: asqp rest15
target: [('food quality', 'dogs', 'great', 'amazing fresh'), ('food style_options', 'toppings', 'great', 'best'), ('food style_options', 'toppings', 'great', 'endless')]
output: ['[A] dogs [O] amazing fresh [S] great [C] food quality', '[A] toppings [O] best of all endless toppings [S] great [C] food quality']
sent: ['amazing', 'fresh', 'dogs', 'but', 'best', 'of', 'all', 'endless', 'toppings', '!', '!', '!']
counter: {('food quality', 'dogs', 'great', 'amazing fresh'): 5, ('food quality', 'toppings', 'great', 'best of all endless'): 2, ('food quality', 'toppings', 'great', 'best of all endless toppings'): 3}
output quads: ['[A] dogs [O] amazing fresh [S] great [C] food quality', '[A] toppings [O] best of all endless toppings [S] great [C] food quality']
multi_path: ['[A] dogs [O] amazing fresh [S] great [C] food quality [SSEP] [A] toppings [O] best of all endless [S] great [C] food quality', '[O] amazing fresh [A] dogs [C] food quality [S] great [SSEP] [O] best of all endless toppings [A] toppings [C] food quality [S] great', '[A] dogs [O] amazing fresh [C] food quality [S] great [SSEP] [A] toppings [O] best of all endless [C] food quality [S] great', '[O] amazing fresh [A] dogs [S] great [C] food quality [SSEP] [O] best of all endless toppings [A] toppings [S] great [C] food quality', '[O] amazing fresh [S] great [C] food quality [A] dogs [SSEP] [O] best of all endless toppings [S] great [C] food quality [A] toppings']

task, data: asqp rest15
target: [('food quality', 'dinner', 'great', 'great quality'), ('service general', 'service', 'great', 'great')]
output: ['[A] quality [O] great [S] great [C] food quality', '[A] service [O] great [S] great [C] service general']
sent: ['We', 'have', 'gone', 'for', 'dinner', 'only', 'a', 'few', 'times', 'but', 'the', 'same', 'great', 'quality', 'and', 'service', 'is', 'given', '.']
counter: {('food quality', 'null', 'great', 'great'): 2, ('service general', 'service', 'great', 'great'): 5, ('food quality', 'quality', 'great', 'great'): 3}
output quads: ['[A] service [O] great [S] great [C] service general', '[A] quality [O] great [S] great [C] food quality']
multi_path: ['[A] it [O] great [S] great [C] food quality [SSEP] [A] service [O] great [S] great [C] service general', '[O] great [A] quality [C] food quality [S] great [SSEP] [O] great [A] service [C] service general [S] great', '[A] it [O] great [C] food quality [S] great [SSEP] [A] service [O] great [C] service general [S] great', '[O] great [A] quality [S] great [C] food quality [SSEP] [O] great [A] service [S] great [C] service general', '[O] great [S] great [C] food quality [A] quality [SSEP] [O] great [S] great [C] service general [A] service']

task, data: asqp rest15
target: [('food prices', 'bbe $ 29 fixe prix menu', 'great', 'wonderful'), ('food style_options', 'bbe $ 29 fixe prix menu', 'great', 'a flight of sake')]
output: ['[A] bbe $ 29 fixe prix menu [O] wonderful deal [S] great [C] food prices']
sent: ['My', 'party', 'had', 'the', 'BBE', '$', '29', 'fixe', 'prix', 'menu', ',', 'which', 'was', 'such', 'a', 'wonderful', 'deal', 'since', 'it', 'also', 'came', 'with', 'a', 'flight', 'of', 'sake', '!']
counter: {('food prices', 'bbe $ 29 fixe prix menu', 'great', 'wonderful'): 2, ('food quality', 'bbe $ 29 fixe prix menu', 'great', 'wonderful'): 2, ('food prices', 'bbe $ 29 fixe prix menu', 'great', 'wonderful deal'): 3, ('drinks style_options', 'bbe $ 29 fixe prix menu', 'great', 'wonderful'): 1}
output quads: ['[A] bbe $ 29 fixe prix menu [O] wonderful deal [S] great [C] food prices']
multi_path: ['[A] bbe $ 29 fixe prix menu [O] wonderful [S] great [C] food prices [SSEP] [A] bbe $ 29 fixe prix menu [O] wonderful [S] great [C] food quality', '[O] wonderful deal [A] bbe $ 29 fixe prix menu [C] food prices [S] great', '[A] bbe $ 29 fixe prix menu [O] wonderful [C] food prices [S] great', '[O] wonderful deal [A] bbe $ 29 fixe prix menu [S] great [C] food prices [SSEP] [O] wonderful [A] bbe $ 29 fixe prix menu [S] great [C] food quality', '[O] wonderful deal [S] great [C] food prices [A] bbe $ 29 fixe prix menu [SSEP] [O] wonderful [S] great [C] drinks style_options [A] bbe $ 29 fixe prix menu']

task, data: asqp rest15
target: [('ambience general', 'decor', 'bad', 'weird'), ('ambience general', 'mirrored walls', 'bad', 'delusional'), ('ambience general', 'mirrored walls', 'bad', 'dizzy')]
output: ['[A] decor [O] weird [S] bad [C] ambience general', '[A] mirrored walls [O] delusional [S] bad [C] ambience general', '[A] stairs [O] weird [S] bad [C] ambience general']
sent: ['This', 'place', 'has', 'totally', 'weird', 'decor', ',', 'stairs', 'going', 'up', 'with', 'mirrored', 'walls', '-', 'I', 'am', 'surprised', 'how', 'no', 'one', 'yet', 'broke', 'their', 'head', 'or', 'fall', 'off', 'the', 'stairs', '-', 'mirrored', 'walls', 'make', 'you', 'dizzy', 'and', 'delusional', '...']
counter: {('ambience general', 'decor', 'bad', 'weird'): 5, ('ambience general', 'stairs', 'bad', 'weird'): 5, ('ambience general', 'mirrored walls', 'bad', 'surprised'): 2, ('ambience general', 'mirrored walls', 'bad', 'delusional'): 3}
output quads: ['[A] decor [O] weird [S] bad [C] ambience general', '[A] stairs [O] weird [S] bad [C] ambience general', '[A] mirrored walls [O] delusional [S] bad [C] ambience general']
multi_path: ['[A] decor [O] weird [S] bad [C] ambience general [SSEP] [A] stairs [O] weird [S] bad [C] ambience general [SSEP] [A] mirrored walls [O] surprised [S] bad [C] ambience general', '[O] weird [A] decor [C] ambience general [S] bad [SSEP] [O] weird [A] stairs [C] ambience general [S] bad [SSEP] [O] delusional [A] mirrored walls [C] ambience general [S] bad', '[A] decor [O] weird [C] ambience general [S] bad [SSEP] [A] stairs [O] weird [C] ambience general [S] bad [SSEP] [A] mirrored walls [O] surprised [C] ambience general [S] bad', '[O] weird [A] decor [S] bad [C] ambience general [SSEP] [O] weird [A] stairs [S] bad [C] ambience general [SSEP] [O] delusional [A] mirrored walls [S] bad [C] ambience general', '[O] weird [S] bad [C] ambience general [A] decor [SSEP] [O] weird [S] bad [C] ambience general [A] stairs [SSEP] [O] delusional [S] bad [C] ambience general [A] mirrored walls']

task, data: asqp rest15
target: [('service general', 'greg', 'great', 'favorite')]
output: ['[A] servers [O] favorite [S] great [C] service general']
sent: ['Servers', 'are', 'all', 'different', ',', 'Greg', 'is', 'my', 'favorite', '.']
counter: {('service general', 'servers', 'great', 'favorite'): 5}
output quads: ['[A] servers [O] favorite [S] great [C] service general']
multi_path: ['[A] servers [O] favorite [S] great [C] service general', '[O] favorite [A] servers [C] service general [S] great', '[A] servers [O] favorite [C] service general [S] great', '[O] favorite [A] servers [S] great [C] service general', '[O] favorite [S] great [C] service general [A] servers']

task, data: asqp rest15
target: [('service general', 'paul', 'great', 'professional')]
output: ['[A] maitre [O] professional [S] great [C] service general']
sent: ['Paul', ',', 'the', 'maitre,', 'was', 'totally', 'professional', 'and', 'always', 'on', 'top', 'of', 'things', '.']
counter: {('service general', 'maitre', 'great', 'professional'): 5}
output quads: ['[A] maitre [O] professional [S] great [C] service general']
multi_path: ['[A] maitre [O] professional [S] great [C] service general', '[O] professional [A] maitre [C] service general [S] great', '[A] maitre [O] professional [C] service general [S] great', '[O] professional [A] maitre [S] great [C] service general', '[O] professional [S] great [C] service general [A] maitre']

task, data: asqp rest15
target: [('service general', 'null', 'great', 'very well')]
output: ['[A] null [O] honored [S] great [C] service general']
sent: ['They', 'honored', 'reservation', 'on', 'Sunday', 'afternoon', 'very', 'well', '.']
counter: {('service general', 'null', 'great', 'honored reservation'): 2, ('service general', 'null', 'great', 'honored'): 3}
output quads: ['[A] null [O] honored [S] great [C] service general']
multi_path: ['[A] it [O] honored reservation [S] great [C] service general', '[O] honored [A] it [C] service general [S] great', '[A] it [O] honored reservation [C] service general [S] great', '[O] honored [A] it [S] great [C] service general', '[O] honored [S] great [C] service general [A] it']

task, data: asqp rest15
target: [('service general', 'manager', 'bad', 'seem like a big concession')]
output: ['[A] glasses of wine [O] less than the food [S] great [C] drinks prices', '[A] manager [O] comp [S] bad [C] service general']
sent: ['The', 'manager', 'finally', 'said', 'he', 'would', 'comp', 'the', 'two', 'glasses', 'of', 'wine', '(', 'which', 'cost', 'less', 'than', 'the', 'food', ')', ',', 'and', 'made', 'it', 'seem', 'like', 'a', 'big', 'concession', '.']
counter: {('service general', 'manager', 'bad', 'comp'): 5, ('drinks prices', 'glasses of wine', 'great', 'less than the food'): 4, ('drinks prices', 'glasses of wine', 'ok', 'less than the food'): 1}
output quads: ['[A] manager [O] comp [S] bad [C] service general', '[A] glasses of wine [O] less than the food [S] great [C] drinks prices']
multi_path: ['[A] manager [O] comp [S] bad [C] service general [SSEP] [A] glasses of wine [O] less than the food [S] great [C] drinks prices', '[O] comp [A] manager [C] service general [S] bad [SSEP] [O] less than the food [A] glasses of wine [C] drinks prices [S] great', '[A] manager [O] comp [C] service general [S] bad [SSEP] [A] glasses of wine [O] less than the food [C] drinks prices [S] great', '[O] comp [A] manager [S] bad [C] service general [SSEP] [O] less than the food [A] glasses of wine [S] great [C] drinks prices', '[O] comp [S] bad [C] service general [A] manager [SSEP] [O] less than the food [S] ok [C] drinks prices [A] glasses of wine']

task, data: asqp rest15
target: [('food quality', 'food', 'ok', 'good')]
output: ['[A] food [O] good [S] great [C] food quality', '[A] food [O] not outstanding [S] ok [C] food quality']
sent: ['The', 'food', 'is', 'very', 'good', ',', 'but', 'not', 'outstanding', '.']
counter: {('food quality', 'food', 'great', 'good'): 5, ('food quality', 'food', 'ok', 'not outstanding'): 3, ('food quality', 'food', 'bad', 'not outstanding'): 2}
output quads: ['[A] food [O] good [S] great [C] food quality', '[A] food [O] not outstanding [S] ok [C] food quality']
multi_path: ['[A] food [O] good [S] great [C] food quality [SSEP] [A] food [O] not outstanding [S] ok [C] food quality', '[O] good [A] food [C] food quality [S] great [SSEP] [O] not outstanding [A] food [C] food quality [S] bad', '[A] food [O] good [C] food quality [S] great [SSEP] [A] food [O] not outstanding [C] food quality [S] bad', '[O] good [A] food [S] great [C] food quality [SSEP] [O] not outstanding [A] food [S] ok [C] food quality', '[O] good [S] great [C] food quality [A] food [SSEP] [O] not outstanding [S] ok [C] food quality [A] food']

task, data: asqp rest15
target: [('restaurant miscellaneous', 'restaurant', 'great', 'good reputation'), ('service general', 'customer service', 'bad', 'intelligent')]
output: ['[A] customer service [O] lack of intelligent [S] bad [C] service general']
sent: ['For', 'a', 'restaurant', 'with', 'such', 'a', 'good', 'reputation', 'and', 'that', 'is', 'usually', 'so', 'packed', ',', 'there', 'was', 'no', 'reason', 'for', 'such', 'a', 'lack', 'of', 'intelligent', 'customer', 'service', '.']
counter: {('service general', 'customer service', 'bad', 'lack'): 2, ('service general', 'customer service', 'bad', 'lack of intelligent'): 3}
output quads: ['[A] customer service [O] lack of intelligent [S] bad [C] service general']
multi_path: ['[A] customer service [O] lack [S] bad [C] service general', '[O] lack of intelligent [A] customer service [C] service general [S] bad', '[A] customer service [O] lack [C] service general [S] bad', '[O] lack of intelligent [A] customer service [S] bad [C] service general', '[O] lack of intelligent [S] bad [C] service general [A] customer service']

task, data: asqp rest15
target: [('food quality', 'null', 'great', 'phenomenal'), ('food style_options', 'null', 'bad', "doesn 't look appetizing")]
output: ["[A] null [O] doesn 't look appetizing [S] bad [C] food quality", '[A] null [O] phenomenal [S] great [C] food quality']
sent: ['It', 'doesn', "'t", 'look', 'appetizing', 'as', 'it', "'s", 'covered', 'in', 'squid', 'ink', 'and', 'it', 'turns', 'your', 'lips', 'and', 'teeth', 'black', ',', 'but', 'the', 'taste', 'was', 'phenomenal', '.']
counter: {('food quality', 'null', 'bad', "doesn 't look appetizing"): 4, ('food quality', 'null', 'great', 'phenomenal'): 5, ('food style_options', 'null', 'bad', "doesn 't look appetizing"): 1}
output quads: ["[A] null [O] doesn 't look appetizing [S] bad [C] food quality", '[A] null [O] phenomenal [S] great [C] food quality']
multi_path: ["[A] it [O] doesn 't look appetizing [S] bad [C] food quality [SSEP] [A] it [O] phenomenal [S] great [C] food quality", "[O] doesn 't look appetizing [A] it [C] food quality [S] bad [SSEP] [O] phenomenal [A] it [C] food quality [S] great", "[A] it [O] doesn 't look appetizing [C] food style_options [S] bad [SSEP] [A] it [O] phenomenal [C] food quality [S] great", "[O] doesn 't look appetizing [A] it [S] bad [C] food quality [SSEP] [O] phenomenal [A] it [S] great [C] food quality", "[O] doesn 't look appetizing [S] bad [C] food quality [A] it [SSEP] [O] phenomenal [S] great [C] food quality [A] it"]

task, data: asqp rest15
target: [('food quality', 'fish tacos', 'great', 'recommend'), ('food quality', 'null', 'ok', 'ok')]
output: ['[A] fish tacos [O] ok [S] ok [C] food quality', '[A] fish tacos [O] recommend [S] great [C] food quality']
sent: ['I', 'highly', 'recommend', 'the', 'fish', 'tacos', ',', 'everything', 'else', 'was', 'ok', '.']
counter: {('food quality', 'fish tacos', 'great', 'recommend'): 5, ('food quality', 'fish tacos', 'ok', 'ok'): 5}
output quads: ['[A] fish tacos [O] recommend [S] great [C] food quality', '[A] fish tacos [O] ok [S] ok [C] food quality']
multi_path: ['[A] fish tacos [O] recommend [S] great [C] food quality [SSEP] [A] fish tacos [O] ok [S] ok [C] food quality', '[O] recommend [A] fish tacos [C] food quality [S] great [SSEP] [O] ok [A] fish tacos [C] food quality [S] ok', '[A] fish tacos [O] recommend [C] food quality [S] great [SSEP] [A] fish tacos [O] ok [C] food quality [S] ok', '[O] recommend [A] fish tacos [S] great [C] food quality [SSEP] [O] ok [A] fish tacos [S] ok [C] food quality', '[O] recommend [S] great [C] food quality [A] fish tacos [SSEP] [O] ok [S] ok [C] food quality [A] fish tacos']

task, data: asqp rest15
target: [('food prices', 'fish and chips', 'bad', 'about $ 15'), ('food prices', 'null', 'bad', 'overpriced')]
output: ['[A] fish and chips [O] overpriced [S] bad [C] food prices', '[A] null [O] overpriced [S] bad [C] food prices']
sent: ['It', 'was', 'totally', 'overpriced', '-', 'fish', 'and', 'chips', 'was', 'about', '$', '15', '...']
counter: {('food prices', 'null', 'bad', 'overpriced'): 5, ('food prices', 'fish and chips', 'bad', 'overpriced'): 5}
output quads: ['[A] null [O] overpriced [S] bad [C] food prices', '[A] fish and chips [O] overpriced [S] bad [C] food prices']
multi_path: ['[A] it [O] overpriced [S] bad [C] food prices [SSEP] [A] fish and chips [O] overpriced [S] bad [C] food prices', '[O] overpriced [A] it [C] food prices [S] bad [SSEP] [O] overpriced [A] fish and chips [C] food prices [S] bad', '[A] it [O] overpriced [C] food prices [S] bad [SSEP] [A] fish and chips [O] overpriced [C] food prices [S] bad', '[O] overpriced [A] it [S] bad [C] food prices [SSEP] [O] overpriced [A] fish and chips [S] bad [C] food prices', '[O] overpriced [S] bad [C] food prices [A] it [SSEP] [O] overpriced [S] bad [C] food prices [A] fish and chips']

task, data: asqp rest15
target: [('ambience general', 'zenkichi', 'great', 'memorable'), ('ambience general', 'zenkichi', 'great', 'quiet'), ('ambience general', 'zenkichi', 'great', 'unhurried'), ('restaurant general', 'zenkichi', 'great', 'come to zenkichi anytime')]
output: ['[A] zenkichi [O] memorable [S] great [C] restaurant general', '[A] zenkichi [O] quiet [S] great [C] ambience general', '[A] zenkichi [O] unhurried [S] great [C] ambience general']
sent: ['I', 'don', '’', 't', 'usually', 'visit', 'the', 'same', 'establishment', 'more', 'than', 'once', ',', 'what', 'more', 'twice', ',', 'but', 'I', '’', 'll', 'come', 'to', 'Zenkichi', 'anytime', 'for', 'a', 'quiet', ',', 'unhurried', 'and', 'memorable', 'dinner', '.']
counter: {('ambience general', 'zenkichi', 'great', 'quiet'): 5, ('ambience general', 'zenkichi', 'great', 'unhurried'): 5, ('restaurant general', 'zenkichi', 'great', 'memorable'): 5}
output quads: ['[A] zenkichi [O] quiet [S] great [C] ambience general', '[A] zenkichi [O] unhurried [S] great [C] ambience general', '[A] zenkichi [O] memorable [S] great [C] restaurant general']
multi_path: ['[A] zenkichi [O] quiet [S] great [C] ambience general [SSEP] [A] zenkichi [O] unhurried [S] great [C] ambience general [SSEP] [A] zenkichi [O] memorable [S] great [C] restaurant general', '[O] quiet [A] zenkichi [C] ambience general [S] great [SSEP] [O] unhurried [A] zenkichi [C] ambience general [S] great [SSEP] [O] memorable [A] zenkichi [C] restaurant general [S] great', '[A] zenkichi [O] quiet [C] ambience general [S] great [SSEP] [A] zenkichi [O] unhurried [C] ambience general [S] great [SSEP] [A] zenkichi [O] memorable [C] restaurant general [S] great', '[O] quiet [A] zenkichi [S] great [C] ambience general [SSEP] [O] unhurried [A] zenkichi [S] great [C] ambience general [SSEP] [O] memorable [A] zenkichi [S] great [C] restaurant general', '[O] quiet [S] great [C] ambience general [A] zenkichi [SSEP] [O] unhurried [S] great [C] ambience general [A] zenkichi [SSEP] [O] memorable [S] great [C] restaurant general [A] zenkichi']

task, data: asqp rest15
target: [('drinks style_options', 'beer', 'bad', 'disappointment')]
output: ['[A] tap beer [O] disappointment [S] bad [C] drinks quality', '[A] tap beer [O] no [S] bad [C] drinks quality']
sent: ['There', 'was', 'no', 'tap', 'beer', 'that', 'evening', ',', 'which', 'was', 'a', 'disappointment', '.']
counter: {('drinks quality', 'tap beer', 'bad', 'disappointment'): 4, ('drinks quality', 'tap beer', 'bad', 'no'): 3, ('drinks style_options', 'tap beer', 'bad', 'disappointment'): 1}
output quads: ['[A] tap beer [O] disappointment [S] bad [C] drinks quality', '[A] tap beer [O] no [S] bad [C] drinks quality']
multi_path: ['[A] tap beer [O] disappointment [S] bad [C] drinks quality', '[O] no [A] tap beer [C] drinks quality [S] bad [SSEP] [O] disappointment [A] tap beer [C] drinks style_options [S] bad', '[A] tap beer [O] disappointment [C] drinks quality [S] bad', '[O] no [A] tap beer [S] bad [C] drinks quality [SSEP] [O] disappointment [A] tap beer [S] bad [C] drinks quality', '[O] no [S] bad [C] drinks quality [A] tap beer [SSEP] [O] disappointment [S] bad [C] drinks quality [A] tap beer']

task, data: asqp rest15
target: [('restaurant miscellaneous', 'null', 'ok', 'always packed')]
output: ['[A] null [O] packed [S] bad [C] ambience general']
sent: ['We', "'ve", 'tried', 'before', 'but', 'it', 'always', 'packed', 'and', 'doesn', "'t", 'take', 'reservations', '.']
counter: {('restaurant miscellaneous', 'null', 'bad', 'packed'): 1, ('ambience general', 'null', 'bad', 'packed'): 4}
output quads: ['[A] null [O] packed [S] bad [C] ambience general']
multi_path: ['[A] it [O] packed [S] bad [C] restaurant miscellaneous', '[O] packed [A] it [C] ambience general [S] bad', '[A] it [O] packed [C] ambience general [S] bad', '[O] packed [A] it [S] bad [C] ambience general', '[O] packed [S] bad [C] ambience general [A] it']

task, data: asqp rest15
target: [('restaurant general', 'null', 'great', 'come here at least once')]
output: ['[A] null [O] come here [S] ok [C] restaurant miscellaneous']
sent: ['Everyone', 'must', 'come', 'here', 'at', 'least', 'once', '.']
counter: {('restaurant miscellaneous', 'null', 'ok', 'come here'): 3, ('restaurant miscellaneous', 'null', 'great', 'come here'): 2}
output quads: ['[A] null [O] come here [S] ok [C] restaurant miscellaneous']
multi_path: ['[A] it [O] come here [S] ok [C] restaurant miscellaneous', '[O] come here [A] it [C] restaurant miscellaneous [S] great', '[A] it [O] come here [C] restaurant miscellaneous [S] great', '[O] come here [A] it [S] ok [C] restaurant miscellaneous', '[O] come here [S] ok [C] restaurant miscellaneous [A] it']

task, data: asqp rest15
target: [('restaurant general', 'null', 'great', 'worth')]
output: ['[A] null [O] well worth [S] great [C] restaurant general', '[A] null [O] well worth the wait [S] bad [C] service general']
sent: ['It', 'was', 'well', 'worth', 'the', 'wait', '.']
counter: {('restaurant general', 'null', 'great', 'well worth'): 5, ('service general', 'wait', 'bad', 'well worth the wait'): 2, ('service general', 'null', 'bad', 'well worth the wait'): 3}
output quads: ['[A] null [O] well worth [S] great [C] restaurant general', '[A] null [O] well worth the wait [S] bad [C] service general']
multi_path: ['[A] it [O] well worth [S] great [C] restaurant general [SSEP] [A] wait [O] well worth the wait [S] bad [C] service general', '[O] well worth [A] it [C] restaurant general [S] great [SSEP] [O] well worth the wait [A] it [C] service general [S] bad', '[A] it [O] well worth [C] restaurant general [S] great [SSEP] [A] wait [O] well worth the wait [C] service general [S] bad', '[O] well worth [A] it [S] great [C] restaurant general [SSEP] [O] well worth the wait [A] it [S] bad [C] service general', '[O] well worth [S] great [C] restaurant general [A] it [SSEP] [O] well worth the wait [S] bad [C] service general [A] it']

task, data: asqp rest15
target: [('food prices', 'guacamole', 'bad', 'bland'), ('food quality', 'guacamole', 'bad', 'bland')]
output: ['[A] plate of bland guacamole [O] bland [S] bad [C] food prices']
sent: ['And', '$', '11', 'for', 'a', 'plate', 'of', 'bland', 'guacamole', '?']
counter: {('food prices', 'plate of bland guacamole', 'bad', 'bland'): 4, ('food quality', 'plate of bland guacamole', 'bad', 'bland'): 1}
output quads: ['[A] plate of bland guacamole [O] bland [S] bad [C] food prices']
multi_path: ['[A] plate of bland guacamole [O] bland [S] bad [C] food prices', '[O] bland [A] plate of bland guacamole [C] food prices [S] bad', '[A] plate of bland guacamole [O] bland [C] food prices [S] bad', '[O] bland [A] plate of bland guacamole [S] bad [C] food prices', '[O] bland [S] bad [C] food quality [A] plate of bland guacamole']

task, data: asqp rest15
target: [('restaurant general', 'null', 'bad', 'would not go back')]
output: ['[A] null [O] not go back [S] bad [C] restaurant general']
sent: ['Probably', 'would', 'not', 'go', 'back', 'here', '.']
counter: {('restaurant general', 'null', 'bad', 'not go back'): 5}
output quads: ['[A] null [O] not go back [S] bad [C] restaurant general']
multi_path: ['[A] it [O] not go back [S] bad [C] restaurant general', '[O] not go back [A] it [C] restaurant general [S] bad', '[A] it [O] not go back [C] restaurant general [S] bad', '[O] not go back [A] it [S] bad [C] restaurant general', '[O] not go back [S] bad [C] restaurant general [A] it']

task, data: asqp rest15
target: [('ambience general', 'modern japanese brasserie', 'great', 'romantic'), ('restaurant general', 'modern japanese brasserie', 'great', 'favorite')]
output: ['[A] japanese brasserie [O] favorite [S] great [C] restaurant general', '[A] null [O] romantic [S] great [C] ambience general']
sent: ['This', 'is', 'undoubtedly', 'my', 'favorite', 'modern', 'Japanese', 'brasserie', '(', 'that', 'don', '’', 't', 'serve', 'sushi', ')', ',', 'and', 'in', 'my', 'opinion', ',', 'one', 'of', 'the', 'most', 'romantic', 'restaurants', 'in', 'the', 'city', '!']
counter: {('restaurant general', 'japanese brasserie', 'great', 'favorite'): 4, ('ambience general', 'japanese brasserie', 'great', 'romantic'): 2, ('ambience general', 'null', 'great', 'romantic'): 3, ('restaurant general', 'null', 'great', 'favorite'): 1}
output quads: ['[A] japanese brasserie [O] favorite [S] great [C] restaurant general', '[A] null [O] romantic [S] great [C] ambience general']
multi_path: ['[A] japanese brasserie [O] favorite [S] great [C] restaurant general [SSEP] [A] japanese brasserie [O] romantic [S] great [C] ambience general', '[O] favorite [A] japanese brasserie [C] restaurant general [S] great [SSEP] [O] romantic [A] it [C] ambience general [S] great', '[A] japanese brasserie [O] favorite [C] restaurant general [S] great [SSEP] [A] japanese brasserie [O] romantic [C] ambience general [S] great', '[O] favorite [A] japanese brasserie [S] great [C] restaurant general [SSEP] [O] romantic [A] it [S] great [C] ambience general', '[O] favorite [S] great [C] restaurant general [A] it [SSEP] [O] romantic [S] great [C] ambience general [A] it']

task, data: asqp rest15
target: [('food prices', 'appetizer of olives', 'ok', 'free'), ('food quality', 'appetizer of olives', 'bad', 'disappointing'), ('food quality', 'bread', 'bad', 'horrible')]
output: ['[A] appetizer of olives [O] disappointing [S] bad [C] food quality', '[A] bread [O] cold [S] bad [C] food quality', '[A] bread [O] hard [S] bad [C] food quality', '[A] bread [O] horrible [S] bad [C] food quality']
sent: ['The', 'bread', 'we', 'received', 'was', 'horrible', '-', 'rock', 'hard', 'and', 'cold', '-', 'and', 'the', '``', 'free', '``', 'appetizer', 'of', 'olives', 'was', 'disappointing', '.']
counter: {('food quality', 'bread', 'bad', 'horrible'): 5, ('food quality', 'bread', 'bad', 'rock hard'): 2, ('food quality', 'bread', 'bad', 'cold'): 5, ('food quality', 'appetizer of olives', 'bad', 'disappointing'): 4, ('food quality', 'bread', 'bad', 'hard'): 3, ('food quality', 'free  appetizer of olives', 'bad', 'disappointing'): 1}
output quads: ['[A] bread [O] horrible [S] bad [C] food quality', '[A] bread [O] cold [S] bad [C] food quality', '[A] appetizer of olives [O] disappointing [S] bad [C] food quality', '[A] bread [O] hard [S] bad [C] food quality']
multi_path: ['[A] bread [O] horrible [S] bad [C] food quality [SSEP] [A] bread [O] rock hard [S] bad [C] food quality [SSEP] [A] bread [O] cold [S] bad [C] food quality [SSEP] [A] appetizer of olives [O] disappointing [S] bad [C] food quality', '[O] horrible [A] bread [C] food quality [S] bad [SSEP] [O] hard [A] bread [C] food quality [S] bad [SSEP] [O] cold [A] bread [C] food quality [S] bad [SSEP] [O] disappointing [A] appetizer of olives [C] food quality [S] bad', '[A] bread [O] horrible [C] food quality [S] bad [SSEP] [A] bread [O] rock hard [C] food quality [S] bad [SSEP] [A] bread [O] cold [C] food quality [S] bad [SSEP] [A] appetizer of olives [O] disappointing [C] food quality [S] bad', '[O] horrible [A] bread [S] bad [C] food quality [SSEP] [O] hard [A] bread [S] bad [C] food quality [SSEP] [O] cold [A] bread [S] bad [C] food quality [SSEP] [O] disappointing [A] appetizer of olives [S] bad [C] food quality', '[O] horrible [S] bad [C] food quality [A] bread [SSEP] [O] hard [S] bad [C] food quality [A] bread [SSEP] [O] cold [S] bad [C] food quality [A] bread [SSEP] [O] disappointing [S] bad [C] food quality [A]  free  appetizer of olives']

task, data: asqp rest15
target: [('restaurant general', 'restaurant', 'bad', 'expensive'), ('restaurant prices', 'restaurant', 'bad', 'expensive')]
output: ['[A] restaurant [O] too expensive [S] bad [C] restaurant prices', '[A] restaurant [O] worth [S] great [C] restaurant general']
sent: ['I', 'read', 'reviews', 'that', 'called', 'the', 'restaurant', 'too', 'expensive', 'and', 'I', 'thought', 'to', 'myself', ',', 'but', 'may', 'be', 'it', 'is', 'worth', 'it', '.']
counter: {('restaurant prices', 'restaurant', 'bad', 'too expensive'): 5, ('restaurant general', 'restaurant', 'great', 'worth'): 5}
output quads: ['[A] restaurant [O] too expensive [S] bad [C] restaurant prices', '[A] restaurant [O] worth [S] great [C] restaurant general']
multi_path: ['[A] restaurant [O] too expensive [S] bad [C] restaurant prices [SSEP] [A] restaurant [O] worth [S] great [C] restaurant general', '[O] too expensive [A] restaurant [C] restaurant prices [S] bad [SSEP] [O] worth [A] restaurant [C] restaurant general [S] great', '[A] restaurant [O] too expensive [C] restaurant prices [S] bad [SSEP] [A] restaurant [O] worth [C] restaurant general [S] great', '[O] too expensive [A] restaurant [S] bad [C] restaurant prices [SSEP] [O] worth [A] restaurant [S] great [C] restaurant general', '[O] too expensive [S] bad [C] restaurant prices [A] restaurant [SSEP] [O] worth [S] great [C] restaurant general [A] restaurant']

task, data: asqp rest15
target: [('restaurant general', 'restaurant', 'great', 'bad')]
output: ['[A] restaurant [O] surprised [S] bad [C] restaurant general']
sent: ['I', 'must', 'say', 'I', 'am', 'surprised', 'by', 'the', 'bad', 'reviews', 'of', 'the', 'restaurant', 'earlier', 'in', 'the', 'year', ',', 'though', '.']
counter: {('restaurant general', 'restaurant', 'bad', 'surprised'): 5}
output quads: ['[A] restaurant [O] surprised [S] bad [C] restaurant general']
multi_path: ['[A] restaurant [O] surprised [S] bad [C] restaurant general', '[O] surprised [A] restaurant [C] restaurant general [S] bad', '[A] restaurant [O] surprised [C] restaurant general [S] bad', '[O] surprised [A] restaurant [S] bad [C] restaurant general', '[O] surprised [S] bad [C] restaurant general [A] restaurant']

task, data: asqp rest15
target: [('food quality', 'null', 'bad', 'unhygienic')]
output: ['[A] null [O] unhygienic [S] bad [C] ambience general']
sent: ['Unhygienic']
counter: {('ambience general', 'null', 'bad', 'unhygienic'): 5}
output quads: ['[A] null [O] unhygienic [S] bad [C] ambience general']
multi_path: ['[A] it [O] unhygienic [S] bad [C] ambience general', '[O] unhygienic [A] it [C] ambience general [S] bad', '[A] it [O] unhygienic [C] ambience general [S] bad', '[O] unhygienic [A] it [S] bad [C] ambience general', '[O] unhygienic [S] bad [C] ambience general [A] it']

task, data: asqp rest15
target: [('food prices', 'food', 'great', 'excellent'), ('food quality', 'food', 'great', 'excellent')]
output: ['[A] food [O] excellent [S] great [C] food quality', '[A] food [O] great [S] great [C] food prices']
sent: ['Excellent', 'food', 'for', 'great', 'prices']
counter: {('food quality', 'food', 'great', 'excellent'): 5, ('food prices', 'food', 'great', 'great'): 5}
output quads: ['[A] food [O] excellent [S] great [C] food quality', '[A] food [O] great [S] great [C] food prices']
multi_path: ['[A] food [O] excellent [S] great [C] food quality [SSEP] [A] food [O] great [S] great [C] food prices', '[O] excellent [A] food [C] food quality [S] great [SSEP] [O] great [A] food [C] food prices [S] great', '[A] food [O] excellent [C] food quality [S] great [SSEP] [A] food [O] great [C] food prices [S] great', '[O] excellent [A] food [S] great [C] food quality [SSEP] [O] great [A] food [S] great [C] food prices', '[O] excellent [S] great [C] food quality [A] food [SSEP] [O] great [S] great [C] food prices [A] food']

task, data: asqp rest15
target: [('restaurant prices', 'null', 'bad', '$ 170')]
output: ['[A] toilet [O] down the toilet [S] bad [C] food prices']
sent: ['$', '170', 'down', 'the', 'toilet', '...']
counter: {('food prices', 'toilet', 'bad', 'down'): 2, ('food prices', 'toilet', 'bad', 'down the toilet'): 3}
output quads: ['[A] toilet [O] down the toilet [S] bad [C] food prices']
multi_path: ['[A] toilet [O] down [S] bad [C] food prices', '[O] down the toilet [A] toilet [C] food prices [S] bad', '[A] toilet [O] down [C] food prices [S] bad', '[O] down the toilet [A] toilet [S] bad [C] food prices', '[O] down the toilet [S] bad [C] food prices [A] toilet']

task, data: asqp rest15
target: [('service general', 'null', 'bad', 'rush')]
output: ['[A] null [O] rush us along [S] bad [C] service general']
sent: ['They', 'seemed', 'to', 'continue', 'to', 'rush', 'us', 'along', ',', 'taking', 'plates', 'without', 'asking', 'if', 'we', 'were', 'done', '(', 'my', 'sister', 'still', 'had', 'her', 'fork', 'in', 'hand', ')', '.']
counter: {('service general', 'null', 'bad', 'rush us along'): 5}
output quads: ['[A] null [O] rush us along [S] bad [C] service general']
multi_path: ['[A] it [O]  rush us along [S] bad [C] service general', '[O]  rush us along [A] it [C] service general [S] bad', '[A] it [O]  rush us along [C] service general [S] bad', '[O]  rush us along [A] it [S] bad [C] service general', '[O]  rush us along [S] bad [C] service general [A] it']

task, data: asqp rest15
target: [('restaurant miscellaneous', 'location', 'ok', 'expect'), ('restaurant prices', 'location', 'ok', 'expect')]
output: ['[A] null [O] not what i would expect [S] bad [C] restaurant prices', '[A] null [O] prestige [S] bad [C] restaurant general']
sent: ['Not', 'what', 'I', 'would', 'expect', 'for', 'the', 'price', 'and', 'prestige', 'of', 'this', 'location', '.']
counter: {('restaurant prices', 'null', 'bad', 'not what i would expect'): 5, ('restaurant general', 'null', 'bad', 'prestige'): 4, ('restaurant general', 'location', 'bad', 'prestige'): 1}
output quads: ['[A] null [O] not what i would expect [S] bad [C] restaurant prices', '[A] null [O] prestige [S] bad [C] restaurant general']
multi_path: ['[A] it [O] not what i would expect [S] bad [C] restaurant prices [SSEP] [A] it [O] prestige [S] bad [C] restaurant general', '[O] not what i would expect [A] it [C] restaurant prices [S] bad [SSEP] [O] prestige [A] it [C] restaurant general [S] bad', '[A] it [O] not what i would expect [C] restaurant prices [S] bad [SSEP] [A] it [O] prestige [C] restaurant general [S] bad', '[O] not what i would expect [A] it [S] bad [C] restaurant prices [SSEP] [O] prestige [A] it [S] bad [C] restaurant general', '[O] not what i would expect [S] bad [C] restaurant prices [A] it [SSEP] [O] prestige [S] bad [C] restaurant general [A] location']

task, data: asqp rest15
target: [('food quality', 'japanese food', 'great', 'delicious'), ('food style_options', 'japanese food', 'great', 'inventive'), ('food style_options', 'rolls', 'great', 'creative')]
output: ['[A] japanese food [O] delicious [S] great [C] food quality', '[A] rolls [O] creative [S] great [C] food style_options']
sent: ['The', 'rolls', 'are', 'creative', 'and', 'I', 'have', 'yet', 'to', 'find', 'another', 'sushi', 'place', 'that', 'serves', 'up', 'more', 'inventive', 'yet', 'delicious', 'japanese', 'food', '.']
counter: {('food style_options', 'rolls', 'great', 'creative'): 5, ('food quality', 'japanese food', 'great', 'delicious'): 5}
output quads: ['[A] rolls [O] creative [S] great [C] food style_options', '[A] japanese food [O] delicious [S] great [C] food quality']
multi_path: ['[A] rolls [O] creative [S] great [C] food style_options [SSEP] [A] japanese food [O] delicious [S] great [C] food quality', '[O] creative [A] rolls [C] food style_options [S] great [SSEP] [O] delicious [A] japanese food [C] food quality [S] great', '[A] rolls [O] creative [C] food style_options [S] great [SSEP] [A] japanese food [O] delicious [C] food quality [S] great', '[O] creative [A] rolls [S] great [C] food style_options [SSEP] [O] delicious [A] japanese food [S] great [C] food quality', '[O] creative [S] great [C] food style_options [A] rolls [SSEP] [O] delicious [S] great [C] food quality [A] japanese food']

task, data: asqp rest15
target: [('service general', 'customer service', 'bad', 'non-existent'), ('service general', 'staff', 'bad', 'rude')]
output: ['[A] customer service [O] non-existent [S] bad [C] service general', '[A] staff [O] horrible rude [S] bad [C] service general']
sent: ['Shame', 'on', 'this', 'place', 'for', 'the', 'horrible', 'rude', 'staff', 'and', 'non-existent', 'customer', 'service', '.']
counter: {('service general', 'staff', 'bad', 'horrible rude'): 5, ('service general', 'customer service', 'bad', 'non-existent'): 5}
output quads: ['[A] staff [O] horrible rude [S] bad [C] service general', '[A] customer service [O] non-existent [S] bad [C] service general']
multi_path: ['[A] staff [O] horrible rude [S] bad [C] service general [SSEP] [A] customer service [O] non-existent [S] bad [C] service general', '[O] horrible rude [A] staff [C] service general [S] bad [SSEP] [O] non-existent [A] customer service [C] service general [S] bad', '[A] staff [O] horrible rude [C] service general [S] bad [SSEP] [A] customer service [O] non-existent [C] service general [S] bad', '[O] horrible rude [A] staff [S] bad [C] service general [SSEP] [O] non-existent [A] customer service [S] bad [C] service general', '[O] horrible rude [S] bad [C] service general [A] staff [SSEP] [O] non-existent [S] bad [C] service general [A] customer service']

task, data: asqp rest15
target: [('food quality', 'dog', 'great', 'organic'), ('restaurant miscellaneous', 'establishment', 'great', 'eco friendly')]
output: ['[A] dog [O] awesome organic [S] great [C] food quality', '[A] establishment [O] conscious eco friendly [S] great [C] restaurant general']
sent: ['An', 'awesome', 'organic', 'dog', ',', 'and', 'a', 'conscious', 'eco', 'friendly', 'establishment', '.']
counter: {('food quality', 'organic dog', 'great', 'awesome'): 2, ('restaurant general', 'establishment', 'great', 'conscious eco friendly'): 4, ('food quality', 'dog', 'great', 'awesome organic'): 3, ('restaurant miscellaneous', 'establishment', 'great', 'conscious eco friendly'): 1}
output quads: ['[A] establishment [O] conscious eco friendly [S] great [C] restaurant general', '[A] dog [O] awesome organic [S] great [C] food quality']
multi_path: ['[A] organic dog [O] awesome [S] great [C] food quality [SSEP] [A] establishment [O] conscious eco friendly [S] great [C] restaurant general', '[O] awesome organic [A] dog [C] food quality [S] great [SSEP] [O] conscious eco friendly [A] establishment [C] restaurant general [S] great', '[A] organic dog [O] awesome [C] food quality [S] great [SSEP] [A] establishment [O] conscious eco friendly [C] restaurant general [S] great', '[O] awesome organic [A] dog [S] great [C] food quality [SSEP] [O] conscious eco friendly [A] establishment [S] great [C] restaurant general', '[O] awesome organic [S] great [C] food quality [A] dog [SSEP] [O] conscious eco friendly [S] great [C] restaurant miscellaneous [A] establishment']

task, data: asqp rest15
target: [('food quality', 'rolls', 'great', 'good creative'), ('food style_options', 'rolls', 'great', 'good creative')]
output: ['[A] creative rolls [O] good [S] great [C] food quality']
sent: ['Good', 'creative', 'rolls', '!']
counter: {('food quality', 'creative rolls', 'great', 'good'): 5}
output quads: ['[A] creative rolls [O] good [S] great [C] food quality']
multi_path: ['[A] creative rolls [O] good [S] great [C] food quality', '[O] good [A] creative rolls [C] food quality [S] great', '[A] creative rolls [O] good [C] food quality [S] great', '[O] good [A] creative rolls [S] great [C] food quality', '[O] good [S] great [C] food quality [A] creative rolls']

task, data: asqp rest15
target: [('restaurant miscellaneous', 'null', 'great', 'fabulous')]
output: ['[A] null [O] fabulous [S] great [C] restaurant general']
sent: ['For', 'a', 'Fabulous', 'Wedding', '!']
counter: {('restaurant general', 'null', 'great', 'fabulous'): 5}
output quads: ['[A] null [O] fabulous [S] great [C] restaurant general']
multi_path: ['[A] it [O] fabulous [S] great [C] restaurant general', '[O] fabulous [A] it [C] restaurant general [S] great', '[A] it [O] fabulous [C] restaurant general [S] great', '[O] fabulous [A] it [S] great [C] restaurant general', '[O] fabulous [S] great [C] restaurant general [A] it']

task, data: asqp rest15
target: [('restaurant general', 'casa la femme', 'bad', 'like no other dining experience')]
output: ['[A] casa la femme [O] like no other dining experience [S] great [C] restaurant general']
sent: ['I', 'agree', 'that', 'dining', 'at', 'Casa', 'La', 'Femme', 'is', 'like', 'no', 'other', 'dining', 'experience', '!']
counter: {('restaurant general', 'dining', 'great', 'like no other dining experience'): 2, ('restaurant general', 'casa la femme', 'great', 'like no other dining experience'): 3}
output quads: ['[A] casa la femme [O] like no other dining experience [S] great [C] restaurant general']
multi_path: ['[A] dining [O] like no other dining experience [S] great [C] restaurant general', '[O] like no other dining experience [A] casa la femme [C] restaurant general [S] great', '[A] dining [O] like no other dining experience [C] restaurant general [S] great', '[O] like no other dining experience [A] casa la femme [S] great [C] restaurant general', '[O] like no other dining experience [S] great [C] restaurant general [A] casa la femme']

task, data: asqp rest15
target: [('restaurant general', 'village underground', 'great', 'go there all the time')]
output: ['[A] null [O] go there all the time [S] great [C] restaurant general']
sent: ['I', 'came', 'across', 'Village', 'Underground', 'by', 'accident', ',', 'now', 'I', 'go', 'there', 'all', 'the', 'time', '.']
counter: {('restaurant general', 'village underground', 'great', 'go there all the time'): 2, ('restaurant general', 'null', 'great', 'go there all the time'): 3}
output quads: ['[A] null [O] go there all the time [S] great [C] restaurant general']
multi_path: ['[A] village underground [O] go there all the time [S] great [C] restaurant general', '[O] go there all the time [A] it [C] restaurant general [S] great', '[A] village underground [O] go there all the time [C] restaurant general [S] great', '[O] go there all the time [A] it [S] great [C] restaurant general', '[O] go there all the time [S] great [C] restaurant general [A] it']

task, data: asqp rest15
target: [('food quality', 'food', 'great', 'excellent'), ('restaurant general', 'the four seasons', 'bad', 'dissappointed'), ('service general', 'service', 'great', 'excellent')]
output: ['[A] food [O] excellent [S] great [C] food quality', '[A] service [O] excellent [S] great [C] service general']
sent: ['The', 'food', 'was', 'excellent', 'as', 'well', 'as', 'service', ',', 'however', ',', 'I', 'left', 'The', 'Four', 'Seasons', 'very', 'dissappointed', '.']
counter: {('food quality', 'food', 'great', 'excellent'): 5, ('service general', 'service', 'great', 'excellent'): 5, ('ambience general', 'four seasons', 'bad', 'dissappointed'): 2, ('restaurant general', 'null', 'bad', 'dissappointed'): 2, ('ambience general', 'null', 'bad', 'dissappointed'): 1}
output quads: ['[A] food [O] excellent [S] great [C] food quality', '[A] service [O] excellent [S] great [C] service general']
multi_path: ['[A] food [O] excellent [S] great [C] food quality [SSEP] [A] service [O] excellent [S] great [C] service general [SSEP] [A] four seasons [O] dissappointed [S] bad [C] ambience general', '[O] excellent [A] food [C] food quality [S] great [SSEP] [O] excellent [A] service [C] service general [S] great [SSEP] [O] dissappointed [A] it [C] restaurant general [S] bad', '[A] food [O] excellent [C] food quality [S] great [SSEP] [A] service [O] excellent [C] service general [S] great [SSEP] [A] it [O] dissappointed [C] restaurant general [S] bad', '[O] excellent [A] food [S] great [C] food quality [SSEP] [O] excellent [A] service [S] great [C] service general [SSEP] [O] dissappointed [A] it [S] bad [C] ambience general', '[O] excellent [S] great [C] food quality [A] food [SSEP] [O] excellent [S] great [C] service general [A] service [SSEP] [O] dissappointed [S] bad [C] ambience general [A] four seasons']

task, data: asqp rest15
target: [('service general', 'wait', 'ok', 'can not complain too much')]
output: ['[A] wait [O] can not complain too much [S] bad [C] service general']
sent: ['We', 'did', 'arrive', 'late', 'for', 'our', 'reservation', 'so', 'I', 'can', 'not', 'complain', 'too', 'much', 'about', 'the', 'wait', 'for', 'a', 'table', '.']
counter: {('service general', 'wait', 'bad', 'can not complain too much'): 5}
output quads: ['[A] wait [O] can not complain too much [S] bad [C] service general']
multi_path: ['[A] wait [O] can not complain too much [S] bad [C] service general', '[O] can not complain too much [A] wait [C] service general [S] bad', '[A] wait [O] can not complain too much [C] service general [S] bad', '[O] can not complain too much [A] wait [S] bad [C] service general', '[O] can not complain too much [S] bad [C] service general [A] wait']

task, data: asqp rest15
target: [('food quality', 'food', 'bad', 'our wallets were empy and so were our stomachs'), ('restaurant miscellaneous', 'null', 'bad', 'missed'), ('restaurant prices', 'null', 'bad', 'left our wallets were empy')]
output: ['[A] null [O] empy [S] bad [C] restaurant prices', '[A] show [O] missed [S] bad [C] ambience general']
sent: ['By', 'the', 'time', 'we', 'left', 'our', 'wallets', 'were', 'empy', 'and', 'so', 'were', 'our', 'stomachs', 'AND', 'we', 'missed', 'the', 'show', 'we', 'were', 'supposed', 'to', 'see', 'following', 'our', 'dinner', ',', 'which', 'would', 'have', 'been', 'acceptable', 'if', 'we', 'got', 'to', 'enjoy', 'the', 'experience', 'of', 'good', 'food', 'and', 'belly', 'dancers', '!']
counter: {('restaurant prices', 'null', 'bad', 'empy'): 5, ('restaurant miscellaneous', 'null', 'bad', 'missed'): 2, ('ambience general', 'show', 'bad', 'missed'): 3}
output quads: ['[A] null [O] empy [S] bad [C] restaurant prices', '[A] show [O] missed [S] bad [C] ambience general']
multi_path: ['[A] it [O] empy [S] bad [C] restaurant prices [SSEP] [A] it [O] missed [S] bad [C] restaurant miscellaneous', '[O] empy [A] it [C] restaurant prices [S] bad [SSEP] [O] missed [A] show [C] ambience general [S] bad', '[A] it [O] empy [C] restaurant prices [S] bad [SSEP] [A] it [O] missed [C] restaurant miscellaneous [S] bad', '[O] empy [A] it [S] bad [C] restaurant prices [SSEP] [O] missed [A] show [S] bad [C] ambience general', '[O] empy [S] bad [C] restaurant prices [A] it [SSEP] [O] missed [S] bad [C] ambience general [A] show']

task, data: asqp rest15
target: [('restaurant general', 'null', 'bad', 'go somewhere else')]
output: ['[A] null [O] save [S] bad [C] restaurant prices']
sent: ['Save', 'your', 'money', 'and', 'your', 'time', 'and', 'go', 'somewhere', 'else', '.']
counter: {('restaurant prices', 'null', 'bad', 'save'): 5}
output quads: ['[A] null [O] save [S] bad [C] restaurant prices']
multi_path: ['[A] it [O] save [S] bad [C] restaurant prices', '[O] save [A] it [C] restaurant prices [S] bad', '[A] it [O] save [C] restaurant prices [S] bad', '[O] save [A] it [S] bad [C] restaurant prices', '[O] save [S] bad [C] restaurant prices [A] it']

task, data: asqp rest15
target: [('ambience general', 'mirrors', 'bad', 'confusing'), ('food quality', 'modern japanese food', 'great', 'go-to for')]
output: ['[A] mirrors [O] confusing [S] bad [C] ambience general']
sent: ['Despite', 'the', 'confusing', 'mirrors', 'this', 'will', 'likely', 'be', 'my', 'go-to', 'for', 'modern', 'Japanese', 'food', 'for', 'the', 'foreseeable', 'future', '.']
counter: {('ambience general', 'mirrors', 'bad', 'confusing'): 5, ('restaurant general', 'null', 'great', 'my go-to'): 2, ('restaurant general', 'null', 'great', 'go-to'): 2, ('food quality', 'null', 'great', 'go-to'): 1}
output quads: ['[A] mirrors [O] confusing [S] bad [C] ambience general']
multi_path: ['[A] mirrors [O] confusing [S] bad [C] ambience general [SSEP] [A] it [O] my go-to [S] great [C] restaurant general', '[O] confusing [A] mirrors [C] ambience general [S] bad [SSEP] [O] go-to [A] it [C] restaurant general [S] great', '[A] mirrors [O] confusing [C] ambience general [S] bad [SSEP] [A] it [O] my go-to [C] restaurant general [S] great', '[O] confusing [A] mirrors [S] bad [C] ambience general [SSEP] [O] go-to [A] it [S] great [C] restaurant general', '[O] confusing [S] bad [C] ambience general [A] mirrors [SSEP] [O] go-to [S] great [C] food quality [A] it']

task, data: asqp rest15
target: [('food quality', 'margherita pizza', 'great', 'looove'), ('restaurant general', 'east village pizza', 'great', 'love')]
output: ['[A] east village pizza [O] looove [S] great [C] food quality', '[A] margherita pizza [O] love [S] great [C] food quality']
sent: ['i', 'love', 'margherita', 'pizza', '–', 'i', 'looove', 'east', 'village', 'pizza']
counter: {('food quality', 'margherita pizza', 'great', 'love'): 5, ('food quality', 'east village pizza', 'great', 'looove'): 5}
output quads: ['[A] margherita pizza [O] love [S] great [C] food quality', '[A] east village pizza [O] looove [S] great [C] food quality']
multi_path: ['[A] margherita pizza [O] love [S] great [C] food quality [SSEP] [A] east village pizza [O] looove [S] great [C] food quality', '[O] love [A] margherita pizza [C] food quality [S] great [SSEP] [O] looove [A] east village pizza [C] food quality [S] great', '[A] margherita pizza [O] love [C] food quality [S] great [SSEP] [A] east village pizza [O] looove [C] food quality [S] great', '[O] love [A] margherita pizza [S] great [C] food quality [SSEP] [O] looove [A] east village pizza [S] great [C] food quality', '[O] love [S] great [C] food quality [A] margherita pizza [SSEP] [O] looove [S] great [C] food quality [A] east village pizza']

task, data: asqp rest15
target: [('restaurant miscellaneous', 'indian place', 'great', 'great')]
output: ['[A] null [O] great [S] great [C] restaurant miscellaneous']
sent: ['I', 'noticed', 'alot', 'of', 'indian', 'people', 'eatting', 'there', 'which', 'is', 'a', 'great', 'sign', 'for', 'an', 'indian', 'place', '!']
counter: {('restaurant miscellaneous', 'null', 'great', 'great'): 5}
output quads: ['[A] null [O] great [S] great [C] restaurant miscellaneous']
multi_path: ['[A] it [O] great [S] great [C] restaurant miscellaneous', '[O] great [A] it [C] restaurant miscellaneous [S] great', '[A] it [O] great [C] restaurant miscellaneous [S] great', '[O] great [A] it [S] great [C] restaurant miscellaneous', '[O] great [S] great [C] restaurant miscellaneous [A] it']

task, data: asqp rest15
target: [('food quality', 'spinach', 'great', 'fresh')]
output: ['[A] spinach [O] fresh [S] great [C] food quality', '[A] spinach [O] not frozen [S] great [C] food quality']
sent: ['the', 'spinach', 'is', 'fresh', ',', 'definately', 'not', 'frozen', '...']
counter: {('food quality', 'spinach', 'great', 'fresh'): 5, ('food quality', 'spinach', 'great', 'not frozen'): 5}
output quads: ['[A] spinach [O] fresh [S] great [C] food quality', '[A] spinach [O] not frozen [S] great [C] food quality']
multi_path: ['[A] spinach [O] fresh [S] great [C] food quality [SSEP] [A] spinach [O] not frozen [S] great [C] food quality', '[O] fresh [A] spinach [C] food quality [S] great [SSEP] [O] not frozen [A] spinach [C] food quality [S] great', '[A] spinach [O] fresh [C] food quality [S] great [SSEP] [A] spinach [O] not frozen [C] food quality [S] great', '[O] fresh [A] spinach [S] great [C] food quality [SSEP] [O] not frozen [A] spinach [S] great [C] food quality', '[O] fresh [S] great [C] food quality [A] spinach [SSEP] [O] not frozen [S] great [C] food quality [A] spinach']

task, data: asqp rest15
target: [('restaurant general', 'null', 'great', 'recommend')]
output: ['[A] null [O] highly recommend [S] great [C] restaurant general']
sent: ['Highly', 'recommend', 'it', '!']
counter: {('restaurant general', 'null', 'great', 'highly recommend'): 5}
output quads: ['[A] null [O] highly recommend [S] great [C] restaurant general']
multi_path: ['[A] it [O] highly recommend [S] great [C] restaurant general', '[O] highly recommend [A] it [C] restaurant general [S] great', '[A] it [O] highly recommend [C] restaurant general [S] great', '[O] highly recommend [A] it [S] great [C] restaurant general', '[O] highly recommend [S] great [C] restaurant general [A] it']

task, data: asqp rest15
target: [('service general', 'servers', 'bad', 'perfected')]
output: ['[A] servers [O] ashamed [S] bad [C] service general', '[A] servers [O] guilty [S] bad [C] service general']
sent: ['The', 'servers', 'at', 'Flatbush', 'Farm', 'appear', 'to', 'have', 'perfected', 'that', 'ghastly', 'technique', 'of', 'making', 'you', 'feel', 'guilty', 'and', 'ashamed', 'for', 'deigning', 'to', 'attract', 'their', 'attention', '.']
counter: {('service general', 'servers', 'bad', 'guilty'): 5, ('service general', 'servers', 'bad', 'ashamed'): 5}
output quads: ['[A] servers [O] guilty [S] bad [C] service general', '[A] servers [O] ashamed [S] bad [C] service general']
multi_path: ['[A] servers [O] guilty [S] bad [C] service general [SSEP] [A] servers [O] ashamed [S] bad [C] service general', '[O] guilty [A] servers [C] service general [S] bad [SSEP] [O] ashamed [A] servers [C] service general [S] bad', '[A] servers [O] guilty [C] service general [S] bad [SSEP] [A] servers [O] ashamed [C] service general [S] bad', '[O] guilty [A] servers [S] bad [C] service general [SSEP] [O] ashamed [A] servers [S] bad [C] service general', '[O] guilty [S] bad [C] service general [A] servers [SSEP] [O] ashamed [S] bad [C] service general [A] servers']

task, data: asqp rest15
target: [('service general', 'null', 'bad', 'no apology')]
output: ['[A] null [O] nothing [S] bad [C] service general']
sent: ['Guess', 'what', ',', 'I', 'waited', 'for', 'TWENTY', 'minutes', 'before', 'she', 'came', 'over', 'and', 'when', 'she', 'finally', 'did', ',', 'she', 'says', ',', '``', 'oh', 'well', ',', 'I', 'wish', 'you', 'would', 'have', 'said', 'something', 'earlier', '``', 'No', 'apology', ',', 'nothing', '.']
counter: {('service general', 'null', 'bad', 'nothing'): 5}
output quads: ['[A] null [O] nothing [S] bad [C] service general']
multi_path: ['[A] it [O] nothing [S] bad [C] service general', '[O] nothing [A] it [C] service general [S] bad', '[A] it [O] nothing [C] service general [S] bad', '[O] nothing [A] it [S] bad [C] service general', '[O] nothing [S] bad [C] service general [A] it']

task, data: asqp rest15
target: [('food style_options', 'japanese tapas', 'bad', "doesn't work")]
output: ["[A] japanese tapas [O] doesn't work [S] bad [C] food quality"]
sent: ['The', 'concept', 'of', 'japanese', 'tapas', 'is', 'newly', 'created', 'and', 'clearly', 'does', "n't", 'work', '.']
counter: {('food quality', 'japanese tapas', 'bad', "doesn't work"): 5}
output quads: ["[A] japanese tapas [O] doesn't work [S] bad [C] food quality"]
multi_path: ["[A] japanese tapas [O] doesn't work [S] bad [C] food quality", "[O] doesn't work [A] japanese tapas [C] food quality [S] bad", "[A] japanese tapas [O] doesn't work [C] food quality [S] bad", "[O] doesn't work [A] japanese tapas [S] bad [C] food quality", "[O] doesn't work [S] bad [C] food quality [A] japanese tapas"]

task, data: asqp rest15
target: [('food quality', 'food', 'great', 'tasty')]
output: ['[A] food [O] delicious [S] great [C] food quality', '[A] food [O] tasty [S] great [C] food quality']
sent: ['for', '7', 'years', 'they', 'have', 'put', 'out', 'the', 'most', 'tasty', ',', 'most', 'delicious', 'food', 'and', 'kept', 'it', 'that', 'way', '...']
counter: {('food quality', 'food', 'great', 'tasty'): 5, ('food quality', 'food', 'great', 'delicious'): 5}
output quads: ['[A] food [O] tasty [S] great [C] food quality', '[A] food [O] delicious [S] great [C] food quality']
multi_path: ['[A] food [O] tasty [S] great [C] food quality [SSEP] [A] food [O] delicious [S] great [C] food quality', '[O] tasty [A] food [C] food quality [S] great [SSEP] [O] delicious [A] food [C] food quality [S] great', '[A] food [O] tasty [C] food quality [S] great [SSEP] [A] food [O] delicious [C] food quality [S] great', '[O] tasty [A] food [S] great [C] food quality [SSEP] [O] delicious [A] food [S] great [C] food quality', '[O] tasty [S] great [C] food quality [A] food [SSEP] [O] delicious [S] great [C] food quality [A] food']

task, data: asqp rest15
target: [('restaurant miscellaneous', 'null', 'bad', 'unfortunately')]
output: ['[A] null [O] unfortunately [S] bad [C] ambience general']
sent: ['We', 'didn', "'t", 'look', 'like', 'the', 'other', 'patrons', 'in', 'there', 'so', 'unfortunately', 'I', 'think', 'that', 'may', 'have', 'been', 'part', 'of', 'the', 'problem', '.']
counter: {('ambience general', 'null', 'bad', 'unfortunately'): 5}
output quads: ['[A] null [O] unfortunately [S] bad [C] ambience general']
multi_path: ['[A] it [O] unfortunately [S] bad [C] ambience general', '[O] unfortunately [A] it [C] ambience general [S] bad', '[A] it [O] unfortunately [C] ambience general [S] bad', '[O] unfortunately [A] it [S] bad [C] ambience general', '[O] unfortunately [S] bad [C] ambience general [A] it']

task, data: asqp rest15
target: [('food prices', 'dish', 'ok', '$ 10'), ('service general', 'service', 'great', 'helpful')]
output: ['[A] dish [O] average price [S] ok [C] food prices', '[A] service [O] helpful [S] great [C] service general']
sent: ['Helpful', 'service', 'and', 'average', 'price', 'per', 'dish', '$', '10', '.']
counter: {('service general', 'service', 'great', 'helpful'): 5, ('food prices', 'dish', 'ok', 'average price'): 5}
output quads: ['[A] service [O] helpful [S] great [C] service general', '[A] dish [O] average price [S] ok [C] food prices']
multi_path: ['[A] service [O] helpful [S] great [C] service general [SSEP] [A] dish [O] average price [S] ok [C] food prices', '[O] helpful [A] service [C] service general [S] great [SSEP] [O] average price [A] dish [C] food prices [S] ok', '[A] service [O] helpful [C] service general [S] great [SSEP] [A] dish [O] average price [C] food prices [S] ok', '[O] helpful [A] service [S] great [C] service general [SSEP] [O] average price [A] dish [S] ok [C] food prices', '[O] helpful [S] great [C] service general [A] service [SSEP] [O] average price [S] ok [C] food prices [A] dish']

task, data: asqp rest15
target: [('restaurant general', 'null', 'bad', 'terrible'), ('restaurant prices', 'null', 'bad', 'waste of money')]
output: ['[A] null [O] terrible waste of money [S] bad [C] restaurant prices']
sent: ['Terrible', 'Waste', 'of', 'money', '.', '.', 'scammers']
counter: {('restaurant prices', 'null', 'bad', 'terrible waste of money'): 5}
output quads: ['[A] null [O] terrible waste of money [S] bad [C] restaurant prices']
multi_path: ['[A] it [O] terrible waste of money [S] bad [C] restaurant prices', '[O] terrible waste of money [A] it [C] restaurant prices [S] bad', '[A] it [O] terrible waste of money [C] restaurant prices [S] bad', '[O] terrible waste of money [A] it [S] bad [C] restaurant prices', '[O] terrible waste of money [S] bad [C] restaurant prices [A] it']

task, data: asqp rest15
target: [('service general', 'null', 'bad', 'arrogant'), ('service general', 'null', 'bad', 'condescending'), ('service general', 'null', 'bad', 'smug')]
output: ['[A] response [O] arrogant [S] bad [C] service general', '[A] response [O] condescending [S] bad [C] service general', '[A] response [O] smug [S] bad [C] service general']
sent: ['His', 'response', 'was', 'smug', ',', 'arrogant', ',', 'and', 'condescending', ',', 'totally', 'consistent', 'with', 'his', 'deportment', 'on', 'display', 'all', 'evening', '.']
counter: {('service general', 'response', 'bad', 'smug'): 5, ('service general', 'response', 'bad', 'arrogant'): 5, ('service general', 'response', 'bad', 'condescending'): 5}
output quads: ['[A] response [O] smug [S] bad [C] service general', '[A] response [O] arrogant [S] bad [C] service general', '[A] response [O] condescending [S] bad [C] service general']
multi_path: ['[A] response [O] smug [S] bad [C] service general [SSEP] [A] response [O] arrogant [S] bad [C] service general [SSEP] [A] response [O] condescending [S] bad [C] service general', '[O] smug [A] response [C] service general [S] bad [SSEP] [O] arrogant [A] response [C] service general [S] bad [SSEP] [O] condescending [A] response [C] service general [S] bad', '[A] response [O] smug [C] service general [S] bad [SSEP] [A] response [O] arrogant [C] service general [S] bad [SSEP] [A] response [O] condescending [C] service general [S] bad', '[O] smug [A] response [S] bad [C] service general [SSEP] [O] arrogant [A] response [S] bad [C] service general [SSEP] [O] condescending [A] response [S] bad [C] service general', '[O] smug [S] bad [C] service general [A] response [SSEP] [O] arrogant [S] bad [C] service general [A] response [SSEP] [O] condescending [S] bad [C] service general [A] response']

task, data: asqp rest15
target: [('drinks quality', 'drinks', 'great', 'great'), ('service general', 'raymond', 'great', 'great')]
output: ['[A] drinks [O] great [S] great [C] drinks quality']
sent: ['The', 'drinks', 'are', 'great', ',', 'especially', 'when', 'made', 'by', 'Raymond', '.']
counter: {('drinks quality', 'drinks', 'great', 'great'): 5}
output quads: ['[A] drinks [O] great [S] great [C] drinks quality']
multi_path: ['[A] drinks [O] great [S] great [C] drinks quality', '[O] great [A] drinks [C] drinks quality [S] great', '[A] drinks [O] great [C] drinks quality [S] great', '[O] great [A] drinks [S] great [C] drinks quality', '[O] great [S] great [C] drinks quality [A] drinks']

task, data: asqp rest15
target: [('service general', 'null', 'bad', 'rudeness')]
output: ['[A] rudeness [O] alive [S] great [C] ambience general', '[A] rudeness [O] fascinating [S] great [C] ambience general']
sent: ['Lexicographers', 'take', 'note', ':', 'a', 'new', 'and', 'fascinating', 'definition', 'of', 'rudeness', 'is', 'alive', 'and', 'flourishing', 'right', 'here', 'in', 'Brooklyn', '.']
counter: {('ambience general', 'rudeness', 'great', 'alive'): 5, ('ambience general', 'rudeness', 'great', 'fascinating'): 5}
output quads: ['[A] rudeness [O] alive [S] great [C] ambience general', '[A] rudeness [O] fascinating [S] great [C] ambience general']
multi_path: ['[A] rudeness [O] alive [S] great [C] ambience general [SSEP] [A] rudeness [O] fascinating [S] great [C] ambience general', '[O] alive [A] rudeness [C] ambience general [S] great [SSEP] [O] fascinating [A] rudeness [C] ambience general [S] great', '[A] rudeness [O] alive [C] ambience general [S] great [SSEP] [A] rudeness [O] fascinating [C] ambience general [S] great', '[O] alive [A] rudeness [S] great [C] ambience general [SSEP] [O] fascinating [A] rudeness [S] great [C] ambience general', '[O] alive [S] great [C] ambience general [A] rudeness [SSEP] [O] fascinating [S] great [C] ambience general [A] rudeness']

task, data: asqp rest15
target: [('service general', 'null', 'bad', 'maggot')]
output: []
sent: ['When', 'the', 'bill', 'came', ',', 'nothing', 'was', 'comped', ',', 'so', 'I', 'told', 'the', 'manager', 'very', 'politely', 'that', 'we', 'were', 'willing', 'to', 'pay', 'for', 'the', 'wine', ',', 'but', 'I', 'didn', "'t", 'think', 'I', 'should', 'have', 'to', 'pay', 'for', 'food', 'with', 'a', 'maggot', 'in', 'it', '.']
counter: {('service general', 'manager', 'bad', 'politely'): 2, ('service general', 'manager', 'bad', 'nothing was comped'): 2, ('restaurant prices', 'manager', 'bad', 'nothing was comped'): 1, ('service general', 'manager', 'ok', 'politely'): 1}
output quads: []
multi_path: ['[A] manager [O] politely [S] bad [C] service general', '[O] nothing was comped [A] manager [C] service general [S] bad', '[A] manager [O] politely [C] service general [S] bad', '[O] nothing was comped [A] manager [S] bad [C] service general', '[O] nothing was comped [S] bad [C] restaurant prices [A] manager [SSEP] [O] politely [S] ok [C] service general [A] manager']

task, data: asqp rest15
target: [('service general', 'null', 'bad', 'full price')]
output: ['[A] null [O] charged full price [S] bad [C] service general']
sent: ['We', 'were', 'charged', 'full', 'price', '.']
counter: {('service general', 'null', 'bad', 'charged full price'): 4, ('restaurant prices', 'null', 'bad', 'charged full price'): 1}
output quads: ['[A] null [O] charged full price [S] bad [C] service general']
multi_path: ['[A] it [O] charged full price [S] bad [C] service general', '[O] charged full price [A] it [C] service general [S] bad', '[A] it [O] charged full price [C] service general [S] bad', '[O] charged full price [A] it [S] bad [C] service general', '[O] charged full price [S] bad [C] restaurant prices [A] it']

task, data: asqp rest15
target: [('service general', 'null', 'bad', 'missing')]
output: ['[A] null [O] meager discount [S] bad [C] service general', '[A] order [O] missing [S] bad [C] food style_options']
sent: ['When', 'we', 'threatened', 'to', 'leave', ',', 'we', 'were', 'offered', 'a', 'meager', 'discount', 'even', 'though', 'half', 'the', 'order', 'was', 'missing', '.']
counter: {('service general', 'null', 'bad', 'meager discount'): 4, ('food style_options', 'order', 'bad', 'missing'): 4, ('restaurant prices', 'null', 'bad', 'meager discount'): 1, ('food quality', 'order', 'bad', 'missing'): 1}
output quads: ['[A] null [O] meager discount [S] bad [C] service general', '[A] order [O] missing [S] bad [C] food style_options']
multi_path: ['[A] it [O] meager discount [S] bad [C] service general [SSEP] [A] order [O] missing [S] bad [C] food style_options', '[O] meager discount [A] it [C] service general [S] bad [SSEP] [O] missing [A] order [C] food style_options [S] bad', '[A] it [O] meager discount [C] service general [S] bad [SSEP] [A] order [O] missing [C] food style_options [S] bad', '[O] meager discount [A] it [S] bad [C] service general [SSEP] [O] missing [A] order [S] bad [C] food style_options', '[O] meager discount [S] bad [C] restaurant prices [A] it [SSEP] [O] missing [S] bad [C] food quality [A] order']

task, data: asqp rest15
target: [('restaurant general', 'null', 'bad', 'not return'), ('restaurant general', 'null', 'great', 'great')]
output: ['[A] dinning [O] great [S] great [C] restaurant general', '[A] null [O] not return [S] bad [C] restaurant general']
sent: ['Will', 'prob', '.', 'not', 'return', 'but', 'it', 'is', 'a', 'great', 'dinning', 'experience', 'to', 'try', 'atleast', 'once', '.']
counter: {('restaurant general', 'null', 'bad', 'not return'): 5, ('restaurant general', 'dinning', 'great', 'great'): 5}
output quads: ['[A] null [O] not return [S] bad [C] restaurant general', '[A] dinning [O] great [S] great [C] restaurant general']
multi_path: ['[A] it [O] not return [S] bad [C] restaurant general [SSEP] [A] dinning [O] great [S] great [C] restaurant general', '[O] not return [A] it [C] restaurant general [S] bad [SSEP] [O] great [A] dinning [C] restaurant general [S] great', '[A] it [O] not return [C] restaurant general [S] bad [SSEP] [A] dinning [O] great [C] restaurant general [S] great', '[O] not return [A] it [S] bad [C] restaurant general [SSEP] [O] great [A] dinning [S] great [C] restaurant general', '[O] not return [S] bad [C] restaurant general [A] it [SSEP] [O] great [S] great [C] restaurant general [A] dinning']

task, data: asqp rest15
target: [('service general', 'null', 'bad', 'never made it around')]
output: ['[A] belly dancers [O] missed [S] bad [C] ambience general']
sent: ['To', 'top', 'it', 'all', 'off', '.', '.', 'the', 'main', 'reason', 'we', 'came', 'to', 'your', 'restaurant', 'was', 'for', 'the', 'belly', 'dancers', 'and', 'missed', 'the', 'first', 'show', 'as', 'we', 'were', 'not', 'seated', 'yet', 'and', 'the', '2nd', 'belly', 'dancer', 'only', 'danced', 'at', 'two', 'tables', 'in', 'the', 'back', 'of', 'the', 'restaurant', 'and', 'never', 'made', 'it', 'around', 'to', 'the', 'other', 'half', 'of', 'the', 'restaurant', '.']
counter: {('ambience general', 'belly dancers', 'bad', 'missed'): 5, ('ambience general', 'belly dancers', 'bad', 'not seated yet'): 2, ('ambience general', 'belly dancer', 'bad', 'not seated yet'): 1, ('service general', 'belly dancer', 'bad', 'not seated yet'): 2}
output quads: ['[A] belly dancers [O] missed [S] bad [C] ambience general']
multi_path: ['[A] belly dancers [O] missed [S] bad [C] ambience general [SSEP] [A] belly dancers [O] not seated yet [S] bad [C] ambience general', '[O] missed [A] belly dancers [C] ambience general [S] bad [SSEP] [O] not seated yet [A] belly dancer [C] ambience general [S] bad', '[A] belly dancers [O] missed [C] ambience general [S] bad [SSEP] [A] belly dancers [O] not seated yet [C] ambience general [S] bad', '[O] missed [A] belly dancers [S] bad [C] ambience general [SSEP] [O] not seated yet [A] belly dancer [S] bad [C] service general', '[O] missed [S] bad [C] ambience general [A] belly dancers [SSEP] [O] not seated yet [S] bad [C] service general [A] belly dancer']

task, data: asqp rest15
target: [('food quality', 'mushroom sauce', 'bad', 'maggot')]
output: ['[A] maggot in mushroom sauce [O] found [S] bad [C] food quality']
sent: ['Nevertheless', ',', 'I', 'finished', 'my', 'plate', ',', 'and', 'that', "'s", 'when', 'I', 'found', 'a', 'maggot', 'in', 'mushroom', 'sauce', 'at', 'the', 'bottom', '.']
counter: {('food quality', 'maggot in mushroom sauce', 'bad', 'found'): 5}
output quads: ['[A] maggot in mushroom sauce [O] found [S] bad [C] food quality']
multi_path: ['[A] maggot in mushroom sauce [O] found [S] bad [C] food quality', '[O] found [A] maggot in mushroom sauce [C] food quality [S] bad', '[A] maggot in mushroom sauce [O] found [C] food quality [S] bad', '[O] found [A] maggot in mushroom sauce [S] bad [C] food quality', '[O] found [S] bad [C] food quality [A] maggot in mushroom sauce']

task, data: asqp rest15
target: [('food quality', 'hot dog', 'great', 'amazing fun'), ('restaurant general', 'place', 'great', 'check this place out')]
output: ['[A] hot dog [O] amazing fun [S] great [C] food quality']
sent: ['amazing', 'fun', 'for', 'hot', 'dog', 'lovers', 'of', 'all', 'ages', 'PLEASE', 'do', 'yourself', 'a', 'favor', 'and', 'check', 'this', 'place', 'out', '!', '!', '!', '!']
counter: {('restaurant general', 'place', 'great', 'amazing fun'): 2, ('food quality', 'hot dog', 'great', 'amazing fun'): 3}
output quads: ['[A] hot dog [O] amazing fun [S] great [C] food quality']
multi_path: ['[A] place [O] amazing fun [S] great [C] restaurant general', '[O] amazing fun [A] hot dog [C] food quality [S] great', '[A] place [O] amazing fun [C] restaurant general [S] great', '[O] amazing fun [A] hot dog [S] great [C] food quality', '[O] amazing fun [S] great [C] food quality [A] hot dog']

task, data: asqp rest15
target: [('food quality', 'null', 'great', 'great')]
output: ['[A] null [O] great taste [S] great [C] food quality']
sent: ['great', 'taste']
counter: {('food quality', 'null', 'great', 'great taste'): 5}
output quads: ['[A] null [O] great taste [S] great [C] food quality']
multi_path: ['[A] it [O] great taste [S] great [C] food quality', '[O] great taste [A] it [C] food quality [S] great', '[A] it [O] great taste [C] food quality [S] great', '[O] great taste [A] it [S] great [C] food quality', '[O] great taste [S] great [C] food quality [A] it']

task, data: asqp rest15
target: [('food quality', 'dessert', 'bad', 'wrong')]
output: ['[A] dessert [O] better [S] bad [C] food quality']
sent: ['We', 'thought', 'the', 'dessert', 'would', 'be', 'better', ',', 'Wrong', '!']
counter: {('food quality', 'dessert', 'bad', 'better'): 5}
output quads: ['[A] dessert [O] better [S] bad [C] food quality']
multi_path: ['[A] dessert [O] better [S] bad [C] food quality', '[O] better [A] dessert [C] food quality [S] bad', '[A] dessert [O] better [C] food quality [S] bad', '[O] better [A] dessert [S] bad [C] food quality', '[O] better [S] bad [C] food quality [A] dessert']

task, data: asqp rest15
target: [('service general', 'waiters', 'bad', 'push')]
output: ['[A] waiters [O] complimentary [S] bad [C] service general', '[A] waiters [O] push more [S] bad [C] service general']
sent: ['Also', ',', 'waiters', 'try', 'to', 'push', 'more', 'food', 'on', 'you', ',', 'like', 'suggest', 'things', 'as', 'if', 'they', 'are', 'complimentary', 'when', 'they', 'actually', 'cost', '$', '.']
counter: {('service general', 'waiters', 'bad', 'push more'): 5, ('food prices', 'null', 'bad', 'cost $'): 1, ('service general', 'waiters', 'bad', 'complimentary'): 3, ('food prices', 'waiters', 'bad', 'complimentary'): 1}
output quads: ['[A] waiters [O] push more [S] bad [C] service general', '[A] waiters [O] complimentary [S] bad [C] service general']
multi_path: ['[A] waiters [O] push more [S] bad [C] service general [SSEP] [A] it [O] cost $ [S] bad [C] food prices', '[O] push more [A] waiters [C] service general [S] bad [SSEP] [O] complimentary [A] waiters [C] service general [S] bad', '[A] waiters [O] push more [C] service general [S] bad [SSEP] [A] waiters [O] complimentary [C] service general [S] bad', '[O] push more [A] waiters [S] bad [C] service general [SSEP] [O] complimentary [A] waiters [S] bad [C] service general', '[O] push more [S] bad [C] service general [A] waiters [SSEP] [O] complimentary [S] bad [C] food prices [A] waiters']

task, data: asqp rest15
target: [('food quality', 'indian food', 'great', 'well'), ('food style_options', 'indian food', 'ok', 'normal')]
output: ['[A] indian food [O] normal [S] ok [C] food quality', '[A] null [O] well [S] great [C] food quality']
sent: ['Very', '``', 'normal', 'Indian', 'food', '``', ',', 'but', 'done', 'really', 'well', '.']
counter: {('food quality', 'indian food', 'ok', 'normal'): 5, ('food quality', 'null', 'great', 'well'): 5}
output quads: ['[A] indian food [O] normal [S] ok [C] food quality', '[A] null [O] well [S] great [C] food quality']
multi_path: ['[A] indian food [O] normal [S] ok [C] food quality [SSEP] [A] it [O] well [S] great [C] food quality', '[O] normal [A] indian food [C] food quality [S] ok [SSEP] [O] well [A] it [C] food quality [S] great', '[A] indian food [O] normal [C] food quality [S] ok [SSEP] [A] it [O] well [C] food quality [S] great', '[O] normal [A] indian food [S] ok [C] food quality [SSEP] [O] well [A] it [S] great [C] food quality', '[O] normal [S] ok [C] food quality [A] indian food [SSEP] [O] well [S] great [C] food quality [A] it']

task, data: asqp rest15
target: [('food quality', 'null', 'great', 'best')]
output: ['[A] hot dogs [O] best [S] great [C] food quality']
sent: ['One', 'of', 'the', 'best', 'hot', 'dogs', 'I', 'have', 'ever', 'eaten', '.']
counter: {('food quality', 'hot dogs', 'great', 'best'): 5}
output quads: ['[A] hot dogs [O] best [S] great [C] food quality']
multi_path: ['[A] hot dogs [O] best [S] great [C] food quality', '[O] best [A] hot dogs [C] food quality [S] great', '[A] hot dogs [O] best [C] food quality [S] great', '[O] best [A] hot dogs [S] great [C] food quality', '[O] best [S] great [C] food quality [A] hot dogs']

task, data: asqp rest15
target: [('food quality', 'lobster knuckles', 'bad', 'tasteless'), ('food style_options', 'lobster knuckles', 'ok', 'ok')]
output: ['[A] lobster knuckles ( special of the day ) [O] ok [S] ok [C] food quality', '[A] lobster knuckles ( special of the day ) [O] tasteless [S] bad [C] food quality']
sent: ['The', 'lobster', 'knuckles', '(', 'special', 'of', 'the', 'day', ')', 'were', 'ok', ',', 'but', 'pretty', 'tasteless', '.']
counter: {('food quality', 'lobster knuckles ( special of the day )', 'ok', 'ok'): 4, ('food quality', 'lobster knuckles ( special of the day )', 'bad', 'tasteless'): 4, ('food quality', 'lobster knuckles', 'ok', 'ok'): 1, ('food quality', 'lobster knuckles', 'bad', 'tasteless'): 1}
output quads: ['[A] lobster knuckles ( special of the day ) [O] ok [S] ok [C] food quality', '[A] lobster knuckles ( special of the day ) [O] tasteless [S] bad [C] food quality']
multi_path: ['[A] lobster knuckles ( special of the day ) [O] ok [S] ok [C] food quality [SSEP] [A] lobster knuckles ( special of the day ) [O] tasteless [S] bad [C] food quality', '[O] ok [A] lobster knuckles ( special of the day ) [C] food quality [S] ok [SSEP] [O] tasteless [A] lobster knuckles ( special of the day ) [C] food quality [S] bad', '[A] lobster knuckles ( special of the day ) [O] ok [C] food quality [S] ok [SSEP] [A] lobster knuckles ( special of the day ) [O] tasteless [C] food quality [S] bad', '[O] ok [A] lobster knuckles ( special of the day ) [S] ok [C] food quality [SSEP] [O] tasteless [A] lobster knuckles ( special of the day ) [S] bad [C] food quality', '[O] ok [S] ok [C] food quality [A] lobster knuckles [SSEP] [O] tasteless [S] bad [C] food quality [A] lobster knuckles']

task, data: asqp rest15
target: [('food quality', 'food', 'bad', 'got hair in my food')]
output: []
sent: ['I', 'got', 'hair', 'in', 'my', 'food', '2', 'times', 'of', 'then', '!']
counter: {('food quality', 'food', 'bad', 'got hair in my food'): 2, ('food quality', 'null', 'bad', 'hair in my food'): 2, ('food quality', 'food', 'bad', 'hair in my food'): 1}
output quads: []
multi_path: ['[A] food [O] got hair in my food [S] bad [C] food quality', '[O] hair in my food [A] it [C] food quality [S] bad', '[A] food [O] got hair in my food [C] food quality [S] bad', '[O] hair in my food [A] it [S] bad [C] food quality', '[O] hair in my food [S] bad [C] food quality [A] food']

task, data: asqp rest15
target: [('food quality', 'food', 'great', 'happy'), ('food quality', 'grilled mahi mahi', 'bad', 'drenched'), ('food style_options', 'grilled mahi mahi', 'bad', 'drenched')]
output: ['[A] food [O] happy [S] great [C] food quality', '[A] grilled mahi mahi [O] drenched [S] bad [C] food quality']
sent: ['Everyone', 'seemed', 'generally', 'happy', 'with', 'their', 'food', ',', 'except', 'my', 'brother', 'who', 'had', 'the', 'grilled', 'Mahi', 'Mahi', ',', 'seemingly', 'drenched', 'in', 'Grapfruit', 'Juice', '!']
counter: {('food quality', 'food', 'great', 'happy'): 5, ('food quality', 'grilled mahi mahi', 'bad', 'drenched'): 5}
output quads: ['[A] food [O] happy [S] great [C] food quality', '[A] grilled mahi mahi [O] drenched [S] bad [C] food quality']
multi_path: ['[A] food [O] happy [S] great [C] food quality [SSEP] [A] grilled mahi mahi [O] drenched [S] bad [C] food quality', '[O] happy [A] food [C] food quality [S] great [SSEP] [O] drenched [A] grilled mahi mahi [C] food quality [S] bad', '[A] food [O] happy [C] food quality [S] great [SSEP] [A] grilled mahi mahi [O] drenched [C] food quality [S] bad', '[O] happy [A] food [S] great [C] food quality [SSEP] [O] drenched [A] grilled mahi mahi [S] bad [C] food quality', '[O] happy [S] great [C] food quality [A] food [SSEP] [O] drenched [S] bad [C] food quality [A] grilled mahi mahi']

task, data: asqp rest15
target: [('service general', 'null', 'bad', 'dirty')]
output: ['[A] beverage [O] dirty [S] bad [C] drinks quality']
sent: ['The', 'only', 'beverage', 'we', 'did', 'receive', 'was', 'water', 'in', 'dirty', 'glasses', '!']
counter: {('drinks quality', 'beverage', 'bad', 'dirty'): 5}
output quads: ['[A] beverage [O] dirty [S] bad [C] drinks quality']
multi_path: ['[A] beverage [O] dirty [S] bad [C] drinks quality', '[O] dirty [A] beverage [C] drinks quality [S] bad', '[A] beverage [O] dirty [C] drinks quality [S] bad', '[O] dirty [A] beverage [S] bad [C] drinks quality', '[O] dirty [S] bad [C] drinks quality [A] beverage']

task, data: asqp rest15
target: [('restaurant general', 'place', 'great', 'great'), ('restaurant prices', 'place', 'great', 'great')]
output: ['[A] place [O] great [S] great [C] restaurant general', '[A] place [O] great value [S] great [C] restaurant prices']
sent: ['Great', 'place', ',', 'great', 'value', '.']
counter: {('restaurant general', 'place', 'great', 'great'): 5, ('restaurant prices', 'place', 'great', 'great value'): 5}
output quads: ['[A] place [O] great [S] great [C] restaurant general', '[A] place [O] great value [S] great [C] restaurant prices']
multi_path: ['[A] place [O] great [S] great [C] restaurant general [SSEP] [A] place [O] great value [S] great [C] restaurant prices', '[O] great [A] place [C] restaurant general [S] great [SSEP] [O] great value [A] place [C] restaurant prices [S] great', '[A] place [O] great [C] restaurant general [S] great [SSEP] [A] place [O] great value [C] restaurant prices [S] great', '[O] great [A] place [S] great [C] restaurant general [SSEP] [O] great value [A] place [S] great [C] restaurant prices', '[O] great [S] great [C] restaurant general [A] place [SSEP] [O] great value [S] great [C] restaurant prices [A] place']

task, data: asqp rest15
target: [('food quality', 'food', 'great', 'delivers on their food'), ('restaurant miscellaneous', 'bark', 'ok', 'crowded')]
output: ['[A] food [O] delivers [S] great [C] food quality', '[A] null [O] crowded [S] bad [C] ambience general']
sent: ['Though', 'it', "'s", 'been', 'crowded', 'most', 'times', 'I', "'ve", 'gone', 'here', ',', 'Bark', 'always', 'delivers', 'on', 'their', 'food', '.']
counter: {('ambience general', 'null', 'bad', 'crowded'): 5, ('food quality', 'bark', 'great', 'delivers'): 2, ('food quality', 'food', 'great', 'delivers'): 3}
output quads: ['[A] null [O] crowded [S] bad [C] ambience general', '[A] food [O] delivers [S] great [C] food quality']
multi_path: ['[A] it [O] crowded [S] bad [C] ambience general [SSEP] [A] bark [O] delivers [S] great [C] food quality', '[O] crowded [A] it [C] ambience general [S] bad [SSEP] [O] delivers [A] food [C] food quality [S] great', '[A] it [O] crowded [C] ambience general [S] bad [SSEP] [A] bark [O] delivers [C] food quality [S] great', '[O] crowded [A] it [S] bad [C] ambience general [SSEP] [O] delivers [A] food [S] great [C] food quality', '[O] crowded [S] bad [C] ambience general [A] it [SSEP] [O] delivers [S] great [C] food quality [A] food']

task, data: asqp rest15
target: [('restaurant general', 'null', 'bad', 'waste')]
output: ['[A] null [O] waste [S] bad [C] restaurant miscellaneous']
sent: ['Just', 'want', 'to', 'warn', 'you', 'all', '-', 'do', "n't", 'waste', 'your', 'time', 'and', 'money', '.']
counter: {('restaurant miscellaneous', 'null', 'bad', 'waste'): 5}
output quads: ['[A] null [O] waste [S] bad [C] restaurant miscellaneous']
multi_path: ['[A] it [O] waste [S] bad [C] restaurant miscellaneous', '[O] waste [A] it [C] restaurant miscellaneous [S] bad', '[A] it [O] waste [C] restaurant miscellaneous [S] bad', '[O] waste [A] it [S] bad [C] restaurant miscellaneous', '[O] waste [S] bad [C] restaurant miscellaneous [A] it']

task, data: asqp rest15
target: [('service general', 'waitress', 'bad', 'shocked')]
output: ['[A] waitress [O] wanted to stay [S] bad [C] service general']
sent: ['I', 'was', 'shocked', 'that', 'my', 'friends', 'wanted', 'to', 'stay', 'after', 'the', 'waitress', 'said', ',', '``', 'can', 'I', 'help', 'you', '``', 'and', '``', 'how', 'many', 'are', 'in', 'your', 'party', '.', '``']
counter: {('service general', 'waitress', 'bad', 'wanted to stay'): 5}
output quads: ['[A] waitress [O] wanted to stay [S] bad [C] service general']
multi_path: ['[A] waitress [O] wanted to stay [S] bad [C] service general', '[O] wanted to stay [A] waitress [C] service general [S] bad', '[A] waitress [O] wanted to stay [C] service general [S] bad', '[O] wanted to stay [A] waitress [S] bad [C] service general', '[O] wanted to stay [S] bad [C] service general [A] waitress']

task, data: asqp rest15
target: [('food quality', 'gyros', 'great', 'best')]
output: ['[A] astoria souvlaki spot [O] best [S] great [C] restaurant general']
sent: ['This', 'small', 'Astoria', 'souvlaki', 'spot', 'makes', 'what', 'many', 'consider', 'the', 'best', 'gyros', 'in', 'New', 'York', '.']
counter: {('restaurant general', 'astoria souvlaki spot', 'great', 'best'): 5}
output quads: ['[A] astoria souvlaki spot [O] best [S] great [C] restaurant general']
multi_path: ['[A] astoria souvlaki spot [O] best [S] great [C] restaurant general', '[O] best [A] astoria souvlaki spot [C] restaurant general [S] great', '[A] astoria souvlaki spot [O] best [C] restaurant general [S] great', '[O] best [A] astoria souvlaki spot [S] great [C] restaurant general', '[O] best [S] great [C] restaurant general [A] astoria souvlaki spot']

task, data: asqp rest15
target: [('food quality', 'hot dog', 'great', 'elevated'), ('food style_options', 'hot dog', 'great', 'elevated')]
output: ['[A] hot dog [O] elevated [S] great [C] food quality', '[A] hot dog [O] numerous variations [S] great [C] food style_options']
sent: ['Here', 'the', 'hot', 'dog', 'is', 'elevated', 'to', 'the', 'level', 'of', 'a', 'real', 'entree', 'with', 'numerous', 'variations', 'available', '.']
counter: {('food quality', 'hot dog', 'great', 'real entree'): 2, ('food style_options', 'hot dog', 'great', 'numerous variations'): 5, ('food quality', 'hot dog', 'great', 'elevated'): 3}
output quads: ['[A] hot dog [O] numerous variations [S] great [C] food style_options', '[A] hot dog [O] elevated [S] great [C] food quality']
multi_path: ['[A] hot dog [O] real entree [S] great [C] food quality [SSEP] [A] hot dog [O] numerous variations [S] great [C] food style_options', '[O] elevated [A] hot dog [C] food quality [S] great [SSEP] [O] numerous variations [A] hot dog [C] food style_options [S] great', '[A] hot dog [O] real entree [C] food quality [S] great [SSEP] [A] hot dog [O] numerous variations [C] food style_options [S] great', '[O] elevated [A] hot dog [S] great [C] food quality [SSEP] [O] numerous variations [A] hot dog [S] great [C] food style_options', '[O] elevated [S] great [C] food quality [A] hot dog [SSEP] [O] numerous variations [S] great [C] food style_options [A] hot dog']

task, data: asqp rest15
target: [('restaurant general', 'null', 'bad', 'did not ever get any better')]
output: ['[A] null [O] not ever get any better [S] bad [C] restaurant general']
sent: ['Our', 'experience', 'did', 'not', 'ever', 'get', 'any', 'better', '.']
counter: {('restaurant general', 'null', 'bad', 'not ever get any better'): 5}
output quads: ['[A] null [O] not ever get any better [S] bad [C] restaurant general']
multi_path: ['[A] it [O] not ever get any better [S] bad [C] restaurant general', '[O] not ever get any better [A] it [C] restaurant general [S] bad', '[A] it [O] not ever get any better [C] restaurant general [S] bad', '[O] not ever get any better [A] it [S] bad [C] restaurant general', '[O] not ever get any better [S] bad [C] restaurant general [A] it']

task, data: asqp rest15
target: [('service general', 'null', 'bad', 'supercilious scorn')]
output: []
sent: ['supercilious', 'scorn', 'is', 'in', '.']
counter: {('food quality', 'supercilious scorn', 'bad', 'supercilious'): 2, ('ambience general', 'null', 'bad', 'supercilious scorn'): 2, ('food quality', 'null', 'bad', 'supercilious scorn'): 1}
output quads: []
multi_path: ['[A] supercilious scorn [O] supercilious [S] bad [C] food quality', '[O] supercilious scorn [A] it [C] ambience general [S] bad', '[A] supercilious scorn [O] supercilious [C] food quality [S] bad', '[O] supercilious scorn [A] it [S] bad [C] ambience general', '[O] supercilious scorn [S] bad [C] food quality [A] it']

task, data: asqp rest15
target: [('food quality', 'food', 'bad', 'spicy')]
output: ['[A] food [O] oily [S] bad [C] food quality', '[A] food [O] over the top spicy [S] bad [C] food quality']
sent: ['My', 'mom', 'originally', 'introduced', 'me', 'to', 'this', 'place', ',', 'but', 'even', 'she', '(', 'being', 'Indian', ')', 'feels', 'the', 'food', 'can', 'be', 'somewhat', 'over', 'the', 'top', 'spicy', 'and', 'far', 'too', 'oily', '.']
counter: {('food quality', 'food', 'bad', 'over the top spicy'): 5, ('food quality', 'food', 'bad', 'oily'): 5}
output quads: ['[A] food [O] over the top spicy [S] bad [C] food quality', '[A] food [O] oily [S] bad [C] food quality']
multi_path: ['[A] food [O] over the top spicy [S] bad [C] food quality [SSEP] [A] food [O] oily [S] bad [C] food quality', '[O] over the top spicy [A] food [C] food quality [S] bad [SSEP] [O] oily [A] food [C] food quality [S] bad', '[A] food [O] over the top spicy [C] food quality [S] bad [SSEP] [A] food [O] oily [C] food quality [S] bad', '[O] over the top spicy [A] food [S] bad [C] food quality [SSEP] [O] oily [A] food [S] bad [C] food quality', '[O] over the top spicy [S] bad [C] food quality [A] food [SSEP] [O] oily [S] bad [C] food quality [A] food']

task, data: asqp rest15
target: [('ambience general', 'boths', 'great', 'not as small')]
output: ['[A] boths [O] perfect [S] great [C] food style_options']
sent: ['The', 'boths', 'are', 'not', 'as', 'small', 'as', 'some', 'of', 'the', 'reviews', 'make', 'them', 'out', 'to', 'look', 'they', "'re", 'perfect', 'for', '2', 'people', '.']
counter: {('food style_options', 'boths', 'great', 'perfect'): 5}
output quads: ['[A] boths [O] perfect [S] great [C] food style_options']
multi_path: ['[A] boths [O] perfect [S] great [C] food style_options', '[O] perfect [A] boths [C] food style_options [S] great', '[A] boths [O] perfect [C] food style_options [S] great', '[O] perfect [A] boths [S] great [C] food style_options', '[O] perfect [S] great [C] food style_options [A] boths']

task, data: asqp rest15
target: [('food style_options', 'trimmings', 'great', 'all')]
output: ['[A] place [O] had all the trimmings [S] great [C] food quality']
sent: ['this', 'place', 'had', 'ALL', 'the', 'trimmings', 'and', 'i', 'mean', 'all', '.']
counter: {('food quality', 'place', 'great', 'had all the trimmings'): 3, ('food quality', 'place', 'great', 'all the trimmings'): 2}
output quads: ['[A] place [O] had all the trimmings [S] great [C] food quality']
multi_path: ['[A] place [O] had all the trimmings [S] great [C] food quality', '[O] all the trimmings [A] place [C] food quality [S] great', '[A] place [O] had all the trimmings [C] food quality [S] great', '[O] all the trimmings [A] place [S] great [C] food quality', '[O] had all the trimmings [S] great [C] food quality [A] place']

task, data: asqp rest15
target: [('ambience general', 'feel', 'bad', "doesn 't have an upscale feel"), ('food prices', 'chicken tikka masala', 'bad', 'no bread of rice'), ('restaurant general', 'place', 'great', '4 instead of 5')]
output: ['[A] null [O] upscale [S] bad [C] restaurant prices']
sent: ['I', 'have', 'it', 'a', '4', 'instead', 'of', '5', 'because', 'of', 'the', 'price', '(', 'just', 'chicken', 'tikka', 'masala', '-', 'no', 'bread', 'of', 'rice', '-', 'is', '$', '25', ')', ',', 'which', 'I', 'would', 'expect', 'at', 'a', 'upscale', 'Indian', 'restaurant', 'but', 'this', 'place', 'doesn', "'t", 'have', 'an', 'upscale', 'feel', '.']
counter: {('restaurant prices', 'null', 'bad', 'upscale'): 5, ('food quality', 'chicken tikka masala', 'bad', 'no bread of rice'): 2, ('restaurant prices', 'place', 'bad', "doesn 't have an upscale feel"): 2, ('food quality', 'chicken tikka masala', 'ok', 'upscale'): 2, ('food quality', 'chicken tikka masala - no bread of rice', 'bad', 'no'): 1, ('restaurant general', 'place', 'bad', "doesn 't have an upscale feel"): 1, ('food quality', 'chicken tikka masala', 'bad', 'upscale'): 1}
output quads: ['[A] null [O] upscale [S] bad [C] restaurant prices']
multi_path: ["[A] it [O] upscale [S] bad [C] restaurant prices [SSEP] [A] chicken tikka masala [O] no bread of rice [S] bad [C] food quality [SSEP] [A] place [O] doesn 't have an upscale feel [S] bad [C] restaurant prices", '[O] upscale [A] it [C] restaurant prices [S] bad [SSEP] [O] upscale [A] chicken tikka masala [C] food quality [S] ok', "[A] it [O] upscale [C] restaurant prices [S] bad [SSEP] [A] chicken tikka masala - no bread of rice [O] no [C] food quality [S] bad [SSEP] [A] place [O] doesn 't have an upscale feel [C] restaurant general [S] bad", '[O] upscale [A] it [S] bad [C] restaurant prices [SSEP] [O] upscale [A] chicken tikka masala [S] ok [C] food quality', "[O] upscale [S] bad [C] restaurant prices [A] it [SSEP] [O] upscale [S] bad [C] food quality [A] chicken tikka masala [SSEP] [O] no bread of rice [S] bad [C] food quality [A] chicken tikka masala [SSEP] [O] doesn 't have an upscale feel [S] bad [C] restaurant prices [A] place"]

task, data: asqp rest15
target: [('ambience general', 'seating', 'great', 'great')]
output: ['[A] seating [O] cozy [S] great [C] ambience general', '[A] seating [O] private [S] great [C] ambience general', '[A] seating [O] romantic [S] great [C] ambience general', '[A] seating [O] short [S] great [C] ambience general', '[A] seating [O] sweet [S] great [C] ambience general']
sent: ['short', 'and', 'sweet', '–', 'seating', 'is', 'great', ':', 'it', "'s", 'romantic', ',', 'cozy', 'and', 'private', '.']
counter: {('ambience general', 'seating', 'great', 'short'): 5, ('ambience general', 'seating', 'great', 'sweet'): 5, ('ambience general', 'seating', 'great', 'romantic'): 5, ('ambience general', 'seating', 'great', 'cozy'): 5, ('ambience general', 'seating', 'great', 'private'): 5}
output quads: ['[A] seating [O] short [S] great [C] ambience general', '[A] seating [O] sweet [S] great [C] ambience general', '[A] seating [O] romantic [S] great [C] ambience general', '[A] seating [O] cozy [S] great [C] ambience general', '[A] seating [O] private [S] great [C] ambience general']
multi_path: ['[A] seating [O] short [S] great [C] ambience general [SSEP] [A] seating [O] sweet [S] great [C] ambience general [SSEP] [A] seating [O] romantic [S] great [C] ambience general [SSEP] [A] seating [O] cozy [S] great [C] ambience general [SSEP] [A] seating [O] private [S] great [C] ambience general', '[O] short [A] seating [C] ambience general [S] great [SSEP] [O] sweet [A] seating [C] ambience general [S] great [SSEP] [O] romantic [A] seating [C] ambience general [S] great [SSEP] [O] cozy [A] seating [C] ambience general [S] great [SSEP] [O] private [A] seating [C] ambience general [S] great', '[A] seating [O] short [C] ambience general [S] great [SSEP] [A] seating [O] sweet [C] ambience general [S] great [SSEP] [A] seating [O] romantic [C] ambience general [S] great [SSEP] [A] seating [O] cozy [C] ambience general [S] great [SSEP] [A] seating [O] private [C] ambience general [S] great', '[O] short [A] seating [S] great [C] ambience general [SSEP] [O] sweet [A] seating [S] great [C] ambience general [SSEP] [O] romantic [A] seating [S] great [C] ambience general [SSEP] [O] cozy [A] seating [S] great [C] ambience general [SSEP] [O] private [A] seating [S] great [C] ambience general', '[O] short [S] great [C] ambience general [A] seating [SSEP] [O] sweet [S] great [C] ambience general [A] seating [SSEP] [O] romantic [S] great [C] ambience general [A] seating [SSEP] [O] cozy [S] great [C] ambience general [A] seating [SSEP] [O] private [S] great [C] ambience general [A] seating']

task, data: asqp rest15
target: [('restaurant general', 'bukhara grill', 'great', 'rave')]
output: ['[A] bukhara grill [O] says it all [S] great [C] restaurant general']
sent: ['Bukhara', 'Grill', ',', 'the', 'tagline', 'says', 'it', 'all', '.', '.', '``', 'INDIAN', 'SPICE', 'RAVE', '``']
counter: {('restaurant general', 'bukhara grill', 'great', 'says it all'): 5}
output quads: ['[A] bukhara grill [O] says it all [S] great [C] restaurant general']
multi_path: ['[A] bukhara grill [O] says it all [S] great [C] restaurant general', '[O] says it all [A] bukhara grill [C] restaurant general [S] great', '[A] bukhara grill [O] says it all [C] restaurant general [S] great', '[O] says it all [A] bukhara grill [S] great [C] restaurant general', '[O] says it all [S] great [C] restaurant general [A] bukhara grill']

task, data: asqp rest15
target: [('food prices', 'kimchi', 'great', 'free'), ('food prices', 'salad', 'great', 'free'), ('food quality', 'meat', 'great', 'fresh'), ('food quality', 'sauces', 'great', 'great'), ('service general', 'service', 'great', 'good')]
output: ['[A] kimchi [O] free [S] great [C] food quality', '[A] meat [O] fresh [S] great [C] food quality', '[A] sauces [O] great [S] great [C] food quality', '[A] service [O] good [S] great [C] service general']
sent: ['The', 'meat', 'is', 'fresh', ',', 'the', 'sauces', 'are', 'great', ',', 'you', 'get', 'kimchi', 'and', 'a', 'salad', 'free', 'with', 'your', 'meal', 'and', 'service', 'is', 'good', 'too', '.']
counter: {('food quality', 'meat', 'great', 'fresh'): 5, ('food quality', 'sauces', 'great', 'great'): 5, ('food quality', 'kimchi', 'great', 'free'): 5, ('food quality', 'salad', 'great', 'free'): 2, ('service general', 'service', 'great', 'good'): 5}
output quads: ['[A] meat [O] fresh [S] great [C] food quality', '[A] sauces [O] great [S] great [C] food quality', '[A] kimchi [O] free [S] great [C] food quality', '[A] service [O] good [S] great [C] service general']
multi_path: ['[A] meat [O] fresh [S] great [C] food quality [SSEP] [A] sauces [O] great [S] great [C] food quality [SSEP] [A] kimchi [O] free [S] great [C] food quality [SSEP] [A] salad [O] free [S] great [C] food quality [SSEP] [A] service [O] good [S] great [C] service general', '[O] fresh [A] meat [C] food quality [S] great [SSEP] [O] great [A] sauces [C] food quality [S] great [SSEP] [O] free [A] kimchi [C] food quality [S] great [SSEP] [O] good [A] service [C] service general [S] great', '[A] meat [O] fresh [C] food quality [S] great [SSEP] [A] sauces [O] great [C] food quality [S] great [SSEP] [A] kimchi [O] free [C] food quality [S] great [SSEP] [A] salad [O] free [C] food quality [S] great [SSEP] [A] service [O] good [C] service general [S] great', '[O] fresh [A] meat [S] great [C] food quality [SSEP] [O] great [A] sauces [S] great [C] food quality [SSEP] [O] free [A] kimchi [S] great [C] food quality [SSEP] [O] good [A] service [S] great [C] service general', '[O] fresh [S] great [C] food quality [A] meat [SSEP] [O] great [S] great [C] food quality [A] sauces [SSEP] [O] free [S] great [C] food quality [A] kimchi [SSEP] [O] good [S] great [C] service general [A] service']

task, data: asqp rest15
target: [('food quality', 'null', 'great', 'good')]
output: ['[A] pizza [O] good [S] great [C] food quality']
sent: ['I', 'was', "n't", 'here', 'for', 'the', 'pizza', 'so', 'I', 'can', "'t", 'comment', 'on', 'that', 'yet', 'but', 'what', 'I', 'had', 'was', 'very', 'good', '.']
counter: {('food quality', 'pizza', 'great', 'good'): 5}
output quads: ['[A] pizza [O] good [S] great [C] food quality']
multi_path: ['[A] pizza [O] good [S] great [C] food quality', '[O] good [A] pizza [C] food quality [S] great', '[A] pizza [O] good [C] food quality [S] great', '[O] good [A] pizza [S] great [C] food quality', '[O] good [S] great [C] food quality [A] pizza']

task, data: asqp rest15
target: [('food style_options', 'null', 'bad', "couldn 't even enjoy")]
output: ["[A] mashed potatoes [O] couldn 't even enjoy [S] bad [C] food quality"]
sent: ['I', 'couldn', "'t", 'even', 'enjoy', 'the', 'mashed', 'potatoes', 'because', 'it', 'was', 'hidden', 'completely', 'under', 'the', 'chicken', 'and', 'spinach', '.']
counter: {('food quality', 'mashed potatoes', 'bad', "couldn 't even enjoy"): 5}
output quads: ["[A] mashed potatoes [O] couldn 't even enjoy [S] bad [C] food quality"]
multi_path: ["[A] mashed potatoes [O] couldn 't even enjoy [S] bad [C] food quality", "[O] couldn 't even enjoy [A] mashed potatoes [C] food quality [S] bad", "[A] mashed potatoes [O] couldn 't even enjoy [C] food quality [S] bad", "[O] couldn 't even enjoy [A] mashed potatoes [S] bad [C] food quality", "[O] couldn 't even enjoy [S] bad [C] food quality [A] mashed potatoes"]

task, data: asqp rest15
target: [('restaurant general', 'place', 'bad', 'never recommend'), ('restaurant miscellaneous', 'place', 'bad', 'never recommend')]
output: ['[A] place [O] never recommend [S] bad [C] restaurant miscellaneous']
sent: ['I', 'would', 'never', 'recommend', 'this', 'place', 'to', 'anybody', 'even', 'for', 'a', 'casual', 'dinner', '.']
counter: {('restaurant miscellaneous', 'place', 'bad', 'never recommend'): 5}
output quads: ['[A] place [O] never recommend [S] bad [C] restaurant miscellaneous']
multi_path: ['[A] place [O] never recommend [S] bad [C] restaurant miscellaneous', '[O] never recommend [A] place [C] restaurant miscellaneous [S] bad', '[A] place [O] never recommend [C] restaurant miscellaneous [S] bad', '[O] never recommend [A] place [S] bad [C] restaurant miscellaneous', '[O] never recommend [S] bad [C] restaurant miscellaneous [A] place']

task, data: asqp rest15
target: [('food quality', 'null', 'bad', 'average'), ('food quality', 'null', 'bad', 'no seasoning'), ('food quality', 'null', 'bad', 'shredded')]
output: ['[A] null [O] average [S] ok [C] food quality', '[A] null [O] shredded [S] bad [C] food quality']
sent: ['It', "'s", 'just', 'average', ',', 'just', 'shredded', ',', 'no', 'seasoning', 'on', 'it', '.']
counter: {('food quality', 'null', 'bad', 'average'): 2, ('food quality', 'null', 'bad', 'shredded'): 5, ('food quality', 'null', 'ok', 'average'): 3}
output quads: ['[A] null [O] shredded [S] bad [C] food quality', '[A] null [O] average [S] ok [C] food quality']
multi_path: ['[A] it [O] average [S] bad [C] food quality [SSEP] [A] it [O] shredded [S] bad [C] food quality', '[O] average [A] it [C] food quality [S] ok [SSEP] [O] shredded [A] it [C] food quality [S] bad', '[A] it [O] average [C] food quality [S] ok [SSEP] [A] it [O] shredded [C] food quality [S] bad', '[O] average [A] it [S] bad [C] food quality [SSEP] [O] shredded [A] it [S] bad [C] food quality', '[O] average [S] ok [C] food quality [A] it [SSEP] [O] shredded [S] bad [C] food quality [A] it']

task, data: asqp rest15
target: [('food quality', 'food', 'great', 'amazing')]
output: ['[A] food [O] amazing [S] great [C] food quality', '[A] food [O] best [S] great [C] food quality', '[A] indian food [O] love [S] great [C] food quality']
sent: ['Food', 'was', 'amazing', '-', 'I', 'love', 'Indian', 'food', 'and', 'eat', 'it', 'quite', 'regularly', ',', 'but', 'I', 'can', 'say', 'this', 'is', 'one', 'of', 'the', 'best', 'I', "'ve", 'had', '.']
counter: {('food quality', 'food', 'great', 'amazing'): 5, ('food quality', 'indian food', 'great', 'love'): 5, ('food quality', 'null', 'great', 'best'): 2, ('food quality', 'food', 'great', 'best'): 3}
output quads: ['[A] food [O] amazing [S] great [C] food quality', '[A] indian food [O] love [S] great [C] food quality', '[A] food [O] best [S] great [C] food quality']
multi_path: ['[A] food [O] amazing [S] great [C] food quality [SSEP] [A] indian food [O] love [S] great [C] food quality [SSEP] [A] it [O] best [S] great [C] food quality', '[O] amazing [A] food [C] food quality [S] great [SSEP] [O] love [A] indian food [C] food quality [S] great [SSEP] [O] best [A] food [C] food quality [S] great', '[A] food [O] amazing [C] food quality [S] great [SSEP] [A] indian food [O] love [C] food quality [S] great [SSEP] [A] it [O] best [C] food quality [S] great', '[O] amazing [A] food [S] great [C] food quality [SSEP] [O] love [A] indian food [S] great [C] food quality [SSEP] [O] best [A] food [S] great [C] food quality', '[O] amazing [S] great [C] food quality [A] food [SSEP] [O] love [S] great [C] food quality [A] indian food [SSEP] [O] best [S] great [C] food quality [A] food']

task, data: asqp rest15
target: [('restaurant general', 'null', 'bad', 'terrible')]
output: ['[A] null [O] terrible [S] great [C] restaurant general']
sent: ['Terrible', 'would', 'be', 'a', 'compliment', '!']
counter: {('restaurant general', 'null', 'great', 'terrible'): 5}
output quads: ['[A] null [O] terrible [S] great [C] restaurant general']
multi_path: ['[A] it [O] terrible [S] great [C] restaurant general', '[O] terrible [A] it [C] restaurant general [S] great', '[A] it [O] terrible [C] restaurant general [S] great', '[O] terrible [A] it [S] great [C] restaurant general', '[O] terrible [S] great [C] restaurant general [A] it']

task, data: asqp rest15
target: [('restaurant prices', 'null', 'bad', 'high')]
output: ['[A] food [O] high [S] bad [C] food quality', '[A] null [O] high [S] bad [C] restaurant prices', '[A] view [O] high [S] great [C] location general']
sent: ['The', 'high', 'prices', 'you', "'re", 'going', 'to', 'pay', 'is', 'for', 'the', 'view', 'not', 'for', 'the', 'food', '.']
counter: {('restaurant prices', 'null', 'bad', 'high'): 5, ('location general', 'view', 'great', 'high'): 5, ('food quality', 'food', 'bad', 'high'): 5}
output quads: ['[A] null [O] high [S] bad [C] restaurant prices', '[A] view [O] high [S] great [C] location general', '[A] food [O] high [S] bad [C] food quality']
multi_path: ['[A] it [O] high [S] bad [C] restaurant prices [SSEP] [A] view [O] high [S] great [C] location general [SSEP] [A] food [O] high [S] bad [C] food quality', '[O] high [A] it [C] restaurant prices [S] bad [SSEP] [O] high [A] view [C] location general [S] great [SSEP] [O] high [A] food [C] food quality [S] bad', '[A] it [O] high [C] restaurant prices [S] bad [SSEP] [A] view [O] high [C] location general [S] great [SSEP] [A] food [O] high [C] food quality [S] bad', '[O] high [A] it [S] bad [C] restaurant prices [SSEP] [O] high [A] view [S] great [C] location general [SSEP] [O] high [A] food [S] bad [C] food quality', '[O] high [S] bad [C] restaurant prices [A] it [SSEP] [O] high [S] great [C] location general [A] view [SSEP] [O] high [S] bad [C] food quality [A] food']

task, data: asqp rest15
target: [('service general', 'staff', 'bad', 'horrified')]
output: ['[A] staff [O] rudely [S] bad [C] service general', '[A] staff [O] turning away customers so early [S] bad [C] service general']
sent: ['I', "'d", 'be', 'horrified', 'if', 'my', 'staff', 'were', 'turning', 'away', 'customers', 'so', 'early', 'and', 'so', 'rudely', '!']
counter: {('service general', 'staff', 'bad', 'turning away customers so early'): 5, ('service general', 'staff', 'bad', 'rudely'): 5}
output quads: ['[A] staff [O] turning away customers so early [S] bad [C] service general', '[A] staff [O] rudely [S] bad [C] service general']
multi_path: ['[A] staff [O] turning away customers so early [S] bad [C] service general [SSEP] [A] staff [O] rudely [S] bad [C] service general', '[O] turning away customers so early [A] staff [C] service general [S] bad [SSEP] [O] rudely [A] staff [C] service general [S] bad', '[A] staff [O] turning away customers so early [C] service general [S] bad [SSEP] [A] staff [O] rudely [C] service general [S] bad', '[O] turning away customers so early [A] staff [S] bad [C] service general [SSEP] [O] rudely [A] staff [S] bad [C] service general', '[O] turning away customers so early [S] bad [C] service general [A] staff [SSEP] [O] rudely [S] bad [C] service general [A] staff']

task, data: asqp rest15
target: [('food style_options', 'null', 'great', 'you name it')]
output: ['[A] cheeses [O] name [S] great [C] food quality', '[A] chilli [O]  [S] great [C] food quality', '[A] onions [O]  [S] great [C] food quality', '[A] peppers [O]  [S] great [C] food quality', '[A] relish [O]  [S] great [C] food quality']
sent: ['peppers', ',', 'onions', ',', 'relish', ',', 'chilli', ',', 'cheeses', ',', 'you', 'NAME', 'it', '.']
counter: {('food quality', 'peppers', 'great', ''): 5, ('food quality', 'onions', 'great', ''): 5, ('food quality', 'relish', 'great', ''): 3, ('food quality', 'chilli', 'great', ''): 5, ('food quality', 'cheeses', 'great', ''): 2, ('food quality', 'relish', 'great', 'relish'): 2, ('food quality', 'cheeses', 'great', 'name'): 3}
output quads: ['[A] peppers [O]  [S] great [C] food quality', '[A] onions [O]  [S] great [C] food quality', '[A] relish [O]  [S] great [C] food quality', '[A] chilli [O]  [S] great [C] food quality', '[A] cheeses [O] name [S] great [C] food quality']
multi_path: ['[A] peppers [O] [S] great [C] food quality [SSEP] [A] onions [O] [S] great [C] food quality [SSEP] [A] relish [O] [S] great [C] food quality [SSEP] [A] chilli [O] [S] great [C] food quality [SSEP] [A] cheeses [O] [S] great [C] food quality', '[O] [A] peppers [C] food quality [S] great [SSEP] [O] [A] onions [C] food quality [S] great [SSEP] [O] relish [A] relish [C] food quality [S] great [SSEP] [O] [A] chilli [C] food quality [S] great [SSEP] [O] name [A] cheeses [C] food quality [S] great', '[A] peppers [O] [C] food quality [S] great [SSEP] [A] onions [O] [C] food quality [S] great [SSEP] [A] relish [O] [C] food quality [S] great [SSEP] [A] chilli [O] [C] food quality [S] great [SSEP] [A] cheeses [O] name [C] food quality [S] great', '[O] [A] peppers [S] great [C] food quality [SSEP] [O] [A] onions [S] great [C] food quality [SSEP] [O] [A] relish [S] great [C] food quality [SSEP] [O] [A] chilli [S] great [C] food quality [SSEP] [O] [A] cheeses [S] great [C] food quality', '[O] [S] great [C] food quality [A] peppers [SSEP] [O] [S] great [C] food quality [A] onions [SSEP] [O] relish [S] great [C] food quality [A] relish [SSEP] [O] [S] great [C] food quality [A] chilli [SSEP] [O] name [S] great [C] food quality [A] cheeses']

task, data: asqp rest15
target: [('restaurant general', 'null', 'bad', 'disappointing')]
output: ['[A] null [O] disappointing [S] bad [C] food quality', '[A] null [O] stunned [S] bad [C] food quality']
sent: ['I', 'was', 'so', 'stunned', ',', 'and', 'I', 'left', 'the', 'dinner', 'hungry', 'and', 'majorly', 'disappointing', '.']
counter: {('food quality', 'null', 'bad', 'stunned'): 5, ('food quality', 'null', 'bad', 'disappointing'): 4, ('food quality', 'dinner', 'bad', 'disappointing'): 1}
output quads: ['[A] null [O] stunned [S] bad [C] food quality', '[A] null [O] disappointing [S] bad [C] food quality']
multi_path: ['[A] it [O] stunned [S] bad [C] food quality [SSEP] [A] it [O] disappointing [S] bad [C] food quality', '[O] stunned [A] it [C] food quality [S] bad [SSEP] [O] disappointing [A] it [C] food quality [S] bad', '[A] it [O] stunned [C] food quality [S] bad [SSEP] [A] it [O] disappointing [C] food quality [S] bad', '[O] stunned [A] it [S] bad [C] food quality [SSEP] [O] disappointing [A] it [S] bad [C] food quality', '[O] stunned [S] bad [C] food quality [A] it [SSEP] [O] disappointing [S] bad [C] food quality [A] dinner']

task, data: asqp rest15
target: [('food prices', 'dinner for two', 'bad', "didn 't include wine")]
output: ['[A] dinner [O] $ 500 [S] bad [C] food prices']
sent: ['But', '$', '500', 'for', 'a', 'dinner', 'for', 'two', 'that', 'didn', "'t", 'include', 'Wine', '?']
counter: {('food prices', 'dinner', 'bad', '$ 500'): 5}
output quads: ['[A] dinner [O] $ 500 [S] bad [C] food prices']
multi_path: ['[A] dinner [O] $ 500 [S] bad [C] food prices', '[O] $ 500 [A] dinner [C] food prices [S] bad', '[A] dinner [O] $ 500 [C] food prices [S] bad', '[O] $ 500 [A] dinner [S] bad [C] food prices', '[O] $ 500 [S] bad [C] food prices [A] dinner']

task, data: asqp rest15
target: [('restaurant general', 'casa la femme', 'great', 'true')]
output: ['[A] casa la femme [O] unlike any other in new york [S] great [C] restaurant general']
sent: ['Stepping', 'into', 'Casa', 'La', 'Femme', 'last', 'night', 'was', 'a', 'true', 'experience', 'unlike', 'any', 'other', 'in', 'New', 'York', '!']
counter: {('restaurant general', 'casa la femme', 'great', 'unlike any other'): 2, ('restaurant general', 'casa la femme', 'great', 'unlike any other in new york'): 3}
output quads: ['[A] casa la femme [O] unlike any other in new york [S] great [C] restaurant general']
multi_path: ['[A] casa la femme [O] unlike any other [S] great [C] restaurant general', '[O] unlike any other in new york [A] casa la femme [C] restaurant general [S] great', '[A] casa la femme [O] unlike any other [C] restaurant general [S] great', '[O] unlike any other in new york [A] casa la femme [S] great [C] restaurant general', '[O] unlike any other in new york [S] great [C] restaurant general [A] casa la femme']

task, data: asqp rest15
target: [('location general', 'place', 'ok', 'hidden away'), ('restaurant general', 'place', 'great', 'worth')]
output: ['[A] place [O] hidden away [S] bad [C] ambience general', '[A] place [O] worth [S] great [C] restaurant general']
sent: ['The', 'place', 'is', 'a', 'bit', 'hidden', 'away', ',', 'but', 'once', 'you', 'get', 'there', ',', 'it', "'s", 'all', 'worth', 'it', '.']
counter: {('ambience general', 'place', 'bad', 'hidden away'): 5, ('restaurant general', 'place', 'great', 'worth'): 5}
output quads: ['[A] place [O] hidden away [S] bad [C] ambience general', '[A] place [O] worth [S] great [C] restaurant general']
multi_path: ['[A] place [O] hidden away [S] bad [C] ambience general [SSEP] [A] place [O] worth [S] great [C] restaurant general', '[O] hidden away [A] place [C] ambience general [S] bad [SSEP] [O] worth [A] place [C] restaurant general [S] great', '[A] place [O] hidden away [C] ambience general [S] bad [SSEP] [A] place [O] worth [C] restaurant general [S] great', '[O] hidden away [A] place [S] bad [C] ambience general [SSEP] [O] worth [A] place [S] great [C] restaurant general', '[O] hidden away [S] bad [C] ambience general [A] place [SSEP] [O] worth [S] great [C] restaurant general [A] place']

task, data: asqp rest15
target: [('food quality', 'meal', 'bad', 'inedible'), ('restaurant prices', 'null', 'bad', 'fought my bill')]
output: ['[A] dinner portion of my meal [O] inedible [S] bad [C] food style_options', '[A] null [O] fought my bill [S] bad [C] restaurant prices']
sent: ['If', 'it', 'seemed', 'possible', 'to', 'do', 'so', 'while', 'there', 'I', 'would', 'have', 'fought', 'my', 'bill', 'since', 'my', 'dinner', 'portion', 'of', 'my', 'meal', 'was', 'inedible', '!']
counter: {('service general', 'null', 'bad', 'fought my bill'): 2, ('food style_options', 'dinner portion of my meal', 'bad', 'inedible'): 5, ('restaurant prices', 'null', 'bad', 'fought my bill'): 3}
output quads: ['[A] dinner portion of my meal [O] inedible [S] bad [C] food style_options', '[A] null [O] fought my bill [S] bad [C] restaurant prices']
multi_path: ['[A] it [O] fought my bill [S] bad [C] service general [SSEP] [A] dinner portion of my meal [O] inedible [S] bad [C] food style_options', '[O] fought my bill [A] it [C] restaurant prices [S] bad [SSEP] [O] inedible [A] dinner portion of my meal [C] food style_options [S] bad', '[A] it [O] fought my bill [C] restaurant prices [S] bad [SSEP] [A] dinner portion of my meal [O] inedible [C] food style_options [S] bad', '[O] fought my bill [A] it [S] bad [C] restaurant prices [SSEP] [O] inedible [A] dinner portion of my meal [S] bad [C] food style_options', '[O] fought my bill [S] bad [C] service general [A] it [SSEP] [O] inedible [S] bad [C] food style_options [A] dinner portion of my meal']

task, data: asqp rest15
target: [('restaurant general', 'null', 'great', 'enjoy')]
output: ['[A] null [O] enjoy [S] great [C] restaurant miscellaneous']
sent: ['I', 'come', 'here', 'enjoy', 'very', 'much', 'with', 'husband', '.']
counter: {('restaurant miscellaneous', 'null', 'great', 'enjoy'): 3, ('restaurant general', 'null', 'great', 'enjoy'): 2}
output quads: ['[A] null [O] enjoy [S] great [C] restaurant miscellaneous']
multi_path: ['[A] it [O] enjoy [S] great [C] restaurant miscellaneous', '[O] enjoy [A] it [C] restaurant miscellaneous [S] great', '[A] it [O] enjoy [C] restaurant general [S] great', '[O] enjoy [A] it [S] great [C] restaurant miscellaneous', '[O] enjoy [S] great [C] restaurant general [A] it']

task, data: asqp rest15
target: [('restaurant miscellaneous', 'null', 'bad', "don't go")]
output: ["[A] null [O] don't go with a larger group [S] bad [C] restaurant miscellaneous"]
sent: ['Do', "n't", 'go', 'with', 'a', 'larger', 'group', 'than', '4', '!']
counter: {('restaurant miscellaneous', 'null', 'bad', "don't go with a larger group"): 5}
output quads: ["[A] null [O] don't go with a larger group [S] bad [C] restaurant miscellaneous"]
multi_path: ["[A] it [O] don't go with a larger group [S] bad [C] restaurant miscellaneous", "[O] don't go with a larger group [A] it [C] restaurant miscellaneous [S] bad", "[A] it [O] don't go with a larger group [C] restaurant miscellaneous [S] bad", "[O] don't go with a larger group [A] it [S] bad [C] restaurant miscellaneous", "[O] don't go with a larger group [S] bad [C] restaurant miscellaneous [A] it"]

task, data: asqp rest15
target: [('restaurant prices', 'null', 'bad', 'expensive')]
output: ['[A] null [O] expensive [S] bad [C] food prices']
sent: ['Expensive']
counter: {('food prices', 'null', 'bad', 'expensive'): 5}
output quads: ['[A] null [O] expensive [S] bad [C] food prices']
multi_path: ['[A] it [O] expensive [S] bad [C] food prices', '[O] expensive [A] it [C] food prices [S] bad', '[A] it [O] expensive [C] food prices [S] bad', '[O] expensive [A] it [S] bad [C] food prices', '[O] expensive [S] bad [C] food prices [A] it']

task, data: asqp rest15
target: [('restaurant miscellaneous', "water's edge", 'great', 'highest compliments')]
output: ["[A] water's edge [O] compliments [S] great [C] restaurant general"]
sent: ['My', 'daughter', "'s", 'wedding', 'reception', 'at', 'Water', "'s", 'Edge', 'received', 'the', 'highest', 'compliments', 'from', 'our', 'guests', '.']
counter: {('restaurant general', "water's edge", 'great', 'compliments'): 5}
output quads: ["[A] water's edge [O] compliments [S] great [C] restaurant general"]
multi_path: ["[A] water's edge [O] compliments [S] great [C] restaurant general", "[O] compliments [A] water's edge [C] restaurant general [S] great", "[A] water's edge [O] compliments [C] restaurant general [S] great", "[O] compliments [A] water's edge [S] great [C] restaurant general", "[O] compliments [S] great [C] restaurant general [A] water's edge"]

task, data: asqp rest15
target: [('restaurant miscellaneous', 'place', 'bad', 'survives on reputation alone')]
output: ['[A] place [O] survives [S] great [C] restaurant general']
sent: ['This', 'place', 'survives', 'on', 'reputation', 'alone', '.']
counter: {('restaurant general', 'place', 'great', 'survives'): 5}
output quads: ['[A] place [O] survives [S] great [C] restaurant general']
multi_path: ['[A] place [O] survives [S] great [C] restaurant general', '[O] survives [A] place [C] restaurant general [S] great', '[A] place [O] survives [C] restaurant general [S] great', '[O] survives [A] place [S] great [C] restaurant general', '[O] survives [S] great [C] restaurant general [A] place']

task, data: asqp rest15
target: [('service general', 'null', 'bad', 'pushed')]
output: ['[A] null [O] pushed into a table that was only price fixed [S] bad [C] service general']
sent: ['Once', 'we', 'finally', 'got', 'a', 'table', ',', 'despite', 'indicating', 'we', 'wanted', 'an', 'alla', 'carte', 'menu', 'we', 'were', 'pushed', 'into', 'a', 'table', 'that', 'was', 'only', 'price', 'fixed', '!']
counter: {('service general', 'null', 'bad', 'pushed into a table that was only price fixed'): 5}
output quads: ['[A] null [O] pushed into a table that was only price fixed [S] bad [C] service general']
multi_path: ['[A] it [O] pushed into a table that was only price fixed [S] bad [C] service general', '[O] pushed into a table that was only price fixed [A] it [C] service general [S] bad', '[A] it [O] pushed into a table that was only price fixed [C] service general [S] bad', '[O] pushed into a table that was only price fixed [A] it [S] bad [C] service general', '[O] pushed into a table that was only price fixed [S] bad [C] service general [A] it']

task, data: asqp rest15
target: [('food quality', 'dish', 'bad', 'too-authentic-for-me'), ('food quality', 'dishes', 'great', 'enjoyed')]
output: ['[A] dish [O] occasional too-authentic-for-me [S] bad [C] food quality', '[A] dishes [O] enjoyed [S] great [C] food quality']
sent: ['I', "'ve", 'enjoyed', '99', '%', 'of', 'the', 'dishes', 'we', "'ve", 'ordered', 'with', 'the', 'only', 'exceptions', 'being', 'the', 'occasional', 'too-authentic-for-me', 'dish', '(', 'I', "'m", 'a', 'daring', 'eater', 'but', 'not', 'THAT', 'daring', ')', '.']
counter: {('food quality', 'dishes', 'great', 'enjoyed'): 5, ('food quality', 'dish', 'bad', 'too-authentic-for-me'): 2, ('food quality', 'dish', 'bad', 'occasional too-authentic-for-me'): 3}
output quads: ['[A] dishes [O] enjoyed [S] great [C] food quality', '[A] dish [O] occasional too-authentic-for-me [S] bad [C] food quality']
multi_path: ['[A] dishes [O] enjoyed [S] great [C] food quality [SSEP] [A] dish [O] too-authentic-for-me [S] bad [C] food quality', '[O] enjoyed [A] dishes [C] food quality [S] great [SSEP] [O] occasional too-authentic-for-me [A] dish [C] food quality [S] bad', '[A] dishes [O] enjoyed [C] food quality [S] great [SSEP] [A] dish [O] too-authentic-for-me [C] food quality [S] bad', '[O] enjoyed [A] dishes [S] great [C] food quality [SSEP] [O] occasional too-authentic-for-me [A] dish [S] bad [C] food quality', '[O] enjoyed [S] great [C] food quality [A] dishes [SSEP] [O] occasional too-authentic-for-me [S] bad [C] food quality [A] dish']

task, data: asqp rest15
target: [('food quality', 'fusion twists', 'great', 'classic'), ('food quality', 'korean food', 'great', 'classic'), ('food quality', 'pork belly tacos', 'great', 'classic')]
output: ['[A] dokebi [O] classic [S] great [C] restaurant general', '[A] korean food [O] classic [S] great [C] food quality', '[A] pork belly tacos [O] fusion twists [S] great [C] food quality']
sent: ['Dokebi', 'gives', 'Williamsburg', 'the', 'right', 'one-two', 'punch', 'of', 'classic', 'Korean', 'food', 'and', 'fusion', 'twists', 'like', 'pork', 'belly', 'tacos', '.']
counter: {('restaurant general', 'dokebi', 'great', 'classic'): 4, ('food quality', 'korean food', 'great', 'classic'): 5, ('food quality', 'pork belly tacos', 'great', 'fusion twists'): 5, ('food quality', 'dokebi', 'great', 'classic'): 1}
output quads: ['[A] dokebi [O] classic [S] great [C] restaurant general', '[A] korean food [O] classic [S] great [C] food quality', '[A] pork belly tacos [O] fusion twists [S] great [C] food quality']
multi_path: ['[A] dokebi [O] classic [S] great [C] restaurant general [SSEP] [A] korean food [O] classic [S] great [C] food quality [SSEP] [A] pork belly tacos [O] fusion twists [S] great [C] food quality', '[O] classic [A] dokebi [C] restaurant general [S] great [SSEP] [O] classic [A] korean food [C] food quality [S] great [SSEP] [O] fusion twists [A] pork belly tacos [C] food quality [S] great', '[A] dokebi [O] classic [C] restaurant general [S] great [SSEP] [A] korean food [O] classic [C] food quality [S] great [SSEP] [A] pork belly tacos [O] fusion twists [C] food quality [S] great', '[O] classic [A] dokebi [S] great [C] restaurant general [SSEP] [O] classic [A] korean food [S] great [C] food quality [SSEP] [O] fusion twists [A] pork belly tacos [S] great [C] food quality', '[O] classic [S] great [C] food quality [A] dokebi [SSEP] [O] classic [S] great [C] food quality [A] korean food [SSEP] [O] fusion twists [S] great [C] food quality [A] pork belly tacos']

task, data: asqp rest15
target: [('drinks quality', 'margaritas', 'ok', 'anything to write home about'), ('food quality', 'food', 'great', 'excellent')]
output: ['[A] food [O] excellent [S] great [C] food quality', '[A] margaritas [O] excellent [S] bad [C] food quality']
sent: ['The', 'food', 'we', 'ordered', 'was', 'excellent', ',', 'although', 'I', 'would', "n't", 'say', 'the', 'margaritas', 'were', 'anything', 'to', 'write', 'home', 'about', '.']
counter: {('food quality', 'food', 'great', 'excellent'): 5, ('food quality', 'margaritas', 'bad', 'excellent'): 5}
output quads: ['[A] food [O] excellent [S] great [C] food quality', '[A] margaritas [O] excellent [S] bad [C] food quality']
multi_path: ['[A] food [O] excellent [S] great [C] food quality [SSEP] [A] margaritas [O] excellent [S] bad [C] food quality', '[O] excellent [A] food [C] food quality [S] great [SSEP] [O] excellent [A] margaritas [C] food quality [S] bad', '[A] food [O] excellent [C] food quality [S] great [SSEP] [A] margaritas [O] excellent [C] food quality [S] bad', '[O] excellent [A] food [S] great [C] food quality [SSEP] [O] excellent [A] margaritas [S] bad [C] food quality', '[O] excellent [S] great [C] food quality [A] food [SSEP] [O] excellent [S] bad [C] food quality [A] margaritas']

task, data: asqp rest15
target: [('food style_options', 'menu', 'ok', 'simple')]
output: ['[A] menu [O] simple [S] great [C] food style_options']
sent: ['The', 'menu', 'is', 'fairly', 'simple', 'without', 'much', 'descriptions', '.']
counter: {('food style_options', 'menu', 'great', 'simple'): 5}
output quads: ['[A] menu [O] simple [S] great [C] food style_options']
multi_path: ['[A] menu [O] simple [S] great [C] food style_options', '[O] simple [A] menu [C] food style_options [S] great', '[A] menu [O] simple [C] food style_options [S] great', '[O] simple [A] menu [S] great [C] food style_options', '[O] simple [S] great [C] food style_options [A] menu']

task, data: asqp rest15
target: [('food style_options', 'chicken', 'bad', 'appalled')]
output: ['[A] chicken [O] appalled [S] bad [C] food quality']
sent: ['I', 'took', 'one', 'look', 'at', 'the', 'chicken', 'and', 'I', 'was', 'appalled', '.']
counter: {('food quality', 'chicken', 'bad', 'appalled'): 5}
output quads: ['[A] chicken [O] appalled [S] bad [C] food quality']
multi_path: ['[A] chicken [O] appalled [S] bad [C] food quality', '[O] appalled [A] chicken [C] food quality [S] bad', '[A] chicken [O] appalled [C] food quality [S] bad', '[O] appalled [A] chicken [S] bad [C] food quality', '[O] appalled [S] bad [C] food quality [A] chicken']

task, data: asqp rest15
target: [('food quality', 'sauce', 'bad', 'chinese fast food')]
output: ['[A] sauce [O] more like chinese fast food [S] bad [C] food quality', '[A] sauce [O] more like decent [S] bad [C] food quality']
sent: ['The', 'sauce', 'tasted', 'more', 'like', 'Chinese', 'fast', 'food', 'than', 'decent', 'Korean', '.']
counter: {('food quality', 'sauce', 'bad', 'more like chinese fast food'): 3, ('food quality', 'sauce', 'bad', 'more like decent'): 3, ('food quality', 'sauce', 'bad', 'chinese fast food'): 2, ('food quality', 'sauce', 'bad', 'than decent'): 1, ('food quality', 'sauce', 'bad', 'decent'): 1}
output quads: ['[A] sauce [O] more like chinese fast food [S] bad [C] food quality', '[A] sauce [O] more like decent [S] bad [C] food quality']
multi_path: ['[A] sauce [O] more like chinese fast food [S] bad [C] food quality [SSEP] [A] sauce [O] more like decent [S] bad [C] food quality', '[O] more like chinese fast food [A] sauce [C] food quality [S] bad [SSEP] [O] more like decent [A] sauce [C] food quality [S] bad', '[A] sauce [O] more like chinese fast food [C] food quality [S] bad [SSEP] [A] sauce [O] more like decent [C] food quality [S] bad', '[O] chinese fast food [A] sauce [S] bad [C] food quality [SSEP] [O] than decent [A] sauce [S] bad [C] food quality', '[O] chinese fast food [S] bad [C] food quality [A] sauce [SSEP] [O] decent [S] bad [C] food quality [A] sauce']

task, data: asqp rest15
target: [('food prices', 'japanese food', 'bad', 'overpriced'), ('service general', 'service', 'ok', 'mediocre')]
output: ['[A] japanese food [O] overpriced [S] bad [C] food prices', '[A] service [O] mediocre [S] bad [C] service general']
sent: ['overpriced', 'japanese', 'food', 'with', 'mediocre', 'service']
counter: {('food prices', 'japanese food', 'bad', 'overpriced'): 5, ('service general', 'service', 'bad', 'mediocre'): 5}
output quads: ['[A] japanese food [O] overpriced [S] bad [C] food prices', '[A] service [O] mediocre [S] bad [C] service general']
multi_path: ['[A] japanese food [O] overpriced [S] bad [C] food prices [SSEP] [A] service [O] mediocre [S] bad [C] service general', '[O] overpriced [A] japanese food [C] food prices [S] bad [SSEP] [O] mediocre [A] service [C] service general [S] bad', '[A] japanese food [O] overpriced [C] food prices [S] bad [SSEP] [A] service [O] mediocre [C] service general [S] bad', '[O] overpriced [A] japanese food [S] bad [C] food prices [SSEP] [O] mediocre [A] service [S] bad [C] service general', '[O] overpriced [S] bad [C] food prices [A] japanese food [SSEP] [O] mediocre [S] bad [C] service general [A] service']

task, data: asqp rest15
target: [('ambience general', 'space', 'great', 'good')]
output: ['[A] design of the space [O] good [S] great [C] ambience general']
sent: ['The', 'design', 'of', 'the', 'space', 'is', 'good', '.']
counter: {('ambience general', 'design of the space', 'great', 'good'): 5}
output quads: ['[A] design of the space [O] good [S] great [C] ambience general']
multi_path: ['[A] design of the space [O] good [S] great [C] ambience general', '[O] good [A] design of the space [C] ambience general [S] great', '[A] design of the space [O] good [C] ambience general [S] great', '[O] good [A] design of the space [S] great [C] ambience general', '[O] good [S] great [C] ambience general [A] design of the space']

task, data: asqp rest15
target: [('restaurant general', 'restaraunt', 'ok', 'five star')]
output: ['[A] place [O] fun [S] great [C] restaurant general']
sent: ['its', 'just', 'a', 'fun', 'place', 'to', 'go', ',', 'not', 'a', 'five', 'star', 'restaraunt', '.']
counter: {('restaurant general', 'place', 'great', 'fun'): 5}
output quads: ['[A] place [O] fun [S] great [C] restaurant general']
multi_path: ['[A] place [O] fun [S] great [C] restaurant general', '[O] fun [A] place [C] restaurant general [S] great', '[A] place [O] fun [C] restaurant general [S] great', '[O] fun [A] place [S] great [C] restaurant general', '[O] fun [S] great [C] restaurant general [A] place']

task, data: asqp rest15
target: [('restaurant general', 'place', 'great', 'fanatical'), ('restaurant prices', 'place', 'great', 'fanatical')]
output: ['[A] place [O] fun time [S] great [C] ambience general']
sent: ['im', 'not', 'necessarily', 'fanatical', 'about', 'this', 'place', ',', 'but', 'it', 'was', 'a', 'fun', 'time', 'for', 'low', 'pirces', '.']
counter: {('ambience general', 'place', 'great', 'fun time'): 5}
output quads: ['[A] place [O] fun time [S] great [C] ambience general']
multi_path: ['[A] place [O] fun time [S] great [C] ambience general', '[O] fun time [A] place [C] ambience general [S] great', '[A] place [O] fun time [C] ambience general [S] great', '[O] fun time [A] place [S] great [C] ambience general', '[O] fun time [S] great [C] ambience general [A] place']

task, data: asqp rest15
target: [('food quality', 'food', 'great', 'worth'), ('service general', 'null', 'ok', 'took some time')]
output: ['[A] food [O] worth waiting for [S] bad [C] food quality']
sent: ['Food', 'took', 'some', 'time', 'to', 'prepare', ',', 'all', 'worth', 'waiting', 'for', '.']
counter: {('food quality', 'food', 'bad', 'worth waiting for'): 5}
output quads: ['[A] food [O] worth waiting for [S] bad [C] food quality']
multi_path: ['[A] food [O] worth waiting for [S] bad [C] food quality', '[O] worth waiting for [A] food [C] food quality [S] bad', '[A] food [O] worth waiting for [C] food quality [S] bad', '[O] worth waiting for [A] food [S] bad [C] food quality', '[O] worth waiting for [S] bad [C] food quality [A] food']

task, data: asqp rest15
target: [('service general', 'null', 'great', 'seat me quickly')]
output: ['[A] null [O] quickly [S] great [C] service general', '[A] place [O] packed [S] bad [C] ambience general']
sent: ['When', 'I', 'got', 'there', 'the', 'place', 'was', 'packed', 'but', 'they', 'made', 'sure', 'to', 'seat', 'me', 'quickly', '.']
counter: {('ambience general', 'place', 'bad', 'packed'): 5, ('service general', 'null', 'great', 'quickly'): 5}
output quads: ['[A] place [O] packed [S] bad [C] ambience general', '[A] null [O] quickly [S] great [C] service general']
multi_path: ['[A] place [O] packed [S] bad [C] ambience general [SSEP] [A] it [O] quickly [S] great [C] service general', '[O] packed [A] place [C] ambience general [S] bad [SSEP] [O] quickly [A] it [C] service general [S] great', '[A] place [O] packed [C] ambience general [S] bad [SSEP] [A] it [O] quickly [C] service general [S] great', '[O] packed [A] place [S] bad [C] ambience general [SSEP] [O] quickly [A] it [S] great [C] service general', '[O] packed [S] bad [C] ambience general [A] place [SSEP] [O] quickly [S] great [C] service general [A] it']

task, data: asqp rest15
target: [('service general', 'null', 'bad', 'wtf')]
output: ['[A] null [O] turning away [S] bad [C] service general']
sent: ['I', 'was', 'almost', 'amused', 'by', 'the', 'fact', 'that', 'she', 'was', 'turning', 'away', 'customers', 'at', '9pm', 'on', 'a', 'Friday', 'night', 'because', 'she', '``', 'had', 'a', 'BBQ', 'to', 'go', 'to', '``', 'that', 'night', '-', 'WTF', '?', '?']
counter: {('service general', 'null', 'bad', 'turning away'): 5}
output quads: ['[A] null [O] turning away [S] bad [C] service general']
multi_path: ['[A] it [O] turning away [S] bad [C] service general', '[O] turning away [A] it [C] service general [S] bad', '[A] it [O] turning away [C] service general [S] bad', '[O] turning away [A] it [S] bad [C] service general', '[O] turning away [S] bad [C] service general [A] it']

task, data: asqp rest15
target: [('food quality', 'null', 'bad', 'inedible')]
output: ['[A] waitress [O] inedible [S] bad [C] service general']
sent: ['So', 'I', 'decide', 'to', 'report', 'back', 'to', 'the', 'waitress', 'because', 'it', 'was', 'completely', 'inedible', '.']
counter: {('service general', 'waitress', 'bad', 'inedible'): 5}
output quads: ['[A] waitress [O] inedible [S] bad [C] service general']
multi_path: ['[A] waitress [O] inedible [S] bad [C] service general', '[O] inedible [A] waitress [C] service general [S] bad', '[A] waitress [O] inedible [C] service general [S] bad', '[O] inedible [A] waitress [S] bad [C] service general', '[O] inedible [S] bad [C] service general [A] waitress']

task, data: asqp rest15
target: [('restaurant prices', 'null', 'bad', 'no way represents value'), ('service general', 'null', 'bad', 'torture')]
output: ['[A] null [O] no way represents value [S] bad [C] food prices']
sent: ['At', '$', '120', 'for', 'two', 'people', ',', 'however', ',', 'this', 'in', 'no', 'way', 'represents', 'value', ',', 'unless', 'you', "'re", 'looking', 'to', 'pay', 'by', 'the', 'hour', 'for', 'passive-aggressive', 'torture', '.']
counter: {('food prices', 'null', 'bad', 'no way represents value'): 5, ('food quality', 'null', 'bad', 'passive-aggressive'): 2}
output quads: ['[A] null [O] no way represents value [S] bad [C] food prices']
multi_path: ['[A] it [O] no way represents value [S] bad [C] food prices', '[O] no way represents value [A] it [C] food prices [S] bad [SSEP] [O] passive-aggressive [A] it [C] food quality [S] bad', '[A] it [O] no way represents value [C] food prices [S] bad [SSEP] [A] it [O] passive-aggressive [C] food quality [S] bad', '[O] no way represents value [A] it [S] bad [C] food prices', '[O] no way represents value [S] bad [C] food prices [A] it']

task, data: asqp rest15
target: [('food quality', 'pasta', 'bad', "didn't have enough sauce"), ('food quality', 'pasta', 'great', 'well cooked')]
output: ['[A] pasta [O] well cooked [S] great [C] food quality', "[A] sauce [O] didn't have enough sauce [S] bad [C] food quality"]
sent: ['The', 'pasta', 'was', 'well', 'cooked', ',', 'did', "n't", 'have', 'enough', 'sauce', 'though', 'or', 'flavor', '.']
counter: {('food quality', 'pasta', 'great', 'well cooked'): 5, ('food quality', 'sauce', 'bad', "didn't have enough"): 2, ('food quality', 'sauce', 'bad', "didn't have enough sauce"): 3}
output quads: ['[A] pasta [O] well cooked [S] great [C] food quality', "[A] sauce [O] didn't have enough sauce [S] bad [C] food quality"]
multi_path: ["[A] pasta [O] well cooked [S] great [C] food quality [SSEP] [A] sauce [O] didn't have enough [S] bad [C] food quality", "[O] well cooked [A] pasta [C] food quality [S] great [SSEP] [O] didn't have enough sauce [A] sauce [C] food quality [S] bad", "[A] pasta [O] well cooked [C] food quality [S] great [SSEP] [A] sauce [O] didn't have enough [C] food quality [S] bad", "[O] well cooked [A] pasta [S] great [C] food quality [SSEP] [O] didn't have enough sauce [A] sauce [S] bad [C] food quality", "[O] well cooked [S] great [C] food quality [A] pasta [SSEP] [O] didn't have enough sauce [S] bad [C] food quality [A] sauce"]

task, data: asqp rest15
target: [('ambience general', 'restaurant', 'great', 'beautiful'), ('restaurant general', 'restaurant', 'great', 'beautiful'), ('service general', 'staff', 'bad', 'pays more attention')]
output: ['[A] restaurant [O] beautiful [S] great [C] ambience general']
sent: ['All', 'in', 'all', ',', 'I', 'would', 'return', '-', 'as', 'it', 'was', 'a', 'beautiful', 'restaurant', '-', 'but', 'I', 'hope', 'the', 'staff', 'pays', 'more', 'attention', 'to', 'the', 'little', 'details', 'in', 'the', 'future', '.']
counter: {('ambience general', 'restaurant', 'great', 'beautiful'): 5, ('service general', 'staff', 'great', 'hope the staff'): 1, ('service general', 'staff', 'bad', 'hope the staff'): 1, ('service general', 'staff', 'bad', 'more attention'): 1}
output quads: ['[A] restaurant [O] beautiful [S] great [C] ambience general']
multi_path: ['[A] restaurant [O] beautiful [S] great [C] ambience general [SSEP] [A] staff [O] hope the staff [S] great [C] service general', '[O] beautiful [A] restaurant [C] ambience general [S] great', '[A] restaurant [O] beautiful [C] ambience general [S] great [SSEP] [A] staff [O] hope the staff [C] service general [S] bad', '[O] beautiful [A] restaurant [S] great [C] ambience general', '[O] beautiful [S] great [C] ambience general [A] restaurant [SSEP] [O] more attention [S] bad [C] service general [A] staff']

task, data: asqp rest15
target: [('food quality', 'sushi', 'great', 'reliable')]
output: ['[A] sushi [O] fresh [S] great [C] food quality', '[A] sushi [O] reliable [S] great [C] food quality']
sent: ['Reliable', ',', 'Fresh', 'Sushi']
counter: {('food quality', 'sushi', 'great', 'reliable'): 5, ('food quality', 'sushi', 'great', 'fresh'): 5}
output quads: ['[A] sushi [O] reliable [S] great [C] food quality', '[A] sushi [O] fresh [S] great [C] food quality']
multi_path: ['[A] sushi [O] reliable [S] great [C] food quality [SSEP] [A] sushi [O] fresh [S] great [C] food quality', '[O] reliable [A] sushi [C] food quality [S] great [SSEP] [O] fresh [A] sushi [C] food quality [S] great', '[A] sushi [O] reliable [C] food quality [S] great [SSEP] [A] sushi [O] fresh [C] food quality [S] great', '[O] reliable [A] sushi [S] great [C] food quality [SSEP] [O] fresh [A] sushi [S] great [C] food quality', '[O] reliable [S] great [C] food quality [A] sushi [SSEP] [O] fresh [S] great [C] food quality [A] sushi']

task, data: asqp rest15
target: [('food quality', 'fish dishes', 'great', 'exceptional'), ('service general', 'front of house staff', 'bad', 'hideous'), ('service general', 'waiters', 'great', 'fantastic')]
output: ['[A] front of house staff [O] hideous [S] bad [C] service general', '[A] people [O] hideous [S] bad [C] service general', '[A] waiters [O] fantastic [S] great [C] service general']
sent: ['Each', 'time', 'we', "'ve", 'been', ',', 'the', 'front', 'of', 'house', 'staff', '(', 'not', 'the', 'waiters', '-', 'they', "'re", 'fantastic', '-', 'but', 'the', 'people', 'who', 'greet', 'and', 'seat', 'you', ')', 'has', 'been', 'so', 'hideous', 'to', 'us', 'that', 'were', 'it', 'not', 'for', 'the', 'exceptional', 'fish', 'dishes', 'I', 'would', 'never', 'return', '.']
counter: {('service general', 'front of house staff', 'bad', 'hideous'): 5, ('service general', 'waiters', 'great', 'fantastic'): 5, ('service general', 'people', 'great', 'hideous'): 2, ('service general', 'people', 'bad', 'hideous'): 3}
output quads: ['[A] front of house staff [O] hideous [S] bad [C] service general', '[A] waiters [O] fantastic [S] great [C] service general', '[A] people [O] hideous [S] bad [C] service general']
multi_path: ['[A] front of house staff [O] hideous [S] bad [C] service general [SSEP] [A] waiters [O] fantastic [S] great [C] service general [SSEP] [A] people [O] hideous [S] great [C] service general', '[O] hideous [A] front of house staff [C] service general [S] bad [SSEP] [O] fantastic [A] waiters [C] service general [S] great [SSEP] [O] hideous [A] people [C] service general [S] bad', '[A] front of house staff [O] hideous [C] service general [S] bad [SSEP] [A] waiters [O] fantastic [C] service general [S] great [SSEP] [A] people [O] hideous [C] service general [S] bad', '[O] hideous [A] front of house staff [S] bad [C] service general [SSEP] [O] fantastic [A] waiters [S] great [C] service general [SSEP] [O] hideous [A] people [S] great [C] service general', '[O] hideous [S] bad [C] service general [A] front of house staff [SSEP] [O] fantastic [S] great [C] service general [A] waiters [SSEP] [O] hideous [S] bad [C] service general [A] people']

task, data: asqp rest15
target: [('service general', 'null', 'bad', 'upset')]
output: ['[A] null [O] never ate [S] bad [C] service general']
sent: ['We', 'never', 'ate', 'because', 'by', 'close', 'to', '2', 'in', 'the', 'monring', 'we', 'were', 'not', 'served', 'and', 'were', 'too', 'upset', 'ad', 'tired', 'to', 'start', 'eating', '.']
counter: {('service general', 'null', 'bad', 'never ate'): 4, ('food quality', 'null', 'bad', 'never ate'): 1, ('service general', 'null', 'bad', 'upset'): 1}
output quads: ['[A] null [O] never ate [S] bad [C] service general']
multi_path: ['[A] it [O] never ate [S] bad [C] service general', '[O] never ate [A] it [C] service general [S] bad', '[A] it [O] never ate [C] service general [S] bad', '[O] never ate [A] it [S] bad [C] service general', '[O] never ate [S] bad [C] food quality [A] it [SSEP] [O] upset [S] bad [C] service general [A] it']

task, data: asqp rest15
target: [('restaurant prices', 'restaurant', 'bad', 'expensive'), ('service general', 'null', 'bad', 'disrespectful')]
output: ['[A] nyc restaurant [O] disrespectful [S] bad [C] restaurant miscellaneous']
sent: ['Can', '’', 't', 'believe', 'how', 'an', 'expensive', 'NYC', 'restaurant', 'can', 'be', 'so', 'disrespectful', 'to', 'its', 'clients', '.']
counter: {('restaurant miscellaneous', 'nyc restaurant', 'bad', 'disrespectful'): 5}
output quads: ['[A] nyc restaurant [O] disrespectful [S] bad [C] restaurant miscellaneous']
multi_path: ['[A] nyc restaurant [O] disrespectful [S] bad [C] restaurant miscellaneous', '[O] disrespectful [A] nyc restaurant [C] restaurant miscellaneous [S] bad', '[A] nyc restaurant [O] disrespectful [C] restaurant miscellaneous [S] bad', '[O] disrespectful [A] nyc restaurant [S] bad [C] restaurant miscellaneous', '[O] disrespectful [S] bad [C] restaurant miscellaneous [A] nyc restaurant']

task, data: asqp rest15
target: [('food quality', 'null', 'great', 'consistent'), ('food quality', 'null', 'great', 'fresh'), ('food style_options', 'null', 'great', 'creative')]
output: ['[A] null [O] consistent [S] great [C] ambience general', '[A] null [O] creative [S] great [C] ambience general', '[A] null [O] fresh [S] great [C] food quality']
sent: ['Creative', ',', 'consistent', ',', 'fresh', '.']
counter: {('ambience general', 'null', 'great', 'creative'): 5, ('ambience general', 'null', 'great', 'consistent'): 5, ('food quality', 'null', 'great', 'fresh'): 4, ('ambience general', 'null', 'great', 'fresh'): 1}
output quads: ['[A] null [O] creative [S] great [C] ambience general', '[A] null [O] consistent [S] great [C] ambience general', '[A] null [O] fresh [S] great [C] food quality']
multi_path: ['[A] it [O] creative [S] great [C] ambience general [SSEP] [A] it [O] consistent [S] great [C] ambience general [SSEP] [A] it [O] fresh [S] great [C] food quality', '[O] creative [A] it [C] ambience general [S] great [SSEP] [O] consistent [A] it [C] ambience general [S] great [SSEP] [O] fresh [A] it [C] food quality [S] great', '[A] it [O] creative [C] ambience general [S] great [SSEP] [A] it [O] consistent [C] ambience general [S] great [SSEP] [A] it [O] fresh [C] food quality [S] great', '[O] creative [A] it [S] great [C] ambience general [SSEP] [O] consistent [A] it [S] great [C] ambience general [SSEP] [O] fresh [A] it [S] great [C] food quality', '[O] creative [S] great [C] ambience general [A] it [SSEP] [O] consistent [S] great [C] ambience general [A] it [SSEP] [O] fresh [S] great [C] ambience general [A] it']

task, data: asqp rest15
target: [('food quality', 'crust', 'great', 'cooked well'), ('food style_options', 'pizza', 'great', 'fully loaded')]
output: ['[A] crust [O] imazingly cooked well [S] great [C] food quality', '[A] pizza [O] fully loaded [S] great [C] food style_options']
sent: ['the', 'crust', 'was', 'imazingly', 'cooked', 'well', 'and', 'pizza', 'was', 'fully', 'loaded', ':', ')', ':', ')', ':', ')']
counter: {('food quality', 'crust', 'great', 'imazingly cooked well'): 5, ('food style_options', 'pizza', 'great', 'fully loaded'): 5}
output quads: ['[A] crust [O] imazingly cooked well [S] great [C] food quality', '[A] pizza [O] fully loaded [S] great [C] food style_options']
multi_path: ['[A] crust [O] imazingly cooked well [S] great [C] food quality [SSEP] [A] pizza [O] fully loaded [S] great [C] food style_options', '[O] imazingly cooked well [A] crust [C] food quality [S] great [SSEP] [O] fully loaded [A] pizza [C] food style_options [S] great', '[A] crust [O] imazingly cooked well [C] food quality [S] great [SSEP] [A] pizza [O] fully loaded [C] food style_options [S] great', '[O] imazingly cooked well [A] crust [S] great [C] food quality [SSEP] [O] fully loaded [A] pizza [S] great [C] food style_options', '[O] imazingly cooked well [S] great [C] food quality [A] crust [SSEP] [O] fully loaded [S] great [C] food style_options [A] pizza']

task, data: asqp rest15
target: [('restaurant general', 'null', 'bad', 'mind-bogglingly uncomfortable')]
output: ['[A] null [O] uncomfortable [S] bad [C] restaurant general']
sent: ['This', 'was', ',', 'from', 'start', 'to', 'finish', ',', 'a', 'mind-bogglingly', 'uncomfortable', 'experience', '.']
counter: {('restaurant general', 'null', 'bad', 'mind-bogglingly uncomfortable'): 2, ('restaurant general', 'null', 'bad', 'uncomfortable'): 3}
output quads: ['[A] null [O] uncomfortable [S] bad [C] restaurant general']
multi_path: ['[A] it [O] mind-bogglingly uncomfortable [S] bad [C] restaurant general', '[O] uncomfortable [A] it [C] restaurant general [S] bad', '[A] it [O] mind-bogglingly uncomfortable [C] restaurant general [S] bad', '[O] uncomfortable [A] it [S] bad [C] restaurant general', '[O] uncomfortable [S] bad [C] restaurant general [A] it']

task, data: asqp rest15
target: [('restaurant general', 'casa la femme', 'bad', 'offended'), ('restaurant prices', 'casa la femme', 'bad', 'offended')]
output: ['[A] casa la femme [O] offended [S] bad [C] restaurant miscellaneous']
sent: ['I', 'literally', 'just', 'got', 'back', 'home', 'after', 'visiting', 'Casa', 'La', 'Femme', 'and', 'was', 'so', 'offended', 'by', 'my', 'visit', 'felt', 'it', 'necessary', 'to', 'try', 'and', 'warn', 'other', 'diners', 'who', 'value', 'their', 'money', 'and', 'time', '.']
counter: {('restaurant miscellaneous', 'casa la femme', 'bad', 'offended'): 5}
output quads: ['[A] casa la femme [O] offended [S] bad [C] restaurant miscellaneous']
multi_path: ['[A] casa la femme [O] offended [S] bad [C] restaurant miscellaneous', '[O] offended [A] casa la femme [C] restaurant miscellaneous [S] bad', '[A] casa la femme [O] offended [C] restaurant miscellaneous [S] bad', '[O] offended [A] casa la femme [S] bad [C] restaurant miscellaneous', '[O] offended [S] bad [C] restaurant miscellaneous [A] casa la femme']

task, data: asqp rest15
target: [('food quality', 'meal', 'great', 'never a bad'), ('restaurant general', 'null', 'great', 'never swaying'), ('service general', 'service', 'great', 'never bad')]
output: ['[A] meal [O] never swaying [S] great [C] food quality', '[A] null [O] never swaying [S] great [C] ambience general', '[A] service [O] never bad [S] great [C] service general']
sent: ['never', 'swaying', ',', 'never', 'a', 'bad', 'meal', ',', 'never', 'bad', 'service', '...']
counter: {('ambience general', 'null', 'great', 'never swaying'): 5, ('food quality', 'meal', 'great', 'never a bad'): 2, ('service general', 'service', 'great', 'never bad'): 5, ('food quality', 'meal', 'great', 'never swaying'): 3}
output quads: ['[A] null [O] never swaying [S] great [C] ambience general', '[A] service [O] never bad [S] great [C] service general', '[A] meal [O] never swaying [S] great [C] food quality']
multi_path: ['[A] it [O] never swaying [S] great [C] ambience general [SSEP] [A] meal [O] never a bad [S] great [C] food quality [SSEP] [A] service [O] never bad [S] great [C] service general', '[O] never swaying [A] it [C] ambience general [S] great [SSEP] [O] never swaying [A] meal [C] food quality [S] great [SSEP] [O] never bad [A] service [C] service general [S] great', '[A] it [O] never swaying [C] ambience general [S] great [SSEP] [A] meal [O] never a bad [C] food quality [S] great [SSEP] [A] service [O] never bad [C] service general [S] great', '[O] never swaying [A] it [S] great [C] ambience general [SSEP] [O] never swaying [A] meal [S] great [C] food quality [SSEP] [O] never bad [A] service [S] great [C] service general', '[O] never swaying [S] great [C] ambience general [A] it [SSEP] [O] never swaying [S] great [C] food quality [A] meal [SSEP] [O] never bad [S] great [C] service general [A] service']

task, data: asqp rest15
target: [('service general', 'waiter', 'bad', 'garbage')]
output: ['[A] waiter [O] delivered [S] bad [C] service general']
sent: ['The', 'waiter', 'delivered', 'our', 'food', 'while', 'holding', 'what', 'appeared', 'to', 'be', 'a', 'plastic', 'bag', 'of', 'garbage', 'in', 'one', 'hand', '.']
counter: {('service general', 'waiter', 'bad', 'delivered'): 5}
output quads: ['[A] waiter [O] delivered [S] bad [C] service general']
multi_path: ['[A] waiter [O] delivered [S] bad [C] service general', '[O] delivered [A] waiter [C] service general [S] bad', '[A] waiter [O] delivered [C] service general [S] bad', '[O] delivered [A] waiter [S] bad [C] service general', '[O] delivered [S] bad [C] service general [A] waiter']

task, data: asqp rest15
target: [('drinks prices', 'drinks', 'bad', 'over $ 500'), ('food prices', 'pita bread', 'bad', 'over $ 500'), ('service general', 'null', 'bad', 'rude'), ('service general', 'service', 'bad', 'horrible')]
output: ['[A] null [O] rude [S] bad [C] service general', '[A] service [O] horrible [S] bad [C] service general']
sent: ['They', 'are', 'extremely', 'rude', ',', 'not', 'even', 'apologizing', 'for', 'the', 'horrible', 'service', 'we', 'got', 'and', 'handing', 'us', 'a', 'bill', 'well', 'over', '$', '500', 'for', 'some', 'drinks', 'adn', 'their', 'pita', 'bread', '!']
counter: {('service general', 'null', 'bad', 'rude'): 7, ('service general', 'service', 'bad', 'horrible'): 5, ('food prices', 'pita bread', 'bad', 'rude'): 1}
output quads: ['[A] null [O] rude [S] bad [C] service general', '[A] service [O] horrible [S] bad [C] service general']
multi_path: ['[A] it [O] rude [S] bad [C] service general [SSEP] [A] service [O] horrible [S] bad [C] service general', '[O] rude [A] it [C] service general [S] bad [SSEP] [O] horrible [A] service [C] service general [S] bad [SSEP] [O] rude [A] it [C] service general [S] bad', '[A] it [O] rude [C] service general [S] bad [SSEP] [A] service [O] horrible [C] service general [S] bad [SSEP] [A] it [O] rude [C] service general [S] bad', '[O] rude [A] it [S] bad [C] service general [SSEP] [O] horrible [A] service [S] bad [C] service general', '[O] rude [S] bad [C] service general [A] it [SSEP] [O] horrible [S] bad [C] service general [A] service [SSEP] [O] rude [S] bad [C] food prices [A] pita bread']

task, data: asqp rest15
target: [('service general', 'raymond', 'great', 'rocks')]
output: ['[A] bartender [O] rocks [S] great [C] service general']
sent: ['Raymond', 'the', 'bartender', 'rocks', '!']
counter: {('service general', 'bartender', 'great', 'rocks'): 4, ('service general', 'raymond the bartender', 'great', 'rocks'): 1}
output quads: ['[A] bartender [O] rocks [S] great [C] service general']
multi_path: ['[A] bartender [O] rocks [S] great [C] service general', '[O] rocks [A] bartender [C] service general [S] great', '[A] bartender [O] rocks [C] service general [S] great', '[O] rocks [A] bartender [S] great [C] service general', '[O] rocks [S] great [C] service general [A] raymond the bartender']

task, data: asqp rest15
target: [('service general', 'hostess', 'bad', 'rude'), ('service general', 'null', 'bad', 'distinct')]
output: ['[A] hostess [O] rude [S] bad [C] service general']
sent: ['The', 'hostess', 'was', 'rude', 'and', 'I', 'got', 'a', 'distinct', 'feeling', 'that', 'they', 'did', 'not', 'want', 'to', 'serve', 'us', '.']
counter: {('service general', 'hostess', 'bad', 'rude'): 5}
output quads: ['[A] hostess [O] rude [S] bad [C] service general']
multi_path: ['[A] hostess [O] rude [S] bad [C] service general', '[O] rude [A] hostess [C] service general [S] bad', '[A] hostess [O] rude [C] service general [S] bad', '[O] rude [A] hostess [S] bad [C] service general', '[O] rude [S] bad [C] service general [A] hostess']

task, data: asqp rest15
target: [('restaurant general', 'null', 'bad', 'sadly'), ('restaurant prices', 'null', 'bad', 'paid dearly for it')]
output: ['[A] null [O] paid dearly [S] bad [C] restaurant prices', '[A] null [O] sadly [S] bad [C] restaurant general']
sent: ['I', 'wanted', 'to', 'go', 'there', 'to', 'see', 'if', 'it', 'was', 'worth', 'it', 'and', 'sadly', ',', 'curiousity', 'got', 'the', 'best', 'of', 'me', 'and', 'I', 'paid', 'dearly', 'for', 'it', '.']
counter: {('restaurant general', 'null', 'bad', 'sadly'): 5, ('restaurant prices', 'null', 'bad', 'paid dearly'): 3, ('restaurant prices', 'null', 'bad', 'dearly'): 2}
output quads: ['[A] null [O] sadly [S] bad [C] restaurant general', '[A] null [O] paid dearly [S] bad [C] restaurant prices']
multi_path: ['[A] it [O] sadly [S] bad [C] restaurant general [SSEP] [A] it [O] paid dearly [S] bad [C] restaurant prices', '[O] sadly [A] it [C] restaurant general [S] bad [SSEP] [O] dearly [A] it [C] restaurant prices [S] bad', '[A] it [O] sadly [C] restaurant general [S] bad [SSEP] [A] it [O] paid dearly [C] restaurant prices [S] bad', '[O] sadly [A] it [S] bad [C] restaurant general [SSEP] [O] dearly [A] it [S] bad [C] restaurant prices', '[O] sadly [S] bad [C] restaurant general [A] it [SSEP] [O] paid dearly [S] bad [C] restaurant prices [A] it']

task, data: asqp rest15
target: [('food prices', 'null', 'great', 'phenomenal'), ('food quality', 'null', 'great', 'amazing')]
output: ['[A] flavors [O] amazing [S] great [C] food quality', '[A] null [O] phenomenal [S] great [C] restaurant prices']
sent: ['The', 'flavors', 'are', 'amazing', 'and', 'the', 'value', 'is', 'phenomenal', '.']
counter: {('food quality', 'flavors', 'great', 'amazing'): 5, ('restaurant prices', 'null', 'great', 'phenomenal'): 5}
output quads: ['[A] flavors [O] amazing [S] great [C] food quality', '[A] null [O] phenomenal [S] great [C] restaurant prices']
multi_path: ['[A] flavors [O] amazing [S] great [C] food quality [SSEP] [A] it [O] phenomenal [S] great [C] restaurant prices', '[O] amazing [A] flavors [C] food quality [S] great [SSEP] [O] phenomenal [A] it [C] restaurant prices [S] great', '[A] flavors [O] amazing [C] food quality [S] great [SSEP] [A] it [O] phenomenal [C] restaurant prices [S] great', '[O] amazing [A] flavors [S] great [C] food quality [SSEP] [O] phenomenal [A] it [S] great [C] restaurant prices', '[O] amazing [S] great [C] food quality [A] flavors [SSEP] [O] phenomenal [S] great [C] restaurant prices [A] it']

task, data: asqp rest15
target: [('food quality', 'potato balls', 'great', 'not dry')]
output: ['[A] potato balls [O] buttery [S] great [C] food quality', '[A] potato balls [O] not dry [S] great [C] food quality']
sent: ['The', 'potato', 'balls', 'were', 'not', 'dry', 'at', 'all', '...', 'in', 'fact', 'it', 'was', 'buttery', '.']
counter: {('food quality', 'potato balls', 'great', 'not dry'): 5, ('food quality', 'potato balls', 'great', 'buttery'): 5}
output quads: ['[A] potato balls [O] not dry [S] great [C] food quality', '[A] potato balls [O] buttery [S] great [C] food quality']
multi_path: ['[A] potato balls [O] not dry [S] great [C] food quality [SSEP] [A] potato balls [O] buttery [S] great [C] food quality', '[O] not dry [A] potato balls [C] food quality [S] great [SSEP] [O] buttery [A] potato balls [C] food quality [S] great', '[A] potato balls [O] not dry [C] food quality [S] great [SSEP] [A] potato balls [O] buttery [C] food quality [S] great', '[O] not dry [A] potato balls [S] great [C] food quality [SSEP] [O] buttery [A] potato balls [S] great [C] food quality', '[O] not dry [S] great [C] food quality [A] potato balls [SSEP] [O] buttery [S] great [C] food quality [A] potato balls']

task, data: asqp rest15
target: [('food quality', 'toppings', 'great', 'great'), ('restaurant miscellaneous', 'place', 'great', 'great')]
output: ['[A] toppings [O] great [S] great [C] food quality']
sent: ['great', 'toppings', 'definitely', 'a', 'place', 'you', 'need', 'to', 'check', 'out', 'for', 'late', 'night', 'munchies', 'or', 'a', 'mid', 'day', 'boost', '!']
counter: {('food quality', 'toppings', 'great', 'great'): 5}
output quads: ['[A] toppings [O] great [S] great [C] food quality']
multi_path: ['[A] toppings [O] great [S] great [C] food quality', '[O] great [A] toppings [C] food quality [S] great', '[A] toppings [O] great [C] food quality [S] great', '[O] great [A] toppings [S] great [C] food quality', '[O] great [S] great [C] food quality [A] toppings']

task, data: asqp rest15
target: [('restaurant prices', 'null', 'bad', 'huge turnoff'), ('service general', 'null', 'bad', 'drive up the bill')]
output: ['[A] null [O] turnoff [S] bad [C] restaurant prices']
sent: ['I', 'do', "n't", 'appreciate', 'places', 'or', 'people', 'that', 'try', 'to', 'drive', 'up', 'the', 'bill', 'without', 'the', 'patron', "'s", 'knowledge', 'so', 'that', 'was', 'a', 'huge', 'turnoff', '(', 'more', 'than', 'the', 'price', ')', '.']
counter: {('restaurant prices', 'null', 'bad', 'turnoff'): 5}
output quads: ['[A] null [O] turnoff [S] bad [C] restaurant prices']
multi_path: ['[A] it [O] turnoff [S] bad [C] restaurant prices', '[O] turnoff [A] it [C] restaurant prices [S] bad', '[A] it [O] turnoff [C] restaurant prices [S] bad', '[O] turnoff [A] it [S] bad [C] restaurant prices', '[O] turnoff [S] bad [C] restaurant prices [A] it']

task, data: asqp rest15
target: [('food quality', 'slice of nyc pizza', 'ok', 'quintessential')]
output: ['[A] nyc pizza [O] quintessential [S] great [C] food quality']
sent: ['A', 'quintessential', 'slice', 'of', 'NYC', 'pizza', '.']
counter: {('food quality', 'slice of nyc pizza', 'great', 'quintessential'): 2, ('food quality', 'nyc pizza', 'great', 'quintessential'): 3}
output quads: ['[A] nyc pizza [O] quintessential [S] great [C] food quality']
multi_path: ['[A] slice of nyc pizza [O] quintessential [S] great [C] food quality', '[O] quintessential [A] nyc pizza [C] food quality [S] great', '[A] nyc pizza [O] quintessential [C] food quality [S] great', '[O] quintessential [A] nyc pizza [S] great [C] food quality', '[O] quintessential [S] great [C] food quality [A] slice of nyc pizza']

task, data: asqp rest15
target: [('service general', 'null', 'bad', 'waited over 1 /2 hour to 45 minutes')]
output: ['[A] null [O] never offered a drink [S] bad [C] service general', '[A] null [O] waited over 1 /2 hour [S] bad [C] service general']
sent: ['For', 'each', 'course', 'we', 'waited', 'over', '1', '/2', 'hour', 'to', '45', 'minutes', 'and', 'were', 'never', 'offered', 'a', 'drink', '.']
counter: {('service general', 'null', 'bad', 'waited over 1 /2 hour'): 3, ('service general', 'null', 'bad', 'never offered a drink'): 3, ('drinks quality', 'null', 'bad', 'never offered a drink'): 1}
output quads: ['[A] null [O] waited over 1 /2 hour [S] bad [C] service general', '[A] null [O] never offered a drink [S] bad [C] service general']
multi_path: ['[A] it [O] waited over 1 /2 hour [S] bad [C] service general [SSEP] [A] it [O] never offered a drink [S] bad [C] service general', '[O] never offered a drink [A] it [C] service general [S] bad', '[A] it [O] waited over 1 /2 hour [C] service general [S] bad [SSEP] [A] it [O] never offered a drink [C] drinks quality [S] bad', '[O] never offered a drink [A] it [S] bad [C] service general', '[O] waited over 1 /2 hour [S] bad [C] service general [A] it']

task, data: asqp rest15
target: [('food quality', 'pizza', 'great', 'yummy')]
output: ['[A] pizza [O] super yummy [S] great [C] food quality']
sent: ['Super', 'YUMMY', 'Pizza', '!']
counter: {('food quality', 'pizza', 'great', 'super yummy'): 5}
output quads: ['[A] pizza [O] super yummy [S] great [C] food quality']
multi_path: ['[A] pizza [O] super yummy [S] great [C] food quality', '[O] super yummy [A] pizza [C] food quality [S] great', '[A] pizza [O] super yummy [C] food quality [S] great', '[O] super yummy [A] pizza [S] great [C] food quality', '[O] super yummy [S] great [C] food quality [A] pizza']

task, data: asqp rest15
target: [('food quality', 'greek and cypriot dishes', 'great', 'excellent'), ('food quality', 'gyro', 'great', 'the reason to come')]
output: ['[A] greek and cypriot dishes [O] excellent [S] great [C] food quality', '[A] gyro [O] wasted [S] great [C] food quality']
sent: ['All', 'the', 'various', 'Greek', 'and', 'Cypriot', 'dishes', 'are', 'excellent', ',', 'but', 'the', 'gyro', 'is', 'the', 'reason', 'to', 'come', '--', 'if', 'you', 'do', "n't", 'eat', 'one', 'your', 'trip', 'was', 'wasted', '.']
counter: {('food quality', 'greek and cypriot dishes', 'great', 'excellent'): 5, ('food quality', 'gyro', 'great', 'wasted'): 5}
output quads: ['[A] greek and cypriot dishes [O] excellent [S] great [C] food quality', '[A] gyro [O] wasted [S] great [C] food quality']
multi_path: ['[A] greek and cypriot dishes [O] excellent [S] great [C] food quality [SSEP] [A] gyro [O] wasted [S] great [C] food quality', '[O] excellent [A] greek and cypriot dishes [C] food quality [S] great [SSEP] [O] wasted [A] gyro [C] food quality [S] great', '[A] greek and cypriot dishes [O] excellent [C] food quality [S] great [SSEP] [A] gyro [O] wasted [C] food quality [S] great', '[O] excellent [A] greek and cypriot dishes [S] great [C] food quality [SSEP] [O] wasted [A] gyro [S] great [C] food quality', '[O] excellent [S] great [C] food quality [A] greek and cypriot dishes [SSEP] [O] wasted [S] great [C] food quality [A] gyro']

task, data: asqp rest15
target: [('ambience general', 'null', 'great', 'intimate'), ('food quality', 'food', 'great', 'superb'), ('restaurant general', 'null', 'great', 'worth')]
output: ['[A] food [O] homey [S] great [C] food quality', '[A] food [O] intimate [S] great [C] food quality', '[A] food [O] superb [S] great [C] food quality', '[A] food [O] top notch [S] great [C] food quality', '[A] wait [O] worth [S] great [C] service general']
sent: ['Wish', 'NY', 'had', 'more', 'of', 'these', 'kind', 'of', 'places', ':', 'intimate', ',', 'superb', 'food', ',', 'homey', ',', 'top', 'notch', 'all', 'the', 'way', 'around', ',', 'certainly', 'worth', 'the', 'wait', '.']
counter: {('food quality', 'food', 'great', 'intimate'): 4, ('food quality', 'food', 'great', 'superb'): 5, ('food quality', 'food', 'great', 'homey'): 4, ('food quality', 'food', 'great', 'top notch'): 5, ('service general', 'wait', 'great', 'worth'): 4, ('restaurant general', 'places', 'great', 'intimate'): 1, ('ambience general', 'food', 'great', 'homey'): 1, ('restaurant prices', 'wait', 'great', 'worth'): 1}
output quads: ['[A] food [O] intimate [S] great [C] food quality', '[A] food [O] superb [S] great [C] food quality', '[A] food [O] homey [S] great [C] food quality', '[A] food [O] top notch [S] great [C] food quality', '[A] wait [O] worth [S] great [C] service general']
multi_path: ['[A] food [O] intimate [S] great [C] food quality [SSEP] [A] food [O] superb [S] great [C] food quality [SSEP] [A] food [O] homey [S] great [C] food quality [SSEP] [A] food [O] top notch [S] great [C] food quality [SSEP] [A] wait [O] worth [S] great [C] service general', '[O] intimate [A] food [C] food quality [S] great [SSEP] [O] superb [A] food [C] food quality [S] great [SSEP] [O] homey [A] food [C] food quality [S] great [SSEP] [O] top notch [A] food [C] food quality [S] great [SSEP] [O] worth [A] wait [C] service general [S] great', '[A] food [O] intimate [C] food quality [S] great [SSEP] [A] food [O] superb [C] food quality [S] great [SSEP] [A] food [O] homey [C] food quality [S] great [SSEP] [A] food [O] top notch [C] food quality [S] great [SSEP] [A] wait [O] worth [C] service general [S] great', '[O] intimate [A] food [S] great [C] food quality [SSEP] [O] superb [A] food [S] great [C] food quality [SSEP] [O] homey [A] food [S] great [C] food quality [SSEP] [O] top notch [A] food [S] great [C] food quality [SSEP] [O] worth [A] wait [S] great [C] service general', '[O] intimate [S] great [C] restaurant general [A] places [SSEP] [O] superb [S] great [C] food quality [A] food [SSEP] [O] homey [S] great [C] ambience general [A] food [SSEP] [O] top notch [S] great [C] food quality [A] food [SSEP] [O] worth [S] great [C] restaurant prices [A] wait']

task, data: asqp rest15
target: [('restaurant general', 'bukhara', 'great', 'top')]
output: ['[A] bukhara [O] top 5 [S] great [C] restaurant general']
sent: ['Bukhara', 'is', 'on', 'my', 'top', '5', 'Indian', 'places', 'in', 'NYC']
counter: {('restaurant general', 'bukhara', 'great', 'top 5'): 5}
output quads: ['[A] bukhara [O] top 5 [S] great [C] restaurant general']
multi_path: ['[A] bukhara [O] top 5 [S] great [C] restaurant general', '[O] top 5 [A] bukhara [C] restaurant general [S] great', '[A] bukhara [O] top 5 [C] restaurant general [S] great', '[O] top 5 [A] bukhara [S] great [C] restaurant general', '[O] top 5 [S] great [C] restaurant general [A] bukhara']

task, data: asqp rest15
target: [('service general', 'service', 'great', 'quick')]
output: ['[A] service [O] friendly [S] great [C] service general', '[A] service [O] quick [S] great [C] service general']
sent: ['The', 'service', 'was', 'quick', 'and', 'friendly', '.']
counter: {('service general', 'service', 'great', 'quick'): 5, ('service general', 'service', 'great', 'friendly'): 5}
output quads: ['[A] service [O] quick [S] great [C] service general', '[A] service [O] friendly [S] great [C] service general']
multi_path: ['[A] service [O] quick [S] great [C] service general [SSEP] [A] service [O] friendly [S] great [C] service general', '[O] quick [A] service [C] service general [S] great [SSEP] [O] friendly [A] service [C] service general [S] great', '[A] service [O] quick [C] service general [S] great [SSEP] [A] service [O] friendly [C] service general [S] great', '[O] quick [A] service [S] great [C] service general [SSEP] [O] friendly [A] service [S] great [C] service general', '[O] quick [S] great [C] service general [A] service [SSEP] [O] friendly [S] great [C] service general [A] service']

task, data: asqp rest15
target: [('drinks quality', 'sake ’ s', 'great', 'successfully'), ('drinks quality', 'sake ’ s', 'great', 'very well')]
output: ['[A] courses [O] well [S] great [C] drinks quality', '[A] sake ’ s [O] complimented [S] great [C] drinks quality', '[A] sake ’ s [O] successfully easing [S] great [C] drinks style_options']
sent: ['The', 'sake', '’', 's', 'complimented', 'the', 'courses', 'very', 'well', 'and', 'is', 'successfully', 'easing', 'me', 'into', 'the', 'sake', 'world', '.']
counter: {('drinks quality', 'sake ’ s', 'great', 'complimented'): 5, ('drinks quality', 'courses', 'great', 'well'): 3, ('drinks style_options', 'sake ’ s', 'great', 'successfully easing'): 3, ('drinks style_options', 'courses', 'great', 'well'): 2}
output quads: ['[A] sake ’ s [O] complimented [S] great [C] drinks quality', '[A] courses [O] well [S] great [C] drinks quality', '[A] sake ’ s [O] successfully easing [S] great [C] drinks style_options']
multi_path: ['[A] sake ’ s [O] complimented [S] great [C] drinks quality [SSEP] [A] courses [O] well [S] great [C] drinks quality [SSEP] [A] sake ’ s [O] successfully easing [S] great [C] drinks style_options', '[O] complimented [A] sake ’ s [C] drinks quality [S] great [SSEP] [O] well [A] courses [C] drinks style_options [S] great', '[A] sake ’ s [O] complimented [C] drinks quality [S] great [SSEP] [A] courses [O] well [C] drinks quality [S] great [SSEP] [A] sake ’ s [O] successfully easing [C] drinks style_options [S] great', '[O] complimented [A] sake ’ s [S] great [C] drinks quality [SSEP] [O] well [A] courses [S] great [C] drinks quality [SSEP] [O] successfully easing [A] sake ’ s [S] great [C] drinks style_options', '[O] complimented [S] great [C] drinks quality [A] sake ’ s [SSEP] [O] well [S] great [C] drinks style_options [A] courses']

task, data: asqp rest15
target: [('restaurant general', 'null', 'bad', 'dumbfoundingly poor')]
output: ['[A] null [O] poor [S] bad [C] restaurant general']
sent: ['Dumbfoundingly', 'Poor']
counter: {('restaurant general', 'null', 'bad', 'poor'): 5}
output quads: ['[A] null [O] poor [S] bad [C] restaurant general']
multi_path: ['[A] it [O] poor [S] bad [C] restaurant general', '[O] poor [A] it [C] restaurant general [S] bad', '[A] it [O] poor [C] restaurant general [S] bad', '[O] poor [A] it [S] bad [C] restaurant general', '[O] poor [S] bad [C] restaurant general [A] it']

task, data: asqp rest15
target: [('restaurant general', "patsy's pizza", 'great', 'true love')]
output: ["[A] patsy's pizza [O] love [S] great [C] food quality"]
sent: ['Patsy', "'s", 'Pizza', '-', 'true', 'love']
counter: {('food quality', "patsy's pizza", 'great', 'love'): 5}
output quads: ["[A] patsy's pizza [O] love [S] great [C] food quality"]
multi_path: ["[A] patsy's pizza [O] love [S] great [C] food quality", "[O] love [A] patsy's pizza [C] food quality [S] great", "[A] patsy's pizza [O] love [C] food quality [S] great", "[O] love [A] patsy's pizza [S] great [C] food quality", "[O] love [S] great [C] food quality [A] patsy's pizza"]

task, data: asqp rest15
target: [('food quality', 'food', 'great', 'shine'), ('food quality', 'gyro meat', 'great', 'in-house'), ('food quality', 'ingredients', 'great', 'higher quality'), ('food quality', 'sausages', 'great', 'in-house')]
output: ['[A] food [O] aggressively seasoned [S] great [C] food quality', '[A] food [O] all made in-house [S] great [C] food quality', '[A] ingredients [O] higher quality [S] great [C] food quality']
sent: ['What', 'really', 'makes', 'it', 'shine', 'is', 'the', 'food', ',', 'which', 'is', 'aggressively', 'seasoned', 'with', 'Cyrpriot', 'spices', ',', 'and', 'all', 'made', 'in-house', '(', 'even', 'the', 'gyro', 'meat', 'and', 'sausages', ')', ',', 'and', 'made', 'of', 'much', 'higher', 'quality', 'ingredients', 'that', 'might', 'otherwise', 'be', 'expected', '.']
counter: {('food quality', 'food', 'great', 'aggressively seasoned'): 5, ('food quality', 'ingredients', 'great', 'made in-house'): 2, ('food quality', 'gyro meat and sausages', 'great', 'higher quality'): 2, ('food quality', 'food', 'great', 'all made in-house'): 3, ('food quality', 'ingredients', 'great', 'higher quality'): 4}
output quads: ['[A] food [O] aggressively seasoned [S] great [C] food quality', '[A] food [O] all made in-house [S] great [C] food quality', '[A] ingredients [O] higher quality [S] great [C] food quality']
multi_path: ['[A] food [O] aggressively seasoned [S] great [C] food quality [SSEP] [A] ingredients [O] made in-house [S] great [C] food quality [SSEP] [A] gyro meat and sausages [O] higher quality [S] great [C] food quality', '[O] aggressively seasoned [A] food [C] food quality [S] great [SSEP] [O] all made in-house [A] food [C] food quality [S] great [SSEP] [O] higher quality [A] ingredients [C] food quality [S] great', '[A] food [O] aggressively seasoned [C] food quality [S] great [SSEP] [A] ingredients [O] made in-house [C] food quality [S] great [SSEP] [A] gyro meat and sausages [O] higher quality [C] food quality [S] great [SSEP] [A] ingredients [O] higher quality [C] food quality [S] great', '[O] aggressively seasoned [A] food [S] great [C] food quality [SSEP] [O] all made in-house [A] food [S] great [C] food quality [SSEP] [O] higher quality [A] ingredients [S] great [C] food quality', '[O] aggressively seasoned [S] great [C] food quality [A] food [SSEP] [O] all made in-house [S] great [C] food quality [A] food [SSEP] [O] higher quality [S] great [C] food quality [A] ingredients']

task, data: asqp rest15
target: [('food quality', 'fried oysters and clams', 'great', 'delicious'), ('food style_options', 'fried oysters and clams', 'bad', 'tiny portion'), ('service general', 'null', 'great', 'served quickly')]
output: ['[A] appetizers [O] quickly [S] great [C] food quality', '[A] fried oysters and clams [O] delicious [S] great [C] food quality', '[A] portion [O] tiny [S] bad [C] food style_options']
sent: ['The', 'appetizers', 'we', 'ordered', 'were', 'served', 'quickly', '-', 'an', 'order', 'of', 'fried', 'oysters', 'and', 'clams', 'were', 'delicious', 'but', 'a', 'tiny', 'portion', '(', 'maybe', '3', 'of', 'each', ')', '.']
counter: {('food quality', 'appetizers', 'great', 'quickly'): 4, ('food quality', 'fried oysters and clams', 'great', 'delicious'): 5, ('food style_options', 'portion', 'bad', 'tiny'): 5, ('service general', 'appetizers', 'great', 'quickly'): 1}
output quads: ['[A] appetizers [O] quickly [S] great [C] food quality', '[A] fried oysters and clams [O] delicious [S] great [C] food quality', '[A] portion [O] tiny [S] bad [C] food style_options']
multi_path: ['[A] appetizers [O] quickly [S] great [C] food quality [SSEP] [A] fried oysters and clams [O] delicious [S] great [C] food quality [SSEP] [A] portion [O] tiny [S] bad [C] food style_options', '[O] quickly [A] appetizers [C] food quality [S] great [SSEP] [O] delicious [A] fried oysters and clams [C] food quality [S] great [SSEP] [O] tiny [A] portion [C] food style_options [S] bad', '[A] appetizers [O] quickly [C] food quality [S] great [SSEP] [A] fried oysters and clams [O] delicious [C] food quality [S] great [SSEP] [A] portion [O] tiny [C] food style_options [S] bad', '[O] quickly [A] appetizers [S] great [C] food quality [SSEP] [O] delicious [A] fried oysters and clams [S] great [C] food quality [SSEP] [O] tiny [A] portion [S] bad [C] food style_options', '[O] quickly [S] great [C] service general [A] appetizers [SSEP] [O] delicious [S] great [C] food quality [A] fried oysters and clams [SSEP] [O] tiny [S] bad [C] food style_options [A] portion']

task, data: asqp rest15
target: [('drinks prices', 'bev', 'great', 'fair'), ('food prices', 'food', 'great', 'fair')]
output: ['[A] null [O] fair [S] great [C] restaurant prices']
sent: ['Prices', 'are', 'fair', 'across', 'the', 'board', 'for', 'both', 'food', 'and', 'bev', '.']
counter: {('restaurant prices', 'null', 'great', 'fair'): 5}
output quads: ['[A] null [O] fair [S] great [C] restaurant prices']
multi_path: ['[A] it [O] fair [S] great [C] restaurant prices', '[O] fair [A] it [C] restaurant prices [S] great', '[A] it [O] fair [C] restaurant prices [S] great', '[O] fair [A] it [S] great [C] restaurant prices', '[O] fair [S] great [C] restaurant prices [A] it']

task, data: asqp rest15
target: [('food quality', 'dessert', 'great', 'save room'), ('food style_options', 'regular roll', 'great', 'enough'), ('food style_options', 'special roll', 'great', 'enough')]
output: ['[A] dessert [O] save room [S] ok [C] food style_options', '[A] regular roll [O] enough [S] great [C] food style_options', '[A] special roll [O] enough [S] great [C] food style_options']
sent: ['One', 'special', 'roll', 'and', 'one', 'regular', 'roll', 'is', 'enough', 'to', 'fill', 'you', 'up', ',', 'but', 'save', 'room', 'for', 'dessert', '!']
counter: {('food style_options', 'special roll', 'great', 'enough'): 5, ('food style_options', 'regular roll', 'great', 'enough'): 5, ('food style_options', 'dessert', 'ok', 'save room'): 3, ('food style_options', 'dessert', 'great', 'save room'): 2}
output quads: ['[A] special roll [O] enough [S] great [C] food style_options', '[A] regular roll [O] enough [S] great [C] food style_options', '[A] dessert [O] save room [S] ok [C] food style_options']
multi_path: ['[A] special roll [O] enough [S] great [C] food style_options [SSEP] [A] regular roll [O] enough [S] great [C] food style_options [SSEP] [A] dessert [O] save room [S] ok [C] food style_options', '[O] enough [A] special roll [C] food style_options [S] great [SSEP] [O] enough [A] regular roll [C] food style_options [S] great [SSEP] [O] save room [A] dessert [C] food style_options [S] ok', '[A] special roll [O] enough [C] food style_options [S] great [SSEP] [A] regular roll [O] enough [C] food style_options [S] great [SSEP] [A] dessert [O] save room [C] food style_options [S] great', '[O] enough [A] special roll [S] great [C] food style_options [SSEP] [O] enough [A] regular roll [S] great [C] food style_options [SSEP] [O] save room [A] dessert [S] ok [C] food style_options', '[O] enough [S] great [C] food style_options [A] special roll [SSEP] [O] enough [S] great [C] food style_options [A] regular roll [SSEP] [O] save room [S] great [C] food style_options [A] dessert']

task, data: asqp rest15
target: [('service general', 'null', 'bad', 'waiting an extra hour')]
output: ['[A] null [O] skipped over [S] bad [C] service general']
sent: ['On', 'our', 'last', 'visit', ',', 'they', 'skipped', 'over', 'our', 'name', 'on', 'the', 'list', ',', 'leaving', 'us', 'waiting', 'an', 'extra', 'hour', 'for', 'a', 'table', '.']
counter: {('service general', 'null', 'bad', 'skipped over our name'): 2, ('service general', 'null', 'bad', 'skipped over'): 3}
output quads: ['[A] null [O] skipped over [S] bad [C] service general']
multi_path: ['[A] it [O] skipped over our name [S] bad [C] service general', '[O] skipped over [A] it [C] service general [S] bad', '[A] it [O] skipped over our name [C] service general [S] bad', '[O] skipped over [A] it [S] bad [C] service general', '[O] skipped over [S] bad [C] service general [A] it']

task, data: asqp rest15
target: [('restaurant prices', 'null', 'bad', '$ 500'), ('service general', 'service', 'bad', 'ok')]
output: ['[A] service [O] ok [S] ok [C] service general']
sent: ['Service', 'was', 'just', 'ok', ',', 'it', 'is', 'not', 'what', 'you', "'d", 'expect', 'for', '$', '500', '.']
counter: {('service general', 'service', 'ok', 'ok'): 5}
output quads: ['[A] service [O] ok [S] ok [C] service general']
multi_path: ['[A] service [O] ok [S] ok [C] service general', '[O] ok [A] service [C] service general [S] ok', '[A] service [O] ok [C] service general [S] ok', '[O] ok [A] service [S] ok [C] service general', '[O] ok [S] ok [C] service general [A] service']

task, data: asqp rest15
target: [('restaurant general', 'the four seasons restaurant', 'great', 'great')]
output: ['[A] four seasons restaurant [O] great [S] great [C] restaurant general']
sent: ['The', 'Four', 'Seasons', 'restaurant', 'is', 'a', 'great', 'experience', '.']
counter: {('restaurant general', 'four seasons restaurant', 'great', 'great'): 5}
output quads: ['[A] four seasons restaurant [O] great [S] great [C] restaurant general']
multi_path: ['[A] four seasons restaurant [O] great [S] great [C] restaurant general', '[O] great [A] four seasons restaurant [C] restaurant general [S] great', '[A] four seasons restaurant [O] great [C] restaurant general [S] great', '[O] great [A] four seasons restaurant [S] great [C] restaurant general', '[O] great [S] great [C] restaurant general [A] four seasons restaurant']

task, data: asqp rest15
target: [('ambience general', 'spot', 'great', 'unpretentious'), ('food quality', 'sushi', 'great', 'good'), ('service general', 'service', 'great', 'effective'), ('service general', 'service', 'great', 'pleasant'), ('service general', 'service', 'great', 'unassuming')]
output: ['[A] service [O] effective [S] great [C] service general', '[A] service [O] pleasant [S] great [C] service general', '[A] service [O] unassuming [S] great [C] service general', '[A] spot [O] unpretentious [S] great [C] restaurant general', '[A] sushi [O] good [S] great [C] food quality']
sent: ['An', 'unpretentious', 'spot', 'in', 'Park', 'Slope', ',', 'the', 'sushi', 'is', 'consistently', 'good', ',', 'the', 'service', 'is', 'pleasant', ',', 'effective', 'and', 'unassuming', '.']
counter: {('location general', 'spot', 'great', 'unpretentious'): 1, ('food quality', 'sushi', 'great', 'good'): 5, ('service general', 'service', 'great', 'pleasant'): 5, ('service general', 'service', 'great', 'effective'): 5, ('service general', 'service', 'great', 'unassuming'): 5, ('restaurant general', 'spot', 'great', 'unpretentious'): 4}
output quads: ['[A] sushi [O] good [S] great [C] food quality', '[A] service [O] pleasant [S] great [C] service general', '[A] service [O] effective [S] great [C] service general', '[A] service [O] unassuming [S] great [C] service general', '[A] spot [O] unpretentious [S] great [C] restaurant general']
multi_path: ['[A] spot [O] unpretentious [S] great [C] location general [SSEP] [A] sushi [O] good [S] great [C] food quality [SSEP] [A] service [O] pleasant [S] great [C] service general [SSEP] [A] service [O] effective [S] great [C] service general [SSEP] [A] service [O] unassuming [S] great [C] service general', '[O] unpretentious [A] spot [C] restaurant general [S] great [SSEP] [O] good [A] sushi [C] food quality [S] great [SSEP] [O] pleasant [A] service [C] service general [S] great [SSEP] [O] effective [A] service [C] service general [S] great [SSEP] [O] unassuming [A] service [C] service general [S] great', '[A] spot [O] unpretentious [C] restaurant general [S] great [SSEP] [A] sushi [O] good [C] food quality [S] great [SSEP] [A] service [O] pleasant [C] service general [S] great [SSEP] [A] service [O] effective [C] service general [S] great [SSEP] [A] service [O] unassuming [C] service general [S] great', '[O] unpretentious [A] spot [S] great [C] restaurant general [SSEP] [O] good [A] sushi [S] great [C] food quality [SSEP] [O] pleasant [A] service [S] great [C] service general [SSEP] [O] effective [A] service [S] great [C] service general [SSEP] [O] unassuming [A] service [S] great [C] service general', '[O] unpretentious [S] great [C] restaurant general [A] spot [SSEP] [O] good [S] great [C] food quality [A] sushi [SSEP] [O] pleasant [S] great [C] service general [A] service [SSEP] [O] effective [S] great [C] service general [A] service [SSEP] [O] unassuming [S] great [C] service general [A] service']

task, data: asqp rest15
target: [('food quality', 'food', 'bad', 'worth')]
output: ['[A] food [O] not be worth [S] bad [C] food quality']
sent: ['If', 'you', 'are', 'going', 'for', 'the', 'food', ',', 'it', 'will', 'not', 'be', 'worth', 'it', '.']
counter: {('food quality', 'food', 'bad', 'not be worth it'): 2, ('food quality', 'food', 'bad', 'not be worth'): 3}
output quads: ['[A] food [O] not be worth [S] bad [C] food quality']
multi_path: ['[A] food [O] not be worth it [S] bad [C] food quality', '[O] not be worth [A] food [C] food quality [S] bad', '[A] food [O] not be worth it [C] food quality [S] bad', '[O] not be worth [A] food [S] bad [C] food quality', '[O] not be worth [S] bad [C] food quality [A] food']

task, data: asqp rest15
target: [('restaurant general', 'cypriot restaurant', 'great', 'a lot going')]
output: ['[A] cypriot restaurant [O] a lot going for it [S] great [C] restaurant general']
sent: ['The', 'Cypriot', 'restaurant', 'has', 'a', 'lot', 'going', 'for', 'it', '.']
counter: {('restaurant general', 'cypriot restaurant', 'great', 'a lot going for it'): 5}
output quads: ['[A] cypriot restaurant [O] a lot going for it [S] great [C] restaurant general']
multi_path: ['[A] cypriot restaurant [O] a lot going for it [S] great [C] restaurant general', '[O] a lot going for it [A] cypriot restaurant [C] restaurant general [S] great', '[A] cypriot restaurant [O] a lot going for it [C] restaurant general [S] great', '[O] a lot going for it [A] cypriot restaurant [S] great [C] restaurant general', '[O] a lot going for it [S] great [C] restaurant general [A] cypriot restaurant']

task, data: asqp rest15
target: [('food quality', 'food', 'great', 'good')]
output: ['[A] food quality [O] good [S] great [C] food quality', '[A] salmon [O] better [S] bad [C] food quality']
sent: ['Overall', 'the', 'food', 'quality', 'was', 'pretty', 'good', ',', 'though', 'I', 'hear', 'the', 'salmon', 'is', 'much', 'better', 'when', 'it', 'has', "n't", 'sat', 'cooling', 'in', 'front', 'of', 'the', 'guest', '.']
counter: {('food quality', 'food quality', 'great', 'good'): 5, ('food quality', 'salmon', 'bad', 'better'): 5}
output quads: ['[A] food quality [O] good [S] great [C] food quality', '[A] salmon [O] better [S] bad [C] food quality']
multi_path: ['[A] food quality [O] good [S] great [C] food quality [SSEP] [A] salmon [O] better [S] bad [C] food quality', '[O] good [A] food quality [C] food quality [S] great [SSEP] [O] better [A] salmon [C] food quality [S] bad', '[A] food quality [O] good [C] food quality [S] great [SSEP] [A] salmon [O] better [C] food quality [S] bad', '[O] good [A] food quality [S] great [C] food quality [SSEP] [O] better [A] salmon [S] bad [C] food quality', '[O] good [S] great [C] food quality [A] food quality [SSEP] [O] better [S] bad [C] food quality [A] salmon']

task, data: asqp rest15
target: [('restaurant general', 'null', 'great', 'favorite')]
output: ['[A] null [O] amazing [S] great [C] restaurant general', '[A] null [O] favorite [S] great [C] restaurant general']
sent: ['AMAZING', 'MY', 'FAVORITE', '!', '!', '!']
counter: {('restaurant general', 'null', 'great', 'amazing'): 5, ('restaurant general', 'null', 'great', 'favorite'): 5}
output quads: ['[A] null [O] amazing [S] great [C] restaurant general', '[A] null [O] favorite [S] great [C] restaurant general']
multi_path: ['[A] it [O] amazing [S] great [C] restaurant general [SSEP] [A] it [O] favorite [S] great [C] restaurant general', '[O] amazing [A] it [C] restaurant general [S] great [SSEP] [O] favorite [A] it [C] restaurant general [S] great', '[A] it [O] amazing [C] restaurant general [S] great [SSEP] [A] it [O] favorite [C] restaurant general [S] great', '[O] amazing [A] it [S] great [C] restaurant general [SSEP] [O] favorite [A] it [S] great [C] restaurant general', '[O] amazing [S] great [C] restaurant general [A] it [SSEP] [O] favorite [S] great [C] restaurant general [A] it']

task, data: asqp rest15
target: [('service general', 'survice', 'great', 'great')]
output: ['[A] survice [O] great [S] great [C] restaurant general']
sent: ['Great', 'survice']
counter: {('restaurant general', 'survice', 'great', 'great'): 5}
output quads: ['[A] survice [O] great [S] great [C] restaurant general']
multi_path: ['[A] survice [O] great [S] great [C] restaurant general', '[O] great [A] survice [C] restaurant general [S] great', '[A] survice [O] great [C] restaurant general [S] great', '[O] great [A] survice [S] great [C] restaurant general', '[O] great [S] great [C] restaurant general [A] survice']

task, data: asqp rest15
target: [('ambience general', 'decor', 'great', 'impressed'), ('food quality', 'food', 'great', 'impressed'), ('restaurant general', 'null', 'great', 'great'), ('service general', 'null', 'great', 'hospitality')]
output: ['[A] decor [O] impressed [S] great [C] ambience general', '[A] food [O] impressed [S] great [C] food quality', '[A] hospitality [O] impressed [S] great [C] service general', '[A] night [O] great [S] great [C] ambience general']
sent: ['Highly', 'impressed', 'from', 'the', 'decor', 'to', 'the', 'food', 'to', 'the', 'hospitality', 'to', 'the', 'great', 'night', 'I', 'had', '!']
counter: {('ambience general', 'decor', 'great', 'impressed'): 5, ('food quality', 'food', 'great', 'impressed'): 5, ('service general', 'hospitality', 'great', 'impressed'): 5, ('ambience general', 'night', 'great', 'great'): 5}
output quads: ['[A] decor [O] impressed [S] great [C] ambience general', '[A] food [O] impressed [S] great [C] food quality', '[A] hospitality [O] impressed [S] great [C] service general', '[A] night [O] great [S] great [C] ambience general']
multi_path: ['[A] decor [O] impressed [S] great [C] ambience general [SSEP] [A] food [O] impressed [S] great [C] food quality [SSEP] [A] hospitality [O] impressed [S] great [C] service general [SSEP] [A] night [O] great [S] great [C] ambience general', '[O] impressed [A] decor [C] ambience general [S] great [SSEP] [O] impressed [A] food [C] food quality [S] great [SSEP] [O] impressed [A] hospitality [C] service general [S] great [SSEP] [O] great [A] night [C] ambience general [S] great', '[A] decor [O] impressed [C] ambience general [S] great [SSEP] [A] food [O] impressed [C] food quality [S] great [SSEP] [A] hospitality [O] impressed [C] service general [S] great [SSEP] [A] night [O] great [C] ambience general [S] great', '[O] impressed [A] decor [S] great [C] ambience general [SSEP] [O] impressed [A] food [S] great [C] food quality [SSEP] [O] impressed [A] hospitality [S] great [C] service general [SSEP] [O] great [A] night [S] great [C] ambience general', '[O] impressed [S] great [C] ambience general [A] decor [SSEP] [O] impressed [S] great [C] food quality [A] food [SSEP] [O] impressed [S] great [C] service general [A] hospitality [SSEP] [O] great [S] great [C] ambience general [A] night']

task, data: asqp rest15
target: [('food quality', 'null', 'bad', 'not impressive'), ('food style_options', 'null', 'bad', 'covered in a glaze of some kin')]
output: ['[A] pear tart [O] not impressive [S] bad [C] food quality', '[A] pineapple covered in a glaze of some kind [O] not impressive [S] bad [C] food quality']
sent: ['Some', 'Pineapple', 'covered', 'in', 'a', 'glaze', 'of', 'some', 'kind', 'and', 'some', 'pear', 'tart', 'thing', 'Not', 'impressive', 'at', 'all', '.']
counter: {('food quality', 'pineapple covered in a glaze of some kind', 'bad', 'not impressive'): 5, ('food quality', 'pear tart', 'bad', 'not impressive'): 5}
output quads: ['[A] pineapple covered in a glaze of some kind [O] not impressive [S] bad [C] food quality', '[A] pear tart [O] not impressive [S] bad [C] food quality']
multi_path: ['[A] pineapple covered in a glaze of some kind [O] not impressive [S] bad [C] food quality [SSEP] [A] pear tart [O] not impressive [S] bad [C] food quality', '[O] not impressive [A] pineapple covered in a glaze of some kind [C] food quality [S] bad [SSEP] [O] not impressive [A] pear tart [C] food quality [S] bad', '[A] pineapple covered in a glaze of some kind [O] not impressive [C] food quality [S] bad [SSEP] [A] pear tart [O] not impressive [C] food quality [S] bad', '[O] not impressive [A] pineapple covered in a glaze of some kind [S] bad [C] food quality [SSEP] [O] not impressive [A] pear tart [S] bad [C] food quality', '[O] not impressive [S] bad [C] food quality [A] pineapple covered in a glaze of some kind [SSEP] [O] not impressive [S] bad [C] food quality [A] pear tart']

task, data: asqp rest15
target: [('drinks style_options', 'wine list', 'great', 'great'), ('food quality', 'food', 'great', 'great'), ('location general', 'neighborhood', 'great', 'great'), ('service general', 'service', 'great', 'great')]
output: ['[A] food [O] great [S] great [C] food quality', '[A] service [O] great [S] great [C] service general', '[A] wine list [O] great [S] great [C] drinks style_options']
sent: ['great', 'food', ',', 'great', 'wine', 'list', ',', 'great', 'service', 'in', 'a', 'great', 'neighborhood', '...']
counter: {('food quality', 'food', 'great', 'great'): 5, ('drinks style_options', 'wine list', 'great', 'great'): 5, ('service general', 'service', 'great', 'great'): 5}
output quads: ['[A] food [O] great [S] great [C] food quality', '[A] wine list [O] great [S] great [C] drinks style_options', '[A] service [O] great [S] great [C] service general']
multi_path: ['[A] food [O] great [S] great [C] food quality [SSEP] [A] wine list [O] great [S] great [C] drinks style_options [SSEP] [A] service [O] great [S] great [C] service general', '[O] great [A] food [C] food quality [S] great [SSEP] [O] great [A] wine list [C] drinks style_options [S] great [SSEP] [O] great [A] service [C] service general [S] great', '[A] food [O] great [C] food quality [S] great [SSEP] [A] wine list [O] great [C] drinks style_options [S] great [SSEP] [A] service [O] great [C] service general [S] great', '[O] great [A] food [S] great [C] food quality [SSEP] [O] great [A] wine list [S] great [C] drinks style_options [SSEP] [O] great [A] service [S] great [C] service general', '[O] great [S] great [C] food quality [A] food [SSEP] [O] great [S] great [C] drinks style_options [A] wine list [SSEP] [O] great [S] great [C] service general [A] service']

task, data: asqp rest15
target: [('food quality', 'meal', 'bad', 'disgusted'), ('service general', 'null', 'bad', 'blacklisted')]
output: ['[A] null [O] disgusted [S] bad [C] service general', '[A] restaurant [O] blacklisted [S] bad [C] restaurant general']
sent: ['My', 'girlfriend', ',', 'being', 'slightly', 'more', 'aggressive', ',', 'and', 'having', 'been', 'equally', 'disgusted', 'causing', 'her', 'to', 'throw', 'out', 'the', 'remainder', 'of', 'her', 'barely', 'eaten', 'meal', ',', 'called', 'back', 'only', 'to', 'be', 'informed', 'that', 'I', 'was', 'probably', 'wrong', 'and', 'that', 'it', 'was', 'most', 'likely', 'an', 'oyster', ',', 'and', 'that', 'we', 'were', 'also', 'blacklisted', 'from', 'their', 'restaurant', '.']
counter: {('service general', 'null', 'bad', 'disgusted'): 4, ('restaurant general', 'null', 'bad', 'blacklisted'): 2, ('restaurant general', 'restaurant', 'bad', 'blacklisted'): 3, ('food quality', 'meal', 'bad', 'disgusted'): 1}
output quads: ['[A] null [O] disgusted [S] bad [C] service general', '[A] restaurant [O] blacklisted [S] bad [C] restaurant general']
multi_path: ['[A] it [O] disgusted [S] bad [C] service general [SSEP] [A] it [O] blacklisted [S] bad [C] restaurant general', '[O] disgusted [A] it [C] service general [S] bad [SSEP] [O] blacklisted [A] restaurant [C] restaurant general [S] bad', '[A] it [O] disgusted [C] service general [S] bad [SSEP] [A] it [O] blacklisted [C] restaurant general [S] bad', '[O] disgusted [A] it [S] bad [C] service general [SSEP] [O] blacklisted [A] restaurant [S] bad [C] restaurant general', '[O] disgusted [S] bad [C] food quality [A] meal [SSEP] [O] blacklisted [S] bad [C] restaurant general [A] restaurant']

task, data: asqp rest15
target: [('restaurant miscellaneous', 'null', 'bad', 'start a new thread so they can stock it with positive reviews')]
output: ['[A] place [O] positive [S] bad [C] restaurant general']
sent: ['The', 'reason', 'there', 'are', '4', 'different', 'results', 'on', 'citysearch', 'for', 'the', 'same', 'place', 'is', 'because', 'they', 'keep', 'trying', 'to', 'start', 'a', 'new', 'thread', 'so', 'they', 'can', 'stock', 'it', 'with', 'positive', 'reviews', '.']
counter: {('restaurant general', 'place', 'bad', 'positive'): 5}
output quads: ['[A] place [O] positive [S] bad [C] restaurant general']
multi_path: ['[A] place [O] positive [S] bad [C] restaurant general', '[O] positive [A] place [C] restaurant general [S] bad', '[A] place [O] positive [C] restaurant general [S] bad', '[O] positive [A] place [S] bad [C] restaurant general', '[O] positive [S] bad [C] restaurant general [A] place']

task, data: asqp rest15
target: [('food quality', 'indo-chinese food', 'great', 'delicious'), ('restaurant miscellaneous', 'space', 'bad', 'limited')]
output: ['[A] indo-chinese food [O] richly rewarded [S] great [C] food quality']
sent: ['The', 'space', 'is', 'limited', 'so', 'be', 'prepared', 'to', 'wait', 'up', 'to', '45', 'minutes', '-', '1', 'hour', ',', 'but', 'be', 'richly', 'rewarded', 'when', 'you', 'savor', 'the', 'delicious', 'indo-chinese', 'food', '.']
counter: {('service general', 'null', 'bad', 'limited'): 2, ('food quality', 'indo-chinese food', 'great', 'delicious'): 2, ('restaurant miscellaneous', 'space', 'bad', 'limited'): 2, ('food quality', 'indo-chinese food', 'great', 'richly rewarded'): 3, ('service general', 'space', 'bad', 'limited'): 1}
output quads: ['[A] indo-chinese food [O] richly rewarded [S] great [C] food quality']
multi_path: ['[A] it [O] limited [S] bad [C] service general [SSEP] [A] indo-chinese food [O] delicious [S] great [C] food quality', '[O] limited [A] space [C] restaurant miscellaneous [S] bad [SSEP] [O] richly rewarded [A] indo-chinese food [C] food quality [S] great', '[A] it [O] limited [C] service general [S] bad [SSEP] [A] indo-chinese food [O] delicious [C] food quality [S] great', '[O] limited [A] space [S] bad [C] restaurant miscellaneous [SSEP] [O] richly rewarded [A] indo-chinese food [S] great [C] food quality', '[O] limited [S] bad [C] service general [A] space [SSEP] [O] richly rewarded [S] great [C] food quality [A] indo-chinese food']

task, data: asqp rest15
target: [('restaurant general', 'brasserie', 'great', 'good'), ('restaurant prices', 'brasserie', 'great', 'good')]
output: ['[A] brasserie [O] great [S] great [C] restaurant prices', '[A] brasserie [O] reasonable [S] great [C] restaurant general']
sent: ['Maybe', 'it', 'was', 'the', 'great', 'company', '(', 'I', 'had', 'friends', 'visiting', 'from', 'Philly', '–', 'yes', ',', 'it', 'was', 'not', 'a', 'date', 'this', 'time', ')', 'or', 'the', 'super', 'reasonable', 'price', 'point', ',', 'but', 'I', 'just', 'can', '’', 't', 'say', 'enough', 'good', 'things', 'about', 'this', 'brasserie', '.']
counter: {('restaurant prices', 'brasserie', 'great', 'great'): 5, ('restaurant general', 'brasserie', 'great', 'reasonable'): 3, ('restaurant general', 'brasserie', 'great', 'good'): 2}
output quads: ['[A] brasserie [O] great [S] great [C] restaurant prices', '[A] brasserie [O] reasonable [S] great [C] restaurant general']
multi_path: ['[A] brasserie [O] great [S] great [C] restaurant prices [SSEP] [A] brasserie [O] reasonable [S] great [C] restaurant general', '[O] great [A] brasserie [C] restaurant prices [S] great [SSEP] [O] good [A] brasserie [C] restaurant general [S] great', '[A] brasserie [O] great [C] restaurant prices [S] great [SSEP] [A] brasserie [O] reasonable [C] restaurant general [S] great', '[O] great [A] brasserie [S] great [C] restaurant prices [SSEP] [O] reasonable [A] brasserie [S] great [C] restaurant general', '[O] great [S] great [C] restaurant prices [A] brasserie [SSEP] [O] good [S] great [C] restaurant general [A] brasserie']

task, data: asqp rest15
target: [('ambience general', 'sitting space', 'bad', 'too small'), ('food quality', 'food', 'great', 'great'), ('food quality', 'food', 'great', 'tasty')]
output: ['[A] food [O] great [S] great [C] food quality', '[A] food [O] tasty [S] great [C] food quality', '[A] sitting space [O] small [S] bad [C] ambience general']
sent: ['The', 'food', 'was', 'great', 'and', 'tasty', ',', 'but', 'the', 'sitting', 'space', 'was', 'too', 'small', ',', 'I', 'do', "n't", 'like', 'being', 'cramp', 'in', 'a', 'corner', '.']
counter: {('food quality', 'food', 'great', 'great'): 5, ('food quality', 'food', 'great', 'tasty'): 5, ('ambience general', 'sitting space', 'bad', 'small'): 5}
output quads: ['[A] food [O] great [S] great [C] food quality', '[A] food [O] tasty [S] great [C] food quality', '[A] sitting space [O] small [S] bad [C] ambience general']
multi_path: ['[A] food [O] great [S] great [C] food quality [SSEP] [A] food [O] tasty [S] great [C] food quality [SSEP] [A] sitting space [O] small [S] bad [C] ambience general', '[O] great [A] food [C] food quality [S] great [SSEP] [O] tasty [A] food [C] food quality [S] great [SSEP] [O] small [A] sitting space [C] ambience general [S] bad', '[A] food [O] great [C] food quality [S] great [SSEP] [A] food [O] tasty [C] food quality [S] great [SSEP] [A] sitting space [O] small [C] ambience general [S] bad', '[O] great [A] food [S] great [C] food quality [SSEP] [O] tasty [A] food [S] great [C] food quality [SSEP] [O] small [A] sitting space [S] bad [C] ambience general', '[O] great [S] great [C] food quality [A] food [SSEP] [O] tasty [S] great [C] food quality [A] food [SSEP] [O] small [S] bad [C] ambience general [A] sitting space']

task, data: asqp rest15
target: [('service general', 'null', 'bad', 'no apology')]
output: ['[A] drink [O] nothing [S] bad [C] drinks quality', '[A] null [O] nothing [S] bad [C] service general']
sent: ['Again', ',', 'no', 'apology', ',', 'no', 'is', 'there', 'anything', 'else', 'I', 'can', 'get', 'you', ',', 'no', 'can', 'I', 'get', 'you', 'a', 'drink', 'to', 'make', 'up', 'for', 'it', ',', 'nothing', '!', '!', '!', '!']
counter: {('service general', 'null', 'bad', 'nothing'): 3, ('drinks quality', 'drink', 'bad', 'nothing'): 3, ('drinks quality', 'null', 'bad', 'nothing'): 1, ('drinks prices', 'drink', 'bad', 'nothing'): 1}
output quads: ['[A] null [O] nothing [S] bad [C] service general', '[A] drink [O] nothing [S] bad [C] drinks quality']
multi_path: ['[A] it [O] nothing [S] bad [C] service general', '[O] nothing [A] it [C] service general [S] bad [SSEP] [O] nothing [A] drink [C] drinks quality [S] bad', '[A] it [O] nothing [C] service general [S] bad [SSEP] [A] drink [O] nothing [C] drinks quality [S] bad', '[O] nothing [A] it [S] bad [C] drinks quality [SSEP] [O] nothing [A] drink [S] bad [C] drinks prices', '[O] nothing [S] bad [C] drinks quality [A] drink']

task, data: asqp rest15
target: [('ambience general', 'interior', 'bad', 'help'), ('food quality', 'food', 'great', 'excellent')]
output: ['[A] food [O] excellent [S] great [C] food quality', '[A] interior [O] could use some help [S] bad [C] ambience general']
sent: ['Excellent', 'food', ',', 'although', 'the', 'interior', 'could', 'use', 'some', 'help', '.']
counter: {('food quality', 'food', 'great', 'excellent'): 5, ('ambience general', 'interior', 'bad', 'could use some help'): 5}
output quads: ['[A] food [O] excellent [S] great [C] food quality', '[A] interior [O] could use some help [S] bad [C] ambience general']
multi_path: ['[A] food [O] excellent [S] great [C] food quality [SSEP] [A] interior [O] could use some help [S] bad [C] ambience general', '[O] excellent [A] food [C] food quality [S] great [SSEP] [O] could use some help [A] interior [C] ambience general [S] bad', '[A] food [O] excellent [C] food quality [S] great [SSEP] [A] interior [O] could use some help [C] ambience general [S] bad', '[O] excellent [A] food [S] great [C] food quality [SSEP] [O] could use some help [A] interior [S] bad [C] ambience general', '[O] excellent [S] great [C] food quality [A] food [SSEP] [O] could use some help [S] bad [C] ambience general [A] interior']

task, data: asqp rest15
target: [('service general', 'null', 'bad', 'no apology')]
output: ['[A] desert menu [O] nothing [S] bad [C] food quality', '[A] null [O] nothing [S] bad [C] restaurant general']
sent: ['No', 'desert', 'menu', ',', 'no', 'apology', ',', 'nothing', '!', '!', '!', '!', '!', '!']
counter: {('food quality', 'desert menu', 'bad', 'nothing'): 5, ('restaurant general', 'null', 'bad', 'nothing'): 4, ('food quality', 'null', 'bad', 'nothing'): 1}
output quads: ['[A] desert menu [O] nothing [S] bad [C] food quality', '[A] null [O] nothing [S] bad [C] restaurant general']
multi_path: ['[A] desert menu [O] nothing [S] bad [C] food quality [SSEP] [A] it [O] nothing [S] bad [C] restaurant general', '[O] nothing [A] desert menu [C] food quality [S] bad [SSEP] [O] nothing [A] it [C] restaurant general [S] bad', '[A] desert menu [O] nothing [C] food quality [S] bad [SSEP] [A] it [O] nothing [C] restaurant general [S] bad', '[O] nothing [A] desert menu [S] bad [C] food quality [SSEP] [O] nothing [A] it [S] bad [C] restaurant general', '[O] nothing [S] bad [C] food quality [A] desert menu [SSEP] [O] nothing [S] bad [C] food quality [A] it']

task, data: asqp rest15
target: [('food quality', 'food', 'great', 'fabulous'), ('service general', 'front of house staff', 'bad', 'put you off')]
output: ['[A] food [O] fabulous [S] great [C] food quality']
sent: ['Fabulous', 'food', '-', 'if', 'the', 'front', 'of', 'house', 'staff', 'do', "n't", 'put', 'you', 'off', '–']
counter: {('food quality', 'food', 'great', 'fabulous'): 5}
output quads: ['[A] food [O] fabulous [S] great [C] food quality']
multi_path: ['[A] food [O] fabulous [S] great [C] food quality', '[O] fabulous [A] food [C] food quality [S] great', '[A] food [O] fabulous [C] food quality [S] great', '[O] fabulous [A] food [S] great [C] food quality', '[O] fabulous [S] great [C] food quality [A] food']

task, data: asqp rest15
target: [('service general', 'girl', 'bad', 'frizzy')]
output: ['[A] frizzy retro girl [O] yell [S] bad [C] service general']
sent: ['The', 'frizzy', 'retro', 'girl', '(', 'with', 'winged/', 'Dame', 'Edna', 'glasses', ')', 'will', 'yell', 'at', 'you', 'if', 'you', 'try', 'to', 'order', 'a', 'drink', '.']
counter: {('service general', 'frizzy retro girl', 'bad', 'yell'): 5}
output quads: ['[A] frizzy retro girl [O] yell [S] bad [C] service general']
multi_path: ['[A] frizzy retro girl [O] yell [S] bad [C] service general', '[O] yell [A] frizzy retro girl [C] service general [S] bad', '[A] frizzy retro girl [O] yell [C] service general [S] bad', '[O] yell [A] frizzy retro girl [S] bad [C] service general', '[O] yell [S] bad [C] service general [A] frizzy retro girl']

task, data: asqp rest15
target: [('ambience general', 'dj', 'great', 'awesome'), ('restaurant general', 'null', 'great', 'keep going back')]
output: ['[A] dj [O] awesome [S] great [C] ambience general']
sent: ['The', 'DJ', 'is', 'awesome', ',', 'I', 'have', 'been', 'there', 'for', 'my', 'birthday', 'and', 'a', 'bunch', 'of', 'other', 'times', 'with', 'friends', 'and', 'I', 'keep', 'going', 'back', '.']
counter: {('ambience general', 'dj', 'great', 'awesome'): 5}
output quads: ['[A] dj [O] awesome [S] great [C] ambience general']
multi_path: ['[A] dj [O] awesome [S] great [C] ambience general', '[O] awesome [A] dj [C] ambience general [S] great', '[A] dj [O] awesome [C] ambience general [S] great', '[O] awesome [A] dj [S] great [C] ambience general', '[O] awesome [S] great [C] ambience general [A] dj']

task, data: asqp rest15
target: [('ambience general', 'atmosphere', 'great', 'cool'), ('ambience general', 'fire place', 'great', 'really ads to it')]
output: ['[A] atmosphere [O] cool [S] great [C] ambience general', '[A] fire place [O] ads [S] great [C] ambience general']
sent: ['Cool', 'atmosphere', ',', 'the', 'fire', 'place', 'in', 'the', 'back', 'really', 'ads', 'to', 'it', 'but', 'needs', 'a', 'bit', 'more', 'heat', 'throughout', 'on', 'a', 'cold', 'night', '.']
counter: {('ambience general', 'atmosphere', 'great', 'cool'): 5, ('ambience general', 'fire place', 'great', 'ads'): 5, ('ambience general', 'fire place', 'bad', 'needs to heat'): 2, ('ambience general', 'fire place', 'bad', 'needs a bit more heat'): 2, ('ambience general', 'fire place', 'bad', 'needs a bit more'): 1}
output quads: ['[A] atmosphere [O] cool [S] great [C] ambience general', '[A] fire place [O] ads [S] great [C] ambience general']
multi_path: ['[A] atmosphere [O] cool [S] great [C] ambience general [SSEP] [A] fire place [O] ads [S] great [C] ambience general [SSEP] [A] fire place [O] needs to heat [S] bad [C] ambience general', '[O] cool [A] atmosphere [C] ambience general [S] great [SSEP] [O] ads [A] fire place [C] ambience general [S] great [SSEP] [O] needs a bit more heat [A] fire place [C] ambience general [S] bad', '[A] atmosphere [O] cool [C] ambience general [S] great [SSEP] [A] fire place [O] ads [C] ambience general [S] great [SSEP] [A] fire place [O] needs to heat [C] ambience general [S] bad', '[O] cool [A] atmosphere [S] great [C] ambience general [SSEP] [O] ads [A] fire place [S] great [C] ambience general [SSEP] [O] needs a bit more heat [A] fire place [S] bad [C] ambience general', '[O] cool [S] great [C] ambience general [A] atmosphere [SSEP] [O] ads [S] great [C] ambience general [A] fire place [SSEP] [O] needs a bit more [S] bad [C] ambience general [A] fire place']

task, data: asqp rest15
target: [('restaurant general', 'restaurant', 'bad', 'abused'), ('restaurant prices', 'restaurant', 'bad', 'abused')]
output: ['[A] restaurant [O] abused [S] bad [C] restaurant miscellaneous']
sent: ['I', 'have', 'never', 'left', 'a', 'restaurant', 'feeling', 'as', 'if', 'i', 'was', 'abused', ',', 'and', 'wasted', 'my', 'hard', 'earned', 'money', '.']
counter: {('restaurant miscellaneous', 'restaurant', 'bad', 'abused'): 5}
output quads: ['[A] restaurant [O] abused [S] bad [C] restaurant miscellaneous']
multi_path: ['[A] restaurant [O] abused [S] bad [C] restaurant miscellaneous', '[O] abused [A] restaurant [C] restaurant miscellaneous [S] bad', '[A] restaurant [O] abused [C] restaurant miscellaneous [S] bad', '[O] abused [A] restaurant [S] bad [C] restaurant miscellaneous', '[O] abused [S] bad [C] restaurant miscellaneous [A] restaurant']

task, data: asqp rest15
target: [('food quality', 'eggplant pizza', 'great', 'looove'), ('food quality', 'pastas', 'great', 'looove')]
output: ['[A] eggplant pizza [O] loove [S] great [C] food quality', '[A] pastas [O] loove [S] great [C] food quality']
sent: ['I', 'LOOOVE', 'their', 'eggplant', 'pizza', ',', 'as', 'well', 'as', 'their', 'pastas', '!']
counter: {('food quality', 'eggplant pizza', 'great', 'loove'): 5, ('food quality', 'pastas', 'great', 'loove'): 5}
output quads: ['[A] eggplant pizza [O] loove [S] great [C] food quality', '[A] pastas [O] loove [S] great [C] food quality']
multi_path: ['[A] eggplant pizza [O] loove [S] great [C] food quality [SSEP] [A] pastas [O] loove [S] great [C] food quality', '[O] loove [A] eggplant pizza [C] food quality [S] great [SSEP] [O] loove [A] pastas [C] food quality [S] great', '[A] eggplant pizza [O] loove [C] food quality [S] great [SSEP] [A] pastas [O] loove [C] food quality [S] great', '[O] loove [A] eggplant pizza [S] great [C] food quality [SSEP] [O] loove [A] pastas [S] great [C] food quality', '[O] loove [S] great [C] food quality [A] eggplant pizza [SSEP] [O] loove [S] great [C] food quality [A] pastas']

task, data: asqp rest15
target: [('restaurant general', 'null', 'great', 'best')]
output: ['[A] dining experience [O] best [S] great [C] food quality']
sent: ['BEST', 'DINING', 'EXPERIENCE', 'IN', 'THE', 'WEST', 'VILLAGE', '!']
counter: {('food quality', 'dining experience', 'great', 'best'): 4, ('food quality', 'dining', 'great', 'best'): 1}
output quads: ['[A] dining experience [O] best [S] great [C] food quality']
multi_path: ['[A] dining experience [O] best [S] great [C] food quality', '[O] best [A] dining experience [C] food quality [S] great', '[A] dining experience [O] best [C] food quality [S] great', '[O] best [A] dining experience [S] great [C] food quality', '[O] best [S] great [C] food quality [A] dining']

task, data: asqp rest15
target: [('service general', 'service', 'bad', 'expect better')]
output: ['[A] service [O] better [S] bad [C] service general']
sent: ['Considering', 'you', 'will', 'spend', 'at', 'least', '$', '60', 'a', 'head', ',', 'I', 'expect', 'better', 'service', '.']
counter: {('service general', 'service', 'bad', 'better'): 3, ('service general', 'service', 'bad', 'expect better'): 2}
output quads: ['[A] service [O] better [S] bad [C] service general']
multi_path: ['[A] service [O] better [S] bad [C] service general', '[O] better [A] service [C] service general [S] bad', '[A] service [O] better [C] service general [S] bad', '[O] expect better [A] service [S] bad [C] service general', '[O] expect better [S] bad [C] service general [A] service']

task, data: asqp rest15
target: [('ambience general', 'place', 'great', 'nice romantic'), ('restaurant general', 'place', 'great', 'nice romantic')]
output: ['[A] place [O] nice romantic [S] great [C] ambience general']
sent: ['Over', 'all', 'it', 'was', 'a', 'very', 'nice', 'romantic', 'place', '.']
counter: {('ambience general', 'place', 'great', 'nice romantic'): 5}
output quads: ['[A] place [O] nice romantic [S] great [C] ambience general']
multi_path: ['[A] place [O] nice romantic [S] great [C] ambience general', '[O] nice romantic [A] place [C] ambience general [S] great', '[A] place [O] nice romantic [C] ambience general [S] great', '[O] nice romantic [A] place [S] great [C] ambience general', '[O] nice romantic [S] great [C] ambience general [A] place']

task, data: asqp rest15
target: [('food style_options', 'food', 'great', 'shared')]
output: ['[A] food [O] all shared [S] great [C] food style_options']
sent: ['The', 'food', 'is', 'all', 'shared', 'so', 'we', 'get', 'to', 'order', 'together', 'and', 'eat', 'together', '.']
counter: {('food style_options', 'food', 'great', 'all shared'): 5}
output quads: ['[A] food [O] all shared [S] great [C] food style_options']
multi_path: ['[A] food [O] all shared [S] great [C] food style_options', '[O] all shared [A] food [C] food style_options [S] great', '[A] food [O] all shared [C] food style_options [S] great', '[O] all shared [A] food [S] great [C] food style_options', '[O] all shared [S] great [C] food style_options [A] food']

task, data: asqp rest15
target: [('service general', 'waitress', 'bad', 'did not know')]
output: ['[A] waitress [O] listed off several [S] bad [C] service general']
sent: ['When', 'we', 'inquired', 'about', 'ports', '-', 'the', 'waitress', 'listed', 'off', 'several', 'but', 'did', 'not', 'know', 'taste', 'variations', 'or', 'cost', '.']
counter: {('service general', 'waitress', 'bad', 'listed off several but did not know taste variations or cost'): 2, ('service general', 'waitress', 'bad', 'listed off several'): 3}
output quads: ['[A] waitress [O] listed off several [S] bad [C] service general']
multi_path: ['[A] waitress [O] listed off several but did not know taste variations or cost [S] bad [C] service general', '[O] listed off several [A] waitress [C] service general [S] bad', '[A] waitress [O] listed off several but did not know taste variations or cost [C] service general [S] bad', '[O] listed off several [A] waitress [S] bad [C] service general', '[O] listed off several [S] bad [C] service general [A] waitress']

task, data: asqp rest15
target: [('ambience general', 'decor', 'bad', 'not very pleasant')]
output: ['[A] decor [O] strikes you [S] bad [C] ambience general']
sent: ['The', 'only', 'thing', 'that', 'strikes', 'you', 'is', 'the', 'decor', '?', '(', 'not', 'very', 'pleasant', ')', '.']
counter: {('ambience general', 'decor', 'bad', 'strikes you'): 5, ('ambience general', 'decor', 'bad', 'not very pleasant'): 2}
output quads: ['[A] decor [O] strikes you [S] bad [C] ambience general']
multi_path: ['[A] decor [O] strikes you [S] bad [C] ambience general [SSEP] [A] decor [O] not very pleasant [S] bad [C] ambience general', '[O] strikes you [A] decor [C] ambience general [S] bad', '[A] decor [O] strikes you [C] ambience general [S] bad', '[O] strikes you [A] decor [S] bad [C] ambience general', '[O] strikes you [S] bad [C] ambience general [A] decor [SSEP] [O] not very pleasant [S] bad [C] ambience general [A] decor']

task, data: asqp rest15
target: [('restaurant general', 'null', 'bad', 'world-beater')]
output: ['[A] null [O] world-beater [S] great [C] restaurant general']
sent: ['On', 'that', 'scale', ',', 'it', "'s", 'a', 'world-beater', '.']
counter: {('restaurant general', 'null', 'great', 'world-beater'): 5}
output quads: ['[A] null [O] world-beater [S] great [C] restaurant general']
multi_path: ['[A] it [O] world-beater [S] great [C] restaurant general', '[O] world-beater [A] it [C] restaurant general [S] great', '[A] it [O] world-beater [C] restaurant general [S] great', '[O] world-beater [A] it [S] great [C] restaurant general', '[O] world-beater [S] great [C] restaurant general [A] it']

task, data: asqp rest15
target: [('service general', 'service', 'great', 'attentive'), ('service general', 'service', 'great', 'fast'), ('service general', 'service button', 'great', 'thanks to'), ('service general', 'waiter', 'bad', 'barely understood')]
output: ['[A] service [O] attentive [S] great [C] service general', '[A] service [O] fast [S] great [C] service general']
sent: ['The', 'service', 'was', 'extremely', 'fast', 'and', 'attentive', '(', 'thanks', 'to', 'the', 'service', 'button', 'on', 'your', 'table', ')', 'but', 'I', 'barely', 'understood', '1', 'word', 'when', 'the', 'waiter', 'took', 'our', 'order', '.']
counter: {('service general', 'service', 'great', 'fast'): 5, ('service general', 'service', 'great', 'attentive'): 5, ('service general', 'waiter', 'bad', 'barely understood'): 2}
output quads: ['[A] service [O] fast [S] great [C] service general', '[A] service [O] attentive [S] great [C] service general']
multi_path: ['[A] service [O] fast [S] great [C] service general [SSEP] [A] service [O] attentive [S] great [C] service general [SSEP] [A] waiter [O] barely understood [S] bad [C] service general', '[O] fast [A] service [C] service general [S] great [SSEP] [O] attentive [A] service [C] service general [S] great', '[A] service [O] fast [C] service general [S] great [SSEP] [A] service [O] attentive [C] service general [S] great', '[O] fast [A] service [S] great [C] service general [SSEP] [O] attentive [A] service [S] great [C] service general [SSEP] [O] barely understood [A] waiter [S] bad [C] service general', '[O] fast [S] great [C] service general [A] service [SSEP] [O] attentive [S] great [C] service general [A] service']

task, data: asqp rest15
target: [('service general', 'null', 'great', 'hastily put the table together for us')]
output: ['[A] null [O] taken aback [S] bad [C] service general']
sent: ['At', 'first', 'we', 'were', 'a', 'little', 'taken', 'aback', ',', 'as', 'this', 'seemed', 'to', 'present', 'a', 'problem', ',', 'although', 'the', 'restaurant', 'looked', 'fairly', 'empty', ',', 'but', 'they', 'hastily', 'put', 'the', 'table', 'together', 'for', 'us', '.']
counter: {('service general', 'null', 'great', 'taken aback'): 2, ('ambience general', 'table', 'great', 'hastily'): 2, ('service general', 'null', 'bad', 'taken aback'): 3, ('ambience general', 'restaurant', 'bad', 'empty'): 2, ('service general', 'null', 'great', 'hastily'): 1, ('restaurant miscellaneous', 'restaurant', 'ok', 'empty'): 1}
output quads: ['[A] null [O] taken aback [S] bad [C] service general']
multi_path: ['[A] it [O] taken aback [S] great [C] service general [SSEP] [A] table [O] hastily [S] great [C] ambience general', '[O] taken aback [A] it [C] service general [S] bad [SSEP] [O] empty [A] restaurant [C] ambience general [S] bad', '[A] it [O] taken aback [C] service general [S] great [SSEP] [A] table [O] hastily [C] ambience general [S] great', '[O] taken aback [A] it [S] bad [C] service general [SSEP] [O] empty [A] restaurant [S] bad [C] ambience general [SSEP] [O] hastily [A] it [S] great [C] service general', '[O] taken aback [S] bad [C] service general [A] it [SSEP] [O] empty [S] ok [C] restaurant miscellaneous [A] restaurant']

task, data: asqp rest15
target: [('food prices', 'dinner', 'bad', '$ 55'), ('food quality', 'dinner', 'bad', 'would not expect')]
output: []
sent: ['I', 'would', 'not', 'expect', 'this', 'for', 'a', '$', '55', 'dinner', '.']
counter: {('food prices', 'dinner', 'bad', 'not expect'): 2, ('food prices', 'dinner', 'bad', 'not expect this'): 2, ('food prices', 'dinner', 'bad', 'not expect this for a $ 55 dinner'): 1}
output quads: []
multi_path: ['[A] dinner [O] not expect [S] bad [C] food prices', '[O] not expect this [A] dinner [C] food prices [S] bad', '[A] dinner [O] not expect [C] food prices [S] bad', '[O] not expect this [A] dinner [S] bad [C] food prices', '[O] not expect this for a $ 55 dinner [S] bad [C] food prices [A] dinner']

task, data: asqp rest15
target: [('food quality', 'appetizer', 'great', 'delicious'), ('service general', 'server', 'bad', 'enhanced')]
output: ['[A] server [O] fun [S] great [C] service general']
sent: ['A', 'different', 'server', 'enhanced', 'the', 'fun', ',', 'dumping', 'our', 'entrees', 'in', 'front', 'of', 'us', 'halfway', 'through', 'our', 'appetizer', '(', 'which', 'was', 'delicious', ')', '.']
counter: {('service general', 'server', 'great', 'different'): 2, ('service general', 'server', 'great', 'fun'): 3}
output quads: ['[A] server [O] fun [S] great [C] service general']
multi_path: ['[A] server [O] different [S] great [C] service general', '[O] fun [A] server [C] service general [S] great', '[A] server [O] different [C] service general [S] great', '[O] fun [A] server [S] great [C] service general', '[O] fun [S] great [C] service general [A] server']

task, data: asqp rest15
target: [('ambience general', 'place', 'great', 'beautiful'), ('ambience general', 'place', 'great', 'classy'), ('restaurant prices', 'place', 'bad', 'target the uber whealthy')]
output: ['[A] null [O] target [S] great [C] restaurant miscellaneous', '[A] place [O] beautiful [S] great [C] ambience general', '[A] place [O] classy [S] great [C] ambience general']
sent: ['Yes', ',', 'the', 'place', 'is', 'classy', 'and', 'beautiful', ',', 'but', 'they', 'most', 'certainly', 'target', 'the', 'uber', 'whealthy', 'Not', 'the', 'common', 'joe', 'that', 'wants', 'to', 'go', 'all', 'out', 'every', 'once', 'in', 'a', 'while', '.']
counter: {('ambience general', 'place', 'great', 'classy'): 5, ('ambience general', 'place', 'great', 'beautiful'): 5, ('restaurant miscellaneous', 'place', 'great', 'target'): 1, ('restaurant miscellaneous', 'null', 'great', 'target'): 3, ('ambience general', 'place', 'great', 'uber whealthy'): 1}
output quads: ['[A] place [O] classy [S] great [C] ambience general', '[A] place [O] beautiful [S] great [C] ambience general', '[A] null [O] target [S] great [C] restaurant miscellaneous']
multi_path: ['[A] place [O] classy [S] great [C] ambience general [SSEP] [A] place [O] beautiful [S] great [C] ambience general [SSEP] [A] place [O] target [S] great [C] restaurant miscellaneous', '[O] classy [A] place [C] ambience general [S] great [SSEP] [O] beautiful [A] place [C] ambience general [S] great [SSEP] [O] target [A] it [C] restaurant miscellaneous [S] great', '[A] place [O] classy [C] ambience general [S] great [SSEP] [A] place [O] beautiful [C] ambience general [S] great [SSEP] [A] place [O] uber whealthy [C] ambience general [S] great', '[O] classy [A] place [S] great [C] ambience general [SSEP] [O] beautiful [A] place [S] great [C] ambience general [SSEP] [O] target [A] it [S] great [C] restaurant miscellaneous', '[O] classy [S] great [C] ambience general [A] place [SSEP] [O] beautiful [S] great [C] ambience general [A] place [SSEP] [O] target [S] great [C] restaurant miscellaneous [A] it']

task, data: asqp rest15
target: [('restaurant miscellaneous', 'place', 'great', 'great')]
output: ['[A] place [O] great [S] great [C] restaurant general']
sent: ['It', "'s", 'a', 'great', 'place', 'to', 'order', 'from', 'or', 'sit-in', '.']
counter: {('restaurant general', 'place', 'great', 'great'): 5}
output quads: ['[A] place [O] great [S] great [C] restaurant general']
multi_path: ['[A] place [O] great [S] great [C] restaurant general', '[O] great [A] place [C] restaurant general [S] great', '[A] place [O] great [C] restaurant general [S] great', '[O] great [A] place [S] great [C] restaurant general', '[O] great [S] great [C] restaurant general [A] place']

task, data: asqp rest15
target: [('food quality', 'lobster', 'ok', 'good')]
output: ['[A] lobster [O] good [S] ok [C] food quality', '[A] lobster [O] nothing spectacular [S] ok [C] food quality']
sent: ['lobster', 'was', 'good', ',', 'nothing', 'spectacular', '.']
counter: {('food quality', 'lobster', 'ok', 'good'): 5, ('food quality', 'lobster', 'ok', 'nothing spectacular'): 5}
output quads: ['[A] lobster [O] good [S] ok [C] food quality', '[A] lobster [O] nothing spectacular [S] ok [C] food quality']
multi_path: ['[A] lobster [O] good [S] ok [C] food quality [SSEP] [A] lobster [O] nothing spectacular [S] ok [C] food quality', '[O] good [A] lobster [C] food quality [S] ok [SSEP] [O] nothing spectacular [A] lobster [C] food quality [S] ok', '[A] lobster [O] good [C] food quality [S] ok [SSEP] [A] lobster [O] nothing spectacular [C] food quality [S] ok', '[O] good [A] lobster [S] ok [C] food quality [SSEP] [O] nothing spectacular [A] lobster [S] ok [C] food quality', '[O] good [S] ok [C] food quality [A] lobster [SSEP] [O] nothing spectacular [S] ok [C] food quality [A] lobster']

task, data: asqp rest15
target: [('food quality', 'kimchee', 'bad', 'disgusting'), ('food quality', 'korean fair', 'bad', 'mediocre')]
output: ['[A] fish skin [O] bad [S] bad [C] food quality', '[A] fish skin [O] disgusting [S] bad [C] food quality', '[A] fish skin [O] slimy [S] bad [C] food quality', '[A] order [O] predictably mediocre [S] bad [C] food quality']
sent: ['However', ',', 'once', 'I', 'received', 'my', 'predictably', 'mediocre', 'order', 'of', 'what', 'Dokebi', 'thinks', 'passes', 'as', 'Korean', 'fair', ',', '(', 'sometimes', 'you', 'have', 'to', 'settle', 'when', 'it', "'s", 'your', 'only', 'option', ')', ',', 'I', 'got', 'through', 'about', 'half', 'my', 'kimchee', 'before', 'I', 'found', 'a', 'piece', 'of', 'random', 'lettuce', 'accompanied', 'by', 'a', 'far', 'more', 'disgusting', ',', 'slimy', ',', 'clearly', 'bad', 'piece', 'of', 'fish', 'skin', '.']
counter: {('food quality', 'order', 'bad', 'predictably mediocre'): 5, ('food quality', 'fish skin', 'bad', 'disgusting'): 5, ('food quality', 'fish skin', 'bad', 'slimy'): 5, ('food quality', 'fish skin', 'bad', 'bad'): 5}
output quads: ['[A] order [O] predictably mediocre [S] bad [C] food quality', '[A] fish skin [O] disgusting [S] bad [C] food quality', '[A] fish skin [O] slimy [S] bad [C] food quality', '[A] fish skin [O] bad [S] bad [C] food quality']
multi_path: ['[A] order [O] predictably mediocre [S] bad [C] food quality [SSEP] [A] fish skin [O] disgusting [S] bad [C] food quality [SSEP] [A] fish skin [O] slimy [S] bad [C] food quality [SSEP] [A] fish skin [O] bad [S] bad [C] food quality', '[O] predictably mediocre [A] order [C] food quality [S] bad [SSEP] [O] disgusting [A] fish skin [C] food quality [S] bad [SSEP] [O] slimy [A] fish skin [C] food quality [S] bad [SSEP] [O] bad [A] fish skin [C] food quality [S] bad', '[A] order [O] predictably mediocre [C] food quality [S] bad [SSEP] [A] fish skin [O] disgusting [C] food quality [S] bad [SSEP] [A] fish skin [O] slimy [C] food quality [S] bad [SSEP] [A] fish skin [O] bad [C] food quality [S] bad', '[O] predictably mediocre [A] order [S] bad [C] food quality [SSEP] [O] disgusting [A] fish skin [S] bad [C] food quality [SSEP] [O] slimy [A] fish skin [S] bad [C] food quality [SSEP] [O] bad [A] fish skin [S] bad [C] food quality', '[O] predictably mediocre [S] bad [C] food quality [A] order [SSEP] [O] disgusting [S] bad [C] food quality [A] fish skin [SSEP] [O] slimy [S] bad [C] food quality [A] fish skin [SSEP] [O] bad [S] bad [C] food quality [A] fish skin']

task, data: asqp rest15
target: [('restaurant prices', 'bark', 'bad', 'pricey')]
output: ["[A] hot dog [O] don't just get your average hot dog [S] great [C] food quality", '[A] place [O] pricey [S] bad [C] restaurant prices']
sent: ['At', 'first', 'glance', 'this', 'place', 'seems', 'a', 'bit', 'pricey', 'for', 'a', 'hot', 'dog', 'joint', ',', 'but', 'at', 'Bark', 'you', 'do', "n't", 'just', 'get', 'your', 'average', 'hot', 'dog', '.']
counter: {('restaurant prices', 'place', 'bad', 'pricey'): 5, ('food quality', 'hot dog', 'great', "don't just get your average hot dog"): 3, ('food quality', 'null', 'great', "don't just get your average hot dog"): 2}
output quads: ['[A] place [O] pricey [S] bad [C] restaurant prices', "[A] hot dog [O] don't just get your average hot dog [S] great [C] food quality"]
multi_path: ["[A] place [O] pricey [S] bad [C] restaurant prices [SSEP] [A] hot dog [O] don't just get your average hot dog [S] great [C] food quality", "[O] pricey [A] place [C] restaurant prices [S] bad [SSEP] [O] don't just get your average hot dog [A] it [C] food quality [S] great", "[A] place [O] pricey [C] restaurant prices [S] bad [SSEP] [A] hot dog [O] don't just get your average hot dog [C] food quality [S] great", "[O] pricey [A] place [S] bad [C] restaurant prices [SSEP] [O] don't just get your average hot dog [A] it [S] great [C] food quality", "[O] pricey [S] bad [C] restaurant prices [A] place [SSEP] [O] don't just get your average hot dog [S] great [C] food quality [A] hot dog"]

task, data: asqp rest15
target: [('food quality', 'dishes', 'ok', "wasn't too impressed")]
output: ["[A] dishes [O] wasn't too impressed [S] bad [C] food quality"]
sent: ['I', 'tried', 'a', 'couple', 'other', 'dishes', 'but', 'was', "n't", 'too', 'impressed', '.']
counter: {('food quality', 'dishes', 'bad', "wasn't too impressed"): 5}
output quads: ["[A] dishes [O] wasn't too impressed [S] bad [C] food quality"]
multi_path: ["[A] dishes [O] wasn't too impressed [S] bad [C] food quality", "[O] wasn't too impressed [A] dishes [C] food quality [S] bad", "[A] dishes [O] wasn't too impressed [C] food quality [S] bad", "[O] wasn't too impressed [A] dishes [S] bad [C] food quality", "[O] wasn't too impressed [S] bad [C] food quality [A] dishes"]

task, data: asqp rest15
target: [('ambience general', 'looks', 'great', 'exceeds')]
output: []
sent: ['Over', 'all', 'the', 'looks', 'of', 'the', 'place', 'exceeds', 'the', 'actual', 'meals', '.']
counter: {('ambience general', 'place', 'great', 'exceeds'): 2, ('food style_options', 'meals', 'great', 'exceeds'): 2, ('ambience general', 'meals', 'great', 'exceeds'): 1}
output quads: []
multi_path: ['[A] place [O] exceeds [S] great [C] ambience general', '[O] exceeds [A] meals [C] food style_options [S] great', '[A] place [O] exceeds [C] ambience general [S] great', '[O] exceeds [A] meals [S] great [C] food style_options', '[O] exceeds [S] great [C] ambience general [A] meals']

task, data: asqp rest15
target: [('drinks quality', 'null', 'bad', 'forgotten')]
output: ['[A] bartender [O] forgotten to add [S] bad [C] service general']
sent: ['Mine', 'tasted', 'like', 'the', 'bartender', 'had', 'forgotten', 'to', 'add', 'the', 'tequila', '.']
counter: {('service general', 'bartender', 'bad', 'forgotten to add'): 4, ('drinks quality', 'bartender', 'bad', 'forgotten to add'): 1}
output quads: ['[A] bartender [O] forgotten to add [S] bad [C] service general']
multi_path: ['[A] bartender [O] forgotten to add [S] bad [C] service general', '[O] forgotten to add [A] bartender [C] service general [S] bad', '[A] bartender [O] forgotten to add [C] service general [S] bad', '[O] forgotten to add [A] bartender [S] bad [C] service general', '[O] forgotten to add [S] bad [C] drinks quality [A] bartender']

task, data: asqp rest15
target: [('ambience general', 'environment', 'ok', 'upscale')]
output: ['[A] environment [O] upscale [S] great [C] ambience general']
sent: ['The', 'environment', 'is', 'very', 'upscale', 'and', 'you', 'will', 'see', 'a', 'lot', 'of', 'rich', 'guys', 'with', 'trophy', 'wives', 'or', 'just', 'highly', 'paid', 'escorts', '.']
counter: {('ambience general', 'environment', 'great', 'upscale'): 5}
output quads: ['[A] environment [O] upscale [S] great [C] ambience general']
multi_path: ['[A] environment [O] upscale [S] great [C] ambience general', '[O] upscale [A] environment [C] ambience general [S] great', '[A] environment [O] upscale [C] ambience general [S] great', '[O] upscale [A] environment [S] great [C] ambience general', '[O] upscale [S] great [C] ambience general [A] environment']

task, data: asqp rest15
target: [('ambience general', 'place', 'great', 'recommend'), ('restaurant general', 'place', 'great', 'beautiful')]
output: ['[A] place [O] beautiful [S] great [C] ambience general', '[A] place [O] recommend [S] great [C] ambience general']
sent: ['I', 'highly', 'recommend', 'this', 'beautiful', 'place', '.']
counter: {('ambience general', 'place', 'great', 'recommend'): 5, ('ambience general', 'place', 'great', 'beautiful'): 5}
output quads: ['[A] place [O] recommend [S] great [C] ambience general', '[A] place [O] beautiful [S] great [C] ambience general']
multi_path: ['[A] place [O] recommend [S] great [C] ambience general [SSEP] [A] place [O] beautiful [S] great [C] ambience general', '[O] recommend [A] place [C] ambience general [S] great [SSEP] [O] beautiful [A] place [C] ambience general [S] great', '[A] place [O] recommend [C] ambience general [S] great [SSEP] [A] place [O] beautiful [C] ambience general [S] great', '[O] recommend [A] place [S] great [C] ambience general [SSEP] [O] beautiful [A] place [S] great [C] ambience general', '[O] recommend [S] great [C] ambience general [A] place [SSEP] [O] beautiful [S] great [C] ambience general [A] place']

task, data: asqp rest15
target: [('restaurant general', 'null', 'bad', 'bad'), ('restaurant prices', 'null', 'bad', 'so much money')]
output: ['[A] null [O] bad [S] bad [C] restaurant prices']
sent: ['I', 'am', 'actually', 'offended', 'to', 'have', 'spent', 'so', 'much', 'money', 'on', 'such', 'a', 'bad', 'experience', '.']
counter: {('restaurant prices', 'null', 'bad', 'bad'): 5}
output quads: ['[A] null [O] bad [S] bad [C] restaurant prices']
multi_path: ['[A] it [O] bad [S] bad [C] restaurant prices', '[O] bad [A] it [C] restaurant prices [S] bad', '[A] it [O] bad [C] restaurant prices [S] bad', '[O] bad [A] it [S] bad [C] restaurant prices', '[O] bad [S] bad [C] restaurant prices [A] it']

task, data: asqp rest15
target: [('restaurant general', 'null', 'bad', 'unpleasant'), ('restaurant prices', 'null', 'bad', 'costly')]
output: ['[A] null [O] costly [S] bad [C] restaurant general', '[A] null [O] unpleasant [S] bad [C] restaurant prices']
sent: ['And', 'even', 'more', 'so', 'unpleasant', 'because', 'it', 'was', 'so', 'costly', 'for', 'such', 'an', 'unpleasant', 'experience', '.']
counter: {('restaurant prices', 'null', 'bad', 'unpleasant'): 5, ('restaurant general', 'null', 'bad', 'costly'): 5}
output quads: ['[A] null [O] unpleasant [S] bad [C] restaurant prices', '[A] null [O] costly [S] bad [C] restaurant general']
multi_path: ['[A] it [O] unpleasant [S] bad [C] restaurant prices [SSEP] [A] it [O] costly [S] bad [C] restaurant general', '[O] unpleasant [A] it [C] restaurant prices [S] bad [SSEP] [O] costly [A] it [C] restaurant general [S] bad', '[A] it [O] unpleasant [C] restaurant prices [S] bad [SSEP] [A] it [O] costly [C] restaurant general [S] bad', '[O] unpleasant [A] it [S] bad [C] restaurant prices [SSEP] [O] costly [A] it [S] bad [C] restaurant general', '[O] unpleasant [S] bad [C] restaurant prices [A] it [SSEP] [O] costly [S] bad [C] restaurant general [A] it']

task, data: asqp rest15
target: [('food quality', 'dish', 'bad', 'mess')]
output: ['[A] dish [O] barely touched [S] bad [C] food quality']
sent: ['My', 'wife', 'had', 'barely', 'touched', 'that', 'mess', 'of', 'a', 'dish', '.']
counter: {('food quality', 'null', 'bad', 'barely touched'): 2, ('food quality', 'dish', 'bad', 'barely touched'): 3}
output quads: ['[A] dish [O] barely touched [S] bad [C] food quality']
multi_path: ['[A] it [O] barely touched [S] bad [C] food quality', '[O] barely touched [A] dish [C] food quality [S] bad', '[A] it [O] barely touched [C] food quality [S] bad', '[O] barely touched [A] dish [S] bad [C] food quality', '[O] barely touched [S] bad [C] food quality [A] dish']

task, data: asqp rest15
target: [('food prices', 'food', 'bad', 'high'), ('food quality', 'food', 'great', 'good'), ('restaurant general', 'null', 'great', 'come back')]
output: ['[A] food [O] good [S] great [C] food quality', '[A] null [O] high [S] bad [C] restaurant prices']
sent: ['Price', 'is', 'high', 'but', 'the', 'food', 'is', 'good', ',', 'so', 'I', 'would', 'come', 'back', 'again', '.']
counter: {('restaurant prices', 'null', 'bad', 'high'): 5, ('food quality', 'food', 'great', 'good'): 5}
output quads: ['[A] null [O] high [S] bad [C] restaurant prices', '[A] food [O] good [S] great [C] food quality']
multi_path: ['[A] it [O] high [S] bad [C] restaurant prices [SSEP] [A] food [O] good [S] great [C] food quality', '[O] high [A] it [C] restaurant prices [S] bad [SSEP] [O] good [A] food [C] food quality [S] great', '[A] it [O] high [C] restaurant prices [S] bad [SSEP] [A] food [O] good [C] food quality [S] great', '[O] high [A] it [S] bad [C] restaurant prices [SSEP] [O] good [A] food [S] great [C] food quality', '[O] high [S] bad [C] restaurant prices [A] it [SSEP] [O] good [S] great [C] food quality [A] food']

task, data: asqp rest15
target: [('restaurant general', 'null', 'bad', 'garbage')]
output: []
sent: ['More', 'Williamsburg', 'Garbage']
counter: {('restaurant miscellaneous', 'williamsburg garbage', 'bad', 'garbage'): 2, ('restaurant miscellaneous', 'williamsburg garbage', 'bad', 'more'): 2, ('restaurant miscellaneous', 'null', 'bad', 'more'): 1}
output quads: []
multi_path: ['[A] williamsburg garbage [O] garbage [S] bad [C] restaurant miscellaneous', '[O] more [A] williamsburg garbage [C] restaurant miscellaneous [S] bad', '[A] williamsburg garbage [O] garbage [C] restaurant miscellaneous [S] bad', '[O] more [A] williamsburg garbage [S] bad [C] restaurant miscellaneous', '[O] more [S] bad [C] restaurant miscellaneous [A] it']

task, data: asqp rest15
target: [('drinks quality', 'bar drinks', 'bad', 'ok')]
output: ['[A] bar drinks [O] ok [S] ok [C] drinks quality']
sent: ['The', 'bar', 'drinks', 'were', 'Eh', ',', 'ok', 'to', 'say', 'the', 'least', '.']
counter: {('drinks quality', 'bar drinks', 'ok', 'ok'): 5}
output quads: ['[A] bar drinks [O] ok [S] ok [C] drinks quality']
multi_path: ['[A] bar drinks [O] ok [S] ok [C] drinks quality', '[O] ok [A] bar drinks [C] drinks quality [S] ok', '[A] bar drinks [O] ok [C] drinks quality [S] ok', '[O] ok [A] bar drinks [S] ok [C] drinks quality', '[O] ok [S] ok [C] drinks quality [A] bar drinks']

task, data: asqp rest15
target: [('food quality', 'null', 'great', 'great'), ('food quality', 'null', 'great', 'original')]
output: ['[A] null [O] great [S] great [C] food quality', '[A] null [O] original [S] great [C] food style_options']
sent: ['Great', ',', 'original', 'taste', '.']
counter: {('food quality', 'null', 'great', 'great'): 5, ('food quality', 'null', 'great', 'original'): 1, ('food style_options', 'null', 'great', 'original'): 4}
output quads: ['[A] null [O] great [S] great [C] food quality', '[A] null [O] original [S] great [C] food style_options']
multi_path: ['[A] it [O] great [S] great [C] food quality [SSEP] [A] it [O] original [S] great [C] food quality', '[O] great [A] it [C] food quality [S] great [SSEP] [O] original [A] it [C] food style_options [S] great', '[A] it [O] great [C] food quality [S] great [SSEP] [A] it [O] original [C] food style_options [S] great', '[O] great [A] it [S] great [C] food quality [SSEP] [O] original [A] it [S] great [C] food style_options', '[O] great [S] great [C] food quality [A] it [SSEP] [O] original [S] great [C] food style_options [A] it']

task, data: asqp rest15
target: [('restaurant general', "water's edge", 'great', 'thank you')]
output: ['[A] null [O] thank you [S] great [C] restaurant general']
sent: ['Thank', 'you', 'everyone', 'at', 'Water', "'s", 'Edge', '.']
counter: {('restaurant general', 'null', 'great', 'thank you'): 5}
output quads: ['[A] null [O] thank you [S] great [C] restaurant general']
multi_path: ['[A] it [O] thank you [S] great [C] restaurant general', '[O] thank you [A] it [C] restaurant general [S] great', '[A] it [O] thank you [C] restaurant general [S] great', '[O] thank you [A] it [S] great [C] restaurant general', '[O] thank you [S] great [C] restaurant general [A] it']

task, data: asqp rest15
target: [('food quality', 'flank steak', 'great', 'good')]
output: ['[A] flank steak [O] good [S] great [C] food quality', '[A] swordfish [O] good [S] great [C] food quality']
sent: ['My', 'father', 'had', 'the', 'flank', 'steak', 'which', 'was', 'very', 'good', ',', 'and', 'my', 'mother', 'had', 'the', 'swordfish', '.']
counter: {('food quality', 'flank steak', 'great', 'good'): 5, ('food quality', 'swordfish', 'great', 'good'): 5}
output quads: ['[A] flank steak [O] good [S] great [C] food quality', '[A] swordfish [O] good [S] great [C] food quality']
multi_path: ['[A] flank steak [O] good [S] great [C] food quality [SSEP] [A] swordfish [O] good [S] great [C] food quality', '[O] good [A] flank steak [C] food quality [S] great [SSEP] [O] good [A] swordfish [C] food quality [S] great', '[A] flank steak [O] good [C] food quality [S] great [SSEP] [A] swordfish [O] good [C] food quality [S] great', '[O] good [A] flank steak [S] great [C] food quality [SSEP] [O] good [A] swordfish [S] great [C] food quality', '[O] good [S] great [C] food quality [A] flank steak [SSEP] [O] good [S] great [C] food quality [A] swordfish']

task, data: asqp rest15
target: [('restaurant miscellaneous', 'null', 'great', 'have a hard time going anywhere else')]
output: ['[A] null [O] hard time going anywhere [S] great [C] restaurant miscellaneous']
sent: ['Every', 'time', 'I', 'have', 'a', 'special', 'occasion', 'with', 'my', 'boyfriend', 'I', 'have', 'a', 'hard', 'time', 'going', 'anywhere', 'else', '.']
counter: {('restaurant miscellaneous', 'null', 'great', 'hard time going anywhere'): 3, ('restaurant miscellaneous', 'null', 'great', 'hard time going anywhere else'): 2}
output quads: ['[A] null [O] hard time going anywhere [S] great [C] restaurant miscellaneous']
multi_path: ['[A] it [O] hard time going anywhere [S] great [C] restaurant miscellaneous', '[O] hard time going anywhere [A] it [C] restaurant miscellaneous [S] great', '[A] it [O] hard time going anywhere [C] restaurant miscellaneous [S] great', '[O] hard time going anywhere else [A] it [S] great [C] restaurant miscellaneous', '[O] hard time going anywhere else [S] great [C] restaurant miscellaneous [A] it']

task, data: asqp rest15
target: [('restaurant general', 'null', 'great', 'nice')]
output: ['[A] null [O] nice time [S] great [C] restaurant general']
sent: ['We', 'had', 'a', 'very', 'nice', 'time', '.']
counter: {('restaurant general', 'null', 'great', 'nice time'): 5}
output quads: ['[A] null [O] nice time [S] great [C] restaurant general']
multi_path: ['[A] it [O] nice time [S] great [C] restaurant general', '[O] nice time [A] it [C] restaurant general [S] great', '[A] it [O] nice time [C] restaurant general [S] great', '[O] nice time [A] it [S] great [C] restaurant general', '[O] nice time [S] great [C] restaurant general [A] it']

task, data: asqp rest15
target: [('food quality', 'food', 'bad', 'speechless')]
output: ['[A] food [O] horrible [S] bad [C] food quality']
sent: ['I', 'was', 'speechless', 'by', 'the', 'horrible', 'food', '.']
counter: {('food quality', 'food', 'bad', 'horrible'): 5}
output quads: ['[A] food [O] horrible [S] bad [C] food quality']
multi_path: ['[A] food [O] horrible [S] bad [C] food quality', '[O] horrible [A] food [C] food quality [S] bad', '[A] food [O] horrible [C] food quality [S] bad', '[O] horrible [A] food [S] bad [C] food quality', '[O] horrible [S] bad [C] food quality [A] food']

task, data: asqp rest15
target: [('service general', 'service', 'bad', 'leaves much to be desired')]
output: ['[A] service [O] desired [S] bad [C] service general']
sent: ['The', 'service', 'leaves', 'much', 'to', 'be', 'desired', ',', 'from', 'feeling', 'like', 'you', 'are', 'rushed', 'the', 'place', 'your', 'order', ',', 'to', 'being', 'ignored', 'the', 'rest', 'of', 'the', 'night', '.']
counter: {('service general', 'service', 'bad', 'leaves much to be desired'): 2, ('service general', 'service', 'bad', 'desired'): 3}
output quads: ['[A] service [O] desired [S] bad [C] service general']
multi_path: ['[A] service [O] leaves much to be desired [S] bad [C] service general', '[O] desired [A] service [C] service general [S] bad', '[A] service [O] leaves much to be desired [C] service general [S] bad', '[O] desired [A] service [S] bad [C] service general', '[O] desired [S] bad [C] service general [A] service']

task, data: asqp rest15
target: [('service general', 'service', 'great', 'problem')]
output: ['[A] rice [O] missing [S] bad [C] food quality', '[A] service [O] never had a problem [S] great [C] service general']
sent: ['Have', 'never', 'had', 'a', 'problem', 'with', 'service', 'save', 'a', 'missing', 'rice', 'once', '.']
counter: {('service general', 'service', 'great', 'never had a problem'): 5, ('food quality', 'rice', 'bad', 'missing'): 5}
output quads: ['[A] service [O] never had a problem [S] great [C] service general', '[A] rice [O] missing [S] bad [C] food quality']
multi_path: ['[A] service [O] never had a problem [S] great [C] service general [SSEP] [A] rice [O] missing [S] bad [C] food quality', '[O] never had a problem [A] service [C] service general [S] great [SSEP] [O] missing [A] rice [C] food quality [S] bad', '[A] service [O] never had a problem [C] service general [S] great [SSEP] [A] rice [O] missing [C] food quality [S] bad', '[O] never had a problem [A] service [S] great [C] service general [SSEP] [O] missing [A] rice [S] bad [C] food quality', '[O] never had a problem [S] great [C] service general [A] service [SSEP] [O] missing [S] bad [C] food quality [A] rice']

task, data: asqp rest15
target: [('food quality', 'food', 'great', 'great')]
output: ['[A] desserts [O] except [S] bad [C] food quality', '[A] food [O] great [S] great [C] food quality']
sent: ['All', 'in', 'all', ',', 'the', 'food', 'was', 'great', '(', 'except', 'for', 'the', 'dessserts', ')', '.']
counter: {('food quality', 'food', 'great', 'great'): 5, ('food quality', 'desserts', 'bad', 'except'): 5}
output quads: ['[A] food [O] great [S] great [C] food quality', '[A] desserts [O] except [S] bad [C] food quality']
multi_path: ['[A] food [O] great [S] great [C] food quality [SSEP] [A] desserts [O] except [S] bad [C] food quality', '[O] great [A] food [C] food quality [S] great [SSEP] [O] except [A] desserts [C] food quality [S] bad', '[A] food [O] great [C] food quality [S] great [SSEP] [A] desserts [O] except [C] food quality [S] bad', '[O] great [A] food [S] great [C] food quality [SSEP] [O] except [A] desserts [S] bad [C] food quality', '[O] great [S] great [C] food quality [A] food [SSEP] [O] except [S] bad [C] food quality [A] desserts']

task, data: asqp rest15
target: [('food quality', 'pizza', 'bad', 'overrated')]
output: ['[A] pizza [O] overrated [S] bad [C] food quality', '[A] pizza [O] under cooked [S] bad [C] food quality']
sent: ['I', 'think', 'the', 'pizza', 'is', 'so', 'overrated', 'and', 'was', 'under', 'cooked', '.']
counter: {('food quality', 'pizza', 'bad', 'overrated'): 5, ('food quality', 'pizza', 'bad', 'under cooked'): 5}
output quads: ['[A] pizza [O] overrated [S] bad [C] food quality', '[A] pizza [O] under cooked [S] bad [C] food quality']
multi_path: ['[A] pizza [O] overrated [S] bad [C] food quality [SSEP] [A] pizza [O] under cooked [S] bad [C] food quality', '[O] overrated [A] pizza [C] food quality [S] bad [SSEP] [O] under cooked [A] pizza [C] food quality [S] bad', '[A] pizza [O] overrated [C] food quality [S] bad [SSEP] [A] pizza [O] under cooked [C] food quality [S] bad', '[O] overrated [A] pizza [S] bad [C] food quality [SSEP] [O] under cooked [A] pizza [S] bad [C] food quality', '[O] overrated [S] bad [C] food quality [A] pizza [SSEP] [O] under cooked [S] bad [C] food quality [A] pizza']

task, data: asqp rest15
target: [('food quality', 'margherita pizza', 'great', 'like'), ('food quality', 'null', 'great', 'good')]
output: ['[A] margherita pizza [O] better [S] great [C] food quality', '[A] margherita pizza [O] good [S] great [C] food quality', '[A] margherita pizza [O] like [S] great [C] food quality']
sent: ['Personally', 'I', 'like', 'the', 'margherita', 'pizza', 'better', ',', 'but', 'they', 'are', 'all', 'good', '.']
counter: {('food quality', 'margherita pizza', 'great', 'like'): 5, ('food quality', 'margherita pizza', 'great', 'better'): 5, ('food quality', 'margherita pizza', 'great', 'good'): 3, ('food quality', 'null', 'great', 'good'): 2}
output quads: ['[A] margherita pizza [O] like [S] great [C] food quality', '[A] margherita pizza [O] better [S] great [C] food quality', '[A] margherita pizza [O] good [S] great [C] food quality']
multi_path: ['[A] margherita pizza [O] like [S] great [C] food quality [SSEP] [A] margherita pizza [O] better [S] great [C] food quality [SSEP] [A] margherita pizza [O] good [S] great [C] food quality', '[O] like [A] margherita pizza [C] food quality [S] great [SSEP] [O] better [A] margherita pizza [C] food quality [S] great [SSEP] [O] good [A] it [C] food quality [S] great', '[A] margherita pizza [O] like [C] food quality [S] great [SSEP] [A] margherita pizza [O] better [C] food quality [S] great [SSEP] [A] margherita pizza [O] good [C] food quality [S] great', '[O] like [A] margherita pizza [S] great [C] food quality [SSEP] [O] better [A] margherita pizza [S] great [C] food quality [SSEP] [O] good [A] it [S] great [C] food quality', '[O] like [S] great [C] food quality [A] margherita pizza [SSEP] [O] better [S] great [C] food quality [A] margherita pizza [SSEP] [O] good [S] great [C] food quality [A] margherita pizza']

task, data: asqp rest15
target: [('service general', 'waitress', 'bad', 'speechless')]
output: ['[A] waitress [O] shocked [S] bad [C] service general', '[A] waitress [O] walked away [S] bad [C] service general']
sent: ['At', 'this', 'point', ',', 'the', 'waitress', 'comes', 'over', 'and', 'asks', 'us', 'if', 'everything', 'was', 'okay', ',', 'I', 'was', 'literally', 'so', 'shocked', 'that', 'I', 'was', 'speechless', 'and', 'didn', "'t", 'say', 'anything', ',', 'and', 'guess', 'what', ',', 'the', 'waitress', 'WALKED', 'away', '.']
counter: {('service general', 'waitress', 'bad', 'shocked'): 5, ('service general', 'waitress', 'bad', 'walked away'): 5}
output quads: ['[A] waitress [O] shocked [S] bad [C] service general', '[A] waitress [O] walked away [S] bad [C] service general']
multi_path: ['[A] waitress [O] shocked [S] bad [C] service general [SSEP] [A] waitress [O] walked away [S] bad [C] service general', '[O] shocked [A] waitress [C] service general [S] bad [SSEP] [O] walked away [A] waitress [C] service general [S] bad', '[A] waitress [O] shocked [C] service general [S] bad [SSEP] [A] waitress [O] walked away [C] service general [S] bad', '[O] shocked [A] waitress [S] bad [C] service general [SSEP] [O] walked away [A] waitress [S] bad [C] service general', '[O] shocked [S] bad [C] service general [A] waitress [SSEP] [O] walked away [S] bad [C] service general [A] waitress']

task, data: asqp rest15
target: [('ambience general', 'private booths', 'great', 'ushered')]
output: ['[A] null [O] like [S] great [C] restaurant miscellaneous']
sent: ['If', 'you', '’', 're', 'planning', 'to', 'come', 'here', ',', 'make', 'sure', 'that', 'your', 'date', 'is', 'someone', 'whom', 'you', 'really', 'like', 'since', 'you', '’', 'll', 'be', 'ushered', 'to', 'private', 'booths', 'where', 'there', 'will', 'be', 'no', 'people', 'or', 'food', 'watching', '(', 'choose', 'the', 'ones', 'on', 'the', 'ground', 'level', 'that', 'have', 'glass', 'ceilings', 'so', 'you', 'may', 'see', 'the', 'stars', 'in', 'the', 'sky', '!', ')', '.']
counter: {('restaurant miscellaneous', 'null', 'great', 'like'): 5}
output quads: ['[A] null [O] like [S] great [C] restaurant miscellaneous']
multi_path: ['[A] it [O] like [S] great [C] restaurant miscellaneous', '[O] like [A] it [C] restaurant miscellaneous [S] great', '[A] it [O] like [C] restaurant miscellaneous [S] great', '[O] like [A] it [S] great [C] restaurant miscellaneous', '[O] like [S] great [C] restaurant miscellaneous [A] it']

task, data: asqp rest15
target: [('food quality', 'null', 'great', 'happy'), ('restaurant general', 'bark', 'great', 'worth')]
output: ['[A] bark [O] happy [S] great [C] restaurant general', '[A] going to bark [O] worth [S] great [C] restaurant general']
sent: ['Going', 'to', 'Bark', 'is', 'always', 'worth', 'the', 'train', 'ride', ',', 'and', 'will', 'make', 'your', 'tongue', 'and', 'belly', 'very', 'happy', '!']
counter: {('restaurant general', 'going to bark', 'great', 'worth'): 4, ('restaurant general', 'bark', 'great', 'happy'): 3, ('restaurant general', 'going to bark', 'great', 'happy'): 2, ('restaurant general', 'bark', 'great', 'worth'): 1}
output quads: ['[A] going to bark [O] worth [S] great [C] restaurant general', '[A] bark [O] happy [S] great [C] restaurant general']
multi_path: ['[A] going to bark [O] worth [S] great [C] restaurant general [SSEP] [A] bark [O] happy [S] great [C] restaurant general', '[O] worth [A] going to bark [C] restaurant general [S] great [SSEP] [O] happy [A] going to bark [C] restaurant general [S] great', '[A] going to bark [O] worth [C] restaurant general [S] great [SSEP] [A] bark [O] happy [C] restaurant general [S] great', '[O] worth [A] going to bark [S] great [C] restaurant general [SSEP] [O] happy [A] going to bark [S] great [C] restaurant general', '[O] worth [S] great [C] restaurant general [A] bark [SSEP] [O] happy [S] great [C] restaurant general [A] bark']

task, data: asqp rest15
target: [('restaurant general', 'null', 'great', 'had fun')]
output: ['[A] null [O] fun [S] great [C] restaurant miscellaneous']
sent: ['We', 'had', 'fun', 'eating', 'in', 'there', ',', 'we', 'were', 'there', 'like', 'around', '3', 'a', '.m', '.', 'in', 'the', 'morning', '!']
counter: {('restaurant miscellaneous', 'null', 'great', 'fun'): 5}
output quads: ['[A] null [O] fun [S] great [C] restaurant miscellaneous']
multi_path: ['[A] it [O] fun [S] great [C] restaurant miscellaneous', '[O] fun [A] it [C] restaurant miscellaneous [S] great', '[A] it [O] fun [C] restaurant miscellaneous [S] great', '[O] fun [A] it [S] great [C] restaurant miscellaneous', '[O] fun [S] great [C] restaurant miscellaneous [A] it']

task, data: asqp rest15
target: [('service general', 'delivery', 'bad', 'lacking')]
output: ['[A] delivery [O] lacking [S] bad [C] service general', '[A] delivery [O] spot on [S] bad [C] service general']
sent: ['Delivery', 'can', 'be', 'spot', 'on', 'or', 'lacking', 'depending', 'on', 'the', 'weather', 'and', 'the', 'day', 'of', 'the', 'week', '.']
counter: {('service general', 'delivery', 'bad', 'spot on'): 5, ('service general', 'delivery', 'bad', 'lacking'): 5}
output quads: ['[A] delivery [O] spot on [S] bad [C] service general', '[A] delivery [O] lacking [S] bad [C] service general']
multi_path: ['[A] delivery [O] spot on [S] bad [C] service general [SSEP] [A] delivery [O] lacking [S] bad [C] service general', '[O] spot on [A] delivery [C] service general [S] bad [SSEP] [O] lacking [A] delivery [C] service general [S] bad', '[A] delivery [O] spot on [C] service general [S] bad [SSEP] [A] delivery [O] lacking [C] service general [S] bad', '[O] spot on [A] delivery [S] bad [C] service general [SSEP] [O] lacking [A] delivery [S] bad [C] service general', '[O] spot on [S] bad [C] service general [A] delivery [SSEP] [O] lacking [S] bad [C] service general [A] delivery']

task, data: asqp rest15
target: [('service general', 'null', 'bad', 'still had not received')]
output: ['[A] null [O] not received one beverage nor hooka [S] bad [C] drinks quality']
sent: ['By', 'the', 'time', 'we', 'finished', 'our', 'dinner', 'we', 'still', 'had', 'not', 'received', 'one', 'beverage', 'NOR', 'hooka', '!']
counter: {('drinks quality', 'beverage nor hooka', 'bad', 'had not received one beverage nor hooka'): 2, ('drinks quality', 'null', 'bad', 'not received one beverage nor hooka'): 3}
output quads: ['[A] null [O] not received one beverage nor hooka [S] bad [C] drinks quality']
multi_path: ['[A] beverage nor hooka [O] had not received one beverage nor hooka [S] bad [C] drinks quality', '[O] not received one beverage nor hooka [A] it [C] drinks quality [S] bad', '[A] beverage nor hooka [O] had not received one beverage nor hooka [C] drinks quality [S] bad', '[O] not received one beverage nor hooka [A] it [S] bad [C] drinks quality', '[O] not received one beverage nor hooka [S] bad [C] drinks quality [A] it']

task, data: asqp rest15
target: [('restaurant general', 'null', 'great', 'sold on')]
output: ['[A] null [O] sold [S] great [C] restaurant general']
sent: ['My', 'husband', 'and', 'I', 'have', 'been', 'sold', 'on', 'this', 'from', 'the', 'first', 'visit', '.']
counter: {('restaurant general', 'null', 'great', 'sold'): 5}
output quads: ['[A] null [O] sold [S] great [C] restaurant general']
multi_path: ['[A] it [O] sold [S] great [C] restaurant general', '[O] sold [A] it [C] restaurant general [S] great', '[A] it [O] sold [C] restaurant general [S] great', '[O] sold [A] it [S] great [C] restaurant general', '[O] sold [S] great [C] restaurant general [A] it']

task, data: asqp rest15
target: [('restaurant general', 'null', 'bad', 'do not recommend')]
output: ['[A] null [O] not recommend [S] bad [C] restaurant general']
sent: ['I', 'do', 'not', 'recommend', '.']
counter: {('restaurant general', 'null', 'bad', 'not recommend'): 5}
output quads: ['[A] null [O] not recommend [S] bad [C] restaurant general']
multi_path: ['[A] it [O] not recommend [S] bad [C] restaurant general', '[O] not recommend [A] it [C] restaurant general [S] bad', '[A] it [O] not recommend [C] restaurant general [S] bad', '[O] not recommend [A] it [S] bad [C] restaurant general', '[O] not recommend [S] bad [C] restaurant general [A] it']

task, data: asqp rest15
target: [('food quality', 'vanison', 'ok', 'good')]
output: ['[A] vanison [O] good [S] great [C] restaurant general', '[A] vanison [O] not amazing [S] ok [C] restaurant general']
sent: ['Vanison', 'was', 'good', 'but', 'not', 'amazing', '.']
counter: {('restaurant general', 'vanison', 'great', 'good'): 3, ('restaurant general', 'vanison', 'great', 'not amazing'): 1, ('restaurant general', 'vanison', 'ok', 'good'): 2, ('restaurant general', 'vanison', 'ok', 'not amazing'): 4}
output quads: ['[A] vanison [O] good [S] great [C] restaurant general', '[A] vanison [O] not amazing [S] ok [C] restaurant general']
multi_path: ['[A] vanison [O] good [S] great [C] restaurant general [SSEP] [A] vanison [O] not amazing [S] great [C] restaurant general', '[O] good [A] vanison [C] restaurant general [S] ok [SSEP] [O] not amazing [A] vanison [C] restaurant general [S] ok', '[A] vanison [O] good [C] restaurant general [S] ok [SSEP] [A] vanison [O] not amazing [C] restaurant general [S] ok', '[O] good [A] vanison [S] great [C] restaurant general [SSEP] [O] not amazing [A] vanison [S] ok [C] restaurant general', '[O] good [S] great [C] restaurant general [A] vanison [SSEP] [O] not amazing [S] ok [C] restaurant general [A] vanison']

task, data: asqp rest15
target: [('ambience general', 'bathroom', 'bad', 'filthy'), ('service general', 'service', 'bad', 'unfriendly')]
output: ['[A] bathroom [O] filthy [S] bad [C] ambience general', '[A] service [O] ok [S] ok [C] service general', '[A] service [O] unfriendly [S] bad [C] service general']
sent: ['Service', 'ok', 'but', 'unfriendly', ',', 'filthy', 'bathroom', '.']
counter: {('service general', 'service', 'ok', 'ok'): 5, ('service general', 'service', 'bad', 'unfriendly'): 5, ('ambience general', 'bathroom', 'bad', 'filthy'): 5}
output quads: ['[A] service [O] ok [S] ok [C] service general', '[A] service [O] unfriendly [S] bad [C] service general', '[A] bathroom [O] filthy [S] bad [C] ambience general']
multi_path: ['[A] service [O] ok [S] ok [C] service general [SSEP] [A] service [O] unfriendly [S] bad [C] service general [SSEP] [A] bathroom [O] filthy [S] bad [C] ambience general', '[O] ok [A] service [C] service general [S] ok [SSEP] [O] unfriendly [A] service [C] service general [S] bad [SSEP] [O] filthy [A] bathroom [C] ambience general [S] bad', '[A] service [O] ok [C] service general [S] ok [SSEP] [A] service [O] unfriendly [C] service general [S] bad [SSEP] [A] bathroom [O] filthy [C] ambience general [S] bad', '[O] ok [A] service [S] ok [C] service general [SSEP] [O] unfriendly [A] service [S] bad [C] service general [SSEP] [O] filthy [A] bathroom [S] bad [C] ambience general', '[O] ok [S] ok [C] service general [A] service [SSEP] [O] unfriendly [S] bad [C] service general [A] service [SSEP] [O] filthy [S] bad [C] ambience general [A] bathroom']

task, data: asqp rest15
target: [('restaurant general', 'null', 'bad', 'refunded')]
output: ['[A] null [O] refunded [S] bad [C] restaurant prices']
sent: ['I', 'wish', 'I', 'COULD', 'be', 'refunded', '!']
counter: {('restaurant prices', 'null', 'bad', 'refunded'): 5}
output quads: ['[A] null [O] refunded [S] bad [C] restaurant prices']
multi_path: ['[A] it [O] refunded [S] bad [C] restaurant prices', '[O] refunded [A] it [C] restaurant prices [S] bad', '[A] it [O] refunded [C] restaurant prices [S] bad', '[O] refunded [A] it [S] bad [C] restaurant prices', '[O] refunded [S] bad [C] restaurant prices [A] it']

task, data: asqp rest15
target: [('food style_options', 'vegetarian dish', 'bad', 'minus sauce, seasoning, or any form or aesthetic presentation')]
output: ['[A] chef [O] presented me with a plate of steamed vegetables [S] bad [C] food style_options']
sent: ['Rather', 'than', 'preparing', 'vegetarian', 'dish', ',', 'the', 'chef', 'presented', 'me', 'with', 'a', 'plate', 'of', 'steamed', 'vegetables', '(', 'minus', 'sauce', ',', 'seasoning', ',', 'or', 'any', 'form', 'or', 'aesthetic', 'presentation', ')', '.']
counter: {('food style_options', 'chef', 'bad', 'presented me with a plate of steamed vegetables'): 4, ('food style_options', 'chef', 'bad', 'presented me with a plate of steamed vegetables ( minus sauce'): 1}
output quads: ['[A] chef [O] presented me with a plate of steamed vegetables [S] bad [C] food style_options']
multi_path: ['[A] chef [O] presented me with a plate of steamed vegetables [S] bad [C] food style_options', '[O] presented me with a plate of steamed vegetables [A] chef [C] food style_options [S] bad', '[A] chef [O] presented me with a plate of steamed vegetables [C] food style_options [S] bad', '[O] presented me with a plate of steamed vegetables [A] chef [S] bad [C] food style_options', '[O] presented me with a plate of steamed vegetables ( minus sauce [S] bad [C] food style_options [A] chef']

task, data: asqp rest15
target: [('restaurant prices', 'null', 'bad', 'too much money'), ('service general', 'null', 'bad', 'treated terribly')]
output: ['[A] null [O] not as it was intended [S] bad [C] restaurant miscellaneous', '[A] null [O] treated terribly [S] bad [C] restaurant miscellaneous']
sent: ['MY', 'husbands', 'birthday', 'and', 'my', 'sons', 'was', 'not', 'as', 'it', 'was', 'intended', '...', 'and', 'we', 'drove', 'two', 'hours', 'to', 'spend', 'too', 'much', 'money', 'to', 'be', 'treated', 'terribly', '!']
counter: {('restaurant miscellaneous', 'null', 'bad', 'not as it was intended'): 5, ('restaurant miscellaneous', 'null', 'bad', 'treated terribly'): 3, ('restaurant miscellaneous', 'null', 'bad', 'too much'): 1, ('service general', 'null', 'bad', 'treated terribly'): 1}
output quads: ['[A] null [O] not as it was intended [S] bad [C] restaurant miscellaneous', '[A] null [O] treated terribly [S] bad [C] restaurant miscellaneous']
multi_path: ['[A] it [O] not as it was intended [S] bad [C] restaurant miscellaneous [SSEP] [A] it [O] treated terribly [S] bad [C] restaurant miscellaneous', '[O] not as it was intended [A] it [C] restaurant miscellaneous [S] bad [SSEP] [O] treated terribly [A] it [C] restaurant miscellaneous [S] bad', '[A] it [O] not as it was intended [C] restaurant miscellaneous [S] bad [SSEP] [A] it [O] treated terribly [C] restaurant miscellaneous [S] bad', '[O] not as it was intended [A] it [S] bad [C] restaurant miscellaneous [SSEP] [O] too much [A] it [S] bad [C] restaurant miscellaneous', '[O] not as it was intended [S] bad [C] restaurant miscellaneous [A] it [SSEP] [O] treated terribly [S] bad [C] service general [A] it']

task, data: asqp rest15
target: [('service general', 'null', 'bad', 'never received')]
output: ['[A] null [O] waste [S] bad [C] service general']
sent: ['What', 'we', 'did', 'do', 'was', 'waste', '3', 'hours', 'being', 'trapped', 'in', 'a', 'table', 'waiting', 'and', 'waiting', 'for', 'food', 'and', 'drinks', 'and', 'hooka', '.', '.', 'some', 'of', 'which', 'we', 'never', 'received', '!']
counter: {('service general', 'null', 'bad', 'waste'): 5}
output quads: ['[A] null [O] waste [S] bad [C] service general']
multi_path: ['[A] it [O] waste [S] bad [C] service general', '[O] waste [A] it [C] service general [S] bad', '[A] it [O] waste [C] service general [S] bad', '[O] waste [A] it [S] bad [C] service general', '[O] waste [S] bad [C] service general [A] it']

task, data: asqp rest15
target: [('ambience general', 'atmosphere', 'great', 'relaxed')]
output: ['[A] atmosphere [O] casual [S] great [C] ambience general', '[A] atmosphere [O] relaxed [S] great [C] ambience general']
sent: ['The', 'atmosphere', 'is', 'relaxed', 'and', 'casual', '.']
counter: {('ambience general', 'atmosphere', 'great', 'relaxed'): 5, ('ambience general', 'atmosphere', 'great', 'casual'): 5}
output quads: ['[A] atmosphere [O] relaxed [S] great [C] ambience general', '[A] atmosphere [O] casual [S] great [C] ambience general']
multi_path: ['[A] atmosphere [O] relaxed [S] great [C] ambience general [SSEP] [A] atmosphere [O] casual [S] great [C] ambience general', '[O] relaxed [A] atmosphere [C] ambience general [S] great [SSEP] [O] casual [A] atmosphere [C] ambience general [S] great', '[A] atmosphere [O] relaxed [C] ambience general [S] great [SSEP] [A] atmosphere [O] casual [C] ambience general [S] great', '[O] relaxed [A] atmosphere [S] great [C] ambience general [SSEP] [O] casual [A] atmosphere [S] great [C] ambience general', '[O] relaxed [S] great [C] ambience general [A] atmosphere [SSEP] [O] casual [S] great [C] ambience general [A] atmosphere']

task, data: asqp rest15
target: [('location general', 'view', 'ok', 'with a view')]
output: ['[A] restaurant [O] view [S] great [C] location general']
sent: ['Restaurant', 'with', 'a', 'view']
counter: {('location general', 'restaurant', 'great', 'view'): 4, ('location general', 'restaurant with a view', 'great', 'view'): 1}
output quads: ['[A] restaurant [O] view [S] great [C] location general']
multi_path: ['[A] restaurant [O] view [S] great [C] location general', '[O] view [A] restaurant [C] location general [S] great', '[A] restaurant with a view [O] view [C] location general [S] great', '[O] view [A] restaurant [S] great [C] location general', '[O] view [S] great [C] location general [A] restaurant']

task, data: asqp rest15
target: [('food prices', 'salmon', 'bad', '$ 24'), ('food quality', 'salmon', 'bad', 'bland'), ('food quality', 'salmon', 'bad', 'dry'), ('food quality', 'salmon', 'bad', 'fishy')]
output: ['[A] salmon [O] bland [S] bad [C] food quality', '[A] salmon [O] dry [S] bad [C] food quality', '[A] salmon [O] fishy [S] bad [C] food quality']
sent: ['I', 'took', 'one', 'bite', 'from', 'the', '$', '24', 'salmon', ',', 'and', 'I', 'have', 'never', ',', 'in', 'the', '17', 'years', 'I', 'have', 'been', 'going', 'to', 'restaurants', 'tasted', 'salmon', 'as', 'fishy', ',', 'as', 'dry', ',', 'and', 'as', 'bland', 'as', 'the', 'one', 'in', 'Flatbush', 'Farms', '.']
counter: {('food quality', 'salmon', 'bad', 'fishy'): 5, ('food quality', 'salmon', 'bad', 'dry'): 5, ('food quality', 'salmon', 'bad', 'bland'): 5}
output quads: ['[A] salmon [O] fishy [S] bad [C] food quality', '[A] salmon [O] dry [S] bad [C] food quality', '[A] salmon [O] bland [S] bad [C] food quality']
multi_path: ['[A] salmon [O] fishy [S] bad [C] food quality [SSEP] [A] salmon [O] dry [S] bad [C] food quality [SSEP] [A] salmon [O] bland [S] bad [C] food quality', '[O] fishy [A] salmon [C] food quality [S] bad [SSEP] [O] dry [A] salmon [C] food quality [S] bad [SSEP] [O] bland [A] salmon [C] food quality [S] bad', '[A] salmon [O] fishy [C] food quality [S] bad [SSEP] [A] salmon [O] dry [C] food quality [S] bad [SSEP] [A] salmon [O] bland [C] food quality [S] bad', '[O] fishy [A] salmon [S] bad [C] food quality [SSEP] [O] dry [A] salmon [S] bad [C] food quality [SSEP] [O] bland [A] salmon [S] bad [C] food quality', '[O] fishy [S] bad [C] food quality [A] salmon [SSEP] [O] dry [S] bad [C] food quality [A] salmon [SSEP] [O] bland [S] bad [C] food quality [A] salmon']

task, data: asqp rest15
target: [('service general', 'staff', 'bad', 'retrain')]
output: ['[A] place [O] like [S] great [C] restaurant general', '[A] staff [O] retrain [S] bad [C] service general']
sent: ['I', 'wish', 'I', 'could', 'like', 'this', 'place', 'more', ',', 'and', 'I', 'wish', 'someone', 'would', 'retrain', 'the', 'staff', '.']
counter: {('restaurant general', 'place', 'great', 'like'): 5, ('service general', 'staff', 'bad', 'retrain'): 5}
output quads: ['[A] place [O] like [S] great [C] restaurant general', '[A] staff [O] retrain [S] bad [C] service general']
multi_path: ['[A] place [O] like [S] great [C] restaurant general [SSEP] [A] staff [O] retrain [S] bad [C] service general', '[O] like [A] place [C] restaurant general [S] great [SSEP] [O] retrain [A] staff [C] service general [S] bad', '[A] place [O] like [C] restaurant general [S] great [SSEP] [A] staff [O] retrain [C] service general [S] bad', '[O] like [A] place [S] great [C] restaurant general [SSEP] [O] retrain [A] staff [S] bad [C] service general', '[O] like [S] great [C] restaurant general [A] place [SSEP] [O] retrain [S] bad [C] service general [A] staff']

task, data: asqp rest15
target: [('food quality', 'null', 'bad', 'doubled over the toilet')]
output: ['[A] null [O] doubled over the toilet [S] bad [C] service general']
sent: ['Less', 'than', 'three', 'minutes', 'passed', 'before', 'I', 'found', 'myself', 'doubled', 'over', 'the', 'toilet', '.']
counter: {('service general', 'null', 'bad', 'less than three minutes'): 1, ('service general', 'null', 'bad', 'doubled over the toilet'): 4}
output quads: ['[A] null [O] doubled over the toilet [S] bad [C] service general']
multi_path: ['[A] it [O] less than three minutes [S] bad [C] service general', '[O] doubled over the toilet [A] it [C] service general [S] bad', '[A] it [O] doubled over the toilet [C] service general [S] bad', '[O] doubled over the toilet [A] it [S] bad [C] service general', '[O] doubled over the toilet [S] bad [C] service general [A] it']

task, data: asqp rest15
target: [('restaurant general', 'null', 'bad', 'hassle')]
output: ['[A] null [O] hassle [S] bad [C] service general']
sent: ['What', 'a', 'hassle', '!']
counter: {('service general', 'null', 'bad', 'hassle'): 5}
output quads: ['[A] null [O] hassle [S] bad [C] service general']
multi_path: ['[A] it [O] hassle [S] bad [C] service general', '[O] hassle [A] it [C] service general [S] bad', '[A] it [O] hassle [C] service general [S] bad', '[O] hassle [A] it [S] bad [C] service general', '[O] hassle [S] bad [C] service general [A] it']

task, data: asqp rest15
target: [('drinks quality', 'drinks', 'great', 'enjoy'), ('food quality', 'appetizers', 'great', 'enjoy')]
output: ['[A] manager [O] enjoy [S] ok [C] service general']
sent: ['The', 'manager', 'came', 'to', 'the', 'table', 'and', 'said', 'we', 'can', 'do', 'what', 'we', 'want', ',', 'so', 'we', 'paid', 'for', 'what', 'we', 'did', 'enjoy', ',', 'the', 'drinks', 'and', 'appetizers', ',', 'and', 'walked', 'out', '.']
counter: {('service general', 'manager', 'ok', 'enjoy'): 5}
output quads: ['[A] manager [O] enjoy [S] ok [C] service general']
multi_path: ['[A] manager [O] enjoy [S] ok [C] service general', '[O] enjoy [A] manager [C] service general [S] ok', '[A] manager [O] enjoy [C] service general [S] ok', '[O] enjoy [A] manager [S] ok [C] service general', '[O] enjoy [S] ok [C] service general [A] manager']

task, data: asqp rest15
target: [('ambience general', 'place', 'ok', 'fancy'), ('food quality', 'chinese style indian food', 'great', 'good')]
output: ['[A] chinese style indian food [O] good [S] great [C] food quality', '[A] place [O] not a very fancy [S] bad [C] restaurant miscellaneous']
sent: ['Not', 'a', 'very', 'fancy', 'place', 'but', 'very', 'good', 'Chinese', 'style', 'Indian', 'food', '.']
counter: {('restaurant miscellaneous', 'place', 'bad', 'not a very fancy'): 5, ('food quality', 'indian food', 'great', 'good'): 2, ('food quality', 'chinese style indian food', 'great', 'good'): 3}
output quads: ['[A] place [O] not a very fancy [S] bad [C] restaurant miscellaneous', '[A] chinese style indian food [O] good [S] great [C] food quality']
multi_path: ['[A] place [O] not a very fancy [S] bad [C] restaurant miscellaneous [SSEP] [A] indian food [O] good [S] great [C] food quality', '[O] not a very fancy [A] place [C] restaurant miscellaneous [S] bad [SSEP] [O] good [A] chinese style indian food [C] food quality [S] great', '[A] place [O] not a very fancy [C] restaurant miscellaneous [S] bad [SSEP] [A] indian food [O] good [C] food quality [S] great', '[O] not a very fancy [A] place [S] bad [C] restaurant miscellaneous [SSEP] [O] good [A] chinese style indian food [S] great [C] food quality', '[O] not a very fancy [S] bad [C] restaurant miscellaneous [A] place [SSEP] [O] good [S] great [C] food quality [A] chinese style indian food']

task, data: asqp rest15
target: [('ambience general', 'place', 'great', 'gorgeous'), ('restaurant miscellaneous', 'place', 'great', 'ideal')]
output: ['[A] place [O] gorgeous [S] great [C] ambience general', '[A] place [O] romantic [S] great [C] ambience general']
sent: ['Gorgeous', 'place', 'ideal', 'for', 'a', 'romantic', 'dinner']
counter: {('ambience general', 'place', 'great', 'gorgeous'): 5, ('ambience general', 'place', 'great', 'romantic'): 5}
output quads: ['[A] place [O] gorgeous [S] great [C] ambience general', '[A] place [O] romantic [S] great [C] ambience general']
multi_path: ['[A] place [O] gorgeous [S] great [C] ambience general [SSEP] [A] place [O] romantic [S] great [C] ambience general', '[O] gorgeous [A] place [C] ambience general [S] great [SSEP] [O] romantic [A] place [C] ambience general [S] great', '[A] place [O] gorgeous [C] ambience general [S] great [SSEP] [A] place [O] romantic [C] ambience general [S] great', '[O] gorgeous [A] place [S] great [C] ambience general [SSEP] [O] romantic [A] place [S] great [C] ambience general', '[O] gorgeous [S] great [C] ambience general [A] place [SSEP] [O] romantic [S] great [C] ambience general [A] place']

task, data: asqp rest15
target: [('service general', 'wait staff', 'great', 'courteous')]
output: ['[A] wait staff [O] accomodating [S] great [C] service general', '[A] wait staff [O] courteous [S] great [C] service general']
sent: ['The', 'wait', 'staff', 'is', 'very', 'courteous', 'and', 'accomodating', '.']
counter: {('service general', 'wait staff', 'great', 'courteous'): 5, ('service general', 'wait staff', 'great', 'accomodating'): 5}
output quads: ['[A] wait staff [O] courteous [S] great [C] service general', '[A] wait staff [O] accomodating [S] great [C] service general']
multi_path: ['[A] wait staff [O] courteous [S] great [C] service general [SSEP] [A] wait staff [O] accomodating [S] great [C] service general', '[O] courteous [A] wait staff [C] service general [S] great [SSEP] [O] accomodating [A] wait staff [C] service general [S] great', '[A] wait staff [O] courteous [C] service general [S] great [SSEP] [A] wait staff [O] accomodating [C] service general [S] great', '[O] courteous [A] wait staff [S] great [C] service general [SSEP] [O] accomodating [A] wait staff [S] great [C] service general', '[O] courteous [S] great [C] service general [A] wait staff [SSEP] [O] accomodating [S] great [C] service general [A] wait staff']

task, data: asqp rest15
target: [('food prices', 'meal', 'great', 'good'), ('food quality', 'meal', 'great', 'good')]
output: ['[A] meal [O] good [S] great [C] food quality']
sent: ['I', 'paid', 'just', 'about', '$', '60', 'for', 'a', 'good', 'meal', ',', 'though', ':', ')']
counter: {('food quality', 'meal', 'great', 'good'): 5, ('food prices', 'meal', 'great', 'good'): 2}
output quads: ['[A] meal [O] good [S] great [C] food quality']
multi_path: ['[A] meal [O] good [S] great [C] food quality', '[O] good [A] meal [C] food quality [S] great [SSEP] [O] good [A] meal [C] food prices [S] great', '[A] meal [O] good [C] food quality [S] great [SSEP] [A] meal [O] good [C] food prices [S] great', '[O] good [A] meal [S] great [C] food quality', '[O] good [S] great [C] food quality [A] meal']

task, data: asqp rest15
target: [('food quality', 'sushi', 'great', 'ruined')]
output: ['[A] place [O] ruined [S] bad [C] restaurant miscellaneous']
sent: ['This', 'place', 'has', 'ruined', 'me', 'for', 'neighborhood', 'sushi', '.']
counter: {('restaurant miscellaneous', 'place', 'bad', 'ruined'): 5}
output quads: ['[A] place [O] ruined [S] bad [C] restaurant miscellaneous']
multi_path: ['[A] place [O] ruined [S] bad [C] restaurant miscellaneous', '[O] ruined [A] place [C] restaurant miscellaneous [S] bad', '[A] place [O] ruined [C] restaurant miscellaneous [S] bad', '[O] ruined [A] place [S] bad [C] restaurant miscellaneous', '[O] ruined [S] bad [C] restaurant miscellaneous [A] place']

task, data: asqp rest15
target: [('service general', 'null', 'bad', 'got nothing')]
output: ['[A] null [O] nothing [S] bad [C] food quality']
sent: ['We', 'paid', 'a', 'fixed', 'pricce', 'but', 'got', 'nothing', '!', '!']
counter: {('food quality', 'null', 'bad', 'nothing'): 5}
output quads: ['[A] null [O] nothing [S] bad [C] food quality']
multi_path: ['[A] it [O] nothing [S] bad [C] food quality', '[O] nothing [A] it [C] food quality [S] bad', '[A] it [O] nothing [C] food quality [S] bad', '[O] nothing [A] it [S] bad [C] food quality', '[O] nothing [S] bad [C] food quality [A] it']

task, data: asqp rest15
target: [('ambience general', 'null', 'great', 'relaxing'), ('food quality', 'food', 'great', 'great'), ('restaurant general', 'null', 'great', 'favorite'), ('restaurant miscellaneous', 'null', 'great', 'well organized')]
output: ['[A] food [O] great [S] great [C] food quality', '[A] food [O] relaxing [S] great [C] food quality', '[A] spot [O] favorite [S] great [C] restaurant general']
sent: ['This', 'is', 'one', 'of', 'my', 'favorite', 'spot', ',', 'very', 'relaxing', 'the', 'food', 'is', 'great', 'all', 'the', 'times', ',', 'celebrated', 'my', 'engagement', 'and', 'my', 'wedding', 'here', ',', 'it', 'was', 'very', 'well', 'organized', '.']
counter: {('restaurant general', 'spot', 'great', 'favorite'): 5, ('food quality', 'food', 'great', 'relaxing'): 4, ('food quality', 'food', 'great', 'great'): 3, ('food style_options', 'food', 'great', 'great'): 2, ('ambience general', 'food', 'great', 'relaxing'): 1}
output quads: ['[A] spot [O] favorite [S] great [C] restaurant general', '[A] food [O] relaxing [S] great [C] food quality', '[A] food [O] great [S] great [C] food quality']
multi_path: ['[A] spot [O] favorite [S] great [C] restaurant general [SSEP] [A] food [O] relaxing [S] great [C] food quality [SSEP] [A] food [O] great [S] great [C] food quality', '[O] favorite [A] spot [C] restaurant general [S] great [SSEP] [O] relaxing [A] food [C] food quality [S] great [SSEP] [O] great [A] food [C] food style_options [S] great', '[A] spot [O] favorite [C] restaurant general [S] great [SSEP] [A] food [O] relaxing [C] food quality [S] great [SSEP] [A] food [O] great [C] food quality [S] great', '[O] favorite [A] spot [S] great [C] restaurant general [SSEP] [O] relaxing [A] food [S] great [C] food quality [SSEP] [O] great [A] food [S] great [C] food style_options', '[O] favorite [S] great [C] restaurant general [A] spot [SSEP] [O] relaxing [S] great [C] ambience general [A] food [SSEP] [O] great [S] great [C] food quality [A] food']

task, data: asqp rest15
target: [('restaurant general', 'restaurant', 'great', 'worth')]
output: ['[A] restaurant [O] worth commending [S] great [C] restaurant general']
sent: ['I', 'never', 'write', 'on', 'these', 'sites', 'but', 'this', 'restaurant', 'is', 'def', 'worth', 'commending', '!']
counter: {('restaurant general', 'restaurant', 'great', 'worth commending'): 5}
output quads: ['[A] restaurant [O] worth commending [S] great [C] restaurant general']
multi_path: ['[A] restaurant [O] worth commending [S] great [C] restaurant general', '[O] worth commending [A] restaurant [C] restaurant general [S] great', '[A] restaurant [O] worth commending [C] restaurant general [S] great', '[O] worth commending [A] restaurant [S] great [C] restaurant general', '[O] worth commending [S] great [C] restaurant general [A] restaurant']

task, data: asqp rest15
target: [('ambience general', 'egyptian restaurant', 'great', 'dreamy')]
output: ['[A] egyptian restaurant [O] beautifully designed dreamy [S] great [C] ambience general']
sent: ['A', 'beautifully', 'designed', 'dreamy', 'Egyptian', 'restaurant', 'that', 'gets', 'sceney', 'at', 'night', '.']
counter: {('ambience general', 'egyptian restaurant', 'great', 'beautifully designed dreamy'): 5}
output quads: ['[A] egyptian restaurant [O] beautifully designed dreamy [S] great [C] ambience general']
multi_path: ['[A] egyptian restaurant [O] beautifully designed dreamy [S] great [C] ambience general', '[O] beautifully designed dreamy [A] egyptian restaurant [C] ambience general [S] great', '[A] egyptian restaurant [O] beautifully designed dreamy [C] ambience general [S] great', '[O] beautifully designed dreamy [A] egyptian restaurant [S] great [C] ambience general', '[O] beautifully designed dreamy [S] great [C] ambience general [A] egyptian restaurant']

task, data: asqp rest15
target: [('service general', 'waiter', 'bad', 'asked again')]
output: ['[A] waiter [O] than said [S] bad [C] service general']
sent: ['After', 'the', '4th', 'time', 'i', 'asked', 'again', 'and', 'the', 'waiter', 'than', 'said', 'after', 'our', 'dinner', '.']
counter: {('service general', 'waiter', 'bad', 'than said'): 5}
output quads: ['[A] waiter [O] than said [S] bad [C] service general']
multi_path: ['[A] waiter [O] than said [S] bad [C] service general', '[O] than said [A] waiter [C] service general [S] bad', '[A] waiter [O] than said [C] service general [S] bad', '[O] than said [A] waiter [S] bad [C] service general', '[O] than said [S] bad [C] service general [A] waiter']

task, data: asqp rest15
target: [('food quality', 'food', 'ok', 'ok')]
output: ['[A] food [O] fair [S] ok [C] food quality', '[A] food [O] ok [S] ok [C] food quality']
sent: ['The', 'food', 'was', 'ok', 'and', 'fair', 'nothing', 'to', 'go', 'crazy', '.']
counter: {('food quality', 'food', 'ok', 'ok'): 5, ('food quality', 'food', 'great', 'fair'): 2, ('food quality', 'food', 'ok', 'fair'): 3}
output quads: ['[A] food [O] ok [S] ok [C] food quality', '[A] food [O] fair [S] ok [C] food quality']
multi_path: ['[A] food [O] ok [S] ok [C] food quality [SSEP] [A] food [O] fair [S] great [C] food quality', '[O] ok [A] food [C] food quality [S] ok [SSEP] [O] fair [A] food [C] food quality [S] ok', '[A] food [O] ok [C] food quality [S] ok [SSEP] [A] food [O] fair [C] food quality [S] great', '[O] ok [A] food [S] ok [C] food quality [SSEP] [O] fair [A] food [S] ok [C] food quality', '[O] ok [S] ok [C] food quality [A] food [SSEP] [O] fair [S] ok [C] food quality [A] food']

task, data: asqp rest15
target: [('food quality', 'pear torte', 'great', 'good'), ('service general', 'staff', 'bad', 'unable to provide')]
output: ['[A] dessert [O] good [S] great [C] food quality', '[A] staff [O] unable to provide appropriate drink suggestions [S] bad [C] service general']
sent: ['The', 'dessert', '(', 'we', 'had', 'a', 'pear', 'torte', ')', 'was', 'good', '-', 'but', ',', 'once', 'again', ',', 'the', 'staff', 'was', 'unable', 'to', 'provide', 'appropriate', 'drink', 'suggestions', '.']
counter: {('food quality', 'dessert', 'great', 'good'): 5, ('service general', 'staff', 'bad', 'unable to provide appropriate drink suggestions'): 5}
output quads: ['[A] dessert [O] good [S] great [C] food quality', '[A] staff [O] unable to provide appropriate drink suggestions [S] bad [C] service general']
multi_path: ['[A] dessert [O] good [S] great [C] food quality [SSEP] [A] staff [O] unable to provide appropriate drink suggestions [S] bad [C] service general', '[O] good [A] dessert [C] food quality [S] great [SSEP] [O] unable to provide appropriate drink suggestions [A] staff [C] service general [S] bad', '[A] dessert [O] good [C] food quality [S] great [SSEP] [A] staff [O] unable to provide appropriate drink suggestions [C] service general [S] bad', '[O] good [A] dessert [S] great [C] food quality [SSEP] [O] unable to provide appropriate drink suggestions [A] staff [S] bad [C] service general', '[O] good [S] great [C] food quality [A] dessert [SSEP] [O] unable to provide appropriate drink suggestions [S] bad [C] service general [A] staff']

task, data: asqp rest15
target: [('food quality', 'dishes', 'bad', 'oily'), ('restaurant general', 'null', 'great', 'good')]
output: ['[A] dining experience [O] good [S] great [C] food quality', '[A] dishes [O] oily [S] bad [C] food quality']
sent: ['For', 'me', 'dishes', 'a', 'little', 'oily', ',', 'but', 'overall', 'dining', 'experience', 'good', '.']
counter: {('food quality', 'dishes', 'bad', 'oily'): 5, ('food quality', 'dining experience', 'great', 'good'): 5}
output quads: ['[A] dishes [O] oily [S] bad [C] food quality', '[A] dining experience [O] good [S] great [C] food quality']
multi_path: ['[A] dishes [O] oily [S] bad [C] food quality [SSEP] [A] dining experience [O] good [S] great [C] food quality', '[O] oily [A] dishes [C] food quality [S] bad [SSEP] [O] good [A] dining experience [C] food quality [S] great', '[A] dishes [O] oily [C] food quality [S] bad [SSEP] [A] dining experience [O] good [C] food quality [S] great', '[O] oily [A] dishes [S] bad [C] food quality [SSEP] [O] good [A] dining experience [S] great [C] food quality', '[O] oily [S] bad [C] food quality [A] dishes [SSEP] [O] good [S] great [C] food quality [A] dining experience']

task, data: asqp rest15
target: [('service general', 'servers', 'great', 'patient')]
output: ['[A] courses [O] like [S] great [C] food quality', '[A] servers [O] patient [S] great [C] service general']
sent: ['I', 'go', 'out', 'to', 'eat', 'and', 'like', 'my', 'courses', ',', 'servers', 'are', 'patient', 'and', 'never', 'rush', 'courses', 'or', 'force', 'another', 'drink', '.']
counter: {('food quality', 'courses', 'great', 'like'): 5, ('service general', 'servers', 'great', 'patient'): 5}
output quads: ['[A] courses [O] like [S] great [C] food quality', '[A] servers [O] patient [S] great [C] service general']
multi_path: ['[A] courses [O] like [S] great [C] food quality [SSEP] [A] servers [O] patient [S] great [C] service general', '[O] like [A] courses [C] food quality [S] great [SSEP] [O] patient [A] servers [C] service general [S] great', '[A] courses [O] like [C] food quality [S] great [SSEP] [A] servers [O] patient [C] service general [S] great', '[O] like [A] courses [S] great [C] food quality [SSEP] [O] patient [A] servers [S] great [C] service general', '[O] like [S] great [C] food quality [A] courses [SSEP] [O] patient [S] great [C] service general [A] servers']

task, data: asqp rest15
target: [('restaurant miscellaneous', 'null', 'ok', 'come with cash')]
output: ['[A] null [O] do not take credit card [S] bad [C] restaurant miscellaneous']
sent: ['Also', ',', 'they', 'do', 'not', 'take', 'credit', 'card', 'so', 'come', 'with', 'cash', '!']
counter: {('restaurant miscellaneous', 'null', 'bad', 'do not take credit card'): 5}
output quads: ['[A] null [O] do not take credit card [S] bad [C] restaurant miscellaneous']
multi_path: ['[A] it [O] do not take credit card [S] bad [C] restaurant miscellaneous', '[O] do not take credit card [A] it [C] restaurant miscellaneous [S] bad', '[A] it [O] do not take credit card [C] restaurant miscellaneous [S] bad', '[O] do not take credit card [A] it [S] bad [C] restaurant miscellaneous', '[O] do not take credit card [S] bad [C] restaurant miscellaneous [A] it']

task, data: asqp rest15
target: [('food quality', 'food', 'bad', 'not fresh or warm'), ('service general', 'bartender', 'bad', 'immature'), ('service general', 'service', 'bad', 'slowwwww'), ('service general', 'waitresses', 'bad', 'werent very attentive')]
output: ['[A] bartender [O] immature [S] bad [C] service general', '[A] food [O] not fresh or warm [S] bad [C] food quality', '[A] service [O] slowwwww [S] bad [C] service general', '[A] waitresses [O] busy [S] bad [C] service general']
sent: ['Very', 'immature', 'bartender', ',', 'didnt', 'know', 'how', 'to', 'make', 'specific', 'drinks', ',', 'service', 'was', 'so', 'slowwwww', ',', 'the', 'food', 'was', 'not', 'fresh', 'or', 'warm', ',', 'waitresses', 'were', 'busy', 'flirting', 'with', 'men', 'at', 'the', 'bar', 'and', 'werent', 'very', 'attentive', 'to', 'all', 'the', 'customers', '.']
counter: {('service general', 'bartender', 'bad', 'immature'): 5, ('service general', 'service', 'bad', 'slowwwww'): 5, ('food quality', 'food', 'bad', 'not fresh or warm'): 5, ('service general', 'waitresses', 'bad', 'busy flirting with men'): 2, ('service general', 'waitresses', 'bad', 'busy'): 3}
output quads: ['[A] bartender [O] immature [S] bad [C] service general', '[A] service [O] slowwwww [S] bad [C] service general', '[A] food [O] not fresh or warm [S] bad [C] food quality', '[A] waitresses [O] busy [S] bad [C] service general']
multi_path: ['[A] bartender [O] immature [S] bad [C] service general [SSEP] [A] service [O] slowwwww [S] bad [C] service general [SSEP] [A] food [O] not fresh or warm [S] bad [C] food quality [SSEP] [A] waitresses [O] busy flirting with men [S] bad [C] service general', '[O] immature [A] bartender [C] service general [S] bad [SSEP] [O] slowwwww [A] service [C] service general [S] bad [SSEP] [O] not fresh or warm [A] food [C] food quality [S] bad [SSEP] [O] busy [A] waitresses [C] service general [S] bad', '[A] bartender [O] immature [C] service general [S] bad [SSEP] [A] service [O] slowwwww [C] service general [S] bad [SSEP] [A] food [O] not fresh or warm [C] food quality [S] bad [SSEP] [A] waitresses [O] busy flirting with men [C] service general [S] bad', '[O] immature [A] bartender [S] bad [C] service general [SSEP] [O] slowwwww [A] service [S] bad [C] service general [SSEP] [O] not fresh or warm [A] food [S] bad [C] food quality [SSEP] [O] busy [A] waitresses [S] bad [C] service general', '[O] immature [S] bad [C] service general [A] bartender [SSEP] [O] slowwwww [S] bad [C] service general [A] service [SSEP] [O] not fresh or warm [S] bad [C] food quality [A] food [SSEP] [O] busy [S] bad [C] service general [A] waitresses']

task, data: asqp rest15
target: [('food quality', 'margherita pizza', 'great', 'cirspy crust')]
output: ['[A] cirspy crust margherita pizza [O] cirspy [S] great [C] food quality']
sent: ['cirspy', 'crust', 'margherita', 'pizza']
counter: {('food quality', 'cirspy crust margherita pizza', 'great', 'cirspy'): 3, ('food quality', 'cirspy crust margherita pizza', 'great', 'cirspy crust margherita pizza'): 2}
output quads: ['[A] cirspy crust margherita pizza [O] cirspy [S] great [C] food quality']
multi_path: ['[A] cirspy crust margherita pizza [O] cirspy [S] great [C] food quality', '[O] cirspy crust margherita pizza [A] cirspy crust margherita pizza [C] food quality [S] great', '[A] cirspy crust margherita pizza [O] cirspy [C] food quality [S] great', '[O] cirspy crust margherita pizza [A] cirspy crust margherita pizza [S] great [C] food quality', '[O] cirspy [S] great [C] food quality [A] cirspy crust margherita pizza']

task, data: asqp rest15
target: [('food quality', 'null', 'bad', 'not good')]
output: ['[A] null [O] not good [S] bad [C] restaurant general']
sent: ['Just', 'not', 'good', 'at', 'all', '.']
counter: {('restaurant general', 'null', 'bad', 'not good'): 5}
output quads: ['[A] null [O] not good [S] bad [C] restaurant general']
multi_path: ['[A] it [O] not good [S] bad [C] restaurant general', '[O] not good [A] it [C] restaurant general [S] bad', '[A] it [O] not good [C] restaurant general [S] bad', '[O] not good [A] it [S] bad [C] restaurant general', '[O] not good [S] bad [C] restaurant general [A] it']

task, data: asqp rest15
target: [('ambience general', 'place', 'bad', 'tiny'), ('restaurant miscellaneous', 'place', 'bad', 'tiny')]
output: ['[A] place [O] tiny [S] bad [C] ambience general']
sent: ['Be', 'prepared', 'to', 'wait', ',', 'because', 'the', 'place', 'is', 'pretty', 'tiny', '.']
counter: {('ambience general', 'place', 'bad', 'tiny'): 5}
output quads: ['[A] place [O] tiny [S] bad [C] ambience general']
multi_path: ['[A] place [O] tiny [S] bad [C] ambience general', '[O] tiny [A] place [C] ambience general [S] bad', '[A] place [O] tiny [C] ambience general [S] bad', '[O] tiny [A] place [S] bad [C] ambience general', '[O] tiny [S] bad [C] ambience general [A] place']

task, data: asqp rest15
target: [('food style_options', 'half/half pizza', 'great', 'huge')]
output: ['[A] buffalo [O] huge [S] bad [C] food style_options', '[A] half/half pizza [O] huge [S] great [C] food style_options']
sent: ['We', 'had', 'half/half', 'pizza', ',', 'mine', 'was', 'eggplant', 'and', 'my', 'friend', 'had', 'the', 'buffalo', 'and', 'it', 'was', 'sooo', 'huge', 'for', 'a', 'small', 'size', 'pizza', '!']
counter: {('food style_options', 'half/half pizza', 'great', 'huge'): 4, ('food quality', 'eggplant', 'great', 'huge'): 2, ('food style_options', 'buffalo', 'bad', 'huge'): 5, ('food style_options', 'half/half pizza', 'bad', 'huge'): 1}
output quads: ['[A] half/half pizza [O] huge [S] great [C] food style_options', '[A] buffalo [O] huge [S] bad [C] food style_options']
multi_path: ['[A] half/half pizza [O] huge [S] great [C] food style_options [SSEP] [A] eggplant [O] huge [S] great [C] food quality [SSEP] [A] buffalo [O] huge [S] bad [C] food style_options', '[O] huge [A] half/half pizza [C] food style_options [S] great [SSEP] [O] huge [A] buffalo [C] food style_options [S] bad', '[A] half/half pizza [O] huge [C] food style_options [S] great [SSEP] [A] eggplant [O] huge [C] food quality [S] great [SSEP] [A] buffalo [O] huge [C] food style_options [S] bad', '[O] huge [A] half/half pizza [S] great [C] food style_options [SSEP] [O] huge [A] buffalo [S] bad [C] food style_options', '[O] huge [S] bad [C] food style_options [A] half/half pizza [SSEP] [O] huge [S] bad [C] food style_options [A] buffalo']

task, data: asqp rest15
target: [('service general', 'null', 'bad', 'never received')]
output: ['[A] null [O] never received them [S] bad [C] service general']
sent: ['We', 'asked', 'for', 'beverages', 'and', 'never', 'received', 'them', '.']
counter: {('service general', 'null', 'bad', 'never received them'): 3, ('drinks quality', 'beverages', 'bad', 'never received them'): 2}
output quads: ['[A] null [O] never received them [S] bad [C] service general']
multi_path: ['[A] it [O] never received them [S] bad [C] service general', '[O] never received them [A] beverages [C] drinks quality [S] bad', '[A] it [O] never received them [C] service general [S] bad', '[O] never received them [A] beverages [S] bad [C] drinks quality', '[O] never received them [S] bad [C] service general [A] it']

task, data: asqp rest15
target: [('service general', 'waiter', 'bad', 'asked for hooka six times')]
output: ['[A] waiter [O] never returning with the hooka [S] bad [C] service general']
sent: ['We', 'also', 'asked', 'for', 'Hooka', 'six', 'times', 'and', 'the', 'waiter', 'kept', 'telling', 'us', 'one', 'minute', 'and', 'never', 'returning', 'with', 'the', 'Hooka', '.']
counter: {('service general', 'waiter', 'bad', 'never returning with the hooka'): 4, ('service general', 'waiter', 'bad', 'never returning'): 1}
output quads: ['[A] waiter [O] never returning with the hooka [S] bad [C] service general']
multi_path: ['[A] waiter [O] never returning with the hooka [S] bad [C] service general', '[O] never returning with the hooka [A] waiter [C] service general [S] bad', '[A] waiter [O] never returning with the hooka [C] service general [S] bad', '[O] never returning with the hooka [A] waiter [S] bad [C] service general', '[O] never returning [S] bad [C] service general [A] waiter']

task, data: asqp rest15
target: [('service general', 'null', 'bad', 'arguing')]
output: ['[A] null [O] paid and left [S] ok [C] restaurant prices']
sent: ['We', 'paid', 'and', 'left', 'because', 'we', 'didn', "'t", 'feel', 'like', 'arguing', 'any', 'more', '.']
counter: {('restaurant prices', 'null', 'ok', 'paid and left'): 5}
output quads: ['[A] null [O] paid and left [S] ok [C] restaurant prices']
multi_path: ['[A] it [O] paid and left [S] ok [C] restaurant prices', '[O] paid and left [A] it [C] restaurant prices [S] ok', '[A] it [O] paid and left [C] restaurant prices [S] ok', '[O] paid and left [A] it [S] ok [C] restaurant prices', '[O] paid and left [S] ok [C] restaurant prices [A] it']

task, data: asqp rest15
target: [('food quality', 'indian food', 'great', 'the place to go'), ('restaurant prices', 'place', 'great', 'complimentary')]
output: ['[A] indian food [O] complimentary [S] ok [C] food quality']
sent: ['But', 'if', 'you', "'re", 'prepared', 'to', 'spend', 'some', '$', 'and', 'remember', 'to', 'ask', 'if', 'something', 'they', 'offer', 'is', 'complimentary', ',', 'then', 'this', 'is', 'the', 'place', 'to', 'go', 'for', 'Indian', 'food']
counter: {('food quality', 'indian food', 'ok', 'complimentary'): 4, ('food quality', 'indian food', 'great', 'complimentary'): 1}
output quads: ['[A] indian food [O] complimentary [S] ok [C] food quality']
multi_path: ['[A] indian food [O] complimentary [S] ok [C] food quality', '[O] complimentary [A] indian food [C] food quality [S] ok', '[A] indian food [O] complimentary [C] food quality [S] great', '[O] complimentary [A] indian food [S] ok [C] food quality', '[O] complimentary [S] ok [C] food quality [A] indian food']

task, data: asqp rest15
target: [('food quality', 'side dishes', 'ok', 'passable'), ('food style_options', 'side dishes', 'great', 'refill')]
output: ['[A] side dishes [O] passable [S] ok [C] food quality']
sent: ['The', 'side', 'dishes', 'were', 'passable', ',', 'and', 'I', 'did', 'get', 'a', 'refill', 'upon', 'request', '.']
counter: {('food quality', 'side dishes', 'ok', 'passable'): 5}
output quads: ['[A] side dishes [O] passable [S] ok [C] food quality']
multi_path: ['[A] side dishes [O] passable [S] ok [C] food quality', '[O] passable [A] side dishes [C] food quality [S] ok', '[A] side dishes [O] passable [C] food quality [S] ok', '[O] passable [A] side dishes [S] ok [C] food quality', '[O] passable [S] ok [C] food quality [A] side dishes']

task, data: asqp rest15
target: [('food quality', 'rolls', 'great', 'great'), ('food quality', 'triple color and norwegetan rolls', 'great', 'awesome'), ('food style_options', 'triple color and norwegetan rolls', 'great', 'filling')]
output: ['[A] rolls [O] filling [S] great [C] food style_options', '[A] rolls [O] great [S] great [C] food quality', '[A] triple color and norwegetan rolls [O] awesome [S] great [C] food quality']
sent: ['They', 'have', 'great', 'rolls', ',', 'the', 'triple', 'color', 'and', 'norwegetan', 'rolls', ',', 'are', 'awesome', 'and', 'filling', '.']
counter: {('food quality', 'rolls', 'great', 'great'): 5, ('food quality', 'triple color and norwegetan rolls', 'great', 'awesome'): 5, ('food style_options', 'rolls', 'great', 'filling'): 5}
output quads: ['[A] rolls [O] great [S] great [C] food quality', '[A] triple color and norwegetan rolls [O] awesome [S] great [C] food quality', '[A] rolls [O] filling [S] great [C] food style_options']
multi_path: ['[A] rolls [O] great [S] great [C] food quality [SSEP] [A] triple color and norwegetan rolls [O] awesome [S] great [C] food quality [SSEP] [A] rolls [O] filling [S] great [C] food style_options', '[O] great [A] rolls [C] food quality [S] great [SSEP] [O] awesome [A] triple color and norwegetan rolls [C] food quality [S] great [SSEP] [O] filling [A] rolls [C] food style_options [S] great', '[A] rolls [O] great [C] food quality [S] great [SSEP] [A] triple color and norwegetan rolls [O] awesome [C] food quality [S] great [SSEP] [A] rolls [O] filling [C] food style_options [S] great', '[O] great [A] rolls [S] great [C] food quality [SSEP] [O] awesome [A] triple color and norwegetan rolls [S] great [C] food quality [SSEP] [O] filling [A] rolls [S] great [C] food style_options', '[O] great [S] great [C] food quality [A] rolls [SSEP] [O] awesome [S] great [C] food quality [A] triple color and norwegetan rolls [SSEP] [O] filling [S] great [C] food style_options [A] rolls']

task, data: asqp rest15
target: [('ambience general', 'restaurant', 'great', 'clean'), ('restaurant general', 'restaurant', 'great', 'nice')]
output: ['[A] restaurant [O] clean [S] great [C] ambience general', '[A] restaurant [O] nice [S] great [C] ambience general']
sent: ['I', 'thought', 'the', 'restaurant', 'was', 'nice', 'and', 'clean', '.']
counter: {('ambience general', 'restaurant', 'great', 'nice'): 5, ('ambience general', 'restaurant', 'great', 'clean'): 5}
output quads: ['[A] restaurant [O] nice [S] great [C] ambience general', '[A] restaurant [O] clean [S] great [C] ambience general']
multi_path: ['[A] restaurant [O] nice [S] great [C] ambience general [SSEP] [A] restaurant [O] clean [S] great [C] ambience general', '[O] nice [A] restaurant [C] ambience general [S] great [SSEP] [O] clean [A] restaurant [C] ambience general [S] great', '[A] restaurant [O] nice [C] ambience general [S] great [SSEP] [A] restaurant [O] clean [C] ambience general [S] great', '[O] nice [A] restaurant [S] great [C] ambience general [SSEP] [O] clean [A] restaurant [S] great [C] ambience general', '[O] nice [S] great [C] ambience general [A] restaurant [SSEP] [O] clean [S] great [C] ambience general [A] restaurant']

task, data: asqp rest15
target: [('restaurant general', 'null', 'great', 'excited')]
output: ['[A] bar [O] excited [S] great [C] service general']
sent: ['We', 'were', 'ushered', 'to', 'the', 'bar', 'to', 'wait', 'momentarily', 'and', 'upon', 'arrival', 'were', 'so', 'excited', '.']
counter: {('service general', 'bar', 'great', 'excited'): 5}
output quads: ['[A] bar [O] excited [S] great [C] service general']
multi_path: ['[A] bar [O] excited [S] great [C] service general', '[O] excited [A] bar [C] service general [S] great', '[A] bar [O] excited [C] service general [S] great', '[O] excited [A] bar [S] great [C] service general', '[O] excited [S] great [C] service general [A] bar']

task, data: asqp rest15
target: [('ambience general', 'atmosphere', 'bad', 'nice'), ('ambience general', 'scheme of mirrors', 'bad', 'crazy')]
output: ['[A] atmosphere [O] lacking [S] bad [C] ambience general', '[A] atmosphere [O] nice [S] great [C] ambience general']
sent: ['The', 'atmosphere', 'was', 'pretty', 'nice', 'but', 'had', 'a', 'bit', 'lacking', ',', 'which', 'it', 'tries', 'to', 'make', 'up', 'for', 'with', 'a', 'crazy', 'scheme', 'of', 'mirrors', '.']
counter: {('ambience general', 'atmosphere', 'great', 'nice'): 5, ('ambience general', 'atmosphere', 'bad', 'lacking'): 5}
output quads: ['[A] atmosphere [O] nice [S] great [C] ambience general', '[A] atmosphere [O] lacking [S] bad [C] ambience general']
multi_path: ['[A] atmosphere [O] nice [S] great [C] ambience general [SSEP] [A] atmosphere [O] lacking [S] bad [C] ambience general', '[O] nice [A] atmosphere [C] ambience general [S] great [SSEP] [O] lacking [A] atmosphere [C] ambience general [S] bad', '[A] atmosphere [O] nice [C] ambience general [S] great [SSEP] [A] atmosphere [O] lacking [C] ambience general [S] bad', '[O] nice [A] atmosphere [S] great [C] ambience general [SSEP] [O] lacking [A] atmosphere [S] bad [C] ambience general', '[O] nice [S] great [C] ambience general [A] atmosphere [SSEP] [O] lacking [S] bad [C] ambience general [A] atmosphere']

task, data: asqp rest15
target: [('food quality', 'null', 'bad', 'not real')]
output: ['[A] wagyu beef [O] not real kobe [S] ok [C] food quality']
sent: ['Which', 'of', 'course', 'is', 'not', 'real', 'Kobe', 'but', 'Wagyu', 'beef', '.']
counter: {('food quality', 'wagyu beef', 'ok', 'not real kobe'): 5}
output quads: ['[A] wagyu beef [O] not real kobe [S] ok [C] food quality']
multi_path: ['[A] wagyu beef [O] not real kobe [S] ok [C] food quality', '[O] not real kobe [A] wagyu beef [C] food quality [S] ok', '[A] wagyu beef [O] not real kobe [C] food quality [S] ok', '[O] not real kobe [A] wagyu beef [S] ok [C] food quality', '[O] not real kobe [S] ok [C] food quality [A] wagyu beef']

task, data: asqp rest15
target: [('ambience general', 'interior', 'bad', 'mazing')]
output: ['[A] interior [O] mazing [S] great [C] ambience general']
sent: ['Mazing', 'interior', '.']
counter: {('ambience general', 'interior', 'great', 'mazing'): 5}
output quads: ['[A] interior [O] mazing [S] great [C] ambience general']
multi_path: ['[A] interior [O] mazing [S] great [C] ambience general', '[O] mazing [A] interior [C] ambience general [S] great', '[A] interior [O] mazing [C] ambience general [S] great', '[O] mazing [A] interior [S] great [C] ambience general', '[O] mazing [S] great [C] ambience general [A] interior']

task, data: asqp rest15
target: [('food quality', 'dancing, white river and millenium rolls', 'great', 'musts')]
output: ['[A] dancing [O] musts [S] great [C] ambience general', '[A] millenium rolls [O] musts [S] great [C] food quality', '[A] white river [O] musts [S] great [C] food quality']
sent: ['The', 'Dancing', ',', 'White', 'River', 'and', 'Millenium', 'rolls', 'are', 'musts', '.']
counter: {('ambience general', 'dancing', 'great', 'musts'): 4, ('food quality', 'white river', 'great', 'musts'): 4, ('food quality', 'millenium rolls', 'great', 'musts'): 4, ('food quality', 'dancing', 'great', 'musts'): 1, ('food quality', 'white river and millenium rolls', 'great', 'musts'): 1}
output quads: ['[A] dancing [O] musts [S] great [C] ambience general', '[A] white river [O] musts [S] great [C] food quality', '[A] millenium rolls [O] musts [S] great [C] food quality']
multi_path: ['[A] dancing [O] musts [S] great [C] ambience general [SSEP] [A] white river [O] musts [S] great [C] food quality [SSEP] [A] millenium rolls [O] musts [S] great [C] food quality', '[O] musts [A] dancing [C] ambience general [S] great [SSEP] [O] musts [A] white river [C] food quality [S] great [SSEP] [O] musts [A] millenium rolls [C] food quality [S] great', '[A] dancing [O] musts [C] ambience general [S] great [SSEP] [A] white river [O] musts [C] food quality [S] great [SSEP] [A] millenium rolls [O] musts [C] food quality [S] great', '[O] musts [A] dancing [S] great [C] ambience general [SSEP] [O] musts [A] white river [S] great [C] food quality [SSEP] [O] musts [A] millenium rolls [S] great [C] food quality', '[O] musts [S] great [C] food quality [A] dancing [SSEP] [O] musts [S] great [C] food quality [A] white river and millenium rolls']

task, data: asqp rest15
target: [('food quality', 'hot dogs', 'great', 'juicy')]
output: ['[A] hot dogs [O] juicy [S] great [C] food quality', '[A] hot dogs [O] plenty of crunch and snap [S] great [C] food quality', '[A] hot dogs [O] tender [S] great [C] food quality']
sent: ['the', 'hot', 'dogs', 'were', 'juicy', 'and', 'tender', 'inside', 'and', 'had', 'plenty', 'of', 'crunch', 'and', 'snap', 'on', 'the', 'outside', '.']
counter: {('food quality', 'hot dogs', 'great', 'juicy'): 5, ('food quality', 'hot dogs', 'great', 'tender'): 5, ('food quality', 'hot dogs', 'great', 'plenty of crunch and snap'): 5}
output quads: ['[A] hot dogs [O] juicy [S] great [C] food quality', '[A] hot dogs [O] tender [S] great [C] food quality', '[A] hot dogs [O] plenty of crunch and snap [S] great [C] food quality']
multi_path: ['[A] hot dogs [O] juicy [S] great [C] food quality [SSEP] [A] hot dogs [O] tender [S] great [C] food quality [SSEP] [A] hot dogs [O] plenty of crunch and snap [S] great [C] food quality', '[O] juicy [A] hot dogs [C] food quality [S] great [SSEP] [O] tender [A] hot dogs [C] food quality [S] great [SSEP] [O] plenty of crunch and snap [A] hot dogs [C] food quality [S] great', '[A] hot dogs [O] juicy [C] food quality [S] great [SSEP] [A] hot dogs [O] tender [C] food quality [S] great [SSEP] [A] hot dogs [O] plenty of crunch and snap [C] food quality [S] great', '[O] juicy [A] hot dogs [S] great [C] food quality [SSEP] [O] tender [A] hot dogs [S] great [C] food quality [SSEP] [O] plenty of crunch and snap [A] hot dogs [S] great [C] food quality', '[O] juicy [S] great [C] food quality [A] hot dogs [SSEP] [O] tender [S] great [C] food quality [A] hot dogs [SSEP] [O] plenty of crunch and snap [S] great [C] food quality [A] hot dogs']

task, data: asqp rest15
target: [('restaurant general', 'null', 'great', 'good')]
output: ['[A] meals [O] good [S] ok [C] food quality', '[A] null [O] good [S] great [C] food quality']
sent: ['Everything', 'was', 'going', 'good', 'until', 'we', 'got', 'our', 'meals', '.']
counter: {('food quality', 'null', 'great', 'going good'): 2, ('food quality', 'meals', 'ok', 'good'): 5, ('food quality', 'null', 'great', 'good'): 3}
output quads: ['[A] meals [O] good [S] ok [C] food quality', '[A] null [O] good [S] great [C] food quality']
multi_path: ['[A] it [O] going good [S] great [C] food quality [SSEP] [A] meals [O] good [S] ok [C] food quality', '[O] good [A] it [C] food quality [S] great [SSEP] [O] good [A] meals [C] food quality [S] ok', '[A] it [O] going good [C] food quality [S] great [SSEP] [A] meals [O] good [C] food quality [S] ok', '[O] good [A] it [S] great [C] food quality [SSEP] [O] good [A] meals [S] ok [C] food quality', '[O] good [S] great [C] food quality [A] it [SSEP] [O] good [S] ok [C] food quality [A] meals']

task, data: asqp rest15
target: [('service general', 'staff', 'bad', 'grunt')]
output: ['[A] staff [O] mistakes [S] great [C] service general']
sent: ['Mistakes', 'happen', ',', 'but', 'they', 'are', 'usually', 'accompanied', 'by', 'an', 'apology', ',', 'perhaps', 'even', 'a', 'glass', 'of', 'wine', '...', 'but', 'not', 'the', 'grunt', 'that', 'we', 'received', 'from', 'the', 'Al', 'Di', 'La', 'staff', '.']
counter: {('service general', 'staff', 'great', 'mistakes'): 4, ('service general', 'staff', 'ok', 'mistakes'): 1}
output quads: ['[A] staff [O] mistakes [S] great [C] service general']
multi_path: ['[A] staff [O] mistakes [S] great [C] service general', '[O] mistakes [A] staff [C] service general [S] great', '[A] staff [O] mistakes [C] service general [S] great', '[O] mistakes [A] staff [S] great [C] service general', '[O] mistakes [S] ok [C] service general [A] staff']

task, data: asqp rest15
target: [('ambience general', 'décor', 'great', 'intimate'), ('ambience general', 'unmarked wooden doors', 'great', 'feel like you ’ re no longer in the city'), ('location general', 'spot', 'ok', 'hidden')]
output: ['[A] décor [O] intimate [S] great [C] ambience general', '[A] spot [O] hidden [S] ok [C] location general']
sent: ['Not', 'only', 'is', 'it', 'an', 'adventure', 'getting', 'to', 'this', 'somewhat', 'hidden', 'spot', ',', 'once', 'you', 'enter', 'the', 'unmarked', 'wooden', 'doors', ',', 'the', 'zen', 'and', 'intimate', 'décor', 'will', 'make', 'you', 'feel', 'like', 'you', '’', 're', 'no', 'longer', 'in', 'the', 'city', '.']
counter: {('location general', 'spot', 'ok', 'hidden'): 5, ('ambience general', 'unmarked wooden doors', 'great', 'adventure'): 1, ('ambience general', 'décor', 'great', 'intimate'): 5, ('ambience general', 'décor', 'great', 'unmarked wooden doors'): 2, ('ambience general', 'unmarked wooden doors', 'great', 'enter'): 1, ('ambience general', 'unmarked wooden doors', 'great', 'unmarked wooden doors'): 1}
output quads: ['[A] spot [O] hidden [S] ok [C] location general', '[A] décor [O] intimate [S] great [C] ambience general']
multi_path: ['[A] spot [O] hidden [S] ok [C] location general [SSEP] [A] unmarked wooden doors [O] adventure [S] great [C] ambience general [SSEP] [A] décor [O] intimate [S] great [C] ambience general', '[O] hidden [A] spot [C] location general [S] ok [SSEP] [O] unmarked wooden doors [A] décor [C] ambience general [S] great [SSEP] [O] intimate [A] décor [C] ambience general [S] great', '[A] spot [O] hidden [C] location general [S] ok [SSEP] [A] unmarked wooden doors [O] enter [C] ambience general [S] great [SSEP] [A] décor [O] intimate [C] ambience general [S] great', '[O] hidden [A] spot [S] ok [C] location general [SSEP] [O] unmarked wooden doors [A] décor [S] great [C] ambience general [SSEP] [O] intimate [A] décor [S] great [C] ambience general', '[O] hidden [S] ok [C] location general [A] spot [SSEP] [O] unmarked wooden doors [S] great [C] ambience general [A] unmarked wooden doors [SSEP] [O] intimate [S] great [C] ambience general [A] décor']

task, data: asqp rest15
target: [('service general', 'null', 'great', 'welcome')]
output: ['[A] null [O] welcome [S] great [C] restaurant miscellaneous']
sent: ['Everyone', 'was', 'smiling', 'so', 'that', 'made', 'me', 'feel', 'welcome', '.']
counter: {('restaurant miscellaneous', 'null', 'great', 'welcome'): 4, ('service general', 'null', 'great', 'welcome'): 1}
output quads: ['[A] null [O] welcome [S] great [C] restaurant miscellaneous']
multi_path: ['[A] it [O] welcome [S] great [C] restaurant miscellaneous', '[O] welcome [A] it [C] restaurant miscellaneous [S] great', '[A] it [O] welcome [C] restaurant miscellaneous [S] great', '[O] welcome [A] it [S] great [C] restaurant miscellaneous', '[O] welcome [S] great [C] service general [A] it']

task, data: asqp rest15
target: [('service general', 'null', 'bad', 'twenty minutes later')]
output: ['[A] null [O] walked away [S] bad [C] service general']
sent: ['After', 'that', 'she', 'simply', 'took', 'our', 'plates', ',', 'walked', 'away', ',', 'came', 'back', 'another', 'TWENTY', 'minutes', 'later', 'with', 'the', 'bill', 'and', 'the', 'chicken', 'on', 'it', '!', '!', '!', '!', '!', '!', '!', '!', '!', '!', '!', '!']
counter: {('service general', 'null', 'bad', 'walked away'): 5, ('restaurant prices', 'null', 'bad', ''): 1, ('service general', 'null', 'bad', 'took our plates'): 2, ('service general', 'null', 'bad', ''): 1, ('food quality', 'chicken', 'bad', ''): 1}
output quads: ['[A] null [O] walked away [S] bad [C] service general']
multi_path: ['[A] it [O] walked away [S] bad [C] service general [SSEP] [A] it [O]! [S] bad [C] restaurant prices', '[O] walked away [A] it [C] service general [S] bad [SSEP] [O] took our plates [A] it [C] service general [S] bad', '[A] it [O] walked away [C] service general [S] bad [SSEP] [A] it [O]! [C] service general [S] bad', '[O] walked away [A] it [S] bad [C] service general [SSEP] [O] took our plates [A] it [S] bad [C] service general', '[O] walked away [S] bad [C] service general [A] it [SSEP] [O]! [S] bad [C] food quality [A] chicken']

task, data: asqp rest15
target: [('food quality', 'spinach', 'bad', 'undercooked'), ('food style_options', 'null', 'bad', 'served with skin')]
output: ['[A] null [O] undercooked [S] bad [C] food quality']
sent: ['It', 'was', 'served', 'with', 'skin', ',', 'over', 'a', 'bed', 'of', 'extremely', 'undercooked', 'spinach', 'and', 'mashed', 'potatoes', '.']
counter: {('food quality', 'null', 'bad', 'served with skin'): 2, ('food quality', 'spinach and mashed potatoes', 'bad', 'undercooked'): 2, ('food quality', 'null', 'bad', 'undercooked'): 3}
output quads: ['[A] null [O] undercooked [S] bad [C] food quality']
multi_path: ['[A] it [O] served with skin [S] bad [C] food quality [SSEP] [A] spinach and mashed potatoes [O] undercooked [S] bad [C] food quality', '[O] undercooked [A] it [C] food quality [S] bad', '[A] it [O] served with skin [C] food quality [S] bad [SSEP] [A] spinach and mashed potatoes [O] undercooked [C] food quality [S] bad', '[O] undercooked [A] it [S] bad [C] food quality', '[O] undercooked [S] bad [C] food quality [A] it']

task, data: asqp rest15
target: [('food quality', 'null', 'great', 'delicious'), ('food style_options', 'null', 'great', 'creative'), ('food style_options', 'null', 'great', 'fun')]
output: ['[A] null [O] creative [S] great [C] ambience general', '[A] null [O] delicious [S] great [C] food quality', '[A] null [O] fun [S] great [C] ambience general']
sent: ['Delicious', ',', 'creative', 'and', 'fun', '.']
counter: {('food quality', 'null', 'great', 'delicious'): 5, ('ambience general', 'null', 'great', 'creative'): 5, ('ambience general', 'null', 'great', 'fun'): 5}
output quads: ['[A] null [O] delicious [S] great [C] food quality', '[A] null [O] creative [S] great [C] ambience general', '[A] null [O] fun [S] great [C] ambience general']
multi_path: ['[A] it [O] delicious [S] great [C] food quality [SSEP] [A] it [O] creative [S] great [C] ambience general [SSEP] [A] it [O] fun [S] great [C] ambience general', '[O] delicious [A] it [C] food quality [S] great [SSEP] [O] creative [A] it [C] ambience general [S] great [SSEP] [O] fun [A] it [C] ambience general [S] great', '[A] it [O] delicious [C] food quality [S] great [SSEP] [A] it [O] creative [C] ambience general [S] great [SSEP] [A] it [O] fun [C] ambience general [S] great', '[O] delicious [A] it [S] great [C] food quality [SSEP] [O] creative [A] it [S] great [C] ambience general [SSEP] [O] fun [A] it [S] great [C] ambience general', '[O] delicious [S] great [C] food quality [A] it [SSEP] [O] creative [S] great [C] ambience general [A] it [SSEP] [O] fun [S] great [C] ambience general [A] it']

task, data: asqp rest15
target: [('restaurant miscellaneous', 'null', 'bad', 'downside')]
output: ['[A] null [O] downside [S] ok [C] service general']
sent: ['The', 'only', 'downside', '...', 'they', 'only', 'take', 'cash', 'which', 'is', 'OK', 'if', 'you', 'know', 'about', 'it', 'ahead', 'of', 'time', '.']
counter: {('service general', 'null', 'ok', 'downside'): 5}
output quads: ['[A] null [O] downside [S] ok [C] service general']
multi_path: ['[A] it [O] downside [S] ok [C] service general', '[O] downside [A] it [C] service general [S] ok', '[A] it [O] downside [C] service general [S] ok', '[O] downside [A] it [S] ok [C] service general', '[O] downside [S] ok [C] service general [A] it']

task, data: asqp rest15
target: [('drinks style_options', 'selection of bottled beer', 'bad', 'not much')]
output: ['[A] brahma [O] not much of a selection of bottled beer [S] ok [C] drinks style_options']
sent: ['Not', 'much', 'of', 'a', 'selection', 'of', 'bottled', 'beer', 'either', ',', 'we', 'went', 'with', 'Brahma', '.']
counter: {('drinks style_options', 'bottled beer', 'ok', 'not much of a selection of bottled beer'): 2, ('drinks style_options', 'brahma', 'ok', 'not much of a selection of bottled beer'): 3}
output quads: ['[A] brahma [O] not much of a selection of bottled beer [S] ok [C] drinks style_options']
multi_path: ['[A] bottled beer [O] not much of a selection of bottled beer [S] ok [C] drinks style_options', '[O] not much of a selection of bottled beer [A] brahma [C] drinks style_options [S] ok', '[A] bottled beer [O] not much of a selection of bottled beer [C] drinks style_options [S] ok', '[O] not much of a selection of bottled beer [A] brahma [S] ok [C] drinks style_options', '[O] not much of a selection of bottled beer [S] ok [C] drinks style_options [A] brahma']

task, data: asqp rest15
target: [('restaurant prices', 'the four seasons', 'bad', 'charge an arm and a leg')]
output: ['[A] null [O] romatic [S] great [C] food style_options']
sent: ['Not', 'because', 'you', 'are', '``', 'The', 'Four', 'Seasons', '``', '...', '–', 'you', 'are', 'allowed', 'to', 'charge', 'an', 'arm', 'and', 'a', 'leg', 'for', 'a', 'romatic', 'dinner', '.']
counter: {('food style_options', 'null', 'great', 'romatic'): 3, ('ambience general', 'null', 'great', 'romatic'): 2}
output quads: ['[A] null [O] romatic [S] great [C] food style_options']
multi_path: ['[A] it [O] romatic [S] great [C] food style_options', '[O] romatic [A] it [C] ambience general [S] great', '[A] it [O] romatic [C] food style_options [S] great', '[O] romatic [A] it [S] great [C] ambience general', '[O] romatic [S] great [C] food style_options [A] it']

pred labels count Counter({1: 347, 2: 135, 3: 40, 4: 10, 5: 5})
gold  [A] food [O] gross [S] bad [C] food quality
pred  [A] food [O] gross [S] bad [C] food quality

gold  [A] it [O] alright [S] ok [C] restaurant general
pred  [A] null [O] alright [S] ok [C] restaurant general

gold  [A] place [O] great [S] great [C] ambience general
pred  [A] place [O] great [S] great [C] ambience general

gold  [A] decor [O] distraction [S] ok [C] ambience general [SSEP] [A] eggplant [O] cold [S] bad [C] food quality [SSEP] [A] eggplant [O] 300 bucks [S] bad [C] food prices [SSEP] [A] it [O] 2 frickin hours [S] bad [C] service general
pred  [A] decor [O] distraction [S] bad [C] ambience general [SSEP] [A] eggplant [O] cold [S] bad [C] food quality

gold  [A] quacamole [O] yummy [S] great [C] food quality [SSEP] [A] wings with chimmichuri [O] yummy [S] great [C] food quality
pred  [A] quacamole [O] yummy [S] great [C] food quality [SSEP] [A] wings with chimmichuri [O] yummy [S] great [C] food quality

gold  [A] hot dogs [O] good [S] great [C] food quality [SSEP] [A] pork croquette sandwich [O] fantastic [S] great [C] food quality [SSEP] [A] bun [O] perfect [S] great [C] food quality
pred  [A] hot dogs [O] good [S] great [C] food quality [SSEP] [A] pork croquette sandwich [O] fantastic [S] great [C] food quality [SSEP] [A] pork croquette sandwich [O] perfect [S] great [C] food quality

gold  [A] it [O] fair [S] great [C] restaurant prices [SSEP] [A] it [O] great [S] great [C] restaurant general
pred  [A] null [O] great time [S] great [C] restaurant general [SSEP] [A] null [O] fair [S] ok [C] restaurant prices

gold  [A] pork souvlaki [O] best [S] great [C] food quality
pred  [A] pork souvlaki [O] best [S] great [C] food quality

gold  [A] it [O] nearly an hour [S] bad [C] service general
pred  [A] appetizers [O] nearly an hour [S] bad [C] food style_options

gold  [A] entree [O] good [S] great [C] food quality
pred  [A] entree [O] good [S] great [C] food quality

number of gold spans: 795, predicted spans: 802, hit: 411
asqp rest15 {'precision': 51.246882793017456, 'recall': 51.698113207547166, 'f1': 51.47150907952411}
Total examples = 544
Total examples = 544
Ori sent size: 544
Input size: 2720 2720
Examples:
[['asqp', ':', 'rest16', ':', 'i', 'waited', 'for', '10-15', 'minutes', 'for', 'service', 'ordered', 'a', 'beer', '&', 'was', 'never', 'served', 'again', '.', '[O]', '[A]', '[C]', '[S]'], ['asqp', ':', 'rest16', ':', 'i', 'waited', 'for', '10-15', 'minutes', 'for', 'service', 'ordered', 'a', 'beer', '&', 'was', 'never', 'served', 'again', '.', '[A]', '[O]', '[S]', '[C]'], ['asqp', ':', 'rest16', ':', 'i', 'waited', 'for', '10-15', 'minutes', 'for', 'service', 'ordered', 'a', 'beer', '&', 'was', 'never', 'served', 'again', '.', '[O]', '[A]', '[S]', '[C]'], ['asqp', ':', 'rest16', ':', 'i', 'waited', 'for', '10-15', 'minutes', 'for', 'service', 'ordered', 'a', 'beer', '&', 'was', 'never', 'served', 'again', '.', '[O]', '[S]', '[C]', '[A]'], ['asqp', ':', 'rest16', ':', 'i', 'waited', 'for', '10-15', 'minutes', 'for', 'service', 'ordered', 'a', 'beer', '&', 'was', 'never', 'served', 'again', '.', '[A]', '[O]', '[C]', '[S]'], ['asqp', ':', 'rest16', ':', 'the', 'ambiance', 'was', 'a', 'peaceful', 'and', 'relaxing', 'break', 'amongst', 'all', 'the', 'kids', 'running', 'around', 'in', 'downtown', 'disney', '.', '[O]', '[A]', '[C]', '[S]'], ['asqp', ':', 'rest16', ':', 'the', 'ambiance', 'was', 'a', 'peaceful', 'and', 'relaxing', 'break', 'amongst', 'all', 'the', 'kids', 'running', 'around', 'in', 'downtown', 'disney', '.', '[A]', '[O]', '[S]', '[C]'], ['asqp', ':', 'rest16', ':', 'the', 'ambiance', 'was', 'a', 'peaceful', 'and', 'relaxing', 'break', 'amongst', 'all', 'the', 'kids', 'running', 'around', 'in', 'downtown', 'disney', '.', '[O]', '[A]', '[S]', '[C]'], ['asqp', ':', 'rest16', ':', 'the', 'ambiance', 'was', 'a', 'peaceful', 'and', 'relaxing', 'break', 'amongst', 'all', 'the', 'kids', 'running', 'around', 'in', 'downtown', 'disney', '.', '[O]', '[S]', '[C]', '[A]'], ['asqp', ':', 'rest16', ':', 'the', 'ambiance', 'was', 'a', 'peaceful', 'and', 'relaxing', 'break', 'amongst', 'all', 'the', 'kids', 'running', 'around', 'in', 'downtown', 'disney', '.', '[A]', '[O]', '[C]', '[S]']]
['[O] never served again [A] service [C] service general [S] bad', '[A] service [O] never served again [S] bad [C] service general', '[O] never served again [A] service [S] bad [C] service general', '[O] never served again [S] bad [C] service general [A] service', '[A] service [O] never served again [C] service general [S] bad', '[O] peaceful [A] ambiance [C] ambience general [S] great', '[A] ambiance [O] peaceful [S] great [C] ambience general', '[O] peaceful [A] ambiance [S] great [C] ambience general', '[O] peaceful [S] great [C] ambience general [A] ambiance', '[A] ambiance [O] peaceful [C] ambience general [S] great']
task, data: asqp rest16
target: [('service general', 'service', 'bad', 'never served again')]
output: ['[A] beer [O] never served [S] bad [C] drinks quality', '[A] service [O] waited for 10-15 minutes [S] bad [C] service general']
sent: ['I', 'waited', 'for', '10-15', 'minutes', 'for', 'service', 'ordered', 'a', 'beer', '&', 'was', 'never', 'served', 'again', '.']
counter: {('service general', 'service', 'bad', 'waited for 10-15 minutes'): 5, ('drinks quality', 'beer', 'bad', 'never served'): 5}
output quads: ['[A] service [O] waited for 10-15 minutes [S] bad [C] service general', '[A] beer [O] never served [S] bad [C] drinks quality']
multi_path: ['[O] waited for 10-15 minutes [A] service [C] service general [S] bad [SSEP] [O] never served [A] beer [C] drinks quality [S] bad', '[A] service [O] waited for 10-15 minutes [S] bad [C] service general [SSEP] [A] beer [O] never served [S] bad [C] drinks quality', '[O] waited for 10-15 minutes [A] service [S] bad [C] service general [SSEP] [O] never served [A] beer [S] bad [C] drinks quality', '[O] waited for 10-15 minutes [S] bad [C] service general [A] service [SSEP] [O] never served [S] bad [C] drinks quality [A] beer', '[A] service [O] waited for 10-15 minutes [C] service general [S] bad [SSEP] [A] beer [O] never served [C] drinks quality [S] bad']

task, data: asqp rest16
target: [('ambience general', 'ambiance', 'great', 'peaceful')]
output: ['[A] ambiance [O] peaceful [S] great [C] ambience general', '[A] ambiance [O] relaxing [S] great [C] ambience general']
sent: ['The', 'ambiance', 'was', 'a', 'peaceful', 'and', 'relaxing', 'break', 'amongst', 'all', 'the', 'kids', 'running', 'around', 'in', 'Downtown', 'Disney', '.']
counter: {('ambience general', 'ambiance', 'great', 'peaceful'): 5, ('ambience general', 'ambiance', 'great', 'relaxing'): 5}
output quads: ['[A] ambiance [O] peaceful [S] great [C] ambience general', '[A] ambiance [O] relaxing [S] great [C] ambience general']
multi_path: ['[O] peaceful [A] ambiance [C] ambience general [S] great [SSEP] [O] relaxing [A] ambiance [C] ambience general [S] great', '[A] ambiance [O] peaceful [S] great [C] ambience general [SSEP] [A] ambiance [O] relaxing [S] great [C] ambience general', '[O] peaceful [A] ambiance [S] great [C] ambience general [SSEP] [O] relaxing [A] ambiance [S] great [C] ambience general', '[O] peaceful [S] great [C] ambience general [A] ambiance [SSEP] [O] relaxing [S] great [C] ambience general [A] ambiance', '[A] ambiance [O] peaceful [C] ambience general [S] great [SSEP] [A] ambiance [O] relaxing [C] ambience general [S] great']

task, data: asqp rest16
target: [('restaurant general', 'null', 'great', 'hidden')]
output: ['[A] jem [O] hidden [S] great [C] restaurant miscellaneous']
sent: ['hidden', 'little', 'jem']
counter: {('restaurant miscellaneous', 'jem', 'great', 'hidden'): 4, ('restaurant miscellaneous', 'jem', 'great', 'hidden little'): 1}
output quads: ['[A] jem [O] hidden [S] great [C] restaurant miscellaneous']
multi_path: ['[O] hidden [A] jem [C] restaurant miscellaneous [S] great', '[A] jem [O] hidden [S] great [C] restaurant miscellaneous', '[O] hidden [A] jem [S] great [C] restaurant miscellaneous', '[O] hidden little [S] great [C] restaurant miscellaneous [A] jem', '[A] jem [O] hidden [C] restaurant miscellaneous [S] great']

task, data: asqp rest16
target: [('ambience general', 'deck', 'great', 'best'), ('service general', 'null', 'great', 'bring you a blanket')]
output: ['[A] deck experience [O] best [S] great [C] ambience general']
sent: ['–', '...', 'and', 'the', 'best', 'summertime', 'deck', 'experience', '--', 'they', 'will', 'even', 'bring', 'you', 'a', 'blanket', 'if', 'you', 'get', 'cold', 'in', 'the', 'Seattle', 'evening', 'weather', '.']
counter: {('ambience general', 'deck experience', 'great', 'best'): 5}
output quads: ['[A] deck experience [O] best [S] great [C] ambience general']
multi_path: ['[O] best [A] deck experience [C] ambience general [S] great', '[A] deck experience [O] best [S] great [C] ambience general', '[O] best [A] deck experience [S] great [C] ambience general', '[O] best [S] great [C] ambience general [A] deck experience', '[A] deck experience [O] best [C] ambience general [S] great']

task, data: asqp rest16
target: [('restaurant general', "ray's", 'great', 'go back')]
output: ["[A] seattle ray's rates [O] go back [S] great [C] restaurant general"]
sent: ['–', 'After', '12', 'years', 'in', 'Seattle', 'Ray', "'s", 'rates', 'as', 'the', 'place', 'we', 'always', 'go', 'back', 'to', '.']
counter: {('restaurant general', "seattle ray's rates", 'great', 'go back'): 5}
output quads: ["[A] seattle ray's rates [O] go back [S] great [C] restaurant general"]
multi_path: ["[O] go back [A] seattle ray's rates [C] restaurant general [S] great", "[A] seattle ray's rates [O] go back [S] great [C] restaurant general", "[O] go back [A] seattle ray's rates [S] great [C] restaurant general", "[O] go back [S] great [C] restaurant general [A] seattle ray's rates", "[A] seattle ray's rates [O] go back [C] restaurant general [S] great"]

task, data: asqp rest16
target: [('food style_options', "pepperoni's", 'great', 'thick')]
output: ['[A] pepperoni [O] thick [S] great [C] food quality']
sent: ['–', 'The', 'pepperoni', "'s", 'cut', 'real', 'thick', '--', 'Yum', '.']
counter: {('food quality', 'pepperoni', 'great', 'thick'): 5}
output quads: ['[A] pepperoni [O] thick [S] great [C] food quality']
multi_path: ['[O] thick [A] pepperoni [C] food quality [S] great', '[A] pepperoni [O] thick [S] great [C] food quality', '[O] thick [A] pepperoni [S] great [C] food quality', '[O] thick [S] great [C] food quality [A] pepperoni', '[A] pepperoni [O] thick [C] food quality [S] great']

task, data: asqp rest16
target: [('ambience general', 'null', 'great', 'fine')]
output: ['[A] null [O] uncomfortable [S] great [C] restaurant miscellaneous']
sent: ['not', 'too', 'fine', 'thought', 'that', 'you', 'feel', 'uncomfortable', 'and', 'have', 'to', 'dress', 'up', '.']
counter: {('restaurant miscellaneous', 'null', 'great', 'uncomfortable'): 3, ('restaurant miscellaneous', 'null', 'bad', 'uncomfortable'): 2}
output quads: ['[A] null [O] uncomfortable [S] great [C] restaurant miscellaneous']
multi_path: ['[O] uncomfortable [A] it [C] restaurant miscellaneous [S] great', '[A] it [O] uncomfortable [S] bad [C] restaurant miscellaneous', '[O] uncomfortable [A] it [S] bad [C] restaurant miscellaneous', '[O] uncomfortable [S] great [C] restaurant miscellaneous [A] it', '[A] it [O] uncomfortable [C] restaurant miscellaneous [S] great']

task, data: asqp rest16
target: [('food quality', 'pizza', 'bad', 'better')]
output: ['[A] frozen pizza [O] better [S] bad [C] food quality']
sent: ['To', 'be', 'honest', ',', 'I', "'ve", 'had', 'better', 'frozen', 'pizza', '.']
counter: {('food quality', 'frozen pizza', 'bad', 'better'): 5}
output quads: ['[A] frozen pizza [O] better [S] bad [C] food quality']
multi_path: ['[O] better [A] frozen pizza [C] food quality [S] bad', '[A] frozen pizza [O] better [S] bad [C] food quality', '[O] better [A] frozen pizza [S] bad [C] food quality', '[O] better [S] bad [C] food quality [A] frozen pizza', '[A] frozen pizza [O] better [C] food quality [S] bad']

task, data: asqp rest16
target: [('food quality', 'food', 'great', 'sinful')]
output: ['[A] food [O] sinful [S] bad [C] food quality']
sent: ['The', 'food', 'is', 'sinful', '.']
counter: {('food quality', 'food', 'bad', 'sinful'): 5}
output quads: ['[A] food [O] sinful [S] bad [C] food quality']
multi_path: ['[O] sinful [A] food [C] food quality [S] bad', '[A] food [O] sinful [S] bad [C] food quality', '[O] sinful [A] food [S] bad [C] food quality', '[O] sinful [S] bad [C] food quality [A] food', '[A] food [O] sinful [C] food quality [S] bad']

task, data: asqp rest16
target: [('food quality', 'food', 'great', 'wonderful'), ('restaurant miscellaneous', 'null', 'great', 'positive'), ('service general', 'server', 'great', 'wonderful')]
output: ['[A] food [O] wonderful [S] great [C] food quality', '[A] server [O] wonderful [S] great [C] service general']
sent: ['While', 'I', 'could', 'have', 'done', 'without', 'the', 'youth', 'who', 'shared', 'the', 'evening', 'with', 'us', ',', 'our', 'wonderful', 'server', 'and', 'food', 'made', 'the', 'experience', 'a', 'very', 'positive', 'one', '.']
counter: {('service general', 'server', 'great', 'wonderful'): 5, ('food quality', 'food', 'great', 'positive'): 2, ('food quality', 'food', 'great', 'wonderful'): 3}
output quads: ['[A] server [O] wonderful [S] great [C] service general', '[A] food [O] wonderful [S] great [C] food quality']
multi_path: ['[O] wonderful [A] server [C] service general [S] great [SSEP] [O] positive [A] food [C] food quality [S] great', '[A] server [O] wonderful [S] great [C] service general [SSEP] [A] food [O] wonderful [S] great [C] food quality', '[O] wonderful [A] server [S] great [C] service general [SSEP] [O] positive [A] food [S] great [C] food quality', '[O] wonderful [S] great [C] service general [A] server [SSEP] [O] wonderful [S] great [C] food quality [A] food', '[A] server [O] wonderful [C] service general [S] great [SSEP] [A] food [O] wonderful [C] food quality [S] great']

task, data: asqp rest16
target: [('service general', 'waiter', 'bad', 'dismissive')]
output: ['[A] staff members [O] hand-and-foot [S] bad [C] service general', '[A] waiter [O] dismissive [S] bad [C] service general']
sent: ['On', 'a', 'recent', 'trip', ',', 'our', 'waiter', 'was', 'extremely', 'dismissive', ',', 'while', 'no', 'less', 'than', 'three', 'staff', 'members', 'waited', 'hand-and-foot', 'on', 'a', 'pair', 'of', 'Japanese', 'girls', 'seated', 'nearby', '.']
counter: {('service general', 'waiter', 'bad', 'dismissive'): 5, ('service general', 'staff members', 'bad', 'hand-and-foot'): 5}
output quads: ['[A] waiter [O] dismissive [S] bad [C] service general', '[A] staff members [O] hand-and-foot [S] bad [C] service general']
multi_path: ['[O] dismissive [A] waiter [C] service general [S] bad [SSEP] [O] hand-and-foot [A] staff members [C] service general [S] bad', '[A] waiter [O] dismissive [S] bad [C] service general [SSEP] [A] staff members [O] hand-and-foot [S] bad [C] service general', '[O] dismissive [A] waiter [S] bad [C] service general [SSEP] [O] hand-and-foot [A] staff members [S] bad [C] service general', '[O] dismissive [S] bad [C] service general [A] waiter [SSEP] [O] hand-and-foot [S] bad [C] service general [A] staff members', '[A] waiter [O] dismissive [C] service general [S] bad [SSEP] [A] staff members [O] hand-and-foot [C] service general [S] bad']

task, data: asqp rest16
target: [('food quality', 'brocolli', 'great', 'eventful'), ('food quality', 'prawns', 'great', 'fresh'), ('food quality', 'prawns', 'great', 'nicely cooked'), ('food quality', 'scallops', 'great', 'fresh'), ('food quality', 'scallops', 'great', 'nicely cooked')]
output: ['[A] brocolli [O] eventful [S] great [C] food style_options', '[A] scallops and prawns [O] fresh [S] great [C] food quality', '[A] scallops and prawns [O] nicely cooked [S] great [C] food quality']
sent: ['i', 'would', 'normally', 'not', 'finish', 'the', 'brocolli', 'when', 'i', 'order', 'these', 'kinds', 'of', 'food', 'but', 'for', 'the', 'first', 'time', ',', 'every', 'piece', 'was', 'as', 'eventful', 'as', 'the', 'first', 'one', '...', 'the', 'scallops', 'and', 'prawns', 'was', 'so', 'fresh', 'and', 'nicely', 'cooked', '.']
counter: {('food style_options', 'brocolli', 'great', 'eventful'): 5, ('food quality', 'scallops and prawns', 'great', 'fresh'): 4, ('food quality', 'scallops and prawns', 'great', 'nicely cooked'): 4, ('food quality', 'scallops', 'great', 'fresh'): 1, ('food quality', 'prawns', 'great', 'nicely cooked'): 1}
output quads: ['[A] brocolli [O] eventful [S] great [C] food style_options', '[A] scallops and prawns [O] fresh [S] great [C] food quality', '[A] scallops and prawns [O] nicely cooked [S] great [C] food quality']
multi_path: ['[O] eventful [A] brocolli [C] food style_options [S] great [SSEP] [O] fresh [A] scallops and prawns [C] food quality [S] great [SSEP] [O] nicely cooked [A] scallops and prawns [C] food quality [S] great', '[A] brocolli [O] eventful [S] great [C] food style_options [SSEP] [A] scallops and prawns [O] fresh [S] great [C] food quality [SSEP] [A] scallops and prawns [O] nicely cooked [S] great [C] food quality', '[O] eventful [A] brocolli [S] great [C] food style_options [SSEP] [O] fresh [A] scallops and prawns [S] great [C] food quality [SSEP] [O] nicely cooked [A] scallops and prawns [S] great [C] food quality', '[O] eventful [S] great [C] food style_options [A] brocolli [SSEP] [O] fresh [S] great [C] food quality [A] scallops [SSEP] [O] nicely cooked [S] great [C] food quality [A] prawns', '[A] brocolli [O] eventful [C] food style_options [S] great [SSEP] [A] scallops and prawns [O] fresh [C] food quality [S] great [SSEP] [A] scallops and prawns [O] nicely cooked [C] food quality [S] great']

task, data: asqp rest16
target: [('food prices', 'sushi', 'ok', "isn't the cheapest"), ('food quality', 'sushi', 'great', 'worth')]
output: ["[A] sushi [O] isn't the cheapest [S] bad [C] food prices", '[A] sushi [O] worth [S] great [C] food quality']
sent: ['It', 'is', "n't", 'the', 'cheapest', 'sushi', 'but', 'has', 'been', 'worth', 'it', 'every', 'time', '.']
counter: {('food prices', 'sushi', 'bad', "isn't the cheapest"): 5, ('food quality', 'sushi', 'great', 'worth'): 5}
output quads: ["[A] sushi [O] isn't the cheapest [S] bad [C] food prices", '[A] sushi [O] worth [S] great [C] food quality']
multi_path: ["[O] isn't the cheapest [A] sushi [C] food prices [S] bad [SSEP] [O] worth [A] sushi [C] food quality [S] great", "[A] sushi [O] isn't the cheapest [S] bad [C] food prices [SSEP] [A] sushi [O] worth [S] great [C] food quality", "[O] isn't the cheapest [A] sushi [S] bad [C] food prices [SSEP] [O] worth [A] sushi [S] great [C] food quality", "[O] isn't the cheapest [S] bad [C] food prices [A] sushi [SSEP] [O] worth [S] great [C] food quality [A] sushi", "[A] sushi [O] isn't the cheapest [C] food prices [S] bad [SSEP] [A] sushi [O] worth [C] food quality [S] great"]

task, data: asqp rest16
target: [('food quality', 'null', 'great', 'never feel icky and stuffed')]
output: ['[A] null [O] never feel icky and stuffed [S] great [C] restaurant general']
sent: ['You', 'never', 'feel', 'icky', 'and', 'stuffed', 'after', 'you', 'eat', 'there', '.']
counter: {('restaurant general', 'null', 'great', 'never feel icky and stuffed'): 4, ('food quality', 'null', 'great', 'never feel icky and stuffed'): 1}
output quads: ['[A] null [O] never feel icky and stuffed [S] great [C] restaurant general']
multi_path: ['[O] never feel icky and stuffed [A] it [C] restaurant general [S] great', '[A] it [O] never feel icky and stuffed [S] great [C] restaurant general', '[O] never feel icky and stuffed [A] it [S] great [C] restaurant general', '[O] never feel icky and stuffed [S] great [C] food quality [A] it', '[A] it [O] never feel icky and stuffed [C] restaurant general [S] great']

task, data: asqp rest16
target: [('service general', 'null', 'bad', 'dropped off without comment')]
output: ['[A] food [O] dropped off without comment [S] bad [C] food quality']
sent: ['As', 'part', 'of', 'a', 'small', 'party', 'of', 'four', ',', 'our', 'food', 'was', 'dropped', 'off', 'without', 'comment', ';']
counter: {('food quality', 'food', 'bad', 'dropped off without comment'): 4, ('service general', 'food', 'bad', 'dropped off without comment'): 1}
output quads: ['[A] food [O] dropped off without comment [S] bad [C] food quality']
multi_path: ['[O] dropped off without comment [A] food [C] food quality [S] bad', '[A] food [O] dropped off without comment [S] bad [C] food quality', '[O] dropped off without comment [A] food [S] bad [C] food quality', '[O] dropped off without comment [S] bad [C] service general [A] food', '[A] food [O] dropped off without comment [C] food quality [S] bad']

task, data: asqp rest16
target: [('restaurant general', 'scooner or later', 'bad', 'returns to what it once was')]
output: ['[A] scooner [O] hope [S] bad [C] restaurant general']
sent: ['I', 'hope', 'one', 'day', 'Scooner', 'or', 'Later', 'returns', 'to', 'what', 'it', 'once', 'was', '.']
counter: {('restaurant general', 'scooner', 'bad', 'hope'): 5}
output quads: ['[A] scooner [O] hope [S] bad [C] restaurant general']
multi_path: ['[O] hope [A] scooner [C] restaurant general [S] bad', '[A] scooner [O] hope [S] bad [C] restaurant general', '[O] hope [A] scooner [S] bad [C] restaurant general', '[O] hope [S] bad [C] restaurant general [A] scooner', '[A] scooner [O] hope [C] restaurant general [S] bad']

task, data: asqp rest16
target: [('service general', 'null', 'great', 'like')]
output: ['[A] food [O] fast [S] great [C] food quality', '[A] food [O] like [S] great [C] food style_options']
sent: ['First', 'off', ',', 'the', 'food', 'came', 'fast', 'and', 'all', 'together', ':', ')', 'i', 'like', 'that', '...', 'i', 'hate', 'the', 'pretentiousness', 'of', 'things', 'coming', 'in', 'one', 'after', 'the', 'other', '.']
counter: {('food quality', 'food', 'great', 'fast'): 5, ('food style_options', 'food', 'great', 'like'): 4, ('food quality', 'food', 'great', 'like'): 1}
output quads: ['[A] food [O] fast [S] great [C] food quality', '[A] food [O] like [S] great [C] food style_options']
multi_path: ['[O] fast [A] food [C] food quality [S] great [SSEP] [O] like [A] food [C] food style_options [S] great', '[A] food [O] fast [S] great [C] food quality [SSEP] [A] food [O] like [S] great [C] food quality', '[O] fast [A] food [S] great [C] food quality [SSEP] [O] like [A] food [S] great [C] food style_options', '[O] fast [S] great [C] food quality [A] food [SSEP] [O] like [S] great [C] food style_options [A] food', '[A] food [O] fast [C] food quality [S] great [SSEP] [A] food [O] like [C] food style_options [S] great']

task, data: asqp rest16
target: [('restaurant general', 'place', 'great', 'great')]
output: ['[A] null [O] great [S] great [C] service general']
sent: ['If', 'there', 'is', 'a', 'line', 'very', 'day', 'of', 'the', 'week', 'for', 'the', 'entire', 'time', 'a', 'place', 'is', 'open', ',', 'you', 'know', 'it', 'is', 'great', '.']
counter: {('service general', 'null', 'great', 'great'): 5}
output quads: ['[A] null [O] great [S] great [C] service general']
multi_path: ['[O] great [A] it [C] service general [S] great', '[A] it [O] great [S] great [C] service general', '[O] great [A] it [S] great [C] service general', '[O] great [S] great [C] service general [A] it', '[A] it [O] great [C] service general [S] great']

task, data: asqp rest16
target: [('restaurant prices', 'null', 'great', 'pleasant')]
output: ['[A] check [O] pleasant surprise [S] great [C] service general']
sent: ['The', 'most', 'pleasant', 'surprise', 'was', 'the', 'check', 'that', 'did', 'not', 'exceed', 'my', 'expectations', 'as', 'it', 'always', 'happens', 'in', 'most', 'of', 'the', 'places', '.']
counter: {('service general', 'check', 'great', 'pleasant surprise'): 5}
output quads: ['[A] check [O] pleasant surprise [S] great [C] service general']
multi_path: ['[O] pleasant surprise [A] check [C] service general [S] great', '[A] check [O] pleasant surprise [S] great [C] service general', '[O] pleasant surprise [A] check [S] great [C] service general', '[O] pleasant surprise [S] great [C] service general [A] check', '[A] check [O] pleasant surprise [C] service general [S] great']

task, data: asqp rest16
target: [('food style_options', 'menu', 'ok', 'abbreviated')]
output: ['[A] outside patio area [O] abbreviated [S] ok [C] ambience general']
sent: ['The', 'outside', 'patio', 'area', 'has', 'an', 'abbreviated', 'menu', '.']
counter: {('ambience general', 'outside patio area', 'ok', 'abbreviated'): 4, ('food style_options', 'outside patio area', 'ok', 'abbreviated'): 1}
output quads: ['[A] outside patio area [O] abbreviated [S] ok [C] ambience general']
multi_path: ['[O] abbreviated [A] outside patio area [C] ambience general [S] ok', '[A] outside patio area [O] abbreviated [S] ok [C] ambience general', '[O] abbreviated [A] outside patio area [S] ok [C] ambience general', '[O] abbreviated [S] ok [C] food style_options [A] outside patio area', '[A] outside patio area [O] abbreviated [C] ambience general [S] ok']

task, data: asqp rest16
target: [('restaurant general', 'null', 'great', 'amazing')]
output: ['[A] null [O] amazing [S] great [C] food quality']
sent: ['Cut', 'to', 'the', 'chase', '-', 'this', 'is', 'amazing', '!']
counter: {('food quality', 'null', 'great', 'amazing'): 4, ('restaurant general', 'null', 'great', 'amazing'): 1}
output quads: ['[A] null [O] amazing [S] great [C] food quality']
multi_path: ['[O] amazing [A] it [C] food quality [S] great', '[A] it [O] amazing [S] great [C] food quality', '[O] amazing [A] it [S] great [C] food quality', '[O] amazing [S] great [C] restaurant general [A] it', '[A] it [O] amazing [C] food quality [S] great']

task, data: asqp rest16
target: [('food prices', 'food', 'bad', 'gone up'), ('food quality', 'food', 'bad', 'not what it once was'), ('food style_options', 'potions', 'bad', 'downsizing'), ('service general', 'service', 'bad', 'worst')]
output: ['[A] food [O] not what it once was [S] bad [C] food quality', '[A] null [O] gone up [S] bad [C] restaurant prices', '[A] potions [O] downsizing [S] bad [C] drinks style_options', '[A] service [O] worst [S] bad [C] service general']
sent: ['The', 'food', 'is', 'not', 'what', 'it', 'once', 'was', '(', 'potions', 'have', 'seriously', 'seen', 'downsizing', ')', 'prices', 'have', 'gone', 'up', ',', 'and', 'the', 'service', 'is', 'the', 'worst', 'I', 'have', 'experienced', 'anywhere', '(', 'including', 'mainland', 'Europe', ')', '.']
counter: {('food quality', 'food', 'bad', 'not what it once was'): 5, ('food style_options', 'potions', 'bad', 'downsizing'): 1, ('restaurant prices', 'null', 'bad', 'gone up'): 4, ('service general', 'service', 'bad', 'worst'): 5, ('drinks prices', 'potions', 'bad', 'downsizing'): 1, ('drinks style_options', 'potions', 'bad', 'downsizing'): 3}
output quads: ['[A] food [O] not what it once was [S] bad [C] food quality', '[A] null [O] gone up [S] bad [C] restaurant prices', '[A] service [O] worst [S] bad [C] service general', '[A] potions [O] downsizing [S] bad [C] drinks style_options']
multi_path: ['[O] not what it once was [A] food [C] food quality [S] bad [SSEP] [O] downsizing [A] potions [C] food style_options [S] bad [SSEP] [O] gone up [A] it [C] restaurant prices [S] bad [SSEP] [O] worst [A] service [C] service general [S] bad', '[A] food [O] not what it once was [S] bad [C] food quality [SSEP] [A] potions [O] downsizing [S] bad [C] drinks prices [SSEP] [A] service [O] worst [S] bad [C] service general', '[O] not what it once was [A] food [S] bad [C] food quality [SSEP] [O] downsizing [A] potions [S] bad [C] drinks style_options [SSEP] [O] gone up [A] it [S] bad [C] restaurant prices [SSEP] [O] worst [A] service [S] bad [C] service general', '[O] not what it once was [S] bad [C] food quality [A] food [SSEP] [O] downsizing [S] bad [C] drinks style_options [A] potions [SSEP] [O] gone up [S] bad [C] restaurant prices [A] it [SSEP] [O] worst [S] bad [C] service general [A] service', '[A] food [O] not what it once was [C] food quality [S] bad [SSEP] [A] potions [O] downsizing [C] drinks style_options [S] bad [SSEP] [A] it [O] gone up [C] restaurant prices [S] bad [SSEP] [A] service [O] worst [C] service general [S] bad']

task, data: asqp rest16
target: [('food quality', 'brocollis', 'great', 'fresh')]
output: ['[A] brocollis [O] fresh [S] great [C] food quality', '[A] brocollis [O] tasty [S] great [C] food quality']
sent: ['the', 'brocollis', 'were', 'so', 'fresh', 'and', 'tasty', '.']
counter: {('food quality', 'brocollis', 'great', 'fresh'): 5, ('food quality', 'brocollis', 'great', 'tasty'): 5}
output quads: ['[A] brocollis [O] fresh [S] great [C] food quality', '[A] brocollis [O] tasty [S] great [C] food quality']
multi_path: ['[O] fresh [A] brocollis [C] food quality [S] great [SSEP] [O] tasty [A] brocollis [C] food quality [S] great', '[A] brocollis [O] fresh [S] great [C] food quality [SSEP] [A] brocollis [O] tasty [S] great [C] food quality', '[O] fresh [A] brocollis [S] great [C] food quality [SSEP] [O] tasty [A] brocollis [S] great [C] food quality', '[O] fresh [S] great [C] food quality [A] brocollis [SSEP] [O] tasty [S] great [C] food quality [A] brocollis', '[A] brocollis [O] fresh [C] food quality [S] great [SSEP] [A] brocollis [O] tasty [C] food quality [S] great']

task, data: asqp rest16
target: [('food style_options', 'null', 'great', 'good quantity')]
output: ['[A] null [O] good [S] great [C] restaurant prices', '[A] null [O] good [S] great [C] service general']
sent: ['And', 'they', 'give', 'good', 'quantity', 'for', 'the', 'price', '.']
counter: {('restaurant prices', 'null', 'great', 'good'): 3, ('service general', 'null', 'great', 'good'): 3, ('food style_options', 'null', 'great', 'good'): 1}
output quads: ['[A] null [O] good [S] great [C] restaurant prices', '[A] null [O] good [S] great [C] service general']
multi_path: ['[O] good [A] it [C] restaurant prices [S] great', '[A] it [O] good [S] great [C] service general', '[O] good [A] it [S] great [C] service general [SSEP] [O] good [A] it [S] great [C] food style_options [SSEP] [O] good [A] it [S] great [C] restaurant prices', '[O] good [S] great [C] service general [A] it', '[A] it [O] good [C] restaurant prices [S] great']

task, data: asqp rest16
target: [('restaurant general', 'null', 'bad', 'disappointing')]
output: ['[A] null [O] disappointing [S] bad [C] food quality']
sent: ['Very', 'Disappointing']
counter: {('food quality', 'null', 'bad', 'disappointing'): 5}
output quads: ['[A] null [O] disappointing [S] bad [C] food quality']
multi_path: ['[O] disappointing [A] it [C] food quality [S] bad', '[A] it [O] disappointing [S] bad [C] food quality', '[O] disappointing [A] it [S] bad [C] food quality', '[O] disappointing [S] bad [C] food quality [A] it', '[A] it [O] disappointing [C] food quality [S] bad']

task, data: asqp rest16
target: [('food quality', 'meal', 'great', 'bad')]
output: ['[A] meal [O] never had one bad meal [S] great [C] food quality']
sent: ['–', 'i', 'have', 'been', 'eating', 'at', 'this', 'place', 'for', 'over', '8', 'years', 'now', 'and', 'i', 'have', 'never', 'had', 'one', 'bad', 'meal', '.']
counter: {('food quality', 'meal', 'great', 'never had one bad meal'): 3, ('food quality', 'meal', 'great', 'never had one bad'): 2}
output quads: ['[A] meal [O] never had one bad meal [S] great [C] food quality']
multi_path: ['[O] never had one bad meal [A] meal [C] food quality [S] great', '[A] meal [O] never had one bad [S] great [C] food quality', '[O] never had one bad meal [A] meal [S] great [C] food quality', '[O] never had one bad meal [S] great [C] food quality [A] meal', '[A] meal [O] never had one bad [C] food quality [S] great']

task, data: asqp rest16
target: [('restaurant miscellaneous', 'restaurant', 'bad', 'deceptive'), ('restaurant miscellaneous', 'restaurant', 'bad', 'non existent')]
output: ['[A] service [O] non existent [S] bad [C] service general']
sent: ['I', 'went', 'home', '&', 'looked', 'them', 'up', 'online', 'again', 'where', 'I', 'discovered', 'there', 'is', 'a', 'link', 'for', 'a', 'give', 'away', 'that', 'doesn', "'t", 'work', 'so', 'emailed', 'the', 'restaurant', 'about', 'the', 'non', 'existent', 'service', '&', 'deceptive', 'link', '.']
counter: {('service general', 'service', 'bad', 'non existent'): 5}
output quads: ['[A] service [O] non existent [S] bad [C] service general']
multi_path: ['[O] non existent [A] service [C] service general [S] bad', '[A] service [O] non existent [S] bad [C] service general', '[O] non existent [A] service [S] bad [C] service general', '[O] non existent [S] bad [C] service general [A] service', '[A] service [O] non existent [C] service general [S] bad']

task, data: asqp rest16
target: [('food prices', 'plate', 'bad', '100 dollar'), ('food quality', 'exotic fish', 'bad', 'not one was eatable'), ('food style_options', 'exotic fish', 'bad', 'fancy')]
output: ['[A] exotic fish [O] fancy [S] bad [C] food style_options', '[A] exotic fish [O] not one was eatable [S] bad [C] food quality']
sent: ['Fancy', 'pieces', 'of', 'exotic', 'fish', 'on', 'a', '$', '100', 'dollar', 'plate', 'and', 'NOT', 'ONE', 'was', 'eatable', '.']
counter: {('food style_options', 'exotic fish', 'bad', 'fancy'): 5, ('food prices', 'exotic fish', 'bad', 'not one was eatable'): 1, ('food quality', 'exotic fish', 'bad', 'not one was eatable'): 4}
output quads: ['[A] exotic fish [O] fancy [S] bad [C] food style_options', '[A] exotic fish [O] not one was eatable [S] bad [C] food quality']
multi_path: ['[O] fancy [A] exotic fish [C] food style_options [S] bad [SSEP] [O] not one was eatable [A] exotic fish [C] food prices [S] bad', '[A] exotic fish [O] fancy [S] bad [C] food style_options [SSEP] [A] exotic fish [O] not one was eatable [S] bad [C] food quality', '[O] fancy [A] exotic fish [S] bad [C] food style_options [SSEP] [O] not one was eatable [A] exotic fish [S] bad [C] food quality', '[O] fancy [S] bad [C] food style_options [A] exotic fish [SSEP] [O] not one was eatable [S] bad [C] food quality [A] exotic fish', '[A] exotic fish [O] fancy [C] food style_options [S] bad [SSEP] [A] exotic fish [O] not one was eatable [C] food quality [S] bad']

task, data: asqp rest16
target: [('food quality', 'omikase', 'great', "didn't disappoint in freshness"), ('food style_options', 'omikase', 'bad', 'scored low on creativity and selection')]
output: ["[A] omikase [O] didn't disappoint [S] great [C] food quality", '[A] omikase [O] low [S] bad [C] food style_options']
sent: ['As', 'usual', 'the', 'omikase', 'did', "n't", 'disappoint', 'in', 'freshness', ',', 'although', 'it', 'scored', 'low', 'on', 'creativity', 'and', 'selection', '.']
counter: {('food quality', 'omikase', 'great', "didn't disappoint"): 5, ('food style_options', 'omikase', 'bad', 'low'): 5}
output quads: ["[A] omikase [O] didn't disappoint [S] great [C] food quality", '[A] omikase [O] low [S] bad [C] food style_options']
multi_path: ["[O] didn't disappoint [A] omikase [C] food quality [S] great [SSEP] [O] low [A] omikase [C] food style_options [S] bad", "[A] omikase [O] didn't disappoint [S] great [C] food quality [SSEP] [A] omikase [O] low [S] bad [C] food style_options", "[O] didn't disappoint [A] omikase [S] great [C] food quality [SSEP] [O] low [A] omikase [S] bad [C] food style_options", "[O] didn't disappoint [S] great [C] food quality [A] omikase [SSEP] [O] low [S] bad [C] food style_options [A] omikase", "[A] omikase [O] didn't disappoint [C] food quality [S] great [SSEP] [A] omikase [O] low [C] food style_options [S] bad"]

task, data: asqp rest16
target: [('food quality', 'rice', 'bad', 'too dry'), ('food quality', 'tuna', 'bad', "wasn't so fresh")]
output: ['[A] rice [O] dry [S] bad [C] food quality', "[A] tuna [O] wasn't so fresh [S] bad [C] food quality"]
sent: ['Rice', 'is', 'too', 'dry', ',', 'tuna', 'was', "n't", 'so', 'fresh', 'either', '.']
counter: {('food quality', 'rice', 'bad', 'dry'): 5, ('food quality', 'tuna', 'bad', "wasn't so fresh"): 5}
output quads: ['[A] rice [O] dry [S] bad [C] food quality', "[A] tuna [O] wasn't so fresh [S] bad [C] food quality"]
multi_path: ["[O] dry [A] rice [C] food quality [S] bad [SSEP] [O] wasn't so fresh [A] tuna [C] food quality [S] bad", "[A] rice [O] dry [S] bad [C] food quality [SSEP] [A] tuna [O] wasn't so fresh [S] bad [C] food quality", "[O] dry [A] rice [S] bad [C] food quality [SSEP] [O] wasn't so fresh [A] tuna [S] bad [C] food quality", "[O] dry [S] bad [C] food quality [A] rice [SSEP] [O] wasn't so fresh [S] bad [C] food quality [A] tuna", "[A] rice [O] dry [C] food quality [S] bad [SSEP] [A] tuna [O] wasn't so fresh [C] food quality [S] bad"]

task, data: asqp rest16
target: [('food quality', 'crab eggs benedict', 'great', 'addicting')]
output: ['[A] crab eggs benedict [O] addicting [S] bad [C] food quality']
sent: ['Their', 'crab', 'eggs', 'benedict', 'is', 'addicting', '.']
counter: {('food quality', 'crab eggs benedict', 'bad', 'addicting'): 4, ('food quality', 'crab eggs benedict', 'great', 'addicting'): 1}
output quads: ['[A] crab eggs benedict [O] addicting [S] bad [C] food quality']
multi_path: ['[O] addicting [A] crab eggs benedict [C] food quality [S] bad', '[A] crab eggs benedict [O] addicting [S] bad [C] food quality', '[O] addicting [A] crab eggs benedict [S] bad [C] food quality', '[O] addicting [S] great [C] food quality [A] crab eggs benedict', '[A] crab eggs benedict [O] addicting [C] food quality [S] bad']

task, data: asqp rest16
target: [('service general', 'server', 'great', 'professional')]
output: ['[A] server [O] friendly [S] great [C] service general', '[A] server [O] professional [S] great [C] service general']
sent: ['Our', 'server', 'was', 'very', 'professional', 'and', 'friendly', '.']
counter: {('service general', 'server', 'great', 'professional'): 5, ('service general', 'server', 'great', 'friendly'): 5}
output quads: ['[A] server [O] professional [S] great [C] service general', '[A] server [O] friendly [S] great [C] service general']
multi_path: ['[O] professional [A] server [C] service general [S] great [SSEP] [O] friendly [A] server [C] service general [S] great', '[A] server [O] professional [S] great [C] service general [SSEP] [A] server [O] friendly [S] great [C] service general', '[O] professional [A] server [S] great [C] service general [SSEP] [O] friendly [A] server [S] great [C] service general', '[O] professional [S] great [C] service general [A] server [SSEP] [O] friendly [S] great [C] service general [A] server', '[A] server [O] professional [C] service general [S] great [SSEP] [A] server [O] friendly [C] service general [S] great']

task, data: asqp rest16
target: [('restaurant general', 'null', 'great', 'recommendation')]
output: ['[A] null [O] return [S] great [C] restaurant general']
sent: ['I', 'went', 'here', 'on', 'a', 'recommendation', 'and', 'will', 'surely', 'return', 'time', 'and', 'time', 'again', '.']
counter: {('restaurant general', 'null', 'great', 'return'): 5}
output quads: ['[A] null [O] return [S] great [C] restaurant general']
multi_path: ['[O] return [A] it [C] restaurant general [S] great', '[A] it [O] return [S] great [C] restaurant general', '[O] return [A] it [S] great [C] restaurant general', '[O] return [S] great [C] restaurant general [A] it', '[A] it [O] return [C] restaurant general [S] great']

task, data: asqp rest16
target: [('food quality', 'food', 'bad', 'too mild'), ('food quality', 'food', 'great', 'good')]
output: ['[A] food [O] all good [S] great [C] food quality', '[A] food [O] too mild [S] bad [C] food quality']
sent: ['The', 'food', 'was', 'all', 'good', 'but', 'it', 'was', 'way', 'too', 'mild', '.']
counter: {('food quality', 'food', 'great', 'all good'): 5, ('food quality', 'food', 'bad', 'too mild'): 3, ('food quality', 'food', 'bad', 'mild'): 2}
output quads: ['[A] food [O] all good [S] great [C] food quality', '[A] food [O] too mild [S] bad [C] food quality']
multi_path: ['[O] all good [A] food [C] food quality [S] great [SSEP] [O] too mild [A] food [C] food quality [S] bad', '[A] food [O] all good [S] great [C] food quality [SSEP] [A] food [O] mild [S] bad [C] food quality', '[O] all good [A] food [S] great [C] food quality [SSEP] [O] too mild [A] food [S] bad [C] food quality', '[O] all good [S] great [C] food quality [A] food [SSEP] [O] too mild [S] bad [C] food quality [A] food', '[A] food [O] all good [C] food quality [S] great [SSEP] [A] food [O] mild [C] food quality [S] bad']

task, data: asqp rest16
target: [('restaurant general', 'null', 'great', 'great')]
output: ['[A] dining experience [O] great [S] great [C] restaurant general']
sent: ['–', 'This', 'was', 'great', 'dining', 'experience', '.']
counter: {('restaurant general', 'dining experience', 'great', 'great'): 5}
output quads: ['[A] dining experience [O] great [S] great [C] restaurant general']
multi_path: ['[O] great [A] dining experience [C] restaurant general [S] great', '[A] dining experience [O] great [S] great [C] restaurant general', '[O] great [A] dining experience [S] great [C] restaurant general', '[O] great [S] great [C] restaurant general [A] dining experience', '[A] dining experience [O] great [C] restaurant general [S] great']

task, data: asqp rest16
target: [('food style_options', 'null', 'bad', 'hungry'), ('restaurant prices', 'null', 'bad', 'more than $ 40')]
output: ['[A] null [O] spent more than $ 40 per person [S] bad [C] food prices']
sent: ['We', 'easily', 'spent', 'more', 'than', '$', '40', 'per', 'person', '(', 'not', 'including', 'alcohol', ')', 'and', 'were', 'still', 'hungry', '.']
counter: {('food prices', 'null', 'bad', 'spent more than $ 40 per person'): 5}
output quads: ['[A] null [O] spent more than $ 40 per person [S] bad [C] food prices']
multi_path: ['[O] spent more than $ 40 per person [A] it [C] food prices [S] bad', '[A] it [O] spent more than $ 40 per person [S] bad [C] food prices', '[O] spent more than $ 40 per person [A] it [S] bad [C] food prices', '[O] spent more than $ 40 per person [S] bad [C] food prices [A] it', '[A] it [O] spent more than $ 40 per person [C] food prices [S] bad']

task, data: asqp rest16
target: [('food quality', 'null', 'great', 'freshness')]
output: ['[A] null [O] right up there [S] great [C] restaurant quality']
sent: ['This', 'is', 'right', 'up', 'there', 'with', 'places', 'in', 'Tokyo', 'as', 'far', 'as', 'the', 'freshness', 'is', 'concerned', '.']
counter: {('restaurant quality', 'null', 'great', 'right up there'): 5}
output quads: ['[A] null [O] right up there [S] great [C] restaurant quality']
multi_path: ['[O] right up there [A] it [C] restaurant quality [S] great', '[A] it [O] right up there [S] great [C] restaurant quality', '[O] right up there [A] it [S] great [C] restaurant quality', '[O] right up there [S] great [C] restaurant quality [A] it', '[A] it [O] right up there [C] restaurant quality [S] great']

task, data: asqp rest16
target: [('ambience general', 'music', 'great', 'casual')]
output: ['[A] music [O] groovy [S] great [C] ambience general']
sent: ['Groovy', 'music', 'made', 'the', 'dinner', 'casual', '.']
counter: {('ambience general', 'music', 'great', 'groovy'): 5}
output quads: ['[A] music [O] groovy [S] great [C] ambience general']
multi_path: ['[O] groovy [A] music [C] ambience general [S] great', '[A] music [O] groovy [S] great [C] ambience general', '[O] groovy [A] music [S] great [C] ambience general', '[O] groovy [S] great [C] ambience general [A] music', '[A] music [O] groovy [C] ambience general [S] great']

task, data: asqp rest16
target: [('service general', 'waitress', 'bad', 'an abusive rant')]
output: ['[A] waitress [O] abusive rant [S] bad [C] service general']
sent: ['After', 'one', 'member', 'of', 'our', 'party', 'had', 'been', 'bumped', 'repeatedly', 'by', 'a', 'waitress', ',', 'a', 'polite', 'request', 'that', 'he', 'not', 'be', 'bumped', 'sent', 'the', 'waitress', 'into', 'an', 'abusive', 'rant', '.']
counter: {('service general', 'waitress', 'bad', 'abusive rant'): 5}
output quads: ['[A] waitress [O] abusive rant [S] bad [C] service general']
multi_path: ['[O] abusive rant [A] waitress [C] service general [S] bad', '[A] waitress [O] abusive rant [S] bad [C] service general', '[O] abusive rant [A] waitress [S] bad [C] service general', '[O] abusive rant [S] bad [C] service general [A] waitress', '[A] waitress [O] abusive rant [C] service general [S] bad']

task, data: asqp rest16
target: [('drinks style_options', 'wine list', 'great', 'best')]
output: ['[A] wine list [O] best [S] great [C] drinks style_options', '[A] wine list [O] diverse [S] great [C] drinks style_options']
sent: ['–', 'Ray', "'s", '(', 'suprisingly', ')', 'has', 'the', 'city', "'s", 'BEST', '&', 'most', 'diverse', 'wine', 'list', '.']
counter: {('drinks style_options', 'wine list', 'great', 'best'): 5, ('drinks style_options', 'wine list', 'great', 'diverse'): 5}
output quads: ['[A] wine list [O] best [S] great [C] drinks style_options', '[A] wine list [O] diverse [S] great [C] drinks style_options']
multi_path: ['[O] best [A] wine list [C] drinks style_options [S] great [SSEP] [O] diverse [A] wine list [C] drinks style_options [S] great', '[A] wine list [O] best [S] great [C] drinks style_options [SSEP] [A] wine list [O] diverse [S] great [C] drinks style_options', '[O] best [A] wine list [S] great [C] drinks style_options [SSEP] [O] diverse [A] wine list [S] great [C] drinks style_options', '[O] best [S] great [C] drinks style_options [A] wine list [SSEP] [O] diverse [S] great [C] drinks style_options [A] wine list', '[A] wine list [O] best [C] drinks style_options [S] great [SSEP] [A] wine list [O] diverse [C] drinks style_options [S] great']

task, data: asqp rest16
target: [('food quality', 'chips and salsa', 'great', 'yummy'), ('restaurant prices', 'null', 'great', 'fabulous')]
output: ['[A] chips [O] yummy [S] great [C] food quality', '[A] null [O] fabulous [S] great [C] restaurant prices', '[A] salsa [O] yummy [S] great [C] food quality']
sent: ['The', 'chips', 'and', 'salsa', 'are', 'so', 'yummy', ',', 'and', 'the', 'prices', 'are', 'fabulous', '.']
counter: {('food quality', 'chips', 'great', 'yummy'): 5, ('food quality', 'salsa', 'great', 'yummy'): 5, ('restaurant prices', 'null', 'great', 'fabulous'): 5}
output quads: ['[A] chips [O] yummy [S] great [C] food quality', '[A] salsa [O] yummy [S] great [C] food quality', '[A] null [O] fabulous [S] great [C] restaurant prices']
multi_path: ['[O] yummy [A] chips [C] food quality [S] great [SSEP] [O] yummy [A] salsa [C] food quality [S] great [SSEP] [O] fabulous [A] it [C] restaurant prices [S] great', '[A] chips [O] yummy [S] great [C] food quality [SSEP] [A] salsa [O] yummy [S] great [C] food quality [SSEP] [A] it [O] fabulous [S] great [C] restaurant prices', '[O] yummy [A] chips [S] great [C] food quality [SSEP] [O] yummy [A] salsa [S] great [C] food quality [SSEP] [O] fabulous [A] it [S] great [C] restaurant prices', '[O] yummy [S] great [C] food quality [A] chips [SSEP] [O] yummy [S] great [C] food quality [A] salsa [SSEP] [O] fabulous [S] great [C] restaurant prices [A] it', '[A] chips [O] yummy [C] food quality [S] great [SSEP] [A] salsa [O] yummy [C] food quality [S] great [SSEP] [A] it [O] fabulous [C] restaurant prices [S] great']

task, data: asqp rest16
target: [('service general', 'sommelier', 'great', 'down-to-earth'), ('service general', 'sommelier', 'great', 'fantastic')]
output: ['[A] sommelier [O] down-to-earth [S] great [C] service general', '[A] sommelier [O] fantastic [S] great [C] service general', '[A] sommelier [O] knowlegable [S] great [C] service general']
sent: ['The', 'sommelier', 'is', 'fantastic', ',', 'down-to-earth', ',', '&', 'extremely', 'knowlegable', '.']
counter: {('service general', 'sommelier', 'great', 'fantastic'): 5, ('service general', 'sommelier', 'great', 'down-to-earth'): 5, ('service general', 'sommelier', 'great', 'knowlegable'): 5}
output quads: ['[A] sommelier [O] fantastic [S] great [C] service general', '[A] sommelier [O] down-to-earth [S] great [C] service general', '[A] sommelier [O] knowlegable [S] great [C] service general']
multi_path: ['[O] fantastic [A] sommelier [C] service general [S] great [SSEP] [O] down-to-earth [A] sommelier [C] service general [S] great [SSEP] [O] knowlegable [A] sommelier [C] service general [S] great', '[A] sommelier [O] fantastic [S] great [C] service general [SSEP] [A] sommelier [O] down-to-earth [S] great [C] service general [SSEP] [A] sommelier [O] knowlegable [S] great [C] service general', '[O] fantastic [A] sommelier [S] great [C] service general [SSEP] [O] down-to-earth [A] sommelier [S] great [C] service general [SSEP] [O] knowlegable [A] sommelier [S] great [C] service general', '[O] fantastic [S] great [C] service general [A] sommelier [SSEP] [O] down-to-earth [S] great [C] service general [A] sommelier [SSEP] [O] knowlegable [S] great [C] service general [A] sommelier', '[A] sommelier [O] fantastic [C] service general [S] great [SSEP] [A] sommelier [O] down-to-earth [C] service general [S] great [SSEP] [A] sommelier [O] knowlegable [C] service general [S] great']

task, data: asqp rest16
target: [('food style_options', 'pepperoni', 'great', 'big thick')]
output: ['[A] pepperoni [O] big thick [S] great [C] food quality']
sent: ['big', 'thick', 'pepperoni']
counter: {('food quality', 'pepperoni', 'great', 'big thick'): 5}
output quads: ['[A] pepperoni [O] big thick [S] great [C] food quality']
multi_path: ['[O] big thick [A] pepperoni [C] food quality [S] great', '[A] pepperoni [O] big thick [S] great [C] food quality', '[O] big thick [A] pepperoni [S] great [C] food quality', '[O] big thick [S] great [C] food quality [A] pepperoni', '[A] pepperoni [O] big thick [C] food quality [S] great']

task, data: asqp rest16
target: [('restaurant general', 'null', 'bad', 'not worth')]
output: ['[A] null [O] not worth [S] bad [C] restaurant prices', '[A] null [O] not worth going [S] bad [C] restaurant general']
sent: ['It', 'is', 'not', 'worth', 'going', 'at', 'all', 'and', 'spend', 'your', 'money', 'there', '!', '!', '!']
counter: {('restaurant general', 'null', 'bad', 'not worth going'): 5, ('restaurant prices', 'null', 'bad', 'not worth'): 4, ('restaurant prices', 'null', 'bad', 'not worth going'): 1}
output quads: ['[A] null [O] not worth going [S] bad [C] restaurant general', '[A] null [O] not worth [S] bad [C] restaurant prices']
multi_path: ['[O] not worth going [A] it [C] restaurant general [S] bad [SSEP] [O] not worth [A] it [C] restaurant prices [S] bad', '[A] it [O] not worth going [S] bad [C] restaurant general [SSEP] [A] it [O] not worth [S] bad [C] restaurant prices', '[O] not worth going [A] it [S] bad [C] restaurant general [SSEP] [O] not worth going [A] it [S] bad [C] restaurant prices', '[O] not worth going [S] bad [C] restaurant general [A] it [SSEP] [O] not worth [S] bad [C] restaurant prices [A] it', '[A] it [O] not worth going [C] restaurant general [S] bad [SSEP] [A] it [O] not worth [C] restaurant prices [S] bad']

task, data: asqp rest16
target: [('restaurant prices', 'null', 'bad', 'overpriced')]
output: ['[A] null [O] insultingly overpriced [S] bad [C] food prices']
sent: ['Insultingly', 'Overpriced']
counter: {('food prices', 'null', 'bad', 'insultingly overpriced'): 5}
output quads: ['[A] null [O] insultingly overpriced [S] bad [C] food prices']
multi_path: ['[O] insultingly overpriced [A] it [C] food prices [S] bad', '[A] it [O] insultingly overpriced [S] bad [C] food prices', '[O] insultingly overpriced [A] it [S] bad [C] food prices', '[O] insultingly overpriced [S] bad [C] food prices [A] it', '[A] it [O] insultingly overpriced [C] food prices [S] bad']

task, data: asqp rest16
target: [('service general', 'null', 'bad', "don't have bread service")]
output: []
sent: ['Oh', 'I', 'forgot', 'to', 'mention', 'that', 'they', 'do', "n't", 'have', 'bread', 'service', '.']
counter: {('food quality', 'bread service', 'bad', "don't have bread service"): 2, ('service general', 'bread service', 'bad', "don't have"): 2, ('service general', 'bread service', 'bad', "don't have bread service"): 1}
output quads: []
multi_path: ["[O] don't have bread service [A] bread service [C] food quality [S] bad", "[A] bread service [O] don't have [S] bad [C] service general", "[O] don't have bread service [A] bread service [S] bad [C] food quality", "[O] don't have bread service [S] bad [C] service general [A] bread service", "[A] bread service [O] don't have [C] service general [S] bad"]

task, data: asqp rest16
target: [('food quality', 'null', 'great', 'not greasy')]
output: ['[A] null [O] not greasy or anything [S] great [C] food quality']
sent: ['They', 'are', 'not', 'greasy', 'or', 'anything', '.']
counter: {('food quality', 'null', 'great', 'not greasy or anything'): 5}
output quads: ['[A] null [O] not greasy or anything [S] great [C] food quality']
multi_path: ['[O] not greasy or anything [A] it [C] food quality [S] great', '[A] it [O] not greasy or anything [S] great [C] food quality', '[O] not greasy or anything [A] it [S] great [C] food quality', '[O] not greasy or anything [S] great [C] food quality [A] it', '[A] it [O] not greasy or anything [C] food quality [S] great']

task, data: asqp rest16
target: [('ambience general', 'atmosphere', 'great', 'lighthearted'), ('ambience general', 'music', 'great', 'great'), ('drinks style_options', 'bar tenders', 'great', 'generous')]
output: ['[A] atmosphere [O] lighthearted [S] great [C] ambience general', '[A] bar tenders [O] generous [S] great [C] service general', '[A] music [O] great [S] great [C] ambience general']
sent: ['The', 'music', 'is', 'great', ',', 'no', 'night', 'better', 'or', 'worse', ',', 'the', 'bar', 'tenders', 'are', 'generous', 'with', 'the', 'pouring', ',', 'and', 'the', 'lighthearted', 'atmosphere', 'will', 'lifts', 'you', 'spirits', '.']
counter: {('ambience general', 'music', 'great', 'great'): 5, ('service general', 'bar tenders', 'great', 'generous'): 5, ('ambience general', 'atmosphere', 'great', 'lighthearted'): 5}
output quads: ['[A] music [O] great [S] great [C] ambience general', '[A] bar tenders [O] generous [S] great [C] service general', '[A] atmosphere [O] lighthearted [S] great [C] ambience general']
multi_path: ['[O] great [A] music [C] ambience general [S] great [SSEP] [O] generous [A] bar tenders [C] service general [S] great [SSEP] [O] lighthearted [A] atmosphere [C] ambience general [S] great', '[A] music [O] great [S] great [C] ambience general [SSEP] [A] bar tenders [O] generous [S] great [C] service general [SSEP] [A] atmosphere [O] lighthearted [S] great [C] ambience general', '[O] great [A] music [S] great [C] ambience general [SSEP] [O] generous [A] bar tenders [S] great [C] service general [SSEP] [O] lighthearted [A] atmosphere [S] great [C] ambience general', '[O] great [S] great [C] ambience general [A] music [SSEP] [O] generous [S] great [C] service general [A] bar tenders [SSEP] [O] lighthearted [S] great [C] ambience general [A] atmosphere', '[A] music [O] great [C] ambience general [S] great [SSEP] [A] bar tenders [O] generous [C] service general [S] great [SSEP] [A] atmosphere [O] lighthearted [C] ambience general [S] great']

task, data: asqp rest16
target: [('restaurant general', "ray's boathouse", 'great', 'exceeded my expectations')]
output: ['[A] dinner [O] exceeded my expectations [S] great [C] food quality']
sent: ['–', 'I', 'am', 'exceedingly', 'pleased', 'to', 'report', 'that', 'my', 'dinner', 'at', 'Ray', "'s", 'Boathouse', 'last', 'Friday', 'completely', 'exceeded', 'my', 'expectations', '.']
counter: {('food quality', 'dinner', 'great', 'exceeded my expectations'): 5}
output quads: ['[A] dinner [O] exceeded my expectations [S] great [C] food quality']
multi_path: ['[O] exceeded my expectations [A] dinner [C] food quality [S] great', '[A] dinner [O] exceeded my expectations [S] great [C] food quality', '[O] exceeded my expectations [A] dinner [S] great [C] food quality', '[O] exceeded my expectations [S] great [C] food quality [A] dinner', '[A] dinner [O] exceeded my expectations [C] food quality [S] great']

task, data: asqp rest16
target: [('restaurant miscellaneous', 'null', 'bad', 'ackward')]
output: ['[A] null [O] ackward [S] bad [C] ambience general']
sent: ['I', 'felt', 'ackward', 'and', 'next', 'time', 'went', 'to', 'the', 'casino', 'bathroom', '.']
counter: {('ambience general', 'null', 'bad', 'ackward'): 4, ('ambience general', 'casino bathroom', 'bad', 'ackward'): 1}
output quads: ['[A] null [O] ackward [S] bad [C] ambience general']
multi_path: ['[O] ackward [A] it [C] ambience general [S] bad', '[A] it [O] ackward [S] bad [C] ambience general', '[O] ackward [A] it [S] bad [C] ambience general', '[O] ackward [S] bad [C] ambience general [A] casino bathroom', '[A] it [O] ackward [C] ambience general [S] bad']

task, data: asqp rest16
target: [('food prices', 'price fixed pre-show dinner', 'ok', 'fixed')]
output: ['[A] stack [O] eat at stack [S] great [C] restaurant prices']
sent: ['–', 'I', 'decided', 'to', 'eat', 'at', 'Stack', 'because', 'of', 'their', 'price', 'fixed', 'pre-show', 'dinner', '.']
counter: {('restaurant prices', 'null', 'great', 'eat at stack'): 2, ('restaurant prices', 'stack', 'great', 'eat at stack'): 3}
output quads: ['[A] stack [O] eat at stack [S] great [C] restaurant prices']
multi_path: ['[O] eat at stack [A] it [C] restaurant prices [S] great', '[A] stack [O] eat at stack [S] great [C] restaurant prices', '[O] eat at stack [A] it [S] great [C] restaurant prices', '[O] eat at stack [S] great [C] restaurant prices [A] stack', '[A] stack [O] eat at stack [C] restaurant prices [S] great']

task, data: asqp rest16
target: [('service general', 'brooke', 'great', 'lovely')]
output: ['[A] server [O] lovely [S] great [C] service general']
sent: ['To', 'start', 'things', 'off', ',', 'our', 'lovely', 'server', 'Brooke', 'was', 'quickly', 'on', 'hand', 'to', 'take', 'my', 'drink', 'order', '.']
counter: {('service general', 'server', 'great', 'lovely'): 5, ('service general', 'server', 'great', 'quickly'): 1}
output quads: ['[A] server [O] lovely [S] great [C] service general']
multi_path: ['[O] lovely [A] server [C] service general [S] great', '[A] server [O] lovely [S] great [C] service general', '[O] lovely [A] server [S] great [C] service general', '[O] lovely [S] great [C] service general [A] server [SSEP] [O] quickly [S] great [C] service general [A] server', '[A] server [O] lovely [C] service general [S] great']

task, data: asqp rest16
target: [('service general', 'bartender', 'great', 'buys everyone drinks')]
output: ['[A] bartender [O] buys everyone drinks [S] bad [C] service general']
sent: ['Every', 'time', '``', '0-sixtynine', '``', 'is', 'called', 'the', 'bartender', 'buys', 'everyone', 'drinks', '!']
counter: {('service general', 'bartender', 'bad', 'buys everyone drinks'): 5}
output quads: ['[A] bartender [O] buys everyone drinks [S] bad [C] service general']
multi_path: ['[O] buys everyone drinks [A] bartender [C] service general [S] bad', '[A] bartender [O] buys everyone drinks [S] bad [C] service general', '[O] buys everyone drinks [A] bartender [S] bad [C] service general', '[O] buys everyone drinks [S] bad [C] service general [A] bartender', '[A] bartender [O] buys everyone drinks [C] service general [S] bad']

task, data: asqp rest16
target: [('ambience general', 'music', 'great', 'awesome'), ('restaurant general', 'null', 'great', 'fun'), ('service general', 'staff', 'great', 'great')]
output: ['[A] music [O] awesome [S] great [C] ambience general', '[A] null [O] endless fun [S] great [C] ambience general', '[A] staff [O] great [S] great [C] service general']
sent: ['Endless', 'fun', ',', 'awesome', 'music', ',', 'great', 'staff', '!', '!', '!']
counter: {('ambience general', 'null', 'great', 'endless fun'): 5, ('ambience general', 'music', 'great', 'awesome'): 5, ('service general', 'staff', 'great', 'great'): 5}
output quads: ['[A] null [O] endless fun [S] great [C] ambience general', '[A] music [O] awesome [S] great [C] ambience general', '[A] staff [O] great [S] great [C] service general']
multi_path: ['[O] endless fun [A] it [C] ambience general [S] great [SSEP] [O] awesome [A] music [C] ambience general [S] great [SSEP] [O] great [A] staff [C] service general [S] great', '[A] it [O] endless fun [S] great [C] ambience general [SSEP] [A] music [O] awesome [S] great [C] ambience general [SSEP] [A] staff [O] great [S] great [C] service general', '[O] endless fun [A] it [S] great [C] ambience general [SSEP] [O] awesome [A] music [S] great [C] ambience general [SSEP] [O] great [A] staff [S] great [C] service general', '[O] endless fun [S] great [C] ambience general [A] it [SSEP] [O] awesome [S] great [C] ambience general [A] music [SSEP] [O] great [S] great [C] service general [A] staff', '[A] it [O] endless fun [C] ambience general [S] great [SSEP] [A] music [O] awesome [C] ambience general [S] great [SSEP] [A] staff [O] great [C] service general [S] great']

task, data: asqp rest16
target: [('food style_options', 'menu selection', 'ok', 'fair')]
output: ['[A] menu selection [O] fair [S] great [C] food style_options']
sent: ['Fair', 'menu', 'selection', '.']
counter: {('food style_options', 'menu selection', 'great', 'fair'): 5}
output quads: ['[A] menu selection [O] fair [S] great [C] food style_options']
multi_path: ['[O] fair [A] menu selection [C] food style_options [S] great', '[A] menu selection [O] fair [S] great [C] food style_options', '[O] fair [A] menu selection [S] great [C] food style_options', '[O] fair [S] great [C] food style_options [A] menu selection', '[A] menu selection [O] fair [C] food style_options [S] great']

task, data: asqp rest16
target: [('restaurant miscellaneous', 'null', 'bad', 'rascally')]
output: ['[A] preteen [O] delightful [S] bad [C] service general']
sent: ['Two', 'rascally', 'kids', 'were', 'seated', 'near', 'us', 'for', 'the', 'first', 'part', 'of', 'our', 'dinner', '...', 'they', 'were', 'replaced', 'by', 'a', 'delightful', 'preteen', 'who', 'pretended', 'to', 'gag', 'every', 'time', 'seafood', 'was', 'mentioned', 'at', 'her', 'table', '.']
counter: {('service general', 'preteen', 'bad', 'delightful'): 5}
output quads: ['[A] preteen [O] delightful [S] bad [C] service general']
multi_path: ['[O] delightful [A] preteen [C] service general [S] bad', '[A] preteen [O] delightful [S] bad [C] service general', '[O] delightful [A] preteen [S] bad [C] service general', '[O] delightful [S] bad [C] service general [A] preteen', '[A] preteen [O] delightful [C] service general [S] bad']

task, data: asqp rest16
target: [('food quality', 'dish', 'bad', 'rejected')]
output: ['[A] eggs [O] frustrated [S] bad [C] food quality', '[A] null [O] rejected [S] bad [C] restaurant general']
sent: ['I', 'rejected', 'it', 'because', 'in', 'the', 'process', 'of', 'attempting', 'to', 'fix', 'the', 'eggs', 'they', 'broke', 'something', 'else', 'in', 'the', 'dish', 'and', 'I', 'was', 'too', 'frustrated', 'to', 'continue', '.']
counter: {('restaurant general', 'null', 'bad', 'rejected'): 4, ('food quality', 'eggs', 'bad', 'frustrated'): 5, ('food quality', 'null', 'bad', 'rejected'): 1}
output quads: ['[A] null [O] rejected [S] bad [C] restaurant general', '[A] eggs [O] frustrated [S] bad [C] food quality']
multi_path: ['[O] rejected [A] it [C] restaurant general [S] bad [SSEP] [O] frustrated [A] eggs [C] food quality [S] bad', '[A] it [O] rejected [S] bad [C] restaurant general [SSEP] [A] eggs [O] frustrated [S] bad [C] food quality', '[O] rejected [A] it [S] bad [C] restaurant general [SSEP] [O] frustrated [A] eggs [S] bad [C] food quality', '[O] rejected [S] bad [C] food quality [A] it [SSEP] [O] frustrated [S] bad [C] food quality [A] eggs', '[A] it [O] rejected [C] restaurant general [S] bad [SSEP] [A] eggs [O] frustrated [C] food quality [S] bad']

task, data: asqp rest16
target: [('food quality', 'lobster 3 ways', 'great', 'best')]
output: ['[A] dishes [O] many [S] great [C] food style_options', '[A] lobster 3 ways [O] best [S] great [C] food quality']
sent: ['had', 'many', 'dishes', 'but', 'the', 'BEST', 'was', 'the', 'lobster', '3', 'ways', '.']
counter: {('food style_options', 'dishes', 'great', 'many'): 5, ('food quality', 'lobster 3 ways', 'great', 'best'): 5}
output quads: ['[A] dishes [O] many [S] great [C] food style_options', '[A] lobster 3 ways [O] best [S] great [C] food quality']
multi_path: ['[O] many [A] dishes [C] food style_options [S] great [SSEP] [O] best [A] lobster 3 ways [C] food quality [S] great', '[A] dishes [O] many [S] great [C] food style_options [SSEP] [A] lobster 3 ways [O] best [S] great [C] food quality', '[O] many [A] dishes [S] great [C] food style_options [SSEP] [O] best [A] lobster 3 ways [S] great [C] food quality', '[O] many [S] great [C] food style_options [A] dishes [SSEP] [O] best [S] great [C] food quality [A] lobster 3 ways', '[A] dishes [O] many [C] food style_options [S] great [SSEP] [A] lobster 3 ways [O] best [C] food quality [S] great']

task, data: asqp rest16
target: [('ambience general', 'decor', 'great', 'beautiful')]
output: ['[A] decor [O] beautiful [S] great [C] ambience general', '[A] decor [O] unique [S] great [C] ambience general']
sent: ['The', 'decor', 'was', 'beautiful', 'and', 'unique', '.']
counter: {('ambience general', 'decor', 'great', 'beautiful'): 5, ('ambience general', 'decor', 'great', 'unique'): 5}
output quads: ['[A] decor [O] beautiful [S] great [C] ambience general', '[A] decor [O] unique [S] great [C] ambience general']
multi_path: ['[O] beautiful [A] decor [C] ambience general [S] great [SSEP] [O] unique [A] decor [C] ambience general [S] great', '[A] decor [O] beautiful [S] great [C] ambience general [SSEP] [A] decor [O] unique [S] great [C] ambience general', '[O] beautiful [A] decor [S] great [C] ambience general [SSEP] [O] unique [A] decor [S] great [C] ambience general', '[O] beautiful [S] great [C] ambience general [A] decor [SSEP] [O] unique [S] great [C] ambience general [A] decor', '[A] decor [O] beautiful [C] ambience general [S] great [SSEP] [A] decor [O] unique [C] ambience general [S] great']

task, data: asqp rest16
target: [('restaurant general', 'null', 'great', 'addicting')]
output: ['[A] null [O] addicting [S] great [C] food quality']
sent: ['Addicting', '!']
counter: {('food quality', 'null', 'great', 'addicting'): 5}
output quads: ['[A] null [O] addicting [S] great [C] food quality']
multi_path: ['[O] addicting [A] it [C] food quality [S] great', '[A] it [O] addicting [S] great [C] food quality', '[O] addicting [A] it [S] great [C] food quality', '[O] addicting [S] great [C] food quality [A] it', '[A] it [O] addicting [C] food quality [S] great']

task, data: asqp rest16
target: [('restaurant general', 'null', 'great', 'huge compliment')]
output: ['[A] null [O] compliment [S] great [C] restaurant general']
sent: ['That', "'s", 'a', 'huge', 'compliment', ',', 'especially', 'in', 'the', 'fickled', 'restaurant', 'business', ',', '...', 'enough', 'already', '!']
counter: {('restaurant general', 'null', 'great', 'compliment'): 3, ('restaurant general', 'null', 'great', 'huge compliment'): 2}
output quads: ['[A] null [O] compliment [S] great [C] restaurant general']
multi_path: ['[O] compliment [A] it [C] restaurant general [S] great', '[A] it [O] huge compliment [S] great [C] restaurant general', '[O] compliment [A] it [S] great [C] restaurant general', '[O] compliment [S] great [C] restaurant general [A] it', '[A] it [O] huge compliment [C] restaurant general [S] great']

task, data: asqp rest16
target: [('service general', 'null', 'bad', 'left')]
output: ['[A] glass [O] empty [S] bad [C] drinks style_options']
sent: ['After', 'sitting', 'there', 'with', 'my', 'empty', 'glass', 'for', 'over', '20', 'minutes', 'I', 'left', '.']
counter: {('drinks style_options', 'glass', 'bad', 'empty'): 5}
output quads: ['[A] glass [O] empty [S] bad [C] drinks style_options']
multi_path: ['[O] empty [A] glass [C] drinks style_options [S] bad', '[A] glass [O] empty [S] bad [C] drinks style_options', '[O] empty [A] glass [S] bad [C] drinks style_options', '[O] empty [S] bad [C] drinks style_options [A] glass', '[A] glass [O] empty [C] drinks style_options [S] bad']

task, data: asqp rest16
target: [('restaurant prices', 'restaurant', 'bad', 'astonished')]
output: ['[A] null [O] categorized as $ $ $ rather than $ $ $ $ [S] null [C] null']
sent: ['I', "'m", 'astonished', 'that', 'this', 'restaurant', 'is', 'categorized', 'as', '$', '$', '$', 'rather', 'than', '$', '$', '$', '$', '.']
counter: {('null', 'null', 'null', 'categorized as $ $ $ rather than $ $ $ $'): 3, ('null', 'restaurant', 'null', 'categorized as $ $ $ rather than $ $ $ $'): 2}
output quads: ['[A] null [O] categorized as $ $ $ rather than $ $ $ $ [S] null [C] null']
multi_path: ['[O] categorized as $ $ $ rather than $ $ $ $', '[A] restaurant [O] categorized as $ $ $ rather than $ $ $ $', '[O] categorized as $ $ $ rather than $ $ $ $', '[O] categorized as $ $ $ rather than $ $ $ $', '[A] restaurant [O] categorized as $ $ $ rather than $ $ $ $']

task, data: asqp rest16
target: [('food quality', 'null', 'ok', 'nothing exceptional')]
output: ['[A] null [O] decent [S] ok [C] food quality', '[A] null [O] nothing exceptional [S] ok [C] food quality']
sent: ['It', 'was', 'decent', 'but', 'nothing', 'exceptional', '.']
counter: {('food quality', 'null', 'ok', 'decent'): 5, ('food quality', 'null', 'ok', 'nothing exceptional'): 5}
output quads: ['[A] null [O] decent [S] ok [C] food quality', '[A] null [O] nothing exceptional [S] ok [C] food quality']
multi_path: ['[O] decent [A] it [C] food quality [S] ok [SSEP] [O] nothing exceptional [A] it [C] food quality [S] ok', '[A] it [O] decent [S] ok [C] food quality [SSEP] [A] it [O] nothing exceptional [S] ok [C] food quality', '[O] decent [A] it [S] ok [C] food quality [SSEP] [O] nothing exceptional [A] it [S] ok [C] food quality', '[O] decent [S] ok [C] food quality [A] it [SSEP] [O] nothing exceptional [S] ok [C] food quality [A] it', '[A] it [O] decent [C] food quality [S] ok [SSEP] [A] it [O] nothing exceptional [C] food quality [S] ok']

task, data: asqp rest16
target: [('service general', 'service', 'bad', 'slow'), ('service general', 'waitress', 'bad', 'took forever')]
output: ['[A] service [O] slow [S] bad [C] service general']
sent: ['Service', 'was', 'kind', 'of', 'slow', ',', 'our', 'waitress', 'took', 'forever', 'to', 'give', 'us', 'our', 'check', 'even', 'though', 'it', 'was', "n't", 'that', 'busy', '.']
counter: {('service general', 'service', 'bad', 'slow'): 5}
output quads: ['[A] service [O] slow [S] bad [C] service general']
multi_path: ['[O] slow [A] service [C] service general [S] bad', '[A] service [O] slow [S] bad [C] service general', '[O] slow [A] service [S] bad [C] service general', '[O] slow [S] bad [C] service general [A] service', '[A] service [O] slow [C] service general [S] bad']

task, data: asqp rest16
target: [('drinks quality', 'coffee', 'great', 'great'), ('drinks quality', 'drinks', 'great', 'great'), ('food quality', 'b fast burritos', 'great', 'great'), ('food quality', 'corn beef hash', 'great', 'great'), ('food style_options', 'menu', 'great', 'great')]
output: ['[A] b fast burritos [O] great [S] great [C] food quality', '[A] coffee [O] great [S] great [C] drinks quality', '[A] corn beef hash [O] great [S] great [C] food quality', '[A] drinks [O] great [S] great [C] drinks quality', '[A] menu [O] gluten free [S] great [C] food quality']
sent: ['–', 'Great', 'drinks', ',', 'corn', 'beef', 'hash', ',', 'coffee', ',', 'B', 'Fast', 'burritos', ',', 'Gluten', 'Free', 'menu', '.']
counter: {('drinks quality', 'drinks', 'great', 'great'): 5, ('food quality', 'corn beef hash', 'great', 'great'): 5, ('drinks quality', 'coffee', 'great', 'great'): 5, ('food quality', 'b fast burritos', 'great', 'great'): 5, ('food quality', 'menu', 'great', 'gluten free'): 3, ('food quality', 'gluten free menu', 'great', 'gluten free'): 2}
output quads: ['[A] drinks [O] great [S] great [C] drinks quality', '[A] corn beef hash [O] great [S] great [C] food quality', '[A] coffee [O] great [S] great [C] drinks quality', '[A] b fast burritos [O] great [S] great [C] food quality', '[A] menu [O] gluten free [S] great [C] food quality']
multi_path: ['[O] great [A] drinks [C] drinks quality [S] great [SSEP] [O] great [A] corn beef hash [C] food quality [S] great [SSEP] [O] great [A] coffee [C] drinks quality [S] great [SSEP] [O] great [A] b fast burritos [C] food quality [S] great [SSEP] [O] gluten free [A] menu [C] food quality [S] great', '[A] drinks [O] great [S] great [C] drinks quality [SSEP] [A] corn beef hash [O] great [S] great [C] food quality [SSEP] [A] coffee [O] great [S] great [C] drinks quality [SSEP] [A] b fast burritos [O] great [S] great [C] food quality [SSEP] [A] gluten free menu [O] gluten free [S] great [C] food quality', '[O] great [A] drinks [S] great [C] drinks quality [SSEP] [O] great [A] corn beef hash [S] great [C] food quality [SSEP] [O] great [A] coffee [S] great [C] drinks quality [SSEP] [O] great [A] b fast burritos [S] great [C] food quality [SSEP] [O] gluten free [A] menu [S] great [C] food quality', '[O] great [S] great [C] drinks quality [A] drinks [SSEP] [O] great [S] great [C] food quality [A] corn beef hash [SSEP] [O] great [S] great [C] drinks quality [A] coffee [SSEP] [O] great [S] great [C] food quality [A] b fast burritos [SSEP] [O] gluten free [S] great [C] food quality [A] menu', '[A] drinks [O] great [C] drinks quality [S] great [SSEP] [A] corn beef hash [O] great [C] food quality [S] great [SSEP] [A] coffee [O] great [C] drinks quality [S] great [SSEP] [A] b fast burritos [O] great [C] food quality [S] great [SSEP] [A] gluten free menu [O] gluten free [C] food quality [S] great']

task, data: asqp rest16
target: [('food prices', 'lunch menu', 'great', 'awesome')]
output: ['[A] lunch menu [O] awesome deal [S] great [C] food prices']
sent: ['The', 'lunch', 'menu', 'is', 'an', 'awesome', 'deal', '!']
counter: {('food prices', 'lunch menu', 'great', 'awesome deal'): 5}
output quads: ['[A] lunch menu [O] awesome deal [S] great [C] food prices']
multi_path: ['[O] awesome deal [A] lunch menu [C] food prices [S] great', '[A] lunch menu [O] awesome deal [S] great [C] food prices', '[O] awesome deal [A] lunch menu [S] great [C] food prices', '[O] awesome deal [S] great [C] food prices [A] lunch menu', '[A] lunch menu [O] awesome deal [C] food prices [S] great']

task, data: asqp rest16
target: [('service general', 'null', 'bad', 'forever')]
output: ['[A] null [O] fast [S] bad [C] service general', '[A] null [O] forever [S] bad [C] service general', '[A] water refills [O] too much [S] bad [C] drinks prices']
sent: ['Took', 'forever', 'to', 'get', 'our', 'order', 'taken', ',', 'water', 'refills', 'were', 'too', 'much', 'to', 'ask', 'for', 'and', 'the', 'only', 'time', 'she', 'was', 'fast', 'was', 'when', 'we', 'asked', 'for', 'our', 'bill', 'when', 'we', 'could', 'get', 'her', 'attention', '.']
counter: {('service general', 'null', 'bad', 'forever'): 5, ('drinks prices', 'water refills', 'bad', 'too much'): 3, ('service general', 'null', 'bad', 'fast'): 4, ('drinks prices', 'water refills', 'bad', 'too much to ask for'): 2, ('service general', 'null', 'great', 'fast'): 1}
output quads: ['[A] null [O] forever [S] bad [C] service general', '[A] water refills [O] too much [S] bad [C] drinks prices', '[A] null [O] fast [S] bad [C] service general']
multi_path: ['[O] forever [A] it [C] service general [S] bad [SSEP] [O] too much [A] water refills [C] drinks prices [S] bad [SSEP] [O] fast [A] it [C] service general [S] bad', '[A] it [O] forever [S] bad [C] service general [SSEP] [A] water refills [O] too much to ask for [S] bad [C] drinks prices [SSEP] [A] it [O] fast [S] great [C] service general', '[O] forever [A] it [S] bad [C] service general [SSEP] [O] too much [A] water refills [S] bad [C] drinks prices [SSEP] [O] fast [A] it [S] bad [C] service general', '[O] forever [S] bad [C] service general [A] it [SSEP] [O] too much [S] bad [C] drinks prices [A] water refills [SSEP] [O] fast [S] bad [C] service general [A] it', '[A] it [O] forever [C] service general [S] bad [SSEP] [A] water refills [O] too much to ask for [C] drinks prices [S] bad [SSEP] [A] it [O] fast [C] service general [S] bad']

task, data: asqp rest16
target: [('ambience general', 'feel', 'bad', 'crowded'), ('service general', 'waiter', 'bad', 'unfriendly')]
output: ['[A] waiter [O] unfriendly [S] bad [C] service general']
sent: ['The', 'waiter', 'was', 'a', 'bit', 'unfriendly', 'and', 'the', 'feel', 'of', 'the', 'restaurant', 'was', 'crowded', '.']
counter: {('service general', 'waiter', 'bad', 'unfriendly'): 5, ('ambience general', 'feel of the restaurant', 'bad', 'crowded'): 2}
output quads: ['[A] waiter [O] unfriendly [S] bad [C] service general']
multi_path: ['[O] unfriendly [A] waiter [C] service general [S] bad', '[A] waiter [O] unfriendly [S] bad [C] service general [SSEP] [A] feel of the restaurant [O] crowded [S] bad [C] ambience general', '[O] unfriendly [A] waiter [S] bad [C] service general', '[O] unfriendly [S] bad [C] service general [A] waiter [SSEP] [O] crowded [S] bad [C] ambience general [A] feel of the restaurant', '[A] waiter [O] unfriendly [C] service general [S] bad']

task, data: asqp rest16
target: [('restaurant general', 'restaurant', 'great', 'delightful')]
output: ['[A] restaurant [O] delightful [S] great [C] restaurant general', '[A] restaurant [O] great [S] great [C] restaurant general']
sent: ['–', 'I', 'recently', 'had', 'the', 'pleasure', 'of', 'dining', 'as', 'this', 'delightful', 'restaurant', 'on', '2nd', 'street', 'and', 'wow', 'what', 'a', 'great', 'evening', 'we', 'had', '.']
counter: {('restaurant general', 'restaurant', 'great', 'delightful'): 5, ('restaurant general', 'restaurant', 'great', 'great'): 5}
output quads: ['[A] restaurant [O] delightful [S] great [C] restaurant general', '[A] restaurant [O] great [S] great [C] restaurant general']
multi_path: ['[O] delightful [A] restaurant [C] restaurant general [S] great [SSEP] [O] great [A] restaurant [C] restaurant general [S] great', '[A] restaurant [O] delightful [S] great [C] restaurant general [SSEP] [A] restaurant [O] great [S] great [C] restaurant general', '[O] delightful [A] restaurant [S] great [C] restaurant general [SSEP] [O] great [A] restaurant [S] great [C] restaurant general', '[O] delightful [S] great [C] restaurant general [A] restaurant [SSEP] [O] great [S] great [C] restaurant general [A] restaurant', '[A] restaurant [O] delightful [C] restaurant general [S] great [SSEP] [A] restaurant [O] great [C] restaurant general [S] great']

task, data: asqp rest16
target: [('food quality', 'pancakes', 'great', 'decadent')]
output: ['[A] decadent pancakes [O] decadent [S] great [C] food quality']
sent: ['The', 'specialty', 'here', 'is', 'decadent', 'pancakes', ',', 'but', 'I', "'ve", 'been', 'back', 'now', 'four', 'times', ',', 'and', 'I', "'ve", 'been', 'wowed', 'every', 'time', '.']
counter: {('food quality', 'decadent pancakes', 'great', 'decadent'): 3, ('food quality', 'decadent pancakes', 'great', 'specialty'): 2, ('restaurant general', 'null', 'great', 'wowed'): 2}
output quads: ['[A] decadent pancakes [O] decadent [S] great [C] food quality']
multi_path: ['[O] decadent [A] decadent pancakes [C] food quality [S] great', '[A] decadent pancakes [O] specialty [S] great [C] food quality [SSEP] [A] it [O] wowed [S] great [C] restaurant general', '[O] decadent [A] decadent pancakes [S] great [C] food quality', '[O] decadent [S] great [C] food quality [A] decadent pancakes', '[A] decadent pancakes [O] specialty [C] food quality [S] great [SSEP] [A] it [O] wowed [C] restaurant general [S] great']

task, data: asqp rest16
target: [('location general', 'null', 'great', 'downtown'), ('restaurant prices', 'null', 'great', 'cheap')]
output: ['[A] null [O] cheap [S] great [C] restaurant prices']
sent: ['–', 'Pretty', 'cheap', 'for', 'sit', 'down', 'Mexican', 'AND', 'downtown', '.']
counter: {('restaurant prices', 'null', 'great', 'cheap'): 5}
output quads: ['[A] null [O] cheap [S] great [C] restaurant prices']
multi_path: ['[O] cheap [A] it [C] restaurant prices [S] great', '[A] it [O] cheap [S] great [C] restaurant prices', '[O] cheap [A] it [S] great [C] restaurant prices', '[O] cheap [S] great [C] restaurant prices [A] it', '[A] it [O] cheap [C] restaurant prices [S] great']

task, data: asqp rest16
target: [('food quality', 'appetizer of oysters, lobster, crab ( small size )', 'great', 'perfect')]
output: ['[A] appetizer of oysters [O] perfect [S] great [C] food quality', '[A] crab ( small size ) [O] perfect [S] great [C] food quality', '[A] lobster [O] perfect [S] great [C] food quality']
sent: ['The', 'appetizer', 'of', 'oysters', ',', 'lobster', ',', 'crab', '(', 'small', 'size', ')', 'made', 'a', 'perfect', 'entre', 'for', 'my', 'wife', '.']
counter: {('food quality', 'appetizer of oysters', 'great', 'perfect'): 5, ('food quality', 'lobster', 'great', 'perfect'): 5, ('food quality', 'crab ( small size )', 'great', 'perfect'): 4, ('food quality', 'crab ( small size', 'great', 'perfect'): 1}
output quads: ['[A] appetizer of oysters [O] perfect [S] great [C] food quality', '[A] lobster [O] perfect [S] great [C] food quality', '[A] crab ( small size ) [O] perfect [S] great [C] food quality']
multi_path: ['[O] perfect [A] appetizer of oysters [C] food quality [S] great [SSEP] [O] perfect [A] lobster [C] food quality [S] great [SSEP] [O] perfect [A] crab ( small size ) [C] food quality [S] great', '[A] appetizer of oysters [O] perfect [S] great [C] food quality [SSEP] [A] lobster [O] perfect [S] great [C] food quality [SSEP] [A] crab ( small size ) [O] perfect [S] great [C] food quality', '[O] perfect [A] appetizer of oysters [S] great [C] food quality [SSEP] [O] perfect [A] lobster [S] great [C] food quality [SSEP] [O] perfect [A] crab ( small size ) [S] great [C] food quality', '[O] perfect [S] great [C] food quality [A] appetizer of oysters [SSEP] [O] perfect [S] great [C] food quality [A] lobster [SSEP] [O] perfect [S] great [C] food quality [A] crab ( small size', '[A] appetizer of oysters [O] perfect [C] food quality [S] great [SSEP] [A] lobster [O] perfect [C] food quality [S] great [SSEP] [A] crab ( small size ) [O] perfect [C] food quality [S] great']

task, data: asqp rest16
target: [('restaurant miscellaneous', 'place', 'great', "can't wait to celebrate")]
output: ['[A] place [O] can have the place to yourself [S] great [C] restaurant miscellaneous']
sent: ['I', 'just', 'found', 'out', 'that', 'you', 'can', 'have', 'the', 'place', 'to', 'yourself', 'on', 'nights', 'and', 'weekends', 'for', 'a', 'private', 'party', '-', 'ca', "n't", 'wait', 'to', 'celebrate', 'my', 'next', 'birthday', 'there', '.']
counter: {('restaurant miscellaneous', 'place', 'great', 'can have the place to yourself'): 5}
output quads: ['[A] place [O] can have the place to yourself [S] great [C] restaurant miscellaneous']
multi_path: ['[O] can have the place to yourself [A] place [C] restaurant miscellaneous [S] great', '[A] place [O] can have the place to yourself [S] great [C] restaurant miscellaneous', '[O] can have the place to yourself [A] place [S] great [C] restaurant miscellaneous', '[O] can have the place to yourself [S] great [C] restaurant miscellaneous [A] place', '[A] place [O] can have the place to yourself [C] restaurant miscellaneous [S] great']

task, data: asqp rest16
target: [('ambience general', 'null', 'great', 'overbearing'), ('ambience general', 'null', 'great', 'pleasant')]
output: ['[A] null [O] pleasant [S] great [C] ambience general']
sent: ['You', 'can', 'easily', 'hear', 'him', 'though', 'so', 'it', 'was', 'a', 'pleasant', 'sound', 'and', 'not', 'overbearing', '.']
counter: {('ambience general', 'null', 'great', 'pleasant'): 5}
output quads: ['[A] null [O] pleasant [S] great [C] ambience general']
multi_path: ['[O] pleasant [A] it [C] ambience general [S] great', '[A] it [O] pleasant [S] great [C] ambience general', '[O] pleasant [A] it [S] great [C] ambience general', '[O] pleasant [S] great [C] ambience general [A] it', '[A] it [O] pleasant [C] ambience general [S] great']

task, data: asqp rest16
target: [('restaurant general', 'null', 'great', 'just go')]
output: ['[A] null [O] go there [S] great [C] restaurant general']
sent: ['Just', 'go', 'there', 'and', 'see', 'for', 'yourself', '.']
counter: {('restaurant general', 'null', 'great', 'go there'): 3, ('restaurant general', 'null', 'great', 'go and see for yourself'): 2}
output quads: ['[A] null [O] go there [S] great [C] restaurant general']
multi_path: ['[O] go there [A] it [C] restaurant general [S] great', '[A] it [O] go and see for yourself [S] great [C] restaurant general', '[O] go there [A] it [S] great [C] restaurant general', '[O] go there [S] great [C] restaurant general [A] it', '[A] it [O] go and see for yourself [C] restaurant general [S] great']

task, data: asqp rest16
target: [('restaurant general', 'place', 'great', 'great little'), ('service general', 'service', 'bad', 'corporate-like'), ('service general', 'service', 'bad', 'impersonal')]
output: ['[A] place [O] great little [S] great [C] restaurant miscellaneous', '[A] service [O] corporate-like [S] great [C] service general', '[A] service [O] impersonal [S] great [C] service general']
sent: ['It', "'s", 'a', 'great', 'little', 'place', 'with', 'tons', 'of', 'potential', 'to', 'be', 'a', 'neighborhood', 'joint', 'if', 'the', 'service', 'were', "n't", 'so', 'impersonal', 'and', 'corporate-like', '.']
counter: {('restaurant miscellaneous', 'place', 'great', 'great little'): 5, ('service general', 'service', 'great', 'impersonal'): 5, ('service general', 'service', 'great', 'corporate-like'): 5}
output quads: ['[A] place [O] great little [S] great [C] restaurant miscellaneous', '[A] service [O] impersonal [S] great [C] service general', '[A] service [O] corporate-like [S] great [C] service general']
multi_path: ['[O] great little [A] place [C] restaurant miscellaneous [S] great [SSEP] [O] impersonal [A] service [C] service general [S] great [SSEP] [O] corporate-like [A] service [C] service general [S] great', '[A] place [O] great little [S] great [C] restaurant miscellaneous [SSEP] [A] service [O] impersonal [S] great [C] service general [SSEP] [A] service [O] corporate-like [S] great [C] service general', '[O] great little [A] place [S] great [C] restaurant miscellaneous [SSEP] [O] impersonal [A] service [S] great [C] service general [SSEP] [O] corporate-like [A] service [S] great [C] service general', '[O] great little [S] great [C] restaurant miscellaneous [A] place [SSEP] [O] impersonal [S] great [C] service general [A] service [SSEP] [O] corporate-like [S] great [C] service general [A] service', '[A] place [O] great little [C] restaurant miscellaneous [S] great [SSEP] [A] service [O] impersonal [C] service general [S] great [SSEP] [A] service [O] corporate-like [C] service general [S] great']

task, data: asqp rest16
target: [('location general', 'null', 'ok', 'tucked away')]
output: ['[A] null [O] tucked away [S] great [C] location general']
sent: ['–', 'tucked', 'away', 'over', 'by', 'the', 'Beverly', 'Center', '.']
counter: {('location general', 'null', 'great', 'tucked away'): 5}
output quads: ['[A] null [O] tucked away [S] great [C] location general']
multi_path: ['[O] tucked away [A] it [C] location general [S] great', '[A] it [O] tucked away [S] great [C] location general', '[O] tucked away [A] it [S] great [C] location general', '[O] tucked away [S] great [C] location general [A] it', '[A] it [O] tucked away [C] location general [S] great']

task, data: asqp rest16
target: [('service general', 'service', 'great', 'spendid')]
output: ['[A] service [O] delight [S] great [C] service general', '[A] service [O] spendid [S] great [C] service general']
sent: ['And', 'the', 'service', 'was', 'simply', 'spendid', '-', 'quite', 'a', 'delight', '.']
counter: {('service general', 'service', 'great', 'spendid'): 5, ('service general', 'service', 'great', 'delight'): 5}
output quads: ['[A] service [O] spendid [S] great [C] service general', '[A] service [O] delight [S] great [C] service general']
multi_path: ['[O] spendid [A] service [C] service general [S] great [SSEP] [O] delight [A] service [C] service general [S] great', '[A] service [O] spendid [S] great [C] service general [SSEP] [A] service [O] delight [S] great [C] service general', '[O] spendid [A] service [S] great [C] service general [SSEP] [O] delight [A] service [S] great [C] service general', '[O] spendid [S] great [C] service general [A] service [SSEP] [O] delight [S] great [C] service general [A] service', '[A] service [O] spendid [C] service general [S] great [SSEP] [A] service [O] delight [C] service general [S] great']

task, data: asqp rest16
target: [('food quality', 'food', 'great', 'amazing'), ('service general', 'people', 'great', 'nice')]
output: ['[A] food [O] amazing [S] great [C] food quality']
sent: ['WHAT', 'ELSE', 'CAN', 'YOU', 'SAY', 'NICE', 'PEOPLE', 'AMAZING', 'FOOD', 'WOW']
counter: {('food quality', 'food', 'great', 'amazing'): 5, ('service general', 'people', 'great', 'nice people'): 1}
output quads: ['[A] food [O] amazing [S] great [C] food quality']
multi_path: ['[O] amazing [A] food [C] food quality [S] great', '[A] food [O] amazing [S] great [C] food quality', '[O] amazing [A] food [S] great [C] food quality', '[O] nice people [S] great [C] service general [A] people [SSEP] [O] amazing [S] great [C] food quality [A] food', '[A] food [O] amazing [C] food quality [S] great']

task, data: asqp rest16
target: [('food quality', 'null', 'bad', 'dry')]
output: ['[A] mouth [O] dry [S] bad [C] food quality']
sent: ['My', 'mouth', 'felt', 'very', 'dry', 'afterwards', 'and', 'I', 'had', 'that', 'signature', '?', 'MSG', '?', 'taste', 'lingering', 'in', 'my', 'throat', 'after', 'I', 'left', 'the', 'restaurant', '.']
counter: {('food quality', 'mouth', 'bad', 'dry'): 5}
output quads: ['[A] mouth [O] dry [S] bad [C] food quality']
multi_path: ['[O] dry [A] mouth [C] food quality [S] bad', '[A] mouth [O] dry [S] bad [C] food quality', '[O] dry [A] mouth [S] bad [C] food quality', '[O] dry [S] bad [C] food quality [A] mouth', '[A] mouth [O] dry [C] food quality [S] bad']

task, data: asqp rest16
target: [('service general', 'manager', 'bad', 'disappointment')]
output: ['[A] manager [O] interrupted [S] bad [C] service general']
sent: ['The', 'manager', 'continually', 'interrupted', 'with', '``', 'Is', 'there', 'anything', 'else', 'I', 'can', 'do', 'for', 'you', '?', '``', ',', 'a', 'strange', 'comment', 'because', 'she', 'had', 'hardly', 'listened', ',', 'let', 'alone', 'responded', 'to', 'our', 'expression', 'of', 'disappointment', 'at', 'our', 'experience', '.']
counter: {('service general', 'manager', 'bad', 'interrupted'): 5}
output quads: ['[A] manager [O] interrupted [S] bad [C] service general']
multi_path: ['[O] interrupted [A] manager [C] service general [S] bad', '[A] manager [O] interrupted [S] bad [C] service general', '[O] interrupted [A] manager [S] bad [C] service general', '[O] interrupted [S] bad [C] service general [A] manager', '[A] manager [O] interrupted [C] service general [S] bad']

task, data: asqp rest16
target: [('service general', 'service', 'bad', 'mediocre')]
output: ['[A] service [O] mediocre [S] bad [C] service general', '[A] service [O] offensive [S] bad [C] service general']
sent: ['The', 'service', 'ranges', 'from', 'mediocre', 'to', 'offensive', '.']
counter: {('service general', 'service', 'bad', 'mediocre'): 5, ('service general', 'service', 'bad', 'offensive'): 5}
output quads: ['[A] service [O] mediocre [S] bad [C] service general', '[A] service [O] offensive [S] bad [C] service general']
multi_path: ['[O] mediocre [A] service [C] service general [S] bad [SSEP] [O] offensive [A] service [C] service general [S] bad', '[A] service [O] mediocre [S] bad [C] service general [SSEP] [A] service [O] offensive [S] bad [C] service general', '[O] mediocre [A] service [S] bad [C] service general [SSEP] [O] offensive [A] service [S] bad [C] service general', '[O] mediocre [S] bad [C] service general [A] service [SSEP] [O] offensive [S] bad [C] service general [A] service', '[A] service [O] mediocre [C] service general [S] bad [SSEP] [A] service [O] offensive [C] service general [S] bad']

task, data: asqp rest16
target: [('food quality', 'ingrediants', 'great', 'fresh'), ('food quality', 'null', 'great', 'tasty')]
output: ['[A] ingrediants [O] fresh [S] great [C] food quality', '[A] ingrediants [O] tasty [S] great [C] food quality']
sent: ['Fresh', 'ingrediants', 'and', 'super', 'tasty', '.']
counter: {('food quality', 'ingrediants', 'great', 'fresh'): 5, ('food quality', 'ingrediants', 'great', 'tasty'): 5}
output quads: ['[A] ingrediants [O] fresh [S] great [C] food quality', '[A] ingrediants [O] tasty [S] great [C] food quality']
multi_path: ['[O] fresh [A] ingrediants [C] food quality [S] great [SSEP] [O] tasty [A] ingrediants [C] food quality [S] great', '[A] ingrediants [O] fresh [S] great [C] food quality [SSEP] [A] ingrediants [O] tasty [S] great [C] food quality', '[O] fresh [A] ingrediants [S] great [C] food quality [SSEP] [O] tasty [A] ingrediants [S] great [C] food quality', '[O] fresh [S] great [C] food quality [A] ingrediants [SSEP] [O] tasty [S] great [C] food quality [A] ingrediants', '[A] ingrediants [O] fresh [C] food quality [S] great [SSEP] [A] ingrediants [O] tasty [C] food quality [S] great']

task, data: asqp rest16
target: [('ambience general', 'ambiance', 'great', 'nice')]
output: ['[A] ambiance [O] good [S] great [C] ambience general', '[A] ambiance [O] nice [S] great [C] ambience general']
sent: ['the', 'ambiance', 'of', 'the', 'restaurant', 'was', 'nice', 'and', 'good', 'for', 'fine', 'dinning', '.']
counter: {('ambience general', 'ambiance', 'great', 'nice'): 5, ('ambience general', 'ambiance', 'great', 'good'): 5}
output quads: ['[A] ambiance [O] nice [S] great [C] ambience general', '[A] ambiance [O] good [S] great [C] ambience general']
multi_path: ['[O] nice [A] ambiance [C] ambience general [S] great [SSEP] [O] good [A] ambiance [C] ambience general [S] great', '[A] ambiance [O] nice [S] great [C] ambience general [SSEP] [A] ambiance [O] good [S] great [C] ambience general', '[O] nice [A] ambiance [S] great [C] ambience general [SSEP] [O] good [A] ambiance [S] great [C] ambience general', '[O] nice [S] great [C] ambience general [A] ambiance [SSEP] [O] good [S] great [C] ambience general [A] ambiance', '[A] ambiance [O] nice [C] ambience general [S] great [SSEP] [A] ambiance [O] good [C] ambience general [S] great']

task, data: asqp rest16
target: [('service general', 'null', 'ok', 'ok')]
output: []
sent: ['Waited', '35', 'minutes', 'for', 'a', 'table', 'for', '8', 'which', 'was', 'ok', 'for', 'such', 'a', 'big', 'crowd', '.']
counter: {('restaurant miscellaneous', 'table', 'ok', 'ok'): 2, ('service general', 'null', 'ok', 'ok'): 2, ('restaurant miscellaneous', 'null', 'ok', 'ok'): 1}
output quads: []
multi_path: ['[O] ok [A] table [C] restaurant miscellaneous [S] ok', '[A] it [O] ok [S] ok [C] service general', '[O] ok [A] table [S] ok [C] restaurant miscellaneous', '[O] ok [S] ok [C] restaurant miscellaneous [A] it', '[A] it [O] ok [C] service general [S] ok']

task, data: asqp rest16
target: [('ambience general', 'atmosphere', 'great', 'good'), ('ambience general', 'music', 'great', 'good'), ('ambience general', 'vibe', 'great', 'nice'), ('restaurant miscellaneous', 'people', 'great', 'happy')]
output: ['[A] atmosphere [O] good [S] great [C] ambience general', '[A] music [O] good [S] great [C] ambience general', '[A] people [O] happy looking [S] great [C] restaurant miscellaneous', '[A] vibe [O] nice [S] great [C] ambience general']
sent: ['There', 'was', 'a', 'really', 'nice', 'vibe', 'about', 'the', 'place', '...', 'good', 'music', ',', 'atmosphere', 'and', 'happy', 'looking', 'people', '.']
counter: {('ambience general', 'vibe', 'great', 'nice'): 5, ('ambience general', 'music', 'great', 'good'): 5, ('ambience general', 'atmosphere', 'great', 'good'): 5, ('service general', 'people', 'great', 'happy looking'): 2, ('restaurant miscellaneous', 'people', 'great', 'happy looking'): 3}
output quads: ['[A] vibe [O] nice [S] great [C] ambience general', '[A] music [O] good [S] great [C] ambience general', '[A] atmosphere [O] good [S] great [C] ambience general', '[A] people [O] happy looking [S] great [C] restaurant miscellaneous']
multi_path: ['[O] nice [A] vibe [C] ambience general [S] great [SSEP] [O] good [A] music [C] ambience general [S] great [SSEP] [O] good [A] atmosphere [C] ambience general [S] great [SSEP] [O] happy looking [A] people [C] service general [S] great', '[A] vibe [O] nice [S] great [C] ambience general [SSEP] [A] music [O] good [S] great [C] ambience general [SSEP] [A] atmosphere [O] good [S] great [C] ambience general [SSEP] [A] people [O] happy looking [S] great [C] restaurant miscellaneous', '[O] nice [A] vibe [S] great [C] ambience general [SSEP] [O] good [A] music [S] great [C] ambience general [SSEP] [O] good [A] atmosphere [S] great [C] ambience general [SSEP] [O] happy looking [A] people [S] great [C] restaurant miscellaneous', '[O] nice [S] great [C] ambience general [A] vibe [SSEP] [O] good [S] great [C] ambience general [A] music [SSEP] [O] good [S] great [C] ambience general [A] atmosphere [SSEP] [O] happy looking [S] great [C] restaurant miscellaneous [A] people', '[A] vibe [O] nice [C] ambience general [S] great [SSEP] [A] music [O] good [C] ambience general [S] great [SSEP] [A] atmosphere [O] good [C] ambience general [S] great [SSEP] [A] people [O] happy looking [C] service general [S] great']

task, data: asqp rest16
target: [('food quality', 'food', 'great', 'fine'), ('food quality', 'salsa', 'great', 'little-tastier-than-normal')]
output: ['[A] food [O] fine [S] great [C] food quality', '[A] salsa [O] little-tastier [S] great [C] food quality']
sent: ['food', 'was', 'fine', ',', 'with', 'a', 'some', 'little-tastier-than-normal', 'salsa', '.']
counter: {('food quality', 'food', 'great', 'fine'): 5, ('food quality', 'salsa', 'great', 'little-tastier'): 5}
output quads: ['[A] food [O] fine [S] great [C] food quality', '[A] salsa [O] little-tastier [S] great [C] food quality']
multi_path: ['[O] fine [A] food [C] food quality [S] great [SSEP] [O] little-tastier [A] salsa [C] food quality [S] great', '[A] food [O] fine [S] great [C] food quality [SSEP] [A] salsa [O] little-tastier [S] great [C] food quality', '[O] fine [A] food [S] great [C] food quality [SSEP] [O] little-tastier [A] salsa [S] great [C] food quality', '[O] fine [S] great [C] food quality [A] food [SSEP] [O] little-tastier [S] great [C] food quality [A] salsa', '[A] food [O] fine [C] food quality [S] great [SSEP] [A] salsa [O] little-tastier [C] food quality [S] great']

task, data: asqp rest16
target: [('food quality', 'fish', 'great', 'freshest'), ('service general', 'service', 'great', 'superb')]
output: ['[A] fish [O] freshest [S] great [C] food quality', '[A] service [O] superb [S] great [C] service general', '[A] sushi [O] finicky [S] great [C] food quality']
sent: ['For', 'the', 'finicky', 'sushi', 'eater', 'and', 'those', 'who', 'have', 'sampled', 'the', 'best', 'NYC', 'has', 'to', 'offer', ',', 'the', 'fish', 'is', 'the', 'freshest', 'and', 'the', 'service', 'is', 'superb', '.']
counter: {('food quality', 'sushi', 'great', 'finicky'): 3, ('food quality', 'fish', 'great', 'freshest'): 5, ('service general', 'service', 'great', 'superb'): 5}
output quads: ['[A] sushi [O] finicky [S] great [C] food quality', '[A] fish [O] freshest [S] great [C] food quality', '[A] service [O] superb [S] great [C] service general']
multi_path: ['[O] finicky [A] sushi [C] food quality [S] great [SSEP] [O] freshest [A] fish [C] food quality [S] great [SSEP] [O] superb [A] service [C] service general [S] great', '[A] fish [O] freshest [S] great [C] food quality [SSEP] [A] service [O] superb [S] great [C] service general', '[O] finicky [A] sushi [S] great [C] food quality [SSEP] [O] freshest [A] fish [S] great [C] food quality [SSEP] [O] superb [A] service [S] great [C] service general', '[O] finicky [S] great [C] food quality [A] sushi [SSEP] [O] freshest [S] great [C] food quality [A] fish [SSEP] [O] superb [S] great [C] service general [A] service', '[A] fish [O] freshest [C] food quality [S] great [SSEP] [A] service [O] superb [C] service general [S] great']

task, data: asqp rest16
target: [('restaurant general', 'null', 'great', 'reliable')]
output: ['[A] null [O] old reliable [S] great [C] restaurant general']
sent: ['Old', 'Reliable']
counter: {('restaurant general', 'null', 'great', 'old reliable'): 5}
output quads: ['[A] null [O] old reliable [S] great [C] restaurant general']
multi_path: ['[O] old reliable [A] it [C] restaurant general [S] great', '[A] it [O] old reliable [S] great [C] restaurant general', '[O] old reliable [A] it [S] great [C] restaurant general', '[O] old reliable [S] great [C] restaurant general [A] it', '[A] it [O] old reliable [C] restaurant general [S] great']

task, data: asqp rest16
target: [('ambience general', 'restaurant', 'ok', "isn't a fancy"), ('food quality', 'food', 'ok', 'ok'), ('restaurant prices', 'restaurant', 'bad', 'pricey')]
output: ['[A] food [O] ok [S] ok [C] food quality', '[A] food [O] pricey [S] bad [C] food prices']
sent: ['Food', 'wise', ',', 'its', 'ok', 'but', 'a', 'bit', 'pricey', 'for', 'what', 'you', 'get', 'considering', 'the', 'restaurant', 'is', "n't", 'a', 'fancy', 'place', '.']
counter: {('food quality', 'food', 'ok', 'ok'): 5, ('food prices', 'food', 'bad', 'pricey'): 5}
output quads: ['[A] food [O] ok [S] ok [C] food quality', '[A] food [O] pricey [S] bad [C] food prices']
multi_path: ['[O] ok [A] food [C] food quality [S] ok [SSEP] [O] pricey [A] food [C] food prices [S] bad', '[A] food [O] ok [S] ok [C] food quality [SSEP] [A] food [O] pricey [S] bad [C] food prices', '[O] ok [A] food [S] ok [C] food quality [SSEP] [O] pricey [A] food [S] bad [C] food prices', '[O] ok [S] ok [C] food quality [A] food [SSEP] [O] pricey [S] bad [C] food prices [A] food', '[A] food [O] ok [C] food quality [S] ok [SSEP] [A] food [O] pricey [C] food prices [S] bad']

task, data: asqp rest16
target: [('food quality', 'null', 'great', 'not-too-sweet'), ('food quality', 'null', 'great', 'very light')]
output: ['[A] null [O] homemade frosting [S] great [C] food quality', '[A] null [O] light [S] great [C] food quality', '[A] null [O] not-too-sweet [S] great [C] food quality']
sent: ['They', 'came', 'in', 'their', 'own', 'nifty', 'take', 'out', 'box', 'and', 'with', 'some', 'homemade', 'frosting', ';', 'very', 'light', 'and', 'not-too-sweet', '.']
counter: {('food quality', 'null', 'great', 'homemade frosting'): 5, ('food quality', 'null', 'great', 'light'): 5, ('food quality', 'null', 'great', 'not-too-sweet'): 5}
output quads: ['[A] null [O] homemade frosting [S] great [C] food quality', '[A] null [O] light [S] great [C] food quality', '[A] null [O] not-too-sweet [S] great [C] food quality']
multi_path: ['[O] homemade frosting [A] it [C] food quality [S] great [SSEP] [O] light [A] it [C] food quality [S] great [SSEP] [O] not-too-sweet [A] it [C] food quality [S] great', '[A] it [O] homemade frosting [S] great [C] food quality [SSEP] [A] it [O] light [S] great [C] food quality [SSEP] [A] it [O] not-too-sweet [S] great [C] food quality', '[O] homemade frosting [A] it [S] great [C] food quality [SSEP] [O] light [A] it [S] great [C] food quality [SSEP] [O] not-too-sweet [A] it [S] great [C] food quality', '[O] homemade frosting [S] great [C] food quality [A] it [SSEP] [O] light [S] great [C] food quality [A] it [SSEP] [O] not-too-sweet [S] great [C] food quality [A] it', '[A] it [O] homemade frosting [C] food quality [S] great [SSEP] [A] it [O] light [C] food quality [S] great [SSEP] [A] it [O] not-too-sweet [C] food quality [S] great']

task, data: asqp rest16
target: [('service general', 'servers', 'bad', "don't like"), ('service general', 'young woman', 'bad', "don't like")]
output: ["[A] servers [O] don't like [S] bad [C] service general"]
sent: ['Prefer', 'to', 'order', 'it', 'and', 'pick', 'it', 'up', 'though', 'because', 'I', 'do', "n't", 'like', 'the', 'servers', ',', 'one', 'young', 'woman', 'in', 'particular', '.']
counter: {('service general', 'servers', 'bad', "don't like"): 5}
output quads: ["[A] servers [O] don't like [S] bad [C] service general"]
multi_path: ["[O] don't like [A] servers [C] service general [S] bad", "[A] servers [O] don't like [S] bad [C] service general", "[O] don't like [A] servers [S] bad [C] service general", "[O] don't like [S] bad [C] service general [A] servers", "[A] servers [O] don't like [C] service general [S] bad"]

task, data: asqp rest16
target: [('food quality', 'seafood', 'ok', 'ok'), ('food quality', 'seafood', 'ok', "wasn't the freshest"), ('food style_options', 'seafood', 'ok', 'ok')]
output: ["[A] seafood [O] wasn't the freshest [S] bad [C] food quality", '[A] taste [O] ok [S] ok [C] food quality']
sent: ['It', 'was', "n't", 'the', 'freshest', 'seafood', 'ever', ',', 'but', 'the', 'taste', 'and', 'presentation', 'was', 'OK', '.']
counter: {('food quality', 'seafood', 'ok', 'freshest'): 1, ('food quality', 'taste', 'great', 'ok'): 2, ('food quality', 'presentation', 'great', 'ok'): 2, ('food quality', 'seafood', 'bad', "wasn't the freshest"): 4, ('food quality', 'taste', 'ok', 'ok'): 3, ('food quality', 'presentation', 'ok', 'ok'): 2, ('food style_options', 'presentation', 'great', 'ok'): 1}
output quads: ["[A] seafood [O] wasn't the freshest [S] bad [C] food quality", '[A] taste [O] ok [S] ok [C] food quality']
multi_path: ['[O] freshest [A] seafood [C] food quality [S] ok [SSEP] [O] ok [A] taste [C] food quality [S] great [SSEP] [O] ok [A] presentation [C] food quality [S] great', "[A] seafood [O] wasn't the freshest [S] bad [C] food quality [SSEP] [A] taste [O] ok [S] great [C] food quality [SSEP] [A] presentation [O] ok [S] great [C] food quality", "[O] wasn't the freshest [A] seafood [S] bad [C] food quality [SSEP] [O] ok [A] taste [S] ok [C] food quality [SSEP] [O] ok [A] presentation [S] ok [C] food quality", "[O] wasn't the freshest [S] bad [C] food quality [A] seafood [SSEP] [O] ok [S] ok [C] food quality [A] taste [SSEP] [O] ok [S] great [C] food style_options [A] presentation", "[A] seafood [O] wasn't the freshest [C] food quality [S] bad [SSEP] [A] taste [O] ok [C] food quality [S] ok [SSEP] [A] presentation [O] ok [C] food quality [S] ok"]

task, data: asqp rest16
target: [('restaurant prices', 'null', 'bad', 'lacking'), ('service general', 'service', 'bad', 'lacking')]
output: ['[A] service [O] lacking [S] bad [C] service general']
sent: ['However', ',', 'the', 'value', 'and', 'service', 'are', 'both', 'severely', 'lacking', '.']
counter: {('restaurant prices', 'value', 'bad', 'lacking'): 2, ('service general', 'service', 'bad', 'lacking'): 5, ('restaurant prices', 'null', 'bad', 'lacking'): 2, ('restaurant prices', 'service', 'bad', 'lacking'): 1}
output quads: ['[A] service [O] lacking [S] bad [C] service general']
multi_path: ['[O] lacking [A] value [C] restaurant prices [S] bad [SSEP] [O] lacking [A] service [C] service general [S] bad', '[A] it [O] lacking [S] bad [C] restaurant prices [SSEP] [A] service [O] lacking [S] bad [C] service general', '[O] lacking [A] value [S] bad [C] restaurant prices [SSEP] [O] lacking [A] service [S] bad [C] service general', '[O] lacking [S] bad [C] restaurant prices [A] service [SSEP] [O] lacking [S] bad [C] service general [A] service', '[A] it [O] lacking [C] restaurant prices [S] bad [SSEP] [A] service [O] lacking [C] service general [S] bad']

task, data: asqp rest16
target: [('food quality', 'labne ( yogurt dip )', 'great', 'side of potatoes'), ('food quality', 'side of potatoes', 'great', 'die for')]
output: ['[A] labne ( yogurt dip ) [O] die for [S] great [C] food quality', '[A] side of potatoes [O] die for [S] great [C] food quality']
sent: ['The', 'side', 'of', 'potatoes', 'is', 'to', 'die', 'for', ',', 'as', 'is', 'the', 'labne', '(', 'yogurt', 'dip', ')', '.']
counter: {('food quality', 'side of potatoes', 'great', 'die for'): 5, ('food quality', 'labne ( yogurt dip )', 'great', 'die for'): 5}
output quads: ['[A] side of potatoes [O] die for [S] great [C] food quality', '[A] labne ( yogurt dip ) [O] die for [S] great [C] food quality']
multi_path: ['[O] die for [A] side of potatoes [C] food quality [S] great [SSEP] [O] die for [A] labne ( yogurt dip ) [C] food quality [S] great', '[A] side of potatoes [O] die for [S] great [C] food quality [SSEP] [A] labne ( yogurt dip ) [O] die for [S] great [C] food quality', '[O] die for [A] side of potatoes [S] great [C] food quality [SSEP] [O] die for [A] labne ( yogurt dip ) [S] great [C] food quality', '[O] die for [S] great [C] food quality [A] side of potatoes [SSEP] [O] die for [S] great [C] food quality [A] labne ( yogurt dip )', '[A] side of potatoes [O] die for [C] food quality [S] great [SSEP] [A] labne ( yogurt dip ) [O] die for [C] food quality [S] great']

task, data: asqp rest16
target: [('restaurant general', 'null', 'great', 'amazing')]
output: ['[A] null [O] amazing [S] great [C] food quality']
sent: ['AMAZING', '.']
counter: {('food quality', 'null', 'great', 'amazing'): 5}
output quads: ['[A] null [O] amazing [S] great [C] food quality']
multi_path: ['[O] amazing [A] it [C] food quality [S] great', '[A] it [O] amazing [S] great [C] food quality', '[O] amazing [A] it [S] great [C] food quality', '[O] amazing [S] great [C] food quality [A] it', '[A] it [O] amazing [C] food quality [S] great']

task, data: asqp rest16
target: [('food quality', 'null', 'great', 'flaky'), ('food quality', 'null', 'great', 'tastly')]
output: ['[A] null [O] treat [S] great [C] food quality']
sent: ['What', 'a', 'tastly', ',', 'flaky', 'treat', '!']
counter: {('food quality', 'null', 'great', 'treat'): 5}
output quads: ['[A] null [O] treat [S] great [C] food quality']
multi_path: ['[O] treat [A] it [C] food quality [S] great', '[A] it [O] treat [S] great [C] food quality', '[O] treat [A] it [S] great [C] food quality', '[O] treat [S] great [C] food quality [A] it', '[A] it [O] treat [C] food quality [S] great']

task, data: asqp rest16
target: [('service general', 'service', 'great', 'attentive')]
output: ['[A] service [O] attentive [S] great [C] service general', '[A] service [O] charming [S] great [C] service general']
sent: ['The', 'service', 'is', 'really', 'attentive', 'and', 'charming', '.']
counter: {('service general', 'service', 'great', 'attentive'): 5, ('service general', 'service', 'great', 'charming'): 5}
output quads: ['[A] service [O] attentive [S] great [C] service general', '[A] service [O] charming [S] great [C] service general']
multi_path: ['[O] attentive [A] service [C] service general [S] great [SSEP] [O] charming [A] service [C] service general [S] great', '[A] service [O] attentive [S] great [C] service general [SSEP] [A] service [O] charming [S] great [C] service general', '[O] attentive [A] service [S] great [C] service general [SSEP] [O] charming [A] service [S] great [C] service general', '[O] attentive [S] great [C] service general [A] service [SSEP] [O] charming [S] great [C] service general [A] service', '[A] service [O] attentive [C] service general [S] great [SSEP] [A] service [O] charming [C] service general [S] great']

task, data: asqp rest16
target: [('food style_options', 'menu', 'great', 'creative')]
output: ['[A] food [O] excited [S] great [C] food quality', '[A] menu [O] creative [S] great [C] food style_options']
sent: ['Most', 'importantly', ',', 'we', 'were', 'so', 'excited', 'about', 'the', 'food', 'after', 'seeing', 'the', 'very', 'creative', 'menu', '.']
counter: {('food quality', 'food', 'great', 'excited'): 5, ('food style_options', 'menu', 'great', 'creative'): 5}
output quads: ['[A] food [O] excited [S] great [C] food quality', '[A] menu [O] creative [S] great [C] food style_options']
multi_path: ['[O] excited [A] food [C] food quality [S] great [SSEP] [O] creative [A] menu [C] food style_options [S] great', '[A] food [O] excited [S] great [C] food quality [SSEP] [A] menu [O] creative [S] great [C] food style_options', '[O] excited [A] food [S] great [C] food quality [SSEP] [O] creative [A] menu [S] great [C] food style_options', '[O] excited [S] great [C] food quality [A] food [SSEP] [O] creative [S] great [C] food style_options [A] menu', '[A] food [O] excited [C] food quality [S] great [SSEP] [A] menu [O] creative [C] food style_options [S] great']

task, data: asqp rest16
target: [('restaurant prices', 'null', 'great', 'reasonable')]
output: ['[A] null [O] best [S] great [C] restaurant prices']
sent: ['The', 'best', 'thing', 'is', ',', 'the', 'prices', 'are', 'also', 'quite', 'reasonable', '.']
counter: {('restaurant prices', 'null', 'great', 'reasonable'): 2, ('restaurant prices', 'null', 'great', 'best'): 3}
output quads: ['[A] null [O] best [S] great [C] restaurant prices']
multi_path: ['[O] reasonable [A] it [C] restaurant prices [S] great', '[A] it [O] best [S] great [C] restaurant prices', '[O] reasonable [A] it [S] great [C] restaurant prices', '[O] best [S] great [C] restaurant prices [A] it', '[A] it [O] best [C] restaurant prices [S] great']

task, data: asqp rest16
target: [('service general', 'null', 'bad', 'flown off in a rage')]
output: ['[A] waitress [O] could hardly take her promise seriously [S] bad [C] service general']
sent: ['She', 'promised', 'to', 'speak', 'to', 'the', 'waitress', 'who', 'had', 'flown', 'off', 'in', 'a', 'rage', ',', 'but', 'we', 'could', 'hardly', 'take', 'her', 'promise', 'seriously', ',', 'seeing', 'as', 'she', 'hadn', "'t", 'bothered', 'to', 'get', 'the', 'waitresses', 'name', '.']
counter: {('service general', 'waitress', 'bad', 'could hardly take her promise seriously'): 5}
output quads: ['[A] waitress [O] could hardly take her promise seriously [S] bad [C] service general']
multi_path: ['[O] could hardly take her promise seriously [A] waitress [C] service general [S] bad', '[A] waitress [O] could hardly take her promise seriously [S] bad [C] service general', '[O] could hardly take her promise seriously [A] waitress [S] bad [C] service general', '[O] could hardly take her promise seriously [S] bad [C] service general [A] waitress', '[A] waitress [O] could hardly take her promise seriously [C] service general [S] bad']

task, data: asqp rest16
target: [('food quality', 'food', 'great', 'good')]
output: ['[A] food [O] appetizing [S] great [C] food quality', '[A] food [O] good [S] great [C] food quality']
sent: ['Food', 'was', 'good', 'and', 'appetizing', '.']
counter: {('food quality', 'food', 'great', 'good'): 5, ('food quality', 'food', 'great', 'appetizing'): 5}
output quads: ['[A] food [O] good [S] great [C] food quality', '[A] food [O] appetizing [S] great [C] food quality']
multi_path: ['[O] good [A] food [C] food quality [S] great [SSEP] [O] appetizing [A] food [C] food quality [S] great', '[A] food [O] good [S] great [C] food quality [SSEP] [A] food [O] appetizing [S] great [C] food quality', '[O] good [A] food [S] great [C] food quality [SSEP] [O] appetizing [A] food [S] great [C] food quality', '[O] good [S] great [C] food quality [A] food [SSEP] [O] appetizing [S] great [C] food quality [A] food', '[A] food [O] good [C] food quality [S] great [SSEP] [A] food [O] appetizing [C] food quality [S] great']

task, data: asqp rest16
target: [('restaurant general', 'null', 'great', 'amazing')]
output: ['[A] null [O] amazing [S] great [C] drinks quality']
sent: ['It', 'was', 'absolutely', 'amazing', '.']
counter: {('drinks quality', 'null', 'great', 'amazing'): 5}
output quads: ['[A] null [O] amazing [S] great [C] drinks quality']
multi_path: ['[O] amazing [A] it [C] drinks quality [S] great', '[A] it [O] amazing [S] great [C] drinks quality', '[O] amazing [A] it [S] great [C] drinks quality', '[O] amazing [S] great [C] drinks quality [A] it', '[A] it [O] amazing [C] drinks quality [S] great']

task, data: asqp rest16
target: [('service general', 'waitstaff', 'great', 'accomodating')]
output: ['[A] waitstaff [O] unbelievably accomodating [S] great [C] service general']
sent: ['plus', ',', 'i', 'am', 'allergic', 'to', 'rice', ',', 'and', 'the', 'waitstaff', 'was', 'unbelievably', 'accomodating', '--', 'did', "n't", 'even', 'bat', 'an', 'eye', '!']
counter: {('service general', 'waitstaff', 'great', 'unbelievably accomodating'): 5}
output quads: ['[A] waitstaff [O] unbelievably accomodating [S] great [C] service general']
multi_path: ['[O] unbelievably accomodating [A] waitstaff [C] service general [S] great', '[A] waitstaff [O] unbelievably accomodating [S] great [C] service general', '[O] unbelievably accomodating [A] waitstaff [S] great [C] service general', '[O] unbelievably accomodating [S] great [C] service general [A] waitstaff', '[A] waitstaff [O] unbelievably accomodating [C] service general [S] great']

task, data: asqp rest16
target: [('restaurant prices', 'null', 'bad', 'overpriced')]
output: ['[A] null [O] overpriced [S] bad [C] food prices']
sent: ['Overpriced']
counter: {('food prices', 'null', 'bad', 'overpriced'): 5}
output quads: ['[A] null [O] overpriced [S] bad [C] food prices']
multi_path: ['[O] overpriced [A] it [C] food prices [S] bad', '[A] it [O] overpriced [S] bad [C] food prices', '[O] overpriced [A] it [S] bad [C] food prices', '[O] overpriced [S] bad [C] food prices [A] it', '[A] it [O] overpriced [C] food prices [S] bad']

task, data: asqp rest16
target: [('restaurant general', 'null', 'bad', 'sad')]
output: ['[A] null [O] best [S] bad [C] restaurant general']
sent: ['This', 'is', 'sad', 'for', 'what', 'once', 'was', 'one', 'of', 'the', 'best', 'places', 'you', 'could', 'ever', 'eat', '.']
counter: {('restaurant general', 'null', 'bad', 'best'): 4, ('restaurant general', 'null', 'bad', 'sad'): 1}
output quads: ['[A] null [O] best [S] bad [C] restaurant general']
multi_path: ['[O] best [A] it [C] restaurant general [S] bad', '[A] it [O] sad [S] bad [C] restaurant general', '[O] best [A] it [S] bad [C] restaurant general', '[O] best [S] bad [C] restaurant general [A] it', '[A] it [O] best [C] restaurant general [S] bad']

task, data: asqp rest16
target: [('food quality', 'null', 'great', 'fresh'), ('food style_options', 'null', 'great', 'want and more')]
output: ['[A] null [O] fresh [S] great [C] food quality']
sent: ['Everything', 'you', 'want', 'and', 'more', ',', 'very', 'fresh', '.']
counter: {('food quality', 'null', 'great', 'fresh'): 5}
output quads: ['[A] null [O] fresh [S] great [C] food quality']
multi_path: ['[O] fresh [A] it [C] food quality [S] great', '[A] it [O] fresh [S] great [C] food quality', '[O] fresh [A] it [S] great [C] food quality', '[O] fresh [S] great [C] food quality [A] it', '[A] it [O] fresh [C] food quality [S] great']

task, data: asqp rest16
target: [('food quality', 'creamed washington russet potatoes', 'great', 'delectable'), ('food quality', 'green beans', 'great', 'crisp'), ('food quality', 'grilled alaskan king salmon', 'great', 'enjoyed')]
output: ['[A] grilled alaskan king salmon with crisp green beans and crisp green beans [O] enjoyed [S] great [C] food quality']
sent: ['My', 'friend', 'enjoyed', 'the', 'grilled', 'Alaskan', 'King', 'Salmon', 'with', 'delectable', 'creamed', 'Washington', 'russet', 'potatoes', 'and', 'crisp', 'green', 'beans', '.']
counter: {('food quality', 'grilled alaskan king salmon with crisp green beans and crisp green beans', 'great', 'enjoyed'): 4, ('food quality', 'grilled alaskan king salmon with crisp green beans', 'great', 'enjoyed'): 1, ('food quality', 'creamed washington russet potatoes and crisp green beans', 'great', 'delectable'): 1}
output quads: ['[A] grilled alaskan king salmon with crisp green beans and crisp green beans [O] enjoyed [S] great [C] food quality']
multi_path: ['[O] enjoyed [A] grilled alaskan king salmon with crisp green beans and crisp green beans [C] food quality [S] great', '[A] grilled alaskan king salmon with crisp green beans and crisp green beans [O] enjoyed [S] great [C] food quality', '[O] enjoyed [A] grilled alaskan king salmon with crisp green beans and crisp green beans [S] great [C] food quality', '[O] enjoyed [S] great [C] food quality [A] grilled alaskan king salmon with crisp green beans [SSEP] [O] delectable [S] great [C] food quality [A] creamed washington russet potatoes and crisp green beans', '[A] grilled alaskan king salmon with crisp green beans and crisp green beans [O] enjoyed [C] food quality [S] great']

task, data: asqp rest16
target: [('food quality', 'null', 'great', 'tasty'), ('service general', 'service', 'great', 'awesome')]
output: ['[A] mercedes restaurant [O] tasty [S] great [C] restaurant general', '[A] service [O] awesome [S] great [C] service general']
sent: ['–', 'Mercedes', 'restaurant', 'is', 'so', 'tasty', ',', 'the', 'service', 'is', 'undeniably', 'awesome', '!']
counter: {('restaurant general', 'mercedes restaurant', 'great', 'tasty'): 4, ('service general', 'service', 'great', 'awesome'): 5, ('food quality', 'mercedes restaurant', 'great', 'tasty'): 1}
output quads: ['[A] mercedes restaurant [O] tasty [S] great [C] restaurant general', '[A] service [O] awesome [S] great [C] service general']
multi_path: ['[O] tasty [A] mercedes restaurant [C] restaurant general [S] great [SSEP] [O] awesome [A] service [C] service general [S] great', '[A] mercedes restaurant [O] tasty [S] great [C] restaurant general [SSEP] [A] service [O] awesome [S] great [C] service general', '[O] tasty [A] mercedes restaurant [S] great [C] restaurant general [SSEP] [O] awesome [A] service [S] great [C] service general', '[O] tasty [S] great [C] food quality [A] mercedes restaurant [SSEP] [O] awesome [S] great [C] service general [A] service', '[A] mercedes restaurant [O] tasty [C] restaurant general [S] great [SSEP] [A] service [O] awesome [C] service general [S] great']

task, data: asqp rest16
target: [('drinks quality', 'bloody mary', 'great', 'mean'), ('food quality', 'food', 'great', 'great')]
output: ['[A] food [O] great [S] great [C] food quality', '[A] null [O] mean [S] bad [C] drinks quality']
sent: ['The', 'food', 'is', 'great', 'and', 'they', 'make', 'a', 'mean', 'bloody', 'mary', '.']
counter: {('food quality', 'food', 'great', 'great'): 5, ('drinks quality', 'null', 'bad', 'mean'): 5}
output quads: ['[A] food [O] great [S] great [C] food quality', '[A] null [O] mean [S] bad [C] drinks quality']
multi_path: ['[O] great [A] food [C] food quality [S] great [SSEP] [O] mean [A] it [C] drinks quality [S] bad', '[A] food [O] great [S] great [C] food quality [SSEP] [A] it [O] mean [S] bad [C] drinks quality', '[O] great [A] food [S] great [C] food quality [SSEP] [O] mean [A] it [S] bad [C] drinks quality', '[O] great [S] great [C] food quality [A] food [SSEP] [O] mean [S] bad [C] drinks quality [A] it', '[A] food [O] great [C] food quality [S] great [SSEP] [A] it [O] mean [C] drinks quality [S] bad']

task, data: asqp rest16
target: [('ambience general', 'feel', 'great', 'open'), ('ambience general', 'feel', 'great', 'plus')]
output: ['[A] restaurant [O] plus [S] great [C] ambience general']
sent: ['Another', 'plus', 'is', 'the', 'open', 'feel', 'of', 'the', 'restaurant', 'with', 'glass', 'walls', 'on', 'all', 'sides', '.']
counter: {('ambience general', 'restaurant', 'great', 'plus'): 5}
output quads: ['[A] restaurant [O] plus [S] great [C] ambience general']
multi_path: ['[O] plus [A] restaurant [C] ambience general [S] great', '[A] restaurant [O] plus [S] great [C] ambience general', '[O] plus [A] restaurant [S] great [C] ambience general', '[O] plus [S] great [C] ambience general [A] restaurant', '[A] restaurant [O] plus [C] ambience general [S] great']

task, data: asqp rest16
target: [('restaurant miscellaneous', 'bathroom', 'bad', 'small')]
output: ['[A] bathroom [O] small [S] bad [C] ambience general']
sent: ['The', 'bathroom', 'itself', 'is', 'very', 'small', 'with', 'two', 'toilets', 'and', 'only', 'one', 'sink', ',', 'the', 'girl', 'was', 'staying', 'totally', 'on', 'the', 'way', 'hanging', 'out', 'paper', 'towels', 'from', 'the', 'dispenser', '.']
counter: {('ambience general', 'bathroom', 'bad', 'small'): 5}
output quads: ['[A] bathroom [O] small [S] bad [C] ambience general']
multi_path: ['[O] small [A] bathroom [C] ambience general [S] bad', '[A] bathroom [O] small [S] bad [C] ambience general', '[O] small [A] bathroom [S] bad [C] ambience general', '[O] small [S] bad [C] ambience general [A] bathroom', '[A] bathroom [O] small [C] ambience general [S] bad']

task, data: asqp rest16
target: [('food quality', 'chicken soup', 'great', 'love'), ('food quality', 'enchiladas', 'great', 'love'), ('food quality', 'specials', 'great', 'be sure to check out')]
output: ['[A] chicken soup [O] love [S] great [C] food quality', '[A] enchiladas [O] love [S] great [C] food quality', '[A] specials [O] check out [S] great [C] food quality']
sent: ['Love', 'the', 'enchiladas', 'and', 'chicken', 'soup', '-', 'and', 'be', 'sure', 'to', 'check', 'out', 'their', 'specials', '.']
counter: {('food quality', 'enchiladas', 'great', 'love'): 5, ('food quality', 'chicken soup', 'great', 'love'): 5, ('food quality', 'specials', 'great', 'check out'): 5}
output quads: ['[A] enchiladas [O] love [S] great [C] food quality', '[A] chicken soup [O] love [S] great [C] food quality', '[A] specials [O] check out [S] great [C] food quality']
multi_path: ['[O] love [A] enchiladas [C] food quality [S] great [SSEP] [O] love [A] chicken soup [C] food quality [S] great [SSEP] [O] check out [A] specials [C] food quality [S] great', '[A] enchiladas [O] love [S] great [C] food quality [SSEP] [A] chicken soup [O] love [S] great [C] food quality [SSEP] [A] specials [O] check out [S] great [C] food quality', '[O] love [A] enchiladas [S] great [C] food quality [SSEP] [O] love [A] chicken soup [S] great [C] food quality [SSEP] [O] check out [A] specials [S] great [C] food quality', '[O] love [S] great [C] food quality [A] enchiladas [SSEP] [O] love [S] great [C] food quality [A] chicken soup [SSEP] [O] check out [S] great [C] food quality [A] specials', '[A] enchiladas [O] love [C] food quality [S] great [SSEP] [A] chicken soup [O] love [C] food quality [S] great [SSEP] [A] specials [O] check out [C] food quality [S] great']

task, data: asqp rest16
target: [('service general', 'waitstaff', 'bad', 'teach them some proper manners')]
output: ['[A] waitstaff [O] train [S] bad [C] service general']
sent: ['Management', 'should', 'really', 'take', 'notice', 'and', 'train', 'their', 'waitstaff', 'and', 'teach', 'them', 'some', 'proper', 'manners', '.']
counter: {('service general', 'waitstaff', 'bad', 'train'): 5}
output quads: ['[A] waitstaff [O] train [S] bad [C] service general']
multi_path: ['[O] train [A] waitstaff [C] service general [S] bad', '[A] waitstaff [O] train [S] bad [C] service general', '[O] train [A] waitstaff [S] bad [C] service general', '[O] train [S] bad [C] service general [A] waitstaff', '[A] waitstaff [O] train [C] service general [S] bad']

task, data: asqp rest16
target: [('food style_options', 'portions', 'ok', 'enough')]
output: ['[A] portions [O] enough [S] great [C] food style_options']
sent: ['Portions', 'was', 'just', 'enough', 'for', 'me', ',', 'but', 'may', 'not', 'be', 'for', 'a', 'big', 'eater', '.']
counter: {('food style_options', 'portions', 'great', 'enough'): 5}
output quads: ['[A] portions [O] enough [S] great [C] food style_options']
multi_path: ['[O] enough [A] portions [C] food style_options [S] great', '[A] portions [O] enough [S] great [C] food style_options', '[O] enough [A] portions [S] great [C] food style_options', '[O] enough [S] great [C] food style_options [A] portions', '[A] portions [O] enough [C] food style_options [S] great']

task, data: asqp rest16
target: [('food prices', 'sushi', 'bad', '$ 5 a piece'), ('food quality', 'sushi', 'great', 'perfectly good'), ('food style_options', 'sushi', 'bad', 'should be larger'), ('restaurant prices', 'restaurant', 'bad', 'no pretense that this is a moderately priced restaurant')]
output: ['[A] restaurant [O] moderately [S] bad [C] restaurant prices', '[A] sushi [O] perfectly good [S] great [C] food quality']
sent: ['–', 'The', 'sushi', 'here', 'is', 'perfectly', 'good', ',', 'but', 'for', '$', '5', 'a', 'piece', ',', 'either', 'the', 'slices', 'of', 'fish', 'should', 'be', 'larger', ',', 'or', 'there', 'should', 'be', 'no', 'pretense', 'that', 'this', 'is', 'a', 'moderately', 'priced', 'restaurant', '(', 'even', 'for', 'NYC', ')', '.']
counter: {('food quality', 'sushi', 'great', 'perfectly good'): 5, ('food prices', 'sushi', 'bad', 'moderately'): 2, ('food style_options', 'slices of fish', 'bad', 'larger'): 2, ('restaurant prices', 'priced', 'bad', 'moderately'): 2, ('food style_options', 'slices of fish', 'bad', 'should be larger'): 2, ('restaurant prices', 'restaurant', 'bad', 'moderately'): 3}
output quads: ['[A] sushi [O] perfectly good [S] great [C] food quality', '[A] restaurant [O] moderately [S] bad [C] restaurant prices']
multi_path: ['[O] perfectly good [A] sushi [C] food quality [S] great [SSEP] [O] moderately [A] sushi [C] food prices [S] bad [SSEP] [O] larger [A] slices of fish [C] food style_options [S] bad [SSEP] [O] moderately [A] priced [C] restaurant prices [S] bad', '[A] sushi [O] perfectly good [S] great [C] food quality [SSEP] [A] slices of fish [O] should be larger [S] bad [C] food style_options [SSEP] [A] restaurant [O] moderately [S] bad [C] restaurant prices', '[O] perfectly good [A] sushi [S] great [C] food quality [SSEP] [O] moderately [A] sushi [S] bad [C] food prices [SSEP] [O] larger [A] slices of fish [S] bad [C] food style_options [SSEP] [O] moderately [A] priced [S] bad [C] restaurant prices', '[O] perfectly good [S] great [C] food quality [A] sushi [SSEP] [O] moderately [S] bad [C] restaurant prices [A] restaurant', '[A] sushi [O] perfectly good [C] food quality [S] great [SSEP] [A] slices of fish [O] should be larger [C] food style_options [S] bad [SSEP] [A] restaurant [O] moderately [C] restaurant prices [S] bad']

task, data: asqp rest16
target: [('restaurant general', 'null', 'great', 'charming')]
output: ['[A] null [O] charming time [S] great [C] restaurant general']
sent: ['You', 'are', 'bound', 'to', 'have', 'a', 'very', 'charming', 'time', '.']
counter: {('restaurant general', 'null', 'great', 'charming time'): 4, ('ambience general', 'null', 'great', 'charming time'): 1}
output quads: ['[A] null [O] charming time [S] great [C] restaurant general']
multi_path: ['[O] charming time [A] it [C] restaurant general [S] great', '[A] it [O] charming time [S] great [C] restaurant general', '[O] charming time [A] it [S] great [C] restaurant general', '[O] charming time [S] great [C] ambience general [A] it', '[A] it [O] charming time [C] restaurant general [S] great']

task, data: asqp rest16
target: [('drinks quality', 'beer', 'great', 'good'), ('restaurant general', 'null', 'great', 'great')]
output: ['[A] beer [O] variety [S] great [C] drinks quality', '[A] null [O] great [S] great [C] restaurant general', '[A] plates [O] small [S] great [C] food style_options']
sent: ['We', 'have', 'since', 'returned', 'and', 'also', 'had', 'a', 'great', 'experience', ',', 'sampling', 'more', 'small', 'plates', 'and', 'a', 'variety', 'of', 'the', 'beer', '(', 'cold', 'and', 'good', ')', '.']
counter: {('restaurant general', 'null', 'great', 'great'): 4, ('food style_options', 'plates', 'great', 'small'): 4, ('drinks quality', 'beer', 'great', 'variety'): 5, ('drinks style_options', 'plates', 'great', 'great'): 1}
output quads: ['[A] null [O] great [S] great [C] restaurant general', '[A] plates [O] small [S] great [C] food style_options', '[A] beer [O] variety [S] great [C] drinks quality']
multi_path: ['[O] great [A] it [C] restaurant general [S] great [SSEP] [O] small [A] plates [C] food style_options [S] great [SSEP] [O] variety [A] beer [C] drinks quality [S] great', '[A] it [O] great [S] great [C] restaurant general [SSEP] [A] plates [O] small [S] great [C] food style_options [SSEP] [A] beer [O] variety [S] great [C] drinks quality', '[O] great [A] it [S] great [C] restaurant general [SSEP] [O] small [A] plates [S] great [C] food style_options [SSEP] [O] variety [A] beer [S] great [C] drinks quality', '[O] great [S] great [C] drinks style_options [A] plates [SSEP] [O] variety [S] great [C] drinks quality [A] beer', '[A] it [O] great [C] restaurant general [S] great [SSEP] [A] plates [O] small [C] food style_options [S] great [SSEP] [A] beer [O] variety [C] drinks quality [S] great']

task, data: asqp rest16
target: [('service general', 'staff', 'great', 'courteous'), ('service general', 'staff', 'great', 'nice')]
output: ['[A] staff [O] chinese [S] great [C] service general', '[A] staff [O] courteous [S] great [C] service general', '[A] staff [O] nice [S] great [C] service general']
sent: ['the', 'staff', 'was', 'very', 'nice', 'and', 'courteous', 'and', 'obviously', 'chinese', '.']
counter: {('service general', 'staff', 'great', 'nice'): 5, ('service general', 'staff', 'great', 'courteous'): 5, ('service general', 'staff', 'great', 'chinese'): 5}
output quads: ['[A] staff [O] nice [S] great [C] service general', '[A] staff [O] courteous [S] great [C] service general', '[A] staff [O] chinese [S] great [C] service general']
multi_path: ['[O] nice [A] staff [C] service general [S] great [SSEP] [O] courteous [A] staff [C] service general [S] great [SSEP] [O] chinese [A] staff [C] service general [S] great', '[A] staff [O] nice [S] great [C] service general [SSEP] [A] staff [O] courteous [S] great [C] service general [SSEP] [A] staff [O] chinese [S] great [C] service general', '[O] nice [A] staff [S] great [C] service general [SSEP] [O] courteous [A] staff [S] great [C] service general [SSEP] [O] chinese [A] staff [S] great [C] service general', '[O] nice [S] great [C] service general [A] staff [SSEP] [O] courteous [S] great [C] service general [A] staff [SSEP] [O] chinese [S] great [C] service general [A] staff', '[A] staff [O] nice [C] service general [S] great [SSEP] [A] staff [O] courteous [C] service general [S] great [SSEP] [A] staff [O] chinese [C] service general [S] great']

task, data: asqp rest16
target: [('food quality', 'fried brie with fruit', 'great', 'good'), ('food quality', 'goat cheese pizza', 'great', 'good'), ('food quality', 'grilled asparagus', 'great', 'good'), ('food quality', 'shoe string onions', 'great', 'good')]
output: ['[A] fried brie with fruit [O] good [S] great [C] food quality', '[A] goat cheese pizza [O] good [S] great [C] food quality', '[A] grilled asparagus [O] good [S] great [C] food quality', '[A] shoe string onions [O] good [S] great [C] food quality', '[A] small plates [O] good [S] great [C] food style_options']
sent: ['We', 'ordered', 'a', 'selection', 'of', 'the', 'small', 'plates', ',', 'and', 'the', 'shoe', 'string', 'onions', ',', 'goat', 'cheese', 'pizza', ',', 'grilled', 'asparagus', 'and', 'fried', 'brie', 'with', 'fruit', 'were', 'all', 'very', 'good', '.']
counter: {('food style_options', 'small plates', 'great', 'good'): 4, ('food quality', 'shoe string onions', 'great', 'good'): 5, ('food quality', 'goat cheese pizza', 'great', 'good'): 5, ('food quality', 'grilled asparagus', 'great', 'good'): 5, ('food quality', 'fried brie with fruit', 'great', 'good'): 5, ('food quality', 'small plates', 'great', 'good'): 1}
output quads: ['[A] small plates [O] good [S] great [C] food style_options', '[A] shoe string onions [O] good [S] great [C] food quality', '[A] goat cheese pizza [O] good [S] great [C] food quality', '[A] grilled asparagus [O] good [S] great [C] food quality', '[A] fried brie with fruit [O] good [S] great [C] food quality']
multi_path: ['[O] good [A] small plates [C] food style_options [S] great [SSEP] [O] good [A] shoe string onions [C] food quality [S] great [SSEP] [O] good [A] goat cheese pizza [C] food quality [S] great [SSEP] [O] good [A] grilled asparagus [C] food quality [S] great [SSEP] [O] good [A] fried brie with fruit [C] food quality [S] great', '[A] small plates [O] good [S] great [C] food style_options [SSEP] [A] shoe string onions [O] good [S] great [C] food quality [SSEP] [A] goat cheese pizza [O] good [S] great [C] food quality [SSEP] [A] grilled asparagus [O] good [S] great [C] food quality [SSEP] [A] fried brie with fruit [O] good [S] great [C] food quality', '[O] good [A] small plates [S] great [C] food style_options [SSEP] [O] good [A] shoe string onions [S] great [C] food quality [SSEP] [O] good [A] goat cheese pizza [S] great [C] food quality [SSEP] [O] good [A] grilled asparagus [S] great [C] food quality [SSEP] [O] good [A] fried brie with fruit [S] great [C] food quality', '[O] good [S] great [C] food quality [A] small plates [SSEP] [O] good [S] great [C] food quality [A] shoe string onions [SSEP] [O] good [S] great [C] food quality [A] goat cheese pizza [SSEP] [O] good [S] great [C] food quality [A] grilled asparagus [SSEP] [O] good [S] great [C] food quality [A] fried brie with fruit', '[A] small plates [O] good [C] food style_options [S] great [SSEP] [A] shoe string onions [O] good [C] food quality [S] great [SSEP] [A] goat cheese pizza [O] good [C] food quality [S] great [SSEP] [A] grilled asparagus [O] good [C] food quality [S] great [SSEP] [A] fried brie with fruit [O] good [C] food quality [S] great']

task, data: asqp rest16
target: [('food quality', 'steak', 'bad', 'used msg')]
output: ['[A] meat tenderizer [O] used either msg [S] bad [C] food quality']
sent: ['Though', ',', 'one', 'thing', 'I', 'realized', 'later', 'on', 'was', 'that', 'the', 'restaurant', 'either', 'used', 'MSG', 'or', 'a', 'meat', 'tenderizer', 'on', 'the', 'steak', '.']
counter: {('food quality', 'meat tenderizer', 'bad', 'used either msg'): 3, ('food quality', 'msg', 'bad', 'used'): 2, ('food quality', 'meat tenderizer', 'bad', 'used'): 2}
output quads: ['[A] meat tenderizer [O] used either msg [S] bad [C] food quality']
multi_path: ['[O] used either msg [A] meat tenderizer [C] food quality [S] bad', '[A] msg [O] used [S] bad [C] food quality [SSEP] [A] meat tenderizer [O] used [S] bad [C] food quality', '[O] used either msg [A] meat tenderizer [S] bad [C] food quality', '[O] used either msg [S] bad [C] food quality [A] meat tenderizer', '[A] msg [O] used [C] food quality [S] bad [SSEP] [A] meat tenderizer [O] used [C] food quality [S] bad']

task, data: asqp rest16
target: [('food prices', 'open sesame combo plate', 'great', 'bargain'), ('food style_options', 'open sesame combo plate', 'great', 'heap')]
output: ['[A] open sesame combo plate [O] bargain [S] great [C] food prices']
sent: ['The', 'open', 'sesame', 'combo', 'plate', 'is', 'a', 'bargain', 'for', 'the', 'heap', 'of', 'food', 'given', '.']
counter: {('food prices', 'open sesame combo plate', 'great', 'bargain'): 5}
output quads: ['[A] open sesame combo plate [O] bargain [S] great [C] food prices']
multi_path: ['[O] bargain [A] open sesame combo plate [C] food prices [S] great', '[A] open sesame combo plate [O] bargain [S] great [C] food prices', '[O] bargain [A] open sesame combo plate [S] great [C] food prices', '[O] bargain [S] great [C] food prices [A] open sesame combo plate', '[A] open sesame combo plate [O] bargain [C] food prices [S] great']

task, data: asqp rest16
target: [('restaurant general', 'null', 'great', 'worth')]
output: ['[A] wait [O] worth [S] bad [C] service general']
sent: ['Worth', 'the', 'wait']
counter: {('service general', 'wait', 'bad', 'worth'): 4, ('service general', 'wait', 'bad', 'worth the wait'): 1}
output quads: ['[A] wait [O] worth [S] bad [C] service general']
multi_path: ['[O] worth [A] wait [C] service general [S] bad', '[A] wait [O] worth the wait [S] bad [C] service general', '[O] worth [A] wait [S] bad [C] service general', '[O] worth [S] bad [C] service general [A] wait', '[A] wait [O] worth [C] service general [S] bad']

task, data: asqp rest16
target: [('restaurant general', 'null', 'great', "doesn 't get any better")]
output: ['[A] null [O] better [S] great [C] restaurant general']
sent: ['Doesn', "'t", 'get', 'any', 'better', 'than', 'that', '.']
counter: {('restaurant general', 'null', 'great', 'better'): 3, ('restaurant general', 'null', 'great', "doesn 't get any better"): 2}
output quads: ['[A] null [O] better [S] great [C] restaurant general']
multi_path: ['[O] better [A] it [C] restaurant general [S] great', "[A] it [O] doesn 't get any better [S] great [C] restaurant general", '[O] better [A] it [S] great [C] restaurant general', '[O] better [S] great [C] restaurant general [A] it', "[A] it [O] doesn 't get any better [C] restaurant general [S] great"]

task, data: asqp rest16
target: [('restaurant miscellaneous', 'null', 'great', 'featured')]
output: ['[A] null [O] deserve [S] great [C] restaurant general']
sent: ['They', 'have', 'been', 'featured', 'on', 'the', 'food', 'network', 'and', 'they', 'deserve', 'it', '.']
counter: {('restaurant general', 'null', 'great', 'deserve'): 5}
output quads: ['[A] null [O] deserve [S] great [C] restaurant general']
multi_path: ['[O] deserve [A] it [C] restaurant general [S] great', '[A] it [O] deserve [S] great [C] restaurant general', '[O] deserve [A] it [S] great [C] restaurant general', '[O] deserve [S] great [C] restaurant general [A] it', '[A] it [O] deserve [C] restaurant general [S] great']

task, data: asqp rest16
target: [('ambience general', 'environment', 'great', 'warm')]
output: ['[A] environment [O] cosy [S] great [C] ambience general', '[A] environment [O] love [S] great [C] ambience general', '[A] environment [O] warm [S] great [C] ambience general']
sent: ['I', 'love', 'the', 'warm', '&', 'cosy', 'environment', '.']
counter: {('ambience general', 'environment', 'great', 'love'): 5, ('ambience general', 'environment', 'great', 'warm'): 5, ('ambience general', 'environment', 'great', 'cosy'): 5}
output quads: ['[A] environment [O] love [S] great [C] ambience general', '[A] environment [O] warm [S] great [C] ambience general', '[A] environment [O] cosy [S] great [C] ambience general']
multi_path: ['[O] love [A] environment [C] ambience general [S] great [SSEP] [O] warm [A] environment [C] ambience general [S] great [SSEP] [O] cosy [A] environment [C] ambience general [S] great', '[A] environment [O] love [S] great [C] ambience general [SSEP] [A] environment [O] warm [S] great [C] ambience general [SSEP] [A] environment [O] cosy [S] great [C] ambience general', '[O] love [A] environment [S] great [C] ambience general [SSEP] [O] warm [A] environment [S] great [C] ambience general [SSEP] [O] cosy [A] environment [S] great [C] ambience general', '[O] love [S] great [C] ambience general [A] environment [SSEP] [O] warm [S] great [C] ambience general [A] environment [SSEP] [O] cosy [S] great [C] ambience general [A] environment', '[A] environment [O] love [C] ambience general [S] great [SSEP] [A] environment [O] warm [C] ambience general [S] great [SSEP] [A] environment [O] cosy [C] ambience general [S] great']

task, data: asqp rest16
target: [('food quality', 'filet mignon on top of spinach and mashed potatoes', 'great', 'loved'), ('food quality', 'goat cheese gnocchi', 'great', 'loved'), ('food quality', 'pumpkin ravioli', 'great', 'loved'), ('food style_options', 'goat cheese gnocchi', 'great', 'loved')]
output: ['[A] filet mignon on top of spinach and mashed potatoes [O] loved [S] great [C] food quality', '[A] goat cheese gnocchi ( 5 big ones to a plate instead of 20 or so little gnocchis) [O] loved [S] great [C] food quality', '[A] pumpkin ravioli [O] loved [S] great [C] food quality']
sent: ['–', 'I', 'loved', 'the', 'pumpkin', 'ravioli', 'and', 'the', 'goat', 'cheese', 'gnocchi', '(', '5', 'big', 'ones', 'to', 'a', 'plate', 'instead', 'of', '20', 'or', 'so', 'little', 'gnocchis', ')', 'and', 'my', 'sister', 'loved', 'her', 'filet', 'mignon', 'on', 'top', 'of', 'spinach', 'and', 'mashed', 'potatoes', '.']
counter: {('food quality', 'pumpkin ravioli', 'great', 'loved'): 5, ('food quality', 'goat cheese gnocchi ( 5 big ones to a plate instead of 20 or so little gnocchis)', 'great', 'loved'): 5, ('food quality', 'filet mignon on top of spinach and mashed potatoes', 'great', 'loved'): 5}
output quads: ['[A] pumpkin ravioli [O] loved [S] great [C] food quality', '[A] goat cheese gnocchi ( 5 big ones to a plate instead of 20 or so little gnocchis) [O] loved [S] great [C] food quality', '[A] filet mignon on top of spinach and mashed potatoes [O] loved [S] great [C] food quality']
multi_path: ['[O] loved [A] pumpkin ravioli [C] food quality [S] great [SSEP] [O] loved [A] goat cheese gnocchi ( 5 big ones to a plate instead of 20 or so little gnocchis) [C] food quality [S] great [SSEP] [O] loved [A] filet mignon on top of spinach and mashed potatoes [C] food quality [S] great', '[A] pumpkin ravioli [O] loved [S] great [C] food quality [SSEP] [A] goat cheese gnocchi ( 5 big ones to a plate instead of 20 or so little gnocchis) [O] loved [S] great [C] food quality [SSEP] [A] filet mignon on top of spinach and mashed potatoes [O] loved [S] great [C] food quality', '[O] loved [A] pumpkin ravioli [S] great [C] food quality [SSEP] [O] loved [A] goat cheese gnocchi ( 5 big ones to a plate instead of 20 or so little gnocchis) [S] great [C] food quality [SSEP] [O] loved [A] filet mignon on top of spinach and mashed potatoes [S] great [C] food quality', '[O] loved [S] great [C] food quality [A] pumpkin ravioli [SSEP] [O] loved [S] great [C] food quality [A] goat cheese gnocchi ( 5 big ones to a plate instead of 20 or so little gnocchis) [SSEP] [O] loved [S] great [C] food quality [A] filet mignon on top of spinach and mashed potatoes', '[A] pumpkin ravioli [O] loved [C] food quality [S] great [SSEP] [A] goat cheese gnocchi ( 5 big ones to a plate instead of 20 or so little gnocchis) [O] loved [C] food quality [S] great [SSEP] [A] filet mignon on top of spinach and mashed potatoes [O] loved [C] food quality [S] great']

task, data: asqp rest16
target: [('food style_options', 'portions', 'ok', 'not the biggest')]
output: ['[A] portions [O] adequate [S] great [C] food style_options', '[A] portions [O] not the biggest [S] bad [C] food style_options']
sent: ['Not', 'the', 'biggest', 'portions', 'but', 'adequate', '.']
counter: {('food style_options', 'portions', 'bad', 'not the biggest'): 5, ('food style_options', 'portions', 'bad', 'adequate'): 2, ('food style_options', 'portions', 'great', 'adequate'): 3}
output quads: ['[A] portions [O] not the biggest [S] bad [C] food style_options', '[A] portions [O] adequate [S] great [C] food style_options']
multi_path: ['[O] not the biggest [A] portions [C] food style_options [S] bad [SSEP] [O] adequate [A] portions [C] food style_options [S] bad', '[A] portions [O] not the biggest [S] bad [C] food style_options [SSEP] [A] portions [O] adequate [S] great [C] food style_options', '[O] not the biggest [A] portions [S] bad [C] food style_options [SSEP] [O] adequate [A] portions [S] great [C] food style_options', '[O] not the biggest [S] bad [C] food style_options [A] portions [SSEP] [O] adequate [S] great [C] food style_options [A] portions', '[A] portions [O] not the biggest [C] food style_options [S] bad [SSEP] [A] portions [O] adequate [C] food style_options [S] bad']

task, data: asqp rest16
target: [('food quality', 'breakfast', 'great', 'more than your average'), ('restaurant general', 'null', 'great', 'enjoy')]
output: ['[A] null [O] enjoy [S] great [C] restaurant miscellaneous']
sent: ['Go', 'with', 'some', 'friends', ',', 'wait', 'the', 'half', 'hour', 'or', 'so', 'with', 'a', 'cup', 'of', 'joe', ',', 'and', 'enjoy', 'more', 'than', 'your', 'average', 'breakfast', '.']
counter: {('restaurant miscellaneous', 'null', 'great', 'enjoy'): 3, ('drinks quality', 'null', 'great', 'enjoy'): 2}
output quads: ['[A] null [O] enjoy [S] great [C] restaurant miscellaneous']
multi_path: ['[O] enjoy [A] it [C] restaurant miscellaneous [S] great', '[A] it [O] enjoy [S] great [C] restaurant miscellaneous', '[O] enjoy [A] it [S] great [C] restaurant miscellaneous', '[O] enjoy [S] great [C] drinks quality [A] it', '[A] it [O] enjoy [C] drinks quality [S] great']

task, data: asqp rest16
target: [('service general', 'null', 'bad', 'expensive')]
output: ['[A] sake [O] expensive [S] bad [C] drinks prices', '[A] sake [O] less than half that price [S] bad [C] drinks quality']
sent: ['We', 'were', 'then', 'charged', 'for', 'their', 'most', 'expensive', 'sake', '(', '$', '20', '+', 'per', 'serving', ')', 'when', 'we', 'in', 'fact', 'drank', 'a', 'sake', 'of', 'less', 'than', 'half', 'that', 'price', '.']
counter: {('drinks prices', 'sake', 'bad', 'expensive'): 5, ('drinks quality', 'sake', 'bad', 'less than half that price'): 5}
output quads: ['[A] sake [O] expensive [S] bad [C] drinks prices', '[A] sake [O] less than half that price [S] bad [C] drinks quality']
multi_path: ['[O] expensive [A] sake [C] drinks prices [S] bad [SSEP] [O] less than half that price [A] sake [C] drinks quality [S] bad', '[A] sake [O] expensive [S] bad [C] drinks prices [SSEP] [A] sake [O] less than half that price [S] bad [C] drinks quality', '[O] expensive [A] sake [S] bad [C] drinks prices [SSEP] [O] less than half that price [A] sake [S] bad [C] drinks quality', '[O] expensive [S] bad [C] drinks prices [A] sake [SSEP] [O] less than half that price [S] bad [C] drinks quality [A] sake', '[A] sake [O] expensive [C] drinks prices [S] bad [SSEP] [A] sake [O] less than half that price [C] drinks quality [S] bad']

task, data: asqp rest16
target: [('service general', 'null', 'bad', 'waiting')]
output: ['[A] order [O] not correct [S] bad [C] service general']
sent: ['Even', 'then', ',', 'the', 'order', 'was', 'not', 'correct', 'and', 'we', 'were', 'still', 'waiting', 'for', 'a', 'couple', 'items', '.']
counter: {('service general', 'order', 'bad', 'not correct'): 5}
output quads: ['[A] order [O] not correct [S] bad [C] service general']
multi_path: ['[O] not correct [A] order [C] service general [S] bad', '[A] order [O] not correct [S] bad [C] service general', '[O] not correct [A] order [S] bad [C] service general', '[O] not correct [S] bad [C] service general [A] order', '[A] order [O] not correct [C] service general [S] bad']

task, data: asqp rest16
target: [('restaurant general', 'null', 'bad', 'do not visit')]
output: ['[A] null [O] waste of time [S] bad [C] restaurant general']
sent: ['–', 'Save', 'yourself', 'the', 'waste', 'of', 'time', '&', 'DO', 'NOT', 'visit', '.']
counter: {('restaurant general', 'null', 'bad', 'waste of time'): 5}
output quads: ['[A] null [O] waste of time [S] bad [C] restaurant general']
multi_path: ['[O] waste of time [A] it [C] restaurant general [S] bad', '[A] it [O] waste of time [S] bad [C] restaurant general', '[O] waste of time [A] it [S] bad [C] restaurant general', '[O] waste of time [S] bad [C] restaurant general [A] it', '[A] it [O] waste of time [C] restaurant general [S] bad']

task, data: asqp rest16
target: [('restaurant general', 'null', 'great', 'good')]
output: ['[A] null [O] good [S] great [C] food quality']
sent: ['Mmm', '...', 'good', '!']
counter: {('food quality', 'null', 'great', 'good'): 5}
output quads: ['[A] null [O] good [S] great [C] food quality']
multi_path: ['[O] good [A] it [C] food quality [S] great', '[A] it [O] good [S] great [C] food quality', '[O] good [A] it [S] great [C] food quality', '[O] good [S] great [C] food quality [A] it', '[A] it [O] good [C] food quality [S] great']

task, data: asqp rest16
target: [('location general', 'null', 'great', 'great')]
output: ['[A] null [O] great [S] great [C] restaurant general']
sent: ['Its', 'great', 'if', 'you', 'spent', 'the', 'day', 'there', 'and', 'did', "n't", 'want', 'to', 'drive', 'to', 'eat', '.']
counter: {('restaurant general', 'null', 'great', 'great'): 5}
output quads: ['[A] null [O] great [S] great [C] restaurant general']
multi_path: ['[O] great [A] it [C] restaurant general [S] great', '[A] it [O] great [S] great [C] restaurant general', '[O] great [A] it [S] great [C] restaurant general', '[O] great [S] great [C] restaurant general [A] it', '[A] it [O] great [C] restaurant general [S] great']

task, data: asqp rest16
target: [('ambience general', 'setting', 'great', 'nice'), ('food prices', 'sushi', 'great', 'great value'), ('food quality', 'sushi', 'great', 'high quality')]
output: ['[A] setting [O] nice [S] great [C] ambience general', '[A] sushi [O] great value [S] great [C] food quality', '[A] sushi [O] high quality [S] great [C] food quality']
sent: ['Great', 'value', 'sushi', 'with', 'high', 'quality', '&', 'nice', 'setting', '.']
counter: {('food quality', 'sushi', 'great', 'great value'): 5, ('food quality', 'sushi', 'great', 'high quality'): 5, ('ambience general', 'setting', 'great', 'nice'): 5}
output quads: ['[A] sushi [O] great value [S] great [C] food quality', '[A] sushi [O] high quality [S] great [C] food quality', '[A] setting [O] nice [S] great [C] ambience general']
multi_path: ['[O] great value [A] sushi [C] food quality [S] great [SSEP] [O] high quality [A] sushi [C] food quality [S] great [SSEP] [O] nice [A] setting [C] ambience general [S] great', '[A] sushi [O] great value [S] great [C] food quality [SSEP] [A] sushi [O] high quality [S] great [C] food quality [SSEP] [A] setting [O] nice [S] great [C] ambience general', '[O] great value [A] sushi [S] great [C] food quality [SSEP] [O] high quality [A] sushi [S] great [C] food quality [SSEP] [O] nice [A] setting [S] great [C] ambience general', '[O] great value [S] great [C] food quality [A] sushi [SSEP] [O] high quality [S] great [C] food quality [A] sushi [SSEP] [O] nice [S] great [C] ambience general [A] setting', '[A] sushi [O] great value [C] food quality [S] great [SSEP] [A] sushi [O] high quality [C] food quality [S] great [SSEP] [A] setting [O] nice [C] ambience general [S] great']

task, data: asqp rest16
target: [('food quality', 'null', 'great', 'delicious'), ('food style_options', 'null', 'ok', 'so much')]
output: ['[A] null [O] delicious [S] great [C] food quality']
sent: ['It', 'was', 'so', 'much', 'though', 'that', 'I', 'could', 'barely', 'finish', 'but', 'I', 'did', ',', 'since', 'it', 'was', 'delicious', '.']
counter: {('food quality', 'null', 'great', 'delicious'): 5, ('food style_options', 'null', 'great', 'so much'): 2}
output quads: ['[A] null [O] delicious [S] great [C] food quality']
multi_path: ['[O] delicious [A] it [C] food quality [S] great', '[A] it [O] so much [S] great [C] food style_options [SSEP] [A] it [O] delicious [S] great [C] food quality', '[O] delicious [A] it [S] great [C] food quality', '[O] delicious [S] great [C] food quality [A] it', '[A] it [O] so much [C] food style_options [S] great [SSEP] [A] it [O] delicious [C] food quality [S] great']

task, data: asqp rest16
target: [('service general', 'employees', 'bad', 'ignoring')]
output: ['[A] employees [O] ignoring us [S] bad [C] service general']
sent: ['We', 'stood', 'there', 'for', '10', 'minutes', 'while', 'employees', 'walked', 'back', 'and', 'forth', 'ignoring', 'us', '.']
counter: {('service general', 'employees', 'bad', 'ignoring us'): 5}
output quads: ['[A] employees [O] ignoring us [S] bad [C] service general']
multi_path: ['[O] ignoring us [A] employees [C] service general [S] bad', '[A] employees [O] ignoring us [S] bad [C] service general', '[O] ignoring us [A] employees [S] bad [C] service general', '[O] ignoring us [S] bad [C] service general [A] employees', '[A] employees [O] ignoring us [C] service general [S] bad']

task, data: asqp rest16
target: [('food prices', 'food', 'bad', 'mediocre'), ('food quality', 'food', 'bad', 'mediocre')]
output: ['[A] food [O] mediocre [S] ok [C] food quality']
sent: ['My', 'g/f', 'and', 'I', 'both', 'agreed', 'the', 'food', 'was', 'very', 'mediocre', 'especially', 'considering', 'the', 'price', '.']
counter: {('food quality', 'food', 'ok', 'mediocre'): 5}
output quads: ['[A] food [O] mediocre [S] ok [C] food quality']
multi_path: ['[O] mediocre [A] food [C] food quality [S] ok', '[A] food [O] mediocre [S] ok [C] food quality', '[O] mediocre [A] food [S] ok [C] food quality', '[O] mediocre [S] ok [C] food quality [A] food', '[A] food [O] mediocre [C] food quality [S] ok']

task, data: asqp rest16
target: [('food quality', 'food', 'great', 'incredible'), ('food quality', 'lunch', 'bad', 'inconsistent')]
output: ['[A] food [O] incredible [S] great [C] food quality', '[A] quality [O] inconsistent [S] bad [C] food quality']
sent: ['–', 'The', 'food', 'is', 'here', 'is', 'incredible', ',', 'though', 'the', 'quality', 'is', 'inconsistent', 'during', 'lunch', '.']
counter: {('food quality', 'food', 'great', 'incredible'): 5, ('food quality', 'quality', 'bad', 'inconsistent'): 5}
output quads: ['[A] food [O] incredible [S] great [C] food quality', '[A] quality [O] inconsistent [S] bad [C] food quality']
multi_path: ['[O] incredible [A] food [C] food quality [S] great [SSEP] [O] inconsistent [A] quality [C] food quality [S] bad', '[A] food [O] incredible [S] great [C] food quality [SSEP] [A] quality [O] inconsistent [S] bad [C] food quality', '[O] incredible [A] food [S] great [C] food quality [SSEP] [O] inconsistent [A] quality [S] bad [C] food quality', '[O] incredible [S] great [C] food quality [A] food [SSEP] [O] inconsistent [S] bad [C] food quality [A] quality', '[A] food [O] incredible [C] food quality [S] great [SSEP] [A] quality [O] inconsistent [C] food quality [S] bad']

task, data: asqp rest16
target: [('restaurant general', 'place', 'great', 'have not a bad thing to say')]
output: ['[A] place [O] not a bad [S] great [C] restaurant general']
sent: ['I', 'have', 'not', 'a', 'bad', 'thing', 'to', 'say', 'about', 'this', 'place', '.']
counter: {('restaurant general', 'place', 'great', 'not a bad'): 5}
output quads: ['[A] place [O] not a bad [S] great [C] restaurant general']
multi_path: ['[O] not a bad [A] place [C] restaurant general [S] great', '[A] place [O] not a bad [S] great [C] restaurant general', '[O] not a bad [A] place [S] great [C] restaurant general', '[O] not a bad [S] great [C] restaurant general [A] place', '[A] place [O] not a bad [C] restaurant general [S] great']

task, data: asqp rest16
target: [('food quality', 'pizza', 'bad', 'problem')]
output: ['[A] pizza [O] warm up [S] bad [C] food quality']
sent: ['the', 'only', 'problem', 'is', 'you', 'really', 'have', 'to', 'warm', 'up', 'the', 'pizza', 'before', 'it', "'s", 'edible', ',', 'even', 'when', 'you', 'order', 'ahead', '.']
counter: {('food quality', 'pizza', 'bad', 'warm up'): 5}
output quads: ['[A] pizza [O] warm up [S] bad [C] food quality']
multi_path: ['[O] warm up [A] pizza [C] food quality [S] bad', '[A] pizza [O] warm up [S] bad [C] food quality', '[O] warm up [A] pizza [S] bad [C] food quality', '[O] warm up [S] bad [C] food quality [A] pizza', '[A] pizza [O] warm up [C] food quality [S] bad']

task, data: asqp rest16
target: [('food quality', 'caesar salad', 'bad', "couldn't eat")]
output: ["[A] caesar salad [O] couldn't eat it [S] bad [C] food quality"]
sent: ['The', 'Caesar', 'salad', 'I', 'ordered', 'had', 'so', 'much', 'lemon', 'I', 'could', "n't", 'eat', 'it', '.']
counter: {('food quality', 'caesar salad', 'bad', "couldn't eat it"): 5}
output quads: ["[A] caesar salad [O] couldn't eat it [S] bad [C] food quality"]
multi_path: ["[O] couldn't eat it [A] caesar salad [C] food quality [S] bad", "[A] caesar salad [O] couldn't eat it [S] bad [C] food quality", "[O] couldn't eat it [A] caesar salad [S] bad [C] food quality", "[O] couldn't eat it [S] bad [C] food quality [A] caesar salad", "[A] caesar salad [O] couldn't eat it [C] food quality [S] bad"]

task, data: asqp rest16
target: [('restaurant miscellaneous', "ray's", 'ok', 'appropriate'), ('service general', 'server', 'great', 'attentive')]
output: ["[A] ray's [O] appropriate [S] bad [C] restaurant miscellaneous", '[A] server [O] attentive [S] great [C] service general']
sent: ['Our', 'server', 'continued', 'to', 'be', 'attentive', 'throughout', 'the', 'night', ',', 'but', 'I', 'did', 'remain', 'puzzled', 'by', 'one', 'issue', ':', 'Who', 'thinks', 'that', 'Ray', "'s", 'is', 'an', 'appropriate', 'place', 'to', 'take', 'young', 'children', 'for', 'dinner', '?']
counter: {('service general', 'server', 'great', 'attentive'): 5, ('restaurant miscellaneous', "ray's", 'bad', 'appropriate'): 5}
output quads: ['[A] server [O] attentive [S] great [C] service general', "[A] ray's [O] appropriate [S] bad [C] restaurant miscellaneous"]
multi_path: ["[O] attentive [A] server [C] service general [S] great [SSEP] [O] appropriate [A] ray's [C] restaurant miscellaneous [S] bad", "[A] server [O] attentive [S] great [C] service general [SSEP] [A] ray's [O] appropriate [S] bad [C] restaurant miscellaneous", "[O] attentive [A] server [S] great [C] service general [SSEP] [O] appropriate [A] ray's [S] bad [C] restaurant miscellaneous", "[O] attentive [S] great [C] service general [A] server [SSEP] [O] appropriate [S] bad [C] restaurant miscellaneous [A] ray's", "[A] server [O] attentive [C] service general [S] great [SSEP] [A] ray's [O] appropriate [C] restaurant miscellaneous [S] bad"]

task, data: asqp rest16
target: [('service general', 'null', 'great', 'quickly seated and served')]
output: ['[A] null [O] quickly seated [S] great [C] service general']
sent: ['6pm', 'on', 'a', 'Sat', 'before', 'a', 'Broadway', 'play', 'and', 'we', 'were', 'quickly', 'seated', 'and', 'served', '.']
counter: {('service general', 'null', 'great', 'quickly seated'): 5}
output quads: ['[A] null [O] quickly seated [S] great [C] service general']
multi_path: ['[O] quickly seated [A] it [C] service general [S] great', '[A] it [O] quickly seated [S] great [C] service general', '[O] quickly seated [A] it [S] great [C] service general', '[O] quickly seated [S] great [C] service general [A] it', '[A] it [O] quickly seated [C] service general [S] great']

task, data: asqp rest16
target: [('food quality', 'miso soup', 'great', 'pay such detail'), ('food quality', 'rolls', 'great', 'complex')]
output: ['[A] null [O] pay such detail [S] great [C] service general']
sent: ['They', 'pay', 'such', 'detail', 'to', 'everything', 'from', 'miso', 'soup', 'to', 'complex', 'rolls', '.']
counter: {('service general', 'null', 'great', 'pay such detail'): 5, ('food quality', 'miso soup', 'great', 'pay such detail'): 1, ('food quality', 'complex rolls', 'great', 'pay such detail'): 1}
output quads: ['[A] null [O] pay such detail [S] great [C] service general']
multi_path: ['[O] pay such detail [A] it [C] service general [S] great', '[A] it [O] pay such detail [S] great [C] service general', '[O] pay such detail [A] it [S] great [C] service general', '[O] pay such detail [S] great [C] service general [A] it', '[A] it [O] pay such detail [C] service general [S] great [SSEP] [A] miso soup [O] pay such detail [C] food quality [S] great [SSEP] [A] complex rolls [O] pay such detail [C] food quality [S] great']

task, data: asqp rest16
target: [('restaurant prices', 'null', 'great', '$ 6')]
output: ['[A] null [O] $ 6 [S] ok [C] food prices']
sent: ['$', '6', 'with', 'tip', '.']
counter: {('food prices', 'null', 'ok', '$ 6'): 5}
output quads: ['[A] null [O] $ 6 [S] ok [C] food prices']
multi_path: ['[O] $ 6 [A] it [C] food prices [S] ok', '[A] it [O] $ 6 [S] ok [C] food prices', '[O] $ 6 [A] it [S] ok [C] food prices', '[O] $ 6 [S] ok [C] food prices [A] it', '[A] it [O] $ 6 [C] food prices [S] ok']

task, data: asqp rest16
target: [('service general', 'service', 'bad', "don't rate high")]
output: ["[A] null [O] don't rate high [S] bad [C] restaurant prices"]
sent: ['In', 'other', 'words', ',', 'if', 'they', 'aren', "'t", 'making', '$', '$', 'off', 'of', 'you', 'then', 'you', 'do', "n't", 'rate', 'high', 'on', 'their', "'service", 'scale', "'", '.']
counter: {('restaurant prices', 'null', 'bad', "don't rate high"): 3, ('service general', 'null', 'bad', "don't rate high"): 2}
output quads: ["[A] null [O] don't rate high [S] bad [C] restaurant prices"]
multi_path: ["[O] don't rate high [A] it [C] restaurant prices [S] bad", "[A] it [O] don't rate high [S] bad [C] restaurant prices", "[O] don't rate high [A] it [S] bad [C] service general", "[O] don't rate high [S] bad [C] service general [A] it", "[A] it [O] don't rate high [C] restaurant prices [S] bad"]

task, data: asqp rest16
target: [('food quality', 'seared alaskan sea scallops', 'great', 'enjoyed'), ('food style_options', 'seared alaskan sea scallops', 'great', 'enjoyed')]
output: ['[A] artichoke hearts [O] enjoyed [S] great [C] food quality', '[A] fennel [O] enjoyed [S] great [C] food quality', '[A] pecorino toscano [O] enjoyed [S] great [C] food quality', '[A] seared alaskan sea scallops [O] enjoyed [S] great [C] food quality']
sent: ['For', 'my', 'entr', '&', 'eacute', ';', 'e', ',', 'I', 'completely', 'enjoyed', 'the', 'seared', 'Alaskan', 'sea', 'scallops', 'complemented', 'by', 'chard', ',', 'artichoke', 'hearts', ',', 'fennel', ',', 'and', 'pecorino', 'toscano', '.']
counter: {('food quality', 'seared alaskan sea scallops', 'great', 'enjoyed'): 5, ('food quality', 'artichoke hearts', 'great', 'enjoyed'): 5, ('food quality', 'fennel', 'great', 'enjoyed'): 5, ('food quality', 'pecorino toscano', 'great', 'enjoyed'): 5}
output quads: ['[A] seared alaskan sea scallops [O] enjoyed [S] great [C] food quality', '[A] artichoke hearts [O] enjoyed [S] great [C] food quality', '[A] fennel [O] enjoyed [S] great [C] food quality', '[A] pecorino toscano [O] enjoyed [S] great [C] food quality']
multi_path: ['[O] enjoyed [A] seared alaskan sea scallops [C] food quality [S] great [SSEP] [O] enjoyed [A] artichoke hearts [C] food quality [S] great [SSEP] [O] enjoyed [A] fennel [C] food quality [S] great [SSEP] [O] enjoyed [A] pecorino toscano [C] food quality [S] great', '[A] seared alaskan sea scallops [O] enjoyed [S] great [C] food quality [SSEP] [A] artichoke hearts [O] enjoyed [S] great [C] food quality [SSEP] [A] fennel [O] enjoyed [S] great [C] food quality [SSEP] [A] pecorino toscano [O] enjoyed [S] great [C] food quality', '[O] enjoyed [A] seared alaskan sea scallops [S] great [C] food quality [SSEP] [O] enjoyed [A] artichoke hearts [S] great [C] food quality [SSEP] [O] enjoyed [A] fennel [S] great [C] food quality [SSEP] [O] enjoyed [A] pecorino toscano [S] great [C] food quality', '[O] enjoyed [S] great [C] food quality [A] seared alaskan sea scallops [SSEP] [O] enjoyed [S] great [C] food quality [A] artichoke hearts [SSEP] [O] enjoyed [S] great [C] food quality [A] fennel [SSEP] [O] enjoyed [S] great [C] food quality [A] pecorino toscano', '[A] seared alaskan sea scallops [O] enjoyed [C] food quality [S] great [SSEP] [A] artichoke hearts [O] enjoyed [C] food quality [S] great [SSEP] [A] fennel [O] enjoyed [C] food quality [S] great [SSEP] [A] pecorino toscano [O] enjoyed [C] food quality [S] great']

task, data: asqp rest16
target: [('ambience general', 'decor', 'ok', 'rustic')]
output: ['[A] decor [O] rustic [S] great [C] ambience general', '[A] decor [O] traditional [S] great [C] ambience general']
sent: ['The', 'decor', 'is', 'rustic', ',', 'traditional', 'Japanese', '.']
counter: {('ambience general', 'decor', 'great', 'rustic'): 5, ('ambience general', 'decor', 'great', 'traditional'): 5}
output quads: ['[A] decor [O] rustic [S] great [C] ambience general', '[A] decor [O] traditional [S] great [C] ambience general']
multi_path: ['[O] rustic [A] decor [C] ambience general [S] great [SSEP] [O] traditional [A] decor [C] ambience general [S] great', '[A] decor [O] rustic [S] great [C] ambience general [SSEP] [A] decor [O] traditional [S] great [C] ambience general', '[O] rustic [A] decor [S] great [C] ambience general [SSEP] [O] traditional [A] decor [S] great [C] ambience general', '[O] rustic [S] great [C] ambience general [A] decor [SSEP] [O] traditional [S] great [C] ambience general [A] decor', '[A] decor [O] rustic [C] ambience general [S] great [SSEP] [A] decor [O] traditional [C] ambience general [S] great']

task, data: asqp rest16
target: [('food style_options', 'selection', 'great', 'innovative'), ('food style_options', 'sushi', 'great', 'nice'), ('food style_options', 'sushi', 'great', 'traditional')]
output: ['[A] balance of traditional sushi [O] nice [S] great [C] food quality', '[A] selection [O] innovative [S] great [C] food style_options']
sent: ['Not', 'only', 'can', 'the', 'selection', 'be', 'innovative', ',', 'but', 'there', "'s", 'a', 'nice', 'balance', 'of', 'traditional', 'sushi', 'as', 'well', '.']
counter: {('food style_options', 'selection', 'great', 'innovative'): 5, ('food quality', 'balance of traditional sushi', 'great', 'nice'): 5}
output quads: ['[A] selection [O] innovative [S] great [C] food style_options', '[A] balance of traditional sushi [O] nice [S] great [C] food quality']
multi_path: ['[O] innovative [A] selection [C] food style_options [S] great [SSEP] [O] nice [A] balance of traditional sushi [C] food quality [S] great', '[A] selection [O] innovative [S] great [C] food style_options [SSEP] [A] balance of traditional sushi [O] nice [S] great [C] food quality', '[O] innovative [A] selection [S] great [C] food style_options [SSEP] [O] nice [A] balance of traditional sushi [S] great [C] food quality', '[O] innovative [S] great [C] food style_options [A] selection [SSEP] [O] nice [S] great [C] food quality [A] balance of traditional sushi', '[A] selection [O] innovative [C] food style_options [S] great [SSEP] [A] balance of traditional sushi [O] nice [C] food quality [S] great']

task, data: asqp rest16
target: [('restaurant general', 'null', 'bad', 'disappointed')]
output: ['[A] null [O] disappointed [S] bad [C] food quality']
sent: ['You', 'are', 'likely', 'to', 'be', 'disappointed', '.']
counter: {('food quality', 'null', 'bad', 'disappointed'): 5}
output quads: ['[A] null [O] disappointed [S] bad [C] food quality']
multi_path: ['[O] disappointed [A] it [C] food quality [S] bad', '[A] it [O] disappointed [S] bad [C] food quality', '[O] disappointed [A] it [S] bad [C] food quality', '[O] disappointed [S] bad [C] food quality [A] it', '[A] it [O] disappointed [C] food quality [S] bad']

task, data: asqp rest16
target: [('ambience general', 'ambiance', 'great', "won't forget"), ('drinks style_options', 'wine list', 'great', 'extensive')]
output: ['[A] ambiance [O] extensive [S] great [C] ambience general', '[A] wine list [O] extensive [S] great [C] drinks style_options']
sent: ['The', 'restaurant', 'offers', 'an', 'extensive', 'wine', 'list', 'and', 'an', 'ambiance', 'you', 'wo', "n't", 'forget', '!']
counter: {('drinks style_options', 'wine list', 'great', 'extensive'): 5, ('ambience general', 'ambiance', 'great', 'extensive'): 5}
output quads: ['[A] wine list [O] extensive [S] great [C] drinks style_options', '[A] ambiance [O] extensive [S] great [C] ambience general']
multi_path: ['[O] extensive [A] wine list [C] drinks style_options [S] great [SSEP] [O] extensive [A] ambiance [C] ambience general [S] great', '[A] wine list [O] extensive [S] great [C] drinks style_options [SSEP] [A] ambiance [O] extensive [S] great [C] ambience general', '[O] extensive [A] wine list [S] great [C] drinks style_options [SSEP] [O] extensive [A] ambiance [S] great [C] ambience general', '[O] extensive [S] great [C] drinks style_options [A] wine list [SSEP] [O] extensive [S] great [C] ambience general [A] ambiance', '[A] wine list [O] extensive [C] drinks style_options [S] great [SSEP] [A] ambiance [O] extensive [C] ambience general [S] great']

task, data: asqp rest16
target: [('restaurant general', 'open sesame', 'great', 'come back')]
output: []
sent: ['To', 'the', 'owners', 'of', 'Open', 'Sesame', '...', 'Bravo', '...', 'I', 'ca', "n't", 'wait', 'to', 'come', 'back', 'to', 'dine', 'at', 'your', 'restaurant', '!']
counter: {('restaurant general', 'owners of open sesame... bravo', 'great', 'bravo'): 2, ('restaurant general', 'owners of open sesame... bravo', 'great', 'come back'): 2, ('restaurant general', 'open sesame...', 'great', 'bravo'): 1}
output quads: []
multi_path: ['[O] bravo [A] owners of open sesame... bravo [C] restaurant general [S] great', '[A] owners of open sesame... bravo [O] come back [S] great [C] restaurant general', '[O] bravo [A] owners of open sesame... bravo [S] great [C] restaurant general', '[O] bravo [S] great [C] restaurant general [A] open sesame...', '[A] owners of open sesame... bravo [O] come back [C] restaurant general [S] great']

task, data: asqp rest16
target: [('restaurant general', 'pizza joint', 'great', 'favortie')]
output: ['[A] pizza joint [O] favor [S] great [C] restaurant general']
sent: ['My', 'favortie', 'pizza', 'joint', 'in', 'Seattle']
counter: {('restaurant general', 'pizza joint', 'great', 'favor'): 5}
output quads: ['[A] pizza joint [O] favor [S] great [C] restaurant general']
multi_path: ['[O] favor [A] pizza joint [C] restaurant general [S] great', '[A] pizza joint [O] favor [S] great [C] restaurant general', '[O] favor [A] pizza joint [S] great [C] restaurant general', '[O] favor [S] great [C] restaurant general [A] pizza joint', '[A] pizza joint [O] favor [C] restaurant general [S] great']

task, data: asqp rest16
target: [('food quality', 'indain food', 'great', 'recommend')]
output: ['[A] place [O] recommend [S] great [C] restaurant general']
sent: ['i', 'highly', 'recommend', 'this', 'place', 'to', 'all', 'that', 'want', 'to', 'try', 'indain', 'food', 'for', 'the', 'first', 'time', '.']
counter: {('restaurant general', 'place', 'great', 'recommend'): 5}
output quads: ['[A] place [O] recommend [S] great [C] restaurant general']
multi_path: ['[O] recommend [A] place [C] restaurant general [S] great', '[A] place [O] recommend [S] great [C] restaurant general', '[O] recommend [A] place [S] great [C] restaurant general', '[O] recommend [S] great [C] restaurant general [A] place', '[A] place [O] recommend [C] restaurant general [S] great']

task, data: asqp rest16
target: [('service general', 'service', 'great', 'worst')]
output: ['[A] service [O] worst [S] bad [C] service general']
sent: ['Worst', 'Service', 'I', 'Ever', 'Had']
counter: {('service general', 'service', 'bad', 'worst'): 5}
output quads: ['[A] service [O] worst [S] bad [C] service general']
multi_path: ['[O] worst [A] service [C] service general [S] bad', '[A] service [O] worst [S] bad [C] service general', '[O] worst [A] service [S] bad [C] service general', '[O] worst [S] bad [C] service general [A] service', '[A] service [O] worst [C] service general [S] bad']

task, data: asqp rest16
target: [('service general', 'owner', 'bad', 'dismissive')]
output: ['[A] owner [O] dismissive [S] great [C] service general']
sent: ['As', 'it', 'turns', 'out', 'the', 'owner', 'was', 'seated', 'right', 'next', 'to', 'us', 'and', 'when', 'he', 'came', 'over', 'to', 'check', 'on', 'our', 'problems', 'was', 'very', 'dismissive', 'and', 'offered', 'a', 'token', '20', '%', 'discount', 'on', 'our', 'bill', '.']
counter: {('service general', 'owner', 'great', 'dismissive'): 5}
output quads: ['[A] owner [O] dismissive [S] great [C] service general']
multi_path: ['[O] dismissive [A] owner [C] service general [S] great', '[A] owner [O] dismissive [S] great [C] service general', '[O] dismissive [A] owner [S] great [C] service general', '[O] dismissive [S] great [C] service general [A] owner', '[A] owner [O] dismissive [C] service general [S] great']

task, data: asqp rest16
target: [('food quality', 'eggs', 'great', 'delicious'), ('food quality', 'fresh fruit', 'great', 'delicious'), ('food quality', 'null', 'great', 'delicious'), ('food quality', 'pancakes', 'great', 'delicious'), ('food quality', 'potatoes', 'great', 'delicious'), ('food quality', 'yogurt', 'great', 'delicious')]
output: ['[A] eggs [O] delicious [S] great [C] food quality', '[A] fresh fruit [O] fresh [S] great [C] food quality', '[A] pancakes [O] delicious [S] great [C] food quality', '[A] potatoes [O] delicious [S] great [C] food quality', '[A] yogurt [O] delicious [S] great [C] food quality']
sent: ['–', 'Eggs', ',', 'pancakes', ',', 'potatoes', ',', 'fresh', 'fruit', 'and', 'yogurt', '--', 'everything', 'they', 'serve', 'is', 'delicious', '.']
counter: {('food quality', 'eggs', 'great', 'delicious'): 5, ('food quality', 'pancakes', 'great', 'delicious'): 5, ('food quality', 'potatoes', 'great', 'delicious'): 3, ('food quality', 'fresh fruit', 'great', 'fresh'): 3, ('food quality', 'yogurt', 'great', 'delicious'): 5, ('food quality', 'potatoes', 'great', 'fresh'): 2, ('food quality', 'fresh fruit', 'great', 'delicious'): 2}
output quads: ['[A] eggs [O] delicious [S] great [C] food quality', '[A] pancakes [O] delicious [S] great [C] food quality', '[A] potatoes [O] delicious [S] great [C] food quality', '[A] fresh fruit [O] fresh [S] great [C] food quality', '[A] yogurt [O] delicious [S] great [C] food quality']
multi_path: ['[O] delicious [A] eggs [C] food quality [S] great [SSEP] [O] delicious [A] pancakes [C] food quality [S] great [SSEP] [O] delicious [A] potatoes [C] food quality [S] great [SSEP] [O] fresh [A] fresh fruit [C] food quality [S] great [SSEP] [O] delicious [A] yogurt [C] food quality [S] great', '[A] eggs [O] delicious [S] great [C] food quality [SSEP] [A] pancakes [O] delicious [S] great [C] food quality [SSEP] [A] potatoes [O] fresh [S] great [C] food quality [SSEP] [A] fresh fruit [O] delicious [S] great [C] food quality [SSEP] [A] yogurt [O] delicious [S] great [C] food quality', '[O] delicious [A] eggs [S] great [C] food quality [SSEP] [O] delicious [A] pancakes [S] great [C] food quality [SSEP] [O] delicious [A] potatoes [S] great [C] food quality [SSEP] [O] fresh [A] fresh fruit [S] great [C] food quality [SSEP] [O] delicious [A] yogurt [S] great [C] food quality', '[O] delicious [S] great [C] food quality [A] eggs [SSEP] [O] delicious [S] great [C] food quality [A] pancakes [SSEP] [O] delicious [S] great [C] food quality [A] potatoes [SSEP] [O] fresh [S] great [C] food quality [A] fresh fruit [SSEP] [O] delicious [S] great [C] food quality [A] yogurt', '[A] eggs [O] delicious [C] food quality [S] great [SSEP] [A] pancakes [O] delicious [C] food quality [S] great [SSEP] [A] potatoes [O] fresh [C] food quality [S] great [SSEP] [A] fresh fruit [O] delicious [C] food quality [S] great [SSEP] [A] yogurt [O] delicious [C] food quality [S] great']

task, data: asqp rest16
target: [('ambience general', 'decor', 'great', 'enjoy'), ('ambience general', 'decor', 'great', 'simplicity'), ('ambience general', 'feeling', 'great', 'intimate')]
output: ['[A] decor [O] enjoy [S] great [C] ambience general', '[A] decor [O] simplicity [S] great [C] ambience general', '[A] restaurant [O] intimate [S] great [C] ambience general']
sent: ['I', 'also', 'really', 'enjoy', 'the', 'simplicity', 'of', 'the', 'decor', 'and', 'intimate', 'feeling', 'of', 'a', 'small', 'restaurant', '.']
counter: {('ambience general', 'decor', 'great', 'enjoy'): 5, ('ambience general', 'decor', 'great', 'simplicity'): 3, ('ambience general', 'restaurant', 'great', 'intimate'): 5}
output quads: ['[A] decor [O] enjoy [S] great [C] ambience general', '[A] decor [O] simplicity [S] great [C] ambience general', '[A] restaurant [O] intimate [S] great [C] ambience general']
multi_path: ['[O] enjoy [A] decor [C] ambience general [S] great [SSEP] [O] simplicity [A] decor [C] ambience general [S] great [SSEP] [O] intimate [A] restaurant [C] ambience general [S] great', '[A] decor [O] enjoy [S] great [C] ambience general [SSEP] [A] decor [O] simplicity [S] great [C] ambience general [SSEP] [A] restaurant [O] intimate [S] great [C] ambience general', '[O] enjoy [A] decor [S] great [C] ambience general [SSEP] [O] intimate [A] restaurant [S] great [C] ambience general', '[O] enjoy [S] great [C] ambience general [A] decor [SSEP] [O] intimate [S] great [C] ambience general [A] restaurant', '[A] decor [O] enjoy [C] ambience general [S] great [SSEP] [A] decor [O] simplicity [C] ambience general [S] great [SSEP] [A] restaurant [O] intimate [C] ambience general [S] great']

task, data: asqp rest16
target: [('restaurant miscellaneous', 'place', 'ok', 'tiny')]
output: ['[A] place [O] tiny [S] bad [C] restaurant miscellaneous', '[A] seat [O] easier [S] bad [C] restaurant miscellaneous', '[A] table [O] easier [S] great [C] restaurant miscellaneous']
sent: ['It', "'s", 'a', 'tiny', 'place', 'so', 'if', 'you', 'get', 'there', 'before', '8pm', 'on', 'a', 'weekend', '(', 'Thurs', '?', 'Sun', ')', 'you', 'will', 'find', 'it', 'easier', 'to', 'get', 'a', 'table', 'or', 'a', 'seat', 'at', 'the', 'sushi', 'bar', '.']
counter: {('restaurant miscellaneous', 'place', 'bad', 'tiny'): 5, ('restaurant miscellaneous', 'table', 'great', 'easier'): 5, ('restaurant miscellaneous', 'seat', 'bad', 'easier'): 3, ('restaurant miscellaneous', 'seat', 'great', 'easier'): 2}
output quads: ['[A] place [O] tiny [S] bad [C] restaurant miscellaneous', '[A] table [O] easier [S] great [C] restaurant miscellaneous', '[A] seat [O] easier [S] bad [C] restaurant miscellaneous']
multi_path: ['[O] tiny [A] place [C] restaurant miscellaneous [S] bad [SSEP] [O] easier [A] table [C] restaurant miscellaneous [S] great [SSEP] [O] easier [A] seat [C] restaurant miscellaneous [S] bad', '[A] place [O] tiny [S] bad [C] restaurant miscellaneous [SSEP] [A] table [O] easier [S] great [C] restaurant miscellaneous [SSEP] [A] seat [O] easier [S] great [C] restaurant miscellaneous', '[O] tiny [A] place [S] bad [C] restaurant miscellaneous [SSEP] [O] easier [A] table [S] great [C] restaurant miscellaneous [SSEP] [O] easier [A] seat [S] great [C] restaurant miscellaneous', '[O] tiny [S] bad [C] restaurant miscellaneous [A] place [SSEP] [O] easier [S] great [C] restaurant miscellaneous [A] table [SSEP] [O] easier [S] bad [C] restaurant miscellaneous [A] seat', '[A] place [O] tiny [C] restaurant miscellaneous [S] bad [SSEP] [A] table [O] easier [C] restaurant miscellaneous [S] great [SSEP] [A] seat [O] easier [C] restaurant miscellaneous [S] bad']

task, data: asqp rest16
target: [('food prices', 'food', 'great', 'reasonably priced')]
output: ['[A] null [O] reasonably priced [S] great [C] food prices']
sent: ['It', "'s", '*very', '*', 'reasonably', 'priced', ',', 'esp', 'for', 'the', 'quality', 'of', 'the', 'food', '.']
counter: {('food prices', 'null', 'great', 'reasonably priced'): 5}
output quads: ['[A] null [O] reasonably priced [S] great [C] food prices']
multi_path: ['[O] reasonably priced [A] it [C] food prices [S] great', '[A] it [O] reasonably priced [S] great [C] food prices', '[O] reasonably priced [A] it [S] great [C] food prices', '[O] reasonably priced [S] great [C] food prices [A] it', '[A] it [O] reasonably priced [C] food prices [S] great']

task, data: asqp rest16
target: [('food style_options', 'food', 'great', 'plenty of')]
output: ['[A] food [O] plenty [S] great [C] food style_options']
sent: ['plenty', 'of', 'food', ',', 'trust', 'me', '.']
counter: {('food style_options', 'food', 'great', 'plenty'): 5}
output quads: ['[A] food [O] plenty [S] great [C] food style_options']
multi_path: ['[O] plenty [A] food [C] food style_options [S] great', '[A] food [O] plenty [S] great [C] food style_options', '[O] plenty [A] food [S] great [C] food style_options', '[O] plenty [S] great [C] food style_options [A] food', '[A] food [O] plenty [C] food style_options [S] great']

task, data: asqp rest16
target: [('ambience general', 'spot', 'great', 'perfect'), ('restaurant miscellaneous', 'spot', 'great', 'perfect')]
output: ['[A] spot [O] perfect [S] great [C] restaurant miscellaneous']
sent: ['It', "'s", 'the', 'perfect', 'spot', 'for', 'a', 'romantic', 'date', 'for', '2', 'or', 'a', 'secret', 'rendezvous', '!']
counter: {('restaurant miscellaneous', 'spot', 'great', 'perfect'): 5}
output quads: ['[A] spot [O] perfect [S] great [C] restaurant miscellaneous']
multi_path: ['[O] perfect [A] spot [C] restaurant miscellaneous [S] great', '[A] spot [O] perfect [S] great [C] restaurant miscellaneous', '[O] perfect [A] spot [S] great [C] restaurant miscellaneous', '[O] perfect [S] great [C] restaurant miscellaneous [A] spot', '[A] spot [O] perfect [C] restaurant miscellaneous [S] great']

task, data: asqp rest16
target: [('ambience general', 'null', 'great', 'underground'), ('ambience general', 'null', 'great', 'unpretentious')]
output: ['[A] null [O] unpretentious [S] great [C] ambience general']
sent: ['It', "'s", 'unpretentious', 'and', 'underground', '.']
counter: {('ambience general', 'null', 'great', 'unpretentious'): 5}
output quads: ['[A] null [O] unpretentious [S] great [C] ambience general']
multi_path: ['[O] unpretentious [A] it [C] ambience general [S] great', '[A] it [O] unpretentious [S] great [C] ambience general', '[O] unpretentious [A] it [S] great [C] ambience general', '[O] unpretentious [S] great [C] ambience general [A] it', '[A] it [O] unpretentious [C] ambience general [S] great']

task, data: asqp rest16
target: [('food quality', 'null', 'great', 'best')]
output: ['[A] place [O] best [S] great [C] restaurant general']
sent: ['The', 'place', 'is', 'the', 'next', 'best', 'thing', 'to', 'my', 'Moms', 'cooking', '.']
counter: {('restaurant general', 'place', 'great', 'best'): 5}
output quads: ['[A] place [O] best [S] great [C] restaurant general']
multi_path: ['[O] best [A] place [C] restaurant general [S] great', '[A] place [O] best [S] great [C] restaurant general', '[O] best [A] place [S] great [C] restaurant general', '[O] best [S] great [C] restaurant general [A] place', '[A] place [O] best [C] restaurant general [S] great']

task, data: asqp rest16
target: [('restaurant miscellaneous', 'place', 'great', 'make it a whole evening')]
output: ['[A] place [O] come to this place by boat [S] great [C] restaurant general']
sent: ['If', 'you', 'can', ',', 'come', 'to', 'this', 'place', 'by', 'boat', 'and', 'make', 'it', 'a', 'whole', 'evening', '.']
counter: {('restaurant general', 'place', 'great', 'come to this place'): 1, ('restaurant general', 'place', 'great', 'come to this place by boat'): 4}
output quads: ['[A] place [O] come to this place by boat [S] great [C] restaurant general']
multi_path: ['[O] come to this place [A] place [C] restaurant general [S] great', '[A] place [O] come to this place by boat [S] great [C] restaurant general', '[O] come to this place by boat [A] place [S] great [C] restaurant general', '[O] come to this place by boat [S] great [C] restaurant general [A] place', '[A] place [O] come to this place by boat [C] restaurant general [S] great']

task, data: asqp rest16
target: [('restaurant general', 'null', 'great', 'worth')]
output: ['[A] null [O] worth [S] great [C] service general']
sent: ['Its', 'worth', 'the', 'wait', ',', 'especially', 'since', 'they', "'ll", 'give', 'you', 'a', 'call', 'when', 'the', 'table', 'is', 'ready', '.']
counter: {('service general', 'null', 'great', 'worth'): 5}
output quads: ['[A] null [O] worth [S] great [C] service general']
multi_path: ['[O] worth [A] it [C] service general [S] great', '[A] it [O] worth [S] great [C] service general', '[O] worth [A] it [S] great [C] service general', '[O] worth [S] great [C] service general [A] it', '[A] it [O] worth [C] service general [S] great']

task, data: asqp rest16
target: [('ambience general', 'ambience', 'great', 'great open')]
output: ['[A] ambience [O] friendly [S] great [C] ambience general', '[A] ambience [O] great open [S] great [C] ambience general']
sent: ['Great', 'open', 'and', 'friendly', 'ambience', '.']
counter: {('ambience general', 'ambience', 'great', 'great open'): 5, ('ambience general', 'ambience', 'great', 'friendly'): 5}
output quads: ['[A] ambience [O] great open [S] great [C] ambience general', '[A] ambience [O] friendly [S] great [C] ambience general']
multi_path: ['[O] great open [A] ambience [C] ambience general [S] great [SSEP] [O] friendly [A] ambience [C] ambience general [S] great', '[A] ambience [O] great open [S] great [C] ambience general [SSEP] [A] ambience [O] friendly [S] great [C] ambience general', '[O] great open [A] ambience [S] great [C] ambience general [SSEP] [O] friendly [A] ambience [S] great [C] ambience general', '[O] great open [S] great [C] ambience general [A] ambience [SSEP] [O] friendly [S] great [C] ambience general [A] ambience', '[A] ambience [O] great open [C] ambience general [S] great [SSEP] [A] ambience [O] friendly [C] ambience general [S] great']

task, data: asqp rest16
target: [('location general', 'sound views', 'great', 'gorgeous')]
output: ["[A] ray's [O] gorgeous [S] great [C] location general", '[A] service [O] gorgeous [S] great [C] service general', '[A] sound views [O] gorgeous [S] great [C] location general']
sent: ['Ray', "'s", 'is', 'something', 'of', 'a', 'Seattle', 'institution', ',', 'but', 'given', 'its', 'gorgeous', 'Sound', 'views', ',', 'I', 'had', 'suspected', 'that', 'the', 'accolades', 'were', 'more', 'due', 'to', 'the', 'scenery', 'than', 'to', 'the', 'food', 'and', 'service', '.']
counter: {('location general', "ray's", 'great', 'gorgeous'): 5, ('location general', 'sound views', 'great', 'gorgeous'): 3, ('ambience general', 'scenery', 'great', 'gorgeous'): 2, ('service general', 'service', 'great', 'gorgeous'): 3, ('ambience general', 'scenery', 'great', 'accolades'): 1}
output quads: ["[A] ray's [O] gorgeous [S] great [C] location general", '[A] sound views [O] gorgeous [S] great [C] location general', '[A] service [O] gorgeous [S] great [C] service general']
multi_path: ["[O] gorgeous [A] ray's [C] location general [S] great [SSEP] [O] gorgeous [A] sound views [C] location general [S] great", "[A] ray's [O] gorgeous [S] great [C] location general [SSEP] [A] scenery [O] gorgeous [S] great [C] ambience general [SSEP] [A] service [O] gorgeous [S] great [C] service general", "[O] gorgeous [A] ray's [S] great [C] location general [SSEP] [O] gorgeous [A] sound views [S] great [C] location general", "[O] gorgeous [S] great [C] location general [A] ray's [SSEP] [O] gorgeous [S] great [C] location general [A] sound views [SSEP] [O] accolades [S] great [C] ambience general [A] scenery [SSEP] [O] gorgeous [S] great [C] service general [A] service", "[A] ray's [O] gorgeous [C] location general [S] great [SSEP] [A] scenery [O] gorgeous [C] ambience general [S] great [SSEP] [A] service [O] gorgeous [C] service general [S] great"]

task, data: asqp rest16
target: [('ambience general', 'balcony', 'great', 'nice')]
output: ['[A] null [O] nice [S] great [C] ambience general']
sent: ['If', 'it', "'s", 'nice', 'outside', ',', 'request', 'for', 'a', 'table', 'in', 'the', 'balcony', '.']
counter: {('ambience general', 'null', 'great', 'nice'): 5}
output quads: ['[A] null [O] nice [S] great [C] ambience general']
multi_path: ['[O] nice [A] it [C] ambience general [S] great', '[A] it [O] nice [S] great [C] ambience general', '[O] nice [A] it [S] great [C] ambience general', '[O] nice [S] great [C] ambience general [A] it', '[A] it [O] nice [C] ambience general [S] great']

task, data: asqp rest16
target: [('food quality', 'dessert of a port and chocolate tasting', 'great', 'yummy')]
output: ['[A] dessert [O] unusual [S] great [C] food quality', '[A] port and chocolate tasting [O] yummy [S] great [C] food quality']
sent: ['I', 'ended', 'the', 'meal', 'with', 'the', 'unusual', 'dessert', 'of', 'a', 'port', 'and', 'chocolate', 'tasting', '...', 'yummy', '!']
counter: {('food quality', 'dessert', 'great', 'unusual'): 5, ('food quality', 'port and chocolate tasting', 'great', 'yummy'): 5}
output quads: ['[A] dessert [O] unusual [S] great [C] food quality', '[A] port and chocolate tasting [O] yummy [S] great [C] food quality']
multi_path: ['[O] unusual [A] dessert [C] food quality [S] great [SSEP] [O] yummy [A] port and chocolate tasting [C] food quality [S] great', '[A] dessert [O] unusual [S] great [C] food quality [SSEP] [A] port and chocolate tasting [O] yummy [S] great [C] food quality', '[O] unusual [A] dessert [S] great [C] food quality [SSEP] [O] yummy [A] port and chocolate tasting [S] great [C] food quality', '[O] unusual [S] great [C] food quality [A] dessert [SSEP] [O] yummy [S] great [C] food quality [A] port and chocolate tasting', '[A] dessert [O] unusual [C] food quality [S] great [SSEP] [A] port and chocolate tasting [O] yummy [C] food quality [S] great']

task, data: asqp rest16
target: [('food quality', 'shellfish and shrimp appetizer', 'ok', 'alright')]
output: ['[A] shellfish and shrimp appetizer [O] alright [S] great [C] food quality']
sent: ['I', 'got', 'the', 'shellfish', 'and', 'shrimp', 'appetizer', 'and', 'it', 'was', 'alright', '.']
counter: {('food quality', 'shellfish and shrimp appetizer', 'great', 'alright'): 5}
output quads: ['[A] shellfish and shrimp appetizer [O] alright [S] great [C] food quality']
multi_path: ['[O] alright [A] shellfish and shrimp appetizer [C] food quality [S] great', '[A] shellfish and shrimp appetizer [O] alright [S] great [C] food quality', '[O] alright [A] shellfish and shrimp appetizer [S] great [C] food quality', '[O] alright [S] great [C] food quality [A] shellfish and shrimp appetizer', '[A] shellfish and shrimp appetizer [O] alright [C] food quality [S] great']

task, data: asqp rest16
target: [('food style_options', 'menu', 'great', 'creative'), ('food style_options', 'pizza ’ s', 'great', 'thin crust')]
output: ['[A] menu [O] creative [S] great [C] food style_options', '[A] pizza ’ s [O] thin crust [S] great [C] food quality']
sent: ['The', 'pizza', '’', 's', 'are', 'thin', 'crust', 'and', 'the', 'menu', 'offers', 'very', 'creative', 'combinations', 'and', 'toppings', '.']
counter: {('food quality', 'pizza ’ s', 'great', 'thin crust'): 5, ('food style_options', 'menu', 'great', 'creative'): 5}
output quads: ['[A] pizza ’ s [O] thin crust [S] great [C] food quality', '[A] menu [O] creative [S] great [C] food style_options']
multi_path: ['[O] thin crust [A] pizza ’ s [C] food quality [S] great [SSEP] [O] creative [A] menu [C] food style_options [S] great', '[A] pizza ’ s [O] thin crust [S] great [C] food quality [SSEP] [A] menu [O] creative [S] great [C] food style_options', '[O] thin crust [A] pizza ’ s [S] great [C] food quality [SSEP] [O] creative [A] menu [S] great [C] food style_options', '[O] thin crust [S] great [C] food quality [A] pizza ’ s [SSEP] [O] creative [S] great [C] food style_options [A] menu', '[A] pizza ’ s [O] thin crust [C] food quality [S] great [SSEP] [A] menu [O] creative [C] food style_options [S] great']

task, data: asqp rest16
target: [('ambience general', 'place', 'great', 'relax'), ('food quality', 'food', 'great', 'finest quality')]
output: ['[A] food [O] finest quality [S] great [C] food quality']
sent: ['This', 'is', 'the', 'place', 'to', 'relax', 'and', 'enjoy', 'the', 'finest', 'quality', 'food', 'the', 'industry', 'can', 'offer', '.']
counter: {('food quality', 'food', 'great', 'finest quality'): 5}
output quads: ['[A] food [O] finest quality [S] great [C] food quality']
multi_path: ['[O] finest quality [A] food [C] food quality [S] great', '[A] food [O] finest quality [S] great [C] food quality', '[O] finest quality [A] food [S] great [C] food quality', '[O] finest quality [S] great [C] food quality [A] food', '[A] food [O] finest quality [C] food quality [S] great']

task, data: asqp rest16
target: [('ambience general', 'snooze', 'great', 'excellent'), ('food style_options', 'menu', 'bad', 'high brow'), ('restaurant prices', 'snooze', 'bad', 'overpriced')]
output: ['[A] ihop [O] overpriced [S] bad [C] food prices', '[A] menu [O] high brow [S] bad [C] food style_options', '[A] presentation of snooze [O] excellent [S] great [C] drinks style_options']
sent: ['The', 'presentation', 'of', 'Snooze', 'is', 'excellent', 'and', 'it', 'is', 'one', 'of', 'those', 'places', 'that', 'you', 'feel', 'more', 'sophisticated', 'just', 'for', 'being', 'there', ';', 'but', 'peel', 'back', 'the', 'layers', 'and', 'you', 'have', 'an', 'overpriced', 'IHOP', 'with', 'a', 'high', 'brow', 'menu', '.']
counter: {('drinks style_options', 'presentation of snooze', 'great', 'excellent'): 5, ('drinks style_options', 'ihop', 'bad', 'sophisticated'): 1, ('food prices', 'ihop', 'bad', 'overpriced'): 4, ('food style_options', 'menu', 'bad', 'high brow'): 5, ('food quality', 'ihop', 'bad', 'sophisticated'): 1, ('restaurant prices', 'ihop', 'great', 'sophisticated'): 1}
output quads: ['[A] presentation of snooze [O] excellent [S] great [C] drinks style_options', '[A] ihop [O] overpriced [S] bad [C] food prices', '[A] menu [O] high brow [S] bad [C] food style_options']
multi_path: ['[O] excellent [A] presentation of snooze [C] drinks style_options [S] great [SSEP] [O] sophisticated [A] ihop [C] drinks style_options [S] bad [SSEP] [O] overpriced [A] ihop [C] food prices [S] bad [SSEP] [O] high brow [A] menu [C] food style_options [S] bad', '[A] presentation of snooze [O] excellent [S] great [C] drinks style_options [SSEP] [A] ihop [O] overpriced [S] bad [C] food prices [SSEP] [A] menu [O] high brow [S] bad [C] food style_options', '[O] excellent [A] presentation of snooze [S] great [C] drinks style_options [SSEP] [O] sophisticated [A] ihop [S] bad [C] food quality [SSEP] [O] overpriced [A] ihop [S] bad [C] food prices [SSEP] [O] high brow [A] menu [S] bad [C] food style_options', '[O] excellent [S] great [C] drinks style_options [A] presentation of snooze [SSEP] [O] sophisticated [S] great [C] restaurant prices [A] ihop [SSEP] [O] high brow [S] bad [C] food style_options [A] menu', '[A] presentation of snooze [O] excellent [C] drinks style_options [S] great [SSEP] [A] ihop [O] overpriced [C] food prices [S] bad [SSEP] [A] menu [O] high brow [C] food style_options [S] bad']

task, data: asqp rest16
target: [('service general', 'manager', 'bad', 'not even apologetic')]
output: ['[A] manager [O] complained [S] bad [C] service general']
sent: ['I', 'complained', 'to', 'the', 'manager', ',', 'but', 'he', 'was', 'not', 'even', 'apologetic', '.']
counter: {('service general', 'manager', 'bad', 'complained'): 5}
output quads: ['[A] manager [O] complained [S] bad [C] service general']
multi_path: ['[O] complained [A] manager [C] service general [S] bad', '[A] manager [O] complained [S] bad [C] service general', '[O] complained [A] manager [S] bad [C] service general', '[O] complained [S] bad [C] service general [A] manager', '[A] manager [O] complained [C] service general [S] bad']

task, data: asqp rest16
target: [('food quality', 'food', 'great', 'high quality'), ('service general', 'service', 'great', 'good')]
output: ['[A] food [O] high quality [S] great [C] food quality', '[A] place [O] nice [S] great [C] restaurant prices', '[A] service [O] good [S] great [C] service general']
sent: ['–', 'In', 'a', 'age', 'of', 'incremental', 'cost', 'cutting', 'in', 'restaurants', ',', 'its', 'nice', 'to', 'see', 'a', 'place', 'that', 'bucks', 'that', 'trend', ',', 'and', 'just', 'plain', 'delivers', 'high', 'quality', 'food', 'and', 'good', 'service', ',', 'period', '.']
counter: {('restaurant prices', 'place', 'great', 'nice'): 3, ('food quality', 'food', 'great', 'high quality'): 5, ('service general', 'service', 'great', 'good'): 5}
output quads: ['[A] place [O] nice [S] great [C] restaurant prices', '[A] food [O] high quality [S] great [C] food quality', '[A] service [O] good [S] great [C] service general']
multi_path: ['[O] nice [A] place [C] restaurant prices [S] great [SSEP] [O] high quality [A] food [C] food quality [S] great [SSEP] [O] good [A] service [C] service general [S] great', '[A] food [O] high quality [S] great [C] food quality [SSEP] [A] service [O] good [S] great [C] service general', '[O] nice [A] place [S] great [C] restaurant prices [SSEP] [O] high quality [A] food [S] great [C] food quality [SSEP] [O] good [A] service [S] great [C] service general', '[O] nice [S] great [C] restaurant prices [A] place [SSEP] [O] high quality [S] great [C] food quality [A] food [SSEP] [O] good [S] great [C] service general [A] service', '[A] food [O] high quality [C] food quality [S] great [SSEP] [A] service [O] good [C] service general [S] great']

task, data: asqp rest16
target: [('ambience general', 'atmosphere', 'great', 'liked'), ('food prices', 'food', 'bad', 'not worth the price'), ('food quality', 'food', 'bad', 'not worth the price')]
output: ['[A] atmosphere [O] liked [S] great [C] ambience general', '[A] food [O] not worth the price [S] bad [C] food prices']
sent: ['I', 'liked', 'the', 'atmosphere', 'very', 'much', 'but', 'the', 'food', 'was', 'not', 'worth', 'the', 'price', '.']
counter: {('ambience general', 'atmosphere', 'great', 'liked'): 5, ('food prices', 'food', 'bad', 'not worth the price'): 5}
output quads: ['[A] atmosphere [O] liked [S] great [C] ambience general', '[A] food [O] not worth the price [S] bad [C] food prices']
multi_path: ['[O] liked [A] atmosphere [C] ambience general [S] great [SSEP] [O] not worth the price [A] food [C] food prices [S] bad', '[A] atmosphere [O] liked [S] great [C] ambience general [SSEP] [A] food [O] not worth the price [S] bad [C] food prices', '[O] liked [A] atmosphere [S] great [C] ambience general [SSEP] [O] not worth the price [A] food [S] bad [C] food prices', '[O] liked [S] great [C] ambience general [A] atmosphere [SSEP] [O] not worth the price [S] bad [C] food prices [A] food', '[A] atmosphere [O] liked [C] ambience general [S] great [SSEP] [A] food [O] not worth the price [C] food prices [S] bad']

task, data: asqp rest16
target: [('food quality', 'food', 'great', 'coming back'), ('location general', 'location', 'ok', 'not the greatest')]
output: ['[A] food [O] keeps me coming back [S] great [C] food quality', '[A] location [O] not the greatest [S] bad [C] location general']
sent: ['It', "'s", 'located', 'in', 'a', 'strip', 'mall', 'near', 'the', 'Beverly', 'Center', ',', 'not', 'the', 'greatest', 'location', ',', 'but', 'the', 'food', 'keeps', 'me', 'coming', 'back', 'for', 'more', '.']
counter: {('location general', 'location', 'bad', 'not the greatest'): 3, ('food quality', 'food', 'great', 'keeps me coming back'): 5, ('location general', 'null', 'bad', 'not the greatest'): 2}
output quads: ['[A] location [O] not the greatest [S] bad [C] location general', '[A] food [O] keeps me coming back [S] great [C] food quality']
multi_path: ['[O] not the greatest [A] location [C] location general [S] bad [SSEP] [O] keeps me coming back [A] food [C] food quality [S] great', '[A] it [O] not the greatest [S] bad [C] location general [SSEP] [A] food [O] keeps me coming back [S] great [C] food quality', '[O] not the greatest [A] location [S] bad [C] location general [SSEP] [O] keeps me coming back [A] food [S] great [C] food quality', '[O] not the greatest [S] bad [C] location general [A] location [SSEP] [O] keeps me coming back [S] great [C] food quality [A] food', '[A] it [O] not the greatest [C] location general [S] bad [SSEP] [A] food [O] keeps me coming back [C] food quality [S] great']

task, data: asqp rest16
target: [('food quality', 'eggs', 'bad', 'send back'), ('food quality', 'meal', 'bad', 'rejected')]
output: ['[A] eggs [O] send back [S] bad [C] food quality']
sent: ['On', 'my', 'meal', 'I', 'had', 'to', 'send', 'back', 'my', 'eggs', 'for', 'a', 'simple', 'request', 'of', 'breaking', 'the', 'yokes', 'before', 'cooking', ',', 'and', 'would', 'have', 'had', 'to', 'send', 'them', 'back', 'again', 'if', 'I', 'hadn', "'t", 'rejected', 'the', 'meal', 'all', 'together', '.']
counter: {('food quality', 'eggs', 'bad', 'send back'): 5}
output quads: ['[A] eggs [O] send back [S] bad [C] food quality']
multi_path: ['[O] send back [A] eggs [C] food quality [S] bad', '[A] eggs [O] send back [S] bad [C] food quality', '[O] send back [A] eggs [S] bad [C] food quality', '[O] send back [S] bad [C] food quality [A] eggs', '[A] eggs [O] send back [C] food quality [S] bad']

task, data: asqp rest16
target: [('food quality', 'sushi', 'great', 'best')]
output: ['[A] sushi [O] amazing [S] great [C] food quality', '[A] sushi [O] best [S] great [C] food quality', '[A] sushi [O] delicious [S] great [C] food quality', '[A] sushi [O] perfect [S] great [C] food quality', '[A] sushi [O] suculent [S] great [C] food quality']
sent: ['–', 'How', 'to', 'describe', 'the', 'best', 'sushi', 'in', 'NYC', ':', 'hmmmm', ',', 'delicious', ',', 'amazing', ',', 'fantastic', ',', 'suculent', ',', 'perfect', ',', 'nah', ',', 'all', 'of', 'the', 'above', '.']
counter: {('food quality', 'sushi', 'great', 'best'): 5, ('food quality', 'sushi', 'great', 'delicious'): 5, ('food quality', 'sushi', 'great', 'amazing'): 5, ('food quality', 'sushi', 'great', 'fantastic'): 1, ('food quality', 'sushi', 'great', 'suculent'): 5, ('food quality', 'sushi', 'great', 'perfect'): 5}
output quads: ['[A] sushi [O] best [S] great [C] food quality', '[A] sushi [O] delicious [S] great [C] food quality', '[A] sushi [O] amazing [S] great [C] food quality', '[A] sushi [O] suculent [S] great [C] food quality', '[A] sushi [O] perfect [S] great [C] food quality']
multi_path: ['[O] best [A] sushi [C] food quality [S] great [SSEP] [O] delicious [A] sushi [C] food quality [S] great [SSEP] [O] amazing [A] sushi [C] food quality [S] great [SSEP] [O] fantastic [A] sushi [C] food quality [S] great [SSEP] [O] suculent [A] sushi [C] food quality [S] great [SSEP] [O] perfect [A] sushi [C] food quality [S] great', '[A] sushi [O] best [S] great [C] food quality [SSEP] [A] sushi [O] delicious [S] great [C] food quality [SSEP] [A] sushi [O] amazing [S] great [C] food quality [SSEP] [A] sushi [O] suculent [S] great [C] food quality [SSEP] [A] sushi [O] perfect [S] great [C] food quality', '[O] best [A] sushi [S] great [C] food quality [SSEP] [O] delicious [A] sushi [S] great [C] food quality [SSEP] [O] amazing [A] sushi [S] great [C] food quality [SSEP] [O] suculent [A] sushi [S] great [C] food quality [SSEP] [O] perfect [A] sushi [S] great [C] food quality', '[O] best [S] great [C] food quality [A] sushi [SSEP] [O] delicious [S] great [C] food quality [A] sushi [SSEP] [O] amazing [S] great [C] food quality [A] sushi [SSEP] [O] suculent [S] great [C] food quality [A] sushi [SSEP] [O] perfect [S] great [C] food quality [A] sushi', '[A] sushi [O] best [C] food quality [S] great [SSEP] [A] sushi [O] delicious [C] food quality [S] great [SSEP] [A] sushi [O] amazing [C] food quality [S] great [SSEP] [A] sushi [O] suculent [C] food quality [S] great [SSEP] [A] sushi [O] perfect [C] food quality [S] great']

task, data: asqp rest16
target: [('food quality', 'food', 'ok', 'average'), ('location general', 'location along the marina in long beach', 'great', 'charming'), ('service general', 'customer service', 'bad', 'poor')]
output: ['[A] customer service [O] poor [S] bad [C] service general', '[A] food [O] average [S] ok [C] food quality', '[A] location [O] charming [S] great [C] location general']
sent: ['–', 'Schooner', 'or', 'Later', "'s", 'charming', 'location', 'along', 'the', 'marina', 'in', 'Long', 'Beach', 'and', 'average', 'food', 'does', 'not', ',', 'unfortunately', ',', 'compensate', 'for', 'its', 'very', 'poor', 'customer', 'service', '.']
counter: {('location general', 'location', 'great', 'charming'): 5, ('food quality', 'food', 'ok', 'average'): 5, ('service general', 'customer service', 'bad', 'poor'): 5}
output quads: ['[A] location [O] charming [S] great [C] location general', '[A] food [O] average [S] ok [C] food quality', '[A] customer service [O] poor [S] bad [C] service general']
multi_path: ['[O] charming [A] location [C] location general [S] great [SSEP] [O] average [A] food [C] food quality [S] ok [SSEP] [O] poor [A] customer service [C] service general [S] bad', '[A] location [O] charming [S] great [C] location general [SSEP] [A] food [O] average [S] ok [C] food quality [SSEP] [A] customer service [O] poor [S] bad [C] service general', '[O] charming [A] location [S] great [C] location general [SSEP] [O] average [A] food [S] ok [C] food quality [SSEP] [O] poor [A] customer service [S] bad [C] service general', '[O] charming [S] great [C] location general [A] location [SSEP] [O] average [S] ok [C] food quality [A] food [SSEP] [O] poor [S] bad [C] service general [A] customer service', '[A] location [O] charming [C] location general [S] great [SSEP] [A] food [O] average [C] food quality [S] ok [SSEP] [A] customer service [O] poor [C] service general [S] bad']

task, data: asqp rest16
target: [('drinks prices', 'iced tea', 'bad', '$ 27'), ('drinks prices', 'orange juice', 'bad', '$ 27'), ('food prices', 'breakfast burrito', 'bad', '$ 27'), ('food prices', 'pancakes', 'bad', '$ 27'), ('food style_options', 'pancakes', 'bad', 'small')]
output: ['[A] breakfast burrito [O] breakfast burrito [S] ok [C] food quality', '[A] iced tea [O] iced tea [S] ok [C] food quality', '[A] null [O] $ 27 [S] bad [C] restaurant prices', '[A] pancakes [O] small [S] ok [C] food style_options']
sent: ['In', 'the', 'end', 'our', 'check', 'came', 'to', '$', '27', 'for', '4', 'small', 'pancakes', ',', 'a', 'breakfast', 'burrito', ',', 'an', 'orange', 'juice', 'and', 'an', 'iced', 'tea', '(', 'I', 'had', 'water', ')', '.']
counter: {('restaurant prices', 'null', 'bad', '$ 27'): 5, ('food style_options', 'pancakes', 'ok', 'small'): 5, ('food quality', 'breakfast burrito', 'ok', 'breakfast burrito'): 3, ('food quality', 'iced tea', 'ok', 'iced tea'): 3, ('food quality', 'breakfast burrito', 'ok', 'small'): 2, ('drinks quality', 'orange juice', 'bad', 'and'): 2, ('food quality', 'iced tea', 'bad', 'and'): 2, ('drinks quality', 'orange juice', 'ok', 'a orange juice'): 2}
output quads: ['[A] null [O] $ 27 [S] bad [C] restaurant prices', '[A] pancakes [O] small [S] ok [C] food style_options', '[A] breakfast burrito [O] breakfast burrito [S] ok [C] food quality', '[A] iced tea [O] iced tea [S] ok [C] food quality']
multi_path: ['[O] $ 27 [A] it [C] restaurant prices [S] bad [SSEP] [O] small [A] pancakes [C] food style_options [S] ok [SSEP] [O] breakfast burrito [A] breakfast burrito [C] food quality [S] ok [SSEP] [O] iced tea [A] iced tea [C] food quality [S] ok', '[A] it [O] $ 27 [S] bad [C] restaurant prices [SSEP] [A] pancakes [O] small [S] ok [C] food style_options [SSEP] [A] breakfast burrito [O] small [S] ok [C] food quality [SSEP] [A] orange juice [O] and [S] bad [C] drinks quality [SSEP] [A] iced tea [O] and [S] bad [C] food quality', '[O] $ 27 [A] it [S] bad [C] restaurant prices [SSEP] [O] small [A] pancakes [S] ok [C] food style_options [SSEP] [O] breakfast burrito [A] breakfast burrito [S] ok [C] food quality [SSEP] [O] a orange juice [A] orange juice [S] ok [C] drinks quality [SSEP] [O] iced tea [A] iced tea [S] ok [C] food quality', '[O] $ 27 [S] bad [C] restaurant prices [A] it [SSEP] [O] small [S] ok [C] food style_options [A] pancakes [SSEP] [O] breakfast burrito [S] ok [C] food quality [A] breakfast burrito [SSEP] [O] a orange juice [S] ok [C] drinks quality [A] orange juice [SSEP] [O] iced tea [S] ok [C] food quality [A] iced tea', '[A] it [O] $ 27 [C] restaurant prices [S] bad [SSEP] [A] pancakes [O] small [C] food style_options [S] ok [SSEP] [A] breakfast burrito [O] small [C] food quality [S] ok [SSEP] [A] orange juice [O] and [C] drinks quality [S] bad [SSEP] [A] iced tea [O] and [C] food quality [S] bad']

task, data: asqp rest16
target: [('food quality', 'catering', 'great', 'out of this world'), ('food quality', 'raouls chicken vegetable soup', 'great', 'rocks my world')]
output: ['[A] catering [O] out of this world [S] great [C] service general', '[A] raouls chicken vegetable soup [O] rocks my world [S] great [C] food quality']
sent: ['The', 'catering', 'is', 'out', 'of', 'this', 'world', ',', 'and', 'Raouls', 'chicken', 'vegetable', 'soup', 'rocks', 'my', 'world', '!', '!', '!']
counter: {('service general', 'catering', 'great', 'out of this world'): 5, ('food quality', 'raouls chicken vegetable soup', 'great', 'rocks my world'): 5}
output quads: ['[A] catering [O] out of this world [S] great [C] service general', '[A] raouls chicken vegetable soup [O] rocks my world [S] great [C] food quality']
multi_path: ['[O] out of this world [A] catering [C] service general [S] great [SSEP] [O] rocks my world [A] raouls chicken vegetable soup [C] food quality [S] great', '[A] catering [O] out of this world [S] great [C] service general [SSEP] [A] raouls chicken vegetable soup [O] rocks my world [S] great [C] food quality', '[O] out of this world [A] catering [S] great [C] service general [SSEP] [O] rocks my world [A] raouls chicken vegetable soup [S] great [C] food quality', '[O] out of this world [S] great [C] service general [A] catering [SSEP] [O] rocks my world [S] great [C] food quality [A] raouls chicken vegetable soup', '[A] catering [O] out of this world [C] service general [S] great [SSEP] [A] raouls chicken vegetable soup [O] rocks my world [C] food quality [S] great']

task, data: asqp rest16
target: [('food style_options', 'crust', 'ok', 'thin'), ('food style_options', 'pizza ’ s', 'ok', 'not huge')]
output: ['[A] crust [O] thin [S] bad [C] food quality', '[A] pizza ’ s [O] not huge [S] bad [C] food style_options']
sent: ['The', 'pizza', '’', 's', 'are', 'not', 'huge', 'and', 'the', 'crust', 'is', 'thin', '...', 'keep', 'that', 'in', 'mind', 'when', 'you', '’', 're', 'ordering', '.']
counter: {('food style_options', 'pizza ’ s', 'bad', 'not huge'): 4, ('food quality', 'crust', 'bad', 'thin'): 5, ('food style_options', 'pizza ’ s', 'ok', 'not huge'): 1}
output quads: ['[A] pizza ’ s [O] not huge [S] bad [C] food style_options', '[A] crust [O] thin [S] bad [C] food quality']
multi_path: ['[O] not huge [A] pizza ’ s [C] food style_options [S] bad [SSEP] [O] thin [A] crust [C] food quality [S] bad', '[A] pizza ’ s [O] not huge [S] bad [C] food style_options [SSEP] [A] crust [O] thin [S] bad [C] food quality', '[O] not huge [A] pizza ’ s [S] bad [C] food style_options [SSEP] [O] thin [A] crust [S] bad [C] food quality', '[O] not huge [S] ok [C] food style_options [A] pizza ’ s [SSEP] [O] thin [S] bad [C] food quality [A] crust', '[A] pizza ’ s [O] not huge [C] food style_options [S] bad [SSEP] [A] crust [O] thin [C] food quality [S] bad']

task, data: asqp rest16
target: [('location general', 'location', 'great', 'nice')]
output: ['[A] location [O] nice [S] great [C] location general', '[A] mioposto [O] positive [S] great [C] location general']
sent: ['The', 'only', 'positive', 'thing', 'about', 'Mioposto', 'is', 'the', 'nice', 'location', '.']
counter: {('location general', 'mioposto', 'great', 'positive'): 5, ('location general', 'location', 'great', 'nice'): 5}
output quads: ['[A] mioposto [O] positive [S] great [C] location general', '[A] location [O] nice [S] great [C] location general']
multi_path: ['[O] positive [A] mioposto [C] location general [S] great [SSEP] [O] nice [A] location [C] location general [S] great', '[A] mioposto [O] positive [S] great [C] location general [SSEP] [A] location [O] nice [S] great [C] location general', '[O] positive [A] mioposto [S] great [C] location general [SSEP] [O] nice [A] location [S] great [C] location general', '[O] positive [S] great [C] location general [A] mioposto [SSEP] [O] nice [S] great [C] location general [A] location', '[A] mioposto [O] positive [C] location general [S] great [SSEP] [A] location [O] nice [C] location general [S] great']

task, data: asqp rest16
target: [('restaurant general', 'null', 'bad', 'disappointed')]
output: ['[A] null [O] disappointed [S] bad [C] food quality']
sent: ['Very', 'disappointed', '.']
counter: {('food quality', 'null', 'bad', 'disappointed'): 5}
output quads: ['[A] null [O] disappointed [S] bad [C] food quality']
multi_path: ['[O] disappointed [A] it [C] food quality [S] bad', '[A] it [O] disappointed [S] bad [C] food quality', '[O] disappointed [A] it [S] bad [C] food quality', '[O] disappointed [S] bad [C] food quality [A] it', '[A] it [O] disappointed [C] food quality [S] bad']

task, data: asqp rest16
target: [('food quality', 'sushi', 'great', 'freshest'), ('restaurant general', 'restaurant', 'great', 'love')]
output: ['[A] sushi [O] freshest [S] great [C] food quality', '[A] sushi [O] love [S] great [C] food quality']
sent: ['Freshest', 'sushi', '–', 'I', 'love', 'this', 'restaurant', '.']
counter: {('food quality', 'sushi', 'great', 'freshest'): 5, ('food quality', 'sushi', 'great', 'love'): 4, ('restaurant general', 'restaurant', 'great', 'love'): 1}
output quads: ['[A] sushi [O] freshest [S] great [C] food quality', '[A] sushi [O] love [S] great [C] food quality']
multi_path: ['[O] freshest [A] sushi [C] food quality [S] great [SSEP] [O] love [A] sushi [C] food quality [S] great', '[A] sushi [O] freshest [S] great [C] food quality [SSEP] [A] sushi [O] love [S] great [C] food quality', '[O] freshest [A] sushi [S] great [C] food quality [SSEP] [O] love [A] sushi [S] great [C] food quality', '[O] freshest [S] great [C] food quality [A] sushi [SSEP] [O] love [S] great [C] restaurant general [A] restaurant', '[A] sushi [O] freshest [C] food quality [S] great [SSEP] [A] sushi [O] love [C] food quality [S] great']

task, data: asqp rest16
target: [('food quality', 'steak', 'great', 'nice')]
output: ['[A] steak [O] exact liking [S] great [C] food quality', '[A] steak [O] juicy [S] great [C] food quality', '[A] steak [O] nice [S] great [C] food quality']
sent: ['The', 'steak', 'was', 'done', 'to', 'my', 'exact', 'liking', '(', 'medium', 'rare', ')', 'and', 'was', 'nice', 'and', 'juicy', '.']
counter: {('food quality', 'steak', 'great', 'exact liking'): 5, ('food quality', 'steak', 'great', 'nice'): 5, ('food quality', 'steak', 'great', 'juicy'): 5}
output quads: ['[A] steak [O] exact liking [S] great [C] food quality', '[A] steak [O] nice [S] great [C] food quality', '[A] steak [O] juicy [S] great [C] food quality']
multi_path: ['[O] exact liking [A] steak [C] food quality [S] great [SSEP] [O] nice [A] steak [C] food quality [S] great [SSEP] [O] juicy [A] steak [C] food quality [S] great', '[A] steak [O] exact liking [S] great [C] food quality [SSEP] [A] steak [O] nice [S] great [C] food quality [SSEP] [A] steak [O] juicy [S] great [C] food quality', '[O] exact liking [A] steak [S] great [C] food quality [SSEP] [O] nice [A] steak [S] great [C] food quality [SSEP] [O] juicy [A] steak [S] great [C] food quality', '[O] exact liking [S] great [C] food quality [A] steak [SSEP] [O] nice [S] great [C] food quality [A] steak [SSEP] [O] juicy [S] great [C] food quality [A] steak', '[A] steak [O] exact liking [C] food quality [S] great [SSEP] [A] steak [O] nice [C] food quality [S] great [SSEP] [A] steak [O] juicy [C] food quality [S] great']

task, data: asqp rest16
target: [('ambience general', 'null', 'great', "can't go wrong"), ('ambience general', 'null', 'great', 'unpretentious local fun')]
output: ["[A] null [O] can't go wrong [S] great [C] restaurant general"]
sent: ['Seriously', ',', 'you', 'ca', "n't", 'go', 'wrong', ',', 'if', 'it', 'is', 'unpretentious', 'local', 'fun', 'you', 'seek', '.']
counter: {('restaurant general', 'null', 'great', "can't go wrong"): 5}
output quads: ["[A] null [O] can't go wrong [S] great [C] restaurant general"]
multi_path: ["[O] can't go wrong [A] it [C] restaurant general [S] great", "[A] it [O] can't go wrong [S] great [C] restaurant general", "[O] can't go wrong [A] it [S] great [C] restaurant general", "[O] can't go wrong [S] great [C] restaurant general [A] it", "[A] it [O] can't go wrong [C] restaurant general [S] great"]

task, data: asqp rest16
target: [('drinks style_options', 'beer selection', 'great', 'worth staying for'), ('service general', 'owners', 'great', 'great')]
output: ['[A] beer selection [O] worth staying for [S] great [C] drinks style_options', '[A] owners [O] great fun [S] great [C] service general']
sent: ['The', 'owners', 'are', 'great', 'fun', 'and', 'the', 'beer', 'selection', 'is', 'worth', 'staying', 'for', '.']
counter: {('service general', 'owners', 'great', 'great fun'): 5, ('drinks style_options', 'beer selection', 'great', 'worth staying for'): 5}
output quads: ['[A] owners [O] great fun [S] great [C] service general', '[A] beer selection [O] worth staying for [S] great [C] drinks style_options']
multi_path: ['[O] great fun [A] owners [C] service general [S] great [SSEP] [O] worth staying for [A] beer selection [C] drinks style_options [S] great', '[A] owners [O] great fun [S] great [C] service general [SSEP] [A] beer selection [O] worth staying for [S] great [C] drinks style_options', '[O] great fun [A] owners [S] great [C] service general [SSEP] [O] worth staying for [A] beer selection [S] great [C] drinks style_options', '[O] great fun [S] great [C] service general [A] owners [SSEP] [O] worth staying for [S] great [C] drinks style_options [A] beer selection', '[A] owners [O] great fun [C] service general [S] great [SSEP] [A] beer selection [O] worth staying for [C] drinks style_options [S] great']

task, data: asqp rest16
target: [('drinks style_options', 'draft and bottle selection', 'great', 'great'), ('food quality', 'pizza', 'great', 'rocks')]
output: ['[A] bottle selection [O] great [S] great [C] drinks style_options', '[A] draft [O] great [S] great [C] drinks style_options', '[A] pizza [O] great [S] great [C] food quality']
sent: ['Great', 'draft', 'and', 'bottle', 'selection', 'and', 'the', 'pizza', 'rocks', '.']
counter: {('drinks style_options', 'draft', 'great', 'great'): 5, ('drinks style_options', 'bottle selection', 'great', 'great'): 5, ('food quality', 'pizza', 'great', 'great'): 3, ('food quality', 'pizza', 'great', 'rocks'): 2}
output quads: ['[A] draft [O] great [S] great [C] drinks style_options', '[A] bottle selection [O] great [S] great [C] drinks style_options', '[A] pizza [O] great [S] great [C] food quality']
multi_path: ['[O] great [A] draft [C] drinks style_options [S] great [SSEP] [O] great [A] bottle selection [C] drinks style_options [S] great [SSEP] [O] great [A] pizza [C] food quality [S] great', '[A] draft [O] great [S] great [C] drinks style_options [SSEP] [A] bottle selection [O] great [S] great [C] drinks style_options [SSEP] [A] pizza [O] rocks [S] great [C] food quality', '[O] great [A] draft [S] great [C] drinks style_options [SSEP] [O] great [A] bottle selection [S] great [C] drinks style_options [SSEP] [O] great [A] pizza [S] great [C] food quality', '[O] great [S] great [C] drinks style_options [A] draft [SSEP] [O] great [S] great [C] drinks style_options [A] bottle selection [SSEP] [O] great [S] great [C] food quality [A] pizza', '[A] draft [O] great [C] drinks style_options [S] great [SSEP] [A] bottle selection [O] great [C] drinks style_options [S] great [SSEP] [A] pizza [O] rocks [C] food quality [S] great']

task, data: asqp rest16
target: [('restaurant general', 'null', 'great', "won't be disappointed"), ('restaurant miscellaneous', 'null', 'great', 'valet parking')]
output: ["[A] null [O] won't be disappointed [S] great [C] service general"]
sent: ['I', 'guarantee', 'you', 'wo', "n't", 'be', 'disappointed', ',', 'there', "'s", 'also', 'valet', 'parking', '.']
counter: {('service general', 'null', 'great', "won't be disappointed"): 5}
output quads: ["[A] null [O] won't be disappointed [S] great [C] service general"]
multi_path: ["[O] won't be disappointed [A] it [C] service general [S] great", "[A] it [O] won't be disappointed [S] great [C] service general", "[O] won't be disappointed [A] it [S] great [C] service general", "[O] won't be disappointed [S] great [C] service general [A] it", "[A] it [O] won't be disappointed [C] service general [S] great"]

task, data: asqp rest16
target: [('food style_options', 'portions', 'ok', 'big')]
output: ['[A] portions [O] big [S] great [C] food style_options']
sent: ['The', 'portions', 'are', 'big', 'though', ',', 'so', 'do', 'not', 'order', 'too', 'much', '.']
counter: {('food style_options', 'portions', 'great', 'big'): 5}
output quads: ['[A] portions [O] big [S] great [C] food style_options']
multi_path: ['[O] big [A] portions [C] food style_options [S] great', '[A] portions [O] big [S] great [C] food style_options', '[O] big [A] portions [S] great [C] food style_options', '[O] big [S] great [C] food style_options [A] portions', '[A] portions [O] big [C] food style_options [S] great']

task, data: asqp rest16
target: [('ambience general', "jukebox's", 'great', 'best')]
output: ["[A] jukebox's [O] best [S] great [C] drinks quality"]
sent: ['Definitely', 'has', 'one', 'of', 'the', 'best', 'jukebox', "'s", 'i', "'ve", 'seen', 'in', 'a', 'long', 'long', 'time', '.']
counter: {('drinks quality', "jukebox's", 'great', 'best'): 4, ('drinks quality', 'jukebox', 'great', 'best'): 1}
output quads: ["[A] jukebox's [O] best [S] great [C] drinks quality"]
multi_path: ["[O] best [A] jukebox's [C] drinks quality [S] great", "[A] jukebox's [O] best [S] great [C] drinks quality", "[O] best [A] jukebox's [S] great [C] drinks quality", '[O] best [S] great [C] drinks quality [A] jukebox', "[A] jukebox's [O] best [C] drinks quality [S] great"]

task, data: asqp rest16
target: [('food quality', 'food', 'bad', 'okay')]
output: ['[A] food [O] okay [S] ok [C] food quality']
sent: ['I', 'may', 'not', 'be', 'a', 'sushi', 'guru', 'but', 'I', 'can', 'tell', 'you', 'that', 'the', 'food', 'here', 'is', 'just', 'okay', 'and', 'that', 'there', 'is', 'not', 'much', 'else', 'to', 'it', '.']
counter: {('food quality', 'food', 'ok', 'okay'): 5}
output quads: ['[A] food [O] okay [S] ok [C] food quality']
multi_path: ['[O] okay [A] food [C] food quality [S] ok', '[A] food [O] okay [S] ok [C] food quality', '[O] okay [A] food [S] ok [C] food quality', '[O] okay [S] ok [C] food quality [A] food', '[A] food [O] okay [C] food quality [S] ok']

task, data: asqp rest16
target: [('food quality', 'food', 'great', 'best'), ('service general', 'service', 'great', 'phenominal')]
output: ['[A] food [O] best [S] great [C] food quality', '[A] service [O] best [S] great [C] service general']
sent: ['Best', 'food', ',', 'phenominal', 'service']
counter: {('food quality', 'food', 'great', 'best'): 5, ('service general', 'service', 'great', 'best'): 3, ('service general', 'service', 'great', 'phenominal'): 2}
output quads: ['[A] food [O] best [S] great [C] food quality', '[A] service [O] best [S] great [C] service general']
multi_path: ['[O] best [A] food [C] food quality [S] great [SSEP] [O] best [A] service [C] service general [S] great', '[A] food [O] best [S] great [C] food quality [SSEP] [A] service [O] phenominal [S] great [C] service general', '[O] best [A] food [S] great [C] food quality [SSEP] [O] best [A] service [S] great [C] service general', '[O] best [S] great [C] food quality [A] food [SSEP] [O] best [S] great [C] service general [A] service', '[A] food [O] best [C] food quality [S] great [SSEP] [A] service [O] phenominal [C] service general [S] great']

task, data: asqp rest16
target: [('restaurant general', 'null', 'great', 'recommend'), ('restaurant prices', 'null', 'bad', 'expensive')]
output: ['[A] null [O] recommend [S] great [C] restaurant prices']
sent: ['I', 'recommend', 'it', 'for', 'a', 'night', 'when', 'you', 'want', 'to', 'splurge', '!', '(', 'it', 'was', 'a', 'bit', 'expensive', ')']
counter: {('restaurant prices', 'null', 'great', 'recommend'): 5}
output quads: ['[A] null [O] recommend [S] great [C] restaurant prices']
multi_path: ['[O] recommend [A] it [C] restaurant prices [S] great', '[A] it [O] recommend [S] great [C] restaurant prices', '[O] recommend [A] it [S] great [C] restaurant prices', '[O] recommend [S] great [C] restaurant prices [A] it', '[A] it [O] recommend [C] restaurant prices [S] great']

task, data: asqp rest16
target: [('food quality', 'food', 'great', 'good'), ('service general', 'restaurant staff', 'bad', 'indifferent')]
output: ['[A] food [O] good [S] great [C] food quality', '[A] staff [O] indifferent [S] bad [C] service general']
sent: ['While', 'this', 'diner', 'had', 'reasonably', 'good', 'food', ',', 'the', 'restaurant', 'staff', 'seemed', 'completely', 'indifferent', 'to', 'our', 'presence', ',', 'and', 'this', 'attitude', 'was', 'reflected', 'in', 'the', 'lack', 'of', 'service', '.']
counter: {('food quality', 'food', 'great', 'good'): 5, ('service general', 'staff', 'bad', 'indifferent'): 5}
output quads: ['[A] food [O] good [S] great [C] food quality', '[A] staff [O] indifferent [S] bad [C] service general']
multi_path: ['[O] good [A] food [C] food quality [S] great [SSEP] [O] indifferent [A] staff [C] service general [S] bad', '[A] food [O] good [S] great [C] food quality [SSEP] [A] staff [O] indifferent [S] bad [C] service general', '[O] good [A] food [S] great [C] food quality [SSEP] [O] indifferent [A] staff [S] bad [C] service general', '[O] good [S] great [C] food quality [A] food [SSEP] [O] indifferent [S] bad [C] service general [A] staff', '[A] food [O] good [C] food quality [S] great [SSEP] [A] staff [O] indifferent [C] service general [S] bad']

task, data: asqp rest16
target: [('food quality', 'batter', 'great', 'crispiness'), ('food quality', 'prawns', 'great', 'fresh'), ('food quality', 'walnuts', 'great', 'crunchy'), ('food quality', 'walnuts', 'great', 'tasty')]
output: ['[A] prawns [O] a slight crispiness about the batter [S] great [C] food quality', '[A] prawns [O] fresh [S] great [C] food quality', '[A] prawns [O] good [S] great [C] food quality', '[A] walnuts [O] crunchy [S] great [C] food quality', '[A] walnuts [O] tasty [S] great [C] food quality']
sent: ['so', 'about', 'the', 'prawns', ',', 'they', 'were', 'fresh', 'and', 'had', 'a', 'slight', 'crispiness', 'about', 'the', 'batter', '...', 'soooo', 'good', '...', 'the', 'walnuts', 'were', 'cut', 'in', 'smaller', 'pieces', 'and', 'very', 'crunchy', 'and', 'tasty', '.']
counter: {('food quality', 'prawns', 'great', 'fresh'): 5, ('food quality', 'prawns', 'great', 'a slight crispiness about the batter'): 3, ('food quality', 'prawns', 'great', 'good'): 3, ('food quality', 'walnuts', 'great', 'crunchy'): 5, ('food quality', 'walnuts', 'great', 'tasty'): 5, ('food quality', 'prawns', 'great', 'crispiness'): 2}
output quads: ['[A] prawns [O] fresh [S] great [C] food quality', '[A] prawns [O] a slight crispiness about the batter [S] great [C] food quality', '[A] prawns [O] good [S] great [C] food quality', '[A] walnuts [O] crunchy [S] great [C] food quality', '[A] walnuts [O] tasty [S] great [C] food quality']
multi_path: ['[O] fresh [A] prawns [C] food quality [S] great [SSEP] [O] a slight crispiness about the batter [A] prawns [C] food quality [S] great [SSEP] [O] good [A] prawns [C] food quality [S] great [SSEP] [O] crunchy [A] walnuts [C] food quality [S] great [SSEP] [O] tasty [A] walnuts [C] food quality [S] great', '[A] prawns [O] fresh [S] great [C] food quality [SSEP] [A] prawns [O] crispiness [S] great [C] food quality [SSEP] [A] walnuts [O] crunchy [S] great [C] food quality [SSEP] [A] walnuts [O] tasty [S] great [C] food quality', '[O] fresh [A] prawns [S] great [C] food quality [SSEP] [O] a slight crispiness about the batter [A] prawns [S] great [C] food quality [SSEP] [O] good [A] prawns [S] great [C] food quality [SSEP] [O] crunchy [A] walnuts [S] great [C] food quality [SSEP] [O] tasty [A] walnuts [S] great [C] food quality', '[O] fresh [S] great [C] food quality [A] prawns [SSEP] [O] a slight crispiness about the batter [S] great [C] food quality [A] prawns [SSEP] [O] good [S] great [C] food quality [A] prawns [SSEP] [O] crunchy [S] great [C] food quality [A] walnuts [SSEP] [O] tasty [S] great [C] food quality [A] walnuts', '[A] prawns [O] fresh [C] food quality [S] great [SSEP] [A] prawns [O] crispiness [C] food quality [S] great [SSEP] [A] walnuts [O] crunchy [C] food quality [S] great [SSEP] [A] walnuts [O] tasty [C] food quality [S] great']

task, data: asqp rest16
target: [('service general', 'null', 'bad', "didn't arrive until 45 minutes later")]
output: ["[A] food [O] didn't arrive until 45 minutes [S] bad [C] service general"]
sent: ['We', 'put', 'in', 'our', 'order', 'and', 'although', 'we', 'ordered', '4', 'appetizers', ',', 'the', 'food', 'did', "n't", 'arrive', 'until', '45', 'minutes', 'later', '...', 'WITH', 'OUR', 'MAIN', 'COURSE', '.']
counter: {('food quality', 'food', 'bad', "didn't arrive until 45 minutes"): 1, ('service general', 'food', 'bad', "didn't arrive until 45 minutes"): 3, ('service general', 'null', 'bad', "didn't arrive until 45 minutes"): 1}
output quads: ["[A] food [O] didn't arrive until 45 minutes [S] bad [C] service general"]
multi_path: ["[O] didn't arrive until 45 minutes [A] food [C] food quality [S] bad", "[A] food [O] didn't arrive until 45 minutes [S] bad [C] service general", "[O] didn't arrive until 45 minutes [A] food [S] bad [C] service general", "[O] didn't arrive until 45 minutes [S] bad [C] service general [A] it", "[A] food [O] didn't arrive until 45 minutes [C] service general [S] bad"]

task, data: asqp rest16
target: [('restaurant general', 'null', 'great', 'can not wait to go back')]
output: ['[A] null [O] go back again [S] great [C] restaurant general']
sent: ['I', 'can', 'not', 'wait', 'to', 'go', 'back', 'again', 'this', 'coming', 'weekend', '!']
counter: {('restaurant general', 'null', 'great', 'go back again'): 4, ('restaurant general', 'null', 'great', 'go back'): 1}
output quads: ['[A] null [O] go back again [S] great [C] restaurant general']
multi_path: ['[O] go back again [A] it [C] restaurant general [S] great', '[A] it [O] go back again [S] great [C] restaurant general', '[O] go back again [A] it [S] great [C] restaurant general', '[O] go back again [S] great [C] restaurant general [A] it', '[A] it [O] go back [C] restaurant general [S] great']

task, data: asqp rest16
target: [('food quality', 'null', 'great', 'good'), ('food style_options', 'portions', 'great', 'large'), ('food style_options', 'sushi dishes', 'great', 'creative')]
output: ['[A] null [O] good tasting [S] great [C] food quality', '[A] portions [O] large [S] great [C] food style_options', '[A] sushi dishes [O] creative [S] great [C] food style_options']
sent: ['If', 'you', "'re", 'interested', 'in', 'good', 'tasting', '(', 'without', 'the', 'fish', 'taste', 'or', 'smell', ')', ',', 'large', 'portions', 'and', 'creative', 'sushi', 'dishes', 'this', 'is', 'your', 'place', '...']
counter: {('food quality', 'null', 'great', 'good tasting'): 5, ('food style_options', 'portions', 'great', 'large'): 5, ('food style_options', 'sushi dishes', 'great', 'creative'): 5}
output quads: ['[A] null [O] good tasting [S] great [C] food quality', '[A] portions [O] large [S] great [C] food style_options', '[A] sushi dishes [O] creative [S] great [C] food style_options']
multi_path: ['[O] good tasting [A] it [C] food quality [S] great [SSEP] [O] large [A] portions [C] food style_options [S] great [SSEP] [O] creative [A] sushi dishes [C] food style_options [S] great', '[A] it [O] good tasting [S] great [C] food quality [SSEP] [A] portions [O] large [S] great [C] food style_options [SSEP] [A] sushi dishes [O] creative [S] great [C] food style_options', '[O] good tasting [A] it [S] great [C] food quality [SSEP] [O] large [A] portions [S] great [C] food style_options [SSEP] [O] creative [A] sushi dishes [S] great [C] food style_options', '[O] good tasting [S] great [C] food quality [A] it [SSEP] [O] large [S] great [C] food style_options [A] portions [SSEP] [O] creative [S] great [C] food style_options [A] sushi dishes', '[A] it [O] good tasting [C] food quality [S] great [SSEP] [A] portions [O] large [C] food style_options [S] great [SSEP] [A] sushi dishes [O] creative [C] food style_options [S] great']

task, data: asqp rest16
target: [('restaurant general', 'place', 'great', 'perfect')]
output: ['[A] place [O] perfect [S] great [C] restaurant miscellaneous']
sent: ['A', 'perfect', 'place', 'to', 'take', 'out', 'of', 'town', 'guests', 'any', 'time', 'of', 'the', 'year', '.']
counter: {('restaurant miscellaneous', 'place', 'great', 'perfect'): 5}
output quads: ['[A] place [O] perfect [S] great [C] restaurant miscellaneous']
multi_path: ['[O] perfect [A] place [C] restaurant miscellaneous [S] great', '[A] place [O] perfect [S] great [C] restaurant miscellaneous', '[O] perfect [A] place [S] great [C] restaurant miscellaneous', '[O] perfect [S] great [C] restaurant miscellaneous [A] place', '[A] place [O] perfect [C] restaurant miscellaneous [S] great']

task, data: asqp rest16
target: [('food quality', 'plate', 'great', 'superb')]
output: ['[A] items on her plate [O] superb [S] great [C] food quality']
sent: ['I', 'had', 'a', 'taste', 'of', 'all', 'three', 'items', 'on', 'her', 'plate', ',', 'and', 'they', 'were', 'superb', '.']
counter: {('food quality', 'items on her plate', 'great', 'superb'): 3, ('food quality', 'items', 'great', 'superb'): 2}
output quads: ['[A] items on her plate [O] superb [S] great [C] food quality']
multi_path: ['[O] superb [A] items on her plate [C] food quality [S] great', '[A] items on her plate [O] superb [S] great [C] food quality', '[O] superb [A] items [S] great [C] food quality', '[O] superb [S] great [C] food quality [A] items', '[A] items on her plate [O] superb [C] food quality [S] great']

task, data: asqp rest16
target: [('food quality', 'scallops', 'great', 'tasty'), ('food style_options', 'scallops', 'great', 'unique')]
output: ['[A] scallops [O] tasty [S] great [C] food quality', '[A] scallops [O] unique [S] great [C] food quality']
sent: ['The', 'scallops', 'are', 'apparently', 'cooked', 'in', 'a', 'black', 'olive', 'butter', 'which', 'really', 'makes', 'them', 'unique', '(', 'not', 'to', 'mention', 'tasty', ')', '.']
counter: {('food quality', 'scallops', 'great', 'unique'): 5, ('food quality', 'scallops', 'great', 'tasty'): 5}
output quads: ['[A] scallops [O] unique [S] great [C] food quality', '[A] scallops [O] tasty [S] great [C] food quality']
multi_path: ['[O] unique [A] scallops [C] food quality [S] great [SSEP] [O] tasty [A] scallops [C] food quality [S] great', '[A] scallops [O] unique [S] great [C] food quality [SSEP] [A] scallops [O] tasty [S] great [C] food quality', '[O] unique [A] scallops [S] great [C] food quality [SSEP] [O] tasty [A] scallops [S] great [C] food quality', '[O] unique [S] great [C] food quality [A] scallops [SSEP] [O] tasty [S] great [C] food quality [A] scallops', '[A] scallops [O] unique [C] food quality [S] great [SSEP] [A] scallops [O] tasty [C] food quality [S] great']

task, data: asqp rest16
target: [('ambience general', 'place', 'great', 'charming')]
output: ['[A] place [O] charming [S] great [C] ambience general', '[A] place [O] relaxing [S] great [C] ambience general']
sent: ['This', 'place', 'is', 'charming', 'and', 'relaxing', '.']
counter: {('ambience general', 'place', 'great', 'charming'): 5, ('ambience general', 'place', 'great', 'relaxing'): 5}
output quads: ['[A] place [O] charming [S] great [C] ambience general', '[A] place [O] relaxing [S] great [C] ambience general']
multi_path: ['[O] charming [A] place [C] ambience general [S] great [SSEP] [O] relaxing [A] place [C] ambience general [S] great', '[A] place [O] charming [S] great [C] ambience general [SSEP] [A] place [O] relaxing [S] great [C] ambience general', '[O] charming [A] place [S] great [C] ambience general [SSEP] [O] relaxing [A] place [S] great [C] ambience general', '[O] charming [S] great [C] ambience general [A] place [SSEP] [O] relaxing [S] great [C] ambience general [A] place', '[A] place [O] charming [C] ambience general [S] great [SSEP] [A] place [O] relaxing [C] ambience general [S] great']

task, data: asqp rest16
target: [('food quality', 'box sushi', 'great', 'perfect'), ('food quality', 'eel with avodcao', 'great', 'um um um'), ('food quality', 'spanish mackeral special appetizer', 'great', 'amazing')]
output: ['[A] box sushi [O] perfect [S] great [C] food quality', '[A] spanish mackeral special appetizer [O] amazing [S] great [C] food quality']
sent: ['Amazing', 'Spanish', 'Mackeral', 'special', 'appetizer', 'and', 'perfect', 'box', 'sushi', '(', 'that', 'eel', 'with', 'avodcao', '--', 'um', 'um', 'um', ')', '.']
counter: {('food quality', 'spanish mackeral special appetizer', 'great', 'amazing'): 5, ('food quality', 'box sushi', 'great', 'perfect'): 5}
output quads: ['[A] spanish mackeral special appetizer [O] amazing [S] great [C] food quality', '[A] box sushi [O] perfect [S] great [C] food quality']
multi_path: ['[O] amazing [A] spanish mackeral special appetizer [C] food quality [S] great [SSEP] [O] perfect [A] box sushi [C] food quality [S] great', '[A] spanish mackeral special appetizer [O] amazing [S] great [C] food quality [SSEP] [A] box sushi [O] perfect [S] great [C] food quality', '[O] amazing [A] spanish mackeral special appetizer [S] great [C] food quality [SSEP] [O] perfect [A] box sushi [S] great [C] food quality', '[O] amazing [S] great [C] food quality [A] spanish mackeral special appetizer [SSEP] [O] perfect [S] great [C] food quality [A] box sushi', '[A] spanish mackeral special appetizer [O] amazing [C] food quality [S] great [SSEP] [A] box sushi [O] perfect [C] food quality [S] great']

task, data: asqp rest16
target: [('service general', 'null', 'ok', 'wait')]
output: ['[A] null [O] wait [S] bad [C] service general']
sent: ['On', 'weekends', ',', 'you', 'might', 'have', 'to', 'wait', 'for', 'couple', 'hours', '.']
counter: {('service general', 'null', 'bad', 'wait'): 5}
output quads: ['[A] null [O] wait [S] bad [C] service general']
multi_path: ['[O] wait [A] it [C] service general [S] bad', '[A] it [O] wait [S] bad [C] service general', '[O] wait [A] it [S] bad [C] service general', '[O] wait [S] bad [C] service general [A] it', '[A] it [O] wait [C] service general [S] bad']

task, data: asqp rest16
target: [('drinks style_options', 'wine list', 'great', 'diverse'), ('drinks style_options', 'wine list', 'great', 'extensive'), ('drinks style_options', 'wine list', 'great', 'incredible'), ('food quality', 'food', 'great', 'incredible'), ('service general', 'staff', 'great', 'nice')]
output: ['[A] food [O] incredible [S] great [C] food quality', '[A] staff [O] good [S] great [C] service general', '[A] staff [O] nice [S] great [C] service general', '[A] wine list [O] diverse [S] great [C] drinks style_options', '[A] wine list [O] extensive [S] great [C] drinks style_options', '[A] wine list [O] incredible [S] great [C] drinks style_options']
sent: ['The', 'wine', 'list', 'is', 'incredible', 'and', 'extensive', 'and', 'diverse', ',', 'the', 'food', 'is', 'all', 'incredible', 'and', 'the', 'staff', 'was', 'all', 'very', 'nice', ',', 'good', 'at', 'their', 'jobs', 'and', 'cultured', '.']
counter: {('drinks style_options', 'wine list', 'great', 'incredible'): 5, ('drinks style_options', 'wine list', 'great', 'extensive'): 5, ('drinks style_options', 'wine list', 'great', 'diverse'): 4, ('food quality', 'food', 'great', 'incredible'): 5, ('service general', 'staff', 'great', 'nice'): 5, ('service general', 'staff', 'great', 'good'): 5}
output quads: ['[A] wine list [O] incredible [S] great [C] drinks style_options', '[A] wine list [O] extensive [S] great [C] drinks style_options', '[A] wine list [O] diverse [S] great [C] drinks style_options', '[A] food [O] incredible [S] great [C] food quality', '[A] staff [O] nice [S] great [C] service general', '[A] staff [O] good [S] great [C] service general']
multi_path: ['[O] incredible [A] wine list [C] drinks style_options [S] great [SSEP] [O] extensive [A] wine list [C] drinks style_options [S] great [SSEP] [O] diverse [A] wine list [C] drinks style_options [S] great [SSEP] [O] incredible [A] food [C] food quality [S] great [SSEP] [O] nice [A] staff [C] service general [S] great [SSEP] [O] good [A] staff [C] service general [S] great', '[A] wine list [O] incredible [S] great [C] drinks style_options [SSEP] [A] wine list [O] extensive [S] great [C] drinks style_options [SSEP] [A] food [O] incredible [S] great [C] food quality [SSEP] [A] staff [O] nice [S] great [C] service general [SSEP] [A] staff [O] good [S] great [C] service general', '[O] incredible [A] wine list [S] great [C] drinks style_options [SSEP] [O] extensive [A] wine list [S] great [C] drinks style_options [SSEP] [O] diverse [A] wine list [S] great [C] drinks style_options [SSEP] [O] incredible [A] food [S] great [C] food quality [SSEP] [O] nice [A] staff [S] great [C] service general [SSEP] [O] good [A] staff [S] great [C] service general', '[O] incredible [S] great [C] drinks style_options [A] wine list [SSEP] [O] extensive [S] great [C] drinks style_options [A] wine list [SSEP] [O] diverse [S] great [C] drinks style_options [A] wine list [SSEP] [O] incredible [S] great [C] food quality [A] food [SSEP] [O] nice [S] great [C] service general [A] staff [SSEP] [O] good [S] great [C] service general [A] staff', '[A] wine list [O] incredible [C] drinks style_options [S] great [SSEP] [A] wine list [O] extensive [C] drinks style_options [S] great [SSEP] [A] wine list [O] diverse [C] drinks style_options [S] great [SSEP] [A] food [O] incredible [C] food quality [S] great [SSEP] [A] staff [O] nice [C] service general [S] great [SSEP] [A] staff [O] good [C] service general [S] great']

task, data: asqp rest16
target: [('restaurant general', 'null', 'great', 'cant get any better')]
output: ['[A] null [O] cant get any better [S] great [C] food quality']
sent: ['–', 'IT', 'CANT', 'GET', 'ANY', 'BETTER', '!', '!', '!', '!', '!']
counter: {('food quality', 'null', 'great', 'cant get any better'): 5}
output quads: ['[A] null [O] cant get any better [S] great [C] food quality']
multi_path: ['[O] cant get any better [A] it [C] food quality [S] great', '[A] it [O] cant get any better [S] great [C] food quality', '[O] cant get any better [A] it [S] great [C] food quality', '[O] cant get any better [S] great [C] food quality [A] it', '[A] it [O] cant get any better [C] food quality [S] great']

task, data: asqp rest16
target: [('food quality', 'pizza', 'bad', 'lacks quality and good taste')]
output: ["[A] mioposto's pizza [O] good taste [S] bad [C] food quality", "[A] mioposto's pizza [O] lacks quality [S] bad [C] food quality", '[A] pizza [O] favorite [S] great [C] food quality']
sent: ['I', 'know', 'many', 'people', 'have', 'their', 'favorite', 'types', 'of', 'pizza', 'and', 'pizza', 'places', ',', 'but', 'Mioposto', "'s", 'pizza', 'lacks', 'quality', 'and', 'good', 'taste', '.']
counter: {('food quality', 'pizza', 'great', 'favorite'): 5, ('food quality', "mioposto's pizza", 'bad', 'lacks quality'): 5, ('food quality', "mioposto's pizza", 'bad', 'good taste'): 5}
output quads: ['[A] pizza [O] favorite [S] great [C] food quality', "[A] mioposto's pizza [O] lacks quality [S] bad [C] food quality", "[A] mioposto's pizza [O] good taste [S] bad [C] food quality"]
multi_path: ["[O] favorite [A] pizza [C] food quality [S] great [SSEP] [O] lacks quality [A] mioposto's pizza [C] food quality [S] bad [SSEP] [O] good taste [A] mioposto's pizza [C] food quality [S] bad", "[A] pizza [O] favorite [S] great [C] food quality [SSEP] [A] mioposto's pizza [O] lacks quality [S] bad [C] food quality [SSEP] [A] mioposto's pizza [O] good taste [S] bad [C] food quality", "[O] favorite [A] pizza [S] great [C] food quality [SSEP] [O] lacks quality [A] mioposto's pizza [S] bad [C] food quality [SSEP] [O] good taste [A] mioposto's pizza [S] bad [C] food quality", "[O] favorite [S] great [C] food quality [A] pizza [SSEP] [O] lacks quality [S] bad [C] food quality [A] mioposto's pizza [SSEP] [O] good taste [S] bad [C] food quality [A] mioposto's pizza", "[A] pizza [O] favorite [C] food quality [S] great [SSEP] [A] mioposto's pizza [O] lacks quality [C] food quality [S] bad [SSEP] [A] mioposto's pizza [O] good taste [C] food quality [S] bad"]

task, data: asqp rest16
target: [('restaurant general', 'place', 'great', 'has it all')]
output: ['[A] place [O] plus a lot more [S] great [C] restaurant general']
sent: ['There', 'is', 'only', 'one', 'place', 'on', 'the', 'east', 'coast', 'that', 'has', 'it', 'all', ',', 'plus', 'a', 'lot', 'more', '.']
counter: {('restaurant general', 'place', 'great', 'plus a lot more'): 5}
output quads: ['[A] place [O] plus a lot more [S] great [C] restaurant general']
multi_path: ['[O] plus a lot more [A] place [C] restaurant general [S] great', '[A] place [O] plus a lot more [S] great [C] restaurant general', '[O] plus a lot more [A] place [S] great [C] restaurant general', '[O] plus a lot more [S] great [C] restaurant general [A] place', '[A] place [O] plus a lot more [C] restaurant general [S] great']

task, data: asqp rest16
target: [('restaurant miscellaneous', 'null', 'bad', 'light years')]
output: ['[A] null [O] kid friendly [S] great [C] restaurant miscellaneous']
sent: ['The', 'prior', 'reviews', 'said', 'Kid', 'friendly', '...', 'give', 'me', 'a', 'break', 'with', 'two', 'young', 'children', 'that', 'is', 'light', 'years', '.']
counter: {('restaurant miscellaneous', 'null', 'great', 'kid friendly'): 5}
output quads: ['[A] null [O] kid friendly [S] great [C] restaurant miscellaneous']
multi_path: ['[O] kid friendly [A] it [C] restaurant miscellaneous [S] great', '[A] it [O] kid friendly [S] great [C] restaurant miscellaneous', '[O] kid friendly [A] it [S] great [C] restaurant miscellaneous', '[O] kid friendly [S] great [C] restaurant miscellaneous [A] it', '[A] it [O] kid friendly [C] restaurant miscellaneous [S] great']

task, data: asqp rest16
target: [('service general', 'waitress', 'bad', 'had a very hard time')]
output: ['[A] waitress [O] hard time [S] bad [C] service general']
sent: ['We', 'had', 'a', 'very', 'hard', 'time', 'getting', 'the', 'waitress', "'", 'attention', 'and', 'finally', 'had', 'to', 'get', 'up', 'and', 'go', 'inside', 'to', 'speak', 'to', 'a', 'manager', '.']
counter: {('service general', 'waitress', 'bad', 'hard time'): 5}
output quads: ['[A] waitress [O] hard time [S] bad [C] service general']
multi_path: ['[O] hard time [A] waitress [C] service general [S] bad', '[A] waitress [O] hard time [S] bad [C] service general', '[O] hard time [A] waitress [S] bad [C] service general', '[O] hard time [S] bad [C] service general [A] waitress', '[A] waitress [O] hard time [C] service general [S] bad']

task, data: asqp rest16
target: [('restaurant miscellaneous', 'null', 'great', 'never too crowded'), ('service general', 'service', 'great', 'great')]
output: ['[A] service [O] great [S] great [C] service general', '[A] service [O] never too crowded [S] great [C] service general']
sent: ['Never', 'too', 'crowded', 'and', 'always', 'great', 'service', '.']
counter: {('service general', 'service', 'great', 'never too crowded'): 4, ('service general', 'service', 'great', 'great'): 5, ('restaurant miscellaneous', 'service', 'great', 'never too crowded'): 1}
output quads: ['[A] service [O] never too crowded [S] great [C] service general', '[A] service [O] great [S] great [C] service general']
multi_path: ['[O] never too crowded [A] service [C] service general [S] great [SSEP] [O] great [A] service [C] service general [S] great', '[A] service [O] never too crowded [S] great [C] service general [SSEP] [A] service [O] great [S] great [C] service general', '[O] never too crowded [A] service [S] great [C] service general [SSEP] [O] great [A] service [S] great [C] service general', '[O] never too crowded [S] great [C] restaurant miscellaneous [A] service [SSEP] [O] great [S] great [C] service general [A] service', '[A] service [O] never too crowded [C] service general [S] great [SSEP] [A] service [O] great [C] service general [S] great']

task, data: asqp rest16
target: [('food quality', 'sushi', 'great', 'this might be the place')]
output: ['[A] place [O] the place [S] great [C] restaurant miscellaneous']
sent: ['you', 'are', 'with', 'a', 'hot', 'date', 'and', 'he', '/she', 'has', 'an', 'urge', 'for', 'sushi', '...', 'then', 'this', 'might', 'be', 'the', 'place', '.']
counter: {('food quality', 'sushi', 'great', 'the place'): 2, ('restaurant miscellaneous', 'place', 'great', 'the place'): 3}
output quads: ['[A] place [O] the place [S] great [C] restaurant miscellaneous']
multi_path: ['[O] the place [A] sushi [C] food quality [S] great', '[A] place [O] the place [S] great [C] restaurant miscellaneous', '[O] the place [A] sushi [S] great [C] food quality', '[O] the place [S] great [C] restaurant miscellaneous [A] place', '[A] place [O] the place [C] restaurant miscellaneous [S] great']

task, data: asqp rest16
target: [('restaurant miscellaneous', "murphy's", 'great', 'amazing')]
output: ["[A] murphy's [O] amazing [S] great [C] restaurant general"]
sent: ['–', 'I', 'ca', "n't", 'believe', 'Murphy', "'s", 'has', 'been', 'around', 'for', 'over', '25', 'years', ',', 'amazing', '.']
counter: {('restaurant general', "murphy's", 'great', 'amazing'): 5}
output quads: ["[A] murphy's [O] amazing [S] great [C] restaurant general"]
multi_path: ["[O] amazing [A] murphy's [C] restaurant general [S] great", "[A] murphy's [O] amazing [S] great [C] restaurant general", "[O] amazing [A] murphy's [S] great [C] restaurant general", "[O] amazing [S] great [C] restaurant general [A] murphy's", "[A] murphy's [O] amazing [C] restaurant general [S] great"]

task, data: asqp rest16
target: [('service general', 'service', 'great', 'efficient')]
output: ['[A] null [O] busy [S] bad [C] service general', '[A] service [O] efficient [S] great [C] service general']
sent: ['Can', 'get', 'busy', 'on', 'Fridays', 'for', 'a', 'table', 'but', 'once', 'seated', ',', 'the', 'service', 'is', 'so', 'efficient', 'you', 'can', 'be', 'in', 'and', 'out', 'of', 'there', 'quickly', '.']
counter: {('service general', 'null', 'bad', 'busy'): 5, ('service general', 'service', 'great', 'efficient'): 5}
output quads: ['[A] null [O] busy [S] bad [C] service general', '[A] service [O] efficient [S] great [C] service general']
multi_path: ['[O] busy [A] it [C] service general [S] bad [SSEP] [O] efficient [A] service [C] service general [S] great', '[A] it [O] busy [S] bad [C] service general [SSEP] [A] service [O] efficient [S] great [C] service general', '[O] busy [A] it [S] bad [C] service general [SSEP] [O] efficient [A] service [S] great [C] service general', '[O] busy [S] bad [C] service general [A] it [SSEP] [O] efficient [S] great [C] service general [A] service', '[A] it [O] busy [C] service general [S] bad [SSEP] [A] service [O] efficient [C] service general [S] great']

task, data: asqp rest16
target: [('food quality', 'peppercorn sauce', 'ok', 'indistinguishable'), ('food quality', 'red wine reduction', 'ok', 'indistinguishable')]
output: ['[A] null [O] indistinguishable [S] great [C] food quality']
sent: ['It', '?', 's', 'served', 'with', 'either', 'a', 'peppercorn', 'sauce', 'or', 'red', 'wine', 'reduction', ',', 'though', 'both', 'were', 'indistinguishable', 'in', 'taste', '.']
counter: {('food quality', 'peppercorn sauce', 'great', 'indistinguishable'): 2, ('food quality', 'red wine reduction', 'great', 'indistinguishable'): 2, ('food quality', 'null', 'great', 'indistinguishable'): 3}
output quads: ['[A] null [O] indistinguishable [S] great [C] food quality']
multi_path: ['[O] indistinguishable [A] peppercorn sauce [C] food quality [S] great [SSEP] [O] indistinguishable [A] red wine reduction [C] food quality [S] great', '[A] it [O] indistinguishable [S] great [C] food quality', '[O] indistinguishable [A] peppercorn sauce [S] great [C] food quality [SSEP] [O] indistinguishable [A] red wine reduction [S] great [C] food quality', '[O] indistinguishable [S] great [C] food quality [A] it', '[A] it [O] indistinguishable [C] food quality [S] great']

task, data: asqp rest16
target: [('service general', 'service', 'great', 'courteous')]
output: ['[A] service [O] attentive [S] great [C] service general', '[A] service [O] courteous [S] great [C] service general']
sent: ['The', 'service', 'was', 'courteous', 'and', 'attentive', '.']
counter: {('service general', 'service', 'great', 'courteous'): 5, ('service general', 'service', 'great', 'attentive'): 5}
output quads: ['[A] service [O] courteous [S] great [C] service general', '[A] service [O] attentive [S] great [C] service general']
multi_path: ['[O] courteous [A] service [C] service general [S] great [SSEP] [O] attentive [A] service [C] service general [S] great', '[A] service [O] courteous [S] great [C] service general [SSEP] [A] service [O] attentive [S] great [C] service general', '[O] courteous [A] service [S] great [C] service general [SSEP] [O] attentive [A] service [S] great [C] service general', '[O] courteous [S] great [C] service general [A] service [SSEP] [O] attentive [S] great [C] service general [A] service', '[A] service [O] courteous [C] service general [S] great [SSEP] [A] service [O] attentive [C] service general [S] great']

task, data: asqp rest16
target: [('restaurant miscellaneous', 'null', 'bad', "doesn 't work")]
output: ["[A] null [O] doesn 't work [S] bad [C] service general"]
sent: ['As', 'of', 'writing', 'this', 'I', 'just', 'tried', 'their', 'give', 'away', 'a', 'link', 'again', '&', 'it', 'still', 'doesn', "'t", 'work', '.']
counter: {('service general', 'null', 'bad', "doesn 't work"): 5}
output quads: ["[A] null [O] doesn 't work [S] bad [C] service general"]
multi_path: ["[O] doesn 't work [A] it [C] service general [S] bad", "[A] it [O] doesn 't work [S] bad [C] service general", "[O] doesn 't work [A] it [S] bad [C] service general", "[O] doesn 't work [S] bad [C] service general [A] it", "[A] it [O] doesn 't work [C] service general [S] bad"]

task, data: asqp rest16
target: [('service general', 'null', 'bad', 'no one stopped by the table')]
output: ['[A] null [O] could not have been met [S] bad [C] service general']
sent: ['any', 'further', 'needs', 'we', 'may', 'have', 'had', 'could', 'not', 'have', 'been', 'met', 'since', 'no', 'one', 'stopped', 'by', 'the', 'table', '.']
counter: {('service general', 'null', 'bad', 'could not have been met'): 5}
output quads: ['[A] null [O] could not have been met [S] bad [C] service general']
multi_path: ['[O] could not have been met [A] it [C] service general [S] bad', '[A] it [O] could not have been met [S] bad [C] service general', '[O] could not have been met [A] it [S] bad [C] service general', '[O] could not have been met [S] bad [C] service general [A] it', '[A] it [O] could not have been met [C] service general [S] bad']

task, data: asqp rest16
target: [('food prices', 'sushi', 'bad', 'high'), ('food quality', 'sushi', 'great', 'good')]
output: ['[A] null [O] high [S] bad [C] restaurant prices', '[A] sushi [O] good [S] great [C] food quality']
sent: ['Good', 'Sushi', ',', 'High', 'Price']
counter: {('food quality', 'sushi', 'great', 'good'): 5, ('restaurant prices', 'null', 'bad', 'high'): 3, ('food prices', 'sushi', 'bad', 'high'): 2}
output quads: ['[A] sushi [O] good [S] great [C] food quality', '[A] null [O] high [S] bad [C] restaurant prices']
multi_path: ['[O] good [A] sushi [C] food quality [S] great [SSEP] [O] high [A] it [C] restaurant prices [S] bad', '[A] sushi [O] good [S] great [C] food quality [SSEP] [A] sushi [O] high [S] bad [C] food prices', '[O] good [A] sushi [S] great [C] food quality [SSEP] [O] high [A] it [S] bad [C] restaurant prices', '[O] good [S] great [C] food quality [A] sushi [SSEP] [O] high [S] bad [C] restaurant prices [A] it', '[A] sushi [O] good [C] food quality [S] great [SSEP] [A] sushi [O] high [C] food prices [S] bad']

task, data: asqp rest16
target: [('service general', 'servers', 'great', 'attentive')]
output: ['[A] servers [O] attentive [S] great [C] service general', '[A] servers [O] friendly [S] great [C] service general']
sent: ['But', 'the', 'servers', 'were', 'extremely', 'attentive', 'and', 'very', 'friendly', '.']
counter: {('service general', 'servers', 'great', 'attentive'): 5, ('service general', 'servers', 'great', 'friendly'): 5}
output quads: ['[A] servers [O] attentive [S] great [C] service general', '[A] servers [O] friendly [S] great [C] service general']
multi_path: ['[O] attentive [A] servers [C] service general [S] great [SSEP] [O] friendly [A] servers [C] service general [S] great', '[A] servers [O] attentive [S] great [C] service general [SSEP] [A] servers [O] friendly [S] great [C] service general', '[O] attentive [A] servers [S] great [C] service general [SSEP] [O] friendly [A] servers [S] great [C] service general', '[O] attentive [S] great [C] service general [A] servers [SSEP] [O] friendly [S] great [C] service general [A] servers', '[A] servers [O] attentive [C] service general [S] great [SSEP] [A] servers [O] friendly [C] service general [S] great']

task, data: asqp rest16
target: [('food quality', 'null', 'great', 'thumbs up')]
output: ['[A] null [O] thumbs up [S] great [C] restaurant general']
sent: ['Two', 'thumbs', 'up', '!']
counter: {('restaurant general', 'null', 'great', 'thumbs up'): 5}
output quads: ['[A] null [O] thumbs up [S] great [C] restaurant general']
multi_path: ['[O] thumbs up [A] it [C] restaurant general [S] great', '[A] it [O] thumbs up [S] great [C] restaurant general', '[O] thumbs up [A] it [S] great [C] restaurant general', '[O] thumbs up [S] great [C] restaurant general [A] it', '[A] it [O] thumbs up [C] restaurant general [S] great']

task, data: asqp rest16
target: [('location general', 'views', 'great', 'third-best thing'), ('restaurant general', "ray's", 'great', 'happy surprise')]
output: ['[A] views [O] happy surprise [S] great [C] location general', '[A] views [O] third-best [S] great [C] location general']
sent: ['Imagine', 'my', 'happy', 'surprise', 'upon', 'finding', 'that', 'the', 'views', 'are', 'only', 'the', 'third-best', 'thing', 'about', 'Ray', "'s", '!']
counter: {('location general', 'views', 'great', 'happy surprise'): 5, ('location general', 'views', 'great', 'third-best'): 5}
output quads: ['[A] views [O] happy surprise [S] great [C] location general', '[A] views [O] third-best [S] great [C] location general']
multi_path: ['[O] happy surprise [A] views [C] location general [S] great [SSEP] [O] third-best [A] views [C] location general [S] great', '[A] views [O] happy surprise [S] great [C] location general [SSEP] [A] views [O] third-best [S] great [C] location general', '[O] happy surprise [A] views [S] great [C] location general [SSEP] [O] third-best [A] views [S] great [C] location general', '[O] happy surprise [S] great [C] location general [A] views [SSEP] [O] third-best [S] great [C] location general [A] views', '[A] views [O] happy surprise [C] location general [S] great [SSEP] [A] views [O] third-best [C] location general [S] great']

task, data: asqp rest16
target: [('restaurant general', 'null', 'great', "don't miss")]
output: ["[A] danny gans [O] don't miss [S] great [C] restaurant general"]
sent: ['If', 'you', "'re", 'going', 'to', 'see', 'Danny', 'Gans', 'or', 'just', 'staying', 'at', 'the', 'Mirage', ',', 'do', "n't", 'miss', 'this', 'one', '.']
counter: {('restaurant general', 'danny gans', 'great', "don't miss"): 5}
output quads: ["[A] danny gans [O] don't miss [S] great [C] restaurant general"]
multi_path: ["[O] don't miss [A] danny gans [C] restaurant general [S] great", "[A] danny gans [O] don't miss [S] great [C] restaurant general", "[O] don't miss [A] danny gans [S] great [C] restaurant general", "[O] don't miss [S] great [C] restaurant general [A] danny gans", "[A] danny gans [O] don't miss [C] restaurant general [S] great"]

task, data: asqp rest16
target: [('food quality', 'sashimi', 'great', 'freshest')]
output: ['[A] sashimi [O] freshest [S] great [C] food quality', '[A] sashimi [O] tender [S] great [C] food quality']
sent: ['The', 'sashimi', 'was', 'the', 'freshest', 'and', 'most', 'tender', 'I', 'have', 'ever', 'tasted', '.']
counter: {('food quality', 'sashimi', 'great', 'freshest'): 5, ('food quality', 'sashimi', 'great', 'tender'): 5}
output quads: ['[A] sashimi [O] freshest [S] great [C] food quality', '[A] sashimi [O] tender [S] great [C] food quality']
multi_path: ['[O] freshest [A] sashimi [C] food quality [S] great [SSEP] [O] tender [A] sashimi [C] food quality [S] great', '[A] sashimi [O] freshest [S] great [C] food quality [SSEP] [A] sashimi [O] tender [S] great [C] food quality', '[O] freshest [A] sashimi [S] great [C] food quality [SSEP] [O] tender [A] sashimi [S] great [C] food quality', '[O] freshest [S] great [C] food quality [A] sashimi [SSEP] [O] tender [S] great [C] food quality [A] sashimi', '[A] sashimi [O] freshest [C] food quality [S] great [SSEP] [A] sashimi [O] tender [C] food quality [S] great']

task, data: asqp rest16
target: [('food quality', 'fish', 'bad', 'decent')]
output: ['[A] fish [O] good [S] great [C] food quality']
sent: ['Maybe', 'it', 'is', 'good', 'for', 'that', 'one', 'night', 'once', 'in', 'a', 'blue', 'moon', 'when', 'the', 'chefs', 'decide', 'to', 'use', 'fish', 'that', "'s", 'half-way', 'decent', '.']
counter: {('food quality', 'fish', 'great', 'good'): 5}
output quads: ['[A] fish [O] good [S] great [C] food quality']
multi_path: ['[O] good [A] fish [C] food quality [S] great', '[A] fish [O] good [S] great [C] food quality', '[O] good [A] fish [S] great [C] food quality', '[O] good [S] great [C] food quality [A] fish', '[A] fish [O] good [C] food quality [S] great']

task, data: asqp rest16
target: [('restaurant general', 'open sesame', 'great', 'reeling')]
output: ['[A] sesame [O] reeling [S] great [C] food quality']
sent: ['–', 'I', "'ve", 'been', 'to', 'Open', 'Sesame', 'only', 'once', ',', 'but', 'I', "'m", 'still', 'reeling', 'from', 'the', 'experience', '!', '!']
counter: {('food quality', 'sesame', 'great', 'reeling'): 5}
output quads: ['[A] sesame [O] reeling [S] great [C] food quality']
multi_path: ['[O] reeling [A] sesame [C] food quality [S] great', '[A] sesame [O] reeling [S] great [C] food quality', '[O] reeling [A] sesame [S] great [C] food quality', '[O] reeling [S] great [C] food quality [A] sesame', '[A] sesame [O] reeling [C] food quality [S] great']

task, data: asqp rest16
target: [('food prices', 'pancakes', 'bad', 'over-priced'), ('food style_options', 'pancakes', 'great', 'inventive')]
output: ['[A] pancake flight [O] over-priced [S] bad [C] food prices', '[A] pancakes [O] inventive [S] great [C] food quality']
sent: ['The', 'pancakes', 'were', 'certainly', 'inventive', 'but', '$', '8.50', 'for', '3', '-', '6', '``', 'pancakes', '(', 'one', 'of', 'them', 'was', 'more', 'like', '5', '``', ')', 'in', 'the', 'pancake', 'flight', '(', 'sample', 'of', '3', 'different', 'pancakes', ')', 'is', 'well', 'over-priced', '.']
counter: {('food quality', 'pancakes', 'great', 'inventive'): 5, ('food prices', 'pancake flight', 'bad', 'over-priced'): 5}
output quads: ['[A] pancakes [O] inventive [S] great [C] food quality', '[A] pancake flight [O] over-priced [S] bad [C] food prices']
multi_path: ['[O] inventive [A] pancakes [C] food quality [S] great [SSEP] [O] over-priced [A] pancake flight [C] food prices [S] bad', '[A] pancakes [O] inventive [S] great [C] food quality [SSEP] [A] pancake flight [O] over-priced [S] bad [C] food prices', '[O] inventive [A] pancakes [S] great [C] food quality [SSEP] [O] over-priced [A] pancake flight [S] bad [C] food prices', '[O] inventive [S] great [C] food quality [A] pancakes [SSEP] [O] over-priced [S] bad [C] food prices [A] pancake flight', '[A] pancakes [O] inventive [C] food quality [S] great [SSEP] [A] pancake flight [O] over-priced [C] food prices [S] bad']

task, data: asqp rest16
target: [('restaurant general', 'null', 'great', 'worth')]
output: ['[A] null [O] well worth [S] great [C] restaurant general']
sent: ['Well', 'worth', 'it']
counter: {('restaurant general', 'null', 'great', 'well worth'): 5}
output quads: ['[A] null [O] well worth [S] great [C] restaurant general']
multi_path: ['[O] well worth [A] it [C] restaurant general [S] great', '[A] it [O] well worth [S] great [C] restaurant general', '[O] well worth [A] it [S] great [C] restaurant general', '[O] well worth [S] great [C] restaurant general [A] it', '[A] it [O] well worth [C] restaurant general [S] great']

task, data: asqp rest16
target: [('restaurant miscellaneous', 'restroom', 'bad', 'odd')]
output: ['[A] bathroom attendant [O] odd [S] bad [C] service general']
sent: ['I', 'have', 'a', 'but', 'here', '-', 'there', 'was', 'a', 'bathroom', 'attendant', 'in', 'the', 'restroom', 'which', 'was', 'odd', '.']
counter: {('service general', 'bathroom attendant', 'bad', 'odd'): 5}
output quads: ['[A] bathroom attendant [O] odd [S] bad [C] service general']
multi_path: ['[O] odd [A] bathroom attendant [C] service general [S] bad', '[A] bathroom attendant [O] odd [S] bad [C] service general', '[O] odd [A] bathroom attendant [S] bad [C] service general', '[O] odd [S] bad [C] service general [A] bathroom attendant', '[A] bathroom attendant [O] odd [C] service general [S] bad']

task, data: asqp rest16
target: [('food quality', 'honwy walnut prawns', 'great', 'best')]
output: ['[A] honwy walnut prawns [O] best [S] great [C] food quality', '[A] honwy walnut prawns [O] outstanding [S] great [C] food quality']
sent: ['The', 'best', 'dish', 'are', 'the', 'honwy', 'walnut', 'prawns', '--', 'just', 'outstanding', '.']
counter: {('food quality', 'honwy walnut prawns', 'great', 'best'): 4, ('food quality', 'honwy walnut prawns', 'great', 'outstanding'): 5, ('food quality', 'dish', 'great', 'best'): 1}
output quads: ['[A] honwy walnut prawns [O] best [S] great [C] food quality', '[A] honwy walnut prawns [O] outstanding [S] great [C] food quality']
multi_path: ['[O] best [A] honwy walnut prawns [C] food quality [S] great [SSEP] [O] outstanding [A] honwy walnut prawns [C] food quality [S] great', '[A] honwy walnut prawns [O] best [S] great [C] food quality [SSEP] [A] honwy walnut prawns [O] outstanding [S] great [C] food quality', '[O] best [A] honwy walnut prawns [S] great [C] food quality [SSEP] [O] outstanding [A] honwy walnut prawns [S] great [C] food quality', '[O] best [S] great [C] food quality [A] dish [SSEP] [O] outstanding [S] great [C] food quality [A] honwy walnut prawns', '[A] honwy walnut prawns [O] best [C] food quality [S] great [SSEP] [A] honwy walnut prawns [O] outstanding [C] food quality [S] great']

task, data: asqp rest16
target: [('food style_options', 'pancakes', 'bad', 'should be larger')]
output: ['[A] pancakes [O] justify the expense [S] bad [C] food prices', '[A] pancakes [O] larger [S] ok [C] food style_options']
sent: ['The', 'pancakes', 'should', 'be', 'larger', '(', 'at', 'least', '8', '``', ')', 'to', 'justify', 'the', 'expense', 'even', 'with', 'the', 'unique', 'offerings', '.']
counter: {('food style_options', 'pancakes', 'ok', 'larger'): 5, ('food prices', 'pancakes', 'bad', 'justify the expense'): 4, ('food style_options', 'pancakes', 'great', 'unique'): 1}
output quads: ['[A] pancakes [O] larger [S] ok [C] food style_options', '[A] pancakes [O] justify the expense [S] bad [C] food prices']
multi_path: ['[O] larger [A] pancakes [C] food style_options [S] ok [SSEP] [O] justify the expense [A] pancakes [C] food prices [S] bad', '[A] pancakes [O] larger [S] ok [C] food style_options [SSEP] [A] pancakes [O] justify the expense [S] bad [C] food prices', '[O] larger [A] pancakes [S] ok [C] food style_options [SSEP] [O] justify the expense [A] pancakes [S] bad [C] food prices', '[O] larger [S] ok [C] food style_options [A] pancakes [SSEP] [O] justify the expense [S] bad [C] food prices [A] pancakes', '[A] pancakes [O] larger [C] food style_options [S] ok [SSEP] [A] pancakes [O] unique [C] food style_options [S] great']

task, data: asqp rest16
target: [('restaurant miscellaneous', 'null', 'great', 'reasonably good')]
output: ['[A] parking [O] good [S] great [C] location general']
sent: ['Parking', 'is', 'reasonably', 'good', ',', 'they', 'have', 'their', 'own', 'lot', 'and', 'you', 'can', 'park', 'in', 'the', 'park', 'nearby', '.']
counter: {('location general', 'parking', 'great', 'good'): 5}
output quads: ['[A] parking [O] good [S] great [C] location general']
multi_path: ['[O] good [A] parking [C] location general [S] great', '[A] parking [O] good [S] great [C] location general', '[O] good [A] parking [S] great [C] location general', '[O] good [S] great [C] location general [A] parking', '[A] parking [O] good [C] location general [S] great']

task, data: asqp rest16
target: [('service general', 'null', 'bad', 'wait')]
output: ['[A] wait [O] 30 minute wait [S] bad [C] service general']
sent: ['We', 'put', 'out', 'name', 'down', 'and', 'although', 'there', 'were', 'open', 'tables', 'we', 'were', 'told', 'that', 'it', "'d", 'be', 'a', '30', 'minute', 'wait', '.']
counter: {('service general', 'null', 'bad', '30 minute wait'): 2, ('service general', 'wait', 'bad', '30 minute wait'): 3}
output quads: ['[A] wait [O] 30 minute wait [S] bad [C] service general']
multi_path: ['[O] 30 minute wait [A] it [C] service general [S] bad', '[A] wait [O] 30 minute wait [S] bad [C] service general', '[O] 30 minute wait [A] it [S] bad [C] service general', '[O] 30 minute wait [S] bad [C] service general [A] wait', '[A] wait [O] 30 minute wait [C] service general [S] bad']

task, data: asqp rest16
target: [('service general', 'null', 'bad', 'waited')]
output: ['[A] food [O] waited over 1 1 /2 hours [S] bad [C] food quality', '[A] null [O] waited over 30 minutes [S] bad [C] service general']
sent: ['We', 'waited', 'over', '30', 'minutes', 'for', 'our', 'drinks', 'and', 'over', '1', '1', '/2', 'hours', 'for', 'our', 'food', '.']
counter: {('service general', 'null', 'bad', 'waited over 30 minutes'): 5, ('food quality', 'food', 'bad', 'waited over 1 1 /2 hours'): 5}
output quads: ['[A] null [O] waited over 30 minutes [S] bad [C] service general', '[A] food [O] waited over 1 1 /2 hours [S] bad [C] food quality']
multi_path: ['[O] waited over 30 minutes [A] it [C] service general [S] bad [SSEP] [O] waited over 1 1 /2 hours [A] food [C] food quality [S] bad', '[A] it [O] waited over 30 minutes [S] bad [C] service general [SSEP] [A] food [O] waited over 1 1 /2 hours [S] bad [C] food quality', '[O] waited over 30 minutes [A] it [S] bad [C] service general [SSEP] [O] waited over 1 1 /2 hours [A] food [S] bad [C] food quality', '[O] waited over 30 minutes [S] bad [C] service general [A] it [SSEP] [O] waited over 1 1 /2 hours [S] bad [C] food quality [A] food', '[A] it [O] waited over 30 minutes [C] service general [S] bad [SSEP] [A] food [O] waited over 1 1 /2 hours [C] food quality [S] bad']

task, data: asqp rest16
target: [('service general', 'servers behind the counter', 'great', 'friendly')]
output: ['[A] servers [O] friendly [S] great [C] service general', '[A] servers [O] helpful [S] great [C] service general']
sent: ['The', 'servers', 'behind', 'the', 'counter', 'are', 'always', 'friendly', 'and', 'helpful', '.']
counter: {('service general', 'servers', 'great', 'friendly'): 5, ('service general', 'servers', 'great', 'helpful'): 5}
output quads: ['[A] servers [O] friendly [S] great [C] service general', '[A] servers [O] helpful [S] great [C] service general']
multi_path: ['[O] friendly [A] servers [C] service general [S] great [SSEP] [O] helpful [A] servers [C] service general [S] great', '[A] servers [O] friendly [S] great [C] service general [SSEP] [A] servers [O] helpful [S] great [C] service general', '[O] friendly [A] servers [S] great [C] service general [SSEP] [O] helpful [A] servers [S] great [C] service general', '[O] friendly [S] great [C] service general [A] servers [SSEP] [O] helpful [S] great [C] service general [A] servers', '[A] servers [O] friendly [C] service general [S] great [SSEP] [A] servers [O] helpful [C] service general [S] great']

task, data: asqp rest16
target: [('food quality', 'pizza ’ s', 'great', 'delicious')]
output: ['[A] gourmet pizza ’ s [O] delicious [S] great [C] food quality']
sent: ['We', '’', 're', 'can', '’', 't', 'say', 'enough', 'about', 'their', 'delicious', 'gourmet', 'pizza', '’', 's', '!']
counter: {('food quality', 'gourmet pizza ’ s', 'great', 'delicious'): 5}
output quads: ['[A] gourmet pizza ’ s [O] delicious [S] great [C] food quality']
multi_path: ['[O] delicious [A] gourmet pizza ’ s [C] food quality [S] great', '[A] gourmet pizza ’ s [O] delicious [S] great [C] food quality', '[O] delicious [A] gourmet pizza ’ s [S] great [C] food quality', '[O] delicious [S] great [C] food quality [A] gourmet pizza ’ s', '[A] gourmet pizza ’ s [O] delicious [C] food quality [S] great']

task, data: asqp rest16
target: [('restaurant miscellaneous', 'balconey', 'great', 'favorite')]
output: ['[A] smoking balconey [O] favorite [S] great [C] ambience general']
sent: ['Not', 'alot', 'of', 'smoking', 'places', 'left', 'in', 'New', 'York', ',', 'but', 'I', 'have', 'found', 'my', 'favorite', 'smoking', 'balconey', 'in', 'the', 'city', '.']
counter: {('ambience general', 'smoking balconey', 'great', 'favorite'): 5}
output quads: ['[A] smoking balconey [O] favorite [S] great [C] ambience general']
multi_path: ['[O] favorite [A] smoking balconey [C] ambience general [S] great', '[A] smoking balconey [O] favorite [S] great [C] ambience general', '[O] favorite [A] smoking balconey [S] great [C] ambience general', '[O] favorite [S] great [C] ambience general [A] smoking balconey', '[A] smoking balconey [O] favorite [C] ambience general [S] great']

task, data: asqp rest16
target: [('food quality', 'black cod in sake kasu', 'great', 'enjoyed')]
output: ['[A] black cod in sake kasu [O] enjoyed [S] great [C] food quality', '[A] family platter [O] enjoyed [S] great [C] food quality']
sent: ['We', 'shared', 'the', 'family', 'platter', 'and', 'I', 'especially', 'enjoyed', 'the', 'black', 'cod', 'in', 'sake', 'kasu', '.']
counter: {('food quality', 'family platter', 'great', 'enjoyed'): 5, ('food quality', 'black cod in sake kasu', 'great', 'enjoyed'): 5}
output quads: ['[A] family platter [O] enjoyed [S] great [C] food quality', '[A] black cod in sake kasu [O] enjoyed [S] great [C] food quality']
multi_path: ['[O] enjoyed [A] family platter [C] food quality [S] great [SSEP] [O] enjoyed [A] black cod in sake kasu [C] food quality [S] great', '[A] family platter [O] enjoyed [S] great [C] food quality [SSEP] [A] black cod in sake kasu [O] enjoyed [S] great [C] food quality', '[O] enjoyed [A] family platter [S] great [C] food quality [SSEP] [O] enjoyed [A] black cod in sake kasu [S] great [C] food quality', '[O] enjoyed [S] great [C] food quality [A] family platter [SSEP] [O] enjoyed [S] great [C] food quality [A] black cod in sake kasu', '[A] family platter [O] enjoyed [C] food quality [S] great [SSEP] [A] black cod in sake kasu [O] enjoyed [C] food quality [S] great']

task, data: asqp rest16
target: [('service general', 'service', 'ok', 'mediocre')]
output: ['[A] service / quality [O] mediocre [S] ok [C] service general']
sent: ['-', 'Mediocre', 'Service', '/', 'Quality']
counter: {('service general', 'service / quality', 'ok', 'mediocre'): 5}
output quads: ['[A] service / quality [O] mediocre [S] ok [C] service general']
multi_path: ['[O] mediocre [A] service / quality [C] service general [S] ok', '[A] service / quality [O] mediocre [S] ok [C] service general', '[O] mediocre [A] service / quality [S] ok [C] service general', '[O] mediocre [S] ok [C] service general [A] service / quality', '[A] service / quality [O] mediocre [C] service general [S] ok']

task, data: asqp rest16
target: [('drinks quality', 'margaritas', 'great', 'amazing'), ('food style_options', 'portions', 'great', 'huge'), ('restaurant general', 'null', 'great', 'top lunch spots'), ('service general', 'service', 'great', 'fast')]
output: ['[A] lunch spots [O] top [S] great [C] restaurant general', '[A] margaritas [O] amazing [S] great [C] food quality', '[A] portions [O] huge [S] great [C] food style_options', '[A] service [O] fast [S] great [C] service general']
sent: ['–', 'This', 'is', 'one', 'of', 'my', 'top', 'lunch', 'spots', ',', 'huge', 'portions', ',', 'fast', 'service', 'and', 'amazing', 'margaritas', '!', '!']
counter: {('restaurant general', 'lunch spots', 'great', 'top'): 5, ('food style_options', 'portions', 'great', 'huge'): 5, ('service general', 'service', 'great', 'fast'): 5, ('food quality', 'margaritas', 'great', 'amazing'): 5}
output quads: ['[A] lunch spots [O] top [S] great [C] restaurant general', '[A] portions [O] huge [S] great [C] food style_options', '[A] service [O] fast [S] great [C] service general', '[A] margaritas [O] amazing [S] great [C] food quality']
multi_path: ['[O] top [A] lunch spots [C] restaurant general [S] great [SSEP] [O] huge [A] portions [C] food style_options [S] great [SSEP] [O] fast [A] service [C] service general [S] great [SSEP] [O] amazing [A] margaritas [C] food quality [S] great', '[A] lunch spots [O] top [S] great [C] restaurant general [SSEP] [A] portions [O] huge [S] great [C] food style_options [SSEP] [A] service [O] fast [S] great [C] service general [SSEP] [A] margaritas [O] amazing [S] great [C] food quality', '[O] top [A] lunch spots [S] great [C] restaurant general [SSEP] [O] huge [A] portions [S] great [C] food style_options [SSEP] [O] fast [A] service [S] great [C] service general [SSEP] [O] amazing [A] margaritas [S] great [C] food quality', '[O] top [S] great [C] restaurant general [A] lunch spots [SSEP] [O] huge [S] great [C] food style_options [A] portions [SSEP] [O] fast [S] great [C] service general [A] service [SSEP] [O] amazing [S] great [C] food quality [A] margaritas', '[A] lunch spots [O] top [C] restaurant general [S] great [SSEP] [A] portions [O] huge [C] food style_options [S] great [SSEP] [A] service [O] fast [C] service general [S] great [SSEP] [A] margaritas [O] amazing [C] food quality [S] great']

task, data: asqp rest16
target: [('food quality', 'burritos', 'great', 'good'), ('food quality', 'enchiladas', 'great', 'good'), ('food quality', 'null', 'great', 'good'), ('food quality', 'taco salads', 'great', 'good'), ('restaurant general', 'place', 'great', 'love')]
output: ['[A] burritos [O] love [S] great [C] food quality', '[A] enchiladas [O] love [S] great [C] food quality', '[A] null [O] good [S] great [C] food quality', '[A] taco salads [O] love [S] great [C] food quality']
sent: ['Everything', 'I', "'ve", 'had', 'here', 'is', 'good', ',', 'taco', 'salads', ',', 'burritos', ',', 'enchiladas', 'i', 'love', 'this', 'place', '.']
counter: {('food quality', 'null', 'great', 'good'): 5, ('food quality', 'taco salads', 'great', 'love'): 5, ('food quality', 'burritos', 'great', 'love'): 5, ('food quality', 'enchiladas', 'great', 'love'): 5}
output quads: ['[A] null [O] good [S] great [C] food quality', '[A] taco salads [O] love [S] great [C] food quality', '[A] burritos [O] love [S] great [C] food quality', '[A] enchiladas [O] love [S] great [C] food quality']
multi_path: ['[O] good [A] it [C] food quality [S] great [SSEP] [O] love [A] taco salads [C] food quality [S] great [SSEP] [O] love [A] burritos [C] food quality [S] great [SSEP] [O] love [A] enchiladas [C] food quality [S] great', '[A] it [O] good [S] great [C] food quality [SSEP] [A] taco salads [O] love [S] great [C] food quality [SSEP] [A] burritos [O] love [S] great [C] food quality [SSEP] [A] enchiladas [O] love [S] great [C] food quality', '[O] good [A] it [S] great [C] food quality [SSEP] [O] love [A] taco salads [S] great [C] food quality [SSEP] [O] love [A] burritos [S] great [C] food quality [SSEP] [O] love [A] enchiladas [S] great [C] food quality', '[O] good [S] great [C] food quality [A] it [SSEP] [O] love [S] great [C] food quality [A] taco salads [SSEP] [O] love [S] great [C] food quality [A] burritos [SSEP] [O] love [S] great [C] food quality [A] enchiladas', '[A] it [O] good [C] food quality [S] great [SSEP] [A] taco salads [O] love [C] food quality [S] great [SSEP] [A] burritos [O] love [C] food quality [S] great [SSEP] [A] enchiladas [O] love [C] food quality [S] great']

task, data: asqp rest16
target: [('service general', 'null', 'bad', "but they didn't")]
output: ["[A] null [O] didn't [S] bad [C] service general"]
sent: ['Normally', ',', 'places', 'ask', 'how', 'hot', 'you', 'want', 'it', ',', 'but', 'they', 'did', "n't", '.']
counter: {('service general', 'null', 'bad', "didn't"): 5}
output quads: ["[A] null [O] didn't [S] bad [C] service general"]
multi_path: ["[O] didn't [A] it [C] service general [S] bad", "[A] it [O] didn't [S] bad [C] service general", "[O] didn't [A] it [S] bad [C] service general", "[O] didn't [S] bad [C] service general [A] it", "[A] it [O] didn't [C] service general [S] bad"]

task, data: asqp rest16
target: [('service general', 'cooks', 'great', 'friendly')]
output: ['[A] cooks [O] friendly [S] great [C] service general', '[A] wait staff [O] friendly [S] great [C] service general']
sent: ['I', "'ve", 'always', 'found', 'the', 'wait', 'staff', 'and', ',', 'if', 'you', 'sit', 'at', 'the', 'bar', ',', 'the', 'cooks', 'very', 'friendly', '.']
counter: {('service general', 'wait staff', 'great', 'friendly'): 5, ('service general', 'cooks', 'great', 'friendly'): 3}
output quads: ['[A] wait staff [O] friendly [S] great [C] service general', '[A] cooks [O] friendly [S] great [C] service general']
multi_path: ['[O] friendly [A] wait staff [C] service general [S] great', '[A] wait staff [O] friendly [S] great [C] service general [SSEP] [A] cooks [O] friendly [S] great [C] service general', '[O] friendly [A] wait staff [S] great [C] service general [SSEP] [O] friendly [A] cooks [S] great [C] service general', '[O] friendly [S] great [C] service general [A] wait staff', '[A] wait staff [O] friendly [C] service general [S] great [SSEP] [A] cooks [O] friendly [C] service general [S] great']

task, data: asqp rest16
target: [('food quality', 'butter sauce', 'great', 'sublime'), ('food quality', 'manila clams', 'great', 'fantastic'), ('food quality', 'soy dressing', 'great', 'tasty'), ('food style_options', 'shilshole sampler', 'great', 'a beautiful assortment'), ('food style_options', 'white gulf prawns', 'great', 'enormous')]
output: ['[A] assortment of enormous white gulf prawns [O] beautiful [S] great [C] food quality', "[A] ray's fantastic manila clams seasoned with dill [O] fantastic [S] great [C] food quality", '[A] shilshole sampler [O] ambitious [S] great [C] food style_options', '[A] smoked albacore tuna [O] beautiful [S] great [C] food quality']
sent: ['My', 'party', 'of', 'two', 'was', 'feeling', 'particularly', 'ambitious', ',', 'and', 'we', 'splurged', 'on', 'the', 'Shilshole', 'Sampler', '...', 'a', 'beautiful', 'assortment', 'of', 'enormous', 'white', 'gulf', 'prawns', ',', 'smoked', 'albacore', 'tuna', ',', 'Ray', "'s", 'fantastic', 'manila', 'clams', 'seasoned', 'with', 'dill', ',', 'scallops', 'in', 'a', 'tasty', 'soy', 'dressing', ',', 'and', 'a', 'tiny', 'pile', 'of', 'Dungeness', 'crab', 'atop', 'a', 'sublime', 'butter', 'sauce', '.']
counter: {('food style_options', 'shilshole sampler', 'great', 'ambitious'): 5, ('food quality', 'assortment of enormous white gulf prawns', 'great', 'beautiful'): 3, ('food quality', 'smoked albacore tuna', 'great', 'beautiful'): 5, ('food quality', "ray's fantastic manila clams seasoned with dill", 'great', 'fantastic'): 4, ('food quality', 'scallops', 'great', 'tasty'): 2, ('food quality', 'dungeness crab', 'great', 'tiny'): 2, ('food style_options', 'assortment of enormous white gulf prawns', 'great', 'beautiful'): 2, ('food quality', 'scallops in a tasty soy dressing', 'great', 'tiny'): 2, ('food quality', "ray's manila clams seasoned with dill", 'great', 'fantastic'): 1, ('food quality', 'scallops in a tasty soy dressing', 'great', 'tasty'): 1}
output quads: ['[A] shilshole sampler [O] ambitious [S] great [C] food style_options', '[A] assortment of enormous white gulf prawns [O] beautiful [S] great [C] food quality', '[A] smoked albacore tuna [O] beautiful [S] great [C] food quality', "[A] ray's fantastic manila clams seasoned with dill [O] fantastic [S] great [C] food quality"]
multi_path: ["[O] ambitious [A] shilshole sampler [C] food style_options [S] great [SSEP] [O] beautiful [A] assortment of enormous white gulf prawns [C] food quality [S] great [SSEP] [O] beautiful [A] smoked albacore tuna [C] food quality [S] great [SSEP] [O] fantastic [A] ray's fantastic manila clams seasoned with dill [C] food quality [S] great [SSEP] [O] tasty [A] scallops [C] food quality [S] great [SSEP] [O] tiny [A] dungeness crab [C] food quality [S] great", "[A] shilshole sampler [O] ambitious [S] great [C] food style_options [SSEP] [A] assortment of enormous white gulf prawns [O] beautiful [S] great [C] food style_options [SSEP] [A] smoked albacore tuna [O] beautiful [S] great [C] food quality [SSEP] [A] ray's fantastic manila clams seasoned with dill [O] fantastic [S] great [C] food quality [SSEP] [A] scallops in a tasty soy dressing [O] tiny [S] great [C] food quality", "[O] ambitious [A] shilshole sampler [S] great [C] food style_options [SSEP] [O] beautiful [A] assortment of enormous white gulf prawns [S] great [C] food style_options [SSEP] [O] beautiful [A] smoked albacore tuna [S] great [C] food quality [SSEP] [O] fantastic [A] ray's manila clams seasoned with dill [S] great [C] food quality [SSEP] [O] tasty [A] scallops [S] great [C] food quality [SSEP] [O] tiny [A] dungeness crab [S] great [C] food quality", "[O] ambitious [S] great [C] food style_options [A] shilshole sampler [SSEP] [O] beautiful [S] great [C] food quality [A] assortment of enormous white gulf prawns [SSEP] [O] beautiful [S] great [C] food quality [A] smoked albacore tuna [SSEP] [O] fantastic [S] great [C] food quality [A] ray's fantastic manila clams seasoned with dill [SSEP] [O] tasty [S] great [C] food quality [A] scallops in a tasty soy dressing", "[A] shilshole sampler [O] ambitious [C] food style_options [S] great [SSEP] [A] assortment of enormous white gulf prawns [O] beautiful [C] food quality [S] great [SSEP] [A] smoked albacore tuna [O] beautiful [C] food quality [S] great [SSEP] [A] ray's fantastic manila clams seasoned with dill [O] fantastic [C] food quality [S] great [SSEP] [A] scallops in a tasty soy dressing [O] tiny [C] food quality [S] great"]

task, data: asqp rest16
target: [('drinks quality', 'sake', 'great', 'great'), ('food quality', 'sushi', 'great', 'fan'), ('food style_options', 'fish', 'great', 'love expertly cut'), ('food style_options', 'toro', 'great', 'a varity of'), ('location general', 'soho location', 'great', 'killer')]
output: ['[A] fish [O] love [S] great [C] food quality', '[A] sake [O] love [S] great [C] drinks quality', '[A] salmon [O] love [S] great [C] food quality', '[A] soho location [O] killer [S] great [C] location general', '[A] tuna [O] great [S] great [C] food quality']
sent: ['Your', 'a', 'sushi', 'fan', ',', 'you', 'love', 'expertly', 'cut', 'fish', ',', 'great', 'sake', ',', 'a', 'killer', 'SOHO', 'location', ',', 'and', 'of', 'course', ':', 'Salmon', ',', 'Tuna', ',', 'Fluke', ',', 'Yellow', 'Tail', ',', 'Cod', ',', 'Mackeral', ',', 'Jellyfish', ',', 'Sea', 'Urchin', ',', 'Shrimp', ',', 'Lobster', ',', 'Sea', 'Bream', ',', 'Trout', ',', 'Milk', 'Fish', ',', 'Blue', 'Fin', 'Tuna', ',', 'Eel', ',', 'Crab', ',', 'Sardine', ',', 'Monk', 'Fish', ',', 'Roe', ',', 'Scallop', ',', 'Oysters', ',', 'and', 'a', 'varity', 'of', 'Toro', '.']
counter: {('food quality', 'fish', 'great', 'love'): 5, ('drinks quality', 'sake', 'great', 'love'): 3, ('location general', 'soho location', 'great', 'killer'): 5, ('food quality', 'salmon', 'great', 'love'): 6, ('food quality', 'tuna', 'great', 'great'): 3, ('food quality', 'yellow tail', 'great', 'killer'): 2, ('food quality', 'lobster', 'great', 'love'): 2, ('food quality', 'trout', 'great', 'love'): 1, ('food quality', 'crab', 'great', 'love'): 2, ('null', 'null', 'null', 'love'): 2, ('drinks quality', 'sake', 'great', 'great'): 2, ('food quality', 'tuna', 'great', 'love'): 2, ('food quality', 'yellow tail', 'great', 'love'): 2, ('food quality', 'shrimp', 'great', 'love'): 2, ('food quality', 'sea bream', 'great', 'love'): 2, ('food quality [SSEP', 'eel', 'great', 'love'): 1, ('food quality', 'trout', 'great', 'killer'): 2, ('food quality', 'salmon', 'great', 'killer'): 1, ('food quality', 'sea urchin', 'great', 'love'): 1, ('null', 'null', 'null', 'null'): 1, ('food quality', 'eel', 'great [SSEP', 'love'): 1}
output quads: ['[A] fish [O] love [S] great [C] food quality', '[A] sake [O] love [S] great [C] drinks quality', '[A] soho location [O] killer [S] great [C] location general', '[A] salmon [O] love [S] great [C] food quality', '[A] tuna [O] great [S] great [C] food quality']
multi_path: ['[O] love [A] fish [C] food quality [S] great [SSEP] [O] love [A] sake [C] drinks quality [S] great [SSEP] [O] killer [A] soho location [C] location general [S] great [SSEP] [O] love [A] salmon [C] food quality [S] great [SSEP] [O] great [A] tuna [C] food quality [S] great [SSEP] [O] killer [A] yellow tail [C] food quality [S] great [SSEP] [O] love [A] lobster [C] food quality [S] great [SSEP] [O] love [A] trout [C] food quality [S] great [SSEP] [O] love [A] crab [C] food quality [S] great [SSEP] [O] love', '[A] fish [O] love [S] great [C] food quality [SSEP] [A] sake [O] great [S] great [C] drinks quality [SSEP] [A] soho location [O] killer [S] great [C] location general [SSEP] [A] salmon [O] love [S] great [C] food quality [SSEP] [A] tuna [O] love [S] great [C] food quality [SSEP] [A] yellow tail [O] love [S] great [C] food quality [SSEP] [A] shrimp [O] love [S] great [C] food quality [SSEP] [A] sea bream [O] love [S] great [C] food quality [SSEP] [A] eel [O] love [S] great [C] food quality [SSEP', '[O] love [A] fish [S] great [C] food quality [SSEP] [O] love [A] sake [S] great [C] drinks quality [SSEP] [O] killer [A] soho location [S] great [C] location general [SSEP] [O] love [A] salmon [S] great [C] food quality [SSEP] [O] great [A] tuna [S] great [C] food quality [SSEP] [O] killer [A] yellow tail [S] great [C] food quality [SSEP] [O] love [A] lobster [S] great [C] food quality [SSEP] [O] killer [A] trout [S] great [C] food quality [SSEP] [O] love [A] crab [S] great [C] food quality [SSEP] [O] love', '[O] love [S] great [C] food quality [A] fish [SSEP] [O] love [S] great [C] drinks quality [A] sake [SSEP] [O] killer [S] great [C] location general [A] soho location [SSEP] [O] love [S] great [C] food quality [A] salmon [SSEP] [O] great [S] great [C] food quality [A] tuna [SSEP] [O] killer [S] great [C] food quality [A] salmon [SSEP] [O] love [S] great [C] food quality [A] sea urchin [SSEP] [O] killer [S] great [C] food quality [A] trout [SSEP] [O] love [S] great [C] food quality [A] salmon [SSEP] [O', '[A] fish [O] love [C] food quality [S] great [SSEP] [A] sake [O] great [C] drinks quality [S] great [SSEP] [A] soho location [O] killer [C] location general [S] great [SSEP] [A] salmon [O] love [C] food quality [S] great [SSEP] [A] tuna [O] love [C] food quality [S] great [SSEP] [A] yellow tail [O] love [C] food quality [S] great [SSEP] [A] shrimp [O] love [C] food quality [S] great [SSEP] [A] sea bream [O] love [C] food quality [S] great [SSEP] [A] eel [O] love [C] food quality [S] great [SSEP']

task, data: asqp rest16
target: [('restaurant general', 'place', 'great', 'fun'), ('service general', 'service', 'great', 'fantastic')]
output: ['[A] service [O] fantastic [S] great [C] service general']
sent: ['The', 'service', 'is', 'fantastic', 'at', 'this', 'fun', 'place', '.']
counter: {('service general', 'service', 'great', 'fantastic'): 5}
output quads: ['[A] service [O] fantastic [S] great [C] service general']
multi_path: ['[O] fantastic [A] service [C] service general [S] great', '[A] service [O] fantastic [S] great [C] service general', '[O] fantastic [A] service [S] great [C] service general', '[O] fantastic [S] great [C] service general [A] service', '[A] service [O] fantastic [C] service general [S] great']

task, data: asqp rest16
target: [('restaurant miscellaneous', 'bathroom stall', 'bad', 'need more')]
output: ['[A] bathroom stall [O] only [S] bad [C] ambience general']
sent: ['Also', ',', 'there', 'was', 'only', 'one', 'bathroom', 'stall-', 'probably', 'need', 'more', 'for', 'such', 'big', 'crowds', '.']
counter: {('ambience general', 'bathroom stall', 'bad', 'only'): 5}
output quads: ['[A] bathroom stall [O] only [S] bad [C] ambience general']
multi_path: ['[O] only [A] bathroom stall [C] ambience general [S] bad', '[A] bathroom stall [O] only [S] bad [C] ambience general', '[O] only [A] bathroom stall [S] bad [C] ambience general', '[O] only [S] bad [C] ambience general [A] bathroom stall', '[A] bathroom stall [O] only [C] ambience general [S] bad']

task, data: asqp rest16
target: [('service general', 'service', 'bad', 'without ever')]
output: ['[A] service [O] without ever getting service [S] bad [C] service general']
sent: ['We', 'left', 'without', 'ever', 'getting', 'service', '.']
counter: {('service general', 'service', 'bad', 'without ever getting service'): 5}
output quads: ['[A] service [O] without ever getting service [S] bad [C] service general']
multi_path: ['[O] without ever getting service [A] service [C] service general [S] bad', '[A] service [O] without ever getting service [S] bad [C] service general', '[O] without ever getting service [A] service [S] bad [C] service general', '[O] without ever getting service [S] bad [C] service general [A] service', '[A] service [O] without ever getting service [C] service general [S] bad']

task, data: asqp rest16
target: [('food quality', 'fish', 'great', 'excellent'), ('food style_options', 'fish', 'great', 'excellent')]
output: ['[A] quality [O] excellent [S] great [C] food quality', '[A] variety of the fish [O] excellent [S] great [C] food style_options']
sent: ['I', 'have', 'eaten', 'here', 'three', 'times', 'and', 'have', 'found', 'the', 'quality', 'and', 'variety', 'of', 'the', 'fish', 'to', 'be', 'excellent', '.']
counter: {('food quality', 'quality', 'great', 'excellent'): 5, ('food style_options', 'variety of the fish', 'great', 'excellent'): 4, ('food style_options', 'fish', 'great', 'excellent'): 1}
output quads: ['[A] quality [O] excellent [S] great [C] food quality', '[A] variety of the fish [O] excellent [S] great [C] food style_options']
multi_path: ['[O] excellent [A] quality [C] food quality [S] great [SSEP] [O] excellent [A] variety of the fish [C] food style_options [S] great', '[A] quality [O] excellent [S] great [C] food quality [SSEP] [A] variety of the fish [O] excellent [S] great [C] food style_options', '[O] excellent [A] quality [S] great [C] food quality [SSEP] [O] excellent [A] variety of the fish [S] great [C] food style_options', '[O] excellent [S] great [C] food quality [A] quality [SSEP] [O] excellent [S] great [C] food style_options [A] fish', '[A] quality [O] excellent [C] food quality [S] great [SSEP] [A] variety of the fish [O] excellent [C] food style_options [S] great']

task, data: asqp rest16
target: [('service general', 'null', 'bad', 'annoying')]
output: ['[A] null [O] friendly [S] great [C] service general']
sent: ['But', 'she', 'is', 'very', 'friendly', 'with', 'certain', 'people', ',', 'making', 'it', 'even', 'more', 'annoying', '.']
counter: {('service general', 'null', 'great', 'friendly'): 5}
output quads: ['[A] null [O] friendly [S] great [C] service general']
multi_path: ['[O] friendly [A] it [C] service general [S] great', '[A] it [O] friendly [S] great [C] service general', '[O] friendly [A] it [S] great [C] service general', '[O] friendly [S] great [C] service general [A] it', '[A] it [O] friendly [C] service general [S] great']

task, data: asqp rest16
target: [('food quality', 'regular menu', 'ok', 'above average'), ('food quality', 'regular menu', 'ok', 'not worth the snotty attitude'), ('service general', 'null', 'bad', 'snotty')]
output: ['[A] regular menu [O] above average [S] bad [C] food quality', '[A] regular menu [O] not worth the snotty attitude [S] bad [C] food quality']
sent: ['The', 'regular', 'menu', 'here', 'is', 'slightly', 'above', 'average', 'that', 'is', 'not', 'worth', 'the', 'snotty', 'attitude', 'that', 'you', 'receive', '.']
counter: {('food quality', 'regular menu', 'bad', 'above average'): 5, ('food quality', 'regular menu', 'bad', 'not worth the snotty attitude'): 3, ('food quality', 'regular menu', 'bad', 'not worth'): 2}
output quads: ['[A] regular menu [O] above average [S] bad [C] food quality', '[A] regular menu [O] not worth the snotty attitude [S] bad [C] food quality']
multi_path: ['[O] above average [A] regular menu [C] food quality [S] bad [SSEP] [O] not worth the snotty attitude [A] regular menu [C] food quality [S] bad', '[A] regular menu [O] above average [S] bad [C] food quality [SSEP] [A] regular menu [O] not worth the snotty attitude [S] bad [C] food quality', '[O] above average [A] regular menu [S] bad [C] food quality [SSEP] [O] not worth [A] regular menu [S] bad [C] food quality', '[O] above average [S] bad [C] food quality [A] regular menu [SSEP] [O] not worth [S] bad [C] food quality [A] regular menu', '[A] regular menu [O] above average [C] food quality [S] bad [SSEP] [A] regular menu [O] not worth the snotty attitude [C] food quality [S] bad']

task, data: asqp rest16
target: [('food quality', 'hummus', 'great', 'best'), ('food style_options', 'hummus', 'great', 'best')]
output: ['[A] fragrant olive oil [O] best [S] great [C] food quality', '[A] hummus [O] best [S] great [C] food quality']
sent: ['Also', ',', 'they', 'serve', 'THE', 'best', 'hummus', 'in', 'America', ',', 'with', 'a', 'drizzle', 'of', 'fragrant', 'olive', 'oil', '(', 'which', ',', 'I', 'believe', 'is', 'the', 'traditional', 'way', ')', '!']
counter: {('food quality', 'hummus', 'great', 'best'): 5, ('food quality', 'fragrant olive oil', 'great', 'best'): 5}
output quads: ['[A] hummus [O] best [S] great [C] food quality', '[A] fragrant olive oil [O] best [S] great [C] food quality']
multi_path: ['[O] best [A] hummus [C] food quality [S] great [SSEP] [O] best [A] fragrant olive oil [C] food quality [S] great', '[A] hummus [O] best [S] great [C] food quality [SSEP] [A] fragrant olive oil [O] best [S] great [C] food quality', '[O] best [A] hummus [S] great [C] food quality [SSEP] [O] best [A] fragrant olive oil [S] great [C] food quality', '[O] best [S] great [C] food quality [A] hummus [SSEP] [O] best [S] great [C] food quality [A] fragrant olive oil', '[A] hummus [O] best [C] food quality [S] great [SSEP] [A] fragrant olive oil [O] best [C] food quality [S] great']

task, data: asqp rest16
target: [('food quality', 'seafood', 'great', 'plus')]
output: ['[A] seafood plus [O] plus [S] great [C] food quality']
sent: ['Seafood', 'Plus']
counter: {('food quality', 'seafood plus', 'great', 'plus'): 5}
output quads: ['[A] seafood plus [O] plus [S] great [C] food quality']
multi_path: ['[O] plus [A] seafood plus [C] food quality [S] great', '[A] seafood plus [O] plus [S] great [C] food quality', '[O] plus [A] seafood plus [S] great [C] food quality', '[O] plus [S] great [C] food quality [A] seafood plus', '[A] seafood plus [O] plus [C] food quality [S] great']

task, data: asqp rest16
target: [('restaurant general', 'null', 'great', 'you dont want to miss')]
output: ['[A] null [O] dont want to miss [S] great [C] restaurant general', '[A] places [O] pricey [S] bad [C] restaurant prices']
sent: ['it', 'is', 'sad', 'there', 'is', 'not', 'many', 'people', 'who', 'frequent', 'eating', 'at', 'places', 'like', 'these', 'that', 'look', 'pricey', 'because', 'they', 'are', 'at', 'the', 'hotel', '...', 'but', 'they', 'are', 'definitely', 'one', 'you', 'dont', 'want', 'to', 'miss', ',', 'esp', 'if', 'your', 'in', 'downtown', 'san', 'jose', '.']
counter: {('restaurant prices', 'places', 'bad', 'pricey'): 5, ('restaurant general', 'null', 'great', 'dont want to miss'): 5}
output quads: ['[A] places [O] pricey [S] bad [C] restaurant prices', '[A] null [O] dont want to miss [S] great [C] restaurant general']
multi_path: ['[O] pricey [A] places [C] restaurant prices [S] bad [SSEP] [O] dont want to miss [A] it [C] restaurant general [S] great', '[A] places [O] pricey [S] bad [C] restaurant prices [SSEP] [A] it [O] dont want to miss [S] great [C] restaurant general', '[O] pricey [A] places [S] bad [C] restaurant prices [SSEP] [O] dont want to miss [A] it [S] great [C] restaurant general', '[O] pricey [S] bad [C] restaurant prices [A] places [SSEP] [O] dont want to miss [S] great [C] restaurant general [A] it', '[A] places [O] pricey [C] restaurant prices [S] bad [SSEP] [A] it [O] dont want to miss [C] restaurant general [S] great']

task, data: asqp rest16
target: [('drinks prices', 'juice', 'bad', 'small'), ('drinks style_options', 'juice', 'bad', 'small')]
output: ['[A] juice [O] small [S] bad [C] food prices', '[A] null [O] skinny [S] bad [C] food style_options', '[A] null [O] tall [S] bad [C] food style_options']
sent: ['They', 'serve', 'it', 'in', 'a', 'tall', ',', 'skinny', 'hour-glass', 'shaped', 'glass', 'to', 'disguise', 'the', 'fact', 'that', 'you', 'a', 'getting', 'a', 'small', 'juice', 'at', 'the', 'price', 'of', 'a', 'half', 'gallon', 'in', 'a', 'supermarket', '.']
counter: {('food style_options', 'null', 'bad', 'tall'): 5, ('food style_options', 'null', 'bad', 'skinny'): 5, ('food prices', 'juice', 'bad', 'small'): 5}
output quads: ['[A] null [O] tall [S] bad [C] food style_options', '[A] null [O] skinny [S] bad [C] food style_options', '[A] juice [O] small [S] bad [C] food prices']
multi_path: ['[O] tall [A] it [C] food style_options [S] bad [SSEP] [O] skinny [A] it [C] food style_options [S] bad [SSEP] [O] small [A] juice [C] food prices [S] bad', '[A] it [O] tall [S] bad [C] food style_options [SSEP] [A] it [O] skinny [S] bad [C] food style_options [SSEP] [A] juice [O] small [S] bad [C] food prices', '[O] tall [A] it [S] bad [C] food style_options [SSEP] [O] skinny [A] it [S] bad [C] food style_options [SSEP] [O] small [A] juice [S] bad [C] food prices', '[O] tall [S] bad [C] food style_options [A] it [SSEP] [O] skinny [S] bad [C] food style_options [A] it [SSEP] [O] small [S] bad [C] food prices [A] juice', '[A] it [O] tall [C] food style_options [S] bad [SSEP] [A] it [O] skinny [C] food style_options [S] bad [SSEP] [A] juice [O] small [C] food prices [S] bad']

task, data: asqp rest16
target: [('food quality', 'food', 'ok', 'ok'), ('service general', 'service', 'bad', 'poor')]
output: ['[A] food [O] cold [S] bad [C] food quality', '[A] food [O] ok [S] ok [C] food quality', '[A] service [O] poor [S] bad [C] service general']
sent: ['The', 'food', 'was', 'ok', ',', 'but', 'the', 'service', 'was', 'so', 'poor', 'that', 'the', 'food', 'was', 'cold', 'buy', 'the', 'time', 'everyone', 'in', 'my', 'party', 'was', 'served', '.']
counter: {('food quality', 'food', 'ok', 'ok'): 5, ('service general', 'service', 'bad', 'poor'): 5, ('food quality', 'food', 'bad', 'cold'): 5}
output quads: ['[A] food [O] ok [S] ok [C] food quality', '[A] service [O] poor [S] bad [C] service general', '[A] food [O] cold [S] bad [C] food quality']
multi_path: ['[O] ok [A] food [C] food quality [S] ok [SSEP] [O] poor [A] service [C] service general [S] bad [SSEP] [O] cold [A] food [C] food quality [S] bad', '[A] food [O] ok [S] ok [C] food quality [SSEP] [A] service [O] poor [S] bad [C] service general [SSEP] [A] food [O] cold [S] bad [C] food quality', '[O] ok [A] food [S] ok [C] food quality [SSEP] [O] poor [A] service [S] bad [C] service general [SSEP] [O] cold [A] food [S] bad [C] food quality', '[O] ok [S] ok [C] food quality [A] food [SSEP] [O] poor [S] bad [C] service general [A] service [SSEP] [O] cold [S] bad [C] food quality [A] food', '[A] food [O] ok [C] food quality [S] ok [SSEP] [A] service [O] poor [C] service general [S] bad [SSEP] [A] food [O] cold [C] food quality [S] bad']

task, data: asqp rest16
target: [('food quality', 'fish on the omikase platter', 'great', 'decadent'), ('food quality', 'fish on the omikase platter', 'great', 'perfect'), ('food quality', 'meal', 'great', 'great')]
output: ['[A] fish [O] perfect [S] great [C] food quality', '[A] fish on the omikase platter [O] decadent [S] great [C] food quality', '[A] meal [O] great [S] great [C] food quality']
sent: ['great', 'meal', '–', 'the', 'fish', 'on', 'the', 'omikase', 'platter', 'was', 'absolutely', 'decadent', '--', 'there', 'was', 'none', 'of', 'the', 'stringiness', 'that', 'sometimes', 'accompanies', 'fair', 'sushi', '--', 'this', 'fish', 'was', 'perfect', '!', '!', '!', '!']
counter: {('food quality', 'meal', 'great', 'great'): 5, ('food quality', 'fish on the omikase platter', 'great', 'decadent'): 4, ('food quality', 'fish', 'great', 'perfect'): 5, ('food quality', 'fish', 'great', 'decadent'): 1}
output quads: ['[A] meal [O] great [S] great [C] food quality', '[A] fish on the omikase platter [O] decadent [S] great [C] food quality', '[A] fish [O] perfect [S] great [C] food quality']
multi_path: ['[O] great [A] meal [C] food quality [S] great [SSEP] [O] decadent [A] fish on the omikase platter [C] food quality [S] great [SSEP] [O] perfect [A] fish [C] food quality [S] great', '[A] meal [O] great [S] great [C] food quality [SSEP] [A] fish on the omikase platter [O] decadent [S] great [C] food quality [SSEP] [A] fish [O] perfect [S] great [C] food quality', '[O] great [A] meal [S] great [C] food quality [SSEP] [O] decadent [A] fish on the omikase platter [S] great [C] food quality [SSEP] [O] perfect [A] fish [S] great [C] food quality', '[O] great [S] great [C] food quality [A] meal [SSEP] [O] decadent [S] great [C] food quality [A] fish [SSEP] [O] perfect [S] great [C] food quality [A] fish', '[A] meal [O] great [C] food quality [S] great [SSEP] [A] fish on the omikase platter [O] decadent [C] food quality [S] great [SSEP] [A] fish [O] perfect [C] food quality [S] great']

task, data: asqp rest16
target: [('ambience general', 'null', 'great', 'in a third world country'), ('drinks quality', 'drinks', 'great', 'suberb')]
output: ['[A] drinks [O] suberb [S] great [C] drinks quality']
sent: ['Drinks', 'are', 'suberb', ',', 'and', 'I', 'feel', 'like', 'I', 'am', 'in', 'a', 'Third', 'World', 'country', 'when', 'I', 'walk', 'in', 'the', 'door', '.']
counter: {('drinks quality', 'drinks', 'great', 'suberb'): 5}
output quads: ['[A] drinks [O] suberb [S] great [C] drinks quality']
multi_path: ['[O] suberb [A] drinks [C] drinks quality [S] great', '[A] drinks [O] suberb [S] great [C] drinks quality', '[O] suberb [A] drinks [S] great [C] drinks quality', '[O] suberb [S] great [C] drinks quality [A] drinks', '[A] drinks [O] suberb [C] drinks quality [S] great']

task, data: asqp rest16
target: [('ambience general', 'place', 'great', 'cool'), ('drinks quality', 'coffee', 'great', 'best'), ('food quality', 'pizza', 'great', 'best')]
output: ['[A] coffee [O] best [S] great [C] drinks quality', '[A] pizza [O] best [S] great [C] food quality', '[A] place [O] cool [S] great [C] ambience general', '[A] place [O] open [S] great [C] ambience general']
sent: ['Open', '&', 'Cool', 'Place', 'with', 'the', 'Best', 'Pizza', 'and', 'Coffee']
counter: {('ambience general', 'place', 'great', 'open'): 5, ('ambience general', 'place', 'great', 'cool'): 5, ('food quality', 'pizza', 'great', 'best'): 5, ('drinks quality', 'coffee', 'great', 'best'): 5}
output quads: ['[A] place [O] open [S] great [C] ambience general', '[A] place [O] cool [S] great [C] ambience general', '[A] pizza [O] best [S] great [C] food quality', '[A] coffee [O] best [S] great [C] drinks quality']
multi_path: ['[O] open [A] place [C] ambience general [S] great [SSEP] [O] cool [A] place [C] ambience general [S] great [SSEP] [O] best [A] pizza [C] food quality [S] great [SSEP] [O] best [A] coffee [C] drinks quality [S] great', '[A] place [O] open [S] great [C] ambience general [SSEP] [A] place [O] cool [S] great [C] ambience general [SSEP] [A] pizza [O] best [S] great [C] food quality [SSEP] [A] coffee [O] best [S] great [C] drinks quality', '[O] open [A] place [S] great [C] ambience general [SSEP] [O] cool [A] place [S] great [C] ambience general [SSEP] [O] best [A] pizza [S] great [C] food quality [SSEP] [O] best [A] coffee [S] great [C] drinks quality', '[O] open [S] great [C] ambience general [A] place [SSEP] [O] cool [S] great [C] ambience general [A] place [SSEP] [O] best [S] great [C] food quality [A] pizza [SSEP] [O] best [S] great [C] drinks quality [A] coffee', '[A] place [O] open [C] ambience general [S] great [SSEP] [A] place [O] cool [C] ambience general [S] great [SSEP] [A] pizza [O] best [C] food quality [S] great [SSEP] [A] coffee [O] best [C] drinks quality [S] great']

task, data: asqp rest16
target: [('restaurant general', 'null', 'great', 'new home')]
output: ['[A] null [O] long lease [S] ok [C] restaurant general']
sent: ['I', 'found', 'a', 'new', 'home', 'and', 'just', 'moved', 'with', 'a', 'long', 'lease', '.']
counter: {('restaurant general', 'null', 'ok', 'long lease'): 3, ('restaurant general', 'null', 'ok', 'long'): 2}
output quads: ['[A] null [O] long lease [S] ok [C] restaurant general']
multi_path: ['[O] long lease [A] it [C] restaurant general [S] ok', '[A] it [O] long lease [S] ok [C] restaurant general', '[O] long [A] it [S] ok [C] restaurant general', '[O] long [S] ok [C] restaurant general [A] it', '[A] it [O] long lease [C] restaurant general [S] ok']

task, data: asqp rest16
target: [('service general', 'null', 'ok', "aren 't the most talkative")]
output: ['[A] null [O] busy [S] bad [C] service general']
sent: ['They', 'aren', "'t", 'the', 'most', 'talkative', ',', 'but', 'everytime', 'I', "'ve", 'been', 'there', 'they', 'have', 'been', 'very', 'busy', ',', 'which', 'probably', 'accounts', 'for', 'the', 'lack', 'of', 'conversation', '.']
counter: {('service general', 'null', 'bad', 'busy'): 5}
output quads: ['[A] null [O] busy [S] bad [C] service general']
multi_path: ['[O] busy [A] it [C] service general [S] bad', '[A] it [O] busy [S] bad [C] service general', '[O] busy [A] it [S] bad [C] service general', '[O] busy [S] bad [C] service general [A] it', '[A] it [O] busy [C] service general [S] bad']

task, data: asqp rest16
target: [('food quality', 'pizza', 'great', 'not exactly the best')]
output: ['[A] pizza [O] good [S] great [C] food quality', '[A] pizza [O] not exactly the best [S] bad [C] food quality']
sent: ['The', 'pizza', 'itself', 'is', 'not', 'exactly', 'the', 'best', 'I', "'ve", 'had', 'EVER', ',', 'but', 'still', 'pretty', 'good', '.']
counter: {('food quality', 'pizza', 'ok', 'not exactly the best'): 2, ('food quality', 'pizza', 'great', 'good'): 5, ('food quality', 'pizza', 'bad', 'not exactly the best'): 3}
output quads: ['[A] pizza [O] good [S] great [C] food quality', '[A] pizza [O] not exactly the best [S] bad [C] food quality']
multi_path: ['[O] not exactly the best [A] pizza [C] food quality [S] ok [SSEP] [O] good [A] pizza [C] food quality [S] great', '[A] pizza [O] not exactly the best [S] bad [C] food quality [SSEP] [A] pizza [O] good [S] great [C] food quality', '[O] not exactly the best [A] pizza [S] bad [C] food quality [SSEP] [O] good [A] pizza [S] great [C] food quality', '[O] not exactly the best [S] bad [C] food quality [A] pizza [SSEP] [O] good [S] great [C] food quality [A] pizza', '[A] pizza [O] not exactly the best [C] food quality [S] ok [SSEP] [A] pizza [O] good [C] food quality [S] great']

task, data: asqp rest16
target: [('service general', 'waiter', 'great', 'good')]
output: ['[A] service [O] good [S] great [C] service general', '[A] service [O] spotty [S] bad [C] service general']
sent: ['We', 'did', 'have', 'the', 'same', 'waiter', 'the', 'second', 'time', ',', 'so', 'maybe', 'the', 'service', 'is', 'spotty', 'and', 'our', 'luck', 'is', 'good', '.']
counter: {('service general', 'service', 'bad', 'spotty'): 3, ('service general', 'service', 'great', 'good'): 5, ('service general', 'waiter', 'bad', 'spotty'): 2}
output quads: ['[A] service [O] spotty [S] bad [C] service general', '[A] service [O] good [S] great [C] service general']
multi_path: ['[O] spotty [A] service [C] service general [S] bad [SSEP] [O] good [A] service [C] service general [S] great', '[A] waiter [O] spotty [S] bad [C] service general [SSEP] [A] service [O] good [S] great [C] service general', '[O] spotty [A] service [S] bad [C] service general [SSEP] [O] good [A] service [S] great [C] service general', '[O] spotty [S] bad [C] service general [A] service [SSEP] [O] good [S] great [C] service general [A] service', '[A] waiter [O] spotty [C] service general [S] bad [SSEP] [A] service [O] good [C] service general [S] great']

task, data: asqp rest16
target: [('food quality', 'cakes', 'great', 'better')]
output: ['[A] cakes [O] better [S] great [C] food quality', '[A] crab traps [O] better [S] great [C] food quality']
sent: ['–', 'Thats', 'a', 'big', 'statement', 'considering', 'I', "'ve", 'been', 'pulling', 'crab', 'traps', 'and', 'making', 'the', 'cakes', 'myself', 'since', 'I', 'was', 'about', 'seven', '-', 'but', 'something', 'about', 'these', 'little', 'devils', 'gets', 'better', 'every', 'time', '.']
counter: {('food quality', 'crab traps', 'great', 'better'): 3, ('food quality', 'cakes', 'great', 'better'): 3, ('food quality', 'null', 'great', 'better'): 2}
output quads: ['[A] crab traps [O] better [S] great [C] food quality', '[A] cakes [O] better [S] great [C] food quality']
multi_path: ['[O] better [A] crab traps [C] food quality [S] great [SSEP] [O] better [A] cakes [C] food quality [S] great', '[A] it [O] better [S] great [C] food quality', '[O] better [A] crab traps [S] great [C] food quality [SSEP] [O] better [A] cakes [S] great [C] food quality', '[O] better [S] great [C] food quality [A] crab traps [SSEP] [O] better [S] great [C] food quality [A] cakes', '[A] it [O] better [C] food quality [S] great']

task, data: asqp rest16
target: [('service general', 'service', 'great', 'quick')]
output: ['[A] null [O] busy [S] great [C] restaurant miscellaneous', '[A] service [O] not bad [S] great [C] service general']
sent: ['it', 'gets', 'really', 'busy', ',', 'so', 'get', 'there', 'on', 'the', 'early', 'side', 'so', 'you', 'can', 'grab', 'a', 'seat', ',', 'if', 'you', 'do', 'have', 'to', 'wait', ',', 'its', 'not', 'bad', 'because', 'the', 'service', 'is', 'quick', '!']
counter: {('restaurant miscellaneous', 'null', 'great', 'busy'): 5, ('service general', 'service', 'great', 'not bad'): 5, ('service general', 'service', 'great', 'quick'): 1}
output quads: ['[A] null [O] busy [S] great [C] restaurant miscellaneous', '[A] service [O] not bad [S] great [C] service general']
multi_path: ['[O] busy [A] it [C] restaurant miscellaneous [S] great [SSEP] [O] not bad [A] service [C] service general [S] great', '[A] it [O] busy [S] great [C] restaurant miscellaneous [SSEP] [A] service [O] not bad [S] great [C] service general [SSEP] [A] service [O] quick [S] great [C] service general', '[O] busy [A] it [S] great [C] restaurant miscellaneous [SSEP] [O] not bad [A] service [S] great [C] service general', '[O] busy [S] great [C] restaurant miscellaneous [A] it [SSEP] [O] not bad [S] great [C] service general [A] service', '[A] it [O] busy [C] restaurant miscellaneous [S] great [SSEP] [A] service [O] not bad [C] service general [S] great']

task, data: asqp rest16
target: [('restaurant prices', 'null', 'ok', 'alright')]
output: ['[A] dinner [O] took us about an hour [S] great [C] food quality', '[A] null [O] alright [S] ok [C] restaurant prices']
sent: ['The', 'dinner', 'only', 'took', 'us', 'about', 'an', 'hour', 'and', 'the', 'prices', 'were', 'alright', 'for', 'the', 'strip', ',', 'almost', '$', '50', '/pp', 'after', 'tax', 'and', 'tip', '(', 'about', 'average', ')', '.']
counter: {('food quality', 'dinner', 'great', 'took us about an hour'): 4, ('restaurant prices', 'null', 'ok', 'alright'): 4, ('service general', 'dinner', 'great', 'took us about an hour'): 1, ('restaurant prices', 'strip', 'ok', 'alright'): 1}
output quads: ['[A] dinner [O] took us about an hour [S] great [C] food quality', '[A] null [O] alright [S] ok [C] restaurant prices']
multi_path: ['[O] took us about an hour [A] dinner [C] food quality [S] great [SSEP] [O] alright [A] it [C] restaurant prices [S] ok', '[A] dinner [O] took us about an hour [S] great [C] food quality [SSEP] [A] it [O] alright [S] ok [C] restaurant prices', '[O] took us about an hour [A] dinner [S] great [C] food quality [SSEP] [O] alright [A] it [S] ok [C] restaurant prices', '[O] took us about an hour [S] great [C] service general [A] dinner [SSEP] [O] alright [S] ok [C] restaurant prices [A] strip', '[A] dinner [O] took us about an hour [C] food quality [S] great [SSEP] [A] it [O] alright [C] restaurant prices [S] ok']

task, data: asqp rest16
target: [('restaurant general', 'mexican spot', 'great', 'great')]
output: ['[A] financial district mexican spot [O] great [S] great [C] restaurant general']
sent: ['–', 'Great', 'financial', 'district', 'mexican', 'spot', '.']
counter: {('restaurant general', 'financial district mexican spot', 'great', 'great'): 4, ('restaurant general', 'spot', 'great', 'great'): 1}
output quads: ['[A] financial district mexican spot [O] great [S] great [C] restaurant general']
multi_path: ['[O] great [A] financial district mexican spot [C] restaurant general [S] great', '[A] financial district mexican spot [O] great [S] great [C] restaurant general', '[O] great [A] financial district mexican spot [S] great [C] restaurant general', '[O] great [S] great [C] restaurant general [A] spot', '[A] financial district mexican spot [O] great [C] restaurant general [S] great']

task, data: asqp rest16
target: [('service general', 'waiters', 'great', 'experienced')]
output: ['[A] waiters [O] experienced [S] great [C] service general', '[A] waiters [O] helpful [S] great [C] service general']
sent: ['The', 'waiters', 'are', 'very', 'experienced', 'and', 'helpful', 'with', 'pairing', 'your', 'drink', 'choice', 'to', 'your', 'food', 'tastes', 'or', 'vice', 'versa', '.']
counter: {('service general', 'waiters', 'great', 'experienced'): 5, ('service general', 'waiters', 'great', 'helpful'): 5}
output quads: ['[A] waiters [O] experienced [S] great [C] service general', '[A] waiters [O] helpful [S] great [C] service general']
multi_path: ['[O] experienced [A] waiters [C] service general [S] great [SSEP] [O] helpful [A] waiters [C] service general [S] great', '[A] waiters [O] experienced [S] great [C] service general [SSEP] [A] waiters [O] helpful [S] great [C] service general', '[O] experienced [A] waiters [S] great [C] service general [SSEP] [O] helpful [A] waiters [S] great [C] service general', '[O] experienced [S] great [C] service general [A] waiters [SSEP] [O] helpful [S] great [C] service general [A] waiters', '[A] waiters [O] experienced [C] service general [S] great [SSEP] [A] waiters [O] helpful [C] service general [S] great']

task, data: asqp rest16
target: [('restaurant general', 'null', 'great', 'perfection')]
output: ['[A] null [O] perfection [S] great [C] food quality']
sent: ['Perfection', '.']
counter: {('food quality', 'null', 'great', 'perfection'): 5}
output quads: ['[A] null [O] perfection [S] great [C] food quality']
multi_path: ['[O] perfection [A] it [C] food quality [S] great', '[A] it [O] perfection [S] great [C] food quality', '[O] perfection [A] it [S] great [C] food quality', '[O] perfection [S] great [C] food quality [A] it', '[A] it [O] perfection [C] food quality [S] great']

task, data: asqp rest16
target: [('drinks quality', 'sake', 'great', 'good'), ('service general', 'server', 'great', 'suggestions')]
output: ['[A] sake suggestions [O] good [S] great [C] drinks quality']
sent: ['Server', 'made', 'several', 'sake', 'suggestions', 'which', 'were', 'very', 'good', '.']
counter: {('drinks quality', 'sake suggestions', 'great', 'good'): 5}
output quads: ['[A] sake suggestions [O] good [S] great [C] drinks quality']
multi_path: ['[O] good [A] sake suggestions [C] drinks quality [S] great', '[A] sake suggestions [O] good [S] great [C] drinks quality', '[O] good [A] sake suggestions [S] great [C] drinks quality', '[O] good [S] great [C] drinks quality [A] sake suggestions', '[A] sake suggestions [O] good [C] drinks quality [S] great']

task, data: asqp rest16
target: [('food style_options', 'pieces', 'bad', 'negative')]
output: ['[A] pieces [O] bigger [S] bad [C] food style_options', '[A] pieces [O] negative [S] bad [C] food style_options']
sent: ['My', 'only', 'negative', 'comment', 'is', 'that', 'I', 'wish', 'the', 'pieces', 'were', 'a', 'little', 'bigger', '.']
counter: {('food style_options', 'pieces', 'bad', 'negative'): 5, ('food style_options', 'pieces', 'bad', 'bigger'): 3}
output quads: ['[A] pieces [O] negative [S] bad [C] food style_options', '[A] pieces [O] bigger [S] bad [C] food style_options']
multi_path: ['[O] negative [A] pieces [C] food style_options [S] bad [SSEP] [O] bigger [A] pieces [C] food style_options [S] bad', '[A] pieces [O] negative [S] bad [C] food style_options', '[O] negative [A] pieces [S] bad [C] food style_options', '[O] negative [S] bad [C] food style_options [A] pieces [SSEP] [O] bigger [S] bad [C] food style_options [A] pieces', '[A] pieces [O] negative [C] food style_options [S] bad [SSEP] [A] pieces [O] bigger [C] food style_options [S] bad']

task, data: asqp rest16
target: [('food quality', 'asparagus', 'great', 'incredible')]
output: ['[A] asparagus [O] incredible [S] great [C] food quality', '[A] asparagus [O] perfectly prepared [S] great [C] food quality']
sent: ['I', 'picked', 'the', 'asparagus', ',', 'which', 'turned', 'out', 'to', 'be', 'incredible', 'and', 'perfectly', 'prepared', '.']
counter: {('food quality', 'asparagus', 'great', 'incredible'): 5, ('food quality', 'asparagus', 'great', 'perfectly prepared'): 5}
output quads: ['[A] asparagus [O] incredible [S] great [C] food quality', '[A] asparagus [O] perfectly prepared [S] great [C] food quality']
multi_path: ['[O] incredible [A] asparagus [C] food quality [S] great [SSEP] [O] perfectly prepared [A] asparagus [C] food quality [S] great', '[A] asparagus [O] incredible [S] great [C] food quality [SSEP] [A] asparagus [O] perfectly prepared [S] great [C] food quality', '[O] incredible [A] asparagus [S] great [C] food quality [SSEP] [O] perfectly prepared [A] asparagus [S] great [C] food quality', '[O] incredible [S] great [C] food quality [A] asparagus [SSEP] [O] perfectly prepared [S] great [C] food quality [A] asparagus', '[A] asparagus [O] incredible [C] food quality [S] great [SSEP] [A] asparagus [O] perfectly prepared [C] food quality [S] great']

task, data: asqp rest16
target: [('service general', 'owners', 'bad', 'worst')]
output: ['[A] owners [O] worst [S] bad [C] restaurant miscellaneous']
sent: ['What', 'may', 'be', 'interesting', 'to', 'most', 'is', 'the', 'worst', 'sevice', '/attitude', 'comes', 'from', 'the', 'owners', 'of', 'this', 'establishment', '.']
counter: {('restaurant miscellaneous', 'owners', 'bad', 'worst'): 5}
output quads: ['[A] owners [O] worst [S] bad [C] restaurant miscellaneous']
multi_path: ['[O] worst [A] owners [C] restaurant miscellaneous [S] bad', '[A] owners [O] worst [S] bad [C] restaurant miscellaneous', '[O] worst [A] owners [S] bad [C] restaurant miscellaneous', '[O] worst [S] bad [C] restaurant miscellaneous [A] owners', '[A] owners [O] worst [C] restaurant miscellaneous [S] bad']

task, data: asqp rest16
target: [('service general', 'service', 'bad', 'could be improved')]
output: ['[A] service [O] improved [S] bad [C] service general']
sent: ['Although', 'the', 'service', 'could', 'be', 'improved', 'considering', 'the', 'money', 'you', 'put', 'in', '.']
counter: {('service general', 'service', 'bad', 'improved'): 5}
output quads: ['[A] service [O] improved [S] bad [C] service general']
multi_path: ['[O] improved [A] service [C] service general [S] bad', '[A] service [O] improved [S] bad [C] service general', '[O] improved [A] service [S] bad [C] service general', '[O] improved [S] bad [C] service general [A] service', '[A] service [O] improved [C] service general [S] bad']

task, data: asqp rest16
target: [('restaurant miscellaneous', 'null', 'great', 'good')]
output: ['[A] null [O] good sign [S] great [C] restaurant miscellaneous']
sent: ['You', 'routinely', 'see', 'Indian', 'families', 'and', 'friends', 'dining', 'there', ',', 'which', 'is', 'always', 'a', 'good', 'sign', '.']
counter: {('restaurant miscellaneous', 'null', 'great', 'good sign'): 5}
output quads: ['[A] null [O] good sign [S] great [C] restaurant miscellaneous']
multi_path: ['[O] good sign [A] it [C] restaurant miscellaneous [S] great', '[A] it [O] good sign [S] great [C] restaurant miscellaneous', '[O] good sign [A] it [S] great [C] restaurant miscellaneous', '[O] good sign [S] great [C] restaurant miscellaneous [A] it', '[A] it [O] good sign [C] restaurant miscellaneous [S] great']

task, data: asqp rest16
target: [('food quality', 'brunch food', 'ok', 'average'), ('service general', 'null', 'bad', 'an hour')]
output: ['[A] brunch food [O] average [S] great [C] food quality']
sent: ['If', 'I', 'want', 'to', 'stand', 'in', 'line', 'on', 'Sunday', 'for', 'an', 'hour', 'to', 'get', 'average', 'brunch', 'food', ',', 'then', 'I', 'would', 'put', 'Murphy', "'s", 'at', 'the', 'top', 'of', 'the', 'list', '.']
counter: {('food quality', 'brunch food', 'great', 'average'): 5}
output quads: ['[A] brunch food [O] average [S] great [C] food quality']
multi_path: ['[O] average [A] brunch food [C] food quality [S] great', '[A] brunch food [O] average [S] great [C] food quality', '[O] average [A] brunch food [S] great [C] food quality', '[O] average [S] great [C] food quality [A] brunch food', '[A] brunch food [O] average [C] food quality [S] great']

task, data: asqp rest16
target: [('food prices', 'food', 'bad', 'should have been lower')]
output: ['[A] null [O] should have been lower [S] bad [C] restaurant prices']
sent: ['For', 'the', 'amount', 'of', 'food', 'we', 'got', 'the', 'prices', 'should', 'have', 'been', 'lower', '.']
counter: {('restaurant prices', 'null', 'bad', 'should have been lower'): 5}
output quads: ['[A] null [O] should have been lower [S] bad [C] restaurant prices']
multi_path: ['[O] should have been lower [A] it [C] restaurant prices [S] bad', '[A] it [O] should have been lower [S] bad [C] restaurant prices', '[O] should have been lower [A] it [S] bad [C] restaurant prices', '[O] should have been lower [S] bad [C] restaurant prices [A] it', '[A] it [O] should have been lower [C] restaurant prices [S] bad']

task, data: asqp rest16
target: [('service general', 'null', 'great', 'good at'), ('service general', 'service', 'great', 'quick')]
output: ['[A] null [O] busy [S] bad [C] service general', '[A] null [O] good [S] great [C] service general', '[A] service [O] quick [S] great [C] service general']
sent: ['Always', 'busy', ',', 'but', 'they', 'are', 'good', 'at', 'seating', 'you', 'promptly', 'and', 'have', 'quick', 'service', '.']
counter: {('service general', 'null', 'bad', 'busy'): 5, ('service general', 'null', 'great', 'good'): 5, ('service general', 'service', 'great', 'quick'): 4}
output quads: ['[A] null [O] busy [S] bad [C] service general', '[A] null [O] good [S] great [C] service general', '[A] service [O] quick [S] great [C] service general']
multi_path: ['[O] busy [A] it [C] service general [S] bad [SSEP] [O] good [A] it [C] service general [S] great [SSEP] [O] quick [A] service [C] service general [S] great', '[A] it [O] busy [S] bad [C] service general [SSEP] [A] it [O] good [S] great [C] service general [SSEP] [A] service [O] quick [S] great [C] service general', '[O] busy [A] it [S] bad [C] service general [SSEP] [O] good [A] it [S] great [C] service general [SSEP] [O] quick [A] service [S] great [C] service general', '[O] busy [S] bad [C] service general [A] it [SSEP] [O] good [S] great [C] service general [A] it', '[A] it [O] busy [C] service general [S] bad [SSEP] [A] it [O] good [C] service general [S] great [SSEP] [A] service [O] quick [C] service general [S] great']

task, data: asqp rest16
target: [('drinks style_options', 'wine list', 'great', 'wonderful')]
output: ['[A] food [O] wonderful [S] great [C] food quality', '[A] wine list [O] wonderful [S] great [C] drinks style_options']
sent: ['The', 'wine', 'list', 'is', 'wonderful', 'and', 'the', 'food', 'reminds', 'me', 'of', 'my', 'recent', 'trip', 'to', 'Italy', '.']
counter: {('drinks style_options', 'wine list', 'great', 'wonderful'): 5, ('food quality', 'food', 'great', 'wonderful'): 5}
output quads: ['[A] wine list [O] wonderful [S] great [C] drinks style_options', '[A] food [O] wonderful [S] great [C] food quality']
multi_path: ['[O] wonderful [A] wine list [C] drinks style_options [S] great [SSEP] [O] wonderful [A] food [C] food quality [S] great', '[A] wine list [O] wonderful [S] great [C] drinks style_options [SSEP] [A] food [O] wonderful [S] great [C] food quality', '[O] wonderful [A] wine list [S] great [C] drinks style_options [SSEP] [O] wonderful [A] food [S] great [C] food quality', '[O] wonderful [S] great [C] drinks style_options [A] wine list [SSEP] [O] wonderful [S] great [C] food quality [A] food', '[A] wine list [O] wonderful [C] drinks style_options [S] great [SSEP] [A] food [O] wonderful [C] food quality [S] great']

task, data: asqp rest16
target: [('drinks quality', 'margaritas', 'great', 'great'), ('food quality', 'food', 'great', 'great'), ('service general', 'waitress', 'bad', 'too busy')]
output: ['[A] food [O] great [S] great [C] food quality', '[A] margaritas [O] great [S] great [C] food quality', '[A] waitress [O] busy being nice [S] bad [C] service general']
sent: ['the', 'food', 'was', 'great', ',', 'the', 'margaritas', 'too', 'but', 'the', 'waitress', 'was', 'too', 'busy', 'being', 'nice', 'to', 'her', 'other', 'larger', 'party', 'than', 'to', 'take', 'better', 'care', 'of', 'my', 'friend', 'and', 'me', '.']
counter: {('food quality', 'food', 'great', 'great'): 5, ('food quality', 'margaritas', 'great', 'great'): 4, ('service general', 'waitress', 'bad', 'busy being nice'): 5, ('drinks quality', 'margaritas', 'great', 'great'): 1}
output quads: ['[A] food [O] great [S] great [C] food quality', '[A] margaritas [O] great [S] great [C] food quality', '[A] waitress [O] busy being nice [S] bad [C] service general']
multi_path: ['[O] great [A] food [C] food quality [S] great [SSEP] [O] great [A] margaritas [C] food quality [S] great [SSEP] [O] busy being nice [A] waitress [C] service general [S] bad', '[A] food [O] great [S] great [C] food quality [SSEP] [A] margaritas [O] great [S] great [C] food quality [SSEP] [A] waitress [O] busy being nice [S] bad [C] service general', '[O] great [A] food [S] great [C] food quality [SSEP] [O] great [A] margaritas [S] great [C] food quality [SSEP] [O] busy being nice [A] waitress [S] bad [C] service general', '[O] great [S] great [C] food quality [A] food [SSEP] [O] great [S] great [C] drinks quality [A] margaritas [SSEP] [O] busy being nice [S] bad [C] service general [A] waitress', '[A] food [O] great [C] food quality [S] great [SSEP] [A] margaritas [O] great [C] food quality [S] great [SSEP] [A] waitress [O] busy being nice [C] service general [S] bad']

task, data: asqp rest16
target: [('restaurant miscellaneous', 'null', 'great', 'the right size')]
output: ['[A] null [O] right [S] great [C] food style_options']
sent: ['It', "'s", 'just', 'the', 'right', 'size', 'for', 'the', 'menu', '.']
counter: {('food style_options', 'null', 'great', 'right'): 4, ('food style_options', 'menu', 'great', 'right'): 1}
output quads: ['[A] null [O] right [S] great [C] food style_options']
multi_path: ['[O] right [A] it [C] food style_options [S] great', '[A] it [O] right [S] great [C] food style_options', '[O] right [A] it [S] great [C] food style_options', '[O] right [S] great [C] food style_options [A] menu', '[A] it [O] right [C] food style_options [S] great']

task, data: asqp rest16
target: [('food quality', 'desert', 'great', 'perfect'), ('food quality', 'dinner', 'great', 'perfect')]
output: ['[A] desert [O] perfect [S] great [C] food quality']
sent: ['The', 'desert', 'was', 'the', 'perfect', 'ending', 'to', 'an', 'almost', 'perfect', 'dinner', '.']
counter: {('food quality', 'desert', 'great', 'perfect'): 5}
output quads: ['[A] desert [O] perfect [S] great [C] food quality']
multi_path: ['[O] perfect [A] desert [C] food quality [S] great', '[A] desert [O] perfect [S] great [C] food quality', '[O] perfect [A] desert [S] great [C] food quality', '[O] perfect [S] great [C] food quality [A] desert', '[A] desert [O] perfect [C] food quality [S] great']

task, data: asqp rest16
target: [('food prices', 'chef special dinner', 'bad', 'dissappointment'), ('food quality', 'chef special dinner', 'bad', 'dissappointment')]
output: ['[A] chef special dinner [O] dissappointment [S] bad [C] food quality']
sent: ['I', 'have', 'been', 'here', ',', 'spent', 'tons', 'of', 'money', 'on', 'a', 'chef', 'special', 'dinner', 'and', 'it', 'was', 'a', 'major', 'dissappointment', '.']
counter: {('food quality', 'chef special dinner', 'bad', 'dissappointment'): 5}
output quads: ['[A] chef special dinner [O] dissappointment [S] bad [C] food quality']
multi_path: ['[O] dissappointment [A] chef special dinner [C] food quality [S] bad', '[A] chef special dinner [O] dissappointment [S] bad [C] food quality', '[O] dissappointment [A] chef special dinner [S] bad [C] food quality', '[O] dissappointment [S] bad [C] food quality [A] chef special dinner', '[A] chef special dinner [O] dissappointment [C] food quality [S] bad']

task, data: asqp rest16
target: [('restaurant general', 'null', 'great', 'new home')]
output: ['[A] home [O] new [S] great [C] restaurant general']
sent: ['I', 'FOUND', 'A', 'NEW', 'HOME', 'ON', 'SECOND', 'AVENUE', '!', '!', '!', '!', '!', '!', '!', '!', '!', '!', '!', '!']
counter: {('restaurant general', 'home', 'great', 'new'): 4, ('restaurant general', 'null', 'great', 'new'): 1}
output quads: ['[A] home [O] new [S] great [C] restaurant general']
multi_path: ['[O] new [A] home [C] restaurant general [S] great', '[A] home [O] new [S] great [C] restaurant general', '[O] new [A] home [S] great [C] restaurant general', '[O] new [S] great [C] restaurant general [A] it', '[A] home [O] new [C] restaurant general [S] great']

task, data: asqp rest16
target: [('restaurant general', 'null', 'great', 'worth'), ('restaurant miscellaneous', 'null', 'bad', 'wait thirty minutes')]
output: ['[A] null [O] worth [S] great [C] restaurant general']
sent: ['–', 'Had', 'to', 'wait', 'thirty', 'minutes', 'to', 'get', 'in', 'the', 'door', 'on', 'a', 'tuesday', 'morning', ',', 'but', 'it', 'was', 'so', 'worth', 'it', '.']
counter: {('restaurant general', 'null', 'great', 'worth'): 5}
output quads: ['[A] null [O] worth [S] great [C] restaurant general']
multi_path: ['[O] worth [A] it [C] restaurant general [S] great', '[A] it [O] worth [S] great [C] restaurant general', '[O] worth [A] it [S] great [C] restaurant general', '[O] worth [S] great [C] restaurant general [A] it', '[A] it [O] worth [C] restaurant general [S] great']

task, data: asqp rest16
target: [('food quality', 'honey walnut prawns', 'bad', 'not good'), ('food quality', 'lemon chicken', 'bad', 'sticky sweet'), ('food style_options', 'honey walnut prawns', 'bad', 'not good')]
output: ['[A] honey walnut prawns [O] not good [S] bad [C] food quality', '[A] lemon chicken [O] sticky sweet donuts [S] bad [C] food quality']
sent: ['The', 'lemon', 'chicken', 'tasted', 'like', 'sticky', 'sweet', 'donuts', 'and', 'the', 'honey', 'walnut', 'prawns', ',', 'the', 'few', 'they', 'actually', 'give', 'you', '...', 'were', 'not', 'good', '.']
counter: {('food quality', 'lemon chicken', 'bad', 'sticky sweet donuts'): 5, ('food quality', 'honey walnut prawns', 'bad', 'not good'): 5}
output quads: ['[A] lemon chicken [O] sticky sweet donuts [S] bad [C] food quality', '[A] honey walnut prawns [O] not good [S] bad [C] food quality']
multi_path: ['[O] sticky sweet donuts [A] lemon chicken [C] food quality [S] bad [SSEP] [O] not good [A] honey walnut prawns [C] food quality [S] bad', '[A] lemon chicken [O] sticky sweet donuts [S] bad [C] food quality [SSEP] [A] honey walnut prawns [O] not good [S] bad [C] food quality', '[O] sticky sweet donuts [A] lemon chicken [S] bad [C] food quality [SSEP] [O] not good [A] honey walnut prawns [S] bad [C] food quality', '[O] sticky sweet donuts [S] bad [C] food quality [A] lemon chicken [SSEP] [O] not good [S] bad [C] food quality [A] honey walnut prawns', '[A] lemon chicken [O] sticky sweet donuts [C] food quality [S] bad [SSEP] [A] honey walnut prawns [O] not good [C] food quality [S] bad']

task, data: asqp rest16
target: [('ambience general', 'artwork', 'great', 'kept up the feeling of being in a mediterrean villa'), ('ambience general', 'music', 'great', 'kept up the feeling of being in a mediterrean villa'), ('ambience general', 'null', 'great', 'romantic')]
output: ['[A] artwork [O] kept up the feeling of a mediterrean villa [S] great [C] ambience general', '[A] music [O] kept up the feeling of a mediterrean villa [S] great [C] ambience general', '[A] null [O] nice [S] great [C] ambience general', '[A] null [O] romantic [S] great [C] ambience general']
sent: ['It', 'was', 'romantic', '-', 'and', 'even', 'nice', 'even', 'with', 'my', 'sister', ',', 'reminded', 'me', 'of', 'Italy', ',', 'and', 'had', 'artwork', 'and', 'music', 'that', 'kept', 'up', 'the', 'feeling', 'of', 'being', 'in', 'a', 'Mediterrean', 'villa', '.']
counter: {('ambience general', 'null', 'great', 'romantic'): 5, ('ambience general', 'null', 'great', 'nice'): 5, ('ambience general', 'artwork', 'great', 'kept up the feeling of a mediterrean villa'): 3, ('ambience general', 'music', 'great', 'kept up the feeling of a mediterrean villa'): 3, ('ambience general', 'artwork', 'great', 'kept up the feeling of being in a mediterrean villa'): 2, ('ambience general', 'music', 'great', 'kept up the feeling of being in a mediterrean villa'): 2}
output quads: ['[A] null [O] romantic [S] great [C] ambience general', '[A] null [O] nice [S] great [C] ambience general', '[A] artwork [O] kept up the feeling of a mediterrean villa [S] great [C] ambience general', '[A] music [O] kept up the feeling of a mediterrean villa [S] great [C] ambience general']
multi_path: ['[O] romantic [A] it [C] ambience general [S] great [SSEP] [O] nice [A] it [C] ambience general [S] great [SSEP] [O] kept up the feeling of a mediterrean villa [A] artwork [C] ambience general [S] great [SSEP] [O] kept up the feeling of a mediterrean villa [A] music [C] ambience general [S] great', '[A] it [O] romantic [S] great [C] ambience general [SSEP] [A] it [O] nice [S] great [C] ambience general [SSEP] [A] artwork [O] kept up the feeling of being in a mediterrean villa [S] great [C] ambience general [SSEP] [A] music [O] kept up the feeling of being in a mediterrean villa [S] great [C] ambience general', '[O] romantic [A] it [S] great [C] ambience general [SSEP] [O] nice [A] it [S] great [C] ambience general [SSEP] [O] kept up the feeling of a mediterrean villa [A] artwork [S] great [C] ambience general [SSEP] [O] kept up the feeling of a mediterrean villa [A] music [S] great [C] ambience general', '[O] romantic [S] great [C] ambience general [A] it [SSEP] [O] nice [S] great [C] ambience general [A] it [SSEP] [O] kept up the feeling of a mediterrean villa [S] great [C] ambience general [A] artwork [SSEP] [O] kept up the feeling of a mediterrean villa [S] great [C] ambience general [A] music', '[A] it [O] romantic [C] ambience general [S] great [SSEP] [A] it [O] nice [C] ambience general [S] great [SSEP] [A] artwork [O] kept up the feeling of being in a mediterrean villa [C] ambience general [S] great [SSEP] [A] music [O] kept up the feeling of being in a mediterrean villa [C] ambience general [S] great']

task, data: asqp rest16
target: [('restaurant general', 'null', 'great', 'return a second time')]
output: ['[A] null [O] return [S] great [C] restaurant general']
sent: ['In', 'fact', ',', 'many', 'want', 'to', 'return', 'a', 'second', 'time', 'during', 'their', 'visit', '.']
counter: {('restaurant general', 'null', 'great', 'return'): 5}
output quads: ['[A] null [O] return [S] great [C] restaurant general']
multi_path: ['[O] return [A] it [C] restaurant general [S] great', '[A] it [O] return [S] great [C] restaurant general', '[O] return [A] it [S] great [C] restaurant general', '[O] return [S] great [C] restaurant general [A] it', '[A] it [O] return [C] restaurant general [S] great']

task, data: asqp rest16
target: [('restaurant general', 'mexican place', 'great', 'best')]
output: ['[A] null [O] best [S] great [C] restaurant general']
sent: ['–', 'Best', 'Mexican', 'place', 'for', 'lunch', 'in', 'the', 'financial', 'district', '.']
counter: {('restaurant general', 'mexican place', 'great', 'best'): 2, ('restaurant general', 'null', 'great', 'best'): 3}
output quads: ['[A] null [O] best [S] great [C] restaurant general']
multi_path: ['[O] best [A] mexican place [C] restaurant general [S] great', '[A] it [O] best [S] great [C] restaurant general', '[O] best [A] mexican place [S] great [C] restaurant general', '[O] best [S] great [C] restaurant general [A] it', '[A] it [O] best [C] restaurant general [S] great']

task, data: asqp rest16
target: [('food quality', 'null', 'great', 'perfect')]
output: ['[A] null [O] perfect [S] great [C] restaurant miscellaneous']
sent: ['Perfect', 'on', 'a', 'cold', 'day', '.']
counter: {('restaurant miscellaneous', 'null', 'great', 'perfect'): 5}
output quads: ['[A] null [O] perfect [S] great [C] restaurant miscellaneous']
multi_path: ['[O] perfect [A] it [C] restaurant miscellaneous [S] great', '[A] it [O] perfect [S] great [C] restaurant miscellaneous', '[O] perfect [A] it [S] great [C] restaurant miscellaneous', '[O] perfect [S] great [C] restaurant miscellaneous [A] it', '[A] it [O] perfect [C] restaurant miscellaneous [S] great']

pred labels count Counter({1: 356, 2: 120, 3: 47, 4: 14, 5: 6, 6: 1})
gold  [O] never served again [A] service [C] service general [S] bad
pred  [A] service [O] waited for 10-15 minutes [S] bad [C] service general [SSEP] [A] beer [O] never served [S] bad [C] drinks quality

gold  [O] peaceful [A] ambiance [C] ambience general [S] great
pred  [A] ambiance [O] peaceful [S] great [C] ambience general [SSEP] [A] ambiance [O] relaxing [S] great [C] ambience general

gold  [O] hidden [A] it [C] restaurant general [S] great
pred  [A] jem [O] hidden [S] great [C] restaurant miscellaneous

gold  [O] impressed [A] it [C] restaurant general [S] great
pred  [A] null [O] impressed [S] great [C] restaurant general

gold  [O] great [A] sushi [C] food quality [S] great [SSEP] [O] better [A] service [C] service general [S] great
pred  [A] sushi [O] great [S] great [C] food quality [SSEP] [A] service [O] better [S] great [C] service general

gold  [O] hit [A] menu items [C] food quality [S] great
pred  [A] menu items [O] hit [S] great [C] food quality

gold  [O] best [A] deck [C] ambience general [S] great [SSEP] [O] bring you a blanket [A] it [C] service general [S] great
pred  [A] deck experience [O] best [S] great [C] ambience general

gold  [O] go back [A] ray's [C] restaurant general [S] great
pred  [A] seattle ray's rates [O] go back [S] great [C] restaurant general

gold  [O] can't go wrong [A] it [C] restaurant general [S] great
pred  [A] null [O] can't go wrong [S] great [C] restaurant general

gold  [O] excellent [A] menu [C] food quality [S] great
pred  [A] menu [O] excellent [S] great [C] food quality

number of gold spans: 799, predicted spans: 829, hit: 487
asqp rest16 {'precision': 58.74547647768396, 'recall': 60.95118898623279, 'f1': 59.82800982800983}
